{
  "exts": {
    "Gemfile": {},
    "_": {},
    "actionscript": {},
    "ada": {},
    "all": {},
    "alpaca": {},
    "angular": {},
    "angular_coffee": {},
    "apache": {},
    "applescript": {},
    "arduino": {},
    "asciidoc": {},
    "asciidoctor": {
      "asciidoc": true
    },
    "asm": {},
    "autoit": {},
    "awk": {},
    "axios": {},
    "base": {},
    "beancount": {},
    "bib": {},
    "bindzone": {},
    "blade": {
      "html": true
    },
    "c": {},
    "chef": {},
    "classnames": {},
    "clojure": {},
    "cmake": {},
    "codeigniter": {},
    "coffee": {},
    "coffee-jasmine": {
      "coffee": true
    },
    "coffee-react": {
      "coffee": true
    },
    "cpp": {
      "c": true
    },
    "crystal": {},
    "cs": {},
    "css": {},
    "cuda": {
      "cpp": true
    },
    "cypress": {},
    "d": {
      "c": true
    },
    "dart": {},
    "dart-flutter": {},
    "diff": {},
    "django": {},
    "dockerfile": {},
    "dosini": {},
    "dotenv": {},
    "dotenv-safe": {},
    "eelixir": {
      "html": true
    },
    "ejs": {},
    "elixir": {},
    "elm": {},
    "erlang": {},
    "eruby": {
      "html": true
    },
    "falcon": {},
    "fortran": {},
    "framer-motion": {},
    "freemarker": {
      "html": true
    },
    "fsharp": {},
    "gatsby": {},
    "gatsby-image": {},
    "gitcommit": {},
    "gnuplot": {},
    "go": {},
    "graphql-request": {},
    "groovy": {},
    "haml": {},
    "handlebars": {},
    "haskell": {},
    "helm": {},
    "help": {},
    "html": {},
    "html_minimal": {},
    "htmldjango": {
      "html": true
    },
    "htmljinja": {
      "html": true,
      "jinja2": true
    },
    "htmltornado": {},
    "idris": {},
    "ignore": {},
    "jade": {},
    "java": {},
    "javascript": {},
    "javascript-angular": {},
    "javascript-bemjson": {},
    "javascript-d3": {},
    "javascript-ember": {},
    "javascript-jasmine": {},
    "javascript-jasmine-arrow": {},
    "javascript-jquery": {},
    "javascript-jsdoc": {},
    "javascript-mocha": {},
    "javascript-node": {},
    "javascript-openui5": {},
    "javascript-react": {},
    "javascript-redux": {},
    "javascript-requirejs": {},
    "javascript.node": {},
    "javascript_react": {},
    "jenkins": {},
    "jest": {},
    "jinja": {
      "html": true
    },
    "jinja2": {},
    "jquery_coffee": {},
    "json": {},
    "jsonc": {},
    "jsp": {},
    "julia": {},
    "kotlin": {},
    "kp19pp": {},
    "laravel": {},
    "ledger": {},
    "lfe": {},
    "lhaskell": {
      "haskell": true
    },
    "liquid": {},
    "lodash": {},
    "lpc": {},
    "ls": {},
    "lua": {},
    "make": {},
    "mako": {},
    "markdown": {},
    "matlab": {},
    "mediawiki": {},
    "mkd": {
      "markdown": true
    },
    "moon": {},
    "mustache": {},
    "neosnippet": {},
    "next": {},
    "nim": {},
    "nuxt": {},
    "nuxt-config": {},
    "nuxt-script": {},
    "objc": {},
    "ocaml": {},
    "octave": {
      "matlab": true
    },
    "openfoam": {},
    "pandoc": {
      "markdown": true
    },
    "perl": {},
    "perl6": {},
    "phoenix": {},
    "php": {},
    "php-laravel": {},
    "php-phpspec": {},
    "php-symfony2": {},
    "plsql": {},
    "po": {},
    "processing": {},
    "progress": {},
    "prolog": {},
    "prop-types": {},
    "proto": {},
    "ps1": {},
    "puppet": {},
    "purescript": {},
    "python": {},
    "r": {},
    "r-snippets": {},
    "racket": {},
    "rails": {},
    "react": {},
    "react-helmet": {},
    "react-intersection-observer": {},
    "react-modal": {},
    "reason": {},
    "redux": {},
    "redux-thunk": {},
    "requirejs_coffee": {},
    "rmarkdown": {},
    "rmd": {},
    "rnoweb": {
      "r": true,
      "tex": true
    },
    "robot": {},
    "rst": {},
    "ruby": {},
    "rust": {},
    "sass": {},
    "scala": {},
    "scheme": {},
    "scss": {
      "css": true
    },
    "sh": {},
    "simplemvcf": {},
    "slim": {},
    "snippets": {},
    "snippets-ts": {},
    "soy": {
      "html": true
    },
    "sql": {},
    "sshconfig": {},
    "styled-components": {},
    "stylus": {},
    "supercollider": {},
    "svelte": {
      "css": true,
      "html": true,
      "javascript": true
    },
    "swift": {},
    "systemverilog": {
      "verilog": true
    },
    "tcl": {},
    "tex": {
      "texmath": true
    },
    "texmath": {},
    "textile": {},
    "toml": {},
    "ts-snippets": {},
    "twig": {},
    "typescript": {
      "javascript": true
    },
    "typescript_react": {
      "javascript_react": true,
      "typescript": true
    },
    "typescriptreact": {
      "typescript": true
    },
    "verilog": {},
    "vhdl": {},
    "vim": {},
    "vimshell": {},
    "vimspec": {
      "vim": true
    },
    "vimwiki": {},
    "vital": {},
    "vue": {
      "css": true,
      "html": true,
      "javascript": true
    },
    "vue-pug": {},
    "vue-script": {},
    "vue-script-router": {},
    "vue-script-vuex": {},
    "vue-template": {},
    "vuex": {},
    "xhtml": {
      "html": true
    },
    "xml": {},
    "xslt": {},
    "yii": {},
    "yii-chtml": {},
    "yup": {},
    "zsh": {
      "sh": true
    }
  },
  "snippets": {
    "000bc61b-d9c6-364c-9f15-3ae2edd26f82": {
      "content": "import { Link } from \"gatsby\"",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-import",
      "matches": {
        "gatsby link import": true
      },
      "source": "javascript/gatsby"
    },
    "0013e720-81df-38dd-a261-d379cc410ccc": {
      "content": "word-wrap: suppress",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "0032d95d-e813-35d7-93c9-2cc735dc5a3d": {
      "content": "impl Drop for $1 {\n\tfn drop(&mut self) {\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Drop trait implementation (destructor)",
      "matches": {
        "drop": true
      },
      "source": "vim-snippets/snippets"
    },
    "003c8a51-0688-3bff-b692-2002cebef507": {
      "content": "font-emphasize-position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      },
      "source": "vim-snippets/snippets"
    },
    "003f7de9-84b1-305e-a147-cd1517cc2eca": {
      "content": "private static immutable ${1:int} ${2:Constant} = ${3:1};\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psi": true
      },
      "source": "vim-snippets/snippets"
    },
    "0041ebf6-adc4-3bfc-929c-d1711d069a19": {
      "content": "console.error(${1:object});",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleerror",
      "matches": {
        "base console error": true
      },
      "source": "javascript/base"
    },
    "00449d47-8bea-313b-accd-2a7204c9b555": {
      "content": "def __repr__(self):\n\t${1:pass}\ndef __str__(self):\n\t${2:pass}\ndef __unicode__(self):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing string representation",
      "matches": {
        "repr": true
      },
      "source": "vim-snippets/snippets"
    },
    "0048758a-73ac-3500-a693-4b58022e4f6a": {
      "content": "where(${1:field}: ${0:value})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wf": true
      },
      "source": "vim-snippets/snippets"
    },
    "004be704-8b7b-30ff-baa9-164d033c4e74": {
      "content": "${1:FIELDNAME} = forms.ComboField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ComboField",
      "matches": {
        "fcombo": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "004be76d-5e81-36c5-9fcf-45f4e665d108": {
      "content": "render text: '${1:text to render}', layout: ${0:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rtlt": true
      },
      "source": "vim-snippets/snippets"
    },
    "004c1195-4057-3e2f-8ece-45a652fa4502": {
      "content": "\\${${1:x}}    \\${${2:y}}=    Get Window Position",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Get Window Position",
      "matches": {
        "gwp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "00591496-5463-39b8-9bea-229b2ed46375": {
      "content": "(let [${1:name} ${2:expr}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "005c2192-70a7-3ec9-a3bf-ca97bc6893c6": {
      "content": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fopen(\"...\", \"...\");",
      "matches": {
        "fopen": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "005e90a0-f088-3f98-bd67-3b17724e7c91": {
      "content": "while True:\n\t${1}\n\tif ${0:condition}:\n\t\tbreak",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      },
      "source": "vim-snippets/snippets"
    },
    "007045bd-0304-37a4-8a7b-e2f879cd6897": {
      "content": "word-break: break-strict",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "0077c6b3-3538-3892-8a67-e17c17a9fa61": {
      "content": "console.log(JSON.stringify(${1:TARGET}, null, 2));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "007923f7-edba-3f33-8c13-e7d536d8f804": {
      "content": "${fn:startsWith(${1:string}, ${0:prefix})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "startswith": true
      },
      "source": "vim-snippets/snippets"
    },
    "007d95ca-a6ad-3e89-97d5-ff425313d880": {
      "content": "form_button(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_button": true
      },
      "source": "vim-snippets/snippets"
    },
    "007f9907-db1c-323d-8ddd-14cbced738e3": {
      "content": "\\\\begin{enumerate}[(i)]\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enumi": true
      },
      "source": "vim-snippets/snippets"
    },
    "008020f5-e81d-3f2b-bc87-5326adb8d5db": {
      "content": "\\${1:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:#optional}",
      "matches": {
        "1#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0092f628-a9ec-3702-b297-2ffb88378f89": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "00944688-6ea2-3168-a047-892d80210bf5": {
      "content": "(cond\n\t[(${1}) ${2}]\n\t[else ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conde": true
      },
      "source": "vim-snippets/snippets"
    },
    "0096baf1-6e74-3261-9a33-3e64f9837aef": {
      "content": "grid-template-areas ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      },
      "source": "vim-snippets/snippets"
    },
    "0098f51a-723a-38c8-9548-92dcc97a3408": {
      "content": "{% ${1:tag_name} %}\n\t$2\n{% end$1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "009fd9d5-957c-3f20-a3cb-97867acd945e": {
      "content": "${1:map}.resource :${0:resource}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapr": true
      },
      "source": "vim-snippets/snippets"
    },
    "00ae8e1b-696d-35ce-bcca-61d169c7160e": {
      "content": "function ${1} return ${2} is\n\t(${3});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "expression function",
      "matches": {
        "fune": true
      },
      "source": "vim-snippets/snippets"
    },
    "00b3ed38-188a-301f-958b-400435e75a2d": {
      "content": "<Directory ${1:/Library/WebServer/}>\n\t${0}\n</Directory>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "00c157a9-2b74-37fd-8a53-11bd34ddb18c": {
      "content": "${1:TARGET} => ${2:#expr},${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true,
        "mcase": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "00c5df20-e695-3502-b725-aae9493a95ae": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "00ddc422-c446-3b11-b270-034f9fade4e9": {
      "content": "list-style-type: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-type": true,
        "lst": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "00df46ec-0e98-3313-b01b-94874ea2a631": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "!important",
      "matches": {
        "!": true
      },
      "source": "vim-snippets/snippets"
    },
    "00e920ab-228d-354a-a2a3-471daab2826d": {
      "content": "${1:FIELDNAME} = models.PositiveIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PositiveIntegerField",
      "matches": {
        "mposint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "00ec3a84-ead6-34c1-a9ee-cc7ef3d85705": {
      "content": "repeat ${1} times}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "rept": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "00f57a47-f143-3b01-b92d-c66a4fe525f0": {
      "content": "{% extends '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% extends ... %}",
      "matches": {
        "ext": true,
        "extends": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "00f83028-eff0-37cd-b47e-a9ca31f8b604": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "vim-snippets/snippets"
    },
    "00fb390f-3957-31ee-8ab5-d731aa18cf0f": {
      "content": "@slot('$1')\n\t${2:${VISUAL}}\n@endslot",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@slot directive",
      "matches": {
        "slot": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0100d796-b6d6-3072-8a88-2a6f22d24d9e": {
      "content": "__PACKAGE__->${0:package_method}()",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgm": true
      },
      "source": "vim-snippets/snippets"
    },
    "0108a724-f300-36c0-9665-fbefbad7506f": {
      "content": "font-style: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0108edd3-83ac-3413-9999-3cead75c82aa": {
      "content": "_.before(${n}, ${func})",
      "doc": "jQuery(element).on('click', _.before(5, addContactToList));\n// => Allows adding up to 4 contacts to the list.\n\nCreates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it's called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-before",
      "matches": {
        "lodash before": true
      },
      "source": "javascript/lodash"
    },
    "010e0ee4-31e8-3aed-9372-6e272dc5d0c2": {
      "content": "fmt.Printf(\"$1 = %#v\\n\", ${1:${VISUAL}})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(#...) hash",
      "matches": {
        "ffh": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "01146198-7c01-3e7b-b5af-4179be8c069e": {
      "content": "const ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts const",
      "matches": {
        "tconst": true
      },
      "source": "vim-snippets/snippets"
    },
    "01239d7f-8bb8-3a2c-99e2-481702dd9142": {
      "content": "pluralize:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0128449e-ae16-34fa-a276-eebf0aed6836": {
      "content": "{\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "{ ... }",
      "matches": {
        "block": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "012b7751-782e-3c3b-9e48-d26421313f2b": {
      "content": "\\\\begin{itemize}\n\t\\\\item ${0}\n\\\\end{itemize}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "itemize environment",
      "matches": {
        "item": true
      },
      "source": "vim-snippets/snippets"
    },
    "012e9383-7990-380d-b44c-499d7ff3bd87": {
      "content": "const_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "const_cast<>()",
      "matches": {
        "const_cast": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "012fd49a-84a3-3fce-a066-8ef1b340ad03": {
      "content": "$(() ->\n\t${0}\n)",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ready": true
      },
      "source": "snippets/coffee"
    },
    "01312ea6-8cf6-3eec-8a85-1135598d85f5": {
      "content": "${1:name} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      },
      "source": "vim-snippets/snippets"
    },
    "0137e959-5f9b-30bb-b602-53abb6b6e6ad": {
      "content": "tear_down(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "tear_down(func)",
      "matches": {
        "tear_down": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "013f6253-17d2-3037-bd98-66d89fe74bcb": {
      "content": "try ${1:e}\nwith ${2:Not_found} -> ${3:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "try",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "014d365c-3f12-3f28-ba00-15be8e7b0538": {
      "content": "attr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw": true
      },
      "source": "vim-snippets/snippets"
    },
    "0158a6b4-95e7-33db-a867-6b635e5f5bcd": {
      "content": "forever begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forev": true
      },
      "source": "vim-snippets/snippets"
    },
    "015af3f0-6d6b-360d-8c87-ed13563d486f": {
      "content": "it { is_expected.not_to ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iiexpn": true
      },
      "source": "vim-snippets/snippets"
    },
    "015d79b9-20f2-33c5-9e90-b543a78d9b2b": {
      "content": "echo CHtml::openTag('${1:tag}', array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhot": true
      },
      "source": "vim-snippets/snippets"
    },
    "016a5f44-dc88-3d90-8415-2852baefb7f5": {
      "content": "package { \"${1:package name}\":\n\tensure\t=> ${0:present},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      },
      "source": "vim-snippets/snippets"
    },
    "016c9158-dcf0-35a1-8a37-1b927f4a45ad": {
      "content": "<form action=\"${1}\" method=\"${2:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      },
      "source": "vim-snippets/snippets"
    },
    "01717de1-0671-3681-b7f0-a367919a8382": {
      "content": "border-left-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "01864939-dd1c-3a27-ac5a-0d3751cc66f0": {
      "content": "tint(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tint": true
      },
      "source": "vim-snippets/snippets"
    },
    "01946928-69f1-3194-828f-67f30ef6c6b3": {
      "content": "clip rect(${1:0} ${2:0} ${3:0} ${0:0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "01a142ac-e03c-31c1-859a-c045b3583c6c": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-shape-required",
      "matches": {
        "prop-types shape required": true,
        "ptshr": true
      },
      "source": "javascript/prop-types"
    },
    "01a33b9a-06bb-3559-a24f-e7eceb4192d5": {
      "content": "align-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "01a3f85c-5aa5-3b95-9492-1aa9acba1f37": {
      "content": "bottom auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "01a6cc62-25af-3cfc-aafe-a62d37730ce6": {
      "content": "----------\n",
      "doc": "Insert horizontal rule",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert horizontal rule",
      "matches": {
        "horizontal rule": true
      },
      "source": "vscode-R/snippets"
    },
    "01a93c97-2b6e-330d-8a60-f51245171a5e": {
      "content": "console.dir(${1:object})",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleDir",
      "matches": {
        "cdi": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "01b9519a-0371-3434-9950-b64fb6a59d6f": {
      "content": "each_slice(${1:2}) do |${2:group}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "easd-": true
      },
      "source": "vim-snippets/snippets"
    },
    "01bc7506-d99c-3521-b5e3-5ad65a79976c": {
      "content": "$scope.$watch '${1:watchExpr}', (newValue, oldValue) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$w": true
      },
      "source": "snippets/coffee"
    },
    "01be6f77-a57f-3b66-8e4e-46760777e2ca": {
      "content": "@info \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      },
      "source": "vim-snippets/snippets"
    },
    "01c81fb5-dc09-3c27-a366-364746fb987a": {
      "content": "local $@;\neval {\n\t${1:# do something risky...}\n};\nif (my $e = $@) {\n\t${0:# handle failure...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eval": true
      },
      "source": "vim-snippets/snippets"
    },
    "01d1457f-b09e-34dc-bba4-fb6d8a1900fa": {
      "content": "_.uniqBy(${array}, ${iteratee})",
      "doc": "_.uniqBy([2.1, 1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]\n\nThis method is like `_.uniq` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nuniqueness is computed. The order of result values is determined by the\norder they occur in the array. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqby",
      "matches": {
        "lodash uniqby": true
      },
      "source": "javascript/lodash"
    },
    "01d5d37e-27db-3337-8e3b-6ae6bef6eb61": {
      "content": "size(${1:200}, ${2:200}${0:, P3D});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "normal",
      "matches": {
        "size": true
      },
      "source": "vim-snippets/snippets"
    },
    "01d67463-b910-3d44-a397-22685b0ca167": {
      "content": "export ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "01db9ae9-f206-3704-b6c4-68adf86c5b20": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/snippets"
    },
    "01ddd2ed-da9d-36eb-9536-c0fa3f7684fe": {
      "content": "console.assert(${1:expression}, ${2:object})",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleAssert",
      "matches": {
        "cas": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "01de6901-7d93-3f90-ba9e-3e68bab90cc1": {
      "content": "function ${1:new_function}(${2:args})\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "New function",
      "matches": {
        "!fun(ction)?!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "01dfbc4a-293f-3226-8b06-afd47006b689": {
      "content": "${1:obj}.insertAfter('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insa": true
      },
      "source": "snippets/coffee"
    },
    "01e22929-e947-31b1-a5c3-fee2a6d5335f": {
      "content": "assert ${1:test}, '${2:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "01e24637-9775-33b7-b9f6-4afd2ba4aed8": {
      "content": "import styled from 'styled-components';",
      "doc": "import styled from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-styled-from-styled-components",
      "matches": {
        "imsc": true,
        "styled-components import styled": true
      },
      "source": "javascript/styled-components"
    },
    "01e830fe-cf04-38b9-b333-358052b41ebf": {
      "content": "return${1};${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "01eb996f-e9ce-3133-b40f-788fd509ed6b": {
      "content": "var tests = []struct {\n\tname string\n\texpected string\n\tgiven string\n}{\n\t{\"${1}\", \"${2}\", \"${3}\",},\n}\nfor _, tt := range tests {\n\ttt := tt\n\tt.Run(tt.name, func(t *testing.T){\n\t\tactual := ${0:${VISUAL}}(tt.given)\n\t\tif actual != tt.expected {\n\t\t\t\tt.Errorf(\"$0(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n\t\t}\n\n\t})\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "020a4485-3bbb-30c8-b18b-ed7d39ed5d4e": {
      "content": "margin-bottom: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "0212d867-bba1-3a24-a861-6013a88ae5a9": {
      "content": "${1:propName}: {\n\ttype: ${2:Number}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vprops": true
      },
      "source": "vim-snippets/snippets"
    },
    "021471ad-dc3f-3362-859d-4041be1758fb": {
      "content": "\\\\item[${1:description}] ${0:item}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "description \\item",
      "matches": {
        "itd": true
      },
      "source": "vim-snippets/snippets"
    },
    "021ff1b5-c123-33a9-811b-8c595b3f0404": {
      "content": "$.Deferred()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "D": true
      },
      "source": "snippets/coffee"
    },
    "0220aaad-0bcc-36b4-b471-990d11bbc814": {
      "content": "_.commit()",
      "doc": "var array = [1, 2];\nvar wrapped = _(array).push(3);\n\nconsole.log(array);\n// => [1, 2]\n\nwrapped = wrapped.commit();\nconsole.log(array);\n// => [1, 2, 3]\n\nwrapped.last();\n// => 3\n\nconsole.log(array);\n// => [1, 2, 3]\n\nExecutes the chain sequence and returns the wrapped result.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-commit",
      "matches": {
        "lodash commit": true
      },
      "source": "javascript/lodash"
    },
    "022450e0-70d1-38e1-9293-387d49afe0bf": {
      "content": "<xsl:template name=\"${1:name}\">${0}\n</xsl:template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "named",
      "matches": {
        "template": true
      },
      "source": "vim-snippets/snippets"
    },
    "022a3c90-176e-3dd5-ba1e-b46a8a5f8c00": {
      "content": "it { should route(:${1:method}, '${0:path}') }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isr": true
      },
      "source": "vim-snippets/snippets"
    },
    "022baa49-04c7-3ebd-b0ec-ebd5a989fd11": {
      "content": "_.flow(${funcs})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow([_.add, square]);\naddSquare(1, 2);\n// => 9\n\nCreates a function that returns the result of invoking the given functions\nwith the `this` binding of the created function, where each successive\ninvocation is supplied the return value of the previous.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flow",
      "matches": {
        "lodash flow": true
      },
      "source": "javascript/lodash"
    },
    "0233e48e-c26b-3f44-bcc1-0ce509d4f346": {
      "content": "border-bottom-right-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "023c1c68-9f69-3745-bee3-b55e02cf4a40": {
      "content": "$.parseXML(${1:data})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsexml": true
      },
      "source": "snippets/coffee"
    },
    "0255f99e-085d-3074-b7cc-4c58415dbdce": {
      "content": "text-justify: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "025bda9a-e075-376c-bf6a-5a3dd6ccddf7": {
      "content": "task ${1} is\n\tentry ${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task",
      "matches": {
        "task": true
      },
      "source": "vim-snippets/snippets"
    },
    "02611b40-1b5c-321e-adc4-411499a2ed29": {
      "content": "when ${1} => ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when",
      "matches": {
        "whe": true
      },
      "source": "vim-snippets/snippets"
    },
    "026a9167-6e06-35d6-a469-b4ea199e160a": {
      "content": "(deftype ${1:Name} [${2:fields}]\n\t${3:Protocol}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defty": true
      },
      "source": "vim-snippets/snippets"
    },
    "026fe97b-9a56-35c4-93fa-7735c89ae7d5": {
      "content": "always @(posedge clk${1})${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "always @(posedge clk)",
      "matches": {
        "alclk": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "02702158-59b6-3aec-8d94-026f18d91edf": {
      "content": "${1:obj}.mouseup (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      },
      "source": "snippets/coffee"
    },
    "027cb800-e508-384c-8889-ede6d43d582f": {
      "content": "${1:fn} := func() {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fn := func() { ... }",
      "matches": {
        "anon": true
      },
      "source": "gosnippets/snippets"
    },
    "027ddac3-ff84-36c2-9ae9-83b84199abb2": {
      "content": "_.toPath(${value})",
      "doc": "_.toPath('a.b.c');\n// => ['a', 'b', 'c']\n\n_.toPath('a[0].b.c');\n// => ['a', '0', 'b', 'c']\n\nConverts `value` to a property path array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-topath",
      "matches": {
        "lodash topath": true
      },
      "source": "javascript/lodash"
    },
    "0280fb3a-7594-3cc7-af1c-585ebaf6b5ec": {
      "content": "border-left-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0286f3df-d8b0-39bf-a78c-e3b4b9c5bdb7": {
      "content": "display table-cell",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "028df500-d246-3fe3-aa38-95aeee39ee45": {
      "content": "<a href=\"${1}\" target=\"_parent\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_parent": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "028ea475-e8cd-3b38-8f49-99125384eb49": {
      "content": "word-spacing: ${1:10px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "word-spacing:  length (word)",
      "matches": {
        "word": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0291fad6-5d6f-37a1-8fde-96e7e3d7cd5b": {
      "content": "\\\\newcommand{\\\\${1:cmd}}[${2:opt}]{${3:realcmd}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\newcommand",
      "matches": {
        "nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "02965278-5711-3ee4-b173-7e95b1dbf539": {
      "content": "require \"${1}\"",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "require",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "02a114db-5969-37d1-bf10-c21e36b5ce2f": {
      "content": "top auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "02a402a6-c9a8-3815-97ce-2d97bfa00ffc": {
      "content": "respond_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "respond_to",
      "matches": {
        "rst": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "02b51530-1d68-330b-99e0-3ad895c91b9b": {
      "content": "{% increment ${0:variable} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "increment": true
      },
      "source": "vim-snippets/snippets"
    },
    "02ba334f-c948-3346-a882-16b148cec68d": {
      "content": "for ${1:i} in ${2} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "for ... in ... loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "02bc154b-1fd2-36e9-ab26-ce3062a8b3cc": {
      "content": "${fn:replace(${1:string}, ${2:substr}, ${0:replace})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace": true
      },
      "source": "vim-snippets/snippets"
    },
    "02c7dfcc-d311-3196-a8b3-4f698569e0e4": {
      "content": "float none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "02cf744f-4606-3d65-a84e-b391f8211b66": {
      "content": "<area shape=\"${1:rect}\" coords=\"${2}\" href=\"${3}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area": true
      },
      "source": "vim-snippets/snippets"
    },
    "02d6b349-1def-3863-b494-0c64edebeb4a": {
      "content": "empty-cells ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "02dd6929-5ff8-3285-a09a-0e5508e1083a": {
      "content": "grid-gap: ${1} ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "02e19deb-bccf-347b-ae08-773b50839ef6": {
      "content": "${1:FIELDNAME} = models.SlugField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SlugField",
      "matches": {
        "mslug": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "02e3dace-8d5b-31ea-a04f-3e852e99b479": {
      "content": "border-style: dot-dash;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "02e7c8db-e403-3260-a0b0-167ed0c3cd07": {
      "content": "# =>",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/snippets"
    },
    "02e97420-aaf9-33b6-9fbe-57a14a26a4da": {
      "content": "import { GraphQLClient } from 'graphql-request';",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-import-client",
      "matches": {
        "graphql-request import client": true
      },
      "source": "javascript/graphql-request"
    },
    "02ee33bc-998f-33fc-b197-79dc630d7195": {
      "content": "@moduletag :${1:module tag}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mtag": true
      },
      "source": "vim-snippets/snippets"
    },
    "02ee774d-8789-3b4f-b554-1f8a02392636": {
      "content": "if (${1:condition}) {\n\t${0}\n} else {\n\t\n}",
      "doc": "if/else statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if-else-statement",
      "matches": {
        "base if else": true
      },
      "source": "javascript/base"
    },
    "02f84f29-6a32-37f0-af90-5588fbdf26bf": {
      "content": "<IfModule ${1:mod_example.c}>\n\t${0:${VISUAL}}\n</IfModule>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmodule": true
      },
      "source": "vim-snippets/snippets"
    },
    "0305682c-0577-3cb3-825d-3245ae564607": {
      "content": "import React, { Component } from 'react'\n\ninterface Props {\n\t\n}\ninterface State {\n\t\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n\tstate = {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React component class with ES7 module system and TypeScript interfaces",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactClassExportComponent",
      "matches": {
        "tsrce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0314dcae-6375-3c68-b04e-3d6132418501": {
      "content": "_.isNil(${value})",
      "doc": "_.isNil(null);\n// => true\n\n_.isNil(void 0);\n// => true\n\n_.isNil(NaN);\n// => false\n\nChecks if `value` is `null` or `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnil",
      "matches": {
        "lodash isnil": true
      },
      "source": "javascript/lodash"
    },
    "031605b5-2c81-344f-ba28-2a93c5139b9f": {
      "content": "<Link to=\"${1:/blog}\" activeClassName={\"${2:myActiveClassName}\"} >Text</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-activeclassname",
      "matches": {
        "gatsby link activeclassname": true
      },
      "source": "javascript/gatsby"
    },
    "033212c1-4314-3b53-8198-80dbc5350805": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      },
      "source": "vscode-react/snippets"
    },
    "0336a616-1317-3185-8025-3752fc369edd": {
      "content": "map",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Map",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "033c60ed-97d2-3222-acee-c71f3f9a5bc7": {
      "content": "_.unionBy(${arrays}, ${iteratee})",
      "doc": "_.unionBy([2.1], [1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]\n\nThis method is like `_.union` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich uniqueness is computed. Result values are chosen from the first\narray in which the value occurs. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unionby",
      "matches": {
        "lodash unionby": true
      },
      "source": "javascript/lodash"
    },
    "03458455-bf9b-36e1-86e2-b04a6bd415d8": {
      "content": "background: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "034ffa02-6ba3-3d91-ac69-3b8b15c3b9ee": {
      "content": "<router-link to=\"$1\">$2</router-link>$0",
      "doc": "<router-link to=''></router-link>. router-link element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerlinkto",
      "matches": {
        "routerlinkto": true,
        "vue routerlinkto": true
      },
      "source": "javascript/vue"
    },
    "035452e5-34d2-3b14-bdcf-caa407b9cc90": {
      "content": "use Carp; # 'verbose';\n# cloak \"die\"\n# warn \"warning\"\n$SIG{'__DIE__'} = sub {\n\trequire Carp; Carp::confess\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug_trace": true
      },
      "source": "vim-snippets/snippets"
    },
    "035c9bda-0e29-3dc9-8cb5-4ae84d6e1847": {
      "content": "margin: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "03677441-6581-308c-9fb7-99ed518c6939": {
      "content": "${1:deferred}.isRejected()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disrej": true
      },
      "source": "snippets/javascript"
    },
    "0368b4be-e056-3bc8-8f5b-8a00fde52e0d": {
      "content": "{% autoescape ${1:#:strategy} %}\n\t${0:TARGET}\n{% autoescape %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% autoescape ... %} ... {% endautoescape %}",
      "matches": {
        "autoescape": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "036c5269-9c3b-3e42-948e-3e00b6a15028": {
      "content": "background-clip: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "036f8566-131a-39a4-8ef1-10d7ad5699de": {
      "content": "background-clip: padding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0371ece1-10fc-3940-8aa0-379caaae4b59": {
      "content": "${1:obj}.not('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not": true
      },
      "source": "snippets/coffee"
    },
    "03731183-3182-387c-b03f-2b50275ab1d9": {
      "content": "[ngClass]=\"{${1:cssClass}: ${2:expression}}\"",
      "doc": "Angular ngClass",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngClass",
      "matches": {
        "a-ngClass": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "0379f791-e0e3-385f-8eaa-61a1cbc710c6": {
      "content": "${1:g}sub(${2:/pattern/}) { |${3:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "037dd5fc-3231-368e-aedc-8ef2133c4993": {
      "content": "assert_redirected_to ${10:${2:parent}_${3:child}_path(${4:@}${5:$2})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (nested path plural)",
      "matches": {
        "artnpp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0387968e-efb1-3ec5-8721-2ad39d758990": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-tag",
      "matches": {
        "svelte script": true,
        "svscript": true
      },
      "source": "javascript/svelte"
    },
    "0389619e-b9a3-38ea-9ec9-05e871524ff2": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:Exception} $e) {\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "try { ... } catch (Exception $e) { ... }",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "03995878-5f4e-37dd-98d9-6719b0fe4b69": {
      "content": "import Modal from 'react-modal'",
      "doc": "import react-modal",
      "filetype": "react-modal",
      "grammar": "lsp",
      "label": "react-modal-import",
      "matches": {
        "imrm": true,
        "react-modal import": true
      },
      "source": "javascript/react-modal"
    },
    "03a2657d-75c5-37c3-9b21-be5058ae0e91": {
      "content": "<!DOCTYPE HTML>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doct5": true
      },
      "source": "vim-snippets/snippets"
    },
    "03bc7a40-5a79-3161-ab33-0026c9a7bf5d": {
      "content": "@before-enter=\"$1\"$0",
      "doc": "@before-enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-enter",
      "matches": {
        "beforeenterevent": true,
        "vue before-enter": true
      },
      "source": "javascript/vue"
    },
    "03be16f0-dd83-3fbb-9e62-f52524a247bf": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Z index (2D)",
      "matches": {
        "ixz": true
      },
      "source": "vim-snippets/snippets"
    },
    "03cdf812-e8ac-3165-8571-cb1a114cb622": {
      "content": "when {\n\ttag '${1:tag}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whentag": true
      },
      "source": "vim-snippets/snippets"
    },
    "03cf0424-cff8-3ea3-ad95-4cafb703ad41": {
      "content": "#' @param ${1:name}::${2:Type} ${0:Description}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function parameter documentation",
      "matches": {
        "par": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "03d45c26-e17b-3891-9af4-604493cad346": {
      "content": "__asm__ __volatile__(\n\"${0}\\n\\t\"\n:\n:\n);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      },
      "source": "vim-snippets/snippets"
    },
    "03e47044-b694-35bf-964f-1d568bfa4306": {
      "content": "align-items first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "03f5ff53-7ced-3391-acfc-ee187d0e7b01": {
      "content": "while {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "03f767b5-ca8e-3cb4-b6fa-207ae3dfdc39": {
      "content": "assert(${1:var} = assigns(:$1), \"Cannot find @$1\")\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert(var = assigns(:var))",
      "matches": {
        "asg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0408078e-880b-3f66-a46a-ae0e3d35cf17": {
      "content": "getter? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r?": true
      },
      "source": "vim-snippets/snippets"
    },
    "040b8383-c600-3c26-b798-644a9059efe4": {
      "content": "void opAssign($1 rhs) ${2:@safe pure nothrow}\n{\n\t$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opAssign (op=)",
      "matches": {
        "op=": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0421ba90-e629-34bd-9bca-7bc3e354947b": {
      "content": "${1:auto} ${2:func}(${3:params}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "04231ea7-23c8-301b-8cb3-ced278bbf5a8": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:e.printStackTrace();}\n} finally {\n    ${4}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "04236d53-691d-3fff-b062-99bd191d0af2": {
      "content": "text-wrap: unrestricted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "042a08f4-e8a5-377b-8657-60eeb7a9da0f": {
      "content": "leave-to-class=\"$1\"$0",
      "doc": "leave-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-to-class",
      "matches": {
        "leavetoclass": true,
        "vue leave-to-class": true
      },
      "source": "javascript/vue"
    },
    "042b7cc4-96a6-3afb-97c2-2deec3b6b30f": {
      "content": "with ${1:item} <- ${2:items} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wi": true
      },
      "source": "vim-snippets/snippets"
    },
    "0432316f-f7d3-358c-b4fe-4405210a0133": {
      "content": "${1:obj}.unbind('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbind": true
      },
      "source": "snippets/coffee"
    },
    "0436cd2e-f9e1-3468-b39d-ef0e50de7de7": {
      "content": "function(d, i) { ${1} }",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "043ba183-9029-3b9b-bc4e-b1d83a478dd3": {
      "content": "font-emphasize-position: before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "04470d24-4a1e-3dcc-94c2-e9104b9c7199": {
      "content": "$_POST['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "post",
      "matches": {
        "post": true
      },
      "source": "vim-snippets/snippets"
    },
    "04476f1c-813f-3b11-af0f-391a18c1cae7": {
      "content": "typedef enum {${2:TARGET}} ${1:name};",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0449b4c0-cac1-3dc1-b214-ec58fdac357a": {
      "content": "defmacro ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defma": true
      },
      "source": "vim-snippets/snippets"
    },
    "044bc941-a7be-36f8-a269-2d391b50f70f": {
      "content": "_.get(${object}, ${path}, ${defaultValue})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.get(object, 'a[0].b.c');\n// => 3\n\n_.get(object, ['a', '0', 'b', 'c']);\n// => 3\n\n_.get(object, 'a.b.c', 'default');\n// => 'default'\n\nGets the value at `path` of `object`. If the resolved value is\n`undefined`, the `defaultValue` is returned in its place.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-get",
      "matches": {
        "lodash get": true
      },
      "source": "javascript/lodash"
    },
    "044cbc93-fff8-394b-9787-c4b8172c1adc": {
      "content": "${1:property_name}: observer('${3:argument}', function() {\n\t${0://body...}\n}),",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "property_name: observer('...', function() {...}),",
      "matches": {
        "proo": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0450e5d4-fe3a-3152-9f7e-9b4ef839e767": {
      "content": "match ${1} {\n\t${2} => ${3}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "match pattern",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "0458c366-b059-3b7f-b92d-5cbda6ca1b3f": {
      "content": "object.constantCase()",
      "doc": "object.constantCase(): Schema\n\nTransforms all object keys to CONSTANT_CASE.Extending Schema TypesThe simplest way to extend an existing type is just to cache a configured schema and use that through your application.let yup = require(\"yup\");\nlet parseFormats = [\"MMM dd, yyy\"];\nlet invalidDate = new Date(\"\");\n\nmodule.exports = yup.date().transform(function(value, originalValue) {\n  if (this.isType(value)) return value;\n  // the default coercion transform failed so lets try it with Moment instead\n  value = Moment(originalValue, parseFormats);\n  return value.isValid() ? value.toDate() : invalidDate;\n});\nAlternatively, each schema is a normal JavaScript constructor function that you can mutate or delegate to\nusing the normal patterns. Generally you should not inherit from mixed unless you know what you are doing,\nbetter to think of it as an abstract class. The other types are fair game though.You should keep in mind some basic guidelines when extending schemas\nnever mutate an existing schema, always clone() and then mutate the new one before returning it.\nBuilt-in methods like test and transform take care of this for you, so you can safely use them (see below) without worrying\ntransforms should never mutate the value passed in, and should return an invalid object when one exists\n(NaN, InvalidDate, etc) instead of null for bad values.\nby the time validations run the value is guaranteed to be the correct type, however if nullable is\nset then null is a valid value for that type, so don't assume that a property or method exists on the value.\nAdjust core Typeslet invalidDate = new Date(\"\");\n\nfunction parseDateFromFormats(formats, parseStrict) {\n  return this.transform(function(value, originalValue) {\n    if (this.isType(value)) return value;\n\n    value = Moment(originalValue, formats, parseStrict);\n\n    return value.isValid() ? value.toDate() : invalidDate;\n  });\n}\n\n// `addMethod` doesn't do anything special it's\n// equivalent to: yup.date.prototype.format = parseDateFromFormats\nyup.addMethod(yup.date, \"format\", parseDateFromFormats);\nCreating new TypesYup schema use the common constructor pattern for modeling inheritance. You can use any\nutility or pattern that works with that pattern. The below demonstrates using the es6 class\nsyntax since its less verbose, but you absolutely aren't required to use it.let DateSchema = yup.date;\nlet invalidDate = new Date(\"\"); // our failed to coerce value\n\nclass MomentDateSchemaType extends DateSchema {\n  constructor() {\n    super();\n    this._validFormats = [];\n\n    this.withMutation(() => {\n      this.transform(function(value, originalvalue) {\n        if (this.isType(value))\n          // we have a valid value\n          return value;\n        return Moment(originalValue, this._validFormats, true);\n      });\n    });\n  }\n\n  _typeCheck(value) {\n    return (\n      super._typeCheck(value) || (moment.isMoment(value) && value.isValid())\n    );\n  }\n\n  format(formats) {\n    if (!formats) throw new Error(\"must enter a valid format\");\n    let next = this.clone();\n    next._validFormats = {}.concat(formats);\n  }\n}\n\nlet schema = new MomentDateSchemaType();\n\nschema.format(\"YYYY-MM-DD\").cast(\"It is 2012-05-25\"); // => Fri May 25 2012 00:00:00 GMT-0400 (Eastern Daylight Time)\nTypeScript SupportIf you are using TypeScript installing the Yup typings is recommendednpm install -D @types/yup\nYou can now infer a TypeScript type alias using the exported InferType. Given the following Yup schema:import * as yup from 'yup';\n\nconst personSchema = yup.object({\n  firstName: yup\n    .string(),\n  nickName: yup\n    .string()\n    .nullable(),\n  gender: yup\n    .mixed<'male' | 'female' | 'other'>()\n    .oneOf(['male', 'female', 'other']),\n  email: yup\n    .string()\n    .nullable()\n    .notRequired()\n    .email(),\n  birthDate: yup\n    .date()\n    .nullable()\n    .notRequired()\n    .min(new Date(1900, 0, 1)),\n});\nYou can derive the TypeScript type as follows:type Person = yup.InferType<typeof personSchema>;\nWhich is equivalent to the following TypeScript type alias:type Person = {\n  firstName: string;\n  nickName: string | null;\n  gender: \"male\" | \"female\" | \"other\";\n  email?: string | null | undefined;\n  birthDate?: Date | null | undefined;\n}\nMaking the following objects valid both for TypeScript and Yup validation:const minimalPerson: Person = {\n    firstName: \"Matt\",\n    nickName: null,\n    gender: \"male\"\n};\n\nconst fullPerson: Person = {\n    firstName: \"Matt\",\n    nickName: \"The Hammer\",\n    gender: \"male\",\n    email: \"matt@the-hammer.com\",\n    birthDate: new Date(1976, 9, 5)\n};\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-constant-case",
      "matches": {
        "yup object constantcase": true
      },
      "source": "javascript/yup"
    },
    "045ac484-8c39-34b1-9cc5-1d1748770c63": {
      "content": "random(${1:value1}${2:, }${0:value2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "random": true
      },
      "source": "vim-snippets/snippets"
    },
    "0460b98a-b578-35e1-bed7-01bee584931a": {
      "content": "Else\n\t${0}",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "0472b8b1-3bf8-36eb-8f00-a1a53e18f431": {
      "content": "text-emphasis: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "047612b1-331c-3dc0-8764-c086420abcda": {
      "content": "defprotocol ${1:name}, [${0:function}]",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defpr": true
      },
      "source": "vim-snippets/snippets"
    },
    "047ce684-e1cd-3c2d-8c54-6771708ade89": {
      "content": "internal bool ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&|": true
      },
      "source": "vim-snippets/snippets"
    },
    "047eca99-cdd3-3fb7-b32b-785bb399d9d4": {
      "content": "go ${1:funcName}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go someFunc(...)",
      "matches": {
        "go": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "048c2682-1a45-3804-be25-8e08002b6401": {
      "content": "PropTypes.symbol.isRequired,",
      "doc": "Symbol prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeSymbolRequired",
      "matches": {
        "ptsmr": true
      },
      "source": "vscode-react/snippets"
    },
    "048efcf0-7eb0-394d-9975-081d2d6ec06a": {
      "content": "isNumeric!${1:N}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      },
      "source": "vim-snippets/snippets"
    },
    "049526d2-604c-3272-8cbe-100c90a56aa4": {
      "content": "input${1:#: nbit} i_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "input [] i_,",
      "matches": {
        "I": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "04a3dc26-6309-3dae-a6e1-5dcbd1fc5b4d": {
      "content": "text-align-last: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "04a47e09-b19a-3668-b7de-cd28f0862585": {
      "content": "set border",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set border",
      "matches": {
        "border": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "04ae4f81-ba9e-31bd-85a7-f8eeb6eaef94": {
      "content": "unsigned int ${1:object}Count = [${2:array} count];\nfor (unsigned int index = 0; index < $1Count; index++) {\n\t${3:id} $1 = [$2 $1AtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      },
      "source": "vim-snippets/snippets"
    },
    "04b071d3-342f-3aad-a683-1ae062efd103": {
      "content": "dbl",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Double",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "04c5e00c-8ae0-37d7-9f87-3839154888b4": {
      "content": "left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      },
      "source": "vim-snippets/snippets"
    },
    "04c62faf-dd30-306d-b9a9-d12038a6a117": {
      "content": "*${1:${TM_SELECTED_TEXT}}*$0",
      "doc": "Insert italic text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert italic text",
      "matches": {
        "italic": true
      },
      "source": "vscode-R/snippets"
    },
    "04d1c5ae-a03f-3867-84c4-15f910bb020e": {
      "content": "ellipse(${1:x}, ${2:y}, ${3:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ellipse": true
      },
      "source": "vim-snippets/snippets"
    },
    "04d331a1-509f-3192-b776-7940f2139294": {
      "content": "align-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      },
      "source": "vim-snippets/snippets"
    },
    "04d4df24-619e-3ea4-83a6-58e5ef93d1b7": {
      "content": "border-top-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      },
      "source": "vim-snippets/snippets"
    },
    "04dba517-2917-3e7e-9837-fa7d4457d2f8": {
      "content": "case ${1:#:expression} of\n\t${2:#:value} ->\n\t\t${3:TARGET}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "case ... of",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "04e9165d-61b6-33bc-9c20-6b8c419b5edc": {
      "content": "font-effect: outline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "04f2b2b7-a7a9-3cb5-85d9-ce0e1c4da717": {
      "content": "grid-auto-flow: ${1:row};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      },
      "source": "vim-snippets/snippets"
    },
    "04f67fd4-d132-3c8b-adfc-1a0f15001d96": {
      "content": "for [${1},${2}] in items(${3})\n\t${0}\n\tunlet $1 $2\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for [key, value] in loop",
      "matches": {
        "forkv": true
      },
      "source": "vim-snippets/snippets"
    },
    "04f8d1cf-cc3e-3787-947c-3bcd17ede6ad": {
      "content": "import React from 'react'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-export-component",
      "matches": {
        "rafce": true,
        "react component arrow function export": true
      },
      "source": "javascript/react"
    },
    "0507672c-2e7b-3667-80a1-1aa059210353": {
      "content": "font-family ${0:Helvetica,Arial},sans-serif",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      },
      "source": "vim-snippets/snippets"
    },
    "050ca06b-7ca3-30e8-a9f8-7d0524ea063d": {
      "content": "beforeEach(() => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "beforeEach(() => { ... })",
      "matches": {
        "befe": true
      },
      "source": "vim-snippets/snippets"
    },
    "05180524-c09c-357d-8d54-cd8cbfb44728": {
      "content": "@import '${0}'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      },
      "source": "vim-snippets/snippets"
    },
    "052f7f3c-6907-32e8-afc3-be5720d90ac0": {
      "content": "do {\n  ${0}\n} while (${0:/* condition */});",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      },
      "source": "vim-snippets/snippets"
    },
    "053ae275-852e-3e8f-bf7f-60b1a2986f0b": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "054eb9c2-a368-38f9-a7cb-708f560ec404": {
      "content": "require IEx; IEx.pry\n${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      },
      "source": "vim-snippets/snippets"
    },
    "05528c35-0f0d-320a-bc7d-18739925b1df": {
      "content": "font-effect: emboss;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "055b0451-4b19-320b-b9fd-e5f6c8df8949": {
      "content": "redirect_to controller:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :controller",
      "matches": {
        "rec": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0563f144-03f0-3eb6-a4ca-0849be2e8e9a": {
      "content": "$this->db->select(\"${1:id, ...}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-select": true
      },
      "source": "vim-snippets/snippets"
    },
    "0564a125-3e0f-39c9-830c-6e6351a07916": {
      "content": "function ${1:name}(${2:args})\n  return ${3:type}\nas\n\tl_res\t$3;\nbegin\n\t${0:-- body};\n\treturn l_res;\nend $1;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0565f535-2682-3322-850f-c0dca830380e": {
      "content": "display: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "05689bbd-1729-3b2d-a618-ed93f14fa568": {
      "content": "const $1 = useSelector(state => state.$1);",
      "doc": "Redux useSelector() hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-useselector",
      "matches": {
        "redux useselector": true,
        "uss": true
      },
      "source": "javascript/redux"
    },
    "057a7250-25fd-3f28-9067-fc64e337d941": {
      "content": "outline-color: invert;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "057c9f84-dd0a-33e3-a1bb-3f5321a5c2a1": {
      "content": "${1:obj}.promise(${2:'fx'}, ${3:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "promise": true
      },
      "source": "snippets/coffee"
    },
    "0588d95a-137e-3495-96ea-6f4548fae522": {
      "content": "_.isUndefined(${value})",
      "doc": "_.isUndefined(void 0);\n// => true\n\n_.isUndefined(null);\n// => false\n\nChecks if `value` is `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isundefined",
      "matches": {
        "lodash isundefined": true
      },
      "source": "javascript/lodash"
    },
    "05927c20-ada0-3cf4-916a-6f404de8ed78": {
      "content": "background-color: rgb(${1:255},${2:255},${3:255});$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-rgb (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "05961ec1-43ba-3e8f-897b-6e9e7f8d5251": {
      "content": "type ${1:Interface} interface {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Interface declaration",
      "matches": {
        "interface": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "059ce508-eb6c-30a6-993c-06ab46f96700": {
      "content": "continue;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "05a4b146-09ab-3083-ad72-6c08bfe126dd": {
      "content": "<xsl:template match=\"${1:*}\">${0}\n</xsl:template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      },
      "source": "vim-snippets/snippets"
    },
    "05ae0a4d-8297-3169-a8e4-775593a715fb": {
      "content": "t.rename :${1:old_column_name}, :${2:new_column_name}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tre": true
      },
      "source": "vim-snippets/snippets"
    },
    "05af1de5-7890-3732-bfab-d445b68ea416": {
      "content": "_.dropWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.dropWhile(users, function(o) { return !o.active; });\n// => objects for ['pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.dropWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropWhile(users, ['active', false]);\n// => objects for ['pebbles']\n\n// The `_.property` iteratee shorthand.\n_.dropWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']\n\nCreates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-dropwhile",
      "matches": {
        "lodash dropwhile": true
      },
      "source": "javascript/lodash"
    },
    "05b5a1f8-def8-3950-8115-fd092cac8692": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "05b6105d-bfcb-3eef-bea5-39044bb645ed": {
      "content": "enforce(${1:/*condition*/},\n\tnew $2Exception(${3:/*args*/}));",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "enforce (enf)",
      "matches": {
        "enf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "05bcece1-73da-3a67-92bc-b65f09a8b6af": {
      "content": "int opApply(int delegate(ref ${1:/*iterated type/s*/}) dg)\n{\n\tint result = 0;\n\t${2:/*loop*/}\n\t{\n\t\tresult = dg(${3:/*arg/s*/});\n\t\tif(result){break;}\n\t}\n\treturn result;\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opApply (opApply)",
      "matches": {
        "opApply": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "05bf79db-61b6-3b69-94c1-0ab28d7a86a9": {
      "content": "<paramref name=\"${1:#:name}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<paramref name=\"\"/>",
      "matches": {
        "paramref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "05c20c41-4875-3b88-8d85-bf55655b8957": {
      "content": "assert ${1:#:test} : ${2:#:Failure message};${3}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "05d160a6-4db0-353d-9d0d-98e1a681cfa8": {
      "content": "errors.Wrap(${1:err}, \"${2:message}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "errors.Wrap",
      "matches": {
        "ew": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "05d414a6-5625-3fb8-b65d-ca7e30ee9255": {
      "content": "| slice: ${1:at}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice_single": true
      },
      "source": "vim-snippets/snippets"
    },
    "05d60a99-08fd-34a2-aaaa-58197da098ec": {
      "content": "\\begin{eqnarray*}\n\t${1:${VISUAL}} & ${2:${VISUAL}} & ${0:${VISUAL}}\n\\end{eqnarray*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation array without a number",
      "matches": {
        "eqann": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "05e0b698-6676-3ca0-8181-d50486c3bc95": {
      "content": "_.dropRightWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.dropRightWhile(users, function(o) { return !o.active; });\n// => objects for ['barney']\n\n// The `_.matches` iteratee shorthand.\n_.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['barney', 'fred']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropRightWhile(users, ['active', false]);\n// => objects for ['barney']\n\n// The `_.property` iteratee shorthand.\n_.dropRightWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']\n\nCreates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-droprightwhile",
      "matches": {
        "lodash droprightwhile": true
      },
      "source": "javascript/lodash"
    },
    "05e3143b-4feb-3839-af5d-a58756e27273": {
      "content": "case ${1}\nwhen ${2}\n  ${3}\nelse\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "case ... when ... else ... end",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "05e316b4-17a3-3e62-9323-68b18156a719": {
      "content": "assert_redirected_to ${1:action}: '${2:index}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "art": true
      },
      "source": "vim-snippets/snippets"
    },
    "05e4d5e4-bea7-3eb4-9fad-035ec1fda99a": {
      "content": "Object.assign({}, ${1:original}, ${2:source})",
      "doc": "Object.assign copy (shallow clone)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "object-assign-copy-shallow-clone-",
      "matches": {
        "base object assign copy": true
      },
      "source": "javascript/base"
    },
    "05ed0dad-1e42-331e-a5e5-cf5de86c574c": {
      "content": "import processing.opengl.*;\nimport javax.media.opengl.*;\nPGraphicsOpenGL pgl;\nGL gl;\nvoid setup(){\n\tsize( ${1:300}, ${2:300}, OPENGL );\n\tcolorMode( RGB, 1.0 );\n\thint( ENABLE_OPENGL_4X_SMOOTH );\n\tpgl = (PGraphicsOpenGL) g;\n\tgl = pgl.gl;\n\tgl.setSwapInterval(1);\n\tinitGL();\n\t${3}\n}\nvoid draw(){\n\tpgl.beginGL();\n\t\t${4}\n\tpgl.endGL();\n\tgetOpenGLErrors();\n}\nvoid initGL(){\n\t${0}\n}\nvoid getOpenGLErrors(){\n\tint error = gl.glGetError();\n\tswitch (error){\n\t\tcase 1280 :\n\t\t\tprintln(\"GL_INVALID_ENUM - An invalid enumerant was passed to an OpenGL command.\");\n\t\tbreak;\n\t\tcase 1282 :\n\t\t\tprintln(\"GL_INVALID_OPERATION - An OpenGL command was issued that was invalid or inappropriate for the current state.\");\n\t\tbreak;\n\t\tcase 1281 :\n\t\t\tprintln(\"GL_INVALID_VALUE - A value was passed to OpenGL that was outside the allowed range.\");\n\t\tbreak;\n\t\tcase 1285 :\n\t\t\tprintln(\"GL_OUT_OF_MEMORY - OpenGL was unable to allocate enough memory to process a command.\");\n\t\tbreak;\n\t\tcase 1283 :\n\t\t\tprintln(\"GL_STACK_OVERFLOW - A command caused an OpenGL stack to overflow.\");\n\t\tbreak;\n\t\tcase 1284 :\n\t\t\tprintln(\"GL_STACK_UNDERFLOW - A command caused an OpenGL stack to underflow.\");\n\t\tbreak;\n\t\tcase 32817 :\n\t\t\tprintln(\"GL_TABLE_TOO_LARGE\");\n\t\tbreak;\n\t}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opengl": true
      },
      "source": "vim-snippets/snippets"
    },
    "05ed3d8a-6674-3a9a-a621-d9ef2168c507": {
      "content": "height auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "05f6f945-15d9-3770-8f79-fa1f1c0a9d49": {
      "content": "font-emphasize-position before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "05f7b5ac-f8cd-334c-87c4-0348eb14182e": {
      "content": "t.boolean :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcb": true
      },
      "source": "vim-snippets/snippets"
    },
    "05ff0f15-c977-326f-8b43-937e82a15629": {
      "content": "Console.ReadLine();",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Console.ReadLine",
      "matches": {
        "cr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "06011b27-3af2-3eb2-bf9f-d93ab60e72f5": {
      "content": "<table class=\"${1}\">\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table.": true
      },
      "source": "vim-snippets/snippets"
    },
    "0603c0b9-ed83-3ec7-8997-c72a1c43e918": {
      "content": "switch (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "06046801-3570-3370-84ab-525fe477fc57": {
      "content": "background-break: each-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "06052d81-adf5-379f-bd97-5c2cfbb3624b": {
      "content": "border-bottom-width: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-width: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0608d8a2-5843-31cb-8333-2c020611df22": {
      "content": "#!/usr/bin/env node",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "snippets/javascript"
    },
    "060a0a80-3868-3212-b36d-56893ebd3aff": {
      "content": "Array${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      },
      "source": "vim-snippets/snippets"
    },
    "060f3777-12f1-36cd-9cff-72d5c72bf2f9": {
      "content": "const (\n\t${1:NAME} ${2:Type} = iota\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... = iota )",
      "matches": {
        "iota": true
      },
      "source": "gosnippets/snippets"
    },
    "0618ebd7-c490-33ac-965b-009b902c8476": {
      "content": "?assertMatch(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asmat": true
      },
      "source": "vim-snippets/snippets"
    },
    "061a6c52-4603-30e9-b985-5ad3b3f5128e": {
      "content": "{% else %}\n\t${0:TARGET}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% else %} ...",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "06277324-c563-3fb2-b94b-ba8e9756c14a": {
      "content": "text-justify: inter-cluster;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      },
      "source": "vim-snippets/snippets"
    },
    "0628a4d0-7614-34d0-adbb-e368ad48da7e": {
      "content": "<bdo dir=\"${1}\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo": true
      },
      "source": "vim-snippets/snippets"
    },
    "0631f403-7719-379d-ba2b-336c69edb0ff": {
      "content": "_.repeat(${string}, ${n})",
      "doc": "_.repeat('*', 3);\n// => '***'\n\n_.repeat('abc', 2);\n// => 'abcabc'\n\n_.repeat('abc', 0);\n// => ''\n\nRepeats the given string `n` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-repeat",
      "matches": {
        "lodash repeat": true
      },
      "source": "javascript/lodash"
    },
    "063271c4-114d-306d-821e-bb7458d0b17b": {
      "content": "__PRETTY_FUNCTION__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "PF": true
      },
      "source": "vim-snippets/snippets"
    },
    "06518664-939b-3553-9dd8-9ad080b0b0db": {
      "content": "<meta name=\"description\" content=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "06670a9f-4593-33b0-bab1-138c3a7c1c60": {
      "content": "place-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      },
      "source": "vim-snippets/snippets"
    },
    "0671eb9c-3802-3be1-bc10-dc0ff42786b8": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "gosnippets/snippets"
    },
    "0672ec7a-f197-3548-b33e-4881095f9ec8": {
      "content": "overflow-x: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "0673ba28-37f0-3fe5-ade5-949dc6802817": {
      "content": "describe \"${1:describe_name}\" do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "describe .. do .. end",
      "matches": {
        "describe": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0675987e-f36a-3179-a283-1274e53d8160": {
      "content": "std::array<${1:T}, ${2:N}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/snippets"
    },
    "067b476d-8aad-396f-9a8e-5b7888b1addd": {
      "content": "${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prevu": true
      },
      "source": "snippets/javascript"
    },
    "067c5a4f-e454-3ead-aa24-ae9cba3eb8ce": {
      "content": "{% spaceless %}${0}{% endspaceless %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      },
      "source": "vim-snippets/snippets"
    },
    "0683b762-e29b-3103-adc7-3f3ced2d0819": {
      "content": "<tr>\n\t<td>${1}</td>\n\ttd+${0}\n</tr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr+": true
      },
      "source": "vim-snippets/snippets"
    },
    "068972b8-c8c4-36fd-a868-f3bfca3bbe9a": {
      "content": "text-replace ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "068dfe48-baee-301c-93b8-0d82b6e35783": {
      "content": "library(${1:package}, ${2:help}, ${3:pos = ${4:2}}, ${5:lib.loc = ${6:NULL}})",
      "doc": "Library",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lib",
      "matches": {
        "library": true
      },
      "source": "vscode-R/snippets"
    },
    "06930909-692c-3ba8-bc54-2d95b6002685": {
      "content": "<li><a href=\"${0:#}\">${1}</a></li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia": true
      },
      "source": "vim-snippets/snippets"
    },
    "0693588e-5bb5-305a-9036-d12e78284c7b": {
      "content": "white-space: pre",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "0695ef70-a41a-3ab1-a0fd-c7fc91995a52": {
      "content": "<% error_messages_for :${1:model} %>\n<%= form_for @${2:model} do |f| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffe": true
      },
      "source": "vim-snippets/snippets"
    },
    "06971059-dbf1-3a6f-b0a4-322e86bfa4df": {
      "content": "clear left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "06979dea-6106-3c46-83f9-8858ff97e882": {
      "content": "integer, dimension(${1}), intent(out) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension intent(out)",
      "matches": {
        "indo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "069ed164-fc7d-3012-ad4a-22215e8accca": {
      "content": "${1:obj}.removeClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remc": true
      },
      "source": "snippets/coffee"
    },
    "06aa0970-34e1-38b5-b474-29bcd0533b95": {
      "content": "@after-appear=\"$1\"$0",
      "doc": "@after-appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-appear",
      "matches": {
        "afterappearevent": true,
        "vue after-appear": true
      },
      "source": "javascript/vue"
    },
    "06abfd3d-ce8e-3d93-bd86-684bb697a1fe": {
      "content": "$.dequeue('${1:selector expression}'${2:, 'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deqq": true
      },
      "source": "snippets/javascript"
    },
    "06af645d-604c-3c19-9340-af1023832530": {
      "content": "fwrite(${1:ARRAY}, sizeof(${2:TYPE}), ${3:N_MEMBERS}, ${4:FILE})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fwrite(......, file)",
      "matches": {
        "fwrite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "06b06e79-11ea-31c8-bf5f-10d5adb24f7e": {
      "content": "it.todo('${1:should }');",
      "doc": "creates a test placeholder",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-todo",
      "matches": {
        "itt": true,
        "jest it todo": true
      },
      "source": "javascript/jest"
    },
    "06b9bbad-996f-372b-baf6-d9ee07e81e12": {
      "content": "${1:obj}.die(${2:event}, ${3:handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "die": true
      },
      "source": "snippets/coffee"
    },
    "06c3086f-1830-335d-86c5-6511c85e67f0": {
      "content": "font-weight lighter",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "06d13001-da49-3b34-ab14-fed7c40bca0f": {
      "content": "justify-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "06d4b504-0065-351e-9c4e-5dd90070336f": {
      "content": "display: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "06d62132-2871-3a78-850d-8496c258ff96": {
      "content": "function ${1:foo}(node) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action",
      "matches": {
        "svaction": true,
        "svelte action": true
      },
      "source": "javascript/svelte"
    },
    "06db5c3e-1fc1-3eea-a3a1-58916aa6412a": {
      "content": "@lang('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@lang directive",
      "matches": {
        "lang": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "06e41ecb-5319-3c34-9cda-f78c24150e33": {
      "content": "-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      },
      "source": "vim-snippets/snippets"
    },
    "06e42272-9c3d-3166-a4cc-4b761d41d86b": {
      "content": "border-fit overwrite",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      },
      "source": "vim-snippets/snippets"
    },
    "06f06e8b-584a-3f7b-a56d-f7ea386db392": {
      "content": "truncatewords_html:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      },
      "source": "vim-snippets/snippets"
    },
    "06f0adc1-3887-3f76-b899-5c2eeb6d9a4f": {
      "content": "defmodule Main do\n  def main do\n    ${1:TARGET}\n  end\nend\nMain.main",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "06f29475-a61d-3d10-afc2-8818320ba875": {
      "content": "while ${1:#:condition}\n  ${0:TARGET}\nendwhile",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "while endwhile",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "06fbe68e-e99f-3096-8d13-26d9a603306f": {
      "content": "(defrecord ${1:name} [${2:fields}]\n\t${3:protocol}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      },
      "source": "vim-snippets/snippets"
    },
    "06fd4915-2166-3107-b677-1dfc51ce8492": {
      "content": "grid-template-columns: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "06fe47ea-f2ed-3479-9230-c787a8eed3b1": {
      "content": "var $1 = new sap.ui.core.Icon({\n\t\t\t\tsrc :$2 , //sap.ui.core.URI\n\t\t\t\tsize :$3 , //sap.ui.core.CSSSize\n\t\t\t\tcolor :$4 , //sap.ui.core.CSSColor\n\t\t\t\thoverColor : $5 ,  // sap.ui.core.CSSColor\n\t\t\t\tactiveColor :$6 , //sap.ui.core.CSSColor\n\t\t\t\twidth :$7 , //sap.ui.core.CSSSize\n\t\t\t\theight : $8 ,//sap.ui.core.CSSSize\n\t\t\t\tbackgroundColor :$8 , //sap.ui.core.CSSColor\n\t\t\t\thoverBackgroundColor :$9 , //sap.ui.core.CSSColor\n\t\t\t\tactiveBackgroundColor :$10 , //sap.ui.core.CSSColor\n\t\t\t\tvisible :$11 , //boolean (default: true)\n\t\t\t\tdecorative : $12 ,//boolean (default: true)\n\t\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapicon": true
      },
      "source": "vim-snippets/snippets"
    },
    "07015adc-a61f-3630-ae7f-3fc84512091c": {
      "content": "\\textbf{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textbf": true,
        "textbf \\textbf{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0704e341-100a-33d8-9c9f-cdbf186b7407": {
      "content": "white-space pre",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "070d770d-4ca6-3bb4-a6a5-8679ba4ae12d": {
      "content": "namespace ${1:MyNamespace}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "namespace": true
      },
      "source": "vim-snippets/snippets"
    },
    "070f0fd5-3e2f-33ee-ae19-f30dc8113132": {
      "content": "border-style: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "07107542-e91b-32fb-a82b-d871f9badb5a": {
      "content": ".. ${1:#:NAME}:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive",
      "matches": {
        "directive": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "071d9246-f343-37c2-bcdf-307aeba1260f": {
      "content": "_.sortedUniqBy(${array}, ${iteratee})",
      "doc": "_.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n// => [1.1, 2.3]\n\nThis method is like `_.uniqBy` except that it's designed and optimized\nfor sorted arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sorteduniqby",
      "matches": {
        "lodash sorteduniqby": true
      },
      "source": "javascript/lodash"
    },
    "0724c1fc-9fe7-3880-820a-e3fb5e358bd3": {
      "content": "post {\n\tchanged {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "07261722-63c7-3531-bc94-7a4264325b95": {
      "content": "service { \"${1:service}\":\n\tensure    => running,\n\tenable    => true,\n\trequire   => [ Package[\"${2:package}\"], File[\"${3:file}\"], ],\n\tsubscribe => [ File[\"${4:configfile1}\"], File[\"${5:configfile2}\"], Package[\"${6:package}\"], ],\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service": true
      },
      "source": "vim-snippets/snippets"
    },
    "07269deb-629d-3250-aaec-dabb89dfe536": {
      "content": "${1:type}, ${2:allocatable, }dimension(${3::}) :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      },
      "source": "vim-snippets/snippets"
    },
    "072d513f-5f75-3264-ae12-5ebc2347ecff": {
      "content": "var ${1}:${2};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0734c45c-8360-34aa-a12a-9e1fc3f32ba6": {
      "content": "const express = require('express');\nconst app = express();\nconst port = process.env.PORT || ${1:port};\nconst www = process.env.WWW || '${2:./}';\napp.use(express.static(www));\nconsole.log(`serving \\${www}`);\napp.get('*', (req, res) => {\n\tres.sendFile(`index.html`, { root: www });\n});\napp.listen(port, () => console.log(`listening on http://localhost:\\${port}`));\n$0",
      "doc": "Node.js Express Server",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "node-js-express-server",
      "matches": {
        "angular node express server": true,
        "ex-node-server-simple": true
      },
      "source": "javascript/angular"
    },
    "073be288-2cb9-33ad-be6b-e50d2482412c": {
      "content": "${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delay": true
      },
      "source": "snippets/javascript"
    },
    "0747a01e-7f75-3b34-8e7e-ea3e58df628e": {
      "content": "reduce(${1:init}) do |${2:mem}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redd": true
      },
      "source": "vim-snippets/snippets"
    },
    "074d6bf8-1419-3e64-b69f-3e236213b836": {
      "content": "font-emphasize-style: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "07568448-3229-3b70-b250-6bb6e0e8ad01": {
      "content": "for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "for (..) {..}",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "075b1dc5-2c43-3f55-8ec3-a325c9ef1d6a": {
      "content": "grid-row-end ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      },
      "source": "vim-snippets/snippets"
    },
    "075d664c-3096-3b72-9c7d-d49b3c7e3768": {
      "content": "Array.new(${1:10}) { |${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/snippets"
    },
    "0764f578-fa1d-3b4c-bfca-d0abda9c791e": {
      "content": "; http://editorconfig.org\nroot = true\n[*]\nindent_style = ${1:space_or_tab}\nindent_size = ${2:indent_size}\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true",
      "doc": "",
      "filetype": "dosini",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "0774eaaa-6a3d-3ca3-8d67-ec40a23769ef": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vstore": true
      },
      "source": "vim-snippets/snippets"
    },
    "077509d7-7f6a-337e-a409-86383e7918e9": {
      "content": "redirect_to(${2:${12:model}_path(${13:@}${14:$12})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (path)",
      "matches": {
        "rep": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "077ce869-eb68-31ef-a4d1-e9e854ab2172": {
      "content": "ReactDOM.render(${1}, ${2});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.render",
      "matches": {
        "rdr": true
      },
      "source": "snippets/javascript"
    },
    "077ed029-1e1c-3c23-8a37-c8490b1cc979": {
      "content": "struct ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "078038af-02d9-313f-a915-bf2cafc9b3a4": {
      "content": "border: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true,
        "border": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "078044ef-c916-39dc-b7af-0e62265fb6cf": {
      "content": "[super ${1:init}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "su": true
      },
      "source": "vim-snippets/snippets"
    },
    "0782ef6f-8183-3a89-9089-88ade1711517": {
      "content": "background-repeat no-repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "07865cea-512f-3b58-b80d-19f1b550299d": {
      "content": "expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to have attribute (coffee)",
      "matches": {
        "eha": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "078c4b03-6ae0-37c2-ab58-0a3ab431dc05": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport const ${1:${TM_FILENAME_BASE}} = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t${2:props}: ${3:PropTypes}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React functional component with PropTypes with connected redux and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionalCompomentReduxPropTypes",
      "matches": {
        "rfcreduxp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "078fa356-5d8c-3d9b-bdc1-0dd8eebe4375": {
      "content": "it { is_expected.to ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iiexp": true
      },
      "source": "vim-snippets/snippets"
    },
    "07966862-9358-3d85-b236-860663f5fdc7": {
      "content": "[${1} for ${2} in ${3:${VISUAL}}]${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "list comprehension",
      "matches": {
        "lcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "0798e6e3-d2d6-3cf6-9844-27b478fc47bb": {
      "content": "<include file='${1:#:filename}' path='${2:#:tabpath}[@${3:#:name}=\"${4:#:id}\"]'/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<include file='' path=''/>",
      "matches": {
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "07997460-34d4-3ba0-8142-481e85138c89": {
      "content": "background: #${1:fff} url(${2}) ${3:0} ${4:0} ${5:no-repeat};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "079dc45a-51d0-3a5c-b755-ab703fbc2e69": {
      "content": "overflow-y: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "079ea631-e183-3f20-aac7-008a3cd4dd22": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}={${4:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-all",
      "matches": {
        "svelte transition all": true,
        "svta": true
      },
      "source": "javascript/svelte"
    },
    "079f4be7-267b-3878-b319-3c03f7cbbfd8": {
      "content": "<${1:}>${2}</$1>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      },
      "source": "vim-snippets/snippets"
    },
    "07a40c46-1505-3e3b-920b-23fe16a702a5": {
      "content": "switch (${1:#:let}) {\n  case ${2:#:val}:\n    ${0:TARGET}\n    break;\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "07b1f80a-7cca-3ffc-93ae-f005226d8aec": {
      "content": "Plug '${1}', { 'branch': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'branch': '' }",
      "matches": {
        "plugbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "07b60a9f-6975-3248-9138-1bf4028cd8c4": {
      "content": "scope(failure) ${1}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scf": true
      },
      "source": "vim-snippets/snippets"
    },
    "07b917a8-4d26-3437-b682-f681415f88bf": {
      "content": "before_validation $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation",
      "matches": {
        "befv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "07b9b5c4-b85a-35a1-a509-d9254be4c392": {
      "content": "${1:String} ${2:var}${3: = null}${4};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "07bba270-993c-3653-ae00-d14d0a63d63f": {
      "content": "max-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      },
      "source": "vim-snippets/snippets"
    },
    "07bdc156-55ff-39ae-b3d1-cbac72a2c4dc": {
      "content": "`${1:${TM_SELECTED_TEXT}}`$0",
      "doc": "Insert code",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert code",
      "matches": {
        "code": true
      },
      "source": "vscode-R/snippets"
    },
    "07bef20b-1693-3c97-9931-4b2bb82d6eaa": {
      "content": "panic(\"${0}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic(\"...\")",
      "matches": {
        "panic": true,
        "pn": true
      },
      "source": "gosnippets/snippets"
    },
    "07c88069-e1d1-3ace-802f-2b0eeddb824a": {
      "content": "const_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cca": true
      },
      "source": "vim-snippets/snippets"
    },
    "07ca1889-498f-3d22-94eb-22e2df478671": {
      "content": "${1:obj}.mouseover(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mover": true
      },
      "source": "snippets/javascript"
    },
    "07cd1b68-c20f-3858-b488-24491e0f8c29": {
      "content": "if ${1} then ${2} else ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if expression",
      "matches": {
        "ife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "07d90e58-cc21-3884-8542-fd48ce73d96b": {
      "content": "post {\n\tfixed {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true
      },
      "source": "vim-snippets/snippets"
    },
    "07e1cd20-988c-3ee6-8024-1e70d97cbe26": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", locals: { ${2:name}: '${3:value}'${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ril": true
      },
      "source": "vim-snippets/snippets"
    },
    "07e4ccb2-f8fc-3a67-bd53-d37b2a0c3e1d": {
      "content": "$.type(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$type": true
      },
      "source": "snippets/coffee"
    },
    "07ea5275-7592-3b59-8fbb-f5e61587620e": {
      "content": "$(function () {\n\t${0}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ready": true
      },
      "source": "snippets/javascript"
    },
    "07f18d5e-07a8-30c6-a81d-dab9f379820f": {
      "content": "padding-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "07f56c6a-2c3b-31d7-9e1a-8d5a6c25843d": {
      "content": "import DS from 'ember-data';\n\nexport default DS.Model.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import DS from 'ember-data';",
      "matches": {
        "emod": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "07fdc02f-6543-3acf-9593-ef35e01a26d5": {
      "content": "echo CHtml::ajaxSubmitButton('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajsb": true
      },
      "source": "vim-snippets/snippets"
    },
    "080010b8-72d1-309d-abe0-86b8f898e1f2": {
      "content": "if ($1) {\n\t${2:# body...}\n}\nelse {\n\t${3:# else...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional if..else (ife)",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0803cad1-f498-3198-98f3-f21253a58ca2": {
      "content": "close(unit = ${1:fp}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "close": true
      },
      "source": "vim-snippets/snippets"
    },
    "08055491-b9af-3e70-8740-13e9c1010010": {
      "content": ":key=\"${1:key}\"",
      "doc": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-key",
      "matches": {
        "key": true,
        "vue key": true
      },
      "source": "javascript/vue"
    },
    "0805cfb5-857f-3f66-b02e-8d310ead71c5": {
      "content": "{% spaceless %}$1{% endspaceless %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "080ad250-415b-37ef-ac9c-91974dd4c335": {
      "content": "color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      },
      "source": "vim-snippets/snippets"
    },
    "0815644a-dc55-32ec-b95e-e83a963a939d": {
      "content": "${1:obj}.empty()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      },
      "source": "snippets/javascript"
    },
    "081f1d27-a4e9-3e69-aebd-3f94a7df4fb7": {
      "content": "\\$_FILES['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "files": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "082162d1-923f-3d9f-aecc-211fb1b302de": {
      "content": "<main>\n    ${1}\n</main>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0823d072-43bc-35a8-825f-273fdca6bb74": {
      "content": "${1:obj}.add('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "snippets/javascript"
    },
    "0826a97e-9eb3-3e0a-be0c-c1e90bcf01e2": {
      "content": "try:\n\t${1:pass}\nexcept ${2:#:ExceptionClass}:\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "try: ... except ...: ...",
      "matches": {
        "tryexcept": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0830a836-39c3-3acc-8976-c65d649e4b31": {
      "content": "list-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0831da9b-1c0f-3dff-b0a3-6ac410232ee4": {
      "content": "interface ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface NAME {...}",
      "matches": {
        "interface": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0844ec15-83fa-3daf-bbb9-ef747edd9e2a": {
      "content": "expression()",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "084ddffb-eceb-3a12-a38b-afa5cb3c0ea4": {
      "content": "| truncatewords: ${1:5}, '${2:...}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      },
      "source": "vim-snippets/snippets"
    },
    "084f4f51-cdff-3d32-b0fe-f230b929b6ad": {
      "content": "<%= fields_for :${1:model}, @$1 do |${2:f}| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fields": true
      },
      "source": "vim-snippets/snippets"
    },
    "08501c4f-6460-35c4-ae65-3750acd9eb4b": {
      "content": "vertical-align bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "085229b8-3052-3cff-9c75-112cc82db4fc": {
      "content": "border-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      },
      "source": "vim-snippets/snippets"
    },
    "0855e112-2834-3010-ad32-e3b741b77d95": {
      "content": "truncatewords_html:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "085c3490-2d00-3fa8-9f6f-4815302f62db": {
      "content": "for ${1:e} := range ${2:collection} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for range loop",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "0860fc26-0de4-3bd2-ab04-5998f847362b": {
      "content": "(when ${1}\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "08637c97-d4af-360b-a51a-87d906daef5d": {
      "content": "Page Should Not Contain Element    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Element",
      "matches": {
        "psnce": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "08645404-ab9a-3691-b7c8-589f0f4a79cd": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-node",
      "matches": {
        "prop-types node": true,
        "ptnd": true
      },
      "source": "javascript/prop-types"
    },
    "08663af3-24aa-3d58-9003-7af463fc59e6": {
      "content": "font-stretch: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "08688ad3-e4cd-31e9-af7e-4e2aea2fd6ed": {
      "content": "font-variant: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      },
      "source": "vim-snippets/snippets"
    },
    "0875e657-5fc0-3f8e-a3cf-30a73fadbfc3": {
      "content": "<fieldset>\n\t<legend><span>${1}</span></legend>\n\t${2}\n</fieldset>\nfieldset+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset+": true
      },
      "source": "vim-snippets/snippets"
    },
    "08766c24-95ff-3f88-a2d6-995e8b122e91": {
      "content": "${1:obj}.eq(${2:element index})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      },
      "source": "snippets/javascript"
    },
    "087c0d93-ff1b-37bd-8883-542638c7b82c": {
      "content": "/// ${1:description}\n///\n/// ${2:details}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "generic ddoc block (doc)",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0880f395-b0d2-32f5-a58d-ff42b30f23e6": {
      "content": "\\\\begin{equation*}\n\t${0:${VISUAL}}\n\\\\end{equation*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "unnumbered equation environment",
      "matches": {
        "eq*": true
      },
      "source": "vim-snippets/snippets"
    },
    "088245f0-54f3-384a-86a0-a3054cb940ab": {
      "content": "expect($1).toBeCloseTo(${2:number}, ${3:delta});$0",
      "doc": "expects the first argument to be close to the second one base on the delta",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobecloseto",
      "matches": {
        "jest expect tobecloseto": true,
        "tbct": true
      },
      "source": "javascript/jest"
    },
    "08865aa5-2077-3c8a-91d4-bbdc5f2e2f80": {
      "content": "&#x238B;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "esc": true
      },
      "source": "vim-snippets/snippets"
    },
    "088beca8-2ad7-3942-b172-1b28b43492d4": {
      "content": "each_key { |${1:key}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eak": true
      },
      "source": "vim-snippets/snippets"
    },
    "088e977f-bc3d-38c3-a8ad-7f2948dc7293": {
      "content": "\\${5}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5}",
      "matches": {
        "5": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "088f4368-36ef-3476-9c00-19a94fe04e2b": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "08941035-7fbd-336d-b8ff-1a5dbeba3814": {
      "content": "${1:void} ${2:#:Method}(${3:#:arguments}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0894e395-2d17-30cf-924e-609d69cf184a": {
      "content": "#!/usr/bin/env zsh\n$0",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "#!/usr/bin/env zsh",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0897143f-d64b-3099-8033-92d16fd78672": {
      "content": "_.keysIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\nCreates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keysin",
      "matches": {
        "lodash keysin": true
      },
      "source": "javascript/lodash"
    },
    "08aa055a-ecee-32a5-af5c-007eb95c7612": {
      "content": "@if ${1:condition} {\n\t${2}\n} @else {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "08c0599a-3ce2-3bca-9043-9499a24da874": {
      "content": "{\n\tpath: '${1:path}', \n\tloadChildren: () => import('${2:lazy-path}').then(m => m.${3:lazy-module})\n},",
      "doc": "Angular lazy route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-lazy-route-path",
      "matches": {
        "a-route-path-lazy": true,
        "angular lazy route path": true
      },
      "source": "javascript/angular"
    },
    "08c25bc1-5a53-3b43-8524-f63a6b5936f6": {
      "content": "\\subparagraph{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subparagraph": true,
        "subparagraph \\subparagraph{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "08cc4b34-9877-3ed3-a774-2c6821d2af2e": {
      "content": "<meta name=\"theme-color\" content=\"#${1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metatheme": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "08cc6983-69e2-3dc9-9917-9cb7971464a9": {
      "content": "scale(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "size",
      "matches": {
        "scale": true
      },
      "source": "vim-snippets/snippets"
    },
    "08d0e2a4-a904-30bf-94e8-8b69b2e00230": {
      "content": "mixed.strip()",
      "doc": "mixed.strip(stripField: boolean = true): Schema\n\nMarks a schema to be removed from an output object. Only works as a nested schema.let schema = object({\n  useThis: number(),\n  notThis: string().strip()\n});\n\nschema.cast({ notThis: \"foo\", useThis: 4 }); // => { useThis: 4 }\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-strip",
      "matches": {
        "yup mixed strip": true
      },
      "source": "javascript/yup"
    },
    "08d9a053-3b7b-3cdc-b1b5-909ed711dcc3": {
      "content": "text-align: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "08e92836-ef84-3180-9ebe-f164a68d7fb9": {
      "content": "border-left: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "08e9a9e3-d456-3bbb-a6c6-8ba06f3cdb3c": {
      "content": ".. contents:: ${1:#:contents_name}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contnents": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "08ead92f-6124-3a41-9637-674614f334ec": {
      "content": "$.unique(${1:array})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      },
      "source": "snippets/coffee"
    },
    "08ed5dee-aff9-3d5f-a6da-e66d550b050b": {
      "content": "$this->session->set_flashdata(\"${1:item}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_set_flashdata": true
      },
      "source": "vim-snippets/snippets"
    },
    "08f576b1-fb04-3e9c-a4e1-0a168681f6c4": {
      "content": "${1:super_class}.instance_method(:${0:method}).bind(self).call",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "super_call": true
      },
      "source": "vim-snippets/snippets"
    },
    "08f800b7-1e28-3278-ab9b-b4f0530e5413": {
      "content": "this.state.$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "state": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "08fefbe3-d81a-33c6-8c02-c85fc9a0c25d": {
      "content": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conditional": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "08ff3c6d-c95e-34c5-9267-3f16dd3e98ba": {
      "content": "{% ${1:#:tag} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% ... %}",
      "matches": {
        "%": true,
        "tag": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "090744af-bd7a-3de2-904f-4dce7b614687": {
      "content": "${1:this}.set('${2:property}', ${3:value});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "this.set('property', value);",
      "matches": {
        "eset": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "090c2248-387b-3fda-b75f-8ba46a36e790": {
      "content": "text-align=\"right\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "09206755-444f-3eeb-995e-aa590691a622": {
      "content": "import { createSelector } from 'reselect'\n\nexport const ${1:selectorName} = state => state.${2:selector}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reduxSelector",
      "matches": {
        "rxselect": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "09232940-8d47-3162-942f-84dd246aa4b5": {
      "content": "class ${1:MODEL_NAME}CreateView(CreateView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Create View",
      "matches": {
        "createview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "092ac98a-7932-3988-abe1-3e790bfe50ef": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}\"${0}",
      "doc": "Angular *ngFor",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFor",
      "matches": {
        "a-ngFor": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "0934a275-59f4-3878-af3b-11df3f6b41ca": {
      "content": "background-position: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backposition": true,
        "bp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "093f3358-b384-3eb8-9c09-065d4c102a8b": {
      "content": "border-fit ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      },
      "source": "vim-snippets/snippets"
    },
    "094889cf-620d-36bf-984c-7844893d000e": {
      "content": "<input type=\"url\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:url": true
      },
      "source": "vim-snippets/snippets"
    },
    "0949c9e1-f5ff-3ccb-8789-f2a06543970e": {
      "content": "$.ajaxSetup({\n\turl: \"${1:mydomain.com/url}\",\n\ttype: \"${2:POST}\",\n\tdataType: \"${3:xml/html/script/json}\",\n\tdata: $.param( $(\"${4:Element or Expression}\") ),\n\tcomplete: (jqXHR, textStatus) ->\n\t\t${5:// callback}\n\t,\n\tsuccess: (data, textStatus, jqXHR) ->\n\t\t${6:// success callback}\n\t,\n\terror: (jqXHR, textStatus, errorThrown) ->\n\t\t${0:// error callback}\n})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsetup": true
      },
      "source": "snippets/coffee"
    },
    "095adc6e-e6a5-37af-9e65-ae108bdb2620": {
      "content": "/**\n * ${3:#:undocumented class variable}\n *\n * @var ${4:#:string}\n **/\n${1:#:var} $${2};${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_class_var": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "095fdd06-c45c-36df-8c14-ce61efd4cda0": {
      "content": "float: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      },
      "source": "vim-snippets/snippets"
    },
    "09627b3d-4b20-36ff-83c2-9d6c39ea6174": {
      "content": "{{ $1 }}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{{ }} statement.",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0968bb66-d38d-34a1-aa11-e1d79faffa14": {
      "content": "$this->render('${1:view}',array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yr": true
      },
      "source": "vim-snippets/snippets"
    },
    "0970d214-b842-3d30-bf63-1ea1e9b8c3e5": {
      "content": "<h1 id=\"${1}\">${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1#": true
      },
      "source": "vim-snippets/snippets"
    },
    "09713583-9461-3ed7-b022-c3657a039586": {
      "content": ":nth-child($0)",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0974cb89-ff5c-3c2d-82c4-4ef6653c4442": {
      "content": "border-fit: scale",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "09819529-cf29-3a2b-bbcf-72b0bdc00e3d": {
      "content": "import 'react-native'\nimport React from 'react'\nimport renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from 'src/store'\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(\n\t\t<Provider store={store}>\n\t\t\t<${1:${TM_FILENAME_BASE}} {...defaultProps} />\n\t\t</Provider>,\n\t)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setupReactNativeTestWithRedux",
      "matches": {
        "snrtest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "09875e86-8a26-3ce8-8942-5a587b98848d": {
      "content": "gem '${1}', '${2} >= 1.0'",
      "doc": "",
      "filetype": "Gemfile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gem": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0987af84-b27e-3d69-970d-c077476d0f31": {
      "content": "line-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      },
      "source": "vim-snippets/snippets"
    },
    "0989d13b-de26-3727-9ada-744c2aa3c0e0": {
      "content": "spyOn(${1:object}, '${2:method}').and.throwError(${3:exception});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and throw (js)",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/snippets"
    },
    "099eb95f-4b01-3a8d-83dd-ed8b1842a4c8": {
      "content": "(${1:first}/:${2:name})(${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/:": true
      },
      "source": "vim-snippets/snippets"
    },
    "09a539a7-051e-3c4a-936f-87a907bbc35a": {
      "content": "padding: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "09a5e3d7-f793-3ef5-ba70-0627829cf6fe": {
      "content": "File.dirname(File.expand_path(__FILE__))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.dirname(...)",
      "matches": {
        "__dir__": true,
        "filedir-legacy-compatibility": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "09a664cb-8763-366b-8f04-b9538732a952": {
      "content": "DELETE FROM ${1:table}\nWHERE ${2:condition};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "DELETE FROM ... WHERE ...",
      "matches": {
        "DELETE_DATA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "09b0831a-a7a1-33e0-9871-56e6f4ee0e48": {
      "content": "grid-auto-flow row dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      },
      "source": "vim-snippets/snippets"
    },
    "09bc2fd9-dedd-303f-b3e2-d9f1d65ad6c8": {
      "content": "sqrt(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sqrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "09bc69f9-5f7d-3d3c-9df4-b8407385b4bc": {
      "content": "_.round(${number}, ${precision})",
      "doc": "_.round(4.006);\n// => 4\n\n_.round(4.006, 2);\n// => 4.01\n\n_.round(4060, -2);\n// => 4100\n\nComputes `number` rounded to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-round",
      "matches": {
        "lodash round": true
      },
      "source": "javascript/lodash"
    },
    "09be3eda-da0f-379e-8613-440652e951ad": {
      "content": "echo CHtml::checkBox('${1:name}', ${2:false}, array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcb": true
      },
      "source": "vim-snippets/snippets"
    },
    "09c03ac0-fa81-3f10-9b8e-337822aa83b6": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "09cb4870-792e-37fe-8569-890f480ce857": {
      "content": "MsgBox(0, \"Debug\", ${0:\"Debug Message\"})",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "09cf5eed-4728-3c40-9441-78e20e33768a": {
      "content": "require(${0:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "09dbda46-5274-394e-b5c5-09614de5dcfe": {
      "content": "const ${1:client} = new GraphQLClient(\n  ${2:url},\n  {\n    headers: {\n      ${3:key}: ${4:value}\n    },\n  }\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client",
      "matches": {
        "graphql-request client": true
      },
      "source": "javascript/graphql-request"
    },
    "09def810-6e3d-30f1-9a5c-3f5a19a96e63": {
      "content": "import { ${1:Observable} } from 'rxjs';\n$0",
      "doc": "RxJs import",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "rxjs-import",
      "matches": {
        "a-rxjs-import": true,
        "angular import rx js": true
      },
      "source": "javascript/angular"
    },
    "09ee215f-2811-33eb-b52d-2c702fd2e225": {
      "content": "\\\\langle ${0:${VISUAL}} \\\\rangle",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "langle rangle",
      "matches": {
        "lra": true
      },
      "source": "vim-snippets/snippets"
    },
    "09f020c8-2773-3631-80ea-258cd7d91c32": {
      "content": "switch ${1:#:v} {\ncase ${2:#:condition}:\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch {}",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "09f5b62f-c5ea-31e3-baf9-595e575cb4ad": {
      "content": "mixed.withMutation()",
      "doc": "mixed.withMutation(builder: (current: Schema) => void): void\n\nFirst the legally required Rich Hickey quote:\nIf a tree falls in the woods, does it make a sound?\nIf a pure function mutates some local data in order to produce an immutable return value, is that ok?\nwithMutation allows you to mutate the schema in place, instead of the default behavior which clones before each change.\nGenerally this isn't necessary since the vast majority of schema changes happen during the initial\ndeclaration, and only happen once over the lifetime of the schema, so performance isn't an issue.\nHowever certain mutations do occur at cast/validation time, (such as conditional schema using when()), or\nwhen instantiating a schema object.object()\n  .shape({ key: string() })\n  .withMutation(schema => {\n    return arrayOfObjectTests.forEach(test => {\n      schema.test(test);\n    });\n  });\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-with-mutation",
      "matches": {
        "yup mixed withmutation": true
      },
      "source": "javascript/yup"
    },
    "09f88f3c-6b5c-3c29-ab0b-d971b15cf691": {
      "content": "it { should set_session :${0:key} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isss": true
      },
      "source": "vim-snippets/snippets"
    },
    "09fe4386-0cdb-38b6-9ff6-c775fece8307": {
      "content": "margin-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a0f7544-3e18-360f-a0cf-fd07faecbcd9": {
      "content": "elsif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "elsif",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a10143d-018c-37a1-a5b8-eb6b4e1e132d": {
      "content": "background-size: contain;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a123b4b-f9f3-39a3-b8d3-343962ce2acd": {
      "content": "type ${1:}\n\t${2}\nend type $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "type",
      "matches": {
        "ty": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0a17c80e-ee41-3b08-a0fc-deaeb8edac8e": {
      "content": "font-effect outline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a17e4be-8fca-3378-92a4-74759f940501": {
      "content": "font-stretch: extra-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a24b57c-9a8b-3ac6-ac2e-5429238ad051": {
      "content": "border-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a27fe16-311d-343e-9eeb-5de7831e79c4": {
      "content": "const ${1:memoizedCallback} = useCallback(\n() => {\n\t${2}(${3})\n},\n[$3]\n);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useCallback",
      "matches": {
        "usecb": true
      },
      "source": "snippets/javascript"
    },
    "0a340d95-ed7d-3466-b619-dc8660a09b07": {
      "content": "@leave-cancelled=\"$1\"$0",
      "doc": "@leave-cancelled='' (v-show only)",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-cancelled",
      "matches": {
        "leavecancelledevent": true,
        "vue leave-cancelled": true
      },
      "source": "javascript/vue"
    },
    "0a34ee75-bf18-3955-9501-51f4880a6ff2": {
      "content": "// Define what props.theme will look like\nconst theme = {\n  ${1}: '${2}'\n};",
      "doc": "styled-component theme",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-theme",
      "matches": {
        "sct": true,
        "styled-components theme": true
      },
      "source": "javascript/styled-components"
    },
    "0a395882-e37b-367e-9a75-3c9ad8bc11ca": {
      "content": "class << self; self end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sinc": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a3a51f7-d4ac-3a50-a747-f434de5715c0": {
      "content": "padding: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0a40a095-8559-3096-9b33-451d039e6c4a": {
      "content": "Logger.info(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "info": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a48718f-d0ee-3791-9646-cd6295fa72bd": {
      "content": "_.remove(${array}, ${predicate})",
      "doc": "var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]\n\nRemoves all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is invoked\nwith three arguments: (value, index, array).\n\n**Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\nto pull elements from an array by value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-remove",
      "matches": {
        "lodash remove": true
      },
      "source": "javascript/lodash"
    },
    "0a537e42-4750-3168-a605-f9467ecf7141": {
      "content": "outline-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a63b626-8008-33dc-91e8-8fa938f5e721": {
      "content": "#region ${1:Region}\n${VISUAL}$0\n#endregion",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "#region #endregion",
      "matches": {
        "#region": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0a6438ee-f1cc-3ee2-8837-e71bef4ef53f": {
      "content": "switch ${1:var} {\ncase ${2:value1}:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch x { ... }",
      "matches": {
        "switch": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "0a6da7ae-d215-370a-b666-b2b663814ee6": {
      "content": "def ${1:name}(${2:args}) when ${3:guard} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defw": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a7295a9-146f-35c2-b4fd-1dd3e80e1635": {
      "content": "font-smooth ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a740edb-f3ac-3091-bdb9-e5e8a7600e06": {
      "content": "${1:FIELDNAME} = models.AutoField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "auto": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a798a1b-cc71-3733-abdb-dbbc803c0d50": {
      "content": "vertical-align: sub",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a7e2b5b-722a-36e5-9f5c-63ea082748cb": {
      "content": "width auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "0a801625-2fa9-3453-b3a8-69a0cc70e3f5": {
      "content": "${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attrm": true
      },
      "source": "snippets/coffee"
    },
    "0a8e1c02-9785-3f7a-9309-21e8974630f8": {
      "content": "${1:dfname} <- data.frame(${2:x} = numeric(), ${3:y} = numeric())",
      "doc": "Code snippet for an empty numerical data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Empty data frame (numeric)",
      "matches": {
        "df2n": true
      },
      "source": "vscode-R/snippets"
    },
    "0a936b0a-718e-3b77-9683-d2513963eb03": {
      "content": "\\shade[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\shade": true,
        "shade": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0a95b746-44b3-356b-885f-99e32ccd3bb6": {
      "content": "if err != nil {\n\treturn nil, errors.Wrap(err, \"${1:message}\")\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrap with two return values",
      "matches": {
        "errn,w": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "0a97380b-5380-310d-8d78-4bc5f63c9db1": {
      "content": "${1:obj}.select (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "snippets/coffee"
    },
    "0aa08b92-58dd-3108-9d9c-361a5f01b439": {
      "content": "border-right-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0aac6dcd-d265-30ab-9369-fecc7c60dd97": {
      "content": "(for ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ab3b219-05db-3f90-99d6-4fa11d080cb3": {
      "content": "typedef ${1:int} ${2:MyCustomType};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ab45fab-9716-39e3-84d8-382502c0eb12": {
      "content": "case ${1} of\n\t${2} =>\n\t\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ababf1d-969b-395b-9ee0-863aac055ff2": {
      "content": "if !reflect.DeepEqual(${1:expected}, ${2:actual}) {\n\t_, file, line, _ := runtime.Caller(0)\n\tfmt.Printf(\"%s:%d:\\n\\n\\texp: %#v\\n\\n\\tgot: %#v\\n\\n\", filepath.Base(file), line, $1, $2)\n\tt.FailNow()\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "equals: test two identifiers with DeepEqual",
      "matches": {
        "eq": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "0abc3b00-d232-3619-bea9-bd299d6d4ab8": {
      "content": "def self.${1:class_method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      },
      "source": "vim-snippets/snippets"
    },
    "0abc6cb4-8ef1-3942-ad2d-c952da88d203": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"postcss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with postcss",
      "matches": {
        "vbase-pcss": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "0abd1b25-2599-3600-be3f-56dc6801509c": {
      "content": "cursor: crosshair;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "0abe2266-756b-31b9-a352-388157b1a62d": {
      "content": "box-shadow none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ac394c8-2d14-3e69-b4cc-9a87424ba0de": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      },
      "source": "snippets/javascript"
    },
    "0ac5345a-966d-32b9-9ed2-00ac235d31c7": {
      "content": "border-top-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0acb9def-98c8-3f79-8cc7-f35c8bf853dc": {
      "content": "PIMPLE\n{\n\tnOuterCorrectors \t${1:outer};\n\tnCorrectors     \t${2:inner};\n\tnNonOrthogonalCorrectors ${3:nonOrtho};\n\tpRefCell        \t${4:cell};\n\tpRefValue       \t${0:value for $4};\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimple": true
      },
      "source": "vim-snippets/snippets"
    },
    "0acebc28-9a0d-3337-8821-e93299abe5d7": {
      "content": "{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "dict comprehension",
      "matches": {
        "dcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "0adb4bcf-03e1-3ae9-94c8-5abec55630c8": {
      "content": "Object.defineProperty(\n\t${1:object},\n\t'${2:property}',\n\t{\n\t\tget : function $1_$2_getter() {\n\t\t\t// getter code\n\t\t},\n\t\tset : function $1_$2_setter(value) {\n\t\t\t// setter code\n\t\t},\n\t\tvalue        : ${3:value},\n\t\twriteable    : ${4:boolean},\n\t\tenumerable   : ${5:boolean},\n\t\tconfigurable : ${0:boolean}\n\t}\n);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      },
      "source": "snippets/javascript"
    },
    "0ade2741-4307-300c-84ce-153f6e62e230": {
      "content": "useDebugValue(${1:value});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useDebugValue",
      "matches": {
        "used": true
      },
      "source": "snippets/javascript"
    },
    "0ae5170e-f4ea-3bc7-b999-4f0339d17aec": {
      "content": "splice(${1:array}, ${2:value/array2}, ${0:index});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splice": true
      },
      "source": "vim-snippets/snippets"
    },
    "0aea5277-b2e1-33f9-b8a2-42af0d003b91": {
      "content": "constructor(props) {\n\tsuper(props)\n\n\tthis.state = {\n\t\t $0\n\t}\n}\n",
      "doc": "Adds a default constructor for it('', () => {})the class that contains props as arguments",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-constructor",
      "matches": {
        "rconst": true,
        "react class constructor": true
      },
      "source": "javascript/react"
    },
    "0aef264a-9356-36a2-bbea-0e84164f2aa3": {
      "content": "border-bottom-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      },
      "source": "vim-snippets/snippets"
    },
    "0af4d096-c43b-3b75-bd06-f6a693da45a6": {
      "content": "->(${1:args}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->a": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b04cc03-eb64-38e8-9697-d375e432525e": {
      "content": "${1:deferred}.progress(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprog": true
      },
      "source": "snippets/coffee"
    },
    "0b0687c3-7088-30e3-a911-fddc1f648408": {
      "content": "expect(${1:target}).toBe(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be (js)",
      "matches": {
        "eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b1c87aa-1791-3c12-9e86-bf906431cfbf": {
      "content": "<<${1:id}>>${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "reference to anchor",
      "matches": {
        "ref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0b1e0bf0-a4e3-3938-9aa2-6f6af6d0751e": {
      "content": "{% javascript %}\n\t${0}\n{% endjavascript %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "javascript": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b28bde6-2e28-3e36-88a6-cdba3992aaef": {
      "content": "[^${1:id}]: ${2:note}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[^:": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b2ada26-f683-3445-8bd1-31b334e514c4": {
      "content": "each do |${1:#:variable}|\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0b495ce8-a9f3-3a9d-b010-14bfe1817ee1": {
      "content": "Element Text Should Be    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Text Should Be",
      "matches": {
        "etsb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0b545d7e-c497-342b-ba05-075d01198b1c": {
      "content": "length(${1:x})",
      "doc": "Length",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "len",
      "matches": {
        "length": true
      },
      "source": "vscode-R/snippets"
    },
    "0b5fe010-aace-37dd-878a-86ebce15cb1a": {
      "content": "${fn:contains(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b5ffe58-ed8d-37fe-a8d8-9d449ec5e2a5": {
      "content": "(letfn [(${1:name}) [${2:args}]\n\t${0:code})])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letfn": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b60da02-4656-3205-ac13-b4f22459e1a2": {
      "content": "text-align: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b645753-1f55-3e7e-b66b-4061e35358e6": {
      "content": "extend Forwardable",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Forw-": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b64d255-a64a-3adb-bbf9-f360be6bb1f8": {
      "content": "cursor text",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b706b50-2bd2-399f-afce-e275c0886bae": {
      "content": "IO.inspect(${0}label: \"${1:label}\")",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect with label",
      "matches": {
        "insl": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b75e154-4758-392d-8345-efad5db47e33": {
      "content": "::before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b7e9601-0bb8-3c2f-8fc8-cb37512ecc99": {
      "content": "min-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b861712-a28c-3d22-b11b-dec4e38a0e5e": {
      "content": "const {${1:module}} = require('${1:module}');",
      "doc": "destructuring require assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-require-assignment",
      "matches": {
        "base require assignment": true
      },
      "source": "javascript/base"
    },
    "0b8e95bc-7cd6-3de4-984c-162b03eea338": {
      "content": "text-wrap normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0b96c06b-39ea-3aa3-a159-a5f526782f58": {
      "content": "color: rgb(${1:255},${2:255},${3:255});$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-rgb (color)",
      "matches": {
        "color": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0b9f8c86-da3b-30f4-b491-58afc98924c9": {
      "content": "require('dotenv-safe').config({ allowEmptyValues: ${1|true,false|} })",
      "doc": "If a variable is defined in the example file and has an empty value in the environment, enabling this option will not throw an error after loading.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-allowemptyvalues",
      "matches": {
        "dotenv-safe allowemptyvalues": true
      },
      "source": "javascript/dotenv-safe"
    },
    "0bbf0beb-0cf4-3a72-bbf4-eb8fd35b3526": {
      "content": "\\begin{itshape}\n\t${1:TARGET}\n\\end{itshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{itshape} \\itshape": true,
        "itshape": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0bc91a83-d0ca-37ac-ac2f-c107dd56ad8c": {
      "content": "func ${1:handler}(w http.ResponseWriter, r *http.Request) {\n\t${0:fmt.Fprintf(w, \"hello world\")}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http.HandlerFunc",
      "matches": {
        "hf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "0bce1458-6b33-3c21-b3d2-b77194a1521b": {
      "content": "public enum ${1}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum+": true
      },
      "source": "vim-snippets/snippets"
    },
    "0bcedaf7-b6c6-32e9-8b2c-babbef851b9e": {
      "content": "protected ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts protected method",
      "matches": {
        "tpromet": true
      },
      "source": "vim-snippets/snippets"
    },
    "0bd32b38-9f06-3e5e-b775-bf13e754112c": {
      "content": "justify-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "0bdc3713-9259-3a6d-9ada-d04464d7561e": {
      "content": "class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n",
      "doc": "Creates a React component class with ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactJustClassComponent",
      "matches": {
        "rcjc": true
      },
      "source": "vscode-react/snippets"
    },
    "0be078f4-9157-3d8d-848a-6e03ce7fc130": {
      "content": "word-spacing: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "word-spacing": true,
        "ws": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0be133c2-1bb1-36ec-b07c-1064fedc7cfd": {
      "content": "<exception cref=\"${1:System.Exception}\">${2}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<ex": true
      },
      "source": "vim-snippets/snippets"
    },
    "0be27643-c801-3186-98df-563a89d01a67": {
      "content": "${1:obj}.val('${2:text}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      },
      "source": "snippets/javascript"
    },
    "0be81671-480e-3b80-ad07-22755681cd0f": {
      "content": "marker-offset: auto;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "marker-offset: auto (marker)",
      "matches": {
        "marker": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0be9ccc5-4b6c-35b0-b948-e6d656991b6f": {
      "content": "_.inRange(${number}, ${start}, ${end})",
      "doc": "_.inRange(3, 2, 4);\n// => true\n\n_.inRange(4, 8);\n// => true\n\n_.inRange(4, 2);\n// => false\n\n_.inRange(2, 2);\n// => false\n\n_.inRange(1.2, 2);\n// => true\n\n_.inRange(5.2, 4);\n// => false\n\n_.inRange(-3, -2, -6);\n// => true\n\nChecks if `n` is between `start` and up to, but not including, `end`. If\n`end` is not specified, it's set to `start` with `start` then set to `0`.\nIf `start` is greater than `end` the params are swapped to support\nnegative ranges.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-inrange",
      "matches": {
        "lodash inrange": true
      },
      "source": "javascript/lodash"
    },
    "0beed3d1-42f7-3b97-93ec-6f96f55371d7": {
      "content": "===== ${1} =====\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=====": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0bef470f-1b6d-31d3-8896-25c0c7c3318d": {
      "content": "page-break-after: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      },
      "source": "vim-snippets/snippets"
    },
    "0bf63c5e-b04a-3831-815b-d2fb7bdb4658": {
      "content": "before_validation_on_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation_on_create",
      "matches": {
        "befvoc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0bf75cc0-d00f-35a4-b486-145a127a623b": {
      "content": "_.memoize(${func}, ${resolver})",
      "doc": "var object = { 'a': 1, 'b': 2 };\nvar other = { 'c': 3, 'd': 4 };\n\nvar values = _.memoize(_.values);\nvalues(object);\n// => [1, 2]\n\nvalues(other);\n// => [3, 4]\n\nobject.a = 2;\nvalues(object);\n// => [1, 2]\n\n// Modify the result cache.\nvalues.cache.set(object, ['a', 'b']);\nvalues(object);\n// => ['a', 'b']\n\n// Replace `_.memoize.Cache`.\n_.memoize.Cache = WeakMap;\n\nCreates a function that memoizes the result of `func`. If `resolver` is\nprovided, it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is used as the map cache key. The `func`\nis invoked with the `this` binding of the memoized function.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the\n[`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\nmethod interface of `clear`, `delete`, `get`, `has`, and `set`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-memoize",
      "matches": {
        "lodash memoize": true
      },
      "source": "javascript/lodash"
    },
    "0bf9cecd-af26-3df3-982a-f9d3b52aa3e9": {
      "content": "void ${1:/*function name*/}(${2:/*args*/}) ${3:@safe pure nothrow}\n{\n\t${VISUAL}$4\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "void function definition (void)",
      "matches": {
        "void": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0bfafa9f-6613-3a2e-bd14-d49c83477eb0": {
      "content": "$scope.${1:functionName} = (${2:args}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$f": true
      },
      "source": "snippets/coffee"
    },
    "0bff7542-d592-32d6-ab3d-535d87bb2337": {
      "content": "letter-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c03e02d-56d4-3131-b4ee-8a18e8f11fe1": {
      "content": "border-fit: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c04caf7-34b5-3eaf-baa3-e032df8fbfba": {
      "content": "<mark>${0}</mark>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mark": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c0ccd83-2835-3d82-b6a8-f6109e9faac4": {
      "content": "&nbsp;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c0d0d42-3c4b-3cdd-bb2a-8b46eb548632": {
      "content": "function ${1:}(${2})\n\t${3}\nend function $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fu": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0c0d2b82-31c8-3b75-a3f2-6c790b852748": {
      "content": "justify-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c0fd818-9022-3e55-9622-9aa2e6f4abc7": {
      "content": "test \"${1:test name}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c1cac49-26e5-3ff6-8404-40ca9da60746": {
      "content": "align-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c235d78-69c5-38c0-981c-de42ea98d4b6": {
      "content": "it \"${1}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c2ad126-6fa4-392a-b93a-8d54975662ec": {
      "content": "${1:file = }file.choose()${0:}",
      "doc": "file.choose",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fch",
      "matches": {
        "fch": true
      },
      "source": "vscode-R/snippets"
    },
    "0c31dfbd-a484-3a31-b0f1-2a45729acfe5": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0c35c693-01ac-3298-9ccc-e31a92b672fc": {
      "content": "${1:obj}.before('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      },
      "source": "snippets/javascript"
    },
    "0c411b47-3e7b-38e5-a473-6c833b0e83ac": {
      "content": "text-justify: tibetan",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c420379-a127-37db-b052-ca139a23d928": {
      "content": "for ${1:I} in ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c4b049e-b2b8-34a9-ac20-ac03e1c83c95": {
      "content": "${1:http}.HandleFunc(\"${2:/}\", func(w http.ResponseWriter, r *http.Request) {\n  ${0:fmt.Fprintf(w, \"hello world\")}\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "mux.HandleFunc(...)",
      "matches": {
        "hhf": true
      },
      "source": "gosnippets/snippets"
    },
    "0c50fe2b-914a-3bee-a50c-aaee9c009f84": {
      "content": "quotes: '\\00AB' '\\00BB' '\\201E' '\\201C';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c524eed-af03-3731-b9f6-c76f194e5537": {
      "content": "export default (${1:params}) => {\n\t$0\n}\n",
      "doc": "Export default function in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportDefaultFunction",
      "matches": {
        "edf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0c561086-1dd2-3e32-81b0-33e80efce833": {
      "content": "list-style-type: upper-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c58ccdd-a611-3d60-9058-a355a364c8bb": {
      "content": "align-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c64ea2e-f4df-3e7e-b59b-f83219bbd878": {
      "content": "static getDerivedStateFromProps(nextProps, prevState) {\n\t$0\n}\n",
      "doc": "Invoked after a component is instantiated as well as when it receives new props.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getDerivedStateFromProps",
      "matches": {
        "gdsfp": true
      },
      "source": "vscode-react/snippets"
    },
    "0c6fb171-1f43-3274-8f2d-efee5d1d7ecf": {
      "content": "border-left none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c700cd2-d6cb-386c-8335-d62cdf1fc4bf": {
      "content": "display: block;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: block (display)",
      "matches": {
        "display": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0c77a1cd-7e55-3f80-89a7-68ac408ba64c": {
      "content": "void main(string[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maina": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c864f4b-5734-36e7-86a2-775229748e4a": {
      "content": "font-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-style": true,
        "fs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0c89677f-0b62-3b89-8c8b-76a6dad1c37b": {
      "content": "protected bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb|-": true
      },
      "source": "vim-snippets/snippets"
    },
    "0c9f09b6-ab23-3e57-8f5b-76c019f015c1": {
      "content": "fscanf(${1:stdin}, \"${2}\", ${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fscanf(file, \"...\", ...);",
      "matches": {
        "fscanf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0ca0b2f0-595e-30e6-88f5-d87af5900bfa": {
      "content": "validates_format_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of",
      "matches": {
        "vf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0ca61eb7-c7c9-3e2b-bd86-982ed28a6a2b": {
      "content": "address = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "address": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cab81f0-83b3-3fb6-b521-075d6b1f5d4d": {
      "content": "return this.httpClient.get('${1:url}');$0",
      "doc": "Angular HttpClient.get",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "HttpClient.get",
      "matches": {
        "a-httpclient-get": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "0cb53da7-d867-32e6-8b67-380762bc0d0e": {
      "content": "setProperty(${1:#:target}, ${2:#:property}, ${3:#:value});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cc18f98-a899-3f83-9592-63deb82d7356": {
      "content": "_.divide(${dividend}, ${divisor})",
      "doc": "_.divide(6, 4);\n// => 1.5\n\nDivide two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-divide",
      "matches": {
        "lodash divide": true
      },
      "source": "javascript/lodash"
    },
    "0cca4d2e-a0e4-36d4-8b35-e315172d92d0": {
      "content": "@throws ${1:#:class} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throws": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cd59c4b-1175-308c-a6f1-ae09bd9c2cce": {
      "content": "@forelse (${1} as ${2})\n    ${3}\n@empty\n    ${4}\n@endforelse",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@forelse ... @empty ... @endforeach",
      "matches": {
        "forelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cd74c8d-e592-3889-8787-24cb818fe5d6": {
      "content": "after_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mas": true
      },
      "source": "vim-snippets/snippets"
    },
    "0cd7808c-a609-38c3-a19f-e7c1e57a1f1f": {
      "content": "- ${1:first}\n- ${2:second}\n- ${3:third}\n$0",
      "doc": "Insert unordered list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert unordered list",
      "matches": {
        "unordered list": true
      },
      "source": "vscode-R/snippets"
    },
    "0cd7839c-7798-3ea1-b084-be258edbc136": {
      "content": "t.column ${1:title}, :${2:string}\nmccc$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Create Column Continue (mccc)",
      "matches": {
        "mccc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0cdeaaac-2bf2-3298-affd-6ce9a1067141": {
      "content": "${1:map}.with_options ${2:controller}: '${3:thing}' do |$3|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapwo": true
      },
      "source": "vim-snippets/snippets"
    },
    "0cdff44c-cfc5-3ed6-b756-b8f8771bd24a": {
      "content": "class ${1:#:name}(${2:object}):\n\tdef __init__(self, ${3}):\n\t\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "class Class(...): ...",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cfd6d62-791e-3967-bf28-6e80bf5ae871": {
      "content": "[%header,format=csv]\n|===\n${0}\n|===",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "CSV table",
      "matches": {
        "csvtable": true,
        "tablecsv": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0cfe9975-b46c-31aa-9acd-29e07be7da32": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { Component } & PropTypes",
      "matches": {
        "imrcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0cfefddb-84a2-3dfa-b078-13f7a193f309": {
      "content": "else\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d02d65e-ec0e-3085-82e4-ab71489a8fb6": {
      "content": "<div class=\"${1}\">\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div.": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d0a8a46-a771-3f54-ae55-6c9b21ec970a": {
      "content": "removetags:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d0f3e87-0c68-32f1-bc1d-9137ab2c3fb1": {
      "content": "-webkit-box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d10faca-54e6-326a-a9b3-32469f471c11": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State) => state.${3:property}\n);",
      "doc": "Creates an NgRx Selector",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-selector",
      "matches": {
        "a-ngrx-create-selector": true,
        "angular ng rx create selector": true
      },
      "source": "javascript/angular"
    },
    "0d124034-9f76-3e21-b324-070a079856fb": {
      "content": "_.partial(${func}, ${partials})",
      "doc": "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n\n// Partially applied with placeholders.\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\nCreates a function that invokes `func` with `partials` prepended to the\narguments it receives. This method is like `_.bind` except it does **not**\nalter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partial",
      "matches": {
        "lodash partial": true
      },
      "source": "javascript/lodash"
    },
    "0d158c74-251f-3af3-af65-758c8960dc13": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d234994-b6c2-3d30-832a-cdedd79f495c": {
      "content": "background-attachment: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ba": true,
        "backattachment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0d25f735-c8a2-38a1-95a1-0a883d3bf4db": {
      "content": "$this->shouldBe$1();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldBeXYZ()",
      "matches": {
        "sbstate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0d29c046-c155-3433-9343-c4008cbfdbfb": {
      "content": "$this->input->get(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-get": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d2d6ed9-6f7d-33c9-9133-2e9f0df9894c": {
      "content": "exports.${1:member} = ${2:value};",
      "doc": "exports.member",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exports-member",
      "matches": {
        "base exports member": true
      },
      "source": "javascript/base"
    },
    "0d338ca6-7a76-31a6-8f94-d1264e03e136": {
      "content": "${fn:substring(${1:string}, ${2:begin}, ${0:end})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d35dcfd-6762-3120-a48d-2f192ca5a6ed": {
      "content": "switch ${1:object}\n\twhen ${2:value}\n\t\t${3:# body...}\n\telse\n\t\t$0",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Switch",
      "matches": {
        "swi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0d370774-4628-3525-877f-91e27c6966f4": {
      "content": "$this->${1:method}()->shouldNotBeLike(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeLike('value')",
      "matches": {
        "snblike": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0d3bd562-17ad-32e0-b630-35d2266d0181": {
      "content": "clip auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d446009-6e06-3850-b223-362e0c13c374": {
      "content": "(binding [*out* *err*]\n  (println ${0:TARGET}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0d4e5fb3-4339-31a4-a8db-5bc5849f5ab7": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d587e41-5987-3a8b-b7c8-4d0ccdf14ad8": {
      "content": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n  ${0}\nendfunction\nunlet s:hooks",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "neobundle hooks",
      "matches": {
        "bundle_hooks": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0d621b78-a7cc-3c31-bcb7-ff684ace0d3f": {
      "content": "const ${1:queryName} = `query ${1:queryName} {\n  ${2:query}\n}\n`;",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-query",
      "matches": {
        "graphql-request query": true
      },
      "source": "javascript/graphql-request"
    },
    "0d6ba011-7f26-3623-a9d6-e0bb08fe3c8e": {
      "content": "-webkit-border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d6cdcb2-9d45-32bb-b223-88a90cb8c8d5": {
      "content": "background-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d6f2452-fb63-3f40-9c94-f3ab59c06d42": {
      "content": "<html>\n${0}\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d6fdccc-dacb-3761-a5ca-5adfb6fb627c": {
      "content": "aggregate_failures '${1:message}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "agg": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d73453e-bffb-3795-8118-af621a21aaac": {
      "content": "image::${1:example.jpg}[${2:Description},align=\"center\"]\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Centered image::file[desc]",
      "matches": {
        "imagecenter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0d7376ad-50dc-3a10-9169-9768d6ab3c91": {
      "content": "import { connect } from 'react-redux'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import redux statement",
      "matches": {
        "redux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0d7a69f2-31c8-31e0-a26e-923f5027b885": {
      "content": "${1:deferred}.promise(${2:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprom": true
      },
      "source": "snippets/coffee"
    },
    "0d9ad65f-a50d-3b2e-bb5b-52cb3bbf1b02": {
      "content": "${1:obj}.wrap('${2:&ltdiv class=\"extra-wrapper\"&gt&lt/div&gt}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrap": true
      },
      "source": "snippets/coffee"
    },
    "0d9adf67-d042-3dfe-bf9f-3731d5cdc1fd": {
      "content": "<#local\n\t${1:variable_name} = ${0:value${VISUAL}}\n/>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#local <#-- multiple lines --> />",
      "matches": {
        "locm": true
      },
      "source": "vim-snippets/snippets"
    },
    "0d9d130f-77f2-370a-bc53-4b1507c15c37": {
      "content": "#if ${1}\n  ${2:TARGET}\n#endif",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "#if .. #endif",
      "matches": {
        "#if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0dad97b2-25da-3351-8189-010a9e61cfb4": {
      "content": "list-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0db1ac36-753e-36b8-bea8-014c2f7fd162": {
      "content": "(${1:arguments}) => {\n\t${0}\n}",
      "doc": "arrow function with body (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "arrow-function-with-body-es6-",
      "matches": {
        "base function arrow body": true
      },
      "source": "javascript/base"
    },
    "0dbb0a9e-89b0-308c-abd2-83cb22bd886f": {
      "content": "background-clip border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0dbe471b-ee24-3a7b-88a3-5158fc6cf28a": {
      "content": "${1:expression} unless ${2:condition};\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional one-line (unless)",
      "matches": {
        "xunless": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0dc1d432-0156-3111-907e-9a1cbc064e81": {
      "content": "<?php\nclass ${1:ModelName} extends ${2:CActiveRecord}\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @return CActiveRecord the static model class\n\t */\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '${0:table_name}';\n\t}\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n\t/**\n\t * @return array customized attribute labels (name=&gt;label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ymodel": true
      },
      "source": "vim-snippets/snippets"
    },
    "0dd69f46-da44-3cbb-b7e5-88f8f8ff2510": {
      "content": "xhr :post, :${1:create}, ${2:object}: { $3 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr post",
      "matches": {
        "xpost": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0dd8a32f-d9eb-3f66-be32-a74aec8e1319": {
      "content": "{% set ${1} %}\n\t${0}\n{% endset %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig set block",
      "matches": {
        "setb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0de1d268-24c8-325f-bc21-7d0cde462d7c": {
      "content": "JSON.parse(${0:jstr});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsonp": true
      },
      "source": "snippets/javascript"
    },
    "0de779be-7596-3b98-8d69-6695217a37e5": {
      "content": "ci(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "ci conventional commit",
      "matches": {
        "ci": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0dea7cbf-b95e-363b-8976-edd05ca475d7": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}}, ${7:fixed = ${8:TRUE}})",
      "doc": "Grep logical",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grepl",
      "matches": {
        "grepl": true
      },
      "source": "vscode-R/snippets"
    },
    "0dfa38f6-6c29-364d-9035-69143ae25cf3": {
      "content": "def __eq__(self, other):\n\t${1:pass}\ndef __ne__(self, other):\n\t${2:pass}\ndef __lt__(self, other):\n\t${3:pass}\ndef __le__(self, other):\n\t${4:pass}\ndef __gt__(self, other):\n\t${5:pass}\ndef __ge__(self, other):\n\t${6:pass}\ndef __cmp__(self, other):\n\t${7:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing rich comparison",
      "matches": {
        "cmp": true
      },
      "source": "vim-snippets/snippets"
    },
    "0dfa442b-5b43-3cf9-abd6-47d74115676a": {
      "content": "validates_inclusion_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of",
      "matches": {
        "vi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e0742ba-f824-376c-8afa-6d502b474cc9": {
      "content": "match ${1:TARGET} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e0d7df0-ba61-353e-b922-0c59010185fb": {
      "content": "[self lockFocus];\n${0}\n[self unlockFocus];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e1263e1-25ba-3724-b5d5-69c4a6728ed4": {
      "content": "${1:emitter}.on('${2:event}', (${3:arguments}) => {\n\t${0}\n});",
      "doc": "event handler",
      "filetype": "base",
      "grammar": "lsp",
      "label": "event-handler",
      "matches": {
        "base event handler": true
      },
      "source": "javascript/base"
    },
    "0e1a35de-624d-3be0-8fb0-ff6e437b4984": {
      "content": "?assertError(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aserr": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e1ac47a-22ce-339f-b838-19bc030187ac": {
      "content": "text-outline: ${1:0} ${2:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e1ef61e-c023-30e9-afd2-9872c1da9a66": {
      "content": "{:else}\n\t${1: <!-- else content here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-block",
      "matches": {
        "svelse": true,
        "svelte else": true
      },
      "source": "javascript/svelte"
    },
    "0e2e4651-b290-3a5d-801a-ee4fc5c7bd12": {
      "content": "(unless ${1} ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e311ff2-c28b-37df-aec2-aed4b28f6c15": {
      "content": "after :${1:each} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aft": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e3e16b8-3e43-37fc-b2e6-1b041821410e": {
      "content": "$.cssHooks['${1:CSS prop}'] = {\n\tget: function (elem, computed, extra) {\n\t\t${2: // handle getting the CSS property}\n\t},\n\tset: function (elem, value) {\n\t\t${0: // handle setting the CSS value}\n\t}\n};",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csshooks": true
      },
      "source": "snippets/javascript"
    },
    "0e3eaaf9-86f1-3ccc-86de-7edadf6baa36": {
      "content": "var ${1:function_name} = function (${2:argument}) {\n\t${3}\n\t$1 = function ($2) {\n\t\t${0:${VISUAL}}\n\t};\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdf": true
      },
      "source": "snippets/javascript"
    },
    "0e4e2048-39ab-3788-84b3-2e99a58a4ed0": {
      "content": "${1:expression} while ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xwh": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e526b51-4978-3d92-82a8-f4ef47504cf8": {
      "content": "<ol type=\"I\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "olI": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e5ea55a-5df9-3790-b104-923c00ecef34": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      },
      "source": "vscode-react/snippets"
    },
    "0e60be24-698b-38fd-8160-ee0d6bc7d091": {
      "content": "display table-header-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e61e4c7-4bc1-3c3e-a354-da03e69a42d2": {
      "content": "mixed.notRequired()",
      "doc": "mixed.notRequired(): Schema\n\nMark the schema as not required. Passing undefined as value will not fail validation.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-not-required",
      "matches": {
        "yup mixed notrequired": true
      },
      "source": "javascript/yup"
    },
    "0e65616a-f3cc-326a-a9c4-d6e156050abf": {
      "content": "fn ${1:#:func_name}(${2:#:args}) -> ${3:#:()} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "fn () {}",
      "matches": {
        "fn-": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e722f95-ac8a-39e5-8e38-42ecd8f65238": {
      "content": "_.intersectionWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.intersectionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }]\n\nThis method is like `_.intersection` except that it accepts `comparator`\nwhich is invoked to compare elements of `arrays`. The order and references\nof result values are determined by the first array. The comparator is\ninvoked with two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersectionwith",
      "matches": {
        "lodash intersectionwith": true
      },
      "source": "javascript/lodash"
    },
    "0e7829d8-c0bb-3cc6-848d-0cb9208d1436": {
      "content": "font-emphasize-style dot",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e78ab1a-d4d1-3f63-8775-81812f490e31": {
      "content": "prop parent : app \"${1}\"",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e835cd0-bb41-3abc-9848-28f32e130ff4": {
      "content": "companion object {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cobj": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e875931-2b21-32e0-849f-f7d0e908c4e4": {
      "content": "\\SI{${1:${VISUAL}}}{${2}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "SI-Unit",
      "matches": {
        "SI": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0e9067f0-3bdf-37fb-afb2-2694756d14ea": {
      "content": "?assert(${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "0e914c7b-9ff8-3624-b8d0-26ae1bbbcd1d": {
      "content": "${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parentsu": true
      },
      "source": "snippets/coffee"
    },
    "0e91bf69-39b4-33e9-8c6c-df1e46227f05": {
      "content": "beforeEach(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "before each (js)",
      "matches": {
        "bef": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0e9689f9-bfcf-3f48-a1c2-04cd8100c195": {
      "content": "def ${1:#:method_name}\n  ${2:TARGET}\nrescue ${3:#:StandardError} => ${4:error}\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "def ... rescue ... end",
      "matches": {
        "defr": true,
        "defrescue": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0e9956f1-f8fc-369d-b0ac-3b16ca55cd54": {
      "content": "margin-left: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-left": true,
        "ml": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0ea265f2-053f-3a7a-88af-c9203913c74e": {
      "content": "import ${1:module}\n${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0eacfd17-d818-3a7c-9cf8-38fde3d373a3": {
      "content": "${1:deferred}.fail(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dfail": true
      },
      "source": "snippets/coffee"
    },
    "0eacffb0-a662-3afc-b099-b91a6ff84315": {
      "content": "try {\n\t${1:TARGET}\n} catch (${2:#:Exception} $e) {\n\t${3:#:code}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0eba0964-36ee-3dbf-9b9c-717d4ae71593": {
      "content": "echo CHtml::cdata(${0:text});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhc": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ebad3a4-0bda-352d-bd15-a98e342e64ec": {
      "content": "${1:obj}.clearQueue(${2:'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clearq": true
      },
      "source": "snippets/coffee"
    },
    "0ec16411-8358-3cf8-af0c-0062d461f9a3": {
      "content": "out${1:(result)}\n{\n\tassert(${2:/*condition*/}, \"${3:error message}\");\n\t$4\n}\nbody",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "out contract (out)",
      "matches": {
        "out": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0ec220b4-7713-38fc-bbe6-c67e7efc0596": {
      "content": "expect($1).toBeFalsy();$0",
      "doc": "expects the argument is falsy",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobefalsy",
      "matches": {
        "jest expect tobefalsy": true,
        "tbf": true
      },
      "source": "javascript/jest"
    },
    "0ec4f619-4fd6-342c-9f37-26a5c1fde885": {
      "content": "page-break-after: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ed3352e-474b-3e24-9e90-526aeb8b0704": {
      "content": "display flex",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ede2549-fe86-3459-ac94-79e669f95c9d": {
      "content": "text-emphasis ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ee48c67-1855-3d25-878b-34d2728d6515": {
      "content": "\\\\subsubsection*{${1:subsubsection name}}%\n\\\\label{ssub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsubsection*",
      "matches": {
        "ssub*": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ee52adf-f5ab-3296-baad-fbd7874c8527": {
      "content": "border-style: dotted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ef6b18c-0d8e-3954-b8c1-caed6ece520e": {
      "content": "static if(${1:cond}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sif": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ef95750-89ed-3ea9-a71c-ee5a6867962e": {
      "content": "image::${1:example.jpg}[${2:Description}]\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "image::file[desc]",
      "matches": {
        "image": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0ef970c0-ebf9-3c43-9e5b-f1c9ae5ee148": {
      "content": "<strong>${1:TARGET}</strong>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0efffb8c-ab08-3305-b1a7-43d68b3a69be": {
      "content": "$.parseXML(${1:data})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsexml": true
      },
      "source": "snippets/javascript"
    },
    "0f0d9f33-0ac6-32c3-8422-404aa7c7632b": {
      "content": "border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f17032e-60dc-33c0-a479-e570581c4a41": {
      "content": "font-variant: small-caps",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f22d04c-3372-30d8-95d3-61ac61066de2": {
      "content": "// set the current texture coordinates - 2 floats\ngl.glTexCoord2f(${1:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl tex coord 2f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f22ec08-e780-3f7a-9ff9-ce08587b68b7": {
      "content": "this.props.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "this props",
      "matches": {
        "tp": true
      },
      "source": "snippets/javascript"
    },
    "0f23f45e-3849-32e7-adda-382ca8fc03fe": {
      "content": "const (\n\t${1:NAME} ${2:Type} = ${3:value}\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... )",
      "matches": {
        "cons": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "0f264404-38cb-31b2-8700-ff35dbcc071c": {
      "content": "constructor( @Optional() @SkipSelf() parentModule: ${1:ModuleName} {\n\tif (parentModule) {\n\t\tconst msg = `${1:ModuleName} has already been loaded. \n\t\t\tImport ${1:ModuleName} once, only, in the root AppModule.`;\n\t\tthrow new Error(msg);\n\t}\n}",
      "doc": "Angular Module SkipSelf constructor",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-module-skipself-constructor",
      "matches": {
        "a-ctor-skip-self": true,
        "angular module skip self constructor": true
      },
      "source": "javascript/angular"
    },
    "0f2ebd97-c908-3453-9447-2fcd00f2a2f3": {
      "content": "[${1:id}]: mailto:${2:email} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:@": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f2ff50f-58ca-3b7a-b4ea-cffd5f8ca29c": {
      "content": "prevScene();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0f31a412-7bac-3e6c-a84f-0fcf03f02cfc": {
      "content": "overflow-y scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f383e54-e676-37bf-b23b-9e8b686f781c": {
      "content": "text-align-last: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f40c523-dbee-3a42-8c65-cf8a708a3127": {
      "content": "align-content: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f4da423-c307-3232-aa9c-399fedfd99d3": {
      "content": "<style scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with CSS scoped",
      "matches": {
        "style_with_CSS_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0f524808-89c1-3647-ad5b-86f789c34ed6": {
      "content": "watch(() => ${1:foo}, (newValue, oldValue) => {\n\t${2}\n})",
      "doc": "Vue Composition api - watcher single source",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watch - single source",
      "matches": {
        "v3watch": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "0f525685-8ac3-3973-bc4e-a385f7a7bf70": {
      "content": "_.flip(${func})",
      "doc": "var flipped = _.flip(function() {\n  return _.toArray(arguments);\n});\n\nflipped('a', 'b', 'c', 'd');\n// => ['d', 'c', 'b', 'a']\n\nCreates a function that invokes `func` with arguments reversed.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flip",
      "matches": {
        "lodash flip": true
      },
      "source": "javascript/lodash"
    },
    "0f545526-f9c2-3222-a59c-35ef2b7cf42a": {
      "content": "<input type=\"image\" name=\"${1}\" id=\"${2:$1}\" src=\"${3}\" alt=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:image": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f547a01-825c-317c-94ee-f98d9c1b1194": {
      "content": "console.log(${1:object});",
      "doc": "Displays a message in the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLog",
      "matches": {
        "clg": true
      },
      "source": "vscode-javascript/snippets"
    },
    "0f54af13-8dda-336e-8f10-b20cab3b5e39": {
      "content": "place-items: ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f59e4c0-2b62-3f0c-bb56-fa53aa204623": {
      "content": "white-space-collapse: loose",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f767031-3f48-3b43-a0d3-530705bbc8d6": {
      "content": "for (var ${2:i} = 0, len = ${1:things}.length; $2 < len; ${3:++}$2) {\n  ${0:$1[$2]}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f77722f-5661-3db7-a22d-9366a883471d": {
      "content": "import { Switch } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router - Switch",
      "matches": {
        "imbrs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "0f8151b3-11d7-318b-9fd7-5a9f0c7a2299": {
      "content": "border-left-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blc": true,
        "border-left-color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0f88e338-7a70-3bef-9418-b0b1cbe86997": {
      "content": "overflow-y: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "0f9ab4b7-332f-33c5-96a7-1b83fd76b3a2": {
      "content": "<h4>${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fa97478-4d5a-3e71-b779-db3a3e35022b": {
      "content": "setup_all do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setupa": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fba35a8-dec5-3329-b585-3b6ea0991ff3": {
      "content": "float: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fba94f4-686f-353c-b1d6-500a76aa6428": {
      "content": "${1:obj}.text(${2:'some text'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      },
      "source": "snippets/coffee"
    },
    "0fbaf702-26a0-3094-a1b2-ca335c2fb804": {
      "content": "console.info(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.info",
      "matches": {
        "ci": true
      },
      "source": "snippets/javascript"
    },
    "0fbbb358-9e98-3410-af8c-1c5291bc113c": {
      "content": "import React, { PureComponent } from 'react'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-purecomponent",
      "matches": {
        "imrpc": true,
        "react import purecomponent": true
      },
      "source": "javascript/react"
    },
    "0fbf5f19-b7ce-3fa4-9e36-3407703b3e5e": {
      "content": "const ${1:results} = await ${2:client}.request(\n  ${3:query}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client-request",
      "matches": {
        "graphql-request client request": true
      },
      "source": "javascript/graphql-request"
    },
    "0fc3f8ee-d700-31ce-ab42-60ffc026a03b": {
      "content": "**${1:#:text}**",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0fc71542-c2b2-3d26-85a0-98501af50471": {
      "content": "${fn:substringBefore(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fcdebf8-76b1-302e-8153-dd4a1ae83fad": {
      "content": "record\n\t${0}\nend record;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "record",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fd6b858-4785-38b6-ab17-e99d643fa8a6": {
      "content": "curveVertex(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "curveVertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fd971ea-ed90-30dd-b7bd-84e98fbdd9bb": {
      "content": "rotate${1:X}(${0:angle});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rotate": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fded3d2-347c-39ec-9bc4-52d4fd8bb8be": {
      "content": "INSERT INTO ${1:cities}\nVALUES (${0:'Vancouver', 'Canada'});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "INSERT INTO ... VALUES ( ... )",
      "matches": {
        "INSERT_DATA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "0fe07d53-67b2-3cf2-b104-61f4cbfa2417": {
      "content": "refute_operator ${1:left}, :${2:operator}, ${3:right}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfo": true
      },
      "source": "vim-snippets/snippets"
    },
    "0fe21800-7864-30c8-add5-947d29591c1d": {
      "content": "import * as ${2:alias} from '${1:module}';$0",
      "doc": "Imports everything as alias from the module in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importEverything",
      "matches": {
        "ime": true
      },
      "source": "vscode-javascript/snippets"
    },
    "0fec020c-94f1-3f68-9fd2-2446536202ab": {
      "content": "\\${${1:name}}=    Catenate    SEPARATOR=${2:---}    ${3:Hello}    ${4:world}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Catenate",
      "matches": {
        "cat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "0ff28bc6-2620-3017-a87f-551eb6fe5f8a": {
      "content": "(deftest ${1:name}\n\t(is (= ${0:assertion})))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deft": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ff531ba-8ffc-33c8-8396-5aa05de99df0": {
      "content": "filter progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "0ffb8ed8-e2d7-34e8-a6b6-4459f8855b48": {
      "content": "each_with_object(${1:init}) do |${2:e}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawod": true
      },
      "source": "vim-snippets/snippets"
    },
    "10011c0b-b681-3d48-a201-222dc4a5db9e": {
      "content": "white-space-collapse: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1010dce3-481f-3fba-993d-fd8a26adaa7f": {
      "content": "display: table-footer-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      },
      "source": "vim-snippets/snippets"
    },
    "101aaf08-5706-3417-ab1b-41f37db907e7": {
      "content": "afterEach ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "after each (coffee)",
      "matches": {
        "aft": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "101b57ca-5842-3b1a-8ba4-65c4da04ca28": {
      "content": "console.trace(${1:object});",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletrace",
      "matches": {
        "base console trace": true
      },
      "source": "javascript/base"
    },
    "1021875a-595d-33b8-b944-3d3f07b4cffb": {
      "content": "<textarea name=\"${1}\" id=\"${2:$1}\" rows=\"${3:8}\" cols=\"${4:40}\">${5}</textarea>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      },
      "source": "vim-snippets/snippets"
    },
    "10410ab2-0bc4-33fe-81b9-8e9e09e055df": {
      "content": "${1:function_name}() {\n\t${0:# function_body}\n}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "104aa82c-fc09-367f-8968-a7375928225c": {
      "content": "for ${1:#:value} in ${2:#:list}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "for ... in ...: ...",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "104d6ce0-5cbe-373d-87af-3b422242a6f7": {
      "content": "@click=\"${1}\"",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "10599922-c4eb-3bd7-81df-abe5313af539": {
      "content": "break",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "break",
      "matches": {
        "br": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "105a1703-868b-3e0c-bbb3-9923c72ce77c": {
      "content": "justify-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "1062414b-6b0d-3675-a53e-96d4d6792b35": {
      "content": "fmt.Printf(\"${1}\\n\"${2:})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true,
        "printf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "10752265-ea80-3a2f-9123-97027f43ebcc": {
      "content": "expect($1).toMatchObject($0);",
      "doc": "returns true if the argument matches the second object",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchobject",
      "matches": {
        "jest expect tomatchobject": true,
        "tmo": true
      },
      "source": "javascript/jest"
    },
    "1089653b-5173-3dc5-842e-1508a260bc42": {
      "content": "display: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "108c82f6-43b6-3046-bcc8-9628227a92ad": {
      "content": "place-content ${1} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      },
      "source": "vim-snippets/snippets"
    },
    "10927829-7ba0-34f5-9cc6-6dff2d492f7b": {
      "content": "Mouse Down On Link    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down On Link",
      "matches": {
        "mdol": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1097b752-6bcb-3a0c-9691-2d54742b48f4": {
      "content": "{% blockquote %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      },
      "source": "vim-snippets/snippets"
    },
    "10b6aa75-65ec-3c0f-a2b4-b10e170592d3": {
      "content": "File.read(${1:'path/to/file'})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.read()",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "10b99b86-654b-3129-b3ce-7e095aeba38c": {
      "content": "fmt.Printf(\"$1 = %+v\\n\", ${1:${VISUAL}})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(...)",
      "matches": {
        "ff": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "10bf3a9c-1d5a-3f71-8841-1742af5a5668": {
      "content": "= render :partial => \"${1:item}\", :locals => { :${2:$1} => ${0:@$1} }",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      },
      "source": "vim-snippets/snippets"
    },
    "10c1cb52-d80e-3b0c-a9db-5d695b9eb56e": {
      "content": "my ${1:$var} = \"${2:filename}\".IO.slurp;",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slurp": true
      },
      "source": "vim-snippets/snippets"
    },
    "10c30ce7-1e12-3dee-97b9-f01b550d105d": {
      "content": "covergroup ${1:group_name} @(${2:posedge} ${3:clk});\n\t${0}\nendgroup : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cg": true
      },
      "source": "vim-snippets/snippets"
    },
    "10c31ef4-cb37-358a-87ba-82e1bf899ffa": {
      "content": "_.propertyOf(${object})",
      "doc": "var array = [0, 1, 2],\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n// => [2, 0]\n\nThe opposite of `_.property`; this method creates a function that returns\nthe value at a given path of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-propertyof",
      "matches": {
        "lodash propertyof": true
      },
      "source": "javascript/lodash"
    },
    "10cbbf64-551e-32b3-9006-d403ce20908a": {
      "content": "var ${1:var} = struct{\n\t${2:name} ${3:type}\n}{\n\t$2: ${4:value},\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Grouped globals with anonymous struct",
      "matches": {
        "gg": true
      },
      "source": "vim-snippets/snippets"
    },
    "10d6a65e-ab6e-3720-9d8d-a047a81d4fa8": {
      "content": "typeof ${0}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "typeof",
      "matches": {
        "tpf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "10dd35b2-6c69-3a06-b983-2233fb07d420": {
      "content": "Set Test Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Test Variable",
      "matches": {
        "stv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "10e700d0-6c43-3c3c-af6c-789ef284ed81": {
      "content": "_.uniq(${array})",
      "doc": "_.uniq([2, 1, 2]);\n// => [2, 1]\n\nCreates a duplicate-free version of an array, using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons, in which only the first occurrence of each element\nis kept. The order of result values is determined by the order they occur\nin the array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniq",
      "matches": {
        "lodash uniq": true
      },
      "source": "javascript/lodash"
    },
    "10ea8914-f77c-3b7a-b594-7cf9a5bfea8c": {
      "content": "background-repeat: repeat-x;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      },
      "source": "vim-snippets/snippets"
    },
    "10effdc3-dbeb-3d2b-8b0b-57b29cd30ab3": {
      "content": "Capture Page Screenshot    ${1:${optional filename}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Capture Page Screenshot",
      "matches": {
        "cps": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1110cd22-531b-3bd7-bf4e-650c101f75af": {
      "content": "for ${1:name} in ${2:array}\n\tlet $1\n\t\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forinlet": true
      },
      "source": "vim-snippets/snippets"
    },
    "1112123e-4d1f-39e4-b11b-82615e95f039": {
      "content": "border-top-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "111a822d-c508-3fe1-8b1f-0eb846971502": {
      "content": "grid-row-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      },
      "source": "vim-snippets/snippets"
    },
    "11275133-35dd-35cd-a18c-b03cfa5fd672": {
      "content": "flex-wrap: wrap-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:wr": true
      },
      "source": "vim-snippets/snippets"
    },
    "1128a71a-5ffd-363e-8b08-255fbb74b531": {
      "content": "enum ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "enum NAME {...}",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "112c0b1d-f582-3c56-9fc4-2e0d94f7f0ee": {
      "content": "font-stretch extra-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      },
      "source": "vim-snippets/snippets"
    },
    "112c1707-c807-39b1-88c7-27c1240e9cc6": {
      "content": "receive do\n\t${1} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "113610bb-14c5-3f08-89ff-abc7baf38bcb": {
      "content": "max-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      },
      "source": "vim-snippets/snippets"
    },
    "1136959d-a412-33c3-9cb5-32f96fbf7c9d": {
      "content": "${1:obj}.fadeIn('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadein": true
      },
      "source": "snippets/javascript"
    },
    "1139c77a-ec23-3062-b235-3ce0516c0a74": {
      "content": "for (let ${1:i} = ${2:iterable}.length - 1; ${1:i} >= 0; ${1:i}--) {\n\t${0}\n}",
      "doc": "reverse for loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "reverse-for-loop",
      "matches": {
        "base for reverse": true
      },
      "source": "javascript/base"
    },
    "113aa2e0-f4b7-38ee-80f9-242ad9625008": {
      "content": "python3 << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "python3 <<EOF | EOF",
      "matches": {
        "py3": true,
        "python3": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "113cc7b3-54cc-363f-adbf-0a1604b7e33b": {
      "content": "${pageContext.request.contextPath}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cpath": true
      },
      "source": "vim-snippets/snippets"
    },
    "1145780f-0802-39a7-a956-ebf0c833dc04": {
      "content": "min-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      },
      "source": "vim-snippets/snippets"
    },
    "114f0bb1-4b1b-3fbc-a122-169ff382f063": {
      "content": "character(len=${1:*}) :: ${0:}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      },
      "source": "vim-snippets/snippets"
    },
    "11506dba-c25a-35e9-8705-6fba38e3ef3e": {
      "content": "with ${1}\ndo\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "with .. do .. end",
      "matches": {
        "with": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11592be9-3a2e-35b4-a26d-f9600326157c": {
      "content": "<dt>${1}</dt>\n<dd>${2}</dd>\ndt+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "115b4007-2655-371c-a344-e2a22a576ac4": {
      "content": "import qualified ${1:Data.Text} as ${0:T}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "importq": true
      },
      "source": "vim-snippets/snippets"
    },
    "11623157-6525-3a77-bca0-0849376da248": {
      "content": "{% block ${1:blockname} %}${VISUAL}{% endblock $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iblock": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "11663732-9eff-3d3c-b54d-308eac322a70": {
      "content": "import { NgModule } from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\n\nimport { ${1:App}Component } from './${1:app}.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n\t],\n\tdeclarations: [${1:App}Component],\n\tbootstrap: [${1:App}Component],\n})\nexport class ${1:App}Module { }\n$0",
      "doc": "Angular Root Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Root Module",
      "matches": {
        "a-module-root": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "11700882-8367-3f6d-9612-a4e62cc10f9a": {
      "content": "<strong>${0}</strong>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      },
      "source": "vim-snippets/snippets"
    },
    "117ecdea-8909-3719-8a37-b946302f1069": {
      "content": "place-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "1181b854-61df-3fd9-a22d-c5259bc8d482": {
      "content": "foreach(${1:item} ${2:items})\n\t${3}\nendforeach($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "foreach() endforeach()",
      "matches": {
        "foreach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11861c02-6e0a-380c-b03c-1d9039b99c74": {
      "content": "def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "1187e6d4-7995-3c6d-a60b-61b2d717c08b": {
      "content": "mounted () {\n\t${0};\n},",
      "doc": "mounted lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle mounted",
      "matches": {
        "vmounted": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "1194c7d2-0bb9-33a6-bc90-4858d8e0128b": {
      "content": "${1:obj}.hasClass('${2:className}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasc": true
      },
      "source": "snippets/javascript"
    },
    "1195b635-81c9-31c6-ab39-bf91823719ca": {
      "content": "_.join(${array}, ${separator})",
      "doc": "_.join(['a', 'b', 'c'], '~');\n// => 'a~b~c'\n\nConverts all elements in `array` into a string separated by `separator`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-join",
      "matches": {
        "lodash join": true
      },
      "source": "javascript/lodash"
    },
    "119aaa10-c0a3-3467-80b0-9ee7e4b74c10": {
      "content": "import React from 'react'\n\nexport const ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactArrowFunctionComponent",
      "matches": {
        "rafc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "119c7a8e-b1f7-3e03-9fd7-2ddc87c476ca": {
      "content": "export const ${1:functionName} = (${2:params}) => {\n\t$0\n};\n",
      "doc": "Export named function in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportnamedfunction",
      "matches": {
        "base export named function": true
      },
      "source": "javascript/base"
    },
    "11a09a3f-0c50-3073-beec-55a6c2a9e2ec": {
      "content": "white-space-collapse: loose;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "11a261ab-6f77-34ed-aa05-cf80d897b14c": {
      "content": "border-bottom-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      },
      "source": "vim-snippets/snippets"
    },
    "11a6fb4f-0c4e-358d-83d8-0f1c811bbc19": {
      "content": "message(\"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(\"...\")",
      "matches": {
        "message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11a7acbb-b5c9-3d3a-8a01-7b5a1fcc7bc5": {
      "content": "<%= submit ${1:\"Submit\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "submit",
      "matches": {
        "sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "11ad9363-bb61-3eba-9fe7-50fe5d343331": {
      "content": "| size",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      },
      "source": "vim-snippets/snippets"
    },
    "11b54727-d82d-3ff1-ae97-92466be8f110": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "Invoked before rendering when new props or state are being received. ",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "11b9736c-d749-3730-889c-098e2e5150ce": {
      "content": "while (${1:/* condition */}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "11c5789e-ac6d-3c40-9a98-550351d1db8b": {
      "content": "div(ng-hide='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      },
      "source": "vim-snippets/snippets"
    },
    "11ca7e8a-68ae-340a-b0e9-4469fdc4dc39": {
      "content": "def update\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\trespond_to do |format|\n\t\tif @$1.update($1_params)\n\t\t\tflash[:notice] = '$2 was successfully updated.'\n\t\t\tformat.html { redirect_to(@$1) }\n\t\t\tformat.json  { head :ok }\n\t\telse\n\t\t\tformat.html { render action: 'edit' }\n\t\t\tformat.json  { render json: @$1.errors, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defupdate": true
      },
      "source": "vim-snippets/snippets"
    },
    "11cd5455-90b5-3dfe-96d5-f076798f1107": {
      "content": "<?php ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      },
      "source": "vim-snippets/snippets"
    },
    "11ce6f24-dbca-3947-9935-0d41bbcf8a52": {
      "content": "concat(${1:array1}, ${0:array2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "concat": true
      },
      "source": "vim-snippets/snippets"
    },
    "11d0cf4f-fc5d-339b-a33f-986bf29ea421": {
      "content": "${1:obj}.focus(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      },
      "source": "snippets/javascript"
    },
    "11e0b9b7-13df-3852-93ca-c4b9e8ff8726": {
      "content": "list-style-position: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-position": true,
        "lsp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11e532e7-59e5-3ef1-b983-d4e60a8b7de9": {
      "content": "extlookup(\"${1:variable}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Simple extlookup",
      "matches": {
        "extlookup": true
      },
      "source": "vim-snippets/snippets"
    },
    "11f48272-073a-3799-8791-c24ce06fbf31": {
      "content": "font-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "11f54ffc-b600-3441-abd7-32aa2a651a00": {
      "content": "<xsl:with-param name=\"${1:name}\" select=\"${0:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "with-param": true
      },
      "source": "vim-snippets/snippets"
    },
    "11fdc8cc-b41a-3498-bcec-ff5de11ab203": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare block",
      "matches": {
        "declare": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11fe063d-248b-3d5d-a6ce-8d08b6ce2094": {
      "content": "reinterpret_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "reinterpret_cast<>()",
      "matches": {
        "reinterpret_cast": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "11ffb186-ba2b-3648-a4b0-15c091e4946b": {
      "content": "_.bind(${func}, ${thisArg}, ${partials})",
      "doc": "function greet(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n}\n\nvar object = { 'user': 'fred' };\n\nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n\n// Bound with placeholders.\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'\n\nCreates a function that invokes `func` with the `this` binding of `thisArg`\nand `partials` prepended to the arguments it receives.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\nproperty of bound functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bind",
      "matches": {
        "lodash bind": true
      },
      "source": "javascript/lodash"
    },
    "1204fb0e-8d8a-3e4e-8ac1-58713cf7fce2": {
      "content": "$this->db->insert(\"${1:table}\", $${2:data});${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-insert": true
      },
      "source": "vim-snippets/snippets"
    },
    "1207ee4d-e05c-3e92-b411-980ba50876c8": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "1208c99a-9af0-3bfa-88c4-9e9ccb3f24be": {
      "content": "print(${1:x}, ${2:...})",
      "doc": "Print",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pri",
      "matches": {
        "print": true
      },
      "source": "vscode-R/snippets"
    },
    "120a6506-a04c-38cd-8d2d-cde683c90170": {
      "content": "return ${0};",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "12104c0b-f8e9-3b7a-ad41-dfef4169a2c7": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% else %}\n\t$3\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1218bcbe-4c88-3e42-9e2e-3c22a5c7ec83": {
      "content": "$_POST['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "_POST array",
      "matches": {
        "P": true
      },
      "source": "vim-snippets/snippets"
    },
    "12193915-e939-3e05-90c4-c20cadf1c128": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}\"${0}",
      "doc": "Angular *ngFor",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngfor",
      "matches": {
        "a-ngfor": true,
        "angular ng for": true
      },
      "source": "javascript/angular"
    },
    "1221c552-57e8-3297-9d11-827d6eb60a50": {
      "content": "${1:obj}.after('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "after": true
      },
      "source": "snippets/coffee"
    },
    "1223e47d-a188-3c82-8653-a4a5c7f23825": {
      "content": "mutable.HashMap[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mhmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "1227b569-3a61-3796-81a9-04b08d782e89": {
      "content": "def ${1:#:name}(${2}):\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def function(...): ...",
      "matches": {
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "124559f5-bd56-3888-95ea-894d082c8f55": {
      "content": "text-justify: kashida;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "125049b6-a9f2-3205-9580-0931bdf44fda": {
      "content": "grid-auto-flow: column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "125a6499-6c8c-32aa-8844-c6927d5b05ac": {
      "content": "extern crate ${1:sync};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "125c6ace-55e8-330f-b171-07631769d2a3": {
      "content": "specular(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "specular": true
      },
      "source": "vim-snippets/snippets"
    },
    "1267bf27-b450-39bb-871b-3e8a9b411cf7": {
      "content": "${1:FIELDNAME} = forms.EmailField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "EmailField",
      "matches": {
        "fmail": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "126aaa09-7189-3493-b2b5-c4a591dc226a": {
      "content": "acos(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "acos": true
      },
      "source": "vim-snippets/snippets"
    },
    "126ab094-56b5-3b96-ae76-7e40bc18442d": {
      "content": "- (void)addObjectTo${1:#:Things}:(${2:#:id})anObject\n{\n\t[${3}} addObject:anObject];\n}\n- (void)insertObject:($2)anObject in$1AtIndex:(unsigned int)i\n{\n\t[${3} insertObject:anObject atIndex:i];\n}\n- (${2})objectIn${1}AtIndex:(unsigned int)i\n{\n\treturn [${3} objectAtIndex:i];\n}\n- (unsigned int)indexOfObjectIn${1}:(${2})anObject\n{\n\treturn [${3} indexOfObject:anObject];\n}\n- (void)removeObjectFrom${1}AtIndex:(unsigned int)i\n{\n\t [${3} removeObjectAtIndex:i];\n}\n- (unsigned int)countOf${1}\n{\n\treturn [${3} count];\n}\n- (NSArray${4: *}${1}\n{\n\treturn ${3}\n}\n- (void)set${1}:(NSArray${4: *})new${1}\n{\n\t[${3} setArray:new${1}];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "KVCArry",
      "matches": {
        "karray": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "126efce0-053e-3410-94eb-57972d6dbe2e": {
      "content": "{% autoescape %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig autoescape",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/snippets"
    },
    "12727461-4ff8-3543-a30a-4d1ba40fa1ca": {
      "content": "${1:dfname} <- read.csv(file = \"${2:file}\", header = ${3|TRUE,FALSE|},  sep = \"${4|\\,,;|}\", row.names = ${5:NULL},  stringsAsFactors = ${6|FALSE,TRUE|})",
      "doc": "Read a data table from a comma-separated file (CSV) and create a data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Read CSV",
      "matches": {
        "readc": true
      },
      "source": "vscode-R/snippets"
    },
    "12770a6c-9aa6-3786-9e37-e0151a88bd49": {
      "content": "remove_column :${1:table}, :${2:column}${3: [press tab twice to generate add_column]}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Remove and Add Column (mrac)",
      "matches": {
        "mcol": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "12776df8-1a75-344f-a146-bcb8380ff2e1": {
      "content": "arrayCopy(${1:src}, ${2:dest}, ${3:, }${0:length});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arrayCopy": true
      },
      "source": "vim-snippets/snippets"
    },
    "127ea7e3-bbbc-314a-b375-c2a59163d6cf": {
      "content": "${1:obj}.ajaxSend (${1:request, settings}) ->\n\t${2:// error callback}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsend": true
      },
      "source": "snippets/coffee"
    },
    "12847e3a-8c68-32d8-81c0-5db400c71a95": {
      "content": "{% load ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      },
      "source": "vim-snippets/snippets"
    },
    "12894f06-da76-3a7e-80a3-709c723887b7": {
      "content": "hmap",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "HashMap",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "128afd6c-41bf-3779-9a60-afbdb69fe4b0": {
      "content": "${1:component}(:${1:propName}=\"${0}\")",
      "doc": "component element with props",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Component with Props Binding",
      "matches": {
        "vel-props": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "129e6363-70d2-3186-8e23-93badc148011": {
      "content": "top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "12b3991d-c4fd-361d-b090-28e061a26945": {
      "content": "<dt>${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "12b47667-933d-35b9-b31e-c552d650e5bb": {
      "content": "${1} ? ${2} : ${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      },
      "source": "vim-snippets/snippets"
    },
    "12b660c8-2dde-3fd4-b743-c16fcc5854c8": {
      "content": "_.isError(${value})",
      "doc": "_.isError(new Error);\n// => true\n\n_.isError(Error);\n// => false\n\nChecks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iserror",
      "matches": {
        "lodash iserror": true
      },
      "source": "javascript/lodash"
    },
    "12b77783-995d-3a89-bf65-04e6b5bc80eb": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t}\n},",
      "doc": "Vue Component Data",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-data",
      "matches": {
        "vdata": true,
        "vue data": true
      },
      "source": "javascript/vue"
    },
    "12b7ed34-2ed9-3e52-beb7-58cd34179d2d": {
      "content": "asyncData ({isDev, route, store, env, params, query, req, res, redirect, error}) {\n\treturn { ${1:data} }\n\n},",
      "doc": "Fetch and pre-render data on the server without using a store. The result from asyncData will be merged with data",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-async-data",
      "matches": {
        "nuxt asyncdata": true
      },
      "source": "javascript/nuxt"
    },
    "12bb6be9-efc1-3fe4-b8c8-0405188c523a": {
      "content": "text-justify ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      },
      "source": "vim-snippets/snippets"
    },
    "12cacc00-c11b-3266-aa18-2c34642dbd2e": {
      "content": "# -*- coding: utf-8 -*-\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "?[uU][tT][fF]-?8\" \"# encoding: UTF-8\" r",
      "matches": {
        "\"^#": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "12cb4eab-1901-3df2-bfdd-e57252b6d14c": {
      "content": "(${1:a}, ${2:b}, ${0:c})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup2": true
      },
      "source": "vim-snippets/snippets"
    },
    "12cec4e8-183e-3a71-bd3c-b4e3609ef125": {
      "content": "_.reduceRight(${collection}, ${iteratee}, ${accumulator})",
      "doc": "var array = [[0, 1], [2, 3], [4, 5]];\n\n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]\n\nThis method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reduceright",
      "matches": {
        "lodash reduceright": true
      },
      "source": "javascript/lodash"
    },
    "12cfa9a5-6e66-38ea-aabb-10cac9b48bf1": {
      "content": "methods: {\n\t${1:name}() {\n\t\t${0}\n\t}\n},",
      "doc": "vue method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Methods",
      "matches": {
        "vmethod": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "12d45420-9368-371a-9ca0-cbe06c55a8e0": {
      "content": "docker {\n\timage '${1:myregistry.com/node'}'\n\tlabel '${2:my-defined-label'}'\n\tregistryUrl '${3:https://myregistry.com/'}'\n\tregistryCredentialsId '${4:myPredefinedCredentialsInJenkins'}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "12d73d77-163f-39ef-98e4-fa18d345eb90": {
      "content": "${1:obj}.outerWidth()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerw": true
      },
      "source": "snippets/coffee"
    },
    "12dd0622-a5f0-378b-8e8f-f381e8fd309c": {
      "content": "truncate(lenght=${1:79}, killwords=${2:False}, end=${3:'...''})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "truncate",
      "matches": {
        "truncate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "12e40142-9f38-3b0e-813d-54c108759684": {
      "content": "expect(${1:target}).not.toBeNull();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be null (js)",
      "matches": {
        "notn": true
      },
      "source": "vim-snippets/snippets"
    },
    "12f4756e-7fcb-313d-a94b-c94f0935c7ec": {
      "content": "with(\n\t${1:item} <- ${2:items}\n) do\n\t${3}\nelse\n\t${4} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wie": true
      },
      "source": "vim-snippets/snippets"
    },
    "13007639-84ef-35cd-b5f3-6e8ae472bc0d": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-one-of-type-required",
      "matches": {
        "prop-types oneoftype required": true,
        "ptetr": true
      },
      "source": "javascript/prop-types"
    },
    "13066fb5-3580-353f-9906-78794726ff97": {
      "content": "string.trim()",
      "doc": "string.trim(message?: string | function): Schema\n\nTransforms string values by removing leading and trailing whitespace. If\nstrict() is set it will only validate that the value is trimmed.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-trim",
      "matches": {
        "yup string trim": true
      },
      "source": "javascript/yup"
    },
    "130e8f1f-015b-3752-84eb-15a3a20a258f": {
      "content": "status(${0:text});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "status": true
      },
      "source": "vim-snippets/snippets"
    },
    "13138118-6b88-311d-8e28-f779685eae05": {
      "content": "__global__ void ${1:kernel}(${2:void}) {\n\t${0:// TODO: Implement}\n}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Kernel definition",
      "matches": {
        "kern": true
      },
      "source": "vim-snippets/snippets"
    },
    "131fb80f-aafc-3b68-8ce2-67357c03f875": {
      "content": "slice:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "13338366-ee91-396b-bfb9-ad8ef1e0cb44": {
      "content": "border-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      },
      "source": "vim-snippets/snippets"
    },
    "13394783-6fe9-3f3f-b556-f203827fe2db": {
      "content": "display grid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "133c3ef8-33ce-30b4-96d5-792114c16d74": {
      "content": "cursor: pointer",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "133c9cd4-bd1b-323c-89ac-dd1a59fc9f7c": {
      "content": "${1:map}.catch_all \"*${2:anything}\", controller: \"${3:default}\", action: \"${4:error}\"\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.catch_all",
      "matches": {
        "mapca": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1348306e-eeda-39c0-be43-a8871fe062a3": {
      "content": "cursor move",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "134a0a3f-cc53-3f6b-838f-bbb5c0750ffb": {
      "content": "PropTypes.exact({\n\t$0\n}),",
      "doc": "An object with warnings on extra properties",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeExact",
      "matches": {
        "ptex": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "134a7c69-7355-31ba-9b95-cdc31d1143f4": {
      "content": "finally(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "finally(func)",
      "matches": {
        "finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "134cad24-10fb-31b0-9f7b-1e051fa14bd3": {
      "content": "display: -moz-inline-stack;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      },
      "source": "vim-snippets/snippets"
    },
    "13548387-7067-38d9-bbcc-9a8a10098b91": {
      "content": "#if ${1}\n  ${2}\nelse\n  #{3}\n#endif",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "#if .. else .. #endif",
      "matches": {
        "#ife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "135f3899-60f5-3abd-b9b5-23cea1f5d486": {
      "content": "proc ${1:#:name}(${2}):${3:#:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "135f3bdc-ebaa-377c-8b7f-5b5bd5b1a8e2": {
      "content": "@if (${1:condition})\n   ${2}\n@elseif (${3:condition})\n   ${4}\n@else\n   ${5}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "if elseif else endif",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1366a01a-94c9-3087-aba8-8446f50600c9": {
      "content": "(defrecord ${1:record} [${2:constructor-args}]\n  ${3:protocol} (${3:method} [${5}] ${6}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defrecord": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "13698dd4-f0fc-3001-8c25-47ca252fa8b1": {
      "content": "position: ${1:relative};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "position",
      "matches": {
        "pos": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "136a5fe0-18b2-358d-82d6-41e24009e0b4": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dec": true
      },
      "source": "vim-snippets/snippets"
    },
    "136e7e26-090c-3086-b2de-d49691893c1f": {
      "content": "<pre>\n${1:TARGET}\n</pre>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "137612ba-2629-3603-86f3-71925cac1a12": {
      "content": "border-left-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      },
      "source": "vim-snippets/snippets"
    },
    "1377e23f-b78c-3a86-a7d7-b18ea224da67": {
      "content": "using terms from ${1:#:app}\n\t${0:TARGET}\nend using terms from",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "terms": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "13787609-283f-36e9-85cf-65d5e64582b2": {
      "content": "border ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      },
      "source": "vim-snippets/snippets"
    },
    "138bddb9-f2c2-31d2-a4d8-82a00241c58a": {
      "content": "text-decoration none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "13a77dc0-cfde-32b8-8d11-3f4914843a50": {
      "content": "alias_method_chain :${1:method_name}, :${0:feature}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amc": true
      },
      "source": "vim-snippets/snippets"
    },
    "13b51f4c-306d-3f35-9672-dcce67f00b3b": {
      "content": "expect(${1:target}).not.toMatch(${2:pattern})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to match (coffee)",
      "matches": {
        "notm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "13b5f976-ef5c-3757-ac54-13a21bd9ec7c": {
      "content": "{% firstof ${1} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      },
      "source": "vim-snippets/snippets"
    },
    "13bff42b-f0e7-3491-b850-b9ca367ceba2": {
      "content": "partial:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "partial:",
      "matches": {
        "partial": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "13c3bdcd-822f-3830-b9ce-f0b9167d5fc1": {
      "content": "dlply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      },
      "source": "vim-snippets/snippets"
    },
    "13c9af8a-86f5-39e4-80af-f89e553bac9b": {
      "content": "@version ${0:#:version}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ver": true,
        "version": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "13cd2b0c-caab-3952-896a-3d0461a59223": {
      "content": "white-space: pre;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "13e5d9f4-1822-380a-a467-81b2504fa200": {
      "content": "box(${1:width}, ${2:height}, ${0:depth});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "box": true
      },
      "source": "vim-snippets/snippets"
    },
    "13f73bdf-6e29-3891-95cd-a7a8746174a4": {
      "content": "counter-increment: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      },
      "source": "vim-snippets/snippets"
    },
    "13f8ddb4-c293-342f-a353-3f6803751829": {
      "content": "vertical-align: ${1:baseline/sub/super/top/text-top/middle/bottom/text-bottom/length/%};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "vertical-align: type (vertical)",
      "matches": {
        "vertical": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "13f95586-d65c-35e2-bc04-57cea62c2984": {
      "content": "format!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "format!",
      "matches": {
        "fmt": true
      },
      "source": "vim-snippets/snippets"
    },
    "13fee670-5540-3880-92a5-9c2509df96c2": {
      "content": "this.${1:service}.${2:function}\n\t.subscribe(${3:arg} => this.${4:property} = ${3:arg});\n$0",
      "doc": "Angular observable subscribe",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "subscribe",
      "matches": {
        "a-subscribe": true,
        "angular subscribe": true
      },
      "source": "javascript/angular"
    },
    "1418556c-1557-3d2e-ae42-f6768c043fd8": {
      "content": "include ${1:classname}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "141b67c3-dad6-37de-ad07-ef79ffb09a49": {
      "content": "default_if_none:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      },
      "source": "vim-snippets/snippets"
    },
    "141bc886-5034-3690-9067-a55a750990ac": {
      "content": "\"${0:key}\": null,",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Null",
      "matches": {
        "null": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "141ea5d5-701d-3e1a-b4c1-33b114485845": {
      "content": "console.log(${1:object});",
      "doc": "Displays a message in the console",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolelog",
      "matches": {
        "base console log": true
      },
      "source": "javascript/base"
    },
    "141efc4c-65ac-3ca8-bbc5-5618c71ed3d8": {
      "content": "def __enter__(self):\n\t${1:pass}\ndef __exit__(self, exc_type, exc_value, traceback):\n\t${2:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "context manager methods",
      "matches": {
        "context": true
      },
      "source": "vim-snippets/snippets"
    },
    "14228a39-6771-33fa-8809-51985bfcc363": {
      "content": "align-self: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "1425e015-927c-3c42-a6df-d0ccb480a248": {
      "content": "integer, parameter ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer parameter",
      "matches": {
        "inp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "14424b9b-7a26-32f4-a31c-a421b7ad5a0c": {
      "content": "xhr :delete, :${1:destroy}, id: ${2:1}$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr delete",
      "matches": {
        "xdelete": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "144436b2-e716-302f-8673-ce5578a513fd": {
      "content": "expect($1).resolves$0",
      "doc": "expect promise resolves to",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-resolves",
      "matches": {
        "expr": true,
        "jest expect resolves": true
      },
      "source": "javascript/jest"
    },
    "1451dddf-9989-3be0-9d71-7387846bd2d5": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\param $5 ${6:Parameter description}\n * \\param $7 ${8:Parameter description}\n * \\return ${9:Return parameter description}\n */\n${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n{\n\t${15}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun3": true
      },
      "source": "vim-snippets/snippets"
    },
    "14648676-3a1f-32b0-937a-6a65cfffacad": {
      "content": "for ${2:k}, ${3:v} := range ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for k, v := range items { ... }",
      "matches": {
        "forr": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "1468d94a-ecaa-3bf3-93a7-8f172b5bb182": {
      "content": "(defproject ${1:aaa} \"0.1-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"https://github.com/${2}\"\n  :license {:name \"GNU GPL v3+\"\n            :url \"http://www.gnu.org/licenses/gpl-3.0.en.html\"}\n  :dependencies [[org.clojure/clojure \"1.7.0\"]]\n  :main ^:skip-aot ${3:aaa.core}\n  :target-path \"target/%s\"\n  :min-lein-version \"2.3.0\")",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defproejct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "146f0831-4d57-3251-883d-c519482a339b": {
      "content": "{% paginate ${1:collection.products} by ${2:12} %}\n\t{% for ${3:product} in $1 %}\n\t\t${0}\n\t{% endfor %}\n{% endpaginate %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paginate": true
      },
      "source": "vim-snippets/snippets"
    },
    "146fa3ae-8364-31ff-982d-25e977a5680d": {
      "content": "-export([${1:function}/${0:arity}]).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "1471f45e-65a0-3c06-adc3-a539c3c7f2ee": {
      "content": "(fn [${1:arg-list}] ${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "147ca238-989c-3a21-837b-152c9baa2eb5": {
      "content": "const ${1:store} = spring(${2:value}, ${3:options});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-spring",
      "matches": {
        "svelte spring": true,
        "svsp": true
      },
      "source": "javascript/svelte"
    },
    "14828992-eeb5-380b-8add-d0909d265f60": {
      "content": "render nothing: ${1:true}, status: ${2:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (nothing,status) (rns)",
      "matches": {
        "rns": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1488b40b-1acf-3d94-958b-884443deed6a": {
      "content": "<% for ${2:item} in ${1} %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "14930a99-6b5e-3f17-9838-a3997412c5f4": {
      "content": "${1}:\nwhile ${2} loop\n\t${0:${VISUAL}}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named while",
      "matches": {
        "nwh": true
      },
      "source": "vim-snippets/snippets"
    },
    "1493206d-6fc3-3c5d-9d22-5af9ba869e8b": {
      "content": "align-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "1497556f-9393-39b1-9483-f74c241f26b3": {
      "content": "{{ ${1} }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/snippets"
    },
    "14a17613-167d-3229-8cb5-21bc07e13ede": {
      "content": "subroutine ${1:name}($2)\n\t${0}\nend subroutine $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "14a2fc8c-b667-3cbb-a2e6-cba6cc794bb3": {
      "content": "@spec ${1:name}(${2:arg types}) :: ${3:no_return}\ndef $1(${4:args}) do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      },
      "source": "vim-snippets/snippets"
    },
    "14b05d26-086e-304f-9e5e-8dc17059961b": {
      "content": "setter ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/snippets"
    },
    "14b06842-3970-3d90-b637-25622f554719": {
      "content": "@each ${1:$item} in ${2:items} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "vim-snippets/snippets"
    },
    "14b1052f-03e4-38de-8666-a819a0e819fa": {
      "content": "loop (my ${1:$i} = 0; $$1 < ${2:count}; $$1++) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      },
      "source": "vim-snippets/snippets"
    },
    "14b1ec97-d6d1-3445-92b2-b49cbeb49697": {
      "content": "$this->load->view(\"${1:view_name}\", $${2:data});${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_load-view": true
      },
      "source": "vim-snippets/snippets"
    },
    "14b38fbb-c879-30f4-b059-2dcfa478608c": {
      "content": "border-style: double",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      },
      "source": "vim-snippets/snippets"
    },
    "14bdaaf6-24a2-3d19-a1d8-4318679ebfba": {
      "content": "@leave=\"$1\"$0",
      "doc": "@leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave",
      "matches": {
        "leaveevent": true,
        "vue leave": true
      },
      "source": "javascript/vue"
    },
    "14be2480-4068-37d3-808d-5b9cf8870387": {
      "content": "var (\n\t${1:x} ${2:Type}${3: = ${0:value}}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var ( ... )",
      "matches": {
        "vars": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "14bee11d-1264-3a11-8bd3-6ee719ab1b2d": {
      "content": "$this->${1:method}()->shouldHaveKey(${2:'key'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveKey('key')",
      "matches": {
        "skey": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "14c92394-5121-3eb4-ad7f-10454ab2a139": {
      "content": "Require all granted",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "14c9f9f4-54fe-38ad-a36d-aa925b9d38de": {
      "content": "_.lte(${value}, ${other})",
      "doc": "_.lte(1, 3);\n// => true\n\n_.lte(3, 3);\n// => true\n\n_.lte(3, 1);\n// => false\n\nChecks if `value` is less than or equal to `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lte",
      "matches": {
        "lodash lte": true
      },
      "source": "javascript/lodash"
    },
    "14d0aa32-17c2-3b14-801b-b704d2a05864": {
      "content": "font-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "14dce9d5-1bfb-39fe-98f7-66b7bb9e64dc": {
      "content": "{% html %}\n\t${0}\n{% endhtml %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig html",
      "matches": {
        "html": true
      },
      "source": "vim-snippets/snippets"
    },
    "14e07977-ed71-364d-9ac9-167ea00697ae": {
      "content": "overflow scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "14e45a6a-ddc4-3927-9021-4b743d0661c6": {
      "content": "while ${1} loop\n\t${0:${VISUAL}}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "14e68771-ad7a-3818-a90b-01d6d87b157c": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/snippets"
    },
    "14e76b80-ede3-3bcb-8edb-5427fa56d976": {
      "content": "font-stretch: extra-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "14e9f065-675c-3fc7-906c-72bc18f063cf": {
      "content": "{% include '${1:#:template}' with {${2:#:'key'}: ${2:#:'value'}} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% include '...' %}",
      "matches": {
        "includewith": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "14eabf3c-323a-3568-bf77-6261beacc97f": {
      "content": "Yii::app()->cache->delete('${0:key}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydelcache": true
      },
      "source": "vim-snippets/snippets"
    },
    "14f03e4c-a224-351f-a6ea-2b1a8c325495": {
      "content": "#include <${1:iostream}>${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc, #include": true,
        "inc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "14f47e84-59bd-37df-ab15-a1fba706448e": {
      "content": "for (${1}; ${2}; ${3}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "14f63c69-5bcf-3436-a5f6-f8cd08ed93c0": {
      "content": "expect(${1:target}).toBeFalsy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be falsy (coffee)",
      "matches": {
        "ef": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "14f6dd2c-6e06-3802-a10b-367f42e68b8b": {
      "content": "? ${1:trueExpression} : ${2:falseExpression}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      },
      "source": "vim-snippets/snippets"
    },
    "14fbf7d9-afbb-3484-9b60-d404657f6c79": {
      "content": "void mouseReleased(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseReleased": true
      },
      "source": "vim-snippets/snippets"
    },
    "14fdfb8d-d5b7-3575-9d32-7ef71a400a41": {
      "content": "with($1)\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "with (with)",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "15016247-a83d-3a82-b789-fbd7da4ab08a": {
      "content": "$_REQUEST['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "R": true
      },
      "source": "vim-snippets/snippets"
    },
    "151c1d63-d7ad-3c4a-a927-16c18833276b": {
      "content": "private",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pri": true
      },
      "source": "vim-snippets/snippets"
    },
    "15219fae-5233-3398-89aa-cbe0112cec44": {
      "content": "System.Linq",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.l": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "152adda4-70a7-35aa-bef7-89df849ad5b5": {
      "content": "/**\n * ${0:description}\n *\n */",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/**": true
      },
      "source": "snippets/javascript"
    },
    "152bad6d-e77a-3932-95f8-576f121eb2fc": {
      "content": "// execute a display list\ngl.glCallList(${0:list});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl call list",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "152eef96-c67f-3602-bd04-2829b91f07c3": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "153203e4-a9fa-3835-aa58-57aaf128a086": {
      "content": "color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true,
        "color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1537bb80-4dd2-3baf-b2cf-a19975d60640": {
      "content": "in_array(${1:needle}, ${2:haystack})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "in_array",
      "matches": {
        "ia": true
      },
      "source": "vim-snippets/snippets"
    },
    "15390746-241d-325c-a933-d6769c42e1b7": {
      "content": "it { should filter_param :${0:key} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfp": true
      },
      "source": "vim-snippets/snippets"
    },
    "1539eb11-9b61-360f-8761-3a4baddc8de2": {
      "content": "${1:obj}.change (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "change": true
      },
      "source": "snippets/coffee"
    },
    "153b1b4e-a5a0-31ce-975f-1b139cb22407": {
      "content": "font-variant: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      },
      "source": "vim-snippets/snippets"
    },
    "153cf12c-3690-3aa2-bbef-9195e956c328": {
      "content": "border-length ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      },
      "source": "vim-snippets/snippets"
    },
    "15434712-c27f-3094-8c26-ebea6769d418": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "1553f532-1855-3bc8-b87f-32e6dc2a016a": {
      "content": "try {\n    ${1:#:TARGET}\n} catch (${2:...}) {\n    ${3}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "try catch",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "15585212-b0d8-3557-8e0d-6ed5c88313b9": {
      "content": "useImperativeHandle(${1:ref}, ${2:createHandle});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useImperativeHandle",
      "matches": {
        "usei": true
      },
      "source": "snippets/javascript"
    },
    "15593876-e608-3560-ba7f-e8dde062c457": {
      "content": "\\${1:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:default}",
      "matches": {
        "1:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1559ee59-f01e-3719-8f58-55d66360d5c7": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      },
      "source": "vscode-react/snippets"
    },
    "155a82c3-5b26-37e0-aef5-ccbe20ce811b": {
      "content": "axios.post('${1:uri}', ${2:post})\n.then(function (response) {\n\t${3:success}\n})\n.catch(function (error) {\n\t${4:error}\n})",
      "doc": "Use Axios to make a post request - promise based",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-post-promise",
      "matches": {
        "axios post promise": true
      },
      "source": "javascript/axios"
    },
    "1564415f-e79f-32a9-9a9e-ad1711abec04": {
      "content": "procedure ${1:name}(${2:args})\nas\nbegin\n\t${0:-- body}\nend $2;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppb": true
      },
      "source": "vim-snippets/snippets"
    },
    "1566ea85-e80f-3602-8f4d-7323c3582d66": {
      "content": "case ${1} do\n\t${2} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "15857dd3-a528-3950-af3a-14e3a7c2bd9a": {
      "content": "# ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "# section heading",
      "matches": {
        "heading": true,
        "section": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1588e258-2ca9-316a-8250-460fafba2840": {
      "content": "{% if $1 %}$2{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "158b1106-2b56-3b81-bcb2-5fb461a7f26a": {
      "content": "while (${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "158c60ba-6c4e-3cb2-9b71-284ed0b72d0d": {
      "content": "export const ${1:constantName} = '${1:constantName}'",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reduxConst",
      "matches": {
        "rxconst": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "158e468f-f70a-3e86-9c6a-eb079e592b8d": {
      "content": "import ${0:Data.Text}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      },
      "source": "vim-snippets/snippets"
    },
    "1593b827-cfe9-3c07-9c0b-0cd0c10b3734": {
      "content": "$.trim(${1:str})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$trim": true
      },
      "source": "snippets/coffee"
    },
    "15a21856-f3a4-38c7-9e36-9ff75861e52f": {
      "content": "each_pair {|${1:#:key}, ${2:value}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_pair": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "15a7d4ed-48ea-3831-a568-4fe5055310ba": {
      "content": "border-bottom: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "15a98c79-1129-33c0-b463-11edae19ab7c": {
      "content": "module ${1:modulename}\n\t${0}\nend module $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/snippets"
    },
    "15ad12ad-5c85-3442-800d-7e1f629994c1": {
      "content": "<dl id=\"${1}\">\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl#": true
      },
      "source": "vim-snippets/snippets"
    },
    "15ae2a38-02c3-31bc-a22c-d0e950d11858": {
      "content": "${1:var_name} = kwargs.get('$1', ${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lkwg": true
      },
      "source": "vim-snippets/snippets"
    },
    "15b19655-ba22-3522-9535-db6ed74ae448": {
      "content": "import PropTypes from 'prop-types'\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\n",
      "doc": "Creates a React 17 Functional Component with ES7 module system with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactFunctionalComponentWithPropTypes",
      "matches": {
        "_rfcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "15b1bff2-c2d9-3710-ab60-0b294210a38b": {
      "content": "color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      },
      "source": "vim-snippets/snippets"
    },
    "15b667b4-5d82-357a-a00d-fcc326980bfe": {
      "content": "display: table-column",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "15bb4048-26b7-3497-ad93-045d3b4ec725": {
      "content": "align-self: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "15c37c9e-b5fe-3954-9407-e0b993e009c7": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      },
      "source": "vscode-react/snippets"
    },
    "15c967bb-c77b-3729-8895-4d273d69c9e5": {
      "content": "static propTypes = {\n$0\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "staticPropTpyes",
      "matches": {
        "ptypes": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "15cd634f-0c6c-3023-b278-ebe1d2319d88": {
      "content": "+${1:mixin}(${2})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "15d6bdb9-5879-3ed8-8f3a-10533bae7a47": {
      "content": "intercept[${1:IllegalArgumentException}] {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intercept": true
      },
      "source": "vim-snippets/snippets"
    },
    "15f04902-ad44-36d6-a79e-4b49a05a61b4": {
      "content": "{% trans %}${0}{% endtrans %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      },
      "source": "vim-snippets/snippets"
    },
    "15f5b783-b8ed-3382-a570-7f12c9a30cc1": {
      "content": "cum${1:max}(${2:x})",
      "doc": "Cummulative",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cum",
      "matches": {
        "cum": true
      },
      "source": "vscode-R/snippets"
    },
    "15f71a7a-3fd1-3f7c-abc0-c0ea3036f909": {
      "content": "= render partial: '${0}'",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renp": true
      },
      "source": "vim-snippets/snippets"
    },
    "15f7957e-8d57-3575-98a6-fc0d8a67f578": {
      "content": "border-left-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-width: size (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16014e28-0b76-3494-a880-e87d5325d7c1": {
      "content": "impl ${1} for ${2} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "implfor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "160d41a6-5248-3af5-960d-c6081b6a9460": {
      "content": "background: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      },
      "source": "vim-snippets/snippets"
    },
    "1610ffee-fdc6-37f5-bfa5-a59fb5d54d11": {
      "content": "${fn:indexOf(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "indexof": true
      },
      "source": "vim-snippets/snippets"
    },
    "162fdc46-c2c8-38fc-af37-7d5319e50316": {
      "content": "always @(posedge ${1:clk} iff !${2:rst} or posedge $2) begin\n    if (${2}) begin\n        ${3:TARGET}\n    end else begin\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_ff @()",
      "matches": {
        "alf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1631dd4d-1736-3100-b90b-f57ce83b88f4": {
      "content": "<?php foreach ($${1:vars} as $${2:$var}): ?>\n\t${0:${VISUAL}}\n<?php endforeach ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?f": true
      },
      "source": "vim-snippets/snippets"
    },
    "1636593c-f1ce-3d71-b4df-7261ac80e588": {
      "content": "xhr :put, :${1:update}, id: ${2:1}, ${3:object}: { $4 }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr put",
      "matches": {
        "xput": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16371db4-c91b-3463-bbb6-32a85ee891c9": {
      "content": "${1:obj}.find('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      },
      "source": "snippets/coffee"
    },
    "163aeee1-c55c-3353-8d2f-ebfd27ab0baf": {
      "content": "class ${1:name}${2:(arg)}${3: extends }${4: with} {\n\t${5:override def toString = \"$1\"}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/snippets"
    },
    "163c885d-f6e3-3beb-b356-85a2626457aa": {
      "content": "real :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "real": true
      },
      "source": "vim-snippets/snippets"
    },
    "164184e0-60e6-3ea3-a30e-abed0f346cad": {
      "content": "font-family: ${0:Helvetica,Arial},sans-serif;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      },
      "source": "vim-snippets/snippets"
    },
    "1646f09d-4b5a-353a-9ccd-8a3ee7f014d3": {
      "content": "${1:obj}.nextAll('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nexta": true
      },
      "source": "snippets/coffee"
    },
    "16511380-aaba-34af-8281-c99dd9c2db12": {
      "content": "box-sizing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      },
      "source": "vim-snippets/snippets"
    },
    "1669a093-e4a4-34f6-86b9-f8625b9c81fb": {
      "content": "set -eu",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "safe": true
      },
      "source": "vim-snippets/snippets"
    },
    "166d281c-f0ec-31b5-941d-535c6ff4d57f": {
      "content": "_.unionWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.unionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\nThis method is like `_.union` except that it accepts `comparator` which\nis invoked to compare elements of `arrays`. Result values are chosen from\nthe first array in which the value occurs. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unionwith",
      "matches": {
        "lodash unionwith": true
      },
      "source": "javascript/lodash"
    },
    "16752189-eee5-3539-85a5-fa795a3dd776": {
      "content": "year = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "year": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1675ce8f-68d9-3d63-a003-cb0ed45bad67": {
      "content": "<menu>\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu": true
      },
      "source": "vim-snippets/snippets"
    },
    "167b8d83-8911-3138-94bb-07aabafc9814": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2:error}\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "168e23f4-aab8-35ae-8927-d6d5e92fe2a7": {
      "content": "<legend>${1:TARGET}</legend>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "16adefd4-57d9-345f-93c1-48252f5f81c4": {
      "content": "@else if ($1)\n\t${2:${VISUAL}}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@else if directive",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16b341e4-a9ef-3575-886f-1653afdb6581": {
      "content": "package name {\n\t${1:public|internal|final} class ${2:name} ${0:extends } {\n\t\tprivate|public| static const FOO = \"abc\";\n\t\tprivate|public| static var BAR = \"abc\";\n\t\t// class initializer - no JIT !! one time setup\n\t\tif Cababilities.os == \"Linux|MacOS\" {\n\t\t\tFOO = \"other\";\n\t\t}\n\t\t// constructor:\n\t\tpublic function $2 (\t){\n\t\t\tsuper2();\n\t\t\ttrace(\"start\");\n\t\t}\n\t\tpublic function name (a, b...){\n\t\t\tsuper.name(..);\n\t\t\tlable:break\n\t\t}\n\t}\n}\nfunction A(){\n\t// A can only be accessed within this file\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      },
      "source": "vim-snippets/snippets"
    },
    "16c108d1-ff6b-32d0-8b1c-84fb99febc16": {
      "content": "\\\\begin{equation}\n\\\\begin{tikzcd}\n\t${1}\n\\\\end{tikzcd}\n\\\\end{equation}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tikzcd environment in equation",
      "matches": {
        "tikzcd": true
      },
      "source": "vim-snippets/snippets"
    },
    "16cc1522-bcbf-3f0a-ad52-a455f66cba08": {
      "content": "content counter(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "16d033a7-e28f-39e2-805d-f94ebbace37d": {
      "content": "<%= javascript_include_tag \"${0}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsit": true
      },
      "source": "vim-snippets/snippets"
    },
    "16d047c8-d3ad-3a74-abae-95d13b6dfd80": {
      "content": "@param {${1:Type}} ${2:varname} ${3:Description}",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@param {Type} varname Description",
      "matches": {
        "@p": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16d21e63-caaf-3316-92c0-83954c55ec15": {
      "content": ".iter()$0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": ".iter()",
      "matches": {
        ".it": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16d3cdae-baf9-37eb-99c6-0c46bd1aaeb3": {
      "content": "<source src=\"${1}\" type=\"${2}\" media=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source": true
      },
      "source": "vim-snippets/snippets"
    },
    "16db62de-55aa-3840-87af-0bf612db15c8": {
      "content": "expect(${1:target}).toHaveBeenCalled();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have been called (js)",
      "matches": {
        "ethbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "16dde9b8-2738-310c-92ff-578bf63c9425": {
      "content": "open(unit = ${1:fp}, file = ${2:filename}, status = ${3:unknown}, iostat = ${4:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "open": true
      },
      "source": "vim-snippets/snippets"
    },
    "16e20c29-efc7-3718-ac94-9eae8faba1d8": {
      "content": "\\begin{ttfamily}\n\t${1:TARGET}\n\\end{ttfamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{ttfamily} \\ttfamily": true,
        "ttfamily": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "16e2c9b2-219f-3e5d-b9c7-2e5de5e08488": {
      "content": "@change=\"$emit('change', $event.target.value)\"",
      "doc": "Vue Emit from Child Component",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Emit from Child",
      "matches": {
        "vemit-child": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "16e37060-f480-3aa0-b7f1-78379e0d2a84": {
      "content": "array.min()",
      "doc": "array.min(limit: number | Ref, message?: string | function): Schema\n\nSet a minimum length limit for the array. The ${min} interpolation can be used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-min",
      "matches": {
        "yup array min": true
      },
      "source": "javascript/yup"
    },
    "16e6cecb-a2e5-3850-8170-573fa3836118": {
      "content": "waits($1)",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "waits (coffee)",
      "matches": {
        "wa": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "16e9c464-550c-3faf-a101-deca8a440a1f": {
      "content": "\\\\chapter{${1:chapter name}}%\n\\\\label{cha:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\chapter",
      "matches": {
        "cha": true
      },
      "source": "vim-snippets/snippets"
    },
    "16f02d9c-c0f8-3aab-9d55-74b016932d53": {
      "content": "background-position-y: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      },
      "source": "vim-snippets/snippets"
    },
    "16f5ba18-0c41-328b-a6f1-3b32b5c1b262": {
      "content": "mattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "mattr_accessor",
      "matches": {
        "mrw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "170571a8-2d69-37b5-a74f-4e7ce4675d3b": {
      "content": "justify-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "170a5dee-c2f7-3ffd-a8fe-8acfe6efde63": {
      "content": "/* ${1:#:comment} */\n${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true,
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "170f11af-7ca7-390e-803d-f61c9aad1733": {
      "content": "SELECT ${1:*}\nFROM ${2:table1} ${3:T1}\nJOIN ${4:table2} ${5:T2}\nON T1.${6:column1} = T2.${7:column2}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "SELECT * FROM T1 JOIN T2 ... ON",
      "matches": {
        "SELECT_JOIN_DATA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "171e3208-3e75-33ae-aa92-c60078902af5": {
      "content": "for ${1:i} = ${2:1:n}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "17288d26-0ebd-38f0-ad7f-3576086204f3": {
      "content": "continue",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "continue",
      "matches": {
        "cn": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "172dce65-b2aa-378c-be46-100d9b246dbe": {
      "content": "-webkit-box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "172fa89b-7dfc-34f9-a881-d2c8a9121aa0": {
      "content": "<script charset=\"${1:UTF-8}\">\n${2:TARGET}\n</script>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptcharset": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "17338ed9-e11f-3d2c-96f0-bc60636bb75d": {
      "content": "\\begin{minipage}{${1:0.45}\\linewidth}\n\t${2:TARGET}\n\\end{minipage}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{minipage} \\minipage": true,
        "minipage": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1737bd42-b631-34f0-a9cf-539d5f63e95c": {
      "content": "for (${1:1}, ${2:10}) { |i|\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "1738f9ea-bb3e-3e77-b6bd-cc63aa2549f6": {
      "content": "${1:expression} if ${2:condition};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      },
      "source": "vim-snippets/snippets"
    },
    "173a761b-633e-3aa6-a109-b623aeba5361": {
      "content": "align-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "1742ef1c-115d-3c15-bdfd-0a1cfedf0263": {
      "content": "reduce!(${1:f})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reduce": true
      },
      "source": "vim-snippets/snippets"
    },
    "174363eb-4cfb-383f-8ea4-1837c18f41a6": {
      "content": "if ${1:condition} do\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. else .. end",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "17544d14-7dc4-3924-a630-0bdb4e975254": {
      "content": "resize: both",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "17555673-f151-3da9-b576-9f820b689e7b": {
      "content": "background-attachment fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "17598061-f407-3ec7-8421-611023eab4a1": {
      "content": "text-replace: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1773136b-20c5-322e-b375-cf676915aeab": {
      "content": "PropTypes.objectOf(PropTypes.shape($0)),",
      "doc": "An object whose keys are known ahead of time",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfShape",
      "matches": {
        "ptoos": true
      },
      "source": "vscode-react/snippets"
    },
    "1773bc4f-6445-3df2-9c13-00f542b5d797": {
      "content": "/// <summary>\n/// ${0}\n/// </summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "///": true
      },
      "source": "vim-snippets/snippets"
    },
    "17793b8e-3e06-3bb2-9952-294ea1f045d3": {
      "content": "{${1:expression}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression",
      "matches": {
        "svelte expression": true,
        "svexp": true
      },
      "source": "javascript/svelte"
    },
    "17884b1f-60f5-3e59-96e1-729f18c643b3": {
      "content": "word-break: break-strict;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "178c5af7-aea2-3075-a39b-6f8e39092650": {
      "content": "<%namespace file=\"${0:name}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "namespace": true
      },
      "source": "vim-snippets/snippets"
    },
    "178c7acd-c2b0-37c1-bc70-b157a4f68a2c": {
      "content": "${1:FIELDNAME} = models.EmailField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "EmailField",
      "matches": {
        "memail": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1791ee4e-86d9-3602-ae1c-ac0a680e57bb": {
      "content": "{% else %}\n  ${1:TARGET}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "179b457a-a886-32f4-a15c-90a3e3c55866": {
      "content": "border-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-style": true,
        "bs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "17a617b0-3918-3d84-a2f7-9e15c683127a": {
      "content": "unsigned int\t${1:object}Count = [${2:array} count];\nfor(unsigned int index = 0; index < ${1}Count; index += 1)\n{\n\t${3:id}\t${1} = [${2} objectAtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forarray": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "17ab0db5-c4ae-38c6-a174-fa68b9e6bc53": {
      "content": "matrix(NA, nrow = ${1:}, ncol = ${2:})",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      },
      "source": "vim-snippets/snippets"
    },
    "17b5e4f4-66ac-3f37-82cf-5e9acc7a0b96": {
      "content": "validates :${1:attribute}, exclusion: { in: ${0:%w( mov avi )} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ve": true
      },
      "source": "vim-snippets/snippets"
    },
    "17c364ef-e11c-3a5a-b6b1-1e2e1e3b190d": {
      "content": "&#x21A9;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      },
      "source": "vim-snippets/snippets"
    },
    "17c75b0c-cb5f-3f42-af27-f84fb027b84f": {
      "content": "color: #${1:DDD};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-hex (color)",
      "matches": {
        "color": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "17cce4c9-4569-3a6c-8648-6b2ec8df3c06": {
      "content": "${1:/* condition */} ? ${2:/* if true */} : ${0:/* if false */}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ter": true
      },
      "source": "snippets/javascript"
    },
    "17cd85dd-cc68-3ca8-917d-657e182cf811": {
      "content": "\\\\lim_{${1:n \\\\to \\\\infty}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\lim_{}",
      "matches": {
        "lim": true
      },
      "source": "vim-snippets/snippets"
    },
    "17e6f10c-8559-3e9c-a2cb-f320346171d7": {
      "content": "lines(${1:x}${2:, color=${3:red}})",
      "doc": "Polygonal Line",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lin",
      "matches": {
        "lines": true
      },
      "source": "vscode-R/snippets"
    },
    "17e7ca3c-4115-35eb-8b2b-6c976d041678": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t$0\n\tclass Meta:\n\t\tverbose_name = \"$1\"\n\t\tverbose_name_plural = \"$1s\"\n\n\tdef __str__(self):\n\t\treturn super($1, self).__str__()\n",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model",
      "matches": {
        "model": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "17ea0f39-0c19-3066-888e-362c0211aff2": {
      "content": "for ${1:i} in ${2:l_var}.first .. $2.last loop\n\t${0: -- dbms_output.put_line($2($1)); }\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forc": true
      },
      "source": "vim-snippets/snippets"
    },
    "17f55a85-5bf1-30b7-a714-bffdf3170d9b": {
      "content": "require! ${1}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req!": true
      },
      "source": "vim-snippets/snippets"
    },
    "18053963-e9d7-374f-b436-9a0900310a64": {
      "content": "-moz-box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "181960b4-a9d6-3742-80ba-2f85ed4fda45": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "!important CSS (!)",
      "matches": {
        "!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "18264c01-c9f4-38ad-bd48-eda50badbc4a": {
      "content": "<xsl:import href=\"${1:stylesheet}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      },
      "source": "vim-snippets/snippets"
    },
    "183df623-4094-3884-83a3-21587a4d1adc": {
      "content": "assert(${1:a} === ${0:b})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assert": true
      },
      "source": "vim-snippets/snippets"
    },
    "184684be-ec4d-360d-8aa7-318e7e36242d": {
      "content": "{@debug ${1:var1}${2:,var2}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-debug",
      "matches": {
        "svelte expression debug": true,
        "svexpdebug": true
      },
      "source": "javascript/svelte"
    },
    "18504da9-7587-3d06-b3bd-4028371b344a": {
      "content": "/*! \\enum $1\n *\n *  ${2:Detailed description}\n */\nenum ${1:name} { ${0} };",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "185353a4-9d4f-351a-930c-8e88d57f32f8": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "185dd147-5be4-33c9-87cb-77919726de7e": {
      "content": "std::cin >> ${1};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cin": true
      },
      "source": "vim-snippets/snippets"
    },
    "18606c9c-b427-3660-9ec4-990baf5650d5": {
      "content": "display: table-row",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "18654e35-fb86-38c8-b79b-5e419ef81ee8": {
      "content": "clear: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "1869e3ae-67b7-3fee-8507-ae49fb4b7df8": {
      "content": "always_comb begin ${1:: statement_label}\n\t${0}\nend $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alc": true
      },
      "source": "vim-snippets/snippets"
    },
    "187f3f78-bb69-3a9d-9324-d3e3bd10a040": {
      "content": "<input type=\"email\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:email": true
      },
      "source": "vim-snippets/snippets"
    },
    "18803aab-d9d6-3e88-94b9-27eae68639e1": {
      "content": "${1:fn} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      },
      "source": "vim-snippets/snippets"
    },
    "1884d783-16ba-3687-846c-76916a7c5ac8": {
      "content": "public function action${1:Index}(${2:params})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yact": true
      },
      "source": "vim-snippets/snippets"
    },
    "188e92ef-3991-3885-9852-c6b9954c5cff": {
      "content": "page-break-before ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      },
      "source": "vim-snippets/snippets"
    },
    "18928ded-625b-39dc-88eb-1219fc814488": {
      "content": "import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\nimport { ${1:Model} } from '${2:../core}';\n\n@Injectable({ providedIn: ${3:'root'} })\nexport class ${1:Model}Service extends EntityCollectionServiceBase<${1:Model}> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('${1:Model}', serviceElementsFactory);\n  }\n}",
      "doc": "NgRx Data Entity Collection Data Service",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Entity Collection Data Service",
      "matches": {
        "a-ngrx-data-entity-collection-data-service": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "189399e3-f9cb-3d88-9ea6-20c8a2c58a37": {
      "content": "border-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "189b126a-4618-37c6-9fd8-10fd2b44f62a": {
      "content": "list-style-type decimal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      },
      "source": "vim-snippets/snippets"
    },
    "18a206d1-73d0-35e3-a6d2-0777da853e51": {
      "content": "fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Function definition",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "18a71642-3df8-33d4-9341-a2100cc3532c": {
      "content": "${1:void} ${2:#:method}(${3}) ${4:throws} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "18c5fd92-f3e3-3786-81c7-c045e2defbc2": {
      "content": "$.removeData(${1:element}${2:, 'key name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remdd": true
      },
      "source": "snippets/javascript"
    },
    "18cec1ed-894a-39f9-b647-b80f9d6d8e9d": {
      "content": "grid-auto-columns max-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "18d8bee3-349f-3e1b-b9ea-e7a617ab3e37": {
      "content": "return this.httpClient.get('${1:url}');$0",
      "doc": "Angular HttpClient.get",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "httpclient-get",
      "matches": {
        "a-httpclient-get": true,
        "angular http client get": true
      },
      "source": "javascript/angular"
    },
    "18e79059-4589-36ae-8278-4829c2493a89": {
      "content": "list-style-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "18f88d59-5cc5-3f29-86f5-ad77d29e790c": {
      "content": "{% load ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      },
      "source": "vim-snippets/snippets"
    },
    "18fead41-e393-3ee8-ab06-99b35235562e": {
      "content": "@serial ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serial": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1901ad96-106e-32d3-8473-86e7b8970cc2": {
      "content": "case ${1:something} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "1902c12a-74ec-39f6-9039-88e7b118bbb9": {
      "content": "fscommand(${1:#:command}, ${2:#:paramaters});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "19062dba-f99f-30a2-8713-4a6e8469f9a3": {
      "content": "INTEGER",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "19096870-c5b3-3d47-908c-c23483bac422": {
      "content": "place-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "190a4c9d-693d-3bb6-87e4-1da3607481f7": {
      "content": "for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "1911587c-8769-3761-86d7-4ae2399de90e": {
      "content": "width: ${1:auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "width",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "19197cdf-ca9d-3c7b-92c0-7ff79ee35257": {
      "content": "overflow-style: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1919b540-88c2-331c-be58-bdaba02bcf94": {
      "content": "outline-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1919dafb-b836-388b-9a19-bdaeffaf0fe9": {
      "content": "for (${1:object} in ${2:array}) {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "1921764d-2244-3360-bb48-667a0e5fd06a": {
      "content": "_.xorBy(${arrays}, ${iteratee})",
      "doc": "_.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2, 3.4]\n\n// The `_.property` iteratee shorthand.\n_.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 2 }]\n\nThis method is like `_.xor` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich by which they're compared. The order of result values is determined\nby the order they occur in the arrays. The iteratee is invoked with one\nargument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xorby",
      "matches": {
        "lodash xorby": true
      },
      "source": "javascript/lodash"
    },
    "1927f2f0-827e-3926-99ce-1bb64fa14d7e": {
      "content": "expect(${1:target}).toContain(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to contain (coffee)",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "192837e3-42f3-3d1f-8fdd-be5b68f57d1b": {
      "content": "overflow: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "1934a8c0-aa80-38b9-8d21-fc1a02cbe376": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "19380e49-2a49-3800-8c95-ca3941dddf8e": {
      "content": "if ${1:#:condition}\n  ${2:TARGET}\nelse\n  ${3}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if else endif",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "19451724-ffe2-3e21-9d1a-b6d979f156f9": {
      "content": "{% js %}\n\t${0}\n{% endjs %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig js",
      "matches": {
        "js": true
      },
      "source": "vim-snippets/snippets"
    },
    "1946971d-8478-337b-ad65-75568efb7a37": {
      "content": "border-style: dotted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "194b5e14-218e-3942-aeb9-c11e866dddb7": {
      "content": "afterEach(() => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "afterEach(() => { ... })",
      "matches": {
        "afte": true
      },
      "source": "vim-snippets/snippets"
    },
    "1950439f-24c2-339a-82e8-79f690988274": {
      "content": "::after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      },
      "source": "vim-snippets/snippets"
    },
    "196ba0d2-63c3-357b-9ea1-f9f10cc85b9b": {
      "content": "render nothing: ${1:true}, status: ${0:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rns": true
      },
      "source": "vim-snippets/snippets"
    },
    "196cdec7-44f6-378b-a702-f850a98a9ab6": {
      "content": "console.trace(${1:object});",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTrace",
      "matches": {
        "ctr": true
      },
      "source": "vscode-javascript/snippets"
    },
    "196e490a-4995-349b-a780-17b5a4fae730": {
      "content": "__FILE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FILE": true
      },
      "source": "vim-snippets/snippets"
    },
    "19807775-2b1a-31cf-af42-5b67c2749fab": {
      "content": "background: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1987030c-1ca4-3d43-8840-e6b7a2599208": {
      "content": "${1:callbacks}.add(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cadd": true
      },
      "source": "snippets/coffee"
    },
    "198f98e1-9522-34f4-8f72-54239cf0acb5": {
      "content": "module ${1} : sig\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module signature",
      "matches": {
        "mos": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "19987d0f-3e48-31f6-ae7c-4ac3579d636a": {
      "content": "for(;;)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "forever (forever)",
      "matches": {
        "forever": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "199dddb1-fc02-3920-9a82-26ff5de2b18b": {
      "content": "[NSString stringWithFormat:@\"$1\", $2]$0",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSString stringWithFormat (format)",
      "matches": {
        "format": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "19aa7948-c0fd-3dbb-b9ee-c01730559d32": {
      "content": "sort(${1:dataArray}${2:, }${0:count});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      },
      "source": "vim-snippets/snippets"
    },
    "19b92ede-0699-3f92-86d5-08554030b3a0": {
      "content": "href=\"${1:#}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "href": true
      },
      "source": "vim-snippets/snippets"
    },
    "19b9bfef-f90d-3ba3-a4b8-21e944fdf205": {
      "content": "(try\n\t${1}\n\t(catch ${2:Exception} e ${3:nil}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "(try ... (catch ...",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "19cd0d20-2021-3be3-b400-f38d6f1dd844": {
      "content": "${1|transition,in,out|}:${2:name}={${3:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-params",
      "matches": {
        "svelte transition params": true,
        "svtp": true
      },
      "source": "javascript/svelte"
    },
    "19d47265-4f80-3fcb-bdbd-a540f4cb45c8": {
      "content": "const [${2:propertyName}] = ${1:arrayToDestruct};",
      "doc": "Array destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructingarray",
      "matches": {
        "base const destruct array": true
      },
      "source": "javascript/base"
    },
    "19da3924-cd13-3461-94d3-7fcb6f608f64": {
      "content": "while (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "19e15375-c620-3739-bc80-45e008f129be": {
      "content": "vertical-align super",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      },
      "source": "vim-snippets/snippets"
    },
    "19ec6910-60b2-362d-abd9-d3b4d125f581": {
      "content": "z-index: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "19f295cd-0d38-3567-bbca-55fedd1be12f": {
      "content": "{{- if .Values.$1.tolerations }}\n  tolerations:\n{{ toYaml .Values.${1:value_key}.tolerations | indent 8 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tolerations_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "19ff4e00-6dc3-3139-9ddd-19a96b8ecdec": {
      "content": "case ${1:expression} :\n\t${0}\nbreak;",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a00ad47-6b45-3040-91bb-2f28d0ed571a": {
      "content": "border-style: inset",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a00bdf3-e26c-32c4-b39a-cbf6e5a45f95": {
      "content": "@error \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@e": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a147aff-780d-382c-a9b9-bb846c17a7ce": {
      "content": "border-bottom-left-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a1d72ca-a0c4-35eb-89b3-0a1944f43168": {
      "content": "PropTypes.any.isRequired,",
      "doc": "Any prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeAnyRequired",
      "matches": {
        "ptanr": true
      },
      "source": "vscode-react/snippets"
    },
    "1a1e68c8-ab1d-32d7-ac55-9b38696b1759": {
      "content": "(provide ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prov": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a219535-4f74-3a0a-b096-89d82785c39f": {
      "content": "import { mapActions } from 'vuex';\n\nexport default {\n\tmethods: {\n\t\t...mapActions([\n\t\t\t${1:'nameOfAction'}, //also supports payload `this.nameOfAction(amount)` \n\t\t])\n\t},\n};",
      "doc": "mapactions inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapActions",
      "matches": {
        "vmapactions": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "1a2285b9-9eec-30ed-98ca-8ad58a839ff8": {
      "content": "${1:FIELDNAME} = models.NullBooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "NullBooleanField",
      "matches": {
        "mnullbool": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1a244c14-fb8d-38e6-b095-c6c5bfbf3340": {
      "content": "type ${1:Type} =\n\t${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a30d372-6e3b-3f23-9fa3-5b2e8572dc20": {
      "content": "for ${1:v} := range ${2:#:iterator} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for range",
      "matches": {
        "range": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1a31456b-9ea0-350a-8c0b-73ebfadb0da8": {
      "content": "overflow-y auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a323570-1e72-31d4-a1be-1b5b56d36fc2": {
      "content": "_.toString(${value})",
      "doc": "_.toString(null);\n// => ''\n\n_.toString(-0);\n// => '-0'\n\n_.toString([1, 2, 3]);\n// => '1,2,3'\n\nConverts `value` to a string. An empty string is returned for `null`\nand `undefined` values. The sign of `-0` is preserved.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tostring",
      "matches": {
        "lodash tostring": true
      },
      "source": "javascript/lodash"
    },
    "1a32e5fd-b968-3eb8-bb2b-6041dd3b7058": {
      "content": "after_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mau": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a3bedf2-1a1f-3949-8935-ed6b17a5748f": {
      "content": "useImperativeHandle(\n\t${1:ref},\n\t() => {\n\t\t${2:handler}\n\t},\n\t[${3:input}],\n)",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useimperativehandle",
      "matches": {
        "react useimperativehandle": true,
        "useimperativehandle": true
      },
      "source": "javascript/react"
    },
    "1a3e8633-5c00-3253-9f33-9542fde69a68": {
      "content": "font-stretch normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a463cf9-cd71-3cb5-98a8-6d9f8d0c4407": {
      "content": "class ${1:MODELNAME}Form(forms.ModelForm):\n\n\tclass Meta:\n\t\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelForm",
      "matches": {
        "modelform": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1a496f0c-4ed7-3020-b79c-c62e176ad64e": {
      "content": "{-# LANGUAGE ${1} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "{-# LANGUAGE ... #-}",
      "matches": {
        "language": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1a4b2887-f4f2-3cae-b679-3ab9722312be": {
      "content": "place-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a4b5b4c-1f2c-3260-9811-a59caeab9b60": {
      "content": "justify-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a54f64c-528c-35b2-98db-411432940932": {
      "content": "<div>\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a55ab79-9d75-326f-b3b2-5263ed642e2d": {
      "content": "static final ${1:Object} ${2:VAR_NAM} = ${0};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a59563f-22ab-3e66-adf3-24bc1ba5516d": {
      "content": "${1:methodName} = (${2:params}) => {\n\t${0}\n}\n",
      "doc": "Creates a method inside a class in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "method",
      "matches": {
        "met": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1a6ce99d-632c-3bdb-bc98-5d55981dc2fc": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a8a28cb-c804-30da-9f36-694a71af1611": {
      "content": "font-emphasize-style: dot;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a8b10ff-3458-3621-8f51-b633306d5d82": {
      "content": "| last",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a9381fd-b834-3b64-9a94-2191794d95a9": {
      "content": "<button type=\"submit\" [disabled]=\"!${1:form}.form.valid\">\n\tSave\n</button>",
      "doc": "Angular form submit",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformsubmit",
      "matches": {
        "a-form-submit": true,
        "angular ng form submit": true
      },
      "source": "javascript/angular"
    },
    "1a94d116-2bc6-33a7-8e15-58691410c0a0": {
      "content": "kv.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kvt": true
      },
      "source": "vim-snippets/snippets"
    },
    "1a966edd-c4c5-3236-8ee1-2bd4f38d5db9": {
      "content": "sort_by {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort_by": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1a97a3ab-c051-347f-89e1-7168b8ec0c0c": {
      "content": "const ${1:store} = readable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-readable",
      "matches": {
        "svelte readable": true,
        "svr": true
      },
      "source": "javascript/svelte"
    },
    "1aa1288c-e644-3428-a042-88a6e3601840": {
      "content": "_.xor(${arrays})",
      "doc": "_.xor([2, 1], [2, 3]);\n// => [1, 3]\n\nCreates an array of unique values that is the\n[symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\nof the given arrays. The order of result values is determined by the order\nthey occur in the arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xor",
      "matches": {
        "lodash xor": true
      },
      "source": "javascript/lodash"
    },
    "1aa532c5-23b1-3a18-9344-357449898ac4": {
      "content": "@break",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@break",
      "matches": {
        "break": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1ab8e04f-1a90-300d-b459-9ba64db9cb93": {
      "content": "$strobe(\"${1}\", ${2});",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "$strobe(\"...\", ...);",
      "matches": {
        "strobe": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1aba2c53-be20-3d36-8895-3877ba5e21ea": {
      "content": "import React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React pure component class with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassPureComponent",
      "matches": {
        "rpc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1ac4a342-13d8-3be0-9a7b-9fc7678245d4": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else if ${3: otherCondition}}\n\t${4: <!-- else if content here -->}\n{:else}\n\t${5: <!-- else content here -->}\n{/if}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-if-block",
      "matches": {
        "svelte if else if": true,
        "svif-else-if": true
      },
      "source": "javascript/svelte"
    },
    "1adbf54a-2695-3511-ace6-c0b1e106cc65": {
      "content": "(begin\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ae2bfcb-f7aa-3153-a611-d9e9219e4911": {
      "content": "text-height: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ae74c60-98ac-3397-ba75-8e4e6e77fcfa": {
      "content": "(for/last ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/last",
      "matches": {
        "forla": true
      },
      "source": "vim-snippets/snippets"
    },
    "1aeeb451-48f6-3d51-af91-a438b57fb7dd": {
      "content": "redirect(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rr": true
      },
      "source": "vim-snippets/snippets"
    },
    "1af4409c-ef54-3d06-9cab-7624bd71bd43": {
      "content": "<returns>${0:#:description}</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<returns></returns>",
      "matches": {
        "returns": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1af50f25-7da0-3bdb-aece-1d895e884e75": {
      "content": "background: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "background": true,
        "bg": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1af8adcd-0d86-3ff1-adb4-1776d54e319f": {
      "content": "echo CHtml::css('${1:test}','${0:media}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcss": true
      },
      "source": "vim-snippets/snippets"
    },
    "1afacba6-72cb-3f1b-ae7f-f30e43eff3a3": {
      "content": "unimplemented!()",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "unimplemented!()",
      "matches": {
        "unim": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b0382ff-a44d-33ed-aca7-425d5c81d12f": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ${2:ComponentName}Component } from './${3:filename}.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable({providedIn: ${4:'root'}})\nexport class ${1:Name}Guard implements CanDeactivate<${2:ComponentName}Component> {\n\tcanDeactivate(\n\t\tcomponent: ${2:ComponentName}Component,\n\t\tcurrentRoute: ActivatedRouteSnapshot, \n\t\tcurrentState: RouterStateSnapshot\n\t): Observable<boolean>|Promise<boolean>|boolean {\n\t\treturn false;$0\n\t}\n}",
      "doc": "Angular CanDeactivate guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-candeactivate-guard",
      "matches": {
        "a-guard-can-deactivate": true,
        "angular can deactivate guard": true
      },
      "source": "javascript/angular"
    },
    "1b08a8ab-3810-31de-bdbe-ad35ac48d673": {
      "content": "clear: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b096d3b-33ff-3da9-8089-a07c280f987f": {
      "content": "rename_column :${1:table_name}, :${2:old_column_name}, :${0:new_column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrnc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b09c04f-8db4-3c18-b4b5-320d037b8db6": {
      "content": "std::unordered_multiset<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "umset": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b0fa481-dbab-3cd0-adbf-f6fa7a3392ea": {
      "content": "componentWillMount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillMount",
      "matches": {
        "componentWillMount": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1b13a32c-1137-3860-9cff-abed2099c3f5": {
      "content": "module ${1} = struct\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module struct",
      "matches": {
        "mod": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b1aaa2f-f3b2-3e5a-a7b6-3dce39b65198": {
      "content": "#!/bin/zsh",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b1d0093-f599-32b1-a869-4c7998e88fd7": {
      "content": "visibility: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b204e64-6425-3e6f-a04b-2303eea3b23c": {
      "content": "describe('$1', () => {\n\t$0\n})\n",
      "doc": "Testing `describe` block",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "describeBlock",
      "matches": {
        "desc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1b2490ce-fe23-3e7e-8e11-a6ec05681d87": {
      "content": "@version ${1:0.1.0}$0",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@version Semantic version",
      "matches": {
        "@ver": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1b2ae396-d28f-3008-bff2-758c8c2731dd": {
      "content": "| money_without_currency",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_without_currency": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b314fb8-a3c9-3131-a64b-fdd403ed6721": {
      "content": "| upcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "upcase": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b32c56d-5672-3baa-aa2b-6977e3d4030e": {
      "content": "if err != nil {\n\t${1}\n\treturn\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { ... return }",
      "matches": {
        "errh": true
      },
      "source": "gosnippets/snippets"
    },
    "1b3f9035-1159-303f-859f-bad457a4b1c2": {
      "content": "$this->assertEquals(${1:$expected}, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertEquals($a, $b)",
      "matches": {
        "ase": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b446272-973a-368b-98df-1cf2ea68d4d8": {
      "content": "$this->${1:method}()->shouldContain(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldContain('value')",
      "matches": {
        "scontain": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1b457c23-12a2-3245-9a5c-b924e4d415a2": {
      "content": "note = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "note": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b47236d-0d7a-326d-8846-3e01bf4fe939": {
      "content": "if !exists(\"g:${1:MyUltraImportantVar}\")\n\tlet g:$1 = ${2:\"${3:<tab>}\"}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "Global / configuration variable",
      "matches": {
        "gvar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1b4b3345-b856-3067-b545-6940439042da": {
      "content": "display inline-block",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b4b6e07-8e98-33b1-85d9-0ea6cd8ecc06": {
      "content": "overflow-y: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b4e87da-2378-3726-8352-b8ebe97b0377": {
      "content": "type ${1} interface {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true,
        "ti": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b4ef953-42c0-3a7b-b9bb-90edd98ccd80": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with LESS",
      "matches": {
        "vbase-less": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "1b51c517-ac2c-3601-964d-9244644250dd": {
      "content": "require '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b549346-a608-3dc7-bcb5-8b35d5c1cfae": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) begin\n\t${4}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b596942-6c7e-31cc-93e1-36e5c580e9b4": {
      "content": "\\nocite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\nocite": true,
        "nocite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b5de270-6f8b-3919-946d-32073ccdc5c2": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with PropTypes and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassCompomentPropTypes",
      "matches": {
        "rccp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1b5f3a03-67f9-398b-a28e-f6aa4aaf8320": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      },
      "source": "vscode-react/snippets"
    },
    "1b615fa5-80a1-30c8-a5ba-6bfd435ca030": {
      "content": "if [[ ${1:condition} ]]; then\n\t${0:${VISUAL}}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b6194c7-7f4e-3d2d-bcf9-54c244f8ff8e": {
      "content": "border-left-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b6d41a7-3d2f-31a5-98d1-a9b69af82a9d": {
      "content": "${1:obj}.live '${2:events}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "live": true
      },
      "source": "snippets/coffee"
    },
    "1b734fe5-3d3d-3047-acd5-353f66c05700": {
      "content": "render partial: '${1:item}', status: ${0:500}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rps": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b7eb207-9136-3e12-98cf-6025f157df35": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t${3:${VISUAL}}\nelse\n\t${0}\nendif",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b7f4cc8-4bc9-3b9d-a57a-7b59166e9869": {
      "content": "select ${1:variable}\n\tcase ${2:TypeSpec}\n\tcase ${0:TypeSpec}\n\tdefault\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b8b25c0-ed34-369a-8b64-68a703d80da3": {
      "content": "impl ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1b93c94f-daa0-3ba9-9d85-6158b030589f": {
      "content": "println(gl.glGetError());",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl get error",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b94b896-24a1-36d3-a297-04d4fcfc38ea": {
      "content": "render() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n}",
      "doc": "When called, it should examine this.props and this.state and return a single child element.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentRender",
      "matches": {
        "ren": true
      },
      "source": "vscode-react/snippets"
    },
    "1b9c496e-e729-3179-8ce0-d6eadcd1db4e": {
      "content": "echo CHtml::linkTag('${1:relation}', '${2:type}', '${3:href}', '${4:media}',array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlinkt": true
      },
      "source": "vim-snippets/snippets"
    },
    "1b9dfd03-2ea6-3e93-bc44-06abf6e2ef72": {
      "content": "<script type=\"${1}\" id=\"${2}\">\n\t${0}\n</script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptt": true
      },
      "source": "vim-snippets/snippets"
    },
    "1badc662-5d13-3792-9343-e8aee4d2389d": {
      "content": "java.beans.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.b": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1bae31fa-70fc-3e61-b53b-3f211e321b92": {
      "content": "if ( ${1:condition} ) {\n\t${2}\n}\nelse {\n\t${3}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bb85ef4-7164-3e6c-bb85-81ae6ac14833": {
      "content": "${1:(jpeg,bmp,png,tiff)}(filename = '${2:filename}', width = ${3}, height = ${4}, unit = '${5}')\n${0:plot}\ndev.off()",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bbc9566-cddf-353d-a3e1-06de7c4478ae": {
      "content": "# Service resource\nservice ${1:\"service_name\"} do # Name of the service\n\t${2:#}enabled ${3:nil} # Whether the service is enabled at boot time\n\t${4:#}running ${5:nil} # Make sure the service is running. Start if stopped\n\t${6:#}pattern ${7} # Pattern to look for in the process table\n\t${8:#}start_command ${9:nil} # Command used to start this service\n\t${10:#}stop_command ${11:nil} # Command used to stop this service\n\t${12:#}status_command ${13:nil} # Command used to check the service run status\n\t${14:#}restart_command ${15:nil} # Command used to restart this service\n\t${16:#}reload_command ${17:nil} # Command used to tell this service to reload its configuration\n\t${18:#}supports ${19:false} # Features this service supports, ie :restart, :reload, :status\n\t${20:#}${21:action :enable} # Enable this service\n\t${22:#}${23:action :disable} # Disable this service\n\t${24:#}${25:action :nothing} # Don't do anything with this service (Default)\n\t${26:#}${27:action :start} # Start this service\n\t${28:#}${29:action :stop} # Stop this service\n\t${30:#}${31:action :restart} # Restart this service\n\t${32:#}${0:action :reload} # Reload the configuration for this service\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bc523bf-cb66-305b-a305-28dfb15d78a2": {
      "content": "overflow: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bd0d99a-f3de-31f7-b6bc-331ee17010ef": {
      "content": "<svelte:window />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window",
      "matches": {
        "svelte window": true,
        "svw": true
      },
      "source": "javascript/svelte"
    },
    "1bd37746-7b99-34c5-8dec-1b27025816d7": {
      "content": "import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Router",
      "matches": {
        "imrr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1bd76f25-cfcb-3134-b891-72ce060e0c57": {
      "content": "${1:obj}.offset()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      },
      "source": "snippets/coffee"
    },
    "1bdca844-216f-3452-a491-7e42ba78c129": {
      "content": "white-space pre-line",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bdda5d7-1f0f-32fb-819a-d3bfd1d6da0d": {
      "content": "loadStrings(\"${0:filename}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadStrings": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bdeb5df-9703-3c79-9839-1952b63100b6": {
      "content": "${1:obj}.serializeArray()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serializea": true
      },
      "source": "snippets/javascript"
    },
    "1bec13ca-7f18-3073-8737-72b394243162": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChild, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivateChild {\n\tconstructor() { }\n\n\tcanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivateChild guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canactivatechild-guard",
      "matches": {
        "a-guard-can-activate-child": true,
        "angular can activate child guard": true
      },
      "source": "javascript/angular"
    },
    "1bf060d8-e154-3ab7-958f-c7ebc4f8291d": {
      "content": "spec:\n  type: \"{{ .Values.$1.service.type }}\"\n  clusterIP: \"{{ .Values.$1.service.clusterIP }}\"\n{{- if .Values.$1.service.externalIPs }}\n  externalIPs:\n{{ toYaml .Values.$1.service.externalIPs | indent 4 }}\n{{- end }}\n{{- if .Values.$1.service.loadBalancerIP }}\n  loadBalancerIP: \"{{ .Values.$1.service.loadBalancerIP }}\"\n{{- end }}\n{{- if .Values.$1.service.loadBalancerSourceRanges }}\n  loadBalancerSourceRanges:\n{{ toYaml .Values.$1.service.loadBalancerSourceRanges | indent 4 }}\n{{- end }}\n{{- if and (semverCompare \">=1.7-0\" .Capabilities.KubeVersion.GitVersion) (.Values.$1.service.externalTrafficPolicy) }}\n  externalTrafficPolicy: \"{{ .Values.$1.service.externalTrafficPolicy }}\"\n{{- end }}\n{{- if and (semverCompare \">=1.7-0\" .Capabilities.KubeVersion.GitVersion) (.Values.$1.service.healthCheckNodePort) }}\n  healthCheckNodePort: {{ .Values.${1:value_key}.service.healthCheckNodePort }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "1bf162c5-94e0-3830-aca6-617c88ca9bb2": {
      "content": "get ${1:property}() {\n\t${0}\n}",
      "doc": "getter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "getter-es6-syntax-",
      "matches": {
        "base getter": true
      },
      "source": "javascript/base"
    },
    "1c016aac-a897-3997-b9c9-cabfcbd1c53d": {
      "content": "font-family: ${0:Helvetica,Arial},sans-serif",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c09bfc3-7c19-3d59-a380-6fb2bbc03df0": {
      "content": "background-color transparent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c150647-003f-30d6-9068-6347e5370ff5": {
      "content": "grid-auto-flow: column dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c17090e-b0fe-3d06-9f03-c54752996aa7": {
      "content": "#!/usr/bin/env Rscript",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c1a53b2-a3b6-3d1d-9619-d501d28eb8f3": {
      "content": "if ${1:condition}\n\t${0}\nelse\n    ${1}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c1bc3b3-ee98-362d-9380-26c1fdae4e50": {
      "content": "counter-increment ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c25e892-e783-3e52-84d2-ee5f5db55625": {
      "content": "@import url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c2e4acc-eec4-3f44-a2f9-2b0e83abb131": {
      "content": "require '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "require",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c30111a-44ad-3c12-847b-ee7ae7477283": {
      "content": "all? { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c3740ea-353e-3f73-99ad-8b55ed482d7e": {
      "content": "### OSX ###\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \r\nIcon\n# Thumbnails\n._*\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# Nuxt build\n.nuxt\n\n# Nuxt generate\ndist",
      "doc": "gitignore file",
      "filetype": "ignore",
      "grammar": "lsp",
      "label": "Gitignore",
      "matches": {
        "gitignore": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "1c42f71f-9c9c-35b2-be85-3785bba701d6": {
      "content": "*ngIf=\"${1:expression}\"",
      "doc": "Angular *ngIf",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngIf",
      "matches": {
        "a-ngIf": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "1c48b305-220e-396f-a6dc-e3902d4224a2": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      },
      "source": "vscode-react/snippets"
    },
    "1c4b26cf-cd2d-3b76-bbaa-a387b01a1003": {
      "content": "if ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c4dfd12-6c78-399e-ac9c-6b42ceff70b1": {
      "content": "const ${shouldReduceMotion} = useReducedMotion()",
      "doc": "A hook that returns true if we should be using reduced motion based on the current device's Reduced Motion setting.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-reduce-motion",
      "matches": {
        "framer-motion use-reduce-motion": true,
        "use-reduce-motion": true
      },
      "source": "javascript/framer-motion"
    },
    "1c55b29c-5c38-30f2-9915-23e67d21afa4": {
      "content": "${1:app}.post('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epost": true
      },
      "source": "snippets/javascript"
    },
    "1c589716-665b-31f0-97a5-35a36a6b8f2c": {
      "content": "useCallback(\n\t() => {\n\t\t${1:callback}\n\t},\n\t[${2:input}],\n)",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useCallback",
      "matches": {
        "useCallback": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1c5b7c3c-2998-3e20-a05a-142cf3c5c7aa": {
      "content": "describe \"${1:test group subject}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "des": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c6300e9-5695-3d53-a0e1-724f0b1a12d4": {
      "content": "page-break-inside avoid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c65ac76-b883-31a6-a9ce-5bb9e85b5c3d": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c6dc88b-7d91-331d-bc7b-ae3f4a1b6b4d": {
      "content": "alert(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c76389c-9911-372e-8217-318d7c487867": {
      "content": "${1:map}.resources :${0:resource}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maprs": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c7813dc-bd58-3bf8-a709-9297cf594ace": {
      "content": "module.exports = {\n\t${1:member}\n};",
      "doc": "module exports object",
      "filetype": "base",
      "grammar": "lsp",
      "label": "module-exports-object",
      "matches": {
        "base module exports object": true
      },
      "source": "javascript/base"
    },
    "1c7d4d98-7614-3e41-b956-1c464662d69a": {
      "content": "for ${1:name} in [${2:start}...${3:finish}] by ${4:step}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrexb": true
      },
      "source": "snippets/coffee"
    },
    "1c7eb18b-a005-378f-b7ef-afd3b7c7b370": {
      "content": "def new\n\t@${1:model_class_name} = ${2:ModelClassName}.new\n\trespond_to do |format|\n\t\tformat.html # new.html.erb\n\t\tformat.json  { render json: @$1 }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defnew": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c82808b-fb1f-3156-a252-92ea5512f577": {
      "content": "use strict;\nuse warnings;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strwar": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c83e3ab-777c-3fd9-99a0-1d6460e038d2": {
      "content": "vertical-align: bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "1c8e671b-2fc4-3aba-a9f6-2dfdb219cfca": {
      "content": "import React, { memo } from 'react'\n\nexport default memo(function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n",
      "doc": "Creates a React Memo Function Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionMemoComponent",
      "matches": {
        "rmc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1c926517-ba95-361f-b871-c1f8e9866bfb": {
      "content": "include '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1cb0d033-d4ab-3b33-9ba0-c0ac867b7490": {
      "content": "join(${1:strgArray}${2: , }${0:seperator});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/snippets"
    },
    "1cb33ab9-7027-31f1-a938-8b8a76136c46": {
      "content": "System.Windows.Forms",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.w.f": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1cbc0c68-33ab-3cc2-b715-c998e1345a26": {
      "content": "LOGGER.debug(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lg": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ccce8cd-73d3-369a-a36f-71e626b188c9": {
      "content": "for ${1} in ${2}\n\t${0:${VISUAL}}\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for ... in loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "1cd862f8-0e9c-3c67-a4fb-9e2886c45fa0": {
      "content": "console.time(${1:object});",
      "doc": "Sets starting point for execution time measurement",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTime",
      "matches": {
        "cti": true
      },
      "source": "vscode-javascript/snippets"
    },
    "1cdbfd11-741f-3683-9628-b3cd5199b144": {
      "content": "@unpublished{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    note = {${4}},\n    memo = {month, year},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@unpublished": true,
        "unpublished": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1cdf8fe1-0393-3194-89ee-2b2d3fbba43f": {
      "content": "${1}:\ndeclare\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare named block",
      "matches": {
        "declare_named": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1ce168d2-22f6-3538-978c-2112ca164553": {
      "content": "public class ${1:Hello} {\n  static public void main(String args[]) {\n    System.out.println(\"Hello, world!\");\n  }\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1ce20574-1f80-34c9-82db-1c6846328693": {
      "content": "position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ce842a7-3ead-3a50-bbca-394856b42c45": {
      "content": "{% extends \"${1:base.html}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1ce92e63-4e72-336b-8fd4-8dd571f13eca": {
      "content": "${1:obj}.error (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      },
      "source": "snippets/coffee"
    },
    "1ceeda9d-fc55-3c77-a553-91ee58e8bfa8": {
      "content": "place-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "1cf52b73-50c0-3522-b05e-e35a7e143413": {
      "content": "return new Promise((resolve, reject) => {\n\t${1}\n})\n",
      "doc": "Creates and returns a new Promise in the standard ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "promise",
      "matches": {
        "prom": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1d006e85-1c5a-3372-b80c-889cc4b7b63c": {
      "content": "{\n\t\"type\": \"text\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_text": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d053183-050a-3e5b-b495-96ada12a25b0": {
      "content": "${1:FIELDNAME} = forms.SlugField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SlugField",
      "matches": {
        "fslug": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1d063d00-f1d8-3037-9aab-cc5f5442214b": {
      "content": "${1:obj}.width(${2:integer})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      },
      "source": "snippets/coffee"
    },
    "1d0c68ac-032e-34d0-8fe9-d6208c2db831": {
      "content": "import { Helmet } from 'react-helmet';",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-import",
      "matches": {
        "react-helmet import": true
      },
      "source": "javascript/react-helmet"
    },
    "1d1f4a91-7421-35a5-93ac-e1b22aeaed6a": {
      "content": "add_index :${1:table_name}, :${0:column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mai": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d1fc2f0-a43d-3830-9292-8e11fed5af2a": {
      "content": "analogWrite(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d1ff01a-90d7-3330-8111-96d6c74486c4": {
      "content": ".. figure:: ${1:img}\n\t:alt: ${2:alter text}\n\t$0",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fig:": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d2ba8cc-2dae-3b6e-b5d4-3c2eb88e2c0d": {
      "content": "default_if_none:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1d2c1015-b522-3ec9-aef9-9aff5ff07d63": {
      "content": "map[${1:keytype}]${2:valtype}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Map type",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1d368ca4-44a1-3455-80f3-88646886e1f4": {
      "content": "border-bottom-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d38a825-5fd5-3771-97cb-6a2e8ebbdf7c": {
      "content": "bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d464a55-a1b4-303a-8a79-22f4bf72624c": {
      "content": "<%= ${1:f}.file_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffff": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d467357-d9e4-37ee-b8da-7238c849095a": {
      "content": "resize: vertical",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d47e98d-4a03-3142-8feb-27ada3b64cb9": {
      "content": "list-style-type: ${1:lower-roman/upper-roman/lower-alpha/upper-alpha/lower-greek/lower-latin/upper-latin};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: roman-alpha-greek (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1d4b51c4-c520-3856-8555-ce23dcb180ca": {
      "content": "word-break: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d4b56ab-3e87-3665-831a-956bfca0c7a2": {
      "content": "#[cfg(${1:target_os = \"linux\"})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "cfg attribute",
      "matches": {
        "cfg": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d4d6dfd-6d22-3a3f-9a34-f0e15bf401f4": {
      "content": "border-top-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d4d99bd-f1c4-3836-88e4-f99ae5a47f90": {
      "content": "&#x238B;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "esc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d527b9d-4f55-3869-aa73-a9321f18041d": {
      "content": "/* ------------------------------------------------------------------------- */",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sep": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d54427e-e26a-32f3-9af8-91f00995e9bf": {
      "content": "grid-row: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d56f718-086c-3ff0-a43b-a7cb3376d931": {
      "content": "${1:ptr} = realloc($1, ${2:size} * sizeof(${3:type}));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d57c6f0-5939-3c77-8e96-6fa61e91d948": {
      "content": "Logger.debug(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d58202c-b355-3716-be29-8f7e8dd72363": {
      "content": "{% endautoescape %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endautoescape",
      "matches": {
        "endautoescape": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d5bb4da-3dba-3b8b-8e9c-e2020389a63e": {
      "content": "border-collapse: separate;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d678b51-f7e3-359b-93f8-4db8ce9e363c": {
      "content": "randomSeed(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "randomSseed": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d6c53f8-ba02-352c-9d17-816677b17a3f": {
      "content": "place-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d7952fa-75c7-3c64-a234-42bd5bdac8e2": {
      "content": "function ${1}(${3})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d7aeffa-4601-3749-a6a5-ffd7abee46b6": {
      "content": "expect(${1:target}).not.toBeVisible();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be visible (js)",
      "matches": {
        "notv": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d7c3548-cfbf-33bb-8940-52986710d7b4": {
      "content": "when {\n\tenvironment '${1:environment}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenenvironment": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d8013f8-beaa-36b0-b4d9-d4173e1749f3": {
      "content": "<c:import url=\"${1}\">\n\t<c:param name=\"${2}\" value=\"${3}\" />\n\tcparam+${0}\n</c:import>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cimport+": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d83a1f0-32d3-3e15-852c-7a8de77f77d6": {
      "content": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {\n\t${6}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iter": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d83ca70-a615-384c-9dc3-d27fd79c7315": {
      "content": "$.Callbacks()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      },
      "source": "snippets/coffee"
    },
    "1d87966b-97f6-34ae-bae8-78243c1f39ad": {
      "content": "(cond\n  ((${1}) ${2})\n  (${0:else}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1d8e000e-ec4d-306c-9148-a9be3e12ef9a": {
      "content": "{{- if .Values.$1.enabled }}\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n# spec\n\t# containers_spec\n\t# livenessProbe_spec\n\t# PersistentVolumeClaim_spec\n\t# initContainers_spec\n\t# resources_spec\n\t# nodeselector_spec\n\t# tolerations_spec\n\t# affinity_spec\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d8f2cc9-4818-3173-984d-6e7b174c46b4": {
      "content": "text-indent: -9999px;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      },
      "source": "vim-snippets/snippets"
    },
    "1d8ffc03-29ef-3691-a79e-1cedc36e9f04": {
      "content": "_.bindKey(${object}, ${key}, ${partials})",
      "doc": "var object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n\nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n\nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n\nbound('!');\n// => 'hiya fred!'\n\n// Bound with placeholders.\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'\n\nCreates a function that invokes the method at `object[key]` with `partials`\nprepended to the arguments it receives.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist. See\n[Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bindkey",
      "matches": {
        "lodash bindkey": true
      },
      "source": "javascript/lodash"
    },
    "1d9d8dfd-b8d6-30c3-98ee-15973caf86fb": {
      "content": "for {\n\t${1:item} <- ${2:obj}\n} yield ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fory": true
      },
      "source": "vim-snippets/snippets"
    },
    "1da24f53-63a3-3ae6-8733-e6b8d34f67c2": {
      "content": "/**\n * {@inheritdoc}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "@inheritdoc docblock",
      "matches": {
        "inheritdoc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1daa9ec7-e4b8-336b-8306-b2aaaabec1c8": {
      "content": "${1}defined('${2}')",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def?": true
      },
      "source": "vim-snippets/snippets"
    },
    "1dbd2cbc-bc37-3b29-baec-4dd7bbc49f60": {
      "content": "// Crate name\n#![crate_name = \"${1:crate_name}\"]\n// Additional metadata attributes\n#![desc = \"${2:Description.}\"]\n#![license = \"${3:BSD}\"]\n#![comment = \"${4:Comment.}\"]\n// Specify the output type\n#![crate_type = \"${5:lib}\"]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Define create meta attributes",
      "matches": {
        "crate": true
      },
      "source": "vim-snippets/snippets"
    },
    "1dc7a826-8718-3ec4-b309-18bb2615c311": {
      "content": "border: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      },
      "source": "vim-snippets/snippets"
    },
    "1dd4d785-09e4-3ddb-853f-1a3ad815579c": {
      "content": "align-content baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ddc2d07-c1af-312f-916a-90772bdba7f9": {
      "content": "_.partialRight(${func}, ${partials})",
      "doc": "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\n// Partially applied with placeholders.\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'\n\nThis method is like `_.partial` except that partially applied arguments\nare appended to the arguments it receives.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partialright",
      "matches": {
        "lodash partialright": true
      },
      "source": "javascript/lodash"
    },
    "1ddcb359-0fef-3e02-800a-0041319e3c34": {
      "content": "-moz-border-image ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ddf572e-c73d-3825-9ef5-b964046bf07f": {
      "content": "{ rel: 'stylesheet', href: '${1:https://fonts.googleapis.com/css?family=Montserrat:600|Rufina:700}' }",
      "doc": "link to include fonts in a nuxt project, in nuxt-config",
      "filetype": "nuxt-config",
      "grammar": "lsp",
      "label": "Nuxt Font",
      "matches": {
        "nfont": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "1de17ff5-9366-3e22-b9c0-8ab3489592d2": {
      "content": "(define-values (${1}) (${0}))",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define-values",
      "matches": {
        "defv": true
      },
      "source": "vim-snippets/snippets"
    },
    "1dea9764-ce65-356f-90c9-65deb328481d": {
      "content": "${1:myVar}: React.PropTypes.${2:type}${3:.isRequired}\n$4",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React propType (key/value)",
      "matches": {
        "propType": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1df47e15-02c2-30d9-8736-e7978ae46007": {
      "content": "<% for (let ${1:i = 0}; ${2:i<arr.length}; ${3:i++}) { %>\n\t${0:body}\n<% } %>",
      "doc": "",
      "filetype": "ejs",
      "grammar": "snu",
      "label": "ejs for loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1df83a46-a8df-3280-b0b2-11b36bcf856f": {
      "content": "if ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "if ... end",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1e068ae0-c6c6-3d82-840f-d34133985f79": {
      "content": "echo CHtml::activeDropDownList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaddl": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e0cb5b3-cde5-360a-96d0-7a0100e40566": {
      "content": "{ path: '', pathMatch: 'full', redirectTo: '${1:path}' }$0",
      "doc": "Angular default route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-default-route-path",
      "matches": {
        "a-route-path-default": true,
        "angular default route path": true
      },
      "source": "javascript/angular"
    },
    "1e1417e3-bce7-3181-ba8a-903f0878e8d8": {
      "content": "return ${1} do\n\t${0}\nend return;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "extended return",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e19e1ad-103f-3250-8da6-c2decfe2f5d8": {
      "content": "switch ${1:expression}\n\tcase ${2:item}\n\tcase ${0:item}\n\tdefault\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e2280b2-31a1-33bd-90a7-8e65caa7237a": {
      "content": "go func(${1} ${2:type}) {\n\t${3:/* code */}\n}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "goroutine anonymous function",
      "matches": {
        "ga": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e25a37d-6584-3265-8f36-7470b1075f1d": {
      "content": "class ${1:#:ClassName} {\n\tvar _${2};\n\tfunction ${1}(${2}){\n\t\t_${2} = ${2};${0}\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1e28162c-1843-3097-beee-49f40b5f123f": {
      "content": "${1:obj}.attr('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      },
      "source": "snippets/coffee"
    },
    "1e38f675-b5d8-36d1-b932-ea727cd71513": {
      "content": "go ${1:funcName}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "goroutine named function",
      "matches": {
        "g": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e3b81d1-f488-3dd8-b75c-e42c4c119b3c": {
      "content": "border-bottom-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbw": true,
        "border-bottom-width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1e4ad9b0-231b-3626-9fee-fed3ee8c5215": {
      "content": "break;",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1e4b5e22-c9f7-31fb-bdab-c93fc3560bf1": {
      "content": "validates_exclusion_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of",
      "matches": {
        "ve": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1e511913-dd09-3eb4-9be1-14d2d2f8786d": {
      "content": "${1:slice} = append($1, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "slice = append(slice, value)",
      "matches": {
        "ap=": true
      },
      "source": "gosnippets/snippets"
    },
    "1e517708-edf9-3133-b2de-56dc8611f62b": {
      "content": "export const query = graphql`${1:query}`;",
      "doc": "Gatsby uses the concept of a page query, which is a query for a specific page in a site.Note that you can only have one page query per file.",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-export-query",
      "matches": {
        "gatsby export query": true
      },
      "source": "javascript/gatsby"
    },
    "1e583e6a-af37-378d-85b0-efd10c1b653e": {
      "content": "place-self ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e589839-f123-3901-8519-4d649719be4b": {
      "content": "cursor: ${1:default/auto/crosshair/pointer/move/*-resize/text/wait/help};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "cursor: type (cursor)",
      "matches": {
        "cursor": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1e5bad25-cf02-368e-badb-db7f1d5ba73a": {
      "content": "{% ifnotequal ${1} ${2} %}\n\t${0}\n{% endifnotequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e5d6c54-7f92-348e-92b5-beee04bbd9a1": {
      "content": "(defprotocol ${1:name}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defp": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e70a7f5-3ec4-373d-bd9d-57d7b0492bc4": {
      "content": "internal string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms&": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e7d7f3c-b50e-3813-b4d3-29dd2f3abce7": {
      "content": "expect($1).toBeLessThanOrEqual($0);",
      "doc": "expects the argument is less than or equal",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobelessthanorequal",
      "matches": {
        "jest expect tobelessthanorequal": true,
        "tblte": true
      },
      "source": "javascript/jest"
    },
    "1e82e03d-817d-3d94-a2da-2d2071caded4": {
      "content": "::after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1e8a88ce-dbe3-33ae-bad2-9095d1956837": {
      "content": "import React from 'react'\n",
      "doc": "import React",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react",
      "matches": {
        "imr": true,
        "react import": true
      },
      "source": "javascript/react"
    },
    "1ea1874b-aad1-3d58-b026-bbdb2a862a9d": {
      "content": "$this->db->select(${1:sql}, ${2:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_select": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ea8a72d-9fc1-3c3a-82d6-12071fc102d7": {
      "content": "java.io.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.i": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ead2eb0-463d-362c-a3e8-492f5e198f44": {
      "content": "{% verbatim %}\n\t${0}\n{% endverbatim %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig verbatim",
      "matches": {
        "verbatim": true
      },
      "source": "vim-snippets/snippets"
    },
    "1eaeebdf-90c1-3990-807f-42d1903722d7": {
      "content": "t.timestamps\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create timestamps columns",
      "matches": {
        "tctss": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1eb44c6f-d1a4-356e-bd8e-ec8737fa1671": {
      "content": "repeat ${1:integer}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      },
      "source": "vim-snippets/snippets"
    },
    "1eb73484-eb79-39b1-80cd-c046bca2888f": {
      "content": "% while ${1:}:\n\t${0:}\n% endwhile",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "1eb85f42-d2ee-3603-a7ec-b9e865a3f194": {
      "content": "const dispatch = useDispatch()",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useDispatch",
      "matches": {
        "useDispatch": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "1ec2864e-430c-3e82-93f9-f9257d9d76a2": {
      "content": "asin(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asin": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ec3817b-b8e6-3bdc-88fe-2d4e8e4e05f1": {
      "content": "{% autoescape ${1:true} %}\n\t$2\n{% endautoescape %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "autoescape",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1ec6f814-4f60-3565-9416-8b29d562d8e9": {
      "content": "${1:name}: ${2:Type},",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct field definition",
      "matches": {
        "fd": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ecbeef7-7c03-3861-aad1-61e0f19a1698": {
      "content": "def this(arg) = this(arg)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "athis": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ed03c3c-1eaa-304a-86eb-0cc10608f707": {
      "content": "using (${1:resource})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usi": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ed7f2ad-7b2f-341d-a9dd-7a36f5aa3fa8": {
      "content": "${1:deferred}.always(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dalways": true
      },
      "source": "snippets/javascript"
    },
    "1ed863bf-7758-3eac-9825-5eaf10ca15bb": {
      "content": "page-break-after always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "1eddd63a-626e-311c-b5e8-cb48d86690a8": {
      "content": "font-emphasize-position after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ef0333a-436c-3145-83bd-22cc8667afeb": {
      "content": "seq(${1:from}, ${2:to}, ${3:by})",
      "doc": "Sequence (from,to,by)",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "seq",
      "matches": {
        "seq": true
      },
      "source": "vscode-R/snippets"
    },
    "1ef09000-5689-3390-9d0d-7aed1ca4db41": {
      "content": "noiseSeed(${0:x});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noiseSeed": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ef2bd39-0c6a-37d8-a2a7-0c725a8f5ce1": {
      "content": "font-weight: lighter",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "1ef8c1b6-4dba-3769-8db0-3b850c90b9b2": {
      "content": "{% debug %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f01e4dd-1391-3901-a3ff-09f54e39a3ef": {
      "content": "background ${1} url(${2}) ${3:0} ${4:0} ${0:no-repeat}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f1195ba-83aa-32dd-b235-85d219c23896": {
      "content": "border-fit repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f1203fd-0b9b-3ca6-b9e5-fcaa0b759118": {
      "content": "${1:obj}.data(${2:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      },
      "source": "snippets/coffee"
    },
    "1f154520-1073-3a3e-9354-c059c58aabc2": {
      "content": "internal int ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&|": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f26b0a8-7dcb-34cc-82c1-d04c8cbd75ca": {
      "content": "align-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f2a9dca-423a-3f1b-9995-35578b856d7e": {
      "content": "_.value()",
      "doc": "_([1, 2, 3]).value();\n// => [1, 2, 3]\n\nExecutes the chain sequence to resolve the unwrapped value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-value",
      "matches": {
        "lodash value": true
      },
      "source": "javascript/lodash"
    },
    "1f2b5d26-28e8-35c0-9036-6e5499cbde2a": {
      "content": "-moz-box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f305226-3298-398c-b085-3aae5f6a3a29": {
      "content": "\\\\ddot{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "ddot",
      "matches": {
        "ddot": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f40a004-5eb7-30a4-80ee-56e1b010bc89": {
      "content": "\\begin{note}\n\t${1:TARGET}\n\\end{note}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{note} \\note": true,
        "note": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1f412a63-d909-3928-842e-221d829e8f67": {
      "content": "${1:obj}.offsetParent()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offsetp": true
      },
      "source": "snippets/javascript"
    },
    "1f4e2ea0-56f5-387a-bd6c-0f9d7693bfaf": {
      "content": "expect(${1:target}).toContain(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to contain (js)",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f573f8e-641b-3bfb-9950-2dc6f7daeb36": {
      "content": "if([${1:[self delegate]} respondsToSelector:@selector(${2:selfDidSomething:})])\n\t[${1} ${3}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1f583f1d-166c-3197-a3bc-3ca7380dad18": {
      "content": "\\\\begin{gather${1:ed}}\n\t${0:${VISUAL}}\n\\\\end{gather$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "gather(ed) environment",
      "matches": {
        "gat": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f584b01-b320-3123-ac87-9461353d1842": {
      "content": "v-for=\"${1:item} in ${2:items}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-for-without-key",
      "matches": {
        "vforwithoutkey": true,
        "vue v-for-without-key": true
      },
      "source": "javascript/vue"
    },
    "1f5a2b02-22d5-3bc9-bf6a-5b977b46d6b6": {
      "content": "describe('${1:Name of the group}', () => {\n\n\tlet ${2:cut};\n\n\tbeforeEach(() => {\n\t\t$2 = $3;\n\t});\n\n\ttest('${1:should }', () => {\n\t\texpect($2).toBe($0);\n\t});\n\n});",
      "doc": "creates a template to test a class under test",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-template-cut",
      "matches": {
        "cut": true,
        "jest template cut": true
      },
      "source": "javascript/jest"
    },
    "1f5bfdd7-0d0d-3076-af16-136e661bfd7e": {
      "content": "thread::spawn(${1:move }|| {\n\t${0}\n});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "spawn a thread",
      "matches": {
        "spawn": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f6f075b-3f89-35de-bb55-806c2ab16f3f": {
      "content": "(${1:a} => ${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f70c091-9fcb-3fa0-86c1-ac1d9705c3a3": {
      "content": "date.min()",
      "doc": "date.min(limit: Date | string | Ref, message?: string | function): Schema\n\nSet the minimum date allowed. When a string is provided it will attempt to cast to a date first\nand use the result as the limit.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "date-min",
      "matches": {
        "yup date min": true
      },
      "source": "javascript/yup"
    },
    "1f7d1eae-2e01-30e2-af76-d0dae8987f6c": {
      "content": "page-break-before: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f82be00-871d-3297-bafa-31d132602d5a": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f93fbbf-e527-3582-866b-673667ebbff8": {
      "content": "ddply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f94fe97-2492-32b7-b358-5038b73d1fb8": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/snippets"
    },
    "1f9a5dd3-e879-36c4-b937-9a18c374bdb8": {
      "content": "require 'test/unit'\nrequire '${1:library_file_name}'\nclass Test${2:$1} < Test::Unit::TestCase\n\tdef test_${3:case_name}\n\t\t${0}\n\tend\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fa057df-8f53-375b-8fda-3421424998d2": {
      "content": "border: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fa95305-efdf-3cc0-9d3e-66ce2c71a878": {
      "content": "text-height: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fcac4e1-fa2c-3210-81b3-77fc69ccf39e": {
      "content": "if (!${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (!condition) { ... }",
      "matches": {
        "ifn": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fd642ed-369f-3977-aeac-29fe19c0d541": {
      "content": "expect(${1:target}).wasCalledWith(${2:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was called with (coffee)",
      "matches": {
        "escw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "1fd71863-ac5b-3f1c-9b87-6e4c20241868": {
      "content": "font-size-adjust: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fdba208-a19c-35a2-94a6-9922109d17ac": {
      "content": "<%= ${1:TARGET} -%>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%= -%>",
      "matches": {
        "ruby_print_nonl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "1fdca84c-da13-3e6f-83e7-dc5e943e72b2": {
      "content": "<ruby>\n\t<rp><rt>${0}</rt></rp>\n</ruby>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ruby": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fe67952-0c09-30f4-9b18-6434b4d0b286": {
      "content": "\"\"\"${1:Description}\n@param ${2:param}: ${3: Description}\n@type  $2: ${4: Type}\n@return: ${5: Description}\n@rtype : ${6: Type}\n@raise e: ${0: Description}\n\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epydoc": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fe6daea-11c9-378c-8298-f9f2a589737f": {
      "content": "{% empty %}\n${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      },
      "source": "vim-snippets/snippets"
    },
    "1fe88bc7-2b69-329d-b0c8-b4640331a8e2": {
      "content": "const mapStateToProps = (state) => {\n\treturn {\n\t\t${1:propName}: state.$1,\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mstp": true
      },
      "source": "snippets/javascript"
    },
    "20049635-87f5-31e9-bb90-d56a62ccbf63": {
      "content": "namespace eval ${1:path} {${0:#script...}}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      },
      "source": "vim-snippets/snippets"
    },
    "20053fa3-fc5c-3350-92ec-1ae96eae89e2": {
      "content": "export default class ${1:ClassName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t${2}\n\t\t\t</>\n\t\t);\n\t};\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ercla": true
      },
      "source": "snippets/javascript"
    },
    "20069fda-8f58-3cf7-a1d5-194c0ea04be9": {
      "content": "align-content: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "2007c20a-b745-33dc-a2e0-6a94a22081cc": {
      "content": "static public final String ${1:var} = \"${2}\";${4}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const_string": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "20114e20-abc1-3d25-bdf9-a8372cc3a932": {
      "content": "{% from \"${1:template}\" import ${2:name}${3: as ${4:$2}} %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "from/import/as",
      "matches": {
        "from": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "20120a9c-434a-32e4-94d1-1a643b171ffc": {
      "content": "padding: ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "2012899b-7c21-36fc-9847-6de6241108fa": {
      "content": "justify-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "2021f421-ff93-34a6-b4bd-e8a6c4bb668f": {
      "content": "border-bottom-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "20235ebc-0c24-3e12-bd14-b24caf8d8550": {
      "content": "${1:slice} = append($1, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "a = append(a, value)",
      "matches": {
        "ap=": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "2028d1c4-f4a9-316a-aa0e-e64b64c8db33": {
      "content": "_.forOwn(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).\n\nIterates over own enumerable string keyed properties of an object and\ninvokes `iteratee` for each property. The iteratee is invoked with three\narguments: (value, key, object). Iteratee functions may exit iteration\nearly by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forown",
      "matches": {
        "lodash forown": true
      },
      "source": "javascript/lodash"
    },
    "202b1ad3-c0a9-3111-b04f-8f69a7d57b52": {
      "content": "{\n\t\"type\": \"article\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_article": true
      },
      "source": "vim-snippets/snippets"
    },
    "202ec6e8-3f3b-3128-9c2b-5afdb619f5a5": {
      "content": "<input v-model.number=\"${1:numData}\" type=\"number\" step=\"1\" />",
      "doc": "v-model directive number input",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-model Number Directive",
      "matches": {
        "vmodel-num": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "203971db-f247-3483-bd51-a5cc8dc3363a": {
      "content": "(sizeof(${1:#:array}) / sizeof(*($1)))",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array_size": true,
        "sizeof_array": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2044b0ab-ef83-3e43-a433-874ebdeb6ce1": {
      "content": "for k, v in ipairs(${1:table}) do\n  print(k, v)\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "for k, v in ipairs(table) do",
      "matches": {
        "print_table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "204e446d-7ed0-36ca-a02a-91ac2e39c613": {
      "content": "attr_protected :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atp": true
      },
      "source": "vim-snippets/snippets"
    },
    "205e0596-476f-3396-bdab-46bdef4bbbf5": {
      "content": "erlang:display({${1}, ${0}}),",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "205f477f-202d-34cd-b313-9320f834e5b1": {
      "content": "{% include ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2065168b-c977-38e4-a013-22bdca5afae6": {
      "content": "${1:reg}_w = $1_r;${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "_w = _r",
      "matches": {
        "regkeep": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "206a307c-3fea-347e-9d73-617f0590f152": {
      "content": "implements ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "206b3a7f-f525-373e-a811-4eb139936e5e": {
      "content": "property ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw": true
      },
      "source": "vim-snippets/snippets"
    },
    "206ee049-c534-3f4c-b31d-b87daae99e79": {
      "content": "<?php\nclass CSVWriter {\n\tpublic function __construct($file_or_handle, $sep = \"\\t\", $quot = '\"'){\n\t\t$args = func_get_args();\n\t\t$mode = isset($opts['mode']) ? $opts['mode'] : 'w';\n\t\t$this->f =\n\t\t\tis_string($file_or_handle)\n\t\t\t? fopen($file_or_handle, $mode)\n\t\t\t: $file_or_handle;\n\t\t$this->fputcsv_args = [$this->f, null, $sep, $quot];\n\t\tif (!$this->f) throw new Exception('bad file descriptor');\n\t}\n\tpublic function write($row){\n\t\t$this->fputcsv_args[1] =& $row;\n\t\tcall_user_func_array('fputcsv', $this->fputcsv_args);\n\t}\n\tpublic function close(){\n\t\tif (!is_null($this->f))\n\t\t\tfclose($this->f);\n\t\t$this->f = null;\n\t}\n\tpublic function __destruct(){\n\t\t$this->close();\n\t}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CSVWriter": true
      },
      "source": "vim-snippets/snippets"
    },
    "207ccbe3-ce93-3474-ae5e-31f5c984e08b": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "207eeca1-3ed4-35a9-bbc4-91a43a2c189d": {
      "content": "module ${1:main};${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/snippets"
    },
    "207fae25-2579-3099-9478-53e33fca2c73": {
      "content": "If ${1:condition} Then\n\t${2:; True code}\nElse\n\t${0:; Else code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "2087df6f-c427-3b30-b27b-7c70e8ee401c": {
      "content": "service '${1:serviceName}', (${2:injectables}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngms": true
      },
      "source": "snippets/coffee"
    },
    "20966fcf-4cb7-3610-a93c-0b8b7b916c0f": {
      "content": "$.when(${1:deferreds})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dwhen": true
      },
      "source": "snippets/coffee"
    },
    "209ddd80-79d0-37c2-a02b-ee167baa62ff": {
      "content": "<style lang=\"scss\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with scss scoped",
      "matches": {
        "style_with_scss_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "20a04920-c1b8-3578-b7ed-7ca4123f1610": {
      "content": "from PyQt5.QtCore import pyqtRemoveInputHook\npyqtRemoveInputHook()\nimport pdb; pdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "removeInputHook...pdb",
      "matches": {
        "qtpdb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "20ace9c5-e105-3a50-96b3-b775d0b4c58a": {
      "content": "export const ${1} = styled.${2}`\n  ${3}\n`;",
      "doc": "Export styled-component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component",
      "matches": {
        "exsc": true,
        "styled-components export component": true
      },
      "source": "javascript/styled-components"
    },
    "20afe5e1-2eff-3591-91e9-1f1ecf0466de": {
      "content": "justify-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "20b92d9e-49f6-3fbc-b248-34688e031aba": {
      "content": "unchecked (${1:#:var}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unchecked () {}",
      "matches": {
        "unchecked": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "20bb2aaa-5da5-38f5-992e-a2a965d11a92": {
      "content": "import ${1:classNames} from 'classnames/bind';",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-import-bind",
      "matches": {
        "classnames import bind": true
      },
      "source": "javascript/classnames"
    },
    "20bd58d4-80a2-3812-86c9-bf80769545ed": {
      "content": "<audio src=\"${1}\">${0}</audio>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "audio": true
      },
      "source": "vim-snippets/snippets"
    },
    "20c5a5af-5f67-380c-9899-87f261fbc269": {
      "content": "${1:FIELDNAME} = models.ForeignKey($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ForeignKey",
      "matches": {
        "fk": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "20c69996-8298-30dc-b137-6e1e2d3fd4ba": {
      "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml": true
      },
      "source": "vim-snippets/snippets"
    },
    "20c97bd4-faab-3ce5-866e-176ac196a31b": {
      "content": "[${1:text}](https://${2:address})",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      },
      "source": "vim-snippets/snippets"
    },
    "20d3db71-9bc6-3ed8-aef5-421ed1803936": {
      "content": "{% lorem $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lorem": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "20d4f735-8632-3527-a24a-2a1d357871a6": {
      "content": "<%= render file: \"${1:file}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      },
      "source": "vim-snippets/snippets"
    },
    "20dda458-75ba-38bd-8569-5f82ec9358fb": {
      "content": "${1:app}.put('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eput": true
      },
      "source": "snippets/javascript"
    },
    "20de63c0-9d04-33b8-af58-adc9aed55176": {
      "content": "watch: {\n\t${1:data}(${2:newValue}, ${3:oldValue}) {\n\t\t${0}\n\t}\n},",
      "doc": "vue watcher",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Watchers",
      "matches": {
        "vwatcher": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "20f6e33b-c686-3c27-af0e-e4d398799f8d": {
      "content": "case ${1} is\n\t${2}\nend case;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      },
      "source": "vim-snippets/snippets"
    },
    "20f726e7-5520-3c08-ac48-0ca4c8d50d59": {
      "content": "align-self: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "20fdde11-a59a-3cac-83aa-ecf3d50c3fff": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplate: `$0`\n})\n\nexport class ${2:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }\n}",
      "doc": "Angular component with an inline template",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Component with Inline Template",
      "matches": {
        "a-component-inline": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "2108c8e8-5596-3f01-bfb3-e23a44a40c9d": {
      "content": "_${1}_${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "_italic_",
      "matches": {
        "italic": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2108fa5c-91ce-3e7c-bc8e-0c03a3f06f2d": {
      "content": "text-align ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      },
      "source": "vim-snippets/snippets"
    },
    "210b7949-d0b0-3efb-a157-f59db22369e4": {
      "content": "snippet     ${1:#:trigger}\nabbr        ${2:#:abbr}\noptions     head\n    ${3:#:TARGET}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "snippet abbr options <snippet code>",
      "matches": {
        "snip": true,
        "snippet": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "210c3ea9-6558-3df1-85fd-627022968328": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-one-of-type",
      "matches": {
        "prop-types oneoftype": true,
        "ptet": true
      },
      "source": "javascript/prop-types"
    },
    "210dbf91-23c5-3f00-b740-6520d7872e15": {
      "content": "<typeparam name=\"${1:#:name}\">${0:#:description}</typeparam>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<typeparam name=\"\"></typeparam>",
      "matches": {
        "typeparam": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "21182e08-e66a-3f90-a53e-62260dc39c8e": {
      "content": "package ${1:com.github.ujihisa}\nclass ${2:TARGET} {\n  public static void main(String[] args) {\n    println(\"Hello world!\")\n  }\n}",
      "doc": "",
      "filetype": "groovy",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "211ab0af-30a4-3fb9-91b4-bdb4452ce263": {
      "content": "border-style: groove;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "212104db-1e3e-39d7-8b7d-6dbd5d9e07e5": {
      "content": "grid-auto-flow: ${1:row} ${0:dense}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      },
      "source": "vim-snippets/snippets"
    },
    "212414f5-0e31-3f5f-97be-08fe79d95bb9": {
      "content": "$this->${1:method}()->shouldNotHaveKey(${2:'key'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveKey('key')",
      "matches": {
        "snkey": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "21282e3f-1f6b-32a4-84d8-556310a12631": {
      "content": "beforeDestroy () {\n\t${0};\n},",
      "doc": "beforeDestroy lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforedestroy",
      "matches": {
        "vbeforedestroy": true,
        "vue lifecycle beforedestroy": true
      },
      "source": "javascript/vue"
    },
    "21297626-24d3-3194-8c14-4d21cf2a7385": {
      "content": "${1:FIELDNAME} = models.URLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "URLField",
      "matches": {
        "murl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "212e0421-d9c5-32bb-991b-b0e5569a2108": {
      "content": "<label for=\"${2:$1}\">$1</label>\n<input type=\"${3:text}\" name=\"${4:$2}\"${5: id=\"${6:$2}\"} value=\"$7\" />$8",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label_and_input": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "213215c6-e8fe-32ac-8070-8940b611eff4": {
      "content": "let ${1} =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letf": true
      },
      "source": "vim-snippets/snippets"
    },
    "213490b7-2d24-3ca0-a67b-d059633a8bc0": {
      "content": "text(${1:data}, ${2:x}, ${3:y}${4:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "data",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/snippets"
    },
    "213ba6bb-28e3-36e8-99f5-c8c2ae60e1cd": {
      "content": "$${1:observer} = $this->prophesize(${2:SomeClass}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$observer = $this->prophesize(SomeClass::class);",
      "matches": {
        "proph": true
      },
      "source": "vim-snippets/snippets"
    },
    "213c0aea-9429-3b4f-be3c-d6c68b8c8cdb": {
      "content": "_.entries(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairs(new Foo);\n// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\nCreates an array of own enumerable string keyed-value pairs for `object`\nwhich can be consumed by `_.fromPairs`. If `object` is a map or set, its\nentries are returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-entries",
      "matches": {
        "lodash entries": true
      },
      "source": "javascript/lodash"
    },
    "213d51ea-1ab3-3c72-878d-e51f7005f3cd": {
      "content": "const [${2:propertyName}] = ${1:arrayToDestruct};",
      "doc": "Creates and assigns a local variable using array destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingArray",
      "matches": {
        "dar": true
      },
      "source": "vscode-javascript/snippets"
    },
    "214011fa-5cd7-34bb-a178-9361013fd8f4": {
      "content": "t.decimal :${1:title}, precision: ${2:10}, scale: ${3:2}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcd": true
      },
      "source": "vim-snippets/snippets"
    },
    "2143ac7b-b57d-3ea1-8fcf-70b0e8e9e1b1": {
      "content": "${1:obj}.is('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      },
      "source": "snippets/coffee"
    },
    "21570a80-5108-3bcd-b15b-499e3a324566": {
      "content": "firewall { \"${1:comment}\":\n\tproto\t=> ${2:tcp},\n\taction\t=> ${3:accept},\n\tport\t=> ${4},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firewall": true
      },
      "source": "vim-snippets/snippets"
    },
    "216071e5-b85c-394e-9a3a-d403e2d0aed0": {
      "content": "<time datetime=\"${1}\" pubdate=\"${2:$1}\">${0:$1}</time>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      },
      "source": "vim-snippets/snippets"
    },
    "2161357e-2426-3dc2-9b03-aeea60e3ddf0": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { memo } & PropTypes",
      "matches": {
        "imrmp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "2166d154-0d7a-3f8e-acdd-3e7922604ef2": {
      "content": "{% gist ${0:gist_id} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gist-short": true
      },
      "source": "vim-snippets/snippets"
    },
    "216ebcfe-8e99-3681-a64f-498b945bfd35": {
      "content": "import ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "2176ce87-89e0-3d34-9bef-b16a4b585b15": {
      "content": "<input type=\"${1:text}\" value=\"$2\" name=\"$3\"${4: id=\"${5:$3}\"}/>$7",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2177d0d6-62ef-3431-b6b8-32ae38ad97fb": {
      "content": "logger.error { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.error",
      "matches": {
        "loge": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "217a2ce2-d60b-350a-8a65-2df20864eab4": {
      "content": "${1:name}.reduceLeft[${0:T}] {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redl": true
      },
      "source": "vim-snippets/snippets"
    },
    "217b0d89-8be7-3c3d-811c-c939fb6278b4": {
      "content": "Stack<${1:Object}> ${2:stack} = new Stack<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.st": true
      },
      "source": "vim-snippets/snippets"
    },
    "217c31a0-322c-3ad0-9c6c-8573a26848e9": {
      "content": "${1:obj}.mouseleave(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mleave": true
      },
      "source": "snippets/javascript"
    },
    "217cb05d-6335-3ab3-9b65-3779905a7301": {
      "content": "parameters{\n\t${1}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parameters": true
      },
      "source": "vim-snippets/snippets"
    },
    "2185e4a0-54a5-3064-af8c-4eff88f98338": {
      "content": "if (${1}) {\n\t${2}\n}\nelsif (${3}) {\n\t${4:# elsif...}\n}\nelse {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "21925930-b48b-31da-8041-dca36f229ab8": {
      "content": "for (let ${1:i} = 0, ${2:len} = ${3:iterable}.length; ${1:i} < ${2:len}; ${1:i}++) {\n\t${0}\n}",
      "doc": "for loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-loop",
      "matches": {
        "base for": true
      },
      "source": "javascript/base"
    },
    "21994886-b2c5-30b3-acb7-5feae17e40e1": {
      "content": "JSON.stringify(${0:object});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsons": true
      },
      "source": "snippets/javascript"
    },
    "219b62b3-2797-3310-9dd7-6139483d071a": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-component-proptypes",
      "matches": {
        "rcep": true,
        "react component class export proptypes": true
      },
      "source": "javascript/react"
    },
    "21a97541-5256-3576-822e-3834bb5229cb": {
      "content": "expect(${1:target}).toBeTruthy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be truthy (js)",
      "matches": {
        "et": true
      },
      "source": "vim-snippets/snippets"
    },
    "21b5b771-1ac9-3eb3-8b9b-17f3d7ac5406": {
      "content": "use v6;\nuse Test;\n${1:use lib 'lib';}\nplan ${2:$num-tests};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "21b6931f-a85b-3768-b2dc-90e7a6ff4a3a": {
      "content": "border-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      },
      "source": "vim-snippets/snippets"
    },
    "21c5985a-3de7-375e-9728-95d8c726d082": {
      "content": "text-outline: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      },
      "source": "vim-snippets/snippets"
    },
    "21cf3798-f601-367c-8734-f2bbe2fa8599": {
      "content": "test('should $1', () => {\n\t$0\n})\n",
      "doc": "Testing `test` block",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "testBlock",
      "matches": {
        "test": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "21e33028-bed0-341a-aa8f-8a9ae28604da": {
      "content": "find { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fin": true
      },
      "source": "vim-snippets/snippets"
    },
    "21e8ec18-4e4f-385b-a56b-47b005f74474": {
      "content": "const {${1:site}} = useStaticQuery(\n  graphql`${2:query}`\n);",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-usestatic-query",
      "matches": {
        "gatsby usestaticquery": true
      },
      "source": "javascript/gatsby"
    },
    "21e94965-7427-3c44-98bb-63ec15790282": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "let ... in ...",
      "matches": {
        "let": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "21eaabd8-d93a-30b5-8a22-9f29f3f753af": {
      "content": "<code>${1}</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<c": true
      },
      "source": "vim-snippets/snippets"
    },
    "21f4115a-292a-3e7a-8dac-03b3851a47c6": {
      "content": "if ${1} then\n\t${0:${VISUAL}}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "21f492e1-6a6b-3cfa-a8a9-619327862d91": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;\n",
      "doc": "Create React Native Styled Components file",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-react-native": true
      },
      "source": "rocketseat-vscode-react-native-snippets/snippets"
    },
    "22006469-3b3d-3c8c-a3e2-f9d0a90df21d": {
      "content": "place-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "2201c7e1-c0a4-3377-b4a9-5701c6fc0e10": {
      "content": "<link rel=\"${1:stylesheet}\" href=\"${2}.css\"${3}>${4}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "link stylesheet css",
      "matches": {
        "link": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "221428a6-6d4b-3af9-b86f-23f79024b677": {
      "content": "a_ply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a_": true
      },
      "source": "vim-snippets/snippets"
    },
    "22160595-ba3e-3589-8ac8-a92acb21f89d": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      },
      "source": "vim-snippets/snippets"
    },
    "221ae800-ffcd-3b4f-9034-268e1c08bd2f": {
      "content": "<button id=\"${1}\" type=\"${2:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button#": true
      },
      "source": "vim-snippets/snippets"
    },
    "22214404-74ef-371e-9fb1-3f762ebba542": {
      "content": "t.binary :${1:title}, limit: ${2:2}.megabytes\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "2231d0e4-3db3-3ae8-a76d-509cbd1493fd": {
      "content": "${1:FIELDNAME} = models.DateTimeField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datetime": true
      },
      "source": "vim-snippets/snippets"
    },
    "22337a12-f3cd-3ab1-8c8d-21858f3711ae": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array",
      "matches": {
        "prop-types array": true,
        "pta": true
      },
      "source": "javascript/prop-types"
    },
    "22364c77-cb6c-35d8-82fb-56d5f0b1ba83": {
      "content": "$.ajaxPrefilter (${1:options}, ${2:originalOptions}, jqXHR) ->\n\t${0: // Modify options, control originalOptions, store jqXHR, etc}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxprefilter": true
      },
      "source": "snippets/coffee"
    },
    "22373f27-355b-3a15-b370-43b1a07875d9": {
      "content": "<%= select ${1:f}, :${2:field}, ${3:[{\"key\", \"value\"}]}, prompt: ${4:\"Prompt\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "sl": true
      },
      "source": "vim-snippets/snippets"
    },
    "223bfc9d-5497-3fba-96cd-84ab0d42cbbc": {
      "content": "for (my $${1:var} = 0; $$1 < ${2:expression}; $$1++) {\n\t${3:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "223f2146-6edb-3681-95da-e48ea9eb0cda": {
      "content": "$.inArray(${1:value}, ${0:array});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inarr": true
      },
      "source": "snippets/javascript"
    },
    "2244ee31-5ff6-3bb5-b5a0-7ba3a3bcc014": {
      "content": "(:require [${1:namespace} :as [${0}]])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      },
      "source": "vim-snippets/snippets"
    },
    "2249b438-8702-3e52-8931-b268877dcc53": {
      "content": "Yii::import('${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yimp": true
      },
      "source": "vim-snippets/snippets"
    },
    "2251517c-8229-3d51-a0a5-8d275bdcaa2c": {
      "content": "final ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      },
      "source": "vim-snippets/snippets"
    },
    "2259785b-91b3-3280-8939-6ef43e281bd9": {
      "content": "case ${1:value}:\n\t$2\n\tbreak;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2267d0d7-9de3-35b6-b603-1dc03fad2f10": {
      "content": "content counters(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "22695aaf-eb54-3c50-894b-2421312b59a0": {
      "content": "<abbr title=\"${1}\">${0}</abbr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "22701e7a-f2ff-3162-8be1-039cba5304cb": {
      "content": "grid: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      },
      "source": "vim-snippets/snippets"
    },
    "2271c58e-e84d-3b7c-a916-366bc48111a4": {
      "content": "if err != nil {\n\treturn ${1:nil}, ${2:err}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return with two return values",
      "matches": {
        "errn,": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "2272b446-a500-3874-8eb2-90f03cad3afa": {
      "content": "mailto:${1:alice@example.com}[${2:Alice}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "mailto link",
      "matches": {
        "mailto": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "22864961-e3ba-35c5-999f-c81a2ca7abb6": {
      "content": "<%= stylesheet_link_tag ${1::all}, cache: ${0:true} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slt": true
      },
      "source": "vim-snippets/snippets"
    },
    "2286c575-b519-36e2-9d89-7e917ab2657c": {
      "content": "${1:my} class ${2:ClassName} ${3:is|does Parent|Role}{\n\t${4}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "22884472-21c5-3d48-b570-a666eb66d587": {
      "content": "if (${1}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "228b3120-d101-378f-8651-01697896a23c": {
      "content": "componentDidMount() {\n\t$0\n}\n",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "229edad0-44bc-3441-8c0c-bed1b16dec3b": {
      "content": "${1:FIELDNAME} = models.PositiveSmallIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "possmallint": true
      },
      "source": "vim-snippets/snippets"
    },
    "22a16326-f029-3b05-8b56-1ecb3b8488b4": {
      "content": "${1:moon} = require '$1'",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "22a59e9a-d57d-35d3-a990-58e93c3a4dce": {
      "content": "{% for ${1:item} in ${2:sequence} %}\n\t$3\n{% endfor %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "22a62d4f-0653-352f-8df2-f5a6e577a0b5": {
      "content": "place-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "22aaa755-dba3-3c5a-9246-5195f9ee9f8a": {
      "content": "$scope.$broadcast '${1:eventName}', ${2:eventArgs}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$b": true
      },
      "source": "snippets/coffee"
    },
    "22c1b8ec-da98-3dcd-9f10-6a40ef2b30ef": {
      "content": "align-items: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "22c2dee9-6c25-3055-a708-b9caf551d000": {
      "content": "$_SESSION['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "SS": true
      },
      "source": "vim-snippets/snippets"
    },
    "22c48f9c-2851-362f-bf96-e68b9156c2fb": {
      "content": "{let $${1:identifier}: ${2:expression} /}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "let command",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "22c8620b-b0b5-37dd-b51d-b0e026ad9ff1": {
      "content": "sub ${1:function_name}(${2:Str $var}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "22e3c183-4857-31f8-8103-05d7f0896943": {
      "content": "@interface ${1:NSObject} (${2:MyCategory})\n@end\n@implementation $1 ($2)\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cat": true
      },
      "source": "vim-snippets/snippets"
    },
    "22e838b9-cf6c-3855-8e5d-7a3b758b044a": {
      "content": "word-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      },
      "source": "vim-snippets/snippets"
    },
    "22ea4da6-6889-3473-988a-fbeb2d66bdc6": {
      "content": "(if (not ${1}) ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifn": true
      },
      "source": "vim-snippets/snippets"
    },
    "22eadb65-d797-39ec-9928-1eb7f7de4a58": {
      "content": "${1:FIELDNAME} = models.CharField(max_length=${2}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      },
      "source": "vim-snippets/snippets"
    },
    "22ef30d6-2e6e-3f68-98e1-61c0fdcb294c": {
      "content": "_.isMatchWith(${object}, ${source}, ${customizer})",
      "doc": "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, srcValue) {\n  if (isGreeting(objValue) && isGreeting(srcValue)) {\n    return true;\n  }\n}\n\nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n\n_.isMatchWith(object, source, customizer);\n// => true\n\nThis method is like `_.isMatch` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with five\narguments: (objValue, srcValue, index|key, object, source).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismatchwith",
      "matches": {
        "lodash ismatchwith": true
      },
      "source": "javascript/lodash"
    },
    "22f18a3d-7a7d-38e3-956b-815e2757efc8": {
      "content": "net.createServer(function(${1:socket}){\n\t${1}.on('data', function('data'){\n\t  ${2}\n\t]});\n\t${1}.on('end', function(){\n\t  ${3}\n\t});\n}).listen(${4:8124});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "net": true
      },
      "source": "snippets/javascript"
    },
    "22f258d5-e879-3be5-a2ec-e3b7bfd97741": {
      "content": "|> (fn x -> require IEx; IEx.pry; x end).()${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppry": true
      },
      "source": "vim-snippets/snippets"
    },
    "22f2d732-fef1-3621-8fca-ae922a7ff72e": {
      "content": ":before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      },
      "source": "vim-snippets/snippets"
    },
    "22f5ccdf-d192-3fbc-8c58-1975df093d46": {
      "content": "<transition\n\tmode=\"out-in\"\n\t@before-enter=\"beforeEnter\"\n\t@enter=\"enter\"\n\n\t@before-leave=\"beforeLeave\"\n\t@leave=\"leave\"\n\t:css=\"false\">\n\n</transition>",
      "doc": "transition component js hooks",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Transition Component with JavaScript Hooks",
      "matches": {
        "vanim": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "22f6be1f-13f2-3333-8cb3-c7430d06afda": {
      "content": "background: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background",
      "matches": {
        "bg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "22fa5698-ca3a-360c-874d-52a7f320d5a6": {
      "content": "const ${1:store} = tweened(${2:value}, ${3:options});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tweened",
      "matches": {
        "svelte tweened": true,
        "svtw": true
      },
      "source": "javascript/svelte"
    },
    "230adda3-ab1b-30ca-8f70-80309220e27c": {
      "content": "function ${1:void} ${2:name}(${3});\n\t${0}\nendfunction: $2",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "230d1ca2-0514-3819-8e3c-2bf4014e9889": {
      "content": "<datalist>\n\t${0}\n</datalist>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datalist": true
      },
      "source": "vim-snippets/snippets"
    },
    "23110f33-8efb-324a-99c8-7e6a37ce9783": {
      "content": "border-color: ${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-color: color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2311d3e6-74e3-3d10-8078-b4ce81e4352e": {
      "content": "assert_redirected_to ${2:${12:parent}_${13:child}_path(${14:@}${15:$12}, ${16:@}${17:$13})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (nested path)",
      "matches": {
        "artnp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "231a2d4d-2ea4-34b4-8401-ad90119810af": {
      "content": "subtype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtype": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "231cba23-71f9-3b51-a3ba-39995a61e437": {
      "content": "leave-class=\"$1\"$0",
      "doc": "leave-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-class",
      "matches": {
        "leaveclass": true,
        "vue leave-class": true
      },
      "source": "javascript/vue"
    },
    "23204d03-6819-31c3-a4c7-0f3ebf5aea2d": {
      "content": "rapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "2324b5bf-c4f2-3cf9-a86e-fca9332877d5": {
      "content": "echo CHtml::script('${0:test}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhjs": true
      },
      "source": "vim-snippets/snippets"
    },
    "232f6d8a-1a35-3ddb-87dc-c7275b4cb6ce": {
      "content": "destroyed () {\n\t${0};\n},",
      "doc": "destroyed lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-destroyed",
      "matches": {
        "vdestroyed": true,
        "vue lifecycle destroyed": true
      },
      "source": "javascript/vue"
    },
    "232f7a95-767c-39e9-83b1-44a0e45fb210": {
      "content": "(for/sum ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/sum",
      "matches": {
        "fors": true
      },
      "source": "vim-snippets/snippets"
    },
    "2330beb0-cff8-38c0-8195-dfe61433b2f7": {
      "content": "${1:obj}.triggerHandler('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trigh": true
      },
      "source": "snippets/javascript"
    },
    "233a4465-677d-3297-8ebd-7c5d76df94f3": {
      "content": "border none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "233aaca3-b5a4-388a-a835-84956373cba5": {
      "content": ".. caution:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "caution",
      "matches": {
        "caution": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "234b9640-b4d2-308c-8242-fe27fcdcbd83": {
      "content": "<<<\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "page break",
      "matches": {
        "pagebreak": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "234fe734-2448-3d9e-aaca-5e261e2e5f47": {
      "content": "task ${1:name}(${2});\n\t${0}\nendtask: $1",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "task": true
      },
      "source": "vim-snippets/snippets"
    },
    "235fb064-aedf-3ada-9d31-3686e28f34f1": {
      "content": "File.open('${1:path/to/file.dump}', 'rb') { |${2:file}| Marshal.load($2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "236222cc-f5d1-356f-9640-fcc37aeecf03": {
      "content": "LOGGER.critical(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lc": true
      },
      "source": "vim-snippets/snippets"
    },
    "2362e45c-0b62-3794-a164-c029e3844015": {
      "content": "pub fn ${1:#:func_name}(${2:#:args}) -> ${3:#:()} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pubfn () {}",
      "matches": {
        "pubfn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2376f85c-b233-325a-ba19-63c59e21ab56": {
      "content": "!> @param[${1}]${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doxp": true
      },
      "source": "vim-snippets/snippets"
    },
    "237b3898-1329-3289-ae07-89c6b68fb635": {
      "content": "def ${1:model_class_name}_params\n\tparams.require(:$1).permit()\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defparams": true
      },
      "source": "vim-snippets/snippets"
    },
    "23801d3e-dce7-385d-8e9c-68ef487d2a5a": {
      "content": "elseif ${1}\n\t${0}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "elsif",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "2382f66a-7e94-3e70-827d-8951967a9976": {
      "content": "steps {\n\tsh '${1:make check}'\n\tjunit '${2:reports/**/*.xml}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "steps": true
      },
      "source": "vim-snippets/snippets"
    },
    "2392ffea-6084-3ecf-8b96-5f594331ce4a": {
      "content": "($3 *)realloc(${1:OLD}, ${2:N_MEMBERS} * sizeof(${3:TYPE}));\n${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "realloc(old, size)",
      "matches": {
        "realloc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "23940e89-88aa-35f1-8213-1cc78e35a530": {
      "content": "\\begin{tabbing}\n\t${1:TARGET}\n\\end{tabbing}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tabbing} \\tabbing": true,
        "tabbing": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "239965bf-c49f-3cf3-8801-5985c1aa1bea": {
      "content": "\\\\begin{listing}[language=${1:language}]\n\t${0:${VISUAL}}\n\\\\end{listing}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lst": true
      },
      "source": "vim-snippets/snippets"
    },
    "23a56190-c56c-3a15-9306-396536881556": {
      "content": "has_many :${1:object}, through: :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmt": true
      },
      "source": "vim-snippets/snippets"
    },
    "23ac757f-7280-389b-b7de-6f7f453a885b": {
      "content": "import { ${2:originalName} as ${3:alias} } from '${1:module}';$0",
      "doc": "Imports a specific portion of the module by assigning a local alias in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importAs",
      "matches": {
        "ima": true
      },
      "source": "vscode-javascript/snippets"
    },
    "23bcc150-3447-3e1b-a2cb-9e94c6c461ec": {
      "content": "appear-active-class=\"$1\"$0",
      "doc": "appear-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-active-class",
      "matches": {
        "appearactiveclass": true,
        "vue appear-active-class": true
      },
      "source": "javascript/vue"
    },
    "23c0aa51-5595-36d0-9bcf-eb75c80ae028": {
      "content": "${1:obj}.replaceAll(${2:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repa": true
      },
      "source": "snippets/coffee"
    },
    "23c29cb7-3237-30e7-9d1e-fb9651376047": {
      "content": "unique(${1:x}, ${2:incomparables = ${3:FALSE}}, ${4:...})",
      "doc": "Unique",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "uni",
      "matches": {
        "unique": true
      },
      "source": "vscode-R/snippets"
    },
    "23c4accd-6396-3299-b703-7d904f2814ee": {
      "content": "${1:callbacks}.remove(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Crem": true
      },
      "source": "snippets/javascript"
    },
    "23c6582c-ff5a-3634-9580-3f832db2756e": {
      "content": "notFoundIfNull(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rnfin": true
      },
      "source": "vim-snippets/snippets"
    },
    "23c68768-77f8-3422-b8b4-0f2eeb66d35e": {
      "content": "margin-left: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-left: length (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "23ce846e-5e3e-3e19-be61-4ae4757fc45a": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "23ceffd4-2665-32a9-9c9f-20b5984b81d0": {
      "content": "{%- unless ${1:condition} -%}\n\t${0:${VISUAL}}\n{%- endunless -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless-": true
      },
      "source": "vim-snippets/snippets"
    },
    "23d5841f-0022-3784-be0e-cc4df762bdec": {
      "content": "grid-row-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "23db6f6b-9c7f-39f3-a669-41c054b7c0b4": {
      "content": "border-bottom-right-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "23dc7d26-9bf8-3c59-9872-3ee00beab95b": {
      "content": "\\begin{sloppypar}\n\t${1:TARGET}\n\\end{sloppypar}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{sloppypar} \\sloppypar": true,
        "sloppypar": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "23dc91dc-2897-388b-9279-6883733026eb": {
      "content": "\\$_SESSION['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "session": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "23df82da-8ab4-3689-b90d-7e6181c50720": {
      "content": "for {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "23e2f2b3-d32e-365a-b1b1-371e8675cea1": {
      "content": "printf(\"${1:} = %f\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prf": true
      },
      "source": "vim-snippets/snippets"
    },
    "23e6eb69-c4a0-3f2a-bfc4-0e13e1e6bd9e": {
      "content": "static if(${1}) {\n\t${2}\n} else static if(${3}) {\n\t${4}\n} else {\n\t${5}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "23e98ec9-721a-397d-a63f-3a7fa6aef81e": {
      "content": "margin: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "23eab187-3404-32a8-9196-feb2a258857e": {
      "content": "mdply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md": true
      },
      "source": "vim-snippets/snippets"
    },
    "23ebe66b-8b7b-3d4f-99d7-9063755b9de7": {
      "content": "const [ref, inView, entry] = useInView(options)",
      "doc": "The new React Hooks make it easier than ever to monitor the inView state of your components. Call the useInView hook with the (optional) options you need. It will return an array containing a ref, the inView status and the current IntersectionObserverEntry. Assign the ref to the DOM element you want to monitor, and the hook will report the status. \n\nOptions\nroot(type: Element, default: window, required: false)\nThe Element that is used as the viewport for checking visibility of the target. Defaults to the browser viewport (window) if not specified or if null.\n\nrootMargin(type: String, default: '0px', required: false)\nMargin around the root. Can have values similar to the CSS margin property.\n\nthreshold(type: Number, default: 0, required: false)\nNumber between 0 and 1 indicating the percentage that should be visible before triggering. Can also be an array of numbers, to create multiple trigger points.\n\ntriggerOnce(type: Boolean, default: false, required: false)\nOnly trigger this method once",
      "filetype": "react-intersection-observer",
      "grammar": "lsp",
      "label": "react-intersection-observer-use-in-view",
      "matches": {
        "react-intersection-observer useinview": true,
        "rio useinview": true
      },
      "source": "javascript/react-intersection-observer"
    },
    "23f09525-6a18-3a45-bb75-bbc570d0b7a7": {
      "content": "Ada.Text_IO.Put(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put",
      "matches": {
        "put": true
      },
      "source": "vim-snippets/snippets"
    },
    "23f32dc1-cefd-3bcd-9cb6-ecaeb52f3f7d": {
      "content": "font-family ${0:Monaco,'Courier New'},monospace",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "23f379cc-7e1d-3386-8059-20f97a59e61e": {
      "content": "<router-link to=\"${1:path}\">${2:LinkTitle}</router-link>",
      "doc": "Path routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Path Routing Link",
      "matches": {
        "vroutepath": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "23f3c557-6f7e-3104-b7b8-f437f0145f5e": {
      "content": "$.ajaxSuccess (${1:e}, xhr, settings) ->\n\t${2:// handler for when any AJAX call is successfully completed}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsuccess": true
      },
      "source": "snippets/coffee"
    },
    "23f522dd-391a-349a-8f83-1eb4f97a6f58": {
      "content": "${1:obj}.show('${2:slow/400/fast}', function () {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showc": true
      },
      "source": "snippets/javascript"
    },
    "24028207-2699-3474-a890-bdac985e9e1d": {
      "content": "$.hasData('${0:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasd": true
      },
      "source": "snippets/coffee"
    },
    "240e8d5c-5a98-334d-bbe1-51c34e735a6e": {
      "content": "{%- tablerow ${1:item} in ${2:collection} cols: ${3:2} -%}\n\t${0}\n{%- endtablerow -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tablerow-": true
      },
      "source": "vim-snippets/snippets"
    },
    "2411f0a2-2777-343f-afbd-1b1e3e510d78": {
      "content": "refute_equal ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfe": true
      },
      "source": "vim-snippets/snippets"
    },
    "241383eb-2286-3fa8-b350-ce2f8ec7d819": {
      "content": "border-bottom: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "241f8647-132d-3ca7-96b0-07aaca94172b": {
      "content": "{{- if .Values.$1.nodeSelector }}\n  nodeSelector:\n{{ toYaml .Values.${1:value_key}.nodeSelector | indent 8 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nodeselector_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "241fc572-a193-3b19-a036-60a08ce080a8": {
      "content": "<%= ${1} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rce": true
      },
      "source": "vim-snippets/snippets"
    },
    "24302535-1fda-3c8f-b07e-165e6051b390": {
      "content": "overflow-x: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "2438a7e7-7e2a-33e5-b476-19c2b30ff303": {
      "content": "${1:obj}.submit(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      },
      "source": "snippets/javascript"
    },
    "243a5d5d-b257-30d9-86de-56ae81158505": {
      "content": "${1:value_key}:\n  service:\n\tannotations: {}\n\tlabels: {}\n\tclusterIP: \"\"\n\texternalIPs: []\n\tloadBalancerIP: \"\"\n\tloadBalancerSourceRanges: []\n\texternalTrafficPolicy: \"\"\n\thealthCheckNodePort: 0\n\ttargetPorts:\n\t  http: http\n\t  https: https\n\ttype: LoadBalancer\n\tnodePorts:\n\t  http: \"\"\n\t  https: \"\"\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_values": true
      },
      "source": "vim-snippets/snippets"
    },
    "243b195e-3c87-3733-9dcc-3977d1043d61": {
      "content": "page-break-after: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "24410f61-f2b9-3891-b7e5-5404d033b0b9": {
      "content": "Element Should Be Enabled    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Enabled",
      "matches": {
        "esbe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "24491d80-74ed-305b-91cb-2cfb41723a11": {
      "content": "(${1:params}) => {\n\t${2}\n}",
      "doc": "Creates an anonymous function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "anonymousFunction",
      "matches": {
        "anfn": true
      },
      "source": "vscode-javascript/snippets"
    },
    "24572aa4-e6d1-3dad-a740-5485f9a69406": {
      "content": "partition { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "par": true
      },
      "source": "vim-snippets/snippets"
    },
    "2461cea9-f69c-3fc5-b3e8-053dc4bf807e": {
      "content": "open(${1:11},file=${2},status=${3:#:old}${4:#:,position='append'})\n${5}\nclose($1)",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "open",
      "matches": {
        "op": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "24653418-ecf0-3ab5-b54f-c0d0d2833e5b": {
      "content": "| newline_to_br",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "newline_to_br": true
      },
      "source": "vim-snippets/snippets"
    },
    "2469c5fb-19ab-344e-b4b3-3f1863b7b10c": {
      "content": "_.invokeMap(${collection}, ${path}, ${args})",
      "doc": "_.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invokeMap([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]\n\nInvokes the method at `path` of each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `path` is a function, it's invoked\nfor, and `this` bound to, each element in `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invokemap",
      "matches": {
        "lodash invokemap": true
      },
      "source": "javascript/lodash"
    },
    "247585fa-ed16-30d5-9685-3aeecce969d4": {
      "content": "sphere(${0:radius});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sphere": true
      },
      "source": "vim-snippets/snippets"
    },
    "2476ed5d-f6d0-3d51-b0f8-de7c52bc2398": {
      "content": "${1:obj}.select(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "snippets/javascript"
    },
    "2479efeb-92e0-33ff-864d-c65cb446de92": {
      "content": "(defun $1 ($2)\n\t$0)",
      "doc": "",
      "filetype": "lfe",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "24806f13-0d83-308e-8eaa-a563fa066fe9": {
      "content": "import React from 'react'\n\nfunction ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-export-component",
      "matches": {
        "react component functional export": true,
        "rfce": true
      },
      "source": "javascript/react"
    },
    "24899118-5de7-3d53-b142-ae78f098e143": {
      "content": "function ${1:Singleton} (${2:argument}) {\n\t// the cached instance\n\tvar instance;\n\t// rewrite the constructor\n\t$1 = function $1($2) {\n\t\treturn instance;\n\t};\n\t// carry over the prototype properties\n\t$1.prototype = this;\n\t// the instance\n\tinstance = new $1();\n\t// reset the constructor pointer\n\tinstance.constructor = $1;\n\t${0}\n\treturn instance;\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sing": true
      },
      "source": "snippets/javascript"
    },
    "248d514b-9555-3700-b86b-34d65c1d699d": {
      "content": "overflow auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "248ddf0c-02e0-3055-bd0d-b3f6bbc5c7fb": {
      "content": "spyOn(${1:object}, '${2:method}')$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on (js)",
      "matches": {
        "s": true
      },
      "source": "vim-snippets/snippets"
    },
    "248fec1e-28a6-32e9-8b11-d70b9e138397": {
      "content": "${1:callbacks}.fire(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfire": true
      },
      "source": "snippets/coffee"
    },
    "24909f5d-93c5-3ef1-b407-f48a2b4bcaa8": {
      "content": "impl$4 ${1:Type/Trait}${2: for ${3:Type}}${4:<${5:T}>} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct/Trait implementation",
      "matches": {
        "impl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "24943e29-f099-35d9-b569-4568ce01d585": {
      "content": "<rt>${0}</rt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      },
      "source": "vim-snippets/snippets"
    },
    "2494c42f-9133-3a22-aa7b-d314ab526b88": {
      "content": "llply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ll": true
      },
      "source": "vim-snippets/snippets"
    },
    "24b2bea2-18fd-36de-9036-bc96f516d1fe": {
      "content": "${1}.reduce((${2:previous}, ${3:current}) => {\n\t${0}\n}${4:, initial});",
      "doc": "reduce",
      "filetype": "base",
      "grammar": "lsp",
      "label": "reduce",
      "matches": {
        "base reduce": true
      },
      "source": "javascript/base"
    },
    "24b71245-0920-3093-a2f5-88b1db370395": {
      "content": "${1:obj}.scrollLeft(${2:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrolll": true
      },
      "source": "snippets/coffee"
    },
    "24bcb99f-e421-38af-bf2c-f6530e9291f0": {
      "content": "while ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "24c3509d-1987-3b50-b59a-4b2cfb442642": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "24c5f281-efef-3c82-9df1-f56142a3ed83": {
      "content": "static ${1}: &'static str = \"${0}\";",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "static string declaration",
      "matches": {
        "ss": true
      },
      "source": "vim-snippets/snippets"
    },
    "24ccb440-4680-3f7b-817b-967090a5cce6": {
      "content": "cut:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      },
      "source": "vim-snippets/snippets"
    },
    "24ce8761-c87e-3264-b251-75cf5690cd98": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if endif",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "24d94b75-6bc1-3c91-ad01-cbbb31d286db": {
      "content": "// replaces the top of the active matrix stack with the identity matrix\ngl.glLoadIdentity();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl load identity",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "24e74962-1844-3a23-8fd0-a4e825562188": {
      "content": "/**\n * ${2:#:undocumented class}\n *\n * @package ${3:default}\n * @author ${4}\n **/\ninterface ${1}\n{\n\t${0:TARGET}\n} // END interface $1",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doci": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "24e9aabf-1713-31be-9aa8-a722a6a35ded": {
      "content": "% try:\n\t${1:${VISUAL}}\n% except${2:}:\n\t${0:pass}\n% endtry",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "24fa5ee0-acb4-3f1c-8208-6eda294acc7c": {
      "content": "$_GET['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "_GET array",
      "matches": {
        "G": true
      },
      "source": "vim-snippets/snippets"
    },
    "2508bb16-2c73-33ac-9919-66cc898117a7": {
      "content": "${1:outMatrix} <- matrix(data = ${2:dataVec}, nrow = ${3:nrow}, ncol = ${4:ncol}, byrow = ${5:byrow})",
      "doc": "Create a matrix from a vector",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Matrix",
      "matches": {
        "matrix": true
      },
      "source": "vscode-R/snippets"
    },
    "25093bd8-3d51-3407-8707-f04d548f2f47": {
      "content": "select case (${1})\n${2}\nend select",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "select case",
      "matches": {
        "se": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2515d6a9-1b88-356a-91dc-4a2af6b86caf": {
      "content": "case ${1:value}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case ...:",
      "matches": {
        "case": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "2518e3de-9758-390d-a48d-a576df2f54a5": {
      "content": "text-indent: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      },
      "source": "vim-snippets/snippets"
    },
    "251ca251-6e50-36e0-ac20-c3e81b2f8b04": {
      "content": "around_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maru": true
      },
      "source": "vim-snippets/snippets"
    },
    "251f1136-fccb-38e4-ba9d-3d5319d3c1ce": {
      "content": "_.orderBy(${collection}, ${iteratees}, ${orders})",
      "doc": "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 34 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 36 }\n];\n\n// Sort by `user` in ascending order and by `age` in descending order.\n_.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\nThis method is like `_.sortBy` except that it allows specifying the sort\norders of the iteratees to sort by. If `orders` is unspecified, all values\nare sorted in ascending order. Otherwise, specify an order of \"desc\" for\ndescending or \"asc\" for ascending sort order of corresponding values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-orderby",
      "matches": {
        "lodash orderby": true
      },
      "source": "javascript/lodash"
    },
    "251fd5e3-3609-316a-8804-03611c499258": {
      "content": "import ${1:New} from './components/$1.vue';",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vimport": true
      },
      "source": "vim-snippets/snippets"
    },
    "251fec06-1376-343e-8e49-8b596c8d2a74": {
      "content": "border: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border",
      "matches": {
        "bd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "252523c3-41e9-3683-b097-3958bd82af6d": {
      "content": "vertical-align: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/snippets"
    },
    "25278dbb-c1d1-3f64-a1c2-13bee2c3dbc1": {
      "content": "mixed.validate()",
      "doc": "mixed.validate(value: any, options?: object): Promise<any, ValidationError>\n\nReturns the value (a cast value if isStrict is false) if the value is valid, and returns the errors otherwise.\nThis method is asynchronous and returns a Promise object, that is fulfilled with the value, or rejected\nwith a ValidationError.The options argument is an object hash containing any schema options you may want to override\n(or specify for the first time).Options = {\n  strict: boolean = false;\n  abortEarly: boolean = true;\n  stripUnknown: boolean = false;\n  recursive: boolean = true;\n  context?: object;\n}\n\nstrict: only validate the input, and skip and coercion or transformation\nabortEarly: return from validation methods on the first error rather\nthan after all validations run.\nstripUnknown: remove unspecified keys from objects.\nrecursive: when false validations will not descend into nested schema\n(relevant for objects or arrays).\ncontext: any context needed for validating schema conditions (see: when())\nschema.validate({ name: \"jimmy\", age: 24 }).then(function(value) {\n  value; // => { name: 'jimmy',age: 24 }\n});\n\nschema.validate({ name: \"jimmy\", age: \"hi\" }).catch(function(err) {\n  err.name; // => 'ValidationError'\n  err.errors; // => ['age must be a number']\n});\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate",
      "matches": {
        "yup mixed validate": true
      },
      "source": "javascript/yup"
    },
    "252bd00c-1755-3324-84e8-86bc6ebf7edc": {
      "content": "justify-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "252cce90-7994-3ee6-a39b-1a7c252a48d4": {
      "content": "LOGGER.warning(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lw": true
      },
      "source": "vim-snippets/snippets"
    },
    "2530281e-3653-3071-9523-dbd7f7d3d4ba": {
      "content": "\\\\left${1} ${0:${VISUAL}} \\\\right$1",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left right",
      "matches": {
        "lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "253480ee-8383-39d2-8070-2822546629ff": {
      "content": "_.matches(${source})",
      "doc": "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n// => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\nCreates a function that performs a partial deep comparison between a given\nobject and `source`, returning `true` if the given object has equivalent\nproperty values, else `false`.\n\n**Note:** The created function is equivalent to `_.isMatch` with `source`\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-matches",
      "matches": {
        "lodash matches": true
      },
      "source": "javascript/lodash"
    },
    "253a57c3-c1ce-3496-a768-82379b1afa0f": {
      "content": "<VirtualHost ${1:example.org}>\n\tServerAdmin webmaster@${1}\n\tDocumentRoot /www/vhosts/${1}\n\tServerName ${1}\n\tErrorLog logs/${1}-error_log\n\tCustomLog logs/${1}-access_log common\n</VirtualHost>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vhost": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "253e2b96-8922-3643-b8cc-b3dd490efb83": {
      "content": "\\${4:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:TARGET}",
      "matches": {
        "4T": true,
        "4t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "25478ad6-a039-34f9-8a5c-afe7af21ad61": {
      "content": "<AnimateSharedLayout>\n</AnimateSharedLayout>",
      "doc": "Animate between different components that share a layout ID",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-shared-layout",
      "matches": {
        "animate-shared-layout": true,
        "framer-motion animate-shared-layout": true
      },
      "source": "javascript/framer-motion"
    },
    "2547c455-56d5-3782-8a92-4fab46544a25": {
      "content": "font-smooth: never",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "2552b560-a810-3ce9-a98d-f8acc0825dbc": {
      "content": "unloadMovieNum(${1:#:level});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "25652233-e61f-312a-aab1-ade314113a9c": {
      "content": "width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/snippets"
    },
    "25712cfc-141b-3be3-aebd-7a6b8c5950e2": {
      "content": "align-items: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "257bc64b-98c8-3fc5-a1ce-8c34a41d61cd": {
      "content": "_.ary(${func}, ${n})",
      "doc": "_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]\n\nCreates a function that invokes `func`, with up to `n` arguments,\nignoring any additional arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ary",
      "matches": {
        "lodash ary": true
      },
      "source": "javascript/lodash"
    },
    "257f57fc-2bd0-3494-a03b-23063adb0b22": {
      "content": "t.float :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcf": true
      },
      "source": "vim-snippets/snippets"
    },
    "25836e45-024f-3001-af28-97385a767156": {
      "content": "_.cloneDeep(${value})",
      "doc": "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar deep = _.cloneDeep(objects);\nconsole.log(deep[0] === objects[0]);\n// => false\n\nThis method is like `_.clone` except that it recursively clones `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonedeep",
      "matches": {
        "lodash clonedeep": true
      },
      "source": "javascript/lodash"
    },
    "2583e1c9-adf8-32a6-b635-e633a7f16ca8": {
      "content": "class ${1} ${2:#:extends_or_implements}{\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "258cac60-3a88-323a-830b-37967afffb48": {
      "content": "function ${1:function_name}() {\n\t${0:#function_body}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "258d291d-b872-331c-871f-8aa84910847a": {
      "content": "if $1 then\n\t$2\nelseif $3 then\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/elseif statement",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "25a23528-6372-302e-ac1c-3a6d6c4a8141": {
      "content": "{\n\t${VISUAL}$0\n},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Object",
      "matches": {
        "o": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "25ae205b-a551-3d70-a16c-a90f5ed0bcac": {
      "content": "border-bottom-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-color: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "25b0f806-351c-3b58-a1fb-0176651b2a00": {
      "content": "<li class=\"${1}\">${0}</li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li.": true
      },
      "source": "vim-snippets/snippets"
    },
    "25bc6c64-7d43-3340-b1be-9a7041161f19": {
      "content": "const ${1} = styled.${2}`\n  ${3}\n`;",
      "doc": "Styled-Component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component",
      "matches": {
        "sc": true,
        "styled-components component": true
      },
      "source": "javascript/styled-components"
    },
    "25c0383d-1173-3f61-a0a8-14ffb9129987": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig block",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/snippets"
    },
    "25c296ae-0120-35a8-a912-68c4d925e4c7": {
      "content": "\\\\begin{center}\n\t${0:${VISUAL}}\n\\\\end{center}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "center environment",
      "matches": {
        "center": true
      },
      "source": "vim-snippets/snippets"
    },
    "25c93c53-1324-3d5b-8562-0151bc85d618": {
      "content": "adply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ad": true
      },
      "source": "vim-snippets/snippets"
    },
    "25c992af-9424-3371-89cf-d2db4d847b5f": {
      "content": "{% endnamespace %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endnamespace",
      "matches": {
        "endnamespace": true
      },
      "source": "vim-snippets/snippets"
    },
    "25c9cdea-df02-36ed-88d5-1000bedae78c": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "Base for Vuex store",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Store",
      "matches": {
        "vstore": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "25d1a43d-a666-3463-bcc9-198ceed8b221": {
      "content": "page-break-after: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "25dc3701-01ac-38b0-9ed0-876dbd023a6f": {
      "content": "for ${1:name} in [${2:start}...${3:finish}]\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrex": true
      },
      "source": "snippets/coffee"
    },
    "25e27fab-ca10-3d70-a0f6-37bc209a947b": {
      "content": "console.trace(${1:object})",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTrace",
      "matches": {
        "ctr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "25f1ca15-cdf6-38c4-bfdf-c7234cd4c175": {
      "content": "border-top-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      },
      "source": "vim-snippets/snippets"
    },
    "25fe9f98-bc91-3eed-8e58-bec727a42215": {
      "content": "__MODULE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "MOD": true
      },
      "source": "vim-snippets/snippets"
    },
    "26047858-c299-3c3f-897b-93edbe3da997": {
      "content": "v-html=\"${1:html}\"",
      "doc": "Expects: string. Updates the element’s innerHTML.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-html",
      "matches": {
        "vhtml": true,
        "vue v-html": true
      },
      "source": "javascript/vue"
    },
    "26088f0b-8e22-362f-86a9-78a1827d7e1f": {
      "content": "if ${1:(* condition *)} then\n\t${2:(* A *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "If",
      "matches": {
        "If": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "260dbc9c-725d-32ba-bde7-66fda43d57f2": {
      "content": "- (NSString${1: *)}${1:#:thing};\n- (void)set${1}:(NSString${2: *})${2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "istr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "261073ee-4285-32f6-918b-87c45b4cf85d": {
      "content": "signal ${1} : unsigned (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      },
      "source": "vim-snippets/snippets"
    },
    "261c951a-acef-373b-b55c-c89cb69b6cc3": {
      "content": "console.log ${1}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "261d73da-327c-3c55-b1ce-18211e593bf1": {
      "content": "proc ${1:#:name}(${2}):${3:#:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procgt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2620a257-a8f9-3d7f-a344-48ce88c72991": {
      "content": "source :rubygems",
      "doc": "",
      "filetype": "Gemfile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source-rubygems": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "262b11c3-7e86-3548-ad21-8a4076bf1347": {
      "content": "define([\"${1:#dependencies1}\"], function (${2:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "snippets/javascript"
    },
    "263947b6-0d10-3d1f-8105-10200cc6b7d9": {
      "content": "min(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "array",
      "matches": {
        "min": true
      },
      "source": "vim-snippets/snippets"
    },
    "263a4815-2aa6-3efb-929e-86b92462de41": {
      "content": "vapply(${1:list}, ${2:function}, ${0:type})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "263b926a-97aa-321a-b541-f005b14005f0": {
      "content": "{% endverbatim %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endverbatim",
      "matches": {
        "endverbatim": true
      },
      "source": "vim-snippets/snippets"
    },
    "263ba316-4702-3a5d-b7af-4eee35211cd3": {
      "content": "align-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "2642ddf1-1a64-3079-948b-20572ee632ba": {
      "content": "margin: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin:   all (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "26491eec-9892-381c-9998-85873cba24f9": {
      "content": "/**\n * ${0:TARGET}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "264ccd3c-602a-3878-8fd7-593f84ae98bf": {
      "content": "# Template resource\ntemplate ${1:\"/path/to/file\"} do # Path to the file\n\t${2:#}cookbook ${3:nil} # Specify the cookbook where the template is located, default is current cookbook\n\t${4:#}source ${5:nil} # Template source file. Found in templates/default for the cookbook\n\t${6:#}variables ${7} # Variables to use in the template\n\t${8:#}local ${9:false} # Is the template already present on the node?\n\t${10:#}backup ${11:5} # How many backups of this file to keep. Set to false if you want no backups.\n\t${12:#}owner ${13} # The owner for the file\n\t${14:#}group ${15} # The group owner of the file (string or id)\n\t${16:#}mode ${17} # The octal mode of the file (4-digit format)\n\t${18:#}content ${19:nil} # A string to write to the file. This will replace any previous content if set\n\t${20:#}${21:action :create} # Create the file (Default)\n\t${22:#}${23:action :delete} # Delete this file\n\t${24:#}${0:action :touch} # Touch this file (update the mtime/atime)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      },
      "source": "vim-snippets/snippets"
    },
    "26598c42-f8a1-3a5d-9b5e-803726aed542": {
      "content": "alias_method :${1:new_name}, :${0:old_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "am": true
      },
      "source": "vim-snippets/snippets"
    },
    "266cdad7-fb26-3e03-a31f-23d651edda14": {
      "content": "${1:#:name} = (${2:#:args}) ->\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2676921d-7a7b-38d2-8180-42d4b321a399": {
      "content": "#include <${1}.h>",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "268970e6-1195-36a5-aa9b-bc460a61d136": {
      "content": "<a href=\"http://${1:example.com}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a:ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "268e7172-5f34-3976-a8b0-48321610e128": {
      "content": "${1:callbacks}.empty()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cempty": true
      },
      "source": "snippets/coffee"
    },
    "26952338-2ee7-3a2c-97d6-bbc06533403f": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "269f62ac-e15c-3747-87d0-b6923b117251": {
      "content": "object ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      },
      "source": "vim-snippets/snippets"
    },
    "26a22607-3c63-3e5b-b312-c12f08162010": {
      "content": "{% ifchanged %}$1{% endifchanged %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "26ab197c-2c64-3df8-840b-8bf565e9b502": {
      "content": "grid-column-end: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      },
      "source": "vim-snippets/snippets"
    },
    "26ab50b1-f453-3c1b-85d1-a6ee84e9893b": {
      "content": "boolean ${1:b}${2: = }${0:true};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "boolean": true
      },
      "source": "vim-snippets/snippets"
    },
    "26bcdc5c-e6bd-3cf3-a4d4-1c3324b8520e": {
      "content": "else",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "26c63282-652f-350b-ad27-15326c3dede7": {
      "content": "${1:kernel}<<<${2:args}>>>(${3});${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Kernel call",
      "matches": {
        "call": true
      },
      "source": "vim-snippets/snippets"
    },
    "26d9918f-c12d-36a8-bac2-60b5e6ccf2b9": {
      "content": "<%call expr=\"${1:name}\">\n\t${0:}\n</%call>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "call": true
      },
      "source": "vim-snippets/snippets"
    },
    "26ded684-ca5d-351a-a49c-2130e7a3fb03": {
      "content": "background-repeat: repeat-x",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      },
      "source": "vim-snippets/snippets"
    },
    "26e8bed6-0459-37f6-9654-be4f2dae9ac2": {
      "content": "{{ ${0} }}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/snippets"
    },
    "26eb081b-48d6-3541-b5d0-3fa008393d63": {
      "content": "console.group('${1:label}');",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolegroup",
      "matches": {
        "base console group": true
      },
      "source": "javascript/base"
    },
    "26eb802f-0ddd-3980-8717-59f1c44ccc33": {
      "content": "${1:Table}~\\\\ref{${2:tab:}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a table",
      "matches": {
        "table": true
      },
      "source": "vim-snippets/snippets"
    },
    "26f0cbaf-3cf6-30da-bb52-4fded01d04bc": {
      "content": "process (${1:clk}, ${2:nrst})\nbegin\n\tif ($2 = '${3:0}') then\n\t\t${4}\n\telsif rising_edge($1) then\n\t\t${5}\n\tend if;\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prcr": true
      },
      "source": "vim-snippets/snippets"
    },
    "26f7db05-19a3-3911-b097-0eac8c676cb7": {
      "content": "form_radio(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_radio": true
      },
      "source": "vim-snippets/snippets"
    },
    "26f9ef13-5692-3a05-b313-0229f8c3d9c7": {
      "content": "private def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "2701bcd0-aff4-362a-91b0-37a9ec7e3f39": {
      "content": "constructor() {\n\tsuper();\n\t${1:state}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctor": true
      },
      "source": "snippets/javascript"
    },
    "2704a961-7ec5-3a86-bb67-d3b3454cb074": {
      "content": "select * from ${0:table}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s*": true
      },
      "source": "vim-snippets/snippets"
    },
    "2723ee1f-200d-3ddb-af28-7ae6e21c4be3": {
      "content": "<object data=\"${1}\" type=\"${2}\">\n\t${3}\n</object>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      },
      "source": "vim-snippets/snippets"
    },
    "2725bbc4-1c7f-3300-bd40-874786f532ad": {
      "content": "&#x21E4;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backtab": true
      },
      "source": "vim-snippets/snippets"
    },
    "272a0ebd-1d31-386d-9ec8-3a1e989fd3dc": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "272b830a-d571-382c-a269-aefe18e2ccea": {
      "content": "before_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "27439a70-a741-34d7-ba80-caa0004e3d6e": {
      "content": "border-right-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      },
      "source": "vim-snippets/snippets"
    },
    "274a59fe-074f-32a5-90de-5d160072afdb": {
      "content": "${1:callbacks}.locked()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clocked": true
      },
      "source": "snippets/javascript"
    },
    "274d257f-47e3-3886-bd32-13bc0da8ebc3": {
      "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n${0}\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xhtml": true
      },
      "source": "vim-snippets/snippets"
    },
    "274ff262-5386-35fa-b10c-df995711e321": {
      "content": "/*! TODO: ${1:Todo description here}\n *  \\todo $1\n */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      },
      "source": "vim-snippets/snippets"
    },
    "275420ec-9d6e-3a49-9377-fbdb112a9c50": {
      "content": "logger.info",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.info",
      "matches": {
        "logi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "275932f1-15fc-3744-b95a-bf1e6f9a047f": {
      "content": "plot(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "275c1e6a-cb33-3360-9166-3260c524e39e": {
      "content": "overflow-y: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "2762952a-0b13-3dd4-8abb-995083e5065e": {
      "content": "text-align-last: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      },
      "source": "vim-snippets/snippets"
    },
    "276579e8-d7f4-3211-8a62-c23e860b084c": {
      "content": "flex-wrap: wrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "2769a798-d771-32fe-a460-79a33afd7b97": {
      "content": "it { should belong_to :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbt": true
      },
      "source": "vim-snippets/snippets"
    },
    "276a5b7d-5fc3-3314-8ab4-018e3d2141ed": {
      "content": "-moz-border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "277b3810-337b-382c-8f9a-870f32b535d8": {
      "content": "(defmacro ${1:name} \"${2:doc-string}\" ${0:dispatch-fn})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defma": true
      },
      "source": "vim-snippets/snippets"
    },
    "277c0267-a58a-3377-a009-3c6a8e8ed590": {
      "content": "display: block",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "277fbcf5-14d7-3ef9-9341-cded8df58441": {
      "content": "_.subtract(${minuend}, ${subtrahend})",
      "doc": "_.subtract(6, 4);\n// => 2\n\nSubtract two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-subtract",
      "matches": {
        "lodash subtract": true
      },
      "source": "javascript/lodash"
    },
    "27818d2d-55e1-317f-bca2-f10cfcdc444e": {
      "content": "font-variant: ${1:normal/small-caps};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-variant:   normal:small-caps (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "278b37e5-66a8-3b79-966a-faac0da67699": {
      "content": "const ${1:feature}Reducer = createReducer(\n\tinitialState,\n\ton($1Actions.action, state => ({ ...state, ${2:prop}: ${3:updatedValue} })),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n\treturn $1Reducer(state, action);\n}",
      "doc": "Creates an NgRx Reducer",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-reducer",
      "matches": {
        "a-ngrx-create-reducer": true,
        "angular ng rx create reducer": true
      },
      "source": "javascript/angular"
    },
    "27917dfd-3af0-34d9-b90b-6866f29cd162": {
      "content": "<form>\n${1:TARGET}\n</form>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "279bebdf-26b6-33ae-8852-8cd8c149102d": {
      "content": "${1:FIELDNAME} = models.URLField(${2:verify_exists=False}${3:, max_length=200}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "vim-snippets/snippets"
    },
    "279c2188-c93e-3a2b-934d-959c8acf3b3c": {
      "content": "t.boolean :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create boolean column",
      "matches": {
        "tcb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "27b44d46-7353-380b-9dd4-6bdfbbec7922": {
      "content": "std::shared_ptr<${1:T}> ${2} = std::make_shared<$1>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msp": true
      },
      "source": "vim-snippets/snippets"
    },
    "27b8e0cc-42a6-3dbe-9807-68f450744ba7": {
      "content": "\\\\section{${1:section name}}%\n\\\\label{sec:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\section",
      "matches": {
        "sec": true
      },
      "source": "vim-snippets/snippets"
    },
    "27c01136-5c7e-3fdc-8039-f9aeffcd2baa": {
      "content": "import ${0:Data.List}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "27c149c3-f7ff-3bcf-8d39-7a816d18165c": {
      "content": "# Cookbook File resource\ncookbook_file ${1:\"/path/to/file\"} do # The remote path where the file will reside\n\t${2:#}backup ${3} # How many backups of this file to keep. Set to false  if you want no backups\n\t${4:#}group ${5} # The group owner of the file (string or id)\n\t${6:#}mode ${7} # The octal mode of the file - e.g. 0755\n\t${8:#}owner ${9} # The owner for the file\n\t${10:#}source ${11} # The basename of the source file\n\t${12:#}cookbook ${13} # The cookbook this file is stored in\n\t${14:#}${15: action :create} # Create this file (Default)\n\t${16:#}${17: action :create_if_missing} # Create only if it doesn't exist yet\n\t${18:#}${0: action :delete} # Delete this file\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cookbook_file": true
      },
      "source": "vim-snippets/snippets"
    },
    "27c57c3a-d87a-3f33-b692-6343a99d0d66": {
      "content": "// @flow\nimport * as React from 'react';\ntype Props = {\n  $0\n};\nexport function ${1:${TM_FILENAME_BASE}}(props: Props) {\n  return (\n    <div>\n      \n    </div>\n  );\n};",
      "doc": "Creates a stateless React component as a named function with FlowTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowStatelessFunction",
      "matches": {
        "fsf": true
      },
      "source": "vscode-react/snippets"
    },
    "27dae4e1-7363-3205-a637-b5552cafbf3c": {
      "content": "echo CHtml::encode(${0:text});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhec": true
      },
      "source": "vim-snippets/snippets"
    },
    "27dc27ef-e519-393e-99e9-015c0cc34dc6": {
      "content": "for ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for ... { ... }",
      "matches": {
        "for": true
      },
      "source": "gosnippets/snippets"
    },
    "27e1e8c7-e565-37f4-9753-4eb7e5121ee9": {
      "content": "\\item[${1}] ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itd": true,
        "item[ \\item[": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "27ee1798-e4da-3174-9226-727bd6bf9ffb": {
      "content": "border-top-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "280e1622-ac36-32c0-b4d0-b9acf09fd4c3": {
      "content": "fieldset\n\tlegend ${1}",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      },
      "source": "vim-snippets/snippets"
    },
    "280f7019-6db0-3562-9c99-aebf0e71a23d": {
      "content": "@appear=\"$1\"$0",
      "doc": "@appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear",
      "matches": {
        "appearevent": true,
        "vue appear": true
      },
      "source": "javascript/vue"
    },
    "28129de6-f08f-34ba-b7b9-04eb09759a51": {
      "content": "it.skip('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-skip",
      "matches": {
        "its": true,
        "jest it skip": true
      },
      "source": "javascript/jest"
    },
    "28159b17-0aee-313f-bc15-7172c0b2ce06": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2:error}\n\t${0}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "snippets/coffee"
    },
    "28221d94-0c6c-3723-b300-9821211b64f8": {
      "content": "package body ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package body {NAME} is {...} end",
      "matches": {
        "package_body": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2828af23-268b-3ce1-ab5f-94339056d6e0": {
      "content": "(others => '${1:0}');",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oth": true
      },
      "source": "vim-snippets/snippets"
    },
    "28294899-4b5e-36c4-bcd6-c8aa17c7d5c9": {
      "content": "{ path: '${1:path}', component: ${2:Name}Component },$0",
      "doc": "Angular eager route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Eager Route Path",
      "matches": {
        "a-route-path-eager": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "283dd691-e3c0-3f37-a675-4e6a839f0b5f": {
      "content": "${1:FIELDNAME} = models.FileField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FileField",
      "matches": {
        "mfile": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "283eb026-c6bc-341d-9a1d-08ddcc1cfa1b": {
      "content": "word-wrap unrestricted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "28487792-55f9-36a4-9112-25123600cf8e": {
      "content": "${1:ModelName}::model()->updateByPk(${2:pk}, ${3:array('attributes')}, ${4:condition},array('${5:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yupdatebp": true
      },
      "source": "vim-snippets/snippets"
    },
    "2857c851-8471-3b43-b12e-de64570b1133": {
      "content": "background-repeat: repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "2859d6cf-e979-3876-8690-6a4d65b0f0e3": {
      "content": "<frameset cols=\"${1}\">\n${2:TARGET}\n</frameset>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "framesetcols": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "286fb624-f9d8-38c7-9748-ff368a3c646e": {
      "content": "@misc{${1:LABEL},\n    memo = {author, title, howpublished, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@misc": true,
        "misc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "28778a64-c16f-39d2-a214-07d8d987acfe": {
      "content": "static propTypes = {\n$0\n}\n",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-static",
      "matches": {
        "prop-types static": true,
        "ptypes": true
      },
      "source": "javascript/prop-types"
    },
    "287e8900-eecc-35cd-a2b0-3c4e99b59514": {
      "content": "$${1:foo} = array_map(function($${2:v}) {\n\t${0}\n\treturn $$2;\n}, $$1);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "am": true
      },
      "source": "vim-snippets/snippets"
    },
    "288043e3-ed2e-3357-98f9-38af7dc49346": {
      "content": "<var>${0}</var>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "288169d4-eea7-3ac6-95fe-e6543234d84a": {
      "content": "${1:FIELDNAME} = models.ManyToManyField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ManyToManyField",
      "matches": {
        "m2m": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "288368c0-aa4f-336b-8b45-947ecca8dbf7": {
      "content": "array.max()",
      "doc": "array.max(limit: number | Ref, message?: string | function): Schema\n\nSet a maximum length limit for the array. The ${max} interpolation can be used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-max",
      "matches": {
        "yup array max": true
      },
      "source": "javascript/yup"
    },
    "28867b95-b136-380f-9a46-a2424c91f67c": {
      "content": "${1:#:expression} if ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "288b2945-9619-3ae0-8a3f-7a6d31cdc227": {
      "content": "/**\n * ${1:undocumented constant}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_dp": true
      },
      "source": "vim-snippets/snippets"
    },
    "288d1f22-2587-34d0-91f8-23dda14c9ac9": {
      "content": "font-family: ${1:\"Times New Roman\",Georgia,Serif};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true,
        "font-family": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "289ab214-5f2b-3d4d-b159-1abd1ad1f870": {
      "content": "::before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      },
      "source": "vim-snippets/snippets"
    },
    "289ffd70-e7dd-3884-b490-c2aca91c1788": {
      "content": "export interface ${1:${TM_FILENAME_BASE}} {$0}",
      "doc": "",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "Export interface",
      "matches": {
        "expint": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "28a045ac-c602-318c-a2ed-bcf4ec5549fb": {
      "content": "import '${1:module}';$0",
      "doc": "Imports entire module in ES6 syntax without module name",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importnomodulename",
      "matches": {
        "base import no module name": true
      },
      "source": "javascript/base"
    },
    "28ad7d30-1165-36d5-bd7f-deedacfc2367": {
      "content": "\\begin{picture}\n\t${1:TARGET}\n\\end{picture}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{picture} \\picture": true,
        "picture": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "28b26c2e-c57f-32e3-aae6-5bd1b5b3ddf1": {
      "content": "\\begin{slshape}\n\t${1:TARGET}\n\\end{slshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{slshape} \\slshape": true,
        "slshape": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "28b3019c-9d93-303c-902c-8a27d46746c2": {
      "content": "+ (${1:id})${2:method}\n{\n\t${0:return nil;}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "M": true
      },
      "source": "vim-snippets/snippets"
    },
    "28b36ba5-432c-3f08-b7ea-0127dbd8b247": {
      "content": "for ${1:name} from ${2:start} to ${3:finish}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "28bfaccd-17ec-3cce-b4f3-19190353c231": {
      "content": "validates :${0:attribute}, confirmation: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vc": true
      },
      "source": "vim-snippets/snippets"
    },
    "28d552a4-d937-3a94-8727-3afcf30f7ce4": {
      "content": "$this->beConstructedThrough(${1:'methodName'}, [${2:'$arg'}]);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->beConstructedThrough($methodName, [$arg])",
      "matches": {
        "ct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "28dd5e02-2906-3de9-877e-9a6f6454b6fe": {
      "content": "attr_writer :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/snippets"
    },
    "28e27f5c-d9fa-30d8-913d-30b35a02eb32": {
      "content": "white-space-collapse break-strict",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "28e9841b-8fd9-31f5-a474-5fbe62acad53": {
      "content": "class ${1:#:NAME} extends ${2:#:SuperClass} {\n  constructor(${3:#:ARGS}) {\n    ${0:TARGET}\n  }\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "class extends {...}",
      "matches": {
        "class-extends": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "28eeb223-26d0-38eb-87a7-0d2bde9473c7": {
      "content": "public",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pub": true
      },
      "source": "vim-snippets/snippets"
    },
    "28f5bbdd-c8b8-3d28-833b-3b7c9e91786d": {
      "content": "import ${0:module_name}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "28f88fda-cfb6-3c8d-a931-3a5ec18c288e": {
      "content": "<progress>${0}</progress>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "progress": true
      },
      "source": "vim-snippets/snippets"
    },
    "28fbdc8e-1851-3bd9-96c1-d76381c88fd1": {
      "content": "redirect_to(${2:${10:parent}_${11:child}_path(${12:@}${13:$10})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (nested path plural)",
      "matches": {
        "renpp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "290b830f-c48d-39d8-bf4a-bc08fd779353": {
      "content": "font-smooth auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "290cd470-4126-3105-8889-2da8d4cab38e": {
      "content": "text-align: ${1:left/right/center/justify};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-align: left:center:right (txt)",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2915dac2-4017-3e47-ab4d-cb17667d8426": {
      "content": "display table-row",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "291ee9a3-cf14-368b-9c50-2f3f0c8a4163": {
      "content": "expect(${1:target}).not.toEqual(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to equal (coffee)",
      "matches": {
        "note": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2924031d-ffa8-3a83-bcde-9891ddab63fa": {
      "content": "<hgroup>\n\t${0}\n</hgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hgroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "292547f5-f6ca-3a98-843b-286b0b927dcf": {
      "content": "${1:obj}.slice(${2:start}${3:, end})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "snippets/coffee"
    },
    "2927a6d9-136e-3224-b90a-cb04129ac681": {
      "content": "$this->session->set_userdata($${1:array});${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_set_userdata": true
      },
      "source": "vim-snippets/snippets"
    },
    "292f8c1f-aa86-305a-a423-2378f200e146": {
      "content": "background-image: none;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-image:  none (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2933f6b9-b8e7-334c-9539-b9fa595534d7": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn;\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vfilter": true
      },
      "source": "vim-snippets/snippets"
    },
    "293c7424-04eb-3b0c-9657-dd9f0bef2cf5": {
      "content": "Vue.directive('${1:directiveName}', {\n\tbind(el, binding, vnode) {\n\t\tel.style.${2:arg} = binding.value.${2:arg};\n\t}\n});",
      "doc": "vue custom directive",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-custom-directive",
      "matches": {
        "vc-direct": true,
        "vue custom directive": true
      },
      "source": "javascript/vue"
    },
    "294c9c31-93f0-30e5-9b79-42f1e01840a9": {
      "content": "expect.assertions($0);",
      "doc": "expects the test to make the indicated number of assertions (useful for async)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-assertions",
      "matches": {
        "expas": true,
        "jest expect assertions": true
      },
      "source": "javascript/jest"
    },
    "295a427e-3482-3137-bbe0-46c6f16e68c8": {
      "content": "cy.server();",
      "doc": "Start a server to begin routing responses to cy.route() and to change the behavior of network requests.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-server",
      "matches": {
        "cypress server": true
      },
      "source": "javascript/cypress"
    },
    "295d7ecb-a919-344c-9e93-4edd58685713": {
      "content": "\\\\documentclass[${1:options}]{${2:class}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\documentclass[]{}",
      "matches": {
        "dclo": true
      },
      "source": "vim-snippets/snippets"
    },
    "296cbf7b-a5b6-37f5-8e53-b21cfee9d77d": {
      "content": "enum ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "296dd0fd-6632-3dc5-8102-5dacc1816893": {
      "content": "{% include \"${0}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "297339fb-c734-3370-bb02-b07ff3a8b562": {
      "content": "nextScene();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2974a7cd-8194-35e6-850f-ec34d899e046": {
      "content": "var ${1:my_object} = Object.defineProperties(\n\t${2:new Object()},\n\t{\n\t\t${3:property} : {\n\t\t\tget : function $1_$3_getter() {\n\t\t\t\t// getter code\n\t\t\t},\n\t\t\tset : function $1_$3_setter(value) {\n\t\t\t\t// setter code\n\t\t\t},\n\t\t\tvalue        : ${4:value},\n\t\t\twriteable    : ${5:boolean},\n\t\t\tenumerable   : ${6:boolean},\n\t\t\tconfigurable : ${0:boolean}\n\t\t}\n\t}\n);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "props": true
      },
      "source": "snippets/javascript"
    },
    "2974d3e2-30da-3807-b864-16f0458c9fbf": {
      "content": ":hover",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      },
      "source": "vim-snippets/snippets"
    },
    "297d9cd5-c3e8-3245-a829-ca6ed16ef9f9": {
      "content": "describe \"${1}\" $ do\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "desc": true
      },
      "source": "vim-snippets/snippets"
    },
    "299ff2e0-5503-3f06-b978-75e5e05357eb": {
      "content": "${1:ModelName}::model()->updateAll(${2:array('attributes')}, ${3:condition},array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yupdatea": true
      },
      "source": "vim-snippets/snippets"
    },
    "29a8d052-e23c-39d9-9f36-fa357cb45934": {
      "content": "<% $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "29a96ff4-a428-3122-bbd3-35036a4bd873": {
      "content": "${1:callbacks}.locked()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clocked": true
      },
      "source": "snippets/coffee"
    },
    "29b2ba66-19a3-3347-a1ed-d23fa60b3f74": {
      "content": "rug(${1:jitter(${2:x})})",
      "doc": "",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "rug",
      "matches": {
        "rug": true
      },
      "source": "vscode-R/snippets"
    },
    "29b52a45-9656-3516-a2dc-e1109105b6b5": {
      "content": "<%= render partial: '${1:item}', collection: ${0:items} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      },
      "source": "vim-snippets/snippets"
    },
    "29c4b63b-d1b4-3ec5-9882-cf48718f228c": {
      "content": "${1:obj}.triggerHandler('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trigh": true
      },
      "source": "snippets/coffee"
    },
    "29dc2b14-6dd4-3d63-9069-2aa947ba1838": {
      "content": "@section('${1}', '${2}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section",
      "matches": {
        "sec": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "29e3a2d7-a668-3eec-bbc2-4ebe5e4cd31b": {
      "content": "post {\n\tsuccess {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "29e7b922-0cad-3995-b9f4-c526d35c17c4": {
      "content": "expect($1).toMatchSnapshot($0);",
      "doc": "returns true if the argument matches the most recent snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchsnapshot",
      "matches": {
        "jest expect tomatchsnapshot": true,
        "tms": true
      },
      "source": "javascript/jest"
    },
    "29ef9d7d-60d7-3e88-954c-3e39336ea9f7": {
      "content": "dockerfile {\n\tfilename '${1:Dockerfile.build}'\n\tdir '${2:build}'\n\tlabel '${3:my-defined-label}'\n\tregistryUrl '${4:https://myregistry.com/}'\n\tregistryCredentialsId '${5:myPredefinedCredentialsInJenkins}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      },
      "source": "vim-snippets/snippets"
    },
    "29fa8c56-6a90-3943-95d4-82543c4c184b": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return ...",
      "matches": {
        "return": true,
        "rt": true
      },
      "source": "gosnippets/snippets"
    },
    "2a08c7ee-bc9a-3632-9fc8-2d91515d137c": {
      "content": "empty-cells: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a19cb01-3025-30db-9a3e-19ef38bac513": {
      "content": "each_index do |${1:i}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eaid": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a253ed1-6b28-3f70-8c27-b59750fabb28": {
      "content": "describe.only('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-only",
      "matches": {
        "desco": true,
        "jest describe only": true
      },
      "source": "javascript/jest"
    },
    "2a28220a-4641-38d7-8ed2-7b97c0868944": {
      "content": "{{-- ${1} --}}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{{-- comments --}}",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2a2d354f-9453-3d69-8744-a979286f2ae6": {
      "content": "quotes '\\00AB' '\\00BB' '\\201E' '\\201C'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a2d807e-281c-3526-9755-6a0b6da6abae": {
      "content": ":before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a3a11dc-4828-3891-8eac-fce41bab1dad": {
      "content": "property! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw!": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a3a1458-d3e9-3f80-be6d-a49971e056a0": {
      "content": "place-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a3b8c22-2c0c-36d2-90ee-cc90e019052d": {
      "content": "max-height: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a3ed28b-999f-36ee-a41f-a5b55c0885f9": {
      "content": "{% if $1 %}\n\t$2\n{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2a420847-015f-3909-9f6c-65a1952a02b5": {
      "content": "int main(int argc, char *argv[])\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a47bd8f-aea8-379f-842a-6ececff9ee63": {
      "content": "render file:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :file",
      "matches": {
        "rf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2a481f7b-9e5f-37d9-9891-e157af20ae69": {
      "content": "fallthrough",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fallthrough",
      "matches": {
        "ft": true
      },
      "source": "gosnippets/snippets"
    },
    "2a4ef4df-a683-3f4d-88f4-2a0f38ad878c": {
      "content": "refute_in_delta ${1:unexpected_float}, ${2:actual_float}, ${3:2**-20}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfid": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a58fb6b-e54d-35b3-ab86-52e2fcff9c27": {
      "content": "before_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_create",
      "matches": {
        "befc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2a5ea196-a946-3d55-b1b6-2ae1338a1747": {
      "content": "{% block $1 %}\n\t$2\n{% endblock $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2a606d69-609f-3415-a77d-30533cdc3f2f": {
      "content": "echo CHtml::scriptFile('${0:url}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhjsf": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a62a0eb-54a1-35e1-93e2-7f796e093171": {
      "content": "else if (${1}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2a64f6d5-06b6-37b6-bc34-5a71ee5e5dcd": {
      "content": "$.merge(${1:target}, ${0:original})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "merge": true
      },
      "source": "snippets/coffee"
    },
    "2a660e48-4594-374e-8f3b-e2bc5544c409": {
      "content": "\\${5:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:TARGET}",
      "matches": {
        "5T": true,
        "5t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2a6a1282-9729-316f-bb31-da949ade447b": {
      "content": "{% firstof ${1} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a6ffd3f-82a9-3c47-92f0-294d53900901": {
      "content": "head () {\n\treturn {\n\t\ttitle: '${1:title}',\n\t\tmeta: [\n\t\t\t{ hid: '${2:description}', name: '${3:description}', content: '${4:custom description}' }\n\t\t]\n\t}\n},",
      "doc": "Use the head method to set the HTML Head tags for the current page",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-head",
      "matches": {
        "nuxt head": true
      },
      "source": "javascript/nuxt"
    },
    "2a7b8d17-015a-303d-bc0c-2ae846199095": {
      "content": "border-corner-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a7f3e6e-f2b3-3549-a252-43a7dbb6557b": {
      "content": "${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${0:, to_field=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o2o": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a88769c-53ac-3b49-9c49-30990e81a0c1": {
      "content": "beforeMount () {\n\t${0};\n},",
      "doc": "beforeMount lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeMount",
      "matches": {
        "vbeforemount": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2a8e311d-bac2-375f-ba1b-907077e73cfb": {
      "content": "unbinary(\"${0:str}\"});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbinary": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a90101b-2df0-327f-ba2e-d239fd27aa73": {
      "content": "${1:FIELDNAME} = forms.SplitDateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SplitDateTimeField",
      "matches": {
        "fsdatetime": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2a923667-667e-3d72-aceb-4bb9ca5e4293": {
      "content": "form_open_multipart(\"${1:action}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_open_multipart": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a9392ba-b4e0-3ffa-a291-138f22cf063d": {
      "content": "@moduledoc \"\"\"${0:TARGET}\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "@moduledoc \"\"\"...\"\"\"",
      "matches": {
        "mdoc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2a96b50c-3964-3cb9-ad21-03bcedc75720": {
      "content": "# File resource\nfile ${1:\"/path/to/file\"} do # Path to the file\n\t${2:#}backup ${3:5} # How many backups of this file to keep. Set to false if you want no backups.\n\t${4:#}owner ${5} # The owner for the file\n\t${6:#}group ${7} # The group owner of the file (string or id)\n\t${8:#}mode ${9} # The octal mode of the file (4-digit format)\n\t${10:#}content ${11:nil} # A string to write to the file. This will replace any previous content if set\n\t${12:#}${13:action :create} # Create this file (Default)\n\t${14:#}${15:action :delete} # Delete this file\n\t${16:#}${0:action :touch} # Touch this file (update the mtime/atime)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "2a9a7404-052d-3c8e-b66b-ebb101cffd5e": {
      "content": "import { useInView } from 'react-intersection-observer';",
      "doc": "",
      "filetype": "react-intersection-observer",
      "grammar": "lsp",
      "label": "react-intersection-observer-import",
      "matches": {
        "react-intersection-observer import": true,
        "rio import": true
      },
      "source": "javascript/react-intersection-observer"
    },
    "2aa8a6a9-8c39-32d6-bef4-ef71dea1a912": {
      "content": "border-bottom-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ab263b1-f65e-3330-8175-0b09eff9297f": {
      "content": "<nuxt-link to=\"/${1:page}\">${1:page}</nuxt-link>",
      "doc": "nuxt routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Nuxt Routing Link",
      "matches": {
        "vnuxtl": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2abd2f28-80fd-369c-b404-9909cfcc3b5d": {
      "content": "-webkit-box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ac02407-bdca-3211-b2a4-7e23280685f8": {
      "content": "(case ${1}\n\t[(${2}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ac47676-28ba-3f75-a5bf-dba0d26a31c1": {
      "content": "border-right-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      },
      "source": "vim-snippets/snippets"
    },
    "2add4390-787c-3438-a5e1-50995e2b523a": {
      "content": "vertical-align middle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ae1dbc0-ecb6-3ef4-b32d-71a3a1b4f124": {
      "content": "import React,{ useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactHookProps",
      "matches": {
        "rhc": true
      },
      "source": "vscode-react/snippets"
    },
    "2ae32a25-ee2f-349e-9631-db9d1921085a": {
      "content": "MovieClip",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2aee92fd-844d-32b6-90c6-72ded8fe036f": {
      "content": "<xsl:otherwise>${0}\n</xsl:otherwise>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "otherwise": true
      },
      "source": "vim-snippets/snippets"
    },
    "2af3b00b-a61f-3624-aa7d-e6a3124d9615": {
      "content": "${1:obj}.end()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      },
      "source": "snippets/javascript"
    },
    "2afe4f3b-35df-3aca-bb23-50478c133630": {
      "content": "for (int ${1:i} = ${2:10}; $1 >= 0; $1--)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for loop (reverse)",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2afe9fab-7fec-35ec-9c98-8488368c5d33": {
      "content": "beforeEnter(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router per-route guard beforeEnter",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeEnter",
      "matches": {
        "vbeforeenter": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2aff11d8-41cd-3e5a-b26a-079dcea394bd": {
      "content": "import React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React pure component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-pure-component",
      "matches": {
        "react component class pure": true,
        "rpc": true
      },
      "source": "javascript/react"
    },
    "2b03fdec-1a0f-369a-b537-81b791de8570": {
      "content": "format.${1:js|xml|html} { ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b044578-878f-3627-82ae-4c22c12bb0c0": {
      "content": "import { NgModule } from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\n\nimport { ${1:App}Component } from './${1:app}.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n\t],\n\tdeclarations: [${1:App}Component],\n\tbootstrap: [${1:App}Component],\n})\nexport class ${1:App}Module { }\n$0",
      "doc": "Angular Root Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-root-module",
      "matches": {
        "a-module-root": true,
        "angular root module": true
      },
      "source": "javascript/angular"
    },
    "2b071fc5-b3cb-3a87-a1bb-3ff28d60d25a": {
      "content": "[[NSUserDefaults standardUserDefaults] setObject:${1:object} forKey:${2:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "WriteDefaultsValue",
      "matches": {
        "wdef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2b08e9ac-9a61-3019-8506-878070ec63eb": {
      "content": "redirect_to action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :action",
      "matches": {
        "rea": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2b09e73f-38a6-3028-890d-7432693ccd2a": {
      "content": "validates :${0:attribute}, uniqueness: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vu": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b0aaac5-e568-35fd-b365-cdc04c7fbaf8": {
      "content": "{\n\t\"type\": \"font_picker\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${3}\",\n\t\"default\": \"${0:helvetica_n4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_font": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b0c6c3b-9542-3503-ada7-0ec10a19d9b5": {
      "content": "{@docRoot",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{docRoot": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2b0e2f73-4a8a-3617-badd-6a198007b2c7": {
      "content": "protected string ${1:}(${2:})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms|": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b1137ca-c0b9-35fc-bdb6-0490be140862": {
      "content": "${1:$TM_FILENAME_BASE}.propTypes = {\n\t$2\n};",
      "doc": "Creates empty propTypes declaration",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypes",
      "matches": {
        "rpt": true
      },
      "source": "vscode-react/snippets"
    },
    "2b16f695-6c96-3671-8e0a-6485f68e7c9d": {
      "content": "throw ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2b1d612a-92b8-3176-819c-987b0e61db86": {
      "content": "default_scope ${1:order(${2:'${3:created_at DESC}'})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "default_scope",
      "matches": {
        "dscope": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2b1e7153-2bec-3515-8461-0134dab68338": {
      "content": "render() {\n\treturn (\n\t\t<>\n\t\t\t${2}\n\t\t</>\n\t);\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ren": true
      },
      "source": "snippets/javascript"
    },
    "2b20868d-6e58-32ca-961e-13d480cc610c": {
      "content": "${1:obj}.filter('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "snippets/javascript"
    },
    "2b247aa6-9a98-3156-9395-0960652b3197": {
      "content": "{{ block.super }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "super": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2b282168-81a0-37c2-afa4-85f662a87f28": {
      "content": "flash[:${1:notice}] = \"${2:Successfully created...}\"$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "flash[...]",
      "matches": {
        "flash": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2b2e4b8a-9ee8-33bd-99bd-041101b7dc81": {
      "content": "<ol type=\"i\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oli": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2b2f9b65-f7b9-3ba9-9a3f-11c6acfe5751": {
      "content": "${1:obj}.data(${2:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      },
      "source": "snippets/javascript"
    },
    "2b338931-4af5-322f-8d99-b2f3673e302b": {
      "content": "removetags:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b36e4ab-e50f-3f3b-9cf0-da8a84466dfe": {
      "content": "border-top-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b486cc1-8627-3f52-ae34-ad73e8ecefcf": {
      "content": "$this->${1:method}()->shouldNotBe(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBe('value')",
      "matches": {
        "snbe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2b49fb82-d77f-3702-912d-fc0469e77023": {
      "content": "_.pullAt(${array}, ${indexes})",
      "doc": "var array = ['a', 'b', 'c', 'd'];\nvar pulled = _.pullAt(array, [1, 3]);\n\nconsole.log(array);\n// => ['a', 'c']\n\nconsole.log(pulled);\n// => ['b', 'd']\n\nRemoves elements from `array` corresponding to `indexes` and returns an\narray of removed elements.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullat",
      "matches": {
        "lodash pullat": true
      },
      "source": "javascript/lodash"
    },
    "2b5056e7-f22a-3e4d-a822-737a8d38a652": {
      "content": "void setup(){\n\t${1}\n}\nvoid draw(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b6dcf0b-9b1a-3269-bb68-943052aead44": {
      "content": "outline none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b74ca8e-7566-37e9-97b2-1f6554d75816": {
      "content": "function ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts function",
      "matches": {
        "tfun": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b83f3a6-af75-3f16-b215-f95a306b0815": {
      "content": "background: #${1:fff} url('${2}') ${3:0} ${4:0} ${0:no-repeat}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b8e2c64-70fb-36f0-9340-8d1add3eed72": {
      "content": "public override bool Equals(object obj) => Equals(obj as ${1:TYPE});\n\npublic bool Equals($1 other)  // IEquatable<$1>\n{\n\tif (object.ReferenceEquals(other, null))\n\t\treturn false;\n\tif (object.ReferenceEquals(this, other))\n\t\treturn true;\n\tif (this.GetType() != other.GetType())\n\t\treturn false;\n\t$0\n\treturn base.Equals(other);\n}\n\npublic override int GetHashCode() => base.GetHashCode();\n\npublic static bool operator ==($1 x, $1 y) =>\n\t(object.ReferenceEquals(x, null) && object.ReferenceEquals(y, null))\n\t|| (!object.ReferenceEquals(x, null) && x.Equals(y));\n\npublic static bool operator !=($1 x, $1 y) => !(x == y);\n",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Equality for a type",
      "matches": {
        "equals": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2b8fbc82-c4c3-3bc2-ae9b-8e38a68f6b94": {
      "content": "border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b923a6a-abf8-35d6-aba8-d3fab77d639c": {
      "content": "{% now \"${0:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b93e441-e145-3faf-a0ea-8796457db197": {
      "content": "border-fit stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "2b9a4d81-7c79-34d6-aee1-4fcdda864d2e": {
      "content": "$this->assertInternalType(${1:'string'}, ${2:actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertInternalType('string', $actual)",
      "matches": {
        "asit": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ba59d7c-99b4-3d3c-812e-4bb9b2892867": {
      "content": "${1:void} ${2:function_name}()\n{\n\t${3}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun0": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ba8dc4a-571a-32f2-b87b-4e0fd4f364c3": {
      "content": "formArrayName=\"${1:control}\"",
      "doc": "Angular formArrayName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormArrayName",
      "matches": {
        "a-formArrayName": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "2bae8a9c-7876-31ce-bdac-f29b98d22bef": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bb61c3c-5eeb-372c-8bb6-664cad317f0e": {
      "content": "justify-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bc1349b-4015-30d6-b2cb-116fa864ba25": {
      "content": "float ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bd1b654-39d6-306e-83c1-231d505c1804": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst headers = req.headers\n\t\t\t.set('Content-Type', 'application/json');\n\t\tconst authReq = req.clone({ headers });\n\t\treturn next.handle(authReq);\n\t}\n}",
      "doc": "Angular HttpInterceptor for headers HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-for-headers",
      "matches": {
        "a-http-interceptor-headers": true,
        "angular http interceptor headers": true
      },
      "source": "javascript/angular"
    },
    "2bd3c7b5-51b3-34bf-9921-3508c8d0ce98": {
      "content": "zip(${1:enums}) { |${2:row}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zip": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bdd59ba-1e7b-3579-9cea-3129b98bd131": {
      "content": "dist(${1:x1}, ${2:y1}, ${4:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dist": true
      },
      "source": "vim-snippets/snippets"
    },
    "2be49b27-2862-31f3-9331-2aa0fd798494": {
      "content": "place-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "2be5f479-ecc0-34fe-9276-adda6d2537bd": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bea330b-1022-3a9c-acbf-e0ae1bf06dfd": {
      "content": "get(${1:x}, ${2:y}${3:, }${4:width}${5:, }${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "pixel",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bedb1e4-652e-328b-bc4c-32fde259c97c": {
      "content": "[${0:TARGET} for ${1:x} in ${2:xs}]",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2beee1c0-eaa3-38e1-a86a-6bc24c88d100": {
      "content": "@if ${1:condition}\n\t${2:${VISUAL}}\n@else\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bf1ff68-0732-3a68-8c0d-3d8190d6ba30": {
      "content": "fail(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fail": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bf3d7b7-874d-3c2a-b359-e671cf493c9e": {
      "content": "${1:callbacks}.fire(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfire": true
      },
      "source": "snippets/javascript"
    },
    "2bf6a50f-68a3-35ab-ae8a-1ef40923a3a9": {
      "content": "before_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbu": true
      },
      "source": "vim-snippets/snippets"
    },
    "2bfc0723-ccfd-31e4-a341-e768cf049741": {
      "content": "Mouse Down    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down",
      "matches": {
        "md": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2c02467b-c549-39a6-8aa1-a78156f24c11": {
      "content": "$this->${1:method}()->shouldNotBe${2:String|Array|Bool}();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeString|Array|Bool()",
      "matches": {
        "snbscalar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2c06e6b4-9a16-34e3-981b-29d007e0dc66": {
      "content": "while ${1} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true,
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c1c8c21-0135-3eba-a7ff-5e6d60613153": {
      "content": "justify-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c1f07b8-40e5-3709-8700-a25677527654": {
      "content": "${1:Title}\n=====${2:=}\n${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c24b9b8-5547-3410-924d-4134bfda5e06": {
      "content": "expect.hasAssertions();$0",
      "doc": "expects the test to make at least one assertion (useful for async)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-hasassertions",
      "matches": {
        "expha": true,
        "jest expect hasassertions": true
      },
      "source": "javascript/jest"
    },
    "2c40a198-b9f1-3d0b-a613-bb45c1101349": {
      "content": "console.warn(${1:object});",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolewarn",
      "matches": {
        "base console warn": true
      },
      "source": "javascript/base"
    },
    "2c43a91f-6642-3793-8270-567ad457c3f0": {
      "content": "<h2 class=\"${1}\">${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2.": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c440a22-319c-35ca-a321-fb99fefd439b": {
      "content": "Page Should Not Contain Textfield    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Textfield",
      "matches": {
        "psnct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2c449a50-fb29-3a0c-a6f0-99b80fd9e6d3": {
      "content": "else {\n    ${1:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "else {...}",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c4eff25-7857-3f6a-906b-c8babf2b70d9": {
      "content": "border-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c550054-c4a9-3fa2-999f-e253b0c9cb25": {
      "content": "resources:\n{{ toYaml .Values.${1:value_key}.resources | indent 12 }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resources_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c5a1e1c-b453-3ca1-aad4-c3784dfca157": {
      "content": "_.pullAllBy(${array}, ${values}, ${iteratee})",
      "doc": "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\n_.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\nconsole.log(array);\n// => [{ 'x': 2 }]\n\nThis method is like `_.pullAll` except that it accepts `iteratee` which is\ninvoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The iteratee is invoked with one argument: (value).\n\n**Note:** Unlike `_.differenceBy`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullallby",
      "matches": {
        "lodash pullallby": true
      },
      "source": "javascript/lodash"
    },
    "2c71f89b-fa26-34d6-9056-92cec73e304f": {
      "content": "begin ${0:TARGET} end",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "beg": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c722f1e-9347-363c-98c3-f52654846748": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "Comment Big Block",
      "matches": {
        "cmmb": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "2c825a1c-d43e-3034-bc75-fd05f407e2dd": {
      "content": "[[${1:foo} alloc] init${2}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alloc": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c82ece6-ccab-3af5-88e7-6657c63a436d": {
      "content": "place-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c874fb3-5b3a-3a38-a26d-e0c1c4db8025": {
      "content": "real, dimension(${1::})${2:#:, allocatable} :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension",
      "matches": {
        "red": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c8879c6-4df1-3677-b450-27754caf06eb": {
      "content": "(* ${0:TARGET} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "cc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c8905d6-6879-3da4-ba00-49a8ad2643d0": {
      "content": "@extends('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@extends",
      "matches": {
        "ext": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2c93154c-fb6a-3229-a300-914135c921fd": {
      "content": "${1}:\nfor ${2} of ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for each",
      "matches": {
        "nfore": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c945c65-e43f-3a90-9dc3-a1b92557c686": {
      "content": "grid-auto-flow: row",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "2c986b42-0d48-3e8c-89e2-72211d598a58": {
      "content": "margin-right: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ca3f1e6-a4b7-3929-9f68-a20eb9cab3fe": {
      "content": "class ${1:class_name};\n\t// data or class properties\n\t${0}\n\t// initialization\n\tfunction new();\n\tendfunction : new\nendclass : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ca67a28-2acd-39a1-bd41-7422aab75217": {
      "content": "\\\\begin{figure}[htpb]\n\\\\begin{center}\n\\\\begin{tikzpicture}[scale=${1:1}, transform shape]\n\t${2}\n\\\\end{tikzpicture}\n\\\\end{center}\n\\\\caption{${3}}%\n\\\\label{fig:${4}}\n\\\\end{figure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "figure environment (tikzpicture)",
      "matches": {
        "tikz": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ca6ce74-1f23-3a5f-ad2c-59d42984e6dc": {
      "content": "import ${1};\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true,
        "imt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2cb9922b-492d-34c6-b6bf-611c5095c537": {
      "content": "created () {\n\t${0};\n},",
      "doc": "created lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle created",
      "matches": {
        "vcreated": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2cc59343-9096-35d8-9776-304044e7a991": {
      "content": "truncatewords:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      },
      "source": "vim-snippets/snippets"
    },
    "2cc9e923-baf2-3dad-b566-61738cd5d712": {
      "content": "${1:definiendum}::\n${2:definiens}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2ccf977e-7f27-3731-adc3-9185400d1234": {
      "content": "$.isNumeric(${1:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      },
      "source": "snippets/javascript"
    },
    "2cde4928-0227-3f3d-8aef-7b5456c131e0": {
      "content": "${1:obj}.ajaxComplete (${1:e}, xhr, settings) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxcomplete": true
      },
      "source": "snippets/coffee"
    },
    "2ce2c47c-5dc1-31be-9b61-116f66ef4911": {
      "content": "&#x2326;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delete": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ce560f9-df4b-35de-9377-0ba1f37cab30": {
      "content": "<input type=\"time\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:time": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ce5f282-3b84-35d0-a9f1-9b029aa7fc31": {
      "content": "if err != nil {\n\treturn errors.Wrap(err, \"${1:message}\")\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrap",
      "matches": {
        "errnw": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "2ce7f791-d849-3bbc-b904-b9167a340a22": {
      "content": "${1:obj}.one('${2:event name}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "one": true
      },
      "source": "snippets/javascript"
    },
    "2cee7bd1-0ebb-3980-8372-a2a479930940": {
      "content": "remove_column :${1:table_name}, :${0:column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "2cef542b-2819-3ace-ba71-6ce1ece62f59": {
      "content": "#[test]\nfn ${1:#:test_function_name}() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2cfe1596-42dd-3a8e-936a-ade2a09d8ecf": {
      "content": "Yii::app()->request->isPostRequest",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yispost": true
      },
      "source": "vim-snippets/snippets"
    },
    "2cfe4af5-7495-381b-b049-85f80047fc04": {
      "content": "right auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d0459e8-d418-35c8-ab62-39bc7def6e12": {
      "content": "{#await ${1:promise} then ${2:value}}\n\t${3: <!-- content when promise was fulfilled -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-short-block",
      "matches": {
        "svawait-short": true,
        "svelte await short": true
      },
      "source": "javascript/svelte"
    },
    "2d0544cc-f8f3-3294-b9ea-0e0dd03a1106": {
      "content": "right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d0c6ec2-cadd-3182-ab2f-05c518148825": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${3}\nend if;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d107df2-bbdc-3f9f-9a56-a027e8c48de5": {
      "content": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rca": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d115c48-864f-3349-a5e0-de5c1e6407e6": {
      "content": "try {\n  ${0:${VISUAL}}\n} catch (${1:Exception e}) {\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d15e19e-2a14-3c5c-9649-ae109366b480": {
      "content": "${1:obj}.andSelf()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "andself": true
      },
      "source": "snippets/coffee"
    },
    "2d1fa92c-de0c-393a-8d3c-5ebf16dc68d8": {
      "content": "const ${1:instance} = axios.create({\n\tbaseURL: '${2:uri}',\n\ttimeout: $3,\n\theaders: {'${4:key}': '${5:value}'}",
      "doc": "Create an Axios instance for requests",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-instance",
      "matches": {
        "axios instance": true
      },
      "source": "javascript/axios"
    },
    "2d2f5955-7895-386a-91d4-8c175fa0f696": {
      "content": "Serial.print(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d306c06-b4c8-3172-b028-71d5aec567a7": {
      "content": "font-family ${0:'Monotype Corsiva','Comic Sans MS'},cursive",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d35daba-2f5f-3ea9-b585-83265fdf37f4": {
      "content": "import { useSelector, useDispatch } from 'react-redux';",
      "doc": "Import Redux hooks (useSelector, useDispatch)",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-import-hooks",
      "matches": {
        "irrh": true,
        "redux import hooks": true
      },
      "source": "javascript/redux"
    },
    "2d3a7fcb-44ec-36a3-ab3d-40a3255f3020": {
      "content": "do {\n\t${0:TARGET}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowhile": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2d3d483b-4d1a-302c-b3b5-9d3157da48a4": {
      "content": "place-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d45cf7d-ec80-31e1-af02-d1b75d46d488": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "Invoked before rendering when new props or state are being received. ",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      },
      "source": "vscode-react/snippets"
    },
    "2d4773c5-ef73-3210-b1f2-9e2ffc7e6432": {
      "content": "expect(${1:target}).not.toBeGreaterThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not be greater than (js)",
      "matches": {
        "notg": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d48a769-df8a-3c42-87a5-0578c19084ca": {
      "content": "switch (${1}) {\ncase ${2}:\n\t${3}\n\tbreak\ndefault:\n\t${0}\n\tbreak\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d4bd507-ee7a-3e11-97b1-d1eb945bf999": {
      "content": "loop { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loo": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d4dc43a-2c3b-3b62-8c62-17bd78f53bdb": {
      "content": "<%= unless ${1} do %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d51677f-671c-3d0c-9941-4df3369b21f3": {
      "content": "word-break break-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d52a521-1b71-3a11-8d00-5e5ae1ede8e2": {
      "content": "t.references :${1:taggable}${2:, polymorphic: ${3:{ default: '${4:Photo}' }}}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create references column",
      "matches": {
        "tcr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2d5413dc-fc74-364c-8dc8-e1cec9eb06c3": {
      "content": "if ${1:true} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. end",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2d568069-fe58-3cda-b345-b5c3f865de02": {
      "content": "${1:obj}.load('${2:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (responseText, textStatus, xhr) {\n\t\t${0:// success callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadf": true
      },
      "source": "snippets/javascript"
    },
    "2d5a0351-c00e-3f7f-8ab4-ae85889066c5": {
      "content": "componentDidMount() {\n\t$0\n}\n",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      },
      "source": "vscode-react/snippets"
    },
    "2d5cd33b-3984-355f-9e3b-f85b94cb0f67": {
      "content": "<%= label ${1:f}, :${2:field}, \"${3:Label}\" %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "label",
      "matches": {
        "la": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d5dfc47-6a5a-3c7b-b324-be33c7ff885c": {
      "content": "<input type=\"range\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:range": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d61ddec-5d11-344d-b51e-09ad8a9cc79b": {
      "content": "$.param(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "snippets/coffee"
    },
    "2d681e4a-f675-3e96-9821-4053f75a308b": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"stylus\" scoped>\n\n</style>",
      "doc": "Base for Vue File with Stylus",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Stylus",
      "matches": {
        "vbase-styl": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2d69824b-e89f-3f38-a89c-3b97a63879a3": {
      "content": "{% include \"${0}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d7de6d8-17bc-3deb-b539-a2f1f207f617": {
      "content": "new RegExp(r'${1}')",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rgx": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d83c19e-957e-3bab-ae54-14b1fef4e4ea": {
      "content": "#line ${0:#:number}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "line": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2d849004-735f-322c-bdc7-e835d03ed4d8": {
      "content": "echo CHtml::image('${1:src}', '${2:alt}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhimg": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d85f951-d896-36db-8743-3528d26e31dd": {
      "content": "__import__('pprint').pprint(${1})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pprint": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d86e4f0-26ae-382a-bd44-cd60f66c3058": {
      "content": "list-style-position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d928f64-c9a7-345d-8ddb-63abf2e8cf16": {
      "content": "_.intersection(${arrays})",
      "doc": "_.intersection([2, 1], [2, 3]);\n// => [2]\n\nCreates an array of unique values that are included in all given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersection",
      "matches": {
        "lodash intersection": true
      },
      "source": "javascript/lodash"
    },
    "2d95901f-1395-31c6-b48b-50f6791173eb": {
      "content": "assert_equal ${1:expected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ase": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d9abf34-e307-30bd-aa56-589167753177": {
      "content": "NSMutableString ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsms": true
      },
      "source": "vim-snippets/snippets"
    },
    "2d9c86eb-f3a9-3415-826f-16a05a5216c5": {
      "content": "DEFINE INPUT PARAMETER ${1:ParamName} AS ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      },
      "source": "vim-snippets/snippets"
    },
    "2dab24b3-9cff-3ece-b907-9c2f17a47939": {
      "content": "foreach ($${1:variable} as $${2:key} => $${3:value}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "foreach ($var as $key => $value) { .. }",
      "matches": {
        "foreachk": true
      },
      "source": "vim-snippets/snippets"
    },
    "2dabe366-d76e-3744-b7ab-53cd8d7de93e": {
      "content": "__${1}__${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "__strong__",
      "matches": {
        "strong2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2dbee045-5c68-393d-93a1-aec201c962a8": {
      "content": "-webkit-border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "2dcf96a5-c163-39fd-8c65-faa806322993": {
      "content": "${1:FIELDNAME} = models.DateField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      },
      "source": "vim-snippets/snippets"
    },
    "2dd19512-18ac-3c48-8732-a4e297893ef8": {
      "content": "test.skip('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-skip",
      "matches": {
        "jest test skip": true,
        "tests": true
      },
      "source": "javascript/jest"
    },
    "2dd7b58c-dfe8-3360-aa5d-904f19fbb1fc": {
      "content": "-webkit-border-image: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "2dda19b8-67cd-3b11-8a1b-851e97828857": {
      "content": "{{ $1 }}$2",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2de184eb-ad38-3d81-a88f-14dc8fa1afd8": {
      "content": "import PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React 17 Arrow Function Component with ES7 module system with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactArrowFunctionComponentWithPropTypes",
      "matches": {
        "_rafcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "2de26178-f383-3c64-8e80-9e9830ab8675": {
      "content": "string.max()",
      "doc": "string.max(limit: number | Ref, message?: string | function): Schema\n\nSet a maximum length limit for the string value. The ${max} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-max",
      "matches": {
        "yup string max": true
      },
      "source": "javascript/yup"
    },
    "2de28bb2-cf2e-37c3-b2bd-4a0262e31651": {
      "content": "{% case ${1:variable} %}\n\t{% when ${2:condition} %}\n\t\t${3}\n\t{% else %}\n\t\t${0}\n{% endcase %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ded6856-92e5-38d2-be93-76c02a86dacc": {
      "content": "case '${1:#:variable}':\n\t${0:#:code...}\n\tbreak;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2defa386-0d20-3bb6-8832-ac91c2f7bb04": {
      "content": "onBeforeUpdate(() => {${1}})",
      "doc": "Vue onBeforeUpdate Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeUpdate",
      "matches": {
        "v3onbeforeupdate": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2e10a28b-299b-31cd-a2f1-21af5863da7a": {
      "content": "for ${1} in ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "for loop iterating over iterable container",
      "matches": {
        "forc": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e167cfa-de21-3ec6-9119-ca65ac747161": {
      "content": "${1:expression} if ${2:condition};\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional one-line (xif)",
      "matches": {
        "xif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2e1f8a95-fb46-3c41-9c7f-f57a15b25e6e": {
      "content": "import Application from '@ember/application';\n\nexport default Application.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "App.Name = Ember.Application.create({});",
      "matches": {
        "eapp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2e27ec49-0880-33a3-a937-167c791daad4": {
      "content": "render controller:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :controller",
      "matches": {
        "rc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2e362598-32b6-3a2d-83f6-81c53627a17e": {
      "content": "border-bottom-right-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e3b2c01-a87a-3868-9010-2ebb5202722d": {
      "content": "background-attachment scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e3e2f82-8d8b-3897-824d-fcb9fffc5564": {
      "content": "zoom 1",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e42e7d7-7ff9-3029-9bdc-0fc6a1d4359b": {
      "content": "${1:div}(:class=\"[${2:classNameA}, {${3:classNameB} : ${4:condition}}]\")",
      "doc": "vue multiple conditional class bindings",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Multiple Conditional Class Bindings",
      "matches": {
        "vclass-obj-mult": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2e533127-eba8-3a05-8641-a3df07e00527": {
      "content": "if(${1:true}) ${0};",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e5c1756-0527-3ea1-9ec6-f5446f0ac6fd": {
      "content": "int choice;\nwhile (1)\n{\n\tstatic struct option long_options[] =\n\t{\n\t\t/* Use flags like so:\n\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t${1}\n\t\t{0,0,0,0}\n\t};\n\tint option_index = 0;\n\t/* Argument parameters:\n\t\tno_argument: \" \"\n\t\trequired_argument: \":\"\n\t\toptional_argument: \"::\" */\n\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\tlong_options, &option_index);\n\tif (choice == -1)\n\t\tbreak;\n\tswitch( choice )\n\t{\n\t\tcase 'v':\n\t\t\t${2}\n\t\t\tbreak;\n\t\tcase 'h':\n\t\t\t${3}\n\t\t\tbreak;\n\t\tcase '?':\n\t\t\t/* getopt_long will have already printed an error */\n\t\t\tbreak;\n\t\tdefault:\n\t\t\t/* Not sure how to get here... */\n\t\t\treturn EXIT_FAILURE;\n\t}\n}\n/* Deal with non-option arguments here */\nif ( optind < argc )\n{\n\twhile ( optind < argc )\n\t{\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e5d16aa-674d-3836-bc00-e7a4b5a4fab1": {
      "content": "${1:app}.delete('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express DELETE",
      "matches": {
        "edelete": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2e62fdc7-fc02-33c5-a2a0-6bd5d7440c4b": {
      "content": "pushMatrix();\n${0:};\npopMatrix();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushMatrix": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e8a2ace-4fe5-30fb-91dc-e31d2d8540ea": {
      "content": "useDebugValue(${1:value})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usedebugvalue",
      "matches": {
        "react usedebugvalue": true,
        "usedebugvalue": true
      },
      "source": "javascript/react"
    },
    "2e8a72f7-7267-3a9d-a612-a49723d94d16": {
      "content": "- (${1:id})${2:method}\n{\n\t[super $2];${0}\n\treturn self;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm": true
      },
      "source": "vim-snippets/snippets"
    },
    "2e8c466d-bc47-35a6-966d-4353e8e8fa32": {
      "content": "_.thru(${value}, ${interceptor})",
      "doc": "_('  abc  ')\n .chain()\n .trim()\n .thru(function(value) {\n   return [value];\n })\n .value();\n// => ['abc']\n\nThis method is like `_.tap` except that it returns the result of `interceptor`.\nThe purpose of this method is to \"pass thru\" values replacing intermediate\nresults in a method chain sequence.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-thru",
      "matches": {
        "lodash thru": true
      },
      "source": "javascript/lodash"
    },
    "2e9509fc-1e40-3332-a8d9-c42854ad9504": {
      "content": "${1:FIELDNAME} = models.SmallIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SmallIntegerField",
      "matches": {
        "msmallint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2ea5e85f-2b2a-3357-9a5c-5db34ef23d9f": {
      "content": "\\$_GET['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2ea6fb81-146e-3bb5-bee9-81d084439162": {
      "content": "(\\\\${1:x} -> ${0:expression})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(\\": true
      },
      "source": "vim-snippets/snippets"
    },
    "2eac15ab-5610-3a07-b5bc-b9ed4bdc70cd": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-number-required",
      "matches": {
        "prop-types number required": true,
        "ptnr": true
      },
      "source": "javascript/prop-types"
    },
    "2eb5175e-30c8-3ba6-9980-407fbe374bbb": {
      "content": "t.remove :${0:column}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trc": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ebc0198-12f8-3409-80af-9b618d2193bd": {
      "content": "_.upperCase(${string})",
      "doc": "_.upperCase('--foo-bar');\n// => 'FOO BAR'\n\n_.upperCase('fooBar');\n// => 'FOO BAR'\n\n_.upperCase('__foo_bar__');\n// => 'FOO BAR'\n\nConverts `string`, as space separated words, to upper case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uppercase",
      "matches": {
        "lodash uppercase": true
      },
      "source": "javascript/lodash"
    },
    "2ec423ae-070b-3c0a-aedf-b8d4da535634": {
      "content": "{% from ${1:x} import ${0:y} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "from": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ecbb10f-d0ed-35f4-b85d-ad4b4fa31b7f": {
      "content": "outline-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ed6b99f-c7fa-37e8-b604-db302e928e0b": {
      "content": "@ManyToOne\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mo": true
      },
      "source": "vim-snippets/snippets"
    },
    "2edf1ea3-6f17-300b-8499-2586e43574b7": {
      "content": "foreach (${1:#:var} in ${2:#:iter}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "foreach () {}",
      "matches": {
        "fore": true,
        "foreach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2ee8a162-5b96-3125-b5f1-c2387322d33e": {
      "content": "type ${1:Struct} struct {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Struct declaration",
      "matches": {
        "struct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2efa7851-7720-38b1-8e7b-193163696759": {
      "content": ",,${1},,${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": ",,sub,,",
      "matches": {
        "sub": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2efc4d69-6a2f-3e0c-acda-eadfd9ebe386": {
      "content": "type ${1:msg}\n\t= ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f0b8fbf-abbb-320d-9589-59c6a0971bd6": {
      "content": "<input type=\"text\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:text": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f177394-01e1-3ea5-a124-c34577ba3ea8": {
      "content": "font-emphasize: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f403ed4-5241-3892-a60e-13d3da5bad82": {
      "content": "augroup ${1:#:augroup_name}\n  autocmd!\n  autocmd ${2:#:event}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroup with autocmds",
      "matches": {
        "augroup": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2f43e021-8321-32cc-9aed-cdd72708aae3": {
      "content": "background-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f450e51-6f08-39f8-87c0-8ce59607302c": {
      "content": "margin-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f4e5c73-f6e2-3815-8789-e0c6a0f71285": {
      "content": "if ${1} then\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2f5aefdd-ee49-370a-8727-d8d466fe8afd": {
      "content": "lng",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Long",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f5bd216-1b5b-3884-b257-3b6fb6d2f54a": {
      "content": "atan(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atan": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f62f0ab-bee3-3141-8579-fdabae2e3e5c": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f67b1c6-1201-3013-a33e-41e80a4a7c73": {
      "content": "expect(${1:target}).not.toBeDefined()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be defined (coffee)",
      "matches": {
        "notd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2f72e3f7-4ffb-3028-bea6-c39ad5e7ea36": {
      "content": "repeat (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f72f095-87c0-3cdf-8d47-216632146f1c": {
      "content": "background ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f79cf24-d0de-3587-96ab-2424351e491e": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>",
      "doc": "Base for Vue File with no styles",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with No Style",
      "matches": {
        "vbase-ns": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "2f86b2eb-de34-338c-8f54-925aea61035f": {
      "content": "import { createGlobalStyle } from 'styled-components';",
      "doc": "import { createGlobalStyle } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-create-global-style-from-styled-components",
      "matches": {
        "imscg": true,
        "styled-components import createglobalstyle": true
      },
      "source": "javascript/styled-components"
    },
    "2f8caecc-a616-3b63-ab26-6a8cd64411b2": {
      "content": "curveVertex(${1:x}, ${0:y});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveVertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "2f91757c-33c4-3f74-8427-f64d601c422a": {
      "content": "\\item ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true,
        "item \\item": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2f9dcbbc-57f1-3c29-9fb8-e35dc779073a": {
      "content": "${1:deferred}.notify(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotify": true
      },
      "source": "snippets/javascript"
    },
    "2fa58c8f-6e66-3b4b-a53b-6416d8ad99d8": {
      "content": "position relative",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "2fae2a42-dee2-3f20-af24-985d9f1a5ce6": {
      "content": "v-if=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-if",
      "matches": {
        "vif": true,
        "vue v-if": true
      },
      "source": "javascript/vue"
    },
    "2fb74aff-f564-3baa-9fbb-2c019cc64320": {
      "content": "center:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      },
      "source": "vim-snippets/snippets"
    },
    "2fb7e31d-b3f7-30a1-934f-3e2de688dd9b": {
      "content": "${1:key}: ${2:'value'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":": true
      },
      "source": "vim-snippets/snippets"
    },
    "2fc78fec-862c-3008-bac6-07e29d744b4a": {
      "content": "default:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "2fcdd513-ca82-3bc4-bd0c-82deabe8e6a8": {
      "content": "${1:public} ${2:int} ${3} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "2fe1343c-d125-362c-aa39-ffe83b875475": {
      "content": "write(*,*) '$1 = ', $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dpr": true
      },
      "source": "vim-snippets/snippets"
    },
    "2fe38f77-8130-3a74-ae29-474b0f83ac7e": {
      "content": "<dl class=\"${1}\">\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl.": true
      },
      "source": "vim-snippets/snippets"
    },
    "2feca5f6-668a-3a67-a4b9-0cc37ab422f0": {
      "content": "while ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ff21407-e513-33d8-9050-d0cb6a70db89": {
      "content": "print(\"${1:string}\")",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ff2c590-adfb-32ed-ab65-24d03036bede": {
      "content": "\\\\url{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "vim-snippets/snippets"
    },
    "2ff5de5e-356e-3fc2-afa3-0586f88d8b7b": {
      "content": "trait ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trait": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "2ff77409-8dbc-3fac-8abd-af8e9b7971e4": {
      "content": "return (\n\t${0}\n);",
      "doc": "return complex value (such as JSX components)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return-complex-value-such-as-jsx-components-",
      "matches": {
        "base return complex value": true
      },
      "source": "javascript/base"
    },
    "300118ce-ac78-3d8f-b83e-a1cc95b18b87": {
      "content": "real, intent(in)  ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real intent(in)",
      "matches": {
        "rei": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "30039b62-81d6-3b5f-b066-6563a5683268": {
      "content": "{% filter $1 %}\n\t$2\n{% endfilter %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3003a36b-e20b-3385-9665-2ad51465f592": {
      "content": "if ${1:condition}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "If",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "30094079-8981-34ba-a6f3-72d79a73c52e": {
      "content": "string toString() @safe const pure nothrow\n{\n\t$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "toString (toString)",
      "matches": {
        "toString": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "300ab1f7-13da-38dd-8841-e66dc9682413": {
      "content": "define(\"${1:#name}\", [\"${2:#dependencies1}\"], function (${3:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      },
      "source": "snippets/javascript"
    },
    "30118ac4-95ec-316a-b01a-b054abb0e749": {
      "content": "${1} : in std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      },
      "source": "vim-snippets/snippets"
    },
    "30161446-8941-3864-a34e-f0328517c6a9": {
      "content": "include_once '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc1": true
      },
      "source": "vim-snippets/snippets"
    },
    "30300325-a4be-3140-9f96-52abadffa18a": {
      "content": "<IfModule ${1:module_name}>\n        ${2}\n</IfModule>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmodule": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3033275a-8eb7-38aa-bd57-ace52efb7fad": {
      "content": "<nav>\n    ${1}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "303535ea-bb3c-36e2-8d3b-ce681b655589": {
      "content": "$.contains(${1:container}, ${0:contents});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      },
      "source": "snippets/javascript"
    },
    "3049fa7a-a671-3253-a82e-57dac373c956": {
      "content": "bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "304dd08e-fd97-3425-a552-a6b8ace7268d": {
      "content": "#!/usr/bin/env falcon",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "3050442a-b23c-3645-beb6-a51b86679025": {
      "content": "import React, { PureComponent } from 'react'\n\ninterface Props {\n\t\n}\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React pure component class with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactClassPureComponent",
      "matches": {
        "tsrpc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "30556f0f-4dcc-3291-8341-afd5c759feec": {
      "content": "${1}(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      },
      "source": "vim-snippets/snippets"
    },
    "305e51f6-bf96-3c5e-b0b6-a0fd1a2cd107": {
      "content": "bezier(${1:x1}, ${2:y1}, ${3:cx1}, ${4:cy1}, ${5:cx2}, ${6:cy2}, ${7:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezier": true
      },
      "source": "vim-snippets/snippets"
    },
    "3069a7ab-d1fb-3daf-8187-1a54391fa576": {
      "content": "# encoding: utf-8",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enc": true
      },
      "source": "vim-snippets/snippets"
    },
    "306cbbfc-c418-3660-a396-1d1ef67fc150": {
      "content": "Logger.warn(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      },
      "source": "vim-snippets/snippets"
    },
    "306d3ac3-48d8-379a-8f4f-512a2649dfd6": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n} else {\n\t${2}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (cond) { ... } else { ... }",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "30746458-2fb3-330e-af51-a7f5561442fd": {
      "content": "\"org.mortbay.jetty\" % \"jetty\" % \"${0:version}\" % \"test->default\",",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jettyjar": true
      },
      "source": "vim-snippets/snippets"
    },
    "3075ad30-29d6-33fc-aca0-a2c4a579e8e0": {
      "content": "{% raw %}${1:#:TARGET}{% endraw %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "30788a86-6e0a-3d2e-923f-de876366b2fc": {
      "content": "let rec ${1:f} =\n\t${2:expr}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let rec",
      "matches": {
        "lr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "307b274d-4426-3149-bfbf-2e12caa95985": {
      "content": "${1:obj}.children('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "children": true
      },
      "source": "snippets/coffee"
    },
    "308882fc-39b4-3ee6-b175-dd4dffd945a4": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      },
      "source": "vscode-react/snippets"
    },
    "308a1f8d-c956-3688-b12f-69c6660f17b1": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivate {\n\tconstructor() { }\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivate guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanActivate Guard",
      "matches": {
        "a-guard-can-activate": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "308b1eee-e852-3e97-838b-a57a67e9da6b": {
      "content": "std::unique_ptr<${1:T}> ${2} = std::make_unique<$1>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      },
      "source": "vim-snippets/snippets"
    },
    "308d9ae9-35be-3779-b412-201d2664190e": {
      "content": "lightFalloff(${1:constant}, ${2:linear}, ${0:quadratic});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lightFalloff": true
      },
      "source": "vim-snippets/snippets"
    },
    "30ad63ad-61b0-3dd6-abe5-6b14b8458361": {
      "content": "each_slice(${1:2}) { |${2:group}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eas-": true
      },
      "source": "vim-snippets/snippets"
    },
    "30ad71b6-bad4-32e4-ad65-d273e6de9eaa": {
      "content": "font-emphasize-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      },
      "source": "vim-snippets/snippets"
    },
    "30af179c-f5fa-3326-8d26-9148e48d053f": {
      "content": "{{- range $key, $value := .Values.udp }}\n  - name: \"{{ $key }}-udp\"\n\tport: {{ $key }}\n\tprotocol: UDP\n\ttargetPort: \"{{ $key }}-udp\"\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portUDP_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "30b796dc-70e3-31ca-8982-78fdc83356ee": {
      "content": "t.change :${1:name}, :${2:string}, ${3:limit}: ${4:80}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tch": true
      },
      "source": "vim-snippets/snippets"
    },
    "30b9be0e-3f36-31d7-994d-8dc5ba408a59": {
      "content": "font-effect: emboss",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "30ba5621-033f-309a-949f-f049294bcb2e": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-required",
      "matches": {
        "prop-types array required": true,
        "ptar": true
      },
      "source": "javascript/prop-types"
    },
    "30bc6cf3-3e94-3660-9988-34be9c475ed6": {
      "content": "it { should validate_numericality_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvn": true
      },
      "source": "vim-snippets/snippets"
    },
    "30bf76f5-a28b-34ef-9d88-cc40e3a46943": {
      "content": "static_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sca": true
      },
      "source": "vim-snippets/snippets"
    },
    "30c79cc4-9aac-32ca-aa81-69aea35a93a3": {
      "content": "place-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "30d10cfc-1461-37ce-a84c-e76cff531635": {
      "content": "@require '${0}'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@r": true
      },
      "source": "vim-snippets/snippets"
    },
    "30d711cb-3275-3bd0-b347-b862cbcd4ecd": {
      "content": ".. attention:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "attention",
      "matches": {
        "attention": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "30dd6af1-e621-3404-8672-d1db1a3ba642": {
      "content": "${1:#:set the_filename to }choose file name with prompt \"${2:#:Name this file:}\"\n\tdefault name \"${3:untitled}\" default location ${4:#:path to home folder}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_NewFile": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "30e6443c-7759-3ef2-ba5a-e908c6a3d176": {
      "content": "try\n\t${1}\nwith ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "30e66f66-c712-3966-9590-438e64d70b40": {
      "content": "do {\n\t${0}\n} while (${1})",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "do ... while",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "30f393aa-b49a-3a2f-96a0-fb2f158bbe12": {
      "content": "print_r(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "30f59014-8066-3bcb-9c00-8f273e3ca883": {
      "content": "<li>${1:TARGET}</li>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "30fb0ff9-a17c-3264-9bb1-a3f24ebcf0cd": {
      "content": "const ${1} = styled(${2})`\n  ${3}\n`;",
      "doc": "Styled-Component from existing component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-from-existing-component",
      "matches": {
        "scc": true,
        "styled-components component from existing": true
      },
      "source": "javascript/styled-components"
    },
    "30fdf8de-8d2a-3dc5-92b5-b5c1b929cdec": {
      "content": "defp ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defp": true
      },
      "source": "vim-snippets/snippets"
    },
    "3104ce58-36b5-3709-9367-58d58713d3c5": {
      "content": "[${0:foo} release];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rel": true
      },
      "source": "vim-snippets/snippets"
    },
    "3109c043-8e3e-3ad7-bad1-4424c453657e": {
      "content": "java.util.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.u": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "310b6d34-81a6-3aee-b6e4-42a68aeb15f2": {
      "content": "grid-auto-rows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      },
      "source": "vim-snippets/snippets"
    },
    "310db3d2-78be-306e-a51b-6d5c58fbba80": {
      "content": "loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "31141758-a9e8-314d-a5b0-045e4f467e9f": {
      "content": "border-bottom-right-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "311999b4-2e64-3fcf-b119-21314d322818": {
      "content": "object.camelCase()",
      "doc": "object.camelCase(): Schema\n\nTransforms all object keys to camelCase",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-camel-case",
      "matches": {
        "yup object camelcase": true
      },
      "source": "javascript/yup"
    },
    "3119daa0-6046-3ee5-8f89-89cad8d85a8e": {
      "content": "(${1:#:args}) =>\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "311c2fbd-adb2-328f-98fa-75abce3348ed": {
      "content": "$.Deferred()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "D": true
      },
      "source": "snippets/javascript"
    },
    "3129bfe3-9a9b-3af5-add4-4b241f17e1a7": {
      "content": "_.last(${array})",
      "doc": "_.last([1, 2, 3]);\n// => 3\n\nGets the last element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-last",
      "matches": {
        "lodash last": true
      },
      "source": "javascript/lodash"
    },
    "31303c5f-e2b3-3b18-8723-869797d69172": {
      "content": "merge(${1:x}, ${2:y}, ${3:by = ${4:intersect(names(x), names(y))}}, ${5:all = ${6:FALSE}})",
      "doc": "Merge",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "mer",
      "matches": {
        "merge": true
      },
      "source": "vscode-R/snippets"
    },
    "31365f24-b152-38d9-a18a-5249b57591c1": {
      "content": "must_be_instance_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbio": true
      },
      "source": "vim-snippets/snippets"
    },
    "3139ce41-b0cd-3ff5-a40f-1d3a42ad096b": {
      "content": "\\pdv[${1:${VISUAL}}]{${2}}{${3}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Partial Derivative",
      "matches": {
        "pdv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "313a4830-4e81-35d3-ae4b-6a0f2684cb93": {
      "content": "main(_) -> io:format(\"Hello, world!\\n\").",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "314528d1-6daa-3247-b21d-5aaae72d0db6": {
      "content": "expect(${1:target}).not.toBeTruthy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be truthy (coffee)",
      "matches": {
        "nott": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "314ad8e3-4187-3975-a987-37aec278e54e": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\nclass ${1:ClassName_model} extends CI_Model\n{\n\tprivate $table = '${2:table_name}';\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${3:// code...}\n\t}\n\tpublic function create($data)\n\t{\n\t\tif($this->db->insert($this->table, $data))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\tpublic function read($id)\n\t{\n\t\treturn $this->db->get_where($this->table, array('id', $id))->result();\n\t}\n\tpublic function update($id, $data)\n\t{\n\t\tif($this->db->update($this->table, $data, array('id' => $id)))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\tpublic function delete($id)\n\t{\n\t\tif(is_array($id))\n\t\t{\n\t\t\t$this->db->trans_start();\n\t\t\tforeach($id as $elem)\n\t\t\t\t$this->db->delete($this->table, array('id' => $elem));\n\t\t\t$this->db->trans_complete();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif($this->db->delete($this->table, array('id' => $id)))\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t}\n\tpublic function listRows($limit = null, $offset = 0)\n\t{\n\t\tif(!is_null($limit))\n\t\t\t$this->db->limit($limit, $offset);\n\t\treturn $this->db->get($this->table)->result();\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_model_crudl": true
      },
      "source": "vim-snippets/snippets"
    },
    "31539406-b89a-376b-ab3e-4d2b73f3521e": {
      "content": "import ${0:http}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "31542e17-344d-3352-bfb6-f36c965d0280": {
      "content": "_.isNull(${value})",
      "doc": "_.isNull(null);\n// => true\n\n_.isNull(void 0);\n// => false\n\nChecks if `value` is `null`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnull",
      "matches": {
        "lodash isnull": true
      },
      "source": "javascript/lodash"
    },
    "3161267b-ef4c-3ec2-b3b0-40fe36568a02": {
      "content": "try (${1:#:Resources}) {\n    ${0:TARGET}\n} catch (${2:Exception} ${3:e}) {\n    ${4:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_resources": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "316b64c7-18cf-3e79-85b1-e03f378a6349": {
      "content": "my $${1:var} = do { local $/ = undef; open my $fh, '<', ${2:$file}; <$fh> };\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "slurp",
      "matches": {
        "slurp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "316ec2a6-50ae-3d20-a504-de9a8f3010b9": {
      "content": "text-height: font-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "316fc4f6-f6cc-31de-9dc5-6b3883f66ce6": {
      "content": "<canvas>\n\t${0}\n</canvas>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "canvas": true
      },
      "source": "vim-snippets/snippets"
    },
    "3170d0b2-2651-3d3e-b008-d05c3d209588": {
      "content": "<${1:div} :style=\"[${2:styleObjectA}, ${3:styleObjectB]}\"></${1:div}>",
      "doc": "vue inline style binding, objects",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Style Binding Object",
      "matches": {
        "vstyle-obj": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "31728846-d6ed-339a-8aa0-eeaa4e2ea187": {
      "content": "wont_be_within_epsilon ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbwe": true
      },
      "source": "vim-snippets/snippets"
    },
    "317916e4-06e8-3714-a3e5-991615d322e3": {
      "content": "type tt_${1:name} is table of tr_${0:name};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "317a8ded-659c-36eb-9d9e-7e023e383157": {
      "content": "BEGIN {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      },
      "source": "vim-snippets/snippets"
    },
    "317e7e74-97ef-3cee-8dd3-6c40dcfc37f8": {
      "content": "If ${1:condition} Then\n\t${0:; True code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "31862e6c-2979-34f3-8251-eac467da5206": {
      "content": "_.omit(${object}, ${paths})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omit(object, ['a', 'c']);\n// => { 'b': '2' }\n\nThe opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable property paths of `object` that are not omitted.\n\n**Note:** This method is considerably slower than `_.pick`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-omit",
      "matches": {
        "lodash omit": true
      },
      "source": "javascript/lodash"
    },
    "31866dbd-7444-358b-826c-8ec59672e1b5": {
      "content": "procedure ${1}(${2}) is\n\t${3}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procedure": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "31883710-ed97-368d-b6d4-57a729e270d4": {
      "content": "const ${1:name} = ${2:value};",
      "doc": "const assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "const-assignment",
      "matches": {
        "base const": true
      },
      "source": "javascript/base"
    },
    "31908358-48fc-3f13-9f51-210894436d07": {
      "content": "if (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "if()",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3198bc42-e0fa-3210-8211-d9f2a1d86bc7": {
      "content": "export const state = () => ({\n\tvalue: 'myvalue'\n})\n\nexport const getters = {\n\tgetterValue: state => {\n\t\treturn state.value\n\t}\n}\n\nexport const mutations = {\n\tupdateValue: (state, payload) => {\n\t\tstate.value = payload\n\t}\n}\n\nexport const actions = {\n\tupdateActionValue({ commit }) {\n\t\tcommit('updateValue', payload)\n\t}\n}",
      "doc": "vuex store 2",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-store-2",
      "matches": {
        "vstore2": true,
        "vuex store 2": true
      },
      "source": "javascript/vuex"
    },
    "31a0fce5-f482-3917-b324-8d7a6d1043a9": {
      "content": "let ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "31a33e16-28b2-3aef-ac9a-9955ff675889": {
      "content": "overflow-x hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "31ae8658-94f4-3c51-8943-8c9486cbe919": {
      "content": "type(${1}), dimension(${2::}), allcatable :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "type dimension",
      "matches": {
        "tyd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "31bfeb65-be0e-3de4-88ae-dee13e7bd3c5": {
      "content": "align-items: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "31c3f047-e148-3b7c-8f0c-033cdbfe7183": {
      "content": "justify-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      },
      "source": "vim-snippets/snippets"
    },
    "31c42f62-cc35-398f-9948-53b6fc5d5b16": {
      "content": "echo CHtml::cssFile('${1:url}','${0:media}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcssf": true
      },
      "source": "vim-snippets/snippets"
    },
    "31c9d11e-45f9-3e8d-a599-7d85896f878e": {
      "content": "elif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "31cd3f8d-e1cf-3122-83ea-fba91076a61a": {
      "content": "pub enum ${1:Name} {\n\t${2},\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub enum definition",
      "matches": {
        "penum": true
      },
      "source": "vim-snippets/snippets"
    },
    "31d523ed-35b7-37af-99f4-ac7d368635a6": {
      "content": "echo '<pre>'; var_dump(${1}); echo '</pre>'; die(${0:});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdd": true
      },
      "source": "vim-snippets/snippets"
    },
    "31d74f01-e2b0-34af-bbc7-fc27ab8e6f26": {
      "content": "position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      },
      "source": "vim-snippets/snippets"
    },
    "31e57d1f-aa04-378f-9e5c-778ea7f38cda": {
      "content": "protected\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prot": true
      },
      "source": "vim-snippets/snippets"
    },
    "31ecce23-0418-317d-8646-def3a6838ec1": {
      "content": "tellTarget( ${1:#:target} ) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "31ed282a-3ba3-3f5f-b518-2db6f66c7213": {
      "content": "bind:${1|innerWidth,innerHeight,outerWidth,outerHeight,scrollX,scrollY,online|}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window-bind",
      "matches": {
        "svelte window bind": true,
        "svwb": true
      },
      "source": "javascript/svelte"
    },
    "31f5861d-8806-36e9-8d26-ee36ee62ce35": {
      "content": "import { ${1:moduleName} } from 'react-native'",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeImport",
      "matches": {
        "imrn": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "31f58817-fcf7-3c9e-aa32-23543c3186e5": {
      "content": "it(${1:#:message}, function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "it(message, func)",
      "matches": {
        "it": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "31fb77af-5d7d-3397-ac1e-859e88794426": {
      "content": "public ${1:int} ${2} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+&": true
      },
      "source": "vim-snippets/snippets"
    },
    "31ffe4e5-b01b-3fba-8282-5c8f3ef4b8fd": {
      "content": "align-content: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "3202966c-a111-3ee8-afed-285658f23198": {
      "content": "$(this)",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "this": true
      },
      "source": "snippets/coffee"
    },
    "32090939-d1b3-3e98-b44e-124f6089c93c": {
      "content": "Yii::app()->request->requestType",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yreqtype": true
      },
      "source": "vim-snippets/snippets"
    },
    "320a5836-2fd2-3131-99a9-9c787182cf0c": {
      "content": "font-stretch: ultra-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      },
      "source": "vim-snippets/snippets"
    },
    "32191e41-897c-3a64-a649-31a4923ef0de": {
      "content": "#region ${1:#:name}\n    ${0:TARGET}\n#endregion",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reg": true,
        "region": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "321a779e-1981-3151-8c0d-58b596d6e0cb": {
      "content": "TRUNCATE TABLE ${1:table};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "TRUNCATE TABLE ...",
      "matches": {
        "TRUNCATE_TABLE": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "321e4f51-cf80-3fee-906d-463b25995450": {
      "content": "{% endfor %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endfor",
      "matches": {
        "endfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "321e5d3f-fcad-3032-9e39-5471f27b8424": {
      "content": "signal ${1} : std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/snippets"
    },
    "322a1a86-5535-3689-b73b-e2901a5e6e52": {
      "content": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = (props) => (\n\t\t\t$0\n\t);\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component without PropTypes and ES6 module system but with Implicit Return and props",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessImplicitReturn",
      "matches": {
        "rsi": true
      },
      "source": "vscode-react/snippets"
    },
    "322f54bf-b9a8-3cdf-985e-86a813398945": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nfinally:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Finally",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/snippets"
    },
    "3231ba70-6e4f-354d-af9d-4158fc664954": {
      "content": "Plug '${1}', { 'for': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'for': '' }",
      "matches": {
        "plugfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "32325c9d-96dd-3da4-a7cb-fd1714e33cfb": {
      "content": "font-stretch condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "323446cc-2c32-32a0-8d16-56e1d9936cc7": {
      "content": "div(ng-repeat='${1} in ${2}' track by $index)",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repi": true
      },
      "source": "vim-snippets/snippets"
    },
    "323ae5b9-fbc0-380a-b724-0ff665cd9f61": {
      "content": "<?php\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?": true
      },
      "source": "vim-snippets/snippets"
    },
    "3241a9fc-9522-3356-97eb-5bb2673df5c6": {
      "content": "<b>${0}</b>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "3241fd22-635f-37c8-8e03-6741c86521a9": {
      "content": "background-origin: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "3243c792-02d0-32ff-863b-8d6f8817add2": {
      "content": "\\$_ENV['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "env": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3245ea2b-04aa-3ae5-aaba-c908636b71c0": {
      "content": "text-align center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "3248c8ed-d02a-359d-abb6-472176c45b01": {
      "content": "_.attempt(${func}, ${args})",
      "doc": "// Avoid throwing errors for invalid selectors.\nvar elements = _.attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\n\nif (_.isError(elements)) {\n  elements = [];\n}\n\nAttempts to invoke `func`, returning either the result or the caught error\nobject. Any additional arguments are provided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-attempt",
      "matches": {
        "lodash attempt": true
      },
      "source": "javascript/lodash"
    },
    "324cb705-249d-3299-a649-1dc56c116a97": {
      "content": "indent(width=${1:4}, indentfirst=${2:False})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "indent",
      "matches": {
        "indent": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "32537222-3cd8-38c8-8560-7c739a354f84": {
      "content": "bottom: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3260dc2f-b565-3796-812a-38c1714a2d20": {
      "content": "std.conv",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conv": true
      },
      "source": "vim-snippets/snippets"
    },
    "3269d282-83fc-342f-b60e-3980aeb0b7f6": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "try catch",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "326cc05c-5cd1-328a-8458-b0ad2ac62f00": {
      "content": "$.data('${1:selector expression}', '${2:key}'${3:, 'value'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dataa": true
      },
      "source": "snippets/javascript"
    },
    "327137fd-32e9-33b3-a376-117e1cf68b27": {
      "content": "cmake_minimum_required(VERSION ${1:2.8.2})\nproject(${2:ProjectName})\nfind_package(${3:library})\ninclude_directories(${$3_INCLUDE_DIRS})\nadd_subdirectory(${0:src})\nadd_executable($2)\ntarget_link_libraries($2 ${$3_LIBRARIES})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      },
      "source": "vim-snippets/snippets"
    },
    "327ebc5d-ac4b-39e2-b20c-f49fc61220a9": {
      "content": "-> { ${1} }.must_raise ${0:StandardError}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mra": true
      },
      "source": "vim-snippets/snippets"
    },
    "32872324-4d3b-3e57-8974-69d1326c3973": {
      "content": "macro_rules! ${1:name} {\n\t(${2:matcher}) => (\n\t\t$3\n\t)\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "macro_rules!",
      "matches": {
        "macro": true
      },
      "source": "vim-snippets/snippets"
    },
    "328eadab-806b-3ae5-97e4-1983bab40f13": {
      "content": "${1:#:set the_folder to }choose folder with prompt \"${2:#:Pick a folder:}\"\n${3:#:default location path to home folder}\n${4:#:with invisibles}\n${5:#:with multiple selections allowed}\n${6:#:with showing package contents}\n${0}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Folders": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "328fbddf-3ace-33cc-98a7-6c5d59f95be8": {
      "content": "width: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "329572b3-83dd-3f2c-8b54-cc8c69b5c6de": {
      "content": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "catch /pattern/",
      "matches": {
        "catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3296ef4a-6c38-3c49-993b-c207ca8944fe": {
      "content": "\\\\begin{enumerate}\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "3297234c-4dd8-3c4b-a91f-049d3fd27e8c": {
      "content": "call ${1:s:V}.load('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "call s:V.load('...')",
      "matches": {
        "vital_load": true
      },
      "source": "neosnippets/vim"
    },
    "32990319-b179-352d-a40c-fd23ddab4b59": {
      "content": "mixed.validateSync()",
      "doc": "mixed.validateSync(value: any, options?: object): any\n\nRuns validatations synchronously if possible and returns the resulting value,\nor throws a ValidationError. Accepts all the same options as validate.Synchronous validation only works if there are no configured async tests, e.g tests that return a Promise.\nFor instance this will work:let schema = number().test(\n  \"is-42\",\n  \"this isn't the number i want\",\n  value => value != 42\n);\n\nschema.validateSync(23); // throws ValidationError\nhowever this will not:let schema = number().test(\"is-42\", \"this isn't the number i want\", value =>\n  Promise.resolve(value != 42)\n);\n\nschema.validateSync(42); // throws Error\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-sync",
      "matches": {
        "yup mixed validatesync": true
      },
      "source": "javascript/yup"
    },
    "329d0c8b-053c-3a18-bfa6-2c0d38a244a8": {
      "content": "|> List.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ltap": true
      },
      "source": "vim-snippets/snippets"
    },
    "32b1ed07-07ee-3838-9992-678ca543e657": {
      "content": "expect(${1:target}).toBeFalsy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be falsy (js)",
      "matches": {
        "ef": true
      },
      "source": "vim-snippets/snippets"
    },
    "32b47d8d-8117-3d60-8558-70f7e28cf4c7": {
      "content": "background-size contain",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "32b5c04b-d96d-34b8-b955-14283a63fa48": {
      "content": "write(*,*) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "32c5cfdf-52b2-34fb-b524-66645feb37a7": {
      "content": "$('<${1}/>'${2:, {}})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "snippets/coffee"
    },
    "32c8380e-70e7-3a69-bfd8-71da19f73e36": {
      "content": "function ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      },
      "source": "snippets/javascript"
    },
    "32ca01a1-c425-30fb-b590-a8eb669b52f4": {
      "content": "try: ${1:pass}\ndefer: ${2:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trydefer": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "32d65891-da70-35a3-8d69-8ad9d39b9b04": {
      "content": "background-clip: no-clip",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "32d9c921-ac70-32ed-af73-24777dc002d3": {
      "content": "export default (req, res) => {\n  res.json(${1:object});\n};",
      "doc": "API routes provide built in middlewares which parse the incoming request. Those middlewares are: req.cookies, req.body, req.query.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-api",
      "matches": {
        "next api": true
      },
      "source": "javascript/next"
    },
    "32e9b330-4338-3480-bcfb-0f333d8cb526": {
      "content": "_.isObjectLike(${value})",
      "doc": "_.isObjectLike({});\n// => true\n\n_.isObjectLike([1, 2, 3]);\n// => true\n\n_.isObjectLike(_.noop);\n// => false\n\n_.isObjectLike(null);\n// => false\n\nChecks if `value` is object-like. A value is object-like if it's not `null`\nand has a `typeof` result of \"object\".",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isobjectlike",
      "matches": {
        "lodash isobjectlike": true
      },
      "source": "javascript/lodash"
    },
    "32eeed78-c46b-30b0-a436-56415ab3dc50": {
      "content": "<script src=\"${1}\"${2: defer}></script>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "js",
      "matches": {
        "scriptsrc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "32fc688b-4acb-3cf8-9621-3ec98c313c86": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${3:100} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "330f7e08-b811-3387-9dc1-e8f30dc82d10": {
      "content": "bgcolor=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcolor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "331969cb-d29e-3f89-b2a7-7104c4f85e55": {
      "content": "erlang:display(${0}),",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "331ee984-9d58-3da7-928b-cc828fce5079": {
      "content": "font-family: ${0:'Monotype Corsiva','Comic Sans MS'},cursive;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "333461d2-2101-3e75-8476-2f484948ca9f": {
      "content": "${1:obj}.ajaxComplete(function (${1:e}, xhr, settings) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxcomplete": true
      },
      "source": "snippets/javascript"
    },
    "333b2416-2251-3ed8-b349-76db9dc128b9": {
      "content": "quotes: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3349ba26-4362-3def-a2ec-b20d09a1d61d": {
      "content": "right: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "334bce56-c382-313d-ab1c-a53bf8f32df7": {
      "content": "${1:obj}.get(${2:element index})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "snippets/coffee"
    },
    "334dc40c-0d2e-318f-8dcc-d2cf2399ed5a": {
      "content": "case '${1:case}':\n\t${0:${VISUAL}}\n\tbreak;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "case 'xyz': ... break",
      "matches": {
        "case": true
      },
      "source": "snippets/javascript"
    },
    "33693f5d-3d90-35a6-9121-d9321b6381e8": {
      "content": "{% ssi ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      },
      "source": "vim-snippets/snippets"
    },
    "336bfadd-2143-3439-af9e-2815ca20332c": {
      "content": "&#x2303;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctrl": true
      },
      "source": "vim-snippets/snippets"
    },
    "336d0bb3-21a6-34d2-a373-e6878abf988d": {
      "content": "import React, { ReactElement } from 'react'\n\ninterface Props {\n\t\n}\n\nexport default function ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Functional Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactFunctionalComponent",
      "matches": {
        "tsrfc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "337426bd-8c7f-3e42-aecb-a156750b7bf7": {
      "content": "redir => ${1:#:var}\n\t${2::TARGET}\nredir END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "redir => var",
      "matches": {
        "redir": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "337d3bfb-7d97-3963-9d0c-8455c09cc9de": {
      "content": "wont_be_same_as ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbsa": true
      },
      "source": "vim-snippets/snippets"
    },
    "337dea95-e14b-3af9-b6a2-1ff6e723f878": {
      "content": "${1:obj}.on('${2:events}', '${3:selector expression}', function (${4:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      },
      "source": "snippets/javascript"
    },
    "3391a4bd-e280-3681-a485-741192da1f1e": {
      "content": "import Mixin from '@ember/object/mixin';\n\nexport default Mixin.create({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "App.MixinName = Ember.Model.extend({...});",
      "matches": {
        "emix": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3396a38b-0b78-34ca-96cc-9c29d3916fe0": {
      "content": "double precision :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "double": true
      },
      "source": "vim-snippets/snippets"
    },
    "339b6456-0aed-3a7c-92a6-40b74a998a3a": {
      "content": "PropTypes.symbol,",
      "doc": "Symbol prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeSymbol",
      "matches": {
        "ptsm": true
      },
      "source": "vscode-react/snippets"
    },
    "33a5ad7f-aa24-3c94-beff-7ae93700fe72": {
      "content": "@doc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docf": true
      },
      "source": "vim-snippets/snippets"
    },
    "33a62c98-1db1-3310-8726-d18755d34879": {
      "content": "export default class ${1:className} {\n\t$0\n};\n",
      "doc": "Export default class in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportclass",
      "matches": {
        "base export class": true
      },
      "source": "javascript/base"
    },
    "33a77af9-4a88-3cf4-af58-62af7445e9ce": {
      "content": "get ${1:#:NAME}(): ${2:#:TYPE} {\n  ${3:#:TARGET}\n}\nset $1(${4:value}: $2) {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "accessor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "33a7ffe3-0572-34c7-841b-f4c23f748a67": {
      "content": "if ${1} then\n\t${0}\nend if;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "33aa5a8c-0fd3-3671-a2c0-0b9477b7492f": {
      "content": "import { ${0:component} } from '@/composables/${0:component}.js'\n\nexport default {\n\tsetup () {\n\t\tconst { ${1:name} } = ${0:component}()\n\t\n\t\treturn {\n\t\t\t${1:name}\n\t\t}\n\t}\n}",
      "doc": "Use Composition API within Options API",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Use Composition API within Options API",
      "matches": {
        "v3useinoptions": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "33af1c7c-2be3-3dff-abb5-533112215d5f": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "snippets/coffee"
    },
    "33b6e18c-93d5-367f-8277-67cf74bb762f": {
      "content": "/**\n * ${1:description}\n *\n * @${0}\n */\n${2:protected} $${3:foo};\npublic function get${4:$3}()\n{\n\treturn $this->$3;\n}\npublic function set$4(${5:$4 }$${6:$3})\n{\n\t$this->$3 = $$6;\n\treturn $this;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ags": true
      },
      "source": "vim-snippets/snippets"
    },
    "33ca2a66-4a9c-3152-9705-f6915c8bd1e2": {
      "content": "around_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "marc": true
      },
      "source": "vim-snippets/snippets"
    },
    "33cabca1-678c-3a6c-999d-dc8371fcd990": {
      "content": "align-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "33cd9d2c-5197-376b-8edd-96989296954d": {
      "content": "<option>${0}</option>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optt": true
      },
      "source": "vim-snippets/snippets"
    },
    "33ce86ac-c3cb-3443-afae-53e9333cd768": {
      "content": "const ${1:context} = useContext(${2:contextValue})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useContext",
      "matches": {
        "useContext": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "33cf25f4-566a-38eb-86b9-5e6a75a82209": {
      "content": "around_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mars": true
      },
      "source": "vim-snippets/snippets"
    },
    "33d8e5d7-eef4-354b-8dbc-688ecc884c5c": {
      "content": "import renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from 'src/store'\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(\n\t\t<Provider store={store}>\n\t\t <${1:${TM_FILENAME_BASE}} {...defaultProps} />\n\t\t</Provider>,\n\t)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "Create test component",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_setupReactComponentTestWithRedux",
      "matches": {
        "_srtest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "33daf89f-73c3-3d06-ab7c-44d9a70d279f": {
      "content": "vertical-align: top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "33dd8e09-0d27-3dfe-a0d3-b15a86a1d01d": {
      "content": "this->assertArrayNotHasKey(${1:$key}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArrayNotHasKey($key, $array)",
      "matches": {
        "asnhk": true
      },
      "source": "vim-snippets/snippets"
    },
    "33ea387d-cc56-39fb-8915-e55c4562e206": {
      "content": "<%= ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "ruby_print": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "33f53b0f-c90b-3950-9736-cfc30882de01": {
      "content": "for ${1:item} in ${2:collection} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "33f7ab6a-57f2-3d53-9e8f-32c5d97c2fdf": {
      "content": "const {\n  ${1:queryName}: { childImageSharp: {fluid: ${2:imageFluid}}}\n} = useStaticQuery(graphql`\n  query {\n    ${1:queryName}: file(relativePath: { eq: \"${3:imagePath.png}\" }) {\n      childImageSharp {\n        fluid(maxWidth: ${4:300}) {\n          ...${5|GatsbyImageSharpFluid,GatsbyImageSharpFluid_noBase64,GatsbyImageSharpFluid_tracedSVG,GatsbyImageSharpFluid_withWebp,GatsbyImageSharpFluid_withWebp_noBase64,GatsbyImageSharpFluid_withWebp_tracedSVG|}\n        }\n      }\n    }\n  }\n`)",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-usestaticquery-fluid",
      "matches": {
        "gatsby-image usestaticquery fluid": true
      },
      "source": "javascript/gatsby-image"
    },
    "33fa0182-ec80-37db-b35c-228e5cb3b15c": {
      "content": "<%= content_tag '${1:DIV}', ${2:content}${0:,options} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "33fa7eea-0414-3556-b3db-78b8af70430c": {
      "content": "hex(${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hexadecimal": true
      },
      "source": "vim-snippets/snippets"
    },
    "340767e1-26f9-399f-a468-cf511503d6fa": {
      "content": "println(${1})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "println()",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "34087671-3800-38fa-8cc4-758204347bd0": {
      "content": "${1:public} static ${2:void} ${3:MyMethod}(${4})\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Static method",
      "matches": {
        "mths": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3408ca5b-8c0f-32b0-9658-da32695ae490": {
      "content": "${1:obj}.bind('${2:event name}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      },
      "source": "snippets/javascript"
    },
    "340c3925-ddfc-37ff-8290-9377f19fd84b": {
      "content": "page-break-before: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "34132d16-77c1-31bf-ae12-a640dac675cb": {
      "content": "Run Keyword And Return    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return",
      "matches": {
        "rkar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "341648c4-c99e-3548-a48b-8f92624d5452": {
      "content": "text-decoration: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true,
        "text-decoration": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3420f63c-e8e6-3b75-8468-3791b6f6c7be": {
      "content": "margin-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      },
      "source": "vim-snippets/snippets"
    },
    "342110a4-78c4-3a5c-adab-c6def741e6d4": {
      "content": "reversible do |dir|\n\tdir.up do\n\t\t${0}\n\tend\n\tdir.down do\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "reversible do |dir| ... dir.up .. dir.down .. end",
      "matches": {
        "mrev": true
      },
      "source": "vim-snippets/snippets"
    },
    "3424fc70-1e42-30ed-a944-1a22f1b82e38": {
      "content": "if err != nil {\n\tt.Fatal(err)\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error test fatal ",
      "matches": {
        "errt": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "342d1a53-47ce-34fd-81d9-0bd9cebb4737": {
      "content": "<nuxt name=\"$1\">$2</nuxt>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-namedview",
      "matches": {
        "nuxt namedview": true
      },
      "source": "javascript/nuxt"
    },
    "3432aa1e-e970-348b-9cbf-86a56867f8e0": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% elif %}\n\t$3\n{% else %}\n\t$4\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if/elif/else",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "343b9539-bf29-3849-97ad-6a445b79ec85": {
      "content": "grid-auto-flow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      },
      "source": "vim-snippets/snippets"
    },
    "343cb160-c1d9-3dac-9767-fc57a6b519b2": {
      "content": "true",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "true",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "343ef9f2-631c-3505-9de2-66ffa15374ac": {
      "content": "<#\n.SYNOPSIS\n\t${1:Short Description}\n.DESCRIPTION\n\t${2:Full Description}\n.PARAMETER ${3:Param1}\n\t${4: $3 usage}\n.EXAMPLE\n\t${5:Example}\n.NOTES\n\t${6:notes}\n.LINK\n\t${7:online help}\n#>",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "help": true
      },
      "source": "vim-snippets/snippets"
    },
    "344b797a-febe-32cb-8da4-783dfef4d50c": {
      "content": "default:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "default: ...",
      "matches": {
        "default": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "345e0881-ea75-3265-bff9-799fb709f0d7": {
      "content": "$.proxy(${1:function}, ${2:this})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      },
      "source": "snippets/coffee"
    },
    "34623a14-5597-34c0-8fce-9639c06a0ac6": {
      "content": "echo CHtml::resetButton('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrsb": true
      },
      "source": "vim-snippets/snippets"
    },
    "34643f5e-9fb6-35c7-a3f9-b25239de8f7c": {
      "content": "return new Promise((resolve, reject) => {\n\t${0}\n});",
      "doc": "return Promise (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return-promise-es6-",
      "matches": {
        "base return promise": true
      },
      "source": "javascript/base"
    },
    "34656f77-3af0-30d4-9292-1916afa15320": {
      "content": "@if(${1:condition})\n   ${2}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "if ... endif",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3465905c-9b92-37b6-a6e1-4ca645aa7cad": {
      "content": "create unique index ${1:name} on ${2:table}(${0:column});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uind": true
      },
      "source": "vim-snippets/snippets"
    },
    "346b526b-ddc0-3bcd-b0bb-c75b3e8deb9c": {
      "content": "grid-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      },
      "source": "vim-snippets/snippets"
    },
    "346e3250-a4d6-3791-992b-ff66657dea38": {
      "content": "props: {\n\t${1:propName}: {\n\t\ttype: ${2:Number},\n\t\tdefault: ${0}\n\t},\n},",
      "doc": "Vue Props with Default",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Props with Default",
      "matches": {
        "vprops": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "347fa78e-86a7-3e8a-8c25-1b16320831dc": {
      "content": "${1:obj}.one '${2:event name}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "one": true
      },
      "source": "snippets/coffee"
    },
    "3486c38d-a709-3f3a-af07-7ecb6e3b68af": {
      "content": "t.text :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tct": true
      },
      "source": "vim-snippets/snippets"
    },
    "3487e03f-5f16-3cde-a779-c4f524065701": {
      "content": "number.moreThan()",
      "doc": "number.moreThan(min: number | Ref, message?: string | function): Schema\n\nValue must be strictly greater than min. The ${more} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-more-than",
      "matches": {
        "yup number morethan": true
      },
      "source": "javascript/yup"
    },
    "3495b8d0-5d00-334b-a0ad-fd0720120aef": {
      "content": "analogRead(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ar": true
      },
      "source": "vim-snippets/snippets"
    },
    "34a0f22f-8d75-3155-8053-ab8556c16814": {
      "content": "{% for ${1:item} in ${2:sequence} %}\n\t$3\n{% else %}\n\t$4\n{% endfor %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "for/else",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "34aedc5c-46f3-3f08-bcad-513ad726d645": {
      "content": "opacity: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      },
      "source": "vim-snippets/snippets"
    },
    "34b5651d-8c53-3fdb-a608-f08af7a20a16": {
      "content": "import React, { useState } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, {useState}",
      "matches": {
        "imrs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "34b5b719-55f6-3859-b7dd-5a497a476b96": {
      "content": "${1:div}(:style=\"[${2:styleObjectA}, ${3:styleObjectB]}\")",
      "doc": "vue inline style binding, objects",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Style Binding Object",
      "matches": {
        "vstyle-obj": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "34b5c430-7e18-33ea-adba-3753e0c992ca": {
      "content": "background-clip: padding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "34bae983-6d25-3cc1-90e8-19148674cc58": {
      "content": "<optgroup>\n\t<option value=\"${1}\">${2:$1}</option>\n\topt+${0}\n</optgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optgroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "34c1e82a-08f2-336b-a2d0-2638d4747d59": {
      "content": "${1:moduleName} = angular.module '$1', [${2:moduleDeps}]\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngma": true
      },
      "source": "snippets/coffee"
    },
    "34c9157e-1dca-35fb-bdea-af43b3e7ccf6": {
      "content": "nextFrame();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "34c96592-9b10-3e0b-bbd5-1903201d9d94": {
      "content": "with(${1:exp}) {\n\t${2}\n} ${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "34d40852-b0db-3913-947c-b98833244b10": {
      "content": " labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "labels_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "34db0d08-a704-39e2-92d4-b3f57ab0cdf1": {
      "content": "interface ${1} extends ${2} {\n\t${3}: ${4:any};\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface extends",
      "matches": {
        "intx": true
      },
      "source": "vim-snippets/snippets"
    },
    "34de20ce-05b6-37da-9a1b-6740528154d8": {
      "content": "import { store } from './store/index';",
      "doc": "import vuex store into main.js",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vue Import Vuex Store",
      "matches": {
        "vstore-import": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "34dffb40-0e44-39b2-9afe-df04b00512f7": {
      "content": "split(${1:hay stack}, \"${2:patten}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      },
      "source": "vim-snippets/snippets"
    },
    "34e06ac7-9361-3e91-a9a2-ba9397ba82c5": {
      "content": "| escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "escape": true
      },
      "source": "vim-snippets/snippets"
    },
    "34ef38c3-e91c-3897-82b6-cd0063df51db": {
      "content": "| reverse",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reverse": true
      },
      "source": "vim-snippets/snippets"
    },
    "34f839af-4e13-341c-a63d-1f009bb21906": {
      "content": "@synthesize ${1:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Synthesize",
      "matches": {
        "syn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "34fd5ec8-c482-3452-ba94-3f3a5e74db64": {
      "content": "do\n  ${1:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "do...end",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "34fdb5cc-746f-3565-ab38-40f611e96660": {
      "content": "try\n\t${1}\ncatch ${2:err}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "try ... catch",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "3504af8a-5ab4-37bd-9997-8fb64cbbf6ae": {
      "content": "!${1:url}(${2:title}):${0:link}!",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "vim-snippets/snippets"
    },
    "3505323c-777c-3663-a1be-8a68e11c3223": {
      "content": "{% comment %}\n\t${0}\n{% endcomment %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "vim-snippets/snippets"
    },
    "35073c19-6e9c-39a0-9b5f-cae5de94762f": {
      "content": "Returns:  ${1:return value/s}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Returns (Ret)",
      "matches": {
        "Ret": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "350bda8f-f5c0-3ac0-b2c3-d2f170b94a5d": {
      "content": "public int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3527c280-950b-32dc-b3a5-5f2a84aa1e66": {
      "content": "$this->db->update(${1:table}, ${2:data}, ${3:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_update": true
      },
      "source": "vim-snippets/snippets"
    },
    "35313c47-d73f-3e35-8726-c915bce7dfc9": {
      "content": "${1:obj}.bind('${2:event name}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      },
      "source": "snippets/coffee"
    },
    "3535649b-43aa-3fc8-9480-8ead4a7e2f6d": {
      "content": "render nothing: ${1:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (nothing) (rn)",
      "matches": {
        "rn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "35378bb0-3dc6-3595-8c83-2246c6deb7e1": {
      "content": "$this->db->where(\"${1:key}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-where": true
      },
      "source": "vim-snippets/snippets"
    },
    "353e94ce-10a5-3ea5-ad77-837db8c60c84": {
      "content": "it('should $1', async () => {\n\t$0\n})\n",
      "doc": "Testing asynchronous `it` block",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "itAsyncBlock",
      "matches": {
        "tita": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3540244a-0cf5-38cb-9150-3dcf1fea6a02": {
      "content": "<xsl:choose>\n\t<xsl:when test=\"${1:value}\">\n\t\t${2}\n\t</xsl:when>\n</xsl:choose>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "choose": true
      },
      "source": "vim-snippets/snippets"
    },
    "3543c6ff-3e70-3681-a7e9-686701333593": {
      "content": "func Example${1:Method}() {\n\t${0}\n\t// Output:\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "example": true
      },
      "source": "gosnippets/snippets"
    },
    "3548562d-f94c-37c3-a39b-28181ff8ef6e": {
      "content": "$this->${1:method}()->shouldMatch(${2:'/wizard/i'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldMatch('/wizard/i')",
      "matches": {
        "smatch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "35498f4c-22b7-30bc-906a-869bdf003b3a": {
      "content": "loess(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, span = ${6:span},\ndegree = ${7:degree}, na.action = {8:na.action})",
      "doc": "Local polynomial regression",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "loess",
      "matches": {
        "loess": true
      },
      "source": "vscode-R/snippets"
    },
    "354ccb98-bcee-3d35-87c8-83de4c25dd92": {
      "content": "text-outline: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      },
      "source": "vim-snippets/snippets"
    },
    "3558804e-a11d-36bf-89fe-fa7d2e9b4465": {
      "content": "$Params = @{\n\t${1:Param1} = '${2:Value1}'\n\t${3:Param2} = '${4:Value2}'\n}\n${5:CommandName} @Params",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splatting": true
      },
      "source": "vim-snippets/snippets"
    },
    "355a6751-1f5d-31e7-925c-46ab79ad6043": {
      "content": "logger.info { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.info",
      "matches": {
        "logi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "356100b9-d547-3947-b7f0-a1390276067f": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipeline": true
      },
      "source": "vim-snippets/snippets"
    },
    "3565fcc5-fd7f-3d95-a8bf-cc58ce1274b5": {
      "content": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: '${1:prefix-app}',\n\ttemplate: `\n\t\t<router-outlet></router-outlet>\n\t\t`\n})\nexport class ${2:App}Component { }\n$0",
      "doc": "Angular App root component",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-root-component",
      "matches": {
        "a-component-root": true,
        "angular root component": true
      },
      "source": "javascript/angular"
    },
    "3566a4ff-fa11-3130-9bee-9c3d39c29589": {
      "content": "text-emphasis: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3566b5bf-ba28-3eac-a223-796ce57a05ab": {
      "content": "&#x2193;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "down": true
      },
      "source": "vim-snippets/snippets"
    },
    "356c2888-c8e4-35e3-be72-e73a89d343ac": {
      "content": "\\begin{vmatrix}\n\t${1:TARGET}\n\\end{vmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{vmatrix} \\vmatrix": true,
        "vmatrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "356e88a1-72b4-361b-96b0-427f1d7583ba": {
      "content": "it { should have_and_belong_to_many :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishbtm": true
      },
      "source": "vim-snippets/snippets"
    },
    "356f37e6-9457-3614-91ae-a08f8e343c47": {
      "content": "class ${1:name} extends ${2:base} {\n\tconstructor(${3:arguments}) {\n\t\tsuper(${3:arguments});\n\t\t${0}\n\t}\n}",
      "doc": "child class (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "child-class-es6-",
      "matches": {
        "base child class": true
      },
      "source": "javascript/base"
    },
    "3570eca5-1273-3d9c-99a3-041659683731": {
      "content": "Import library    Dialogs\nPause execution",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Pause test execution",
      "matches": {
        "pause": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "35755bcb-78aa-386c-a989-8b386b73a724": {
      "content": "${1:ModelName}::model()->deleteAll(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydela": true
      },
      "source": "vim-snippets/snippets"
    },
    "3579ee23-c01a-3f10-8ce0-38789c0f2c7a": {
      "content": "<If ${1:condition}>\n        ${2}\n</If>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "358fd19c-1eae-343c-a734-7a9174670bba": {
      "content": "SynthDef(\\\\${1:synthName}, {${2: |${3:x}|}\n\t$0\n}).add;",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdef": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3596c97c-91f1-3b1f-af36-71dfcbc657c4": {
      "content": "console.count(${1:label});",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolecount",
      "matches": {
        "base console count": true
      },
      "source": "javascript/base"
    },
    "35975ccd-143b-31bd-8cb8-cb2ce0dba177": {
      "content": "text-justify: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      },
      "source": "vim-snippets/snippets"
    },
    "3598862a-7543-3144-aefb-92eace398280": {
      "content": "compile = (tElement, tAttrs, transclude) ->\n\t(scope, element, attrs) ->\n\t\t${1}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdcf": true
      },
      "source": "snippets/coffee"
    },
    "359d832d-6c95-3d8d-9eda-cf1cad72bf1c": {
      "content": "${1:obj}.mouseleave (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mleave": true
      },
      "source": "snippets/coffee"
    },
    "35a5362f-e249-378c-9c92-b0908d072675": {
      "content": "$.ajaxSetup({\n\turl: \"${1:mydomain.com/url}\",\n\ttype: \"${2:POST}\",\n\tdataType: \"${3:xml/html/script/json}\",\n\tdata: $.param( $(\"${4:Element or Expression}\") ),\n\tcomplete: function (jqXHR, textStatus) {\n\t\t${5:// callback}\n\t},\n\tsuccess: function (data, textStatus, jqXHR) {\n\t\t${6:// success callback}\n\t},\n\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t${0:// error callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsetup": true
      },
      "source": "snippets/javascript"
    },
    "35adcb82-c05c-397d-856d-975c893846b6": {
      "content": "<rp>${0}</rp>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      },
      "source": "vim-snippets/snippets"
    },
    "35b9dd24-dfde-32ac-8500-ca306f986b8a": {
      "content": "appear-class=\"$1\"$0",
      "doc": "appear-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-class",
      "matches": {
        "appearclass": true,
        "vue appear-class": true
      },
      "source": "javascript/vue"
    },
    "35ba154d-f05c-3461-ab22-3448ba33776d": {
      "content": "outline-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true,
        "outline-style": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "35bb02cd-adab-3ad7-9fc8-381b2de17b74": {
      "content": "<${1:}>\n\t${2}\n</$1>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "35bc5b4d-afa9-3b41-b4c5-615d3f761e7b": {
      "content": "border-top-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      },
      "source": "vim-snippets/snippets"
    },
    "35bf57d5-75d7-37d1-84bf-cfb0d69b6c3c": {
      "content": "(use gauche.test)\n(test-start \"${1}.scm\")\n(load \"$1.scm\")\n(test* \"${2}\" ${3:expected} ${4:actual})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "(use gauche.test)(test-start ...",
      "matches": {
        "gauche-testsuite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "35c32ab9-dd19-3e21-a699-199355494d9c": {
      "content": "module ${1:(* Name *)} : sig\n\t${2:(* SIGNATURE *)}\nend = struct\n\t${3:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "Module with anonymous signature",
      "matches": {
        "module": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "35c7d3fb-5f15-3b10-bb15-dd9b4174dff7": {
      "content": "let\n\t${1} = ${2}\nin\n\t${3}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "35d30cfa-340b-3d3a-8b24-351a90cf884d": {
      "content": "import { NavLink } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router - NavLink",
      "matches": {
        "imbrnl": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "35d731aa-ea8d-3c97-a6d6-9f641e2c382e": {
      "content": "aaply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      },
      "source": "vim-snippets/snippets"
    },
    "35dc61ea-e5eb-3a88-8602-99a564435c85": {
      "content": "text-align left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "35ddf80f-90c4-3db1-94db-4f0a5459660f": {
      "content": "var $1 = new sap.m.Label({\n\t\t\tdesign : $2,\n\t\t\ttext : $3,\n\t\t\tvisible : $4,\n\t\t\ttextAlign : $5,\n\t\t\ttextDirection : $6,\n\t\t\twidth : $7,\n\t\t\trequired : $7\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmlabel": true
      },
      "source": "vim-snippets/snippets"
    },
    "35f6b534-1393-3bb7-bfee-210bac5e4745": {
      "content": "useEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t}\n}, [${3:input}])",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "useEffect": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "36037483-d125-3673-aab2-aef3854f0be0": {
      "content": "const dispatch = createEventDispatcher();",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch",
      "matches": {
        "svdp": true,
        "svelte dispatch": true
      },
      "source": "javascript/svelte"
    },
    "3605ebeb-6ec2-3980-9f92-0c4e4bad20df": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Y,Z index (3D)",
      "matches": {
        "ixyz": true
      },
      "source": "vim-snippets/snippets"
    },
    "360bb92e-36bf-3765-8808-ec6d725444a1": {
      "content": "return ${1:/*value to return*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "return (ret)",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "360f5e5c-8212-3a9b-8f26-fa2d2b938c42": {
      "content": "real, dimension(${1}), intent(in)  :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension intent(in)",
      "matches": {
        "redi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "360ff47e-bbe3-3f40-8fd5-51e60ce0baa1": {
      "content": "_.at(${object}, ${paths})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\n_.at(object, ['a[0].b.c', 'a[1]']);\n// => [3, 4]\n\nCreates an array of values corresponding to `paths` of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-at",
      "matches": {
        "lodash at": true
      },
      "source": "javascript/lodash"
    },
    "3615250c-b439-32ee-ba16-3e296d22441d": {
      "content": "this.setState({$0})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-set-state-object",
      "matches": {
        "react componentsetstateobject": true,
        "sst": true
      },
      "source": "javascript/react"
    },
    "3617bdfd-505c-3bb0-a5fa-9ce114e338ea": {
      "content": "\\\\int_{{$1}}^{{$2}} {$3} \\\\: d{$4} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "integral",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "361aecf1-66ab-326e-8d17-31c55e0f885f": {
      "content": "-webkit-border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "361c9fc8-05ce-3b02-a706-cd67c7827d6d": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      },
      "source": "vim-snippets/snippets"
    },
    "361e9c31-2fe9-330f-a0f6-be7be8455846": {
      "content": "require [\"${1:#dependencies1}\"], (${2:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqjs": true
      },
      "source": "snippets/coffee"
    },
    "361f0573-0f7c-3b01-8f1b-8e6bc78ac4e5": {
      "content": "-include_lib(\"${1:lib}/include/${1}.hrl\").${2}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "incl": true
      },
      "source": "vim-snippets/snippets"
    },
    "3633d653-10b8-3961-8140-695382d19790": {
      "content": "table-layout: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3634969e-78c6-3af9-815b-d77b2b577577": {
      "content": "border-bottom-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      },
      "source": "vim-snippets/snippets"
    },
    "363a9269-5800-3c9f-8309-54203a45649d": {
      "content": "max-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      },
      "source": "vim-snippets/snippets"
    },
    "3642db8e-09d3-3a85-b00f-352f6aa17b5d": {
      "content": "- binding.pry",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      },
      "source": "vim-snippets/snippets"
    },
    "3646468c-6f1e-36e3-982a-fecdf17ebd4e": {
      "content": "${1:deferred}.rejectWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drejw": true
      },
      "source": "snippets/javascript"
    },
    "364f043c-dde1-36a6-b693-090f395a52cc": {
      "content": "lapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "3650ca37-a167-3f74-ae78-1a892ba246f3": {
      "content": "[${1:text}](http://${2:link})$0",
      "doc": "Insert link",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert link",
      "matches": {
        "link": true
      },
      "source": "vscode-R/snippets"
    },
    "3652d9a8-411b-3769-92f1-d3a526a566fe": {
      "content": "expect(${1:target}).toBeDefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (js)",
      "matches": {
        "etbd": true
      },
      "source": "vim-snippets/snippets"
    },
    "366480cd-425f-324e-9e67-3478c219a0ea": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      },
      "source": "vscode-react/snippets"
    },
    "36664653-8797-3abf-9eda-1abdfeb2fe32": {
      "content": "\\${0}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0}",
      "matches": {
        "0": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3666a1b6-3149-359a-acf9-869161291ad1": {
      "content": "include Enumerable\ndef each(&block)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "366a9f1c-dd96-304d-9246-4a8d223a4aab": {
      "content": "l_${1}\t\t${0:number};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      },
      "source": "vim-snippets/snippets"
    },
    "366b66a6-f6d4-38f6-8fe6-e14973e0281f": {
      "content": "<del>${0}</del>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      },
      "source": "vim-snippets/snippets"
    },
    "366bbc01-7c8c-36a8-a7ab-c8bbed514be2": {
      "content": "/*! TODO: ${1:Todo description here} */",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      },
      "source": "vim-snippets/snippets"
    },
    "366e64e2-e967-35c8-82e4-f6dfabebcb7c": {
      "content": "ElseIf ${1:condition} Then\n\t${0:; True code}",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "3672f777-0f91-3731-bd44-08d05f120fe5": {
      "content": "{% gist ${1:gist_id} ${0:filename} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gist-full": true
      },
      "source": "vim-snippets/snippets"
    },
    "3673c233-abdf-37a3-972b-74ba1f84dc40": {
      "content": "task body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task body",
      "matches": {
        "task_body": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3675750b-6a1f-3bda-af1e-abfe10df14f5": {
      "content": "def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "367fb6f1-e847-36e0-ae79-71337dce33cf": {
      "content": "export default function ${1:${TM_FILENAME_BASE}}(${2:params}) {\n\t$0\n};\n",
      "doc": "Export default function in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportdefaultfunction",
      "matches": {
        "base export default function": true
      },
      "source": "javascript/base"
    },
    "3683679f-be8e-36f3-852c-5af594b42bd4": {
      "content": "border-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      },
      "source": "vim-snippets/snippets"
    },
    "3687e2e6-9ecb-3d09-a629-b9a9428ec08d": {
      "content": "font-emphasize-style disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "36941a52-25b9-385a-a0de-f9aa6e0757ec": {
      "content": "formControlName=\"${1:control}\"",
      "doc": "Angular formControlName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformcontrolname",
      "matches": {
        "a-formcontrolname": true,
        "angular ng form control name": true
      },
      "source": "javascript/angular"
    },
    "3696057e-43cb-3143-81b2-ab93ed9b7557": {
      "content": "scan(${1:/pattern/}) do |${2:match}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scad": true
      },
      "source": "vim-snippets/snippets"
    },
    "3698a14b-11c6-34cd-afc1-1aeeb8c82cc6": {
      "content": "${1:FIELDNAME} = forms.URLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "URLField",
      "matches": {
        "furl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3699cc89-fffd-305c-81d2-13e372ad8553": {
      "content": "<!% ${1:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "<!%",
      "matches": {
        "<!%": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "36a52f27-d59c-34a8-97f6-6d7d4e8ea7e3": {
      "content": "echo CHtml::ajaxLink('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajl": true
      },
      "source": "vim-snippets/snippets"
    },
    "36ad3a58-e77a-3dda-b4ca-aed443bf580a": {
      "content": "const ${1:results} = await ${2:client}.request(\n  ${3:query},\n  ${4:variables}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client-request-variables",
      "matches": {
        "graphql-request client request variables": true
      },
      "source": "javascript/graphql-request"
    },
    "36af2486-41e8-362a-8547-5f7f2e9ae6e8": {
      "content": "list-style-position: outside;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "36afaec0-aac9-37ee-a665-11fd0f323544": {
      "content": "t.string :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.string (tcs)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "36b20502-6ff0-319b-97b2-f723dcc14fd7": {
      "content": "${1}:\ndeclare\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare named block",
      "matches": {
        "decn": true
      },
      "source": "vim-snippets/snippets"
    },
    "36b6cd7e-fcef-3f53-a528-c098e584e9e2": {
      "content": "<hr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "36bc1892-58bc-3e7b-90ee-2e1890d02d11": {
      "content": "background-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backcolor": true,
        "bc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "36bc51ce-d540-364c-bc42-4286cb69929b": {
      "content": "$.isFunction(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfunc": true
      },
      "source": "snippets/coffee"
    },
    "36ccb292-992a-34aa-919d-4d8d8cd94a51": {
      "content": "page-break-inside: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "36d534c3-e4ef-31d5-813e-8e30ff6483c9": {
      "content": "white-space ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      },
      "source": "vim-snippets/snippets"
    },
    "36d95433-1a65-38d3-82a1-23705a60f813": {
      "content": "\\begin{alertblock}{${1:#:title}}\n\t${2:TARGET}\n\\end{alertblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{alertblock}": true,
        "alertblock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "36d982b1-b0d5-3bac-aa17-93c7db31087c": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\nclass ${1:ClassName} extends CI_Controller\n{\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${2:// code...}\n\t}\n\tfunction ${3:index}()\n\t{\n\t\t${4:// code...}\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_controller": true
      },
      "source": "vim-snippets/snippets"
    },
    "36e02966-6e12-30fc-a600-1337ed365107": {
      "content": "text-emphasis none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "36f18f77-6da1-3fa7-8368-adafa39008ce": {
      "content": "project(${0:Name})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proj": true
      },
      "source": "vim-snippets/snippets"
    },
    "36f2fbd0-1c23-3dcf-b42b-65025cd76a60": {
      "content": "import { StyleSheet, Text, View } from 'react-native'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactNativeFunctionalExportComponentWithStyles",
      "matches": {
        "_rnfes": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "36f59233-79e3-39ca-8555-2b1b257c779b": {
      "content": "min-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min-width": true,
        "miw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "36fce94e-f23a-36d5-a144-09f36d94cdb6": {
      "content": "white-space-collapse normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3706cd44-8ba6-3625-80bd-369c4dcbee23": {
      "content": "#endinitclip",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "370a952d-ef19-3413-91f0-f461594dd8d3": {
      "content": "border-top-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "370ebf5a-9c1b-306e-995e-d7dbf9aaa679": {
      "content": "import Head from 'next/head'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-head",
      "matches": {
        "next import head": true
      },
      "source": "javascript/next"
    },
    "37177eda-179a-3d99-a756-a40b6107801b": {
      "content": "protected ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create protected field",
      "matches": {
        "tprofi": true
      },
      "source": "vim-snippets/snippets"
    },
    "371b81ec-6409-3e0e-800f-da2a84bfb6ec": {
      "content": "post {\n\tregression {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "371b9d47-dfb8-30ce-8346-e1991e195b86": {
      "content": "java.net",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.n": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "371da224-03e4-3b47-9688-a828ef334ee8": {
      "content": "| divided_by: ${1:2}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divided_by": true
      },
      "source": "vim-snippets/snippets"
    },
    "3724fade-523d-3cc1-ab0b-1dd8409f0554": {
      "content": "${1:deferred}.state()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dstate": true
      },
      "source": "snippets/javascript"
    },
    "372bf6cd-71c6-33c1-9929-6b65523e68ed": {
      "content": "lapply(${1:X}, ${2:FUN}, ${3:...})",
      "doc": "Lapply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lap",
      "matches": {
        "lapply": true
      },
      "source": "vscode-R/snippets"
    },
    "372c563c-eaf0-30af-b3d4-13f86ae0f4d9": {
      "content": "right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      },
      "source": "vim-snippets/snippets"
    },
    "372f0300-9997-32b8-bd8d-8da4c7f2174c": {
      "content": "try do\n\t${1:${VISUAL}}\nrescue\n\t${2} -> ${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "try .. rescue .. end",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "3737e408-cd11-316f-9de0-963b9fb46ec1": {
      "content": "Select (${1:condition})\nCase ${2:case1}:\n\t${3:; Case 1 code}\nCase Else:\n\t${0:; Else code}\nEndSelect",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "vim-snippets/snippets"
    },
    "373b69e7-ce77-3f68-8264-c93a8dd6d3d5": {
      "content": "<bdo dir=\"ltr\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "37419475-df67-3d82-a66d-2326625290ab": {
      "content": "import React from 'react'\nimport { View, Text } from 'react-native'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeFunctionalExportComponent",
      "matches": {
        "rnfe": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3748967e-7f90-3ded-998a-e371932ad58b": {
      "content": "def edit\n\t@${1:model_class_name} = ${0:ModelClassName}.find(params[:id])\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defedit": true
      },
      "source": "vim-snippets/snippets"
    },
    "374c7e73-8e53-3cfc-804b-ec6cb2df46a2": {
      "content": "date.max()",
      "doc": "date.max(limit: Date | string | Ref, message?: string | function): Schema\n\nSet the maximum date allowed, When a string is provided it will attempt to cast to a date first\nand use the result as the limit.arrayDefine an array schema. Arrays can be typed or not, When specifying the element type, cast and isValid\nwill apply to the elements as well. Options passed into isValid are passed also passed to child schemas.\nSupports all the same methods as mixed.let schema = yup.array().of(yup.number().min(2));\n\nawait schema.isValid([2, 3]); // => true\nawait schema.isValid([1, -24]); // => false\n\nschema.cast([\"2\", \"3\"]); // => [2, 3]\nYou can also pass a subtype schema to the array constructor as a convenience.array().of(yup.number());\n// or\narray(yup.number());\nThe default cast behavior for array is: JSON.parseFailed casts return: null;",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "date-max",
      "matches": {
        "yup date max": true
      },
      "source": "javascript/yup"
    },
    "375b7a82-ce7f-3dea-8964-b7907456711d": {
      "content": "const ${1:x} = useSpring(${2:0}, { ${3:stiffness}: ${4:300} })",
      "doc": "useSpring()\nCreates a MotionValue that, when set, will use a spring animation to animate to its new state.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-spring",
      "matches": {
        "framer-motion use-spring": true,
        "use-spring": true
      },
      "source": "javascript/framer-motion"
    },
    "376066d1-4b53-3b1a-b836-6a4b7bcd6a1f": {
      "content": "validates_associated :${1:attribute}${2:, on: :${3:create}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated if (vaif)",
      "matches": {
        "vaif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "376490fe-8143-31b4-847c-9885328d22d2": {
      "content": "once('${1:event_name}', function(${2:stream}) {\n  ${3}\n});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "once": true
      },
      "source": "snippets/javascript"
    },
    "37732e2b-6ec9-3921-b5f8-624a9a073fae": {
      "content": "@incollection{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    booktitle = {${4}},\n    year = {${5}},\n    memo = {editor, pages, organization, publisher, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@incollection": true,
        "incollection": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3778cc30-6a37-3183-bf7f-1d47449f0ec5": {
      "content": "${1:obj}.scroll (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scroll": true
      },
      "source": "snippets/coffee"
    },
    "377f404e-346c-3c64-85fe-c2087e8efd08": {
      "content": "(${1}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "() => {}",
      "matches": {
        "afb": true
      },
      "source": "snippets/javascript"
    },
    "3789e71f-dd38-3c3d-9e65-033fd7bb0936": {
      "content": "# Package resource\npackage ${1:\"package_name\"} do # Name of the package to install\n\t${2:#}version ${3:nil} # The version of the package to install/upgrade\n\t${4:#}response_file ${5:nil} # An optional response file - used to pre-seed packages (note: the file is fetched by Remote File)\n\t${6:#}source ${7} # Used to provide an optional package source for providers that use a local file (rubygems, dpkg and rpm)\n\t${8:#}options ${9:nil} # Add additional options to the underlying package command\n\t${10:#}gem_binary ${11:gem} # A gem_package attribut to specify a gem binary. Useful for installing ruby 1.9 gems while running chef in ruby 1.8\n\t${12:#}${13:action :install} # Install a package - if version is provided, install that specific version (Default)\n\t${14:#}${15:action :upgrade} # Upgrade a package - if version is provided, upgrade to that specific version\n\t${16:#}${17:action :remove} # Remove a package\n\t${18:#}${0:action :purge} # Purge a package (this usually entails removing configuration files as well as the package itself)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      },
      "source": "vim-snippets/snippets"
    },
    "378b9300-3d5f-39b0-a857-3e2980251dc5": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "378d2cc9-ab4c-328c-9ac8-097cb48d6671": {
      "content": "mixed.clone()",
      "doc": "mixed.clone(): Schema\n\nCreates a deep copy of the schema. Clone is used internally to return a new schema with every schema state change.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-clone",
      "matches": {
        "yup mixed clone": true
      },
      "source": "javascript/yup"
    },
    "379ce49e-a32c-3fc0-b650-22d8822202d0": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}', props<{${4:key}: ${5:type}}>());",
      "doc": "Creates an NgRx Action with Props",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Action w/ Props",
      "matches": {
        "a-ngrx-create-action-props": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "379eac0b-0f0e-35de-96ce-72b5572de69d": {
      "content": "public:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "public (pub)",
      "matches": {
        "pub": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "37a21f5d-c29c-3f20-ab4a-7e5af0432a24": {
      "content": "def ${1:#:name}(${2}):\n\t\"\"\"${3:#:function documentation}\"\"\"\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def function(...): \"\"\"...\"\"\"",
      "matches": {
        "defd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "37a66868-6321-36d3-8447-ac2968064352": {
      "content": "function get ${1:name} {\n\treturn ${2}\n}\nfunction set $1 (newValue) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get_set": true
      },
      "source": "vim-snippets/snippets"
    },
    "37a8beac-2864-31b4-a593-69a75afc9feb": {
      "content": "// multiply the current matrix by a translation matrix\ngl.glTranslatef(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl translate f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "37ab3fcb-b7e3-37ec-a6ce-996aee4c5ec7": {
      "content": "<Link href={{ pathname: '${1:/path}', query: { ${2:paramName}: '${3:paramValue}' } }}>\n  <a>${4:content}</a>\n</Link>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link-url-object",
      "matches": {
        "next link url object": true
      },
      "source": "javascript/next"
    },
    "37b03d45-a084-3984-98de-1ba6911c0a9b": {
      "content": "do |${1:v}|\n\t${2}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dov": true
      },
      "source": "vim-snippets/snippets"
    },
    "37b09221-0d15-3c92-a9eb-8b62a9490703": {
      "content": "cursor: hand",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      },
      "source": "vim-snippets/snippets"
    },
    "37b1943a-6966-380e-b332-42e8128cb644": {
      "content": "${1:#:action} unless ${2:#:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "37b8700e-d11e-3649-95fc-8c377050c12a": {
      "content": "public bool ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+|": true
      },
      "source": "vim-snippets/snippets"
    },
    "37ba0b0d-8cce-39c1-adc8-9be9911fd735": {
      "content": "printf(\"${1:} = %${2}\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prx": true
      },
      "source": "vim-snippets/snippets"
    },
    "37cad6b4-90e5-307e-adb9-a25963140bcd": {
      "content": "EventHandler temp = ${1:MyEvent};\nif (${2:temp} != null)\n{\n\t$2();\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inv": true
      },
      "source": "vim-snippets/snippets"
    },
    "37cde29f-ea74-3184-9612-d7e92715cc58": {
      "content": "type\t\tsymmetryPlane;",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sym": true
      },
      "source": "vim-snippets/snippets"
    },
    "37d16af3-50b1-39f8-ad51-276cd3ce5865": {
      "content": "typedef struct packed {\n    ${2:TARGET}\n} ${1:name} ;",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "37d6efce-7fbc-3ec0-9bf5-6adbce878686": {
      "content": "logic${1:#: nbit} ${2:reg}_r, $2_w;${3:TARGET}",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "logic [] _r, _w;",
      "matches": {
        "rw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "37da3442-e141-363d-8e91-137c40e53277": {
      "content": "return true;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rett": true
      },
      "source": "vim-snippets/snippets"
    },
    "37e1eb32-af19-3f2f-bb43-c2913926c319": {
      "content": "${1:component}.$destroy();",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-destroy",
      "matches": {
        "svcomd": true,
        "svelte component destroy": true
      },
      "source": "javascript/svelte"
    },
    "37e28ce5-bfa7-3e44-b8f8-c356c4d2398f": {
      "content": "content close-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      },
      "source": "vim-snippets/snippets"
    },
    "37e6222a-116b-365b-b30f-d89b826fd672": {
      "content": "test \"${1:test_name}\", ctx do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testc": true
      },
      "source": "vim-snippets/snippets"
    },
    "37ece086-e203-39cf-8d8d-91cbf2098754": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n} finally {\n\t\n}",
      "doc": "try/catch/finally",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-catch-finally",
      "matches": {
        "base try catch finally": true
      },
      "source": "javascript/base"
    },
    "37fa2517-80f9-3e40-9466-5e5d7a540736": {
      "content": "margin-right: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-right": true,
        "mr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "37ff0938-7088-3aa1-ae51-5fb7bd4f2e0b": {
      "content": "#!/usr/bin/env bash",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bash": true
      },
      "source": "vim-snippets/snippets"
    },
    "3802e20e-a51c-3507-854d-5906eee03fb1": {
      "content": "__import__('IPython').embed()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iem": true
      },
      "source": "vim-snippets/snippets"
    },
    "38033e8d-8eb6-3762-8089-c902a6bcff50": {
      "content": "${1:this}.get('${2:property}');",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "this.get('property');",
      "matches": {
        "eget": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3803e0aa-7740-330a-bfda-008f9aa926f7": {
      "content": "int ${1:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Z index (1D)",
      "matches": {
        "iz": true
      },
      "source": "vim-snippets/snippets"
    },
    "3810b42c-2143-3bed-9376-c184ba289674": {
      "content": "_${1}_${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "_emphasis_",
      "matches": {
        "emphasis2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38114d05-425b-3bd1-b0bd-511f13d6ea81": {
      "content": "${1:obj}.keypress (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kpress": true
      },
      "source": "snippets/coffee"
    },
    "38148d39-e8f2-38af-8f21-343a0004d0d2": {
      "content": "justify-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "381540ab-6341-3b6c-af0a-a3d93bdce471": {
      "content": "expect(${1:target}).not.toContain(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to contain (coffee)",
      "matches": {
        "notc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "381e88d8-75d9-3584-9268-bfcdb15cdb6b": {
      "content": "defer func() {\n\t${0:${VISUAL}}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer func() { ... }",
      "matches": {
        "def": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "382158d0-2f94-3543-bf38-28205c76ba66": {
      "content": "text-wrap: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "3824aa23-491a-3c56-bc41-c2ddcadbb315": {
      "content": "@click=\"${1:handler}(${2:arg}, $event)\"",
      "doc": "v-on click handler with arguments",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-on Shortcut Directive",
      "matches": {
        "von": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3825a18d-80bf-3b9d-95ad-7c7b99dea28d": {
      "content": "_.transform(${object}, ${iteratee}, ${accumulator})",
      "doc": "_.transform([2, 3, 4], function(result, n) {\n  result.push(n *= n);\n  return n % 2 == 0;\n}, []);\n// => [4, 9]\n\n_.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] }\n\nAn alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own\nenumerable string keyed properties thru `iteratee`, with each invocation\npotentially mutating the `accumulator` object. If `accumulator` is not\nprovided, a new object with the same `[[Prototype]]` will be used. The\niteratee is invoked with four arguments: (accumulator, value, key, object).\nIteratee functions may exit iteration early by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-transform",
      "matches": {
        "lodash transform": true
      },
      "source": "javascript/lodash"
    },
    "382c54a9-e31b-3fe7-92a0-12876907e4ac": {
      "content": "if(${1}) {\n\t${2}\n} else {\n\t${3}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "383ae30b-ee49-3255-8e18-a56144ff626f": {
      "content": "(defmulti ${1:name} \"${2:doc-string}\" ${0:dispatch-fn})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defmm": true
      },
      "source": "vim-snippets/snippets"
    },
    "383f3900-89ed-3642-95a8-b16837e1c3a1": {
      "content": "<head>\n    <meta charset=\"${1:utf-8}\">\n    <title>${2}</title>\n<style>\n    ${3}\n</style>\n    ${4}\n</head>${5}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "head": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "384df337-ab2a-348a-8de8-685bcacad457": {
      "content": "\\\\[\n\t${0:${VISUAL}}\n\\\\]",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "unnumbered equation: \\[ ... \\]",
      "matches": {
        "\\": true
      },
      "source": "vim-snippets/snippets"
    },
    "3854da11-cb7f-3f2f-8a59-d39f6e92cbfb": {
      "content": "max-width none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "38629c01-dcc7-3f4d-8608-c0d7b3a8d037": {
      "content": ":- initialization main.\nmain :-\n  current_prolog_flag(argv, Args),\n  writeln(Args),\n  halt.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3865e97d-edb0-3b30-9488-34ce6da184ca": {
      "content": "<dd class=\"${1}\">${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd.": true
      },
      "source": "vim-snippets/snippets"
    },
    "38665443-87cb-3667-a7c1-739c3f332464": {
      "content": "_.words(${string}, ${pattern})",
      "doc": "_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n\n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']\n\nSplits `string` into an array of its words.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-words",
      "matches": {
        "lodash words": true
      },
      "source": "javascript/lodash"
    },
    "386da110-221b-3c5d-a29a-76bf407d32f3": {
      "content": "import { reactive, toRefs } from 'vue'\n\nexport default {\n\tsetup () {\n\t\tconst state = reactive({\n\t\t\t${0:count}: ${1:0},\n\t\t})\n\t\n\t\treturn {\n\t\t\t...toRefs(state),\n\t\t}\n\t}\n}",
      "doc": "Vue Composition API Script with Reactive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API Reactive Script",
      "matches": {
        "v3reactive-setup": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3871ff13-6e3a-318c-b049-3ad657bee57d": {
      "content": "${1:obj}.before('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      },
      "source": "snippets/coffee"
    },
    "3878bcfa-a8ad-3708-890c-43f68d7db05c": {
      "content": "<col>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      },
      "source": "vim-snippets/snippets"
    },
    "387956b0-c5d7-3aab-8396-8d0cba3d6336": {
      "content": "expect(${1:list}).toContain($0);",
      "doc": "expects the list contains the item (===)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tocontain",
      "matches": {
        "jest expect tocontain": true,
        "tc": true
      },
      "source": "javascript/jest"
    },
    "387a6892-6227-3705-ac10-cf113ec980cb": {
      "content": "content no-open-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      },
      "source": "vim-snippets/snippets"
    },
    "38806402-6c53-3e86-9efa-172939c9e94d": {
      "content": "function ${1:function_name}() {\n\t${0:# function_body}\n}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffun": true
      },
      "source": "vim-snippets/snippets"
    },
    "38818b57-9b7f-3289-bfbe-e20f90def1cd": {
      "content": "border-corner-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "388911e8-8edc-3f82-b9d8-5e5d8d24867e": {
      "content": "real, intent(out) ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real intent(out)",
      "matches": {
        "reo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3889c015-5806-3b3f-b73c-ebf5667c764a": {
      "content": "list-style-type: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/snippets"
    },
    "389ab132-e40a-39bc-8101-37af4996a342": {
      "content": "func main() {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Main function",
      "matches": {
        "/^main/": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "38a8a170-2406-375f-b68d-b4e80b1bcdda": {
      "content": "if ${1:#:condition} then\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38acd92b-536f-3cda-83cc-db4daccfcf58": {
      "content": "text-indent -9999px",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      },
      "source": "vim-snippets/snippets"
    },
    "38acded2-0275-3fa6-8283-d9de3bf9a3d9": {
      "content": "public ${1:String} get${2:Name}() {\nreturn $2;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38ad351e-b086-30fa-8767-7e1f8893b182": {
      "content": "_.escapeRegExp(${string})",
      "doc": "_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\nEscapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-escaperegexp",
      "matches": {
        "lodash escaperegexp": true
      },
      "source": "javascript/lodash"
    },
    "38ad8a9c-790b-3475-92bd-98f81a6546ae": {
      "content": "<%= ${1} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=": true
      },
      "source": "vim-snippets/snippets"
    },
    "38adb8fb-eb5a-33af-ae6b-d4bb5d73c32e": {
      "content": "\\begin{align}\n\t${1:TARGET}\n\\end{align}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{align} \\align": true,
        "align": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38b7d542-73d5-35d5-b142-28f6c0bb53b7": {
      "content": "\\$GLOBALS['${1:#:variable}']${2: = }${3:#:something}${4:;}${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gloabals": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38c894df-c659-3823-a46a-26c70d559f5a": {
      "content": "auto ${1:name}(${2}) -> ${3:void}\n{\n\t${0}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "auto function",
      "matches": {
        "af": true
      },
      "source": "vim-snippets/snippets"
    },
    "38d1b7c2-ac4f-379e-bc6a-f1623e1c8a18": {
      "content": "for (${1}; ${2}; ${3}) {\n    ${4:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "38e012d1-352b-37dc-8183-5067c20ef4bc": {
      "content": "<#assign\n\t${1:variable_name} = ${0:value${VISUAL}}\n/>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#assign <#-- multiple lines --> />",
      "matches": {
        "assm": true
      },
      "source": "vim-snippets/snippets"
    },
    "38efa03b-537f-303a-a2a5-3ab33755ca5c": {
      "content": "id=\"$1\" name=\"${2:$1}\"",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "38f1f56b-fde0-3c3a-b066-97bbee1f1012": {
      "content": "before_action :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "38f2f917-1f5d-31ca-8ae8-e9c0bd86b216": {
      "content": "_.uniqWith(${array}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.uniqWith(objects, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\nThis method is like `_.uniq` except that it accepts `comparator` which\nis invoked to compare elements of `array`. The order of result values is\ndetermined by the order they occur in the array.The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqwith",
      "matches": {
        "lodash uniqwith": true
      },
      "source": "javascript/lodash"
    },
    "38fb4c0e-1e68-3593-9e4b-fa3018c8cb98": {
      "content": "_.trimEnd(${string}, ${chars})",
      "doc": "_.trimEnd('  abc  ');\n// => '  abc'\n\n_.trimEnd('-_-abc-_-', '_-');\n// => '-_-abc'\n\nRemoves trailing whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trimend",
      "matches": {
        "lodash trimend": true
      },
      "source": "javascript/lodash"
    },
    "390a6a73-5eb2-31f2-9ca1-d63ded06f3c7": {
      "content": "function(${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anf": true
      },
      "source": "snippets/javascript"
    },
    "3918ce90-3050-3d2f-b07f-22363639e6e8": {
      "content": "which(${1:x}, ${2:arr.ind = ${3:FALSE}}, ${4:useNames = ${5:TRUE}})",
      "doc": "Which",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "whi",
      "matches": {
        "which": true
      },
      "source": "vscode-R/snippets"
    },
    "3918fbe2-ea5a-363c-aa63-6fb93ff979ac": {
      "content": "(cond\n\t[(${1}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      },
      "source": "vim-snippets/snippets"
    },
    "3929bec6-46e1-3b20-9f96-6869cca7d8ce": {
      "content": "${1}.propTypes = {\n\t${2}: PropTypes.${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "propTypes",
      "matches": {
        "pt": true
      },
      "source": "snippets/javascript"
    },
    "392abb39-615f-3471-a4fc-b115f0f5ad9d": {
      "content": "PGraphics pg;\npg = createGraphics(${1:width}, ${2:height}${3:, }${0:applet});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pg": true
      },
      "source": "vim-snippets/snippets"
    },
    "392bedf9-910e-34d7-abed-4828793e9d98": {
      "content": "hue(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hue": true
      },
      "source": "vim-snippets/snippets"
    },
    "39365cfa-2420-3db5-b494-16014716fffe": {
      "content": "(:refer-clojure :exclude [${0}])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "refer": true
      },
      "source": "vim-snippets/snippets"
    },
    "393681fe-c157-3a0a-90f5-1d650e984435": {
      "content": "${1:obj}.show('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      },
      "source": "snippets/javascript"
    },
    "3946aea0-d195-3f46-927c-981173623932": {
      "content": "assert_match(/${1:expected_pattern}/, ${2:actual_string})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      },
      "source": "vim-snippets/snippets"
    },
    "39478773-3cf9-3467-90d8-88a01117bf51": {
      "content": "| prepend: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      },
      "source": "vim-snippets/snippets"
    },
    "394a69ea-f771-33f0-b11b-3b10ff01f1f1": {
      "content": "await ${0:${VISUAL}}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "await",
      "matches": {
        "aw": true
      },
      "source": "snippets/javascript"
    },
    "394dfaa5-b90f-384d-88b7-016724623a76": {
      "content": "${1:obj}.submit (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      },
      "source": "snippets/coffee"
    },
    "395e7915-0ac1-3c86-817d-73a3fa32d01c": {
      "content": "validates_confirmation_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:should match confirmation}\", if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of if (vcif)",
      "matches": {
        "vcif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3960c519-443c-3df4-a64c-6269df625b43": {
      "content": "form_textarea(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_textarea": true
      },
      "source": "vim-snippets/snippets"
    },
    "3968b793-4ead-3531-8a8e-1c3ea99d1e78": {
      "content": "class ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      },
      "source": "snippets/javascript"
    },
    "396a522c-513b-3e3f-9fcf-499f1fa81915": {
      "content": "for some ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for some",
      "matches": {
        "fors": true
      },
      "source": "vim-snippets/snippets"
    },
    "396bb0a9-bd18-39ea-88c3-37607382e0c1": {
      "content": "Dir[${1:'glob/**/*.rb'}]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "Dir[\"..\"]",
      "matches": {
        "Dir": true
      },
      "source": "vim-snippets/snippets"
    },
    "396e2be2-de63-3f09-9c5e-6e44356a2ba7": {
      "content": "int ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Y,Z index (2D)",
      "matches": {
        "iyz": true
      },
      "source": "vim-snippets/snippets"
    },
    "3987c583-f937-3f32-bf39-1dfffa69b52d": {
      "content": "mixed.required()",
      "doc": "mixed.required(message?: string | function): Schema\n\nMark the schema as required. All field values apart from undefined and null meet this requirement.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-required",
      "matches": {
        "yup mixed required": true
      },
      "source": "javascript/yup"
    },
    "39883533-94bc-312b-a396-e0e3694d540a": {
      "content": "$this->assertNull(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNull($a)",
      "matches": {
        "asnu": true
      },
      "source": "vim-snippets/snippets"
    },
    "39946f74-1c36-3a13-b514-1083293c5990": {
      "content": ".. danger:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "danger",
      "matches": {
        "danger": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "399ac8f1-319a-3a0e-9c49-ca51f4b846cd": {
      "content": "import React, { PureComponent } from 'react'\nimport { Text, View } from 'react-native'\n\nexport class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativePureComponentExport",
      "matches": {
        "rnpce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "399bc665-09e1-3120-b394-0db497642dbb": {
      "content": "${1:#:set the_url to }choose URL showing ${2:Web} servers with editable URL",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_URL": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "399f5fdc-fb75-3174-8372-6626dec4c66e": {
      "content": "set(${1:#:name}, ${2:#:value});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sv": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "39b54b02-4cbe-31f0-bf5b-7894be2c9d1b": {
      "content": "const ref = React.createRef()\n",
      "doc": "Forward ref statement used inside component",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forwardRef",
      "matches": {
        "fref": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "39b8ef52-e4a4-3334-967f-9f4b985a2a9c": {
      "content": "font-emphasize ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      },
      "source": "vim-snippets/snippets"
    },
    "39bea0a3-c26f-38cc-aff5-0b5696579056": {
      "content": "__PACKAGE__->get_${0:package_method}()",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkget": true
      },
      "source": "vim-snippets/snippets"
    },
    "39c80883-ee65-3ff9-aeb3-0dcd0c885568": {
      "content": "min { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      },
      "source": "vim-snippets/snippets"
    },
    "39d2757c-348c-3301-8e82-1999c435c354": {
      "content": "${1:obj}.trigger('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trig": true
      },
      "source": "snippets/javascript"
    },
    "39d3fc1b-1d29-3fcc-9091-d6da3b817f33": {
      "content": "imap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "39d73ecb-f6f4-3254-9c1b-b94c5983fd54": {
      "content": "$this->${1:method}()->shouldHaveCount(${2:7});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveCount(7)",
      "matches": {
        "scount": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "39df8670-1273-3862-829a-3e4ef41ca686": {
      "content": "${1:obj}.detach('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detach": true
      },
      "source": "snippets/javascript"
    },
    "39ec2b56-0f45-3bd2-9a84-7bcca0dcc67e": {
      "content": "box-sizing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      },
      "source": "vim-snippets/snippets"
    },
    "39f54a91-5dbe-3202-9c04-0b0d01500c9f": {
      "content": "\\begin{table}[${1}]\n\t\\centering\n\t\\caption{${2}}\n\t\\label{${3}}\n\t\\begin{tabular}{${4}}\n\t\t${5}\n\t\\end{tabular}\n\\end{table}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{table} \\table": true,
        "table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "39f60fef-efdf-3627-893f-44a90de23b88": {
      "content": "background: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a08a215-47fa-33fb-99bc-759495866ea4": {
      "content": "componentWillMount() {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillmount",
      "matches": {
        "cwm": true,
        "react componentwillmount": true
      },
      "source": "javascript/react"
    },
    "3a10406b-d966-3ca5-999f-5c8cf58a83e8": {
      "content": "content: attr(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a113efc-6e32-35c0-9474-76096de90dfc": {
      "content": "text-indent: ${1:10}px;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-indent: length (text)",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3a1cccda-5d4b-3b1f-9726-c1847d7baefa": {
      "content": "const { ${1:scrollYProgress} } = useElementScroll(${2:ref})",
      "doc": "useElementScroll(ref): Returns MotionValues that update when the provided element scrolls.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-element-scroll",
      "matches": {
        "framer-motion use-element-scroll": true,
        "use-element-scroll": true
      },
      "source": "javascript/framer-motion"
    },
    "3a26ab04-6a57-3512-a9a2-f3bb28323c2b": {
      "content": "@try {\n\t${1:statements}\n}\n@catch (NSException * e) {\n\t${2:handler}\n}\n@finally {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@try": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a2a9264-c541-3338-8a94-79bc2291ba2b": {
      "content": "tan(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tan": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a308177-6362-308a-8d54-e38b21a60027": {
      "content": "for ${2:k}, ${3:v} := range ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for k, v := range items { ... }",
      "matches": {
        "forr": true
      },
      "source": "gosnippets/snippets"
    },
    "3a497ba7-228c-32ea-ad49-17c4e96d6749": {
      "content": "match ${1:object}\n| ${2:value} => ${3}\n| otherwise => void",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a51c79c-7f65-32fe-b221-d64ba7c82221": {
      "content": "describe('${1:description}', () => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "Describe (js)",
      "matches": {
        "des": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3a531027-e07e-3def-a23c-a6ee8b20e39f": {
      "content": "${1:FIELDNAME} = models.FloatField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FloatField",
      "matches": {
        "mfloat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3a536dee-8c5a-33b3-96b1-8261a19f5276": {
      "content": "background-size cover",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a548348-97aa-3553-9e37-db195a967d86": {
      "content": ".then((${1:result}) => {\n\t${2}\n}).catch((${3:err}) => {\n\t${4}\n});",
      "doc": "Add the .then and .catch methods to handle promises",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "thenCatch",
      "matches": {
        "thenc": true
      },
      "source": "vscode-javascript/snippets"
    },
    "3a57c551-5252-38c0-9b02-5ea68fb44025": {
      "content": "apiVersion: v1\nkind: Service\nmetadata:\n{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.$1.service.annotations | indent 4 }}\n{{- end }}\n  labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"$2.$1.fullname\" . }}\nspec:\n  clusterIP: \"{{ .Values.$1.service.clusterIP }}\"\n{{- if .Values.$1.service.externalIPs }}\n  externalIPs:\n{{ toYaml .Values.$1.service.externalIPs | indent 4 }}\n{{- end }}\n{{- if .Values.$1.service.loadBalancerIP }}\n  loadBalancerIP: \"{{ .Values.$1.service.loadBalancerIP }}\"\n{{- end }}\n{{- if .Values.$1.service.loadBalancerSourceRanges }}\n  loadBalancerSourceRanges:\n{{ toYaml .Values.$1.service.loadBalancerSourceRanges | indent 4 }}\n{{- end }}\n  healthCheckNodePort: {{ .Values.$1.service.healthCheckNodePort }}\n  ports:\n\t- name: http\n\t  port: 80\n\t  protocol: TCP\n\t  targetPort: {{ .Values.$1.service.targetPorts.http }}\n\t  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.http))) }}\n\t  nodePort: {{ .Values.$1.service.nodePorts.http }}\n\t  {{- end }}\n\t- name: https\n\t  port: 443\n\t  protocol: TCP\n\t  targetPort: {{ .Values.$1.service.targetPorts.https }}\n\t  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.https))) }}\n\t  nodePort: {{ .Values.$1.service.nodePorts.https }}\n\t  {{- end }}\n  {{- range $key, $value := .Values.tcp }}\n\t- name: \"{{ $key }}-tcp\"\n\t  port: {{ $key }}\n\t  protocol: TCP\n\t  targetPort: \"{{ $key }}-tcp\"\n  {{- end }}\n  {{- range $key, $value := .Values.udp }}\n\t- name: \"{{ $key }}-udp\"\n\t  port: {{ $key }}\n\t  protocol: UDP\n\t  targetPort: \"{{ $key }}-udp\"\n  {{- end }}\n  selector:\n\tapp: {{ template \"${2:chartName}.name\" . }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\trelease: {{ .Release.Name }}\n  type: \"{{ .Values.${1:value_key}.service.type }}\"",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_sample_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a5c92a5-f972-36e8-a341-9a2262ad9423": {
      "content": "// rotate, x-axis, y-axis, z-axiz\ngl.glRotatef(${1:angle}, ${2:x}, ${3:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl rotate f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a5f6ddf-f297-3209-954c-f548f921cef8": {
      "content": "set ${1:#:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3a64f23f-6b2d-3946-9a58-75df96aee319": {
      "content": "/*\n * ${1}\n*/",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a666a70-d2fd-31a5-84f4-b10cedea3b96": {
      "content": "function ${1:#:function_name}(${2:#:argument}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "func",
      "matches": {
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3a6fa8db-ef79-355e-8e49-442e76043d06": {
      "content": "find_package(${1:library} ${0:REQUIRED})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a86ed1f-1644-3fbf-bbca-e016d64485d1": {
      "content": "for ${2:i} = 0, ${1:#:Things} do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3a8979b8-d813-3c2f-bed2-b06c87e66f5a": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3a8c282e-7003-3613-b890-5720fd13186d": {
      "content": "describe '${1:#method}' do\n\t${0:pending 'Not implemented'}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "descm": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a974e34-7652-33c9-98c5-3860f93d8027": {
      "content": "echo CHtml::encodeArray(array(${0}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yheca": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a981090-38ce-300c-9dad-31a4855f6a50": {
      "content": "enter-class=\"$1\"$0",
      "doc": "enter-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-class",
      "matches": {
        "enterclass": true,
        "vue enter-class": true
      },
      "source": "javascript/vue"
    },
    "3a98788e-b89f-3c20-b5e0-d4fd2095ec75": {
      "content": "page-break-after: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a98fea3-9705-3aea-9113-9566fb65e527": {
      "content": "_.rangeRight(${start}, ${end}, ${step})",
      "doc": "_.rangeRight(4);\n// => [3, 2, 1, 0]\n\n_.rangeRight(-4);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 5);\n// => [4, 3, 2, 1]\n\n_.rangeRight(0, 20, 5);\n// => [15, 10, 5, 0]\n\n_.rangeRight(0, -4, -1);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 4, 0);\n// => [1, 1, 1]\n\n_.rangeRight(0);\n// => []\n\nThis method is like `_.range` except that it populates values in\ndescending order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rangeright",
      "matches": {
        "lodash rangeright": true
      },
      "source": "javascript/lodash"
    },
    "3a9b8660-5011-30bd-94ae-f02dabba8782": {
      "content": "visibility: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "3a9ce535-f44f-3498-893f-484110eba57a": {
      "content": "place-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "3aa307c9-cf03-36a4-9ae6-f1ea6cc2921d": {
      "content": "<script>\nexport default {\n  ${0}\n}\n</script>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <script> with JavaScript",
      "matches": {
        "script_with_JavaScript": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3aa4deb1-5254-3478-9eb3-ff34286ad36c": {
      "content": ".. contents:: ${1:Table of Contents}\n\t${0:content}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con:": true
      },
      "source": "vim-snippets/snippets"
    },
    "3aa97d52-313b-356b-82c5-c8e4e0fadb8b": {
      "content": "each_pair do |${1:key}, ${2:value}|\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_pair_do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3aa99096-3f27-3aa5-93b6-16805480383f": {
      "content": ":${1:field name}: ${0:field body}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":": true
      },
      "source": "vim-snippets/snippets"
    },
    "3aab2306-54aa-3d34-99b5-a9c6c14f24c8": {
      "content": "border-style inset",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "3aaec848-c79d-3ac0-b3c8-5fcc509a1d2c": {
      "content": "justify-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ab65d0d-cf5a-3dde-873b-22135c851fab": {
      "content": ":first-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3ab78bd9-c309-333a-828f-41ef82d9e0db": {
      "content": "<aside class=\"${1}\">\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside.": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ab98aa2-3e2a-3875-8059-08f0409f9d22": {
      "content": "@#'",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "private": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3abfbe28-06c1-3d53-8aae-c52dad2fdd2b": {
      "content": "func ${1:handler}(${2:w} http.ResponseWriter, ${3:r} *http.Request) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "HTTP handler",
      "matches": {
        "funch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3ac95f7e-b113-3b05-8fa3-f4054b090cab": {
      "content": "<#list ${1:hashmap}?keys as ${2:key}>\n\t\\${$2\\}: \\${$1[$2]\\}${0:${VISUAL}}\n</#list>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#list hashmap?keys as element>...</#list>",
      "matches": {
        "lish": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ad1ae4f-1310-365c-9bde-0478898edf25": {
      "content": "type alias ${1:Model} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tya": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ad2dbe3-1a00-3c56-9284-816792b5dd74": {
      "content": "for=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ad4e07b-68c2-3b38-84fa-2d6eb8f636dc": {
      "content": "from IPython import embed; embed()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import ipython..",
      "matches": {
        "ipy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3adb48d6-8525-3090-89bf-1bba63956061": {
      "content": "text-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ae17642-787f-3eda-bc36-fdd363a189e4": {
      "content": "<div v-for=\"${1:item} in ${2:items}\" :key=\"$1.id\">\n\t{{ $1 }}\n</div>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ae3e348-6da3-3d92-b4af-61373fa5a7a2": {
      "content": "place-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ae8331f-a3fb-379b-bd7a-8a7c49ca3ac2": {
      "content": "$.ajaxSuccess(function (${1:e}, xhr, settings) {\n\t${2:// handler for when any AJAX call is successfully completed};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsuccess": true
      },
      "source": "snippets/javascript"
    },
    "3aed302d-149c-3260-8b59-4898bb7150f0": {
      "content": "${1:obj}.pushStack(${2:elements})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushstack": true
      },
      "source": "snippets/coffee"
    },
    "3b00b780-216e-3f6b-8628-663616df4faf": {
      "content": "@change=\"$emit('change', $event.target.value)\"",
      "doc": "Vue Emit from Child Component",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Emit from Child",
      "matches": {
        "vemit-child": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3b0bc4ad-ae79-3f48-8803-b4f865d06c53": {
      "content": "#include <${1:stdio}.h>",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b0dd0c5-952d-39cd-a9f8-ff44214c483a": {
      "content": "letter-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b0fecc9-6d83-392a-b2f5-ee052a4baa63": {
      "content": "let ${1:name} = ref ${2:val} in\n${3:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "ref",
      "matches": {
        "ref": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3b17cc06-4213-30bd-8d75-b13653aca099": {
      "content": "immutable",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imm": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b2fd570-4985-336c-bc11-1133c596b7dd": {
      "content": "border-top-right-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b319977-7613-36d4-9169-a0471d9145a8": {
      "content": "institution = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "institution": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3b34695d-6c1b-3d16-be8d-c19ce46c5aec": {
      "content": "DEFINE BUFFER b_${1:TableName} FOR $1 ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defbuf": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b3e37ba-5412-36b0-8343-dba56060a3f6": {
      "content": "flex-basis: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b4ceea5-32fa-31ee-bcd9-7149647ee4c0": {
      "content": "wont_be_empty",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbe": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b52e504-e4c8-35a7-bbef-d8e24583f8a6": {
      "content": ".style(\"${1}\", ${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".style": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b5a2199-0bdb-3e1d-9c45-bb2b51d8e331": {
      "content": "clear none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b60422f-2fcc-3a59-8fcf-f3062697856b": {
      "content": "align-items flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b6499fd-086b-30c4-a3b4-e12fe9b0b1a7": {
      "content": "System.out.format(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3b7d296f-0ecf-36e9-8060-b0d5caeacd3e": {
      "content": "self.assertEqual(${0}, ${1})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a=": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b7e4dda-378c-3f44-b7a1-9544ca0adde4": {
      "content": "_.initial(${array})",
      "doc": "_.initial([1, 2, 3]);\n// => [1, 2]\n\nGets all but the last element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-initial",
      "matches": {
        "lodash initial": true
      },
      "source": "javascript/lodash"
    },
    "3b85fa87-6ebc-3f75-abbf-24d7c244260a": {
      "content": "for (int ${1:i} = 0; $1 < ${2:10}; $1++)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3b8870dd-3a8c-3948-bab5-03eba7be2626": {
      "content": "if ${1} {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if / else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b887e78-f6f9-3ebb-a28e-f6084146c3cf": {
      "content": "sort(reverse=${1:False}, case_sensitive=${2:False}, attribute=${3:None})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sort an iterable",
      "matches": {
        "sort": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3b8af435-735e-3da5-a40f-a83ba43e26b4": {
      "content": "_.hasIn(${object}, ${path})",
      "doc": "var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.hasIn(object, 'a');\n// => true\n\n_.hasIn(object, 'a.b');\n// => true\n\n_.hasIn(object, ['a', 'b']);\n// => true\n\n_.hasIn(object, 'b');\n// => false\n\nChecks if `path` is a direct or inherited property of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-hasin",
      "matches": {
        "lodash hasin": true
      },
      "source": "javascript/lodash"
    },
    "3b93e04b-e79e-3427-8337-9c6e4d37c2ea": {
      "content": "{%- include '${1:snippet}', ${2:variable}: ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "includewith-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3b950c71-fd57-3ea6-9a77-908724978304": {
      "content": "{\n\t:f${0}\n}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eventsmap": true
      },
      "source": "snippets/coffee"
    },
    "3ba030ef-ba30-3d71-bb8f-1a1070f0135d": {
      "content": "@implementation ${1:object}\n- (id)init\n{\n\tif((self = [super init]))\n\t{${0}\n\t}\n\treturn self;\n}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassImplementation",
      "matches": {
        "clm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3ba69756-8036-3a0a-9dcd-0a07c03629b6": {
      "content": "border-bottom-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "3baf17eb-db58-31e7-b69f-786f685012e3": {
      "content": "namespace current",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsc": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bc00e9d-ff20-33f5-82fd-5056a2c5b4e7": {
      "content": "<blockquote>\n\t${0}\n</blockquote>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bc410cc-c1a3-3f46-b6f7-cb6669ecf4d9": {
      "content": "BEGIN {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "BEGIN { ... }",
      "matches": {
        "beg": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bc44927-d563-3026-8dd4-9a0b2ab6ae9f": {
      "content": "{{- if .Values.$1.enabled }}\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"$2.$1.fullname\" . }}\nspec:\n  replicas: {{ .Values.$1.replicaCount }}\n  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}\n  template:\n\tmetadata:\n\t{{- if .Values.$1.podAnnotations }}\n\t  annotations:\n{{ toYaml .Values.$1.podAnnotations | indent 8 }}\n\t{{- end }}\n\t  labels:\n\t\tapp: {{ template \"$2.name\" . }}\n\t\tcomponent: \"{{ .Values.$1.name }}\"\n\t\trelease: {{ .Release.Name }}\n\t\t{{- if .Values.$1.podLabels }}\n{{ toYaml .Values.$1.podLabels | indent 8 }}\n\t\t{{- end }}\n\tspec:\n\t  {{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n\t  containers:\n\t\t- name: {{ template \"${2:chartName}.name\" . }}-{{ .Values.$1.name }}\n\t\t  image: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\t\t  imagePullPolicy: \"{{ .Values.$1.image.pullPolicy }}\"\n\t\t  args:\n\t\t  {{- range $key, $value := .Values.$1.extraArgs }}\n\t\t\t{{- if $value }}\n\t\t\t- --{{ $key }}={{ $value }}\n\t\t\t{{- else }}\n\t\t\t- --{{ $key }}\n\t\t\t{{- end }}\n\t\t  {{- end }}\n\t\t  livenessProbe:\n\t\t\thttpGet:\n\t\t\t  path: /healthz\n\t\t\t  port: 8080\n\t\t\t  scheme: HTTP\n\t\t\tinitialDelaySeconds: 30\n\t\t\ttimeoutSeconds: 5\n\t\t  ports:\n\t\t\t- name: http\n\t\t\t  containerPort: 8080\n\t\t\t  protocol: TCP\n\t\t  resources:\n{{ toYaml .Values.$1.resources | indent 12 }}\n\t{{- if .Values.$1.nodeSelector }}\n\t  nodeSelector:\n{{ toYaml .Values.$1.nodeSelector | indent 8 }}\n\t{{- end }}\n\t{{- if .Values.$1.tolerations }}\n\t  tolerations:\n{{ toYaml .Values.$1.tolerations | indent 8 }}\n\t{{- end }}\n\t{{- if .Values.$1.affinity }}\n\t  affinity:\n{{ toYaml .Values.${1:value_key}.affinity | indent 8 }}\n\t{{- end }}\n\t  terminationGracePeriodSeconds: 60\n{{- end }}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_sample_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bc7bd7d-ced3-3b8f-ab33-6944ee378e93": {
      "content": "expect(() => {\n\t$0\n}).toThrowErrorMatchingInlineSnapshot();",
      "doc": "expects that the method will throw an error matching the inline snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerrormatchinginlinesnapshot",
      "matches": {
        "jest expect tothrowerrormatchinginlinesnapshot": true,
        "ttemis": true
      },
      "source": "javascript/jest"
    },
    "3bd044a3-5774-39de-95d5-1e54fabf33eb": {
      "content": "import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LogInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst started = Date.now();\n\t\treturn next.handle(req).pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tconst elapsed = Date.now() - started;\n\t\t\t\t\tconsole.log(`Request for \\${req.urlWithParams} took \\${elapsed} ms.`);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}",
      "doc": "Angular HttpInterceptor for Logging HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor for Logging",
      "matches": {
        "a-http-interceptor-logging": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "3be3c766-705d-3286-8be7-5af1fca58c16": {
      "content": "console.group('${1:label}');",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroup",
      "matches": {
        "cgr": true
      },
      "source": "vscode-javascript/snippets"
    },
    "3be51321-b1bb-338e-8d06-93e472c17169": {
      "content": "$this->db->join(\"${1:table}\", \"${2:condition}\", \"${3:type}\");${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-join": true
      },
      "source": "vim-snippets/snippets"
    },
    "3be73829-418b-3c2b-946d-476a45a3d0e2": {
      "content": "border-right: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3be7c0f9-3cbf-3afb-950f-aefaa9446535": {
      "content": "{%- case ${1:variable} -%}\n\t{%- when ${2:condition} -%}\n\t\t${3}\n\t{%- else -%}\n\t\t${0}\n{%- endcase -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bee89cd-fbaa-36d3-ae54-e50df25fc6f3": {
      "content": "text-decoration: underline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bf0352c-936f-3a27-9fc4-e3ec50d33590": {
      "content": "_.flatMapDeep(${collection}, ${iteratee})",
      "doc": "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDeep([1, 2], duplicate);\n// => [1, 1, 2, 2]\n\nThis method is like `_.flatMap` except that it recursively flattens the\nmapped results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmapdeep",
      "matches": {
        "lodash flatmapdeep": true
      },
      "source": "javascript/lodash"
    },
    "3bf0534c-a3a1-3733-ac5d-26ef624074d3": {
      "content": "SCRIPT_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdir": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bf283a5-fc7f-3bdc-9e40-9e72e30f98c1": {
      "content": "{{#if ${1:value}}}\n${0:${VISUAL}}\n{{/if}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#if value}} ... {{/if}}",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "3bfd6255-55a2-3bfa-9648-223fa261a1e1": {
      "content": "<pre>{{${1:model} | json}}</pre>$0",
      "doc": "Angular pre debug | json",
      "filetype": "html",
      "grammar": "lsp",
      "label": "pre w/ json",
      "matches": {
        "a-prej": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "3c056429-517c-3592-bb98-dd0807f7a325": {
      "content": "${0:// A buffer ID of zero unbinds a buffer object}\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, ${1:0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl bind buffer",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c08d336-f6fc-387e-a214-d27c61e520e2": {
      "content": "${1:FIELDNAME} = models.AutoField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "AutoField",
      "matches": {
        "mauto": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3c0e88c2-bf29-39d4-b201-ccf1a2e1cc80": {
      "content": "import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeComponent",
      "matches": {
        "rnc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3c0f27fe-de8d-3024-b2da-f0e899b36fe5": {
      "content": "$.isArray(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isarr": true
      },
      "source": "snippets/coffee"
    },
    "3c155f70-f285-3442-b532-32a5b7cb5e7b": {
      "content": "${1:obj}.pushStack(${2:elements})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushstack": true
      },
      "source": "snippets/javascript"
    },
    "3c193341-b873-333d-95d3-ed191bc81733": {
      "content": "assert_eq!(${1:expected}, ${2:actual});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "assert_eq!",
      "matches": {
        "ase": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c1fd2dc-9e3c-3b21-ae00-cad67d8d5072": {
      "content": "flex-direction: row-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:rr": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c283a52-2898-3f37-83e3-7df6790ca7cf": {
      "content": "render() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Basic render.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-render",
      "matches": {
        "react component render": true,
        "ren": true
      },
      "source": "javascript/react"
    },
    "3c35bb87-93f2-3a9b-86e3-03c59fce33bd": {
      "content": "{% spaceless %}${0}{% endspaceless %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c35cb4b-3922-3168-b281-0367e7fa2616": {
      "content": "border-top-left-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c39e4d1-f05d-3a14-9222-8b7fb8ce406c": {
      "content": "each_with_object(${1:init}) { |${2:e}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawo": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c3c5cb6-f658-30b0-90fa-d88de711ce2a": {
      "content": "has_many :${1:objects}, through: :${2:join_association}${3:, source: :${4:$2_table_foreign_key_to_$1_table}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many (through)",
      "matches": {
        "hmt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3c3d81cb-49ea-3290-b5e6-9ca60bf0c13a": {
      "content": "var ${1:seq} =\n\tfrom ${2:item1} in ${3:items1}\n\tjoin ${4:item2} in ${5:items2} on $2.${6:prop1} equals $4.${7:prop2}\n\tselect ${8:$2.prop3}\n\twhere ${9:clause}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "LINQ syntax",
      "matches": {
        "from": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3c3d9c29-be6f-36a4-aad9-69f31b495a27": {
      "content": "{ path: '**', component: ${1:PathNotFoundComponent} }$0",
      "doc": "Angular 404 route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-404-route-path",
      "matches": {
        "a-route-path-404": true,
        "angular 404 route path": true
      },
      "source": "javascript/angular"
    },
    "3c3e34ad-0733-3be9-8a55-05c9c5d79b87": {
      "content": "${1:FIELDNAME} = models.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${0:, max_length=100})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c43ae0d-5447-367f-9f4b-a56f5803cb66": {
      "content": "_.rearg(${func}, ${indexes})",
      "doc": "var rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, [2, 0, 1]);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']\n\nCreates a function that invokes `func` with arguments arranged according\nto the specified `indexes` where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rearg",
      "matches": {
        "lodash rearg": true
      },
      "source": "javascript/lodash"
    },
    "3c4cf315-068f-32ac-8bfb-1fa265080d84": {
      "content": "<token_desc> token{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "token_desc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3c4d9326-22a2-3a4b-aa08-23721129e79b": {
      "content": "try\n    ${1}\n${2:catch}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "try ... end",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3c516f0f-8e16-3823-9f71-cb9abe544895": {
      "content": "<pre>{{${1:model} | async | json}}</pre>$0",
      "doc": "Angular pre debug | async | json",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "pre-w-async-json",
      "matches": {
        "a-preja": true,
        "angular pre async json": true
      },
      "source": "javascript/angular"
    },
    "3c5178a3-a941-3979-9cc7-ad6657353769": {
      "content": "_.forInRight(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\nThis method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forinright",
      "matches": {
        "lodash forinright": true
      },
      "source": "javascript/lodash"
    },
    "3c5a9dab-0304-3a0a-87e2-cad77006b016": {
      "content": ".. toctree::\n\t:maxdepth: ${1:2}\n\t${2:#:FILES}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_toctree",
      "matches": {
        "toctree": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3c6653ce-e6d4-3add-95b9-f5cb528c3585": {
      "content": "use GenServer\n@doc false\ndef start_link, do: GenServer.start_link(__MODULE__, ${1:Map.new})\n@impl true\ndef init(state), do: {:ok, state}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "basic genserver structure",
      "matches": {
        "genserver:": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c6b93c5-c27d-3dbb-9f97-dfcbf14fb7cc": {
      "content": "components: {\n\t${1:New},\n},",
      "doc": "Import one component into another, within export statement",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import into the Component",
      "matches": {
        "vcomponents": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3c73c851-828c-365c-a4b1-9c4be672a4c0": {
      "content": "private int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c7cc9e8-cbc8-34ec-910f-b57a47aef69c": {
      "content": "each_char {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_char": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3c87b768-c2a7-387f-ad36-15c91ca48fa1": {
      "content": ":after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c8ecb0b-945d-3a0a-9ec0-b3b8911a1368": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit($1, $2);\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vactions": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c9095d9-5e8f-32a1-84bb-598dede9da56": {
      "content": "with ${1};${2}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "with ...;...",
      "matches": {
        "with": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3c9153de-581f-3617-9300-5d69c2997c24": {
      "content": "background-break: bounding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c9867d6-64d7-300c-9123-169659646922": {
      "content": "${1:void} ${2:method}(${3}) ${4:throws }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "3c9f15fb-d2a3-39d9-b69e-97acda97af63": {
      "content": "\\begin{eqnarray*}\n\t${1:TARGET}\n\\end{eqnarray*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{eqnarray*} \\eqnarray*": true,
        "eqnarray*": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3cab9034-7238-333e-9274-ab21de68b727": {
      "content": "place-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "3cb763c8-d618-3f9d-b8a7-bcabe80aa399": {
      "content": "link rel=\"stylesheet\" href=\"${1:style.css}\" type=\"text/css\" media=\"${2:all}\"",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      },
      "source": "vim-snippets/snippets"
    },
    "3cb7e4af-0dfb-3b69-b4b6-0f309c96415a": {
      "content": "\\\\begin{enumerate}[(a)]\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enuma": true
      },
      "source": "vim-snippets/snippets"
    },
    "3cb8c7b1-14f2-39b3-a39d-ecdc4aa2dba5": {
      "content": "'''\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "horizontal rule",
      "matches": {
        "hrule": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3cbeb170-cf25-3370-b74a-422e26dca851": {
      "content": "try {\n    ${0:TARGET}\n} catch {\n    ${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch {}",
      "matches": {
        "try_catch_n": true,
        "try_cn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3cc3b006-8130-333f-a97c-98b62876c94f": {
      "content": "Int",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "3cc4145f-56fe-338b-8a06-c222cf99fd45": {
      "content": "repeat {\n    ${0:TARGET}\n} while ${1:false}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3cc80e19-bb71-368c-95b0-de3afd370f0d": {
      "content": "expect(${1:what}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expect": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ce0b421-c825-39b3-be2d-67ee4cf5911f": {
      "content": "<example>${0:#:description}</example>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<example></example>",
      "matches": {
        "example": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3cfded5b-53e0-3db2-a636-d5fc96278f78": {
      "content": "grid-auto-rows: auto",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d06917e-cbc7-3696-8f30-c99b3b50cab1": {
      "content": "white-space: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d075701-e34a-301d-99e9-17bbf863a218": {
      "content": "class ${1:#:NAME} {\n  constructor(${2:#:ARGS}) {\n    ${0:TARGET}\n  }\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "class {...}",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3d081d0b-4654-353e-9865-45c2508d0906": {
      "content": "grid-auto-columns: auto",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d1c773a-4014-36b1-ae40-8e3766a304b1": {
      "content": "<xsl:value-of select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "value-of": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d1ce8c8-3483-35fd-b82a-de36c7bbe67e": {
      "content": "grid-row-start: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d2c3dbe-b923-30ec-88ac-20dd9cb470db": {
      "content": "align-items last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d3077c6-df54-315e-96b3-10a26d37abd3": {
      "content": "scoped_by_${1:attribute}(${2:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scoped_by",
      "matches": {
        "sb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3d35fa93-0c3e-3353-b5aa-403fa0777f9b": {
      "content": "elif [[ ${1:condition} ]]; then\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d37097e-323e-33fa-b6c8-142f8a346425": {
      "content": "include_directories(${${0:include_dir}})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d428a9e-e169-3b2a-bb38-7d6c9dacc4b2": {
      "content": "${1:obj}.keydown (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kdown": true
      },
      "source": "snippets/coffee"
    },
    "3d432ad7-9b99-3c04-8ffc-b8a0d01ce144": {
      "content": "${1:FIELDNAME} = models.ImageField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ImageField",
      "matches": {
        "mimg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3d43bdbf-a1f3-3c89-a305-6ca363f5b8bb": {
      "content": "#' @field ${1:name}::${2:Type} ${0:Description}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "type field documentation",
      "matches": {
        "fld": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3d487453-a565-31fe-a46a-8404ffb0d47e": {
      "content": "while ${1:false} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3d525463-f53f-3398-82ca-f5ccc4f89d0e": {
      "content": "tuple(${1:/*args*/})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "tuple (tup)",
      "matches": {
        "tup": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3d57228e-1d4b-3e38-af69-bfcc0011d78e": {
      "content": "for (int ${1:i} = ${2}; $1 < ${3}; ${4:do what}) begin\n    ${5:TARGET}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3d6768c5-f8f8-3fb1-9576-93caef609bcf": {
      "content": "padding-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d68db64-ab59-3fa9-8b3a-eb4a3a45268f": {
      "content": "if (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "3d81d5e6-6efc-3ccf-b15a-b6678516be23": {
      "content": "<%= link ${1:\"${2:Submit}\"}, to: ${3:\"${4:/users}\"}, method: ${5::delete} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "link",
      "matches": {
        "lin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3d84f482-4ffe-39f2-a581-34e46cf24140": {
      "content": "console.group(\"${1:label}\")",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroup",
      "matches": {
        "cgr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3d8724cb-4037-3b8d-bc96-fd13e6b335d7": {
      "content": "set oldDelims to AppleScript's text item delimiters\nset AppleScript's text item delimiters to {\"${1:,}\"}\n${0:#:TARGET}\nset AppleScript's text item delimiters to oldDelims",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delim": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3d8ede0d-9fd4-325e-9cec-981ed84f37b0": {
      "content": "<!--${1:TARGET}-->${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3d941a73-4edf-3b9d-b85d-ed76e4a82a4f": {
      "content": "System.err.printf(\"${1:Message}\", ${0:exception});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "errf": true
      },
      "source": "vim-snippets/snippets"
    },
    "3da190ee-5610-3eba-87df-59d94bc0b74c": {
      "content": "catch${1:#:pattern} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3da3e1f0-9bfe-3849-86f9-3649871a48e6": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig else",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "3da7a4f8-3489-3e59-9c6c-27e27a10820f": {
      "content": "word-wrap suppress",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "3da81f65-588a-3717-ae35-1b9acefcb57c": {
      "content": "{\n\t\"type\": \"checkbox\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": ${3:true},\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_checkbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "3dad2007-39f5-3bc0-ba9b-bda91dc0f420": {
      "content": "match ${1:x} with\n| Some(${2:y}) -> ${3:()}\n| None -> ${4:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "pattern match on an option type",
      "matches": {
        "matcho": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3db3924c-bc46-39a1-b14d-720d315cdceb": {
      "content": "${1:obj}.height(${2:integer})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      },
      "source": "snippets/javascript"
    },
    "3db404f0-e47d-361b-a43a-1181b0507bb1": {
      "content": "std.traits",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "traits": true
      },
      "source": "vim-snippets/snippets"
    },
    "3dbc9ec2-8cd6-3ca9-8a11-f74745aca66f": {
      "content": "[NSThread detachNewThreadSelector:@selector(${1:#:method}:) toTarget:${2:#:aTarget} withObject:${3:#:anArgument}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thread": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3dbd43b8-6188-3493-be66-e0f5a5992aeb": {
      "content": "switch ${1:var} {\ncase ${2:value1}:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch x { ... }",
      "matches": {
        "switch": true
      },
      "source": "gosnippets/snippets"
    },
    "3dc62a03-4c3d-36e9-accc-4e554e56eb69": {
      "content": "font-size-adjust: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "3dc84e30-cfc2-35ae-8847-7887dd74117c": {
      "content": "public ${1:int} ${2:MyProperty} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Simple property declaration",
      "matches": {
        "prop": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3dc95174-ff90-3c80-95b0-6ab40cc469fe": {
      "content": "Throws:  $1Exception $2",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Throws (Thr)",
      "matches": {
        "Thr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3dd22740-6ebc-34e4-8486-fd5eba0b2f1c": {
      "content": "func ${1:function}(${2}) ${3:error }{\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func function(...) [error] { ... }",
      "matches": {
        "func": true
      },
      "source": "gosnippets/snippets"
    },
    "3dd3c196-15a8-3d97-b74c-6fdb609392b0": {
      "content": "font-stretch: semi-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "3dd464db-2953-3c16-af73-a6eee22f8949": {
      "content": "router.beforeEach((to, from, next) => {\n\t${1:next();}\n});",
      "doc": "Vue Router global guards beforeEach",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeEach",
      "matches": {
        "vbeforeeach": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3deb9292-1e0c-344f-8d1e-5cbb315ce3e1": {
      "content": "defer ${1:func}(${2})\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer someFunction()",
      "matches": {
        "df": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "3df75d0c-3094-34ad-a3b9-cf7cefc72e6b": {
      "content": "_.take(${array}, ${n})",
      "doc": "_.take([1, 2, 3]);\n// => [1]\n\n_.take([1, 2, 3], 2);\n// => [1, 2]\n\n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.take([1, 2, 3], 0);\n// => []\n\nCreates a slice of `array` with `n` elements taken from the beginning.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-take",
      "matches": {
        "lodash take": true
      },
      "source": "javascript/lodash"
    },
    "3dfb880c-cc55-3a18-bc8f-a00c07a5a113": {
      "content": "const { request } = require('graphql-request');",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-require-request",
      "matches": {
        "graphql-request require request": true
      },
      "source": "javascript/graphql-request"
    },
    "3e09b1bc-fb82-328d-a1f1-a1045c9238ef": {
      "content": "\\\\begin{exampleblock}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{exampleblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "exampleblock environment",
      "matches": {
        "example": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e13c029-e9b1-38e6-81c5-acfb31d2d382": {
      "content": "border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e233533-3319-3d54-ad7f-10f529846a72": {
      "content": "JSON.stringify ${1}, void, 2",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e2716a2-56c1-3f4b-af5b-1a6da4943f20": {
      "content": "log.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log println",
      "matches": {
        "lp": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e2e180d-e3d0-386d-8a91-0cb536f2b41f": {
      "content": "$this->renderDynamic('${0:callback}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrd": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e32d700-27bb-3c28-a8f0-7541f8ced77f": {
      "content": "\\begin{scshape}\n\t${1:TARGET}\n\\end{scshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{scshape} \\scshape": true,
        "scshape": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e331949-512a-33ab-bcdb-ba7cafcdda33": {
      "content": "componentDidCatch(error, info) {\n\t$0\n}\n",
      "doc": "Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidCatch",
      "matches": {
        "cdc": true
      },
      "source": "vscode-react/snippets"
    },
    "3e36ebee-e54e-3329-bd10-2badde016985": {
      "content": "\\${5:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:#optional}",
      "matches": {
        "5#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e37942d-3f13-3fd3-a93f-52d2c8c25e78": {
      "content": "var ${1:#:NAME}: ${2:#:TYPE} = ${0:#:TARGET};",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "var NAME: TYPE = expr;",
      "matches": {
        "var-with-type": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e392e3c-e285-3985-8352-57ef8fa1ead5": {
      "content": "try:\n\t${1:pass}\nfinally:\n\t${2:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "try: ... finally: ...",
      "matches": {
        "tryfinally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e447eda-ffac-390d-9ba5-b278ab4a91b3": {
      "content": "options(${1:...})",
      "doc": "Options",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "opt",
      "matches": {
        "option": true
      },
      "source": "vscode-R/snippets"
    },
    "3e477fca-900d-35f6-b06f-2eb2917bcde0": {
      "content": "Vue.directive('${1:directiveName}', {\n\tbind(el, binding, vnode) {\n\t\tel.style.${2:arg} = binding.value.${2:arg};\n\t}\n});",
      "doc": "vue custom directive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Custom Directive",
      "matches": {
        "vc-direct": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "3e4c8ddc-0be9-300d-8155-bb89a4bd92ca": {
      "content": "(* ${0} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e4cb021-3d55-3960-8399-9c40bf485d28": {
      "content": "_.range(${start}, ${end}, ${step})",
      "doc": "_.range(4);\n// => [0, 1, 2, 3]\n\n_.range(-4);\n// => [0, -1, -2, -3]\n\n_.range(1, 5);\n// => [1, 2, 3, 4]\n\n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n\n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n\n_.range(1, 4, 0);\n// => [1, 1, 1]\n\n_.range(0);\n// => []\n\nCreates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. A step of `-1` is used if a negative\n`start` is specified without an `end` or `step`. If `end` is not specified,\nit's set to `start` with `start` then set to `0`.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-range",
      "matches": {
        "lodash range": true
      },
      "source": "javascript/lodash"
    },
    "3e53325e-3330-3a38-86eb-072356affc64": {
      "content": "{% filter ${1} %}\n\t${0:TARGET}\n{% endfilter %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% filter ... %} ... {% endfilter %}",
      "matches": {
        "filter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e6bbe20-9452-39a7-a1d7-fee12c1763c6": {
      "content": "{% sandbox %}\n\t${0:TARGET}\n{% endsandbox %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% sandbox %} ... {% endsandbox %}",
      "matches": {
        "sandbox": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e7bdb09-22f2-3c77-afa4-bb776b691270": {
      "content": "return new Promise((resolve, reject) => {\n\t${1}\n});",
      "doc": "Creates and returns a new Promise in the standard ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "promise",
      "matches": {
        "prom": true
      },
      "source": "vscode-javascript/snippets"
    },
    "3e83eafc-a629-3e8a-9bda-0c7f1dcfe1ea": {
      "content": "visibility: collapse",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e8de2c5-10ad-3300-8385-a24991348110": {
      "content": "protected int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi|-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e929093-ae5a-31c8-92c9-1fbf74e9a042": {
      "content": "month = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "month": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3e92988d-8b2e-3144-bfb2-589eb2d3a05d": {
      "content": "mixed.oneOf()",
      "doc": "mixed.oneOf(arrayOfValues: Array<any>, message?: string | function): Schema Alias: equals\n\nWhitelist a set of values. Values added are automatically removed from any blacklist if they are in it.\nThe ${values} interpolation can be used in the message argument.Note that undefined does not fail this validator, even when undefined is not included in arrayOfValues.\nIf you don't want undefined to be a valid value, you can use mixed.required.let schema = yup.mixed().oneOf([\"jimmy\", 42]);\n\nawait schema.isValid(42); // => true\nawait schema.isValid(\"jimmy\"); // => true\nawait schema.isValid(new Date()); // => false\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-one-of",
      "matches": {
        "yup mixed oneof": true
      },
      "source": "javascript/yup"
    },
    "3e93e9d9-ef1a-368e-b6a6-671d29c9f0da": {
      "content": "<img class=\"${1}\" src=\"${2}\" alt=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img.": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e9665b4-d536-3e68-ad10-5f6c5d8d931d": {
      "content": "grid-template-rows: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e9de11b-4aa4-3e72-84a2-390c013f0b4e": {
      "content": "word-wrap: unrestricted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "3e9f8c36-8144-3dcc-a906-b0960cdd9f3e": {
      "content": "cursor hand",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ea45a41-c21b-3d6b-ad89-6eef5ad9e464": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}})\n",
      "doc": "Creates a React component class with PropTypes with connected redux and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-redux-proptypes",
      "matches": {
        "rcreduxp": true,
        "react component class redux proptypes": true
      },
      "source": "javascript/react"
    },
    "3eaac196-fe85-37a6-a5b6-808fe4df469a": {
      "content": "white-space-collapse: break-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "3eaafc90-be40-3854-89bd-8d8381efd94f": {
      "content": "grid-column ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      },
      "source": "vim-snippets/snippets"
    },
    "3eadc206-f343-399c-8655-d44543022d28": {
      "content": "${1:public} string ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "3eadf2c2-6418-3ba9-86b4-89fe3854dcf9": {
      "content": "RAILS_DEFAULT_LOGGER.debug \"${1:message}\"$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "RAILS_DEFAULT_LOGGER.debug (rdb)",
      "matches": {
        "rdb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3ebaee76-b33e-3633-94b5-e788f05ee04f": {
      "content": "place-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ebc72a6-4056-3d2b-8ad5-93b2c6f038b8": {
      "content": "{% if ${1} %}\n\t${2}\n{% else %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig if else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ebe0d8e-e42c-3aab-9fa9-83e201fdbf9d": {
      "content": "always_latch begin\n    if (${1:enable}) begin\n        ${2:TARGET}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_latch",
      "matches": {
        "all": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3ec2df09-5051-39a8-a1a9-fa026a1075c5": {
      "content": "unless ${1:condition} do\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do .. else .. end",
      "matches": {
        "unlesse": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ec5ed19-dd4c-3565-a74d-8c6a2d63e2b6": {
      "content": "${1:obj}.outerHeight()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerh": true
      },
      "source": "snippets/coffee"
    },
    "3ecf6eb0-83f6-318a-b3dc-9c21fa26f6e2": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypestrict": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3ed4bd88-6f4b-32e9-8464-4d6303013e16": {
      "content": "<% ${1:array}.forEach((${2:single var}) => { %>\n\t${0:body}\n<% }) %>",
      "doc": "",
      "filetype": "ejs",
      "grammar": "snu",
      "label": "ejs for Each loop",
      "matches": {
        "forE": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3ee1f278-ba41-3f85-b70f-aa19be60ddd7": {
      "content": "grid: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      },
      "source": "vim-snippets/snippets"
    },
    "3eeb9639-703d-347b-8801-90bb0e948f84": {
      "content": "font-weight ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ef157e1-55f9-3bfb-b56b-9a40e07d40c3": {
      "content": "guard let ${1} = ${2} else {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "guard let ... else { ... }",
      "matches": {
        "guard": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3ef7635c-4a95-3adc-a6eb-74cefcb80a46": {
      "content": "if ${1:false} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3efab9db-8f90-3266-9573-1e6c14fba268": {
      "content": "overflow-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      },
      "source": "vim-snippets/snippets"
    },
    "3efb95b4-4afe-3ed4-99d1-c82b4623da2b": {
      "content": "beforeEnter(el) {\n\tconsole.log('beforeEnter');\n},\nenter(el, done) {\n\tconsole.log('enter');\n\tdone();\n},\nbeforeLeave(el) {\n\tconsole.log('beforeLeave');\n},\nleave(el, done) {\n\tconsole.log('leave');\n\tdone();\n},",
      "doc": "transition component js hooks",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition-methods-with-javascript-hooks",
      "matches": {
        "vanimhook-js": true,
        "vue transition methods with javascript hooks": true
      },
      "source": "javascript/vue"
    },
    "3f004f57-e964-3913-ae75-4c9bff025f48": {
      "content": "mutable.HashSet${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mhset": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f0c2721-da46-3465-b770-6a657dba2ab9": {
      "content": "reject { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rej": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f197437-4f7f-3831-a6e4-5af72aa3f009": {
      "content": "{% comment %}\n\t${0}\n{% endcomment %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f1cd1c4-1b6f-3110-87a0-8575abba6577": {
      "content": "object.shape()",
      "doc": "object.shape(fields: object, noSortEdges?: Array<[string, string]>): Schema\n\nDefine the keys of the object and the schemas for said keys.Note that you can chain shape method, which acts like object extends, for example:object({\n  a: string(),\n  b: number()\n}).shape({\n  b: string(),\n  c: number()\n});\nwould be exactly the same as:object({\n  a: string(),\n  b: string(),\n  c: number()\n});\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-shape",
      "matches": {
        "yup object shape": true
      },
      "source": "javascript/yup"
    },
    "3f234800-b6aa-3e81-b160-e25094d8f20e": {
      "content": "containers:\n  - name: {{ template \"${2:chartName}.name\" . }}-{{ .Values.$1.name }}\n\timage: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\timagePullPolicy: \"{{ .Values.${1:value_key}.image.pullPolicy }}\"\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "containers_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f282646-72b7-3fa3-99cf-4b88c899290f": {
      "content": "shouldComponentUpdate: (nextProps, nextState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define shouldComponentUpdate",
      "matches": {
        "shouldComponentUpdate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3f2ccff1-1940-3f2e-b4b7-7cdf392e721a": {
      "content": "const Global${1} = createGlobalStyle`\n  ${2}\n`;",
      "doc": "createGlobalStyle",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-create-global-style",
      "matches": {
        "scg": true,
        "styled-components createglobalstyle": true
      },
      "source": "javascript/styled-components"
    },
    "3f2f55a7-8e8d-3a40-baa3-5ff9a728bdb6": {
      "content": ".. image:: ${1:#:path}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3f304ebf-f04e-37b0-9324-b68736b40de7": {
      "content": "list-style-image: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-image": true,
        "lsi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3f358931-a30e-3e46-9621-b43b14ce53ce": {
      "content": "{% regroup $1 by $2 as $3 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3f3944fe-e036-31fc-84a0-bce3966f8475": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as ${4}} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f4e8522-7160-353e-995f-d8dbc4704075": {
      "content": "{% extends \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "extends",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3f557cac-fa1b-3a37-8791-eee1d674e3bc": {
      "content": "align-content: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f557e6e-65ca-3983-bb29-3952057f5d09": {
      "content": "String ${1:str}${2: = \"}${0:CCCP\"};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "string": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f55e641-7b21-3b98-9eb8-d355e41f3928": {
      "content": "resize both",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f571048-613d-3e20-9115-c6fda535f79f": {
      "content": "align-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f573861-cf93-32ae-b1bd-999cb6f5ed26": {
      "content": "print(${1:#:target}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3f5c5cb8-4113-321b-bae9-5a63a9841af1": {
      "content": "namespace ${1} {\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "nspc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3f6639ce-4b9c-3d54-8b67-cc9c1e053692": {
      "content": "name=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "name": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f6f1c2e-9f34-3f00-88f6-1f44514f1f76": {
      "content": "assertArrayEquals(\"${1:Failure message}\", ${2:expecteds}, ${3:actuals});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aae": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f716780-04f8-3673-b24c-bfc73a3af0fe": {
      "content": "- (void)awakeFromNib\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wake": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f75c05b-86a3-3c7b-9b1f-c35e519de2fe": {
      "content": "<see cref=\"${1}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<s": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f76e3d1-19e2-368e-8ccc-4dfe8dc145b9": {
      "content": "set ${1:setting};",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "se": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f81aa74-74ca-3243-b1c5-b52a3a256cb6": {
      "content": "<menu type=\"toolbar\">\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f857a61-0371-3c65-8f36-681b27f832c9": {
      "content": "import React from 'react'\nimport { View, Text } from 'react-native'\n\ninterface Props {\n\t\n}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Native Arrow Function Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typescriptReactNativeArrowFunctionComponent",
      "matches": {
        "tsrnf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "3f952a29-2d7f-37c2-86bd-1f6197123d58": {
      "content": "<#function ${1:function_name} ${2:param1}>\n\t${0:${VISUAL}}\n</#function>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#function function_name param1>...</#function>",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "3f9f4d98-8522-394f-b2c2-43f36a593fc6": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Method",
      "matches": {
        "usemethod": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "3fa1dc37-c379-3c58-9b13-2e0e1fc4f2d7": {
      "content": "<xsl:attribute name=\"${1:name}\">${2}</xsl:attribute>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "blank",
      "matches": {
        "attribute": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fa2a014-90d4-397b-90ad-4ba3eb9ce16e": {
      "content": "number = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "number": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fa92344-5b6d-3c54-82ee-8bfcc88edbb4": {
      "content": "${1:#:set the_color to }choose color default color ${2:{65536, 65536, 65536\\}}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3facde42-972c-370b-a313-388d02ceb0eb": {
      "content": "border-corner-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fb06339-ec3d-370d-a560-871ef1eca27b": {
      "content": "spec:\n  replicas: {{ .Values.$1.replicaCount }}\n  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}\n  template:\n\tmetadata:\n\t{{- if .Values.$1.podAnnotations }}\n\t  annotations:\n{{ toYaml .Values.$1.podAnnotations | indent 8 }}\n\t{{- end }}\n\t  labels:\n\t\tapp: {{ template \"${2:chartName}.name\" . }}\n\t\tcomponent: \"{{ .Values.$1.name }}\"\n\t\trelease: {{ .Release.Name }}\n\t\t{{- if .Values.$1.podLabels }}\n{{ toYaml .Values.${1:value_key}.podLabels | indent 8 }}\n\t\t{{- end }}\n\tspec:\n\t  {{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n\t  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spec_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fbe88e8-1997-32cc-90c1-b4226cb41b09": {
      "content": "BEGIN TRANSACTION;\n${0:TARGET}\nCOMMIT;",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "BEGIN TRANSACTION": true,
        "TRANSACTION": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fc107f8-ee50-3a72-9f92-cc4e6a099734": {
      "content": "procedure ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure declaration",
      "matches": {
        "procedure_declare": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fc1eafd-a940-39ef-9242-dfae5d12670c": {
      "content": "let ${1:name}: ${2:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fca689a-018b-3e7c-a0e0-b72330ca7952": {
      "content": "${1:ModelName}::model()->deleteByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydelbp": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fcd5463-adf8-309a-9374-4b56eef8f4ac": {
      "content": "if err != nil {\n\tt.Errorf(\"${0:message}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Errorf(...) }",
      "matches": {
        "ter": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "3fceabcd-7fdd-33c9-b67e-20556c25723a": {
      "content": "public ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+-": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fd14633-dfb2-396a-9f3d-076384c7c1f7": {
      "content": "<section class=\"${1}\">\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section.": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fd4963c-3377-3ce2-bc29-69ac2cb860ac": {
      "content": "^${1}^${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "^upper^",
      "matches": {
        "upper": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fd8895c-3ee2-30e1-8c6c-f46827dbd458": {
      "content": "${1:model/screen}${2:X}(${3:x}, ${4:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coord": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fe339ad-7c5f-321b-bf51-cde6ed6763f4": {
      "content": "/**\n * ${1}\n *\n * @author ${2}\n * @version ${3}\n * @copyright ${4}\n * @package ${5:default}\n **/\n/**\n * Define DocBlock\n **/",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "3fe868dc-aa4b-3a7a-908a-8266f1403e34": {
      "content": "create index ${0:$1_$2} on ${1:table}(${2:column});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ind": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fedd4a0-b5c7-3204-bfaf-f56d7911450f": {
      "content": "post {\n\tfailure {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfa": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fef0b1e-00b8-39fa-b14a-3786d5a3973a": {
      "content": "<#if ${1:true}>\n\t${0:${VISUAL}}\n<#else>\n\t${2}\n</#if>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#if condition>...<#else>...</#if>",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "3fef3fe9-b02d-3398-b3e5-7e00a99637d3": {
      "content": "try\n{\n\t${0:${VISUAL}}\n}\nfinally\n{\n\t${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/snippets"
    },
    "3ff2fb98-484f-3d23-84fc-5d1a4b001f59": {
      "content": "beforeUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-before-update",
      "matches": {
        "svelte lifecycle before update": true,
        "svlfbu": true
      },
      "source": "javascript/svelte"
    },
    "3ff6eb65-39d5-3f76-ab9b-6b1345ea6e3e": {
      "content": "setImmediate(() => {\n\t${0}\n});",
      "doc": "setImmediate",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setimmediate",
      "matches": {
        "base set immediate": true
      },
      "source": "javascript/base"
    },
    "4005687e-935e-3f63-980e-7b5d060c55bf": {
      "content": "enum ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "40156692-dea6-3cec-9a2c-38afb2fd843f": {
      "content": "if ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "if ...: ...",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4015cca7-64ea-3c1e-8f14-a4d089d7b7f5": {
      "content": "text-emphasis: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "4015e7fb-54b3-3a9a-a50c-49ac3d761641": {
      "content": "spyOn(${1:object}, \"${2:method}\").andCallThrough()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and call through (coffee)",
      "matches": {
        "sct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "401610e4-2e24-39b5-b2f4-40a8720147f6": {
      "content": "has_and_belongs_to_many",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_and_belongs_to_many",
      "matches": {
        "habtm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "401d9f21-18e9-3e06-b73c-8fb5700e386d": {
      "content": "''${1}''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "''": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4022fa8a-e229-3fab-9000-382aa21cf096": {
      "content": "require(${1:}, quietly = TRUE)",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "402b580f-4593-3295-8b26-11c5c754cd59": {
      "content": "std::deque<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deque": true
      },
      "source": "vim-snippets/snippets"
    },
    "402ebd6a-a1df-38d7-a515-d79b57ffb8c0": {
      "content": "@deprecated ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deprecated": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4037918e-ddca-3c1e-aabe-dcd05cee8683": {
      "content": "if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "4038b109-19a0-371e-b609-6850ff113bb0": {
      "content": "text-align-last: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "403aa247-fce1-3c5c-8cf7-13777a4c69f0": {
      "content": "nnoremap ${1} ${2}<CR>",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nn": true
      },
      "source": "vim-snippets/snippets"
    },
    "40457f4e-29db-3f3b-83af-d849edf9dd72": {
      "content": "if ${1:condition}\n\t${2}\nelse\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "4048421c-12a8-36f7-970c-c4099a740729": {
      "content": "{% section '${1:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section": true
      },
      "source": "vim-snippets/snippets"
    },
    "40539773-6232-35b5-980a-6483f33d9a09": {
      "content": "{%- layout none -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layoutnone-": true
      },
      "source": "vim-snippets/snippets"
    },
    "405b005c-81a4-3e92-a415-c7d455be7438": {
      "content": "border-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      },
      "source": "vim-snippets/snippets"
    },
    "405d4a99-cf1b-3d91-8150-5a866c955832": {
      "content": "${1:name} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      },
      "source": "vim-snippets/snippets"
    },
    "405d7939-af58-3f68-9bf1-0f51466689a2": {
      "content": "page-break-after: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "4062acbd-9ccd-34ba-88d1-76d0c4302a9e": {
      "content": "align-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "406c8925-9b08-3a77-8492-8d1f5f4873a6": {
      "content": "unique case (${1}) begin\n    ${2:'b0}: begin\n        ${3}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case_parallel": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "406ce2c4-bd1a-35ec-aa90-0abacd53df00": {
      "content": "(define ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "406d4f3a-739c-31f2-8a81-2449cb69ea38": {
      "content": "public class ${1:Hello} {\n    public static void Main(string[] args) {\n        System.Console.WriteLine(\"Hello, world!\");\n    }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4076a450-fe89-3d25-8c1d-8ebdefd59b19": {
      "content": "foreach (${1:#:var}; ${2:#:list}) {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach() {}",
      "matches": {
        "foreach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "407d8a91-5d15-334d-9e14-6e7a8a948b25": {
      "content": "var_export($1);$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "Dumb debug helper in cli",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4080aeb9-2db3-3406-ab0d-cb0eca48ef88": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tupdate(${2:parameters}) {\n\t\t\t// the value of `${2:parameters}` has changed\n\t\t}\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-update",
      "matches": {
        "svactionu": true,
        "svelte action update": true
      },
      "source": "javascript/svelte"
    },
    "4084c15c-864e-3d27-a9fd-1ca71248e847": {
      "content": "it('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it",
      "matches": {
        "it": true,
        "jest it": true
      },
      "source": "javascript/jest"
    },
    "40955d54-6052-358b-b69d-5ea0ce20efaf": {
      "content": "import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const ${1:${TM_FILENAME_BASE}} = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React functional component with connected redux and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionalCompomentRedux",
      "matches": {
        "rfcredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "40b12739-3ffa-3eee-99de-7ddec4af5040": {
      "content": "\\\\left\\\\{ ${0:${VISUAL}} \\\\right\\\\}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left\\{ right\\}",
      "matches": {
        "lr{": true
      },
      "source": "vim-snippets/snippets"
    },
    "40b448c0-e39f-3259-ab87-8fcbc32baa97": {
      "content": "for (int ${1:i} = ${2}; $1 >= 0; $1--) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for (int x; ...; x--) {}",
      "matches": {
        "forri": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "40ba699d-a62c-3929-b1a1-3882a340618f": {
      "content": "func (${1:receiver} ${2:type}) ${3:funcName}(${4:w} http.ResponseWriter, ${5:r} *http.Request) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http handler function on receiver",
      "matches": {
        "fumh": true
      },
      "source": "vim-snippets/snippets"
    },
    "40bc1d0a-3d6a-336d-82ff-5b8369f7e9f7": {
      "content": "border-bottom-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "40c13549-7363-372e-b820-e7b2fd2f6c70": {
      "content": "static_assert( ${1}, \"${2}\" );${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "static_assert(,\"\")",
      "matches": {
        "static_assert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "40d06fd4-b522-36a8-bf36-a2335bedda91": {
      "content": "it { should redirect_to ${0:url} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "40d8d9c0-d8a4-385b-87da-5aeceb6c2b59": {
      "content": "while ${1}\n\t${0:${VISUAL}}\nendw",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "40da6b70-d797-345b-9c01-9018e6b23339": {
      "content": "throw ${0:#:exception}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "40e13f43-bda2-30a7-bf34-b1e9bc6816ad": {
      "content": "echo CHtml::listData(array(${1}),'${2:valueField}', '${3:textField}','${0:groupField}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhld": true
      },
      "source": "vim-snippets/snippets"
    },
    "40e7c7a7-bdad-31ce-811b-9fdb8aa15290": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} open ${4:Account} ${8:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "open account",
      "matches": {
        "open": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "40ebb6ee-f801-3a5f-b77f-b352b02c127e": {
      "content": "// multiply the current matrix by a general scaling matrix\ngl.glScalef(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl scale f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "40f20cf4-7e3e-3901-b6c0-86fa97bc0e6e": {
      "content": "${1:deferred}.rejectWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drejw": true
      },
      "source": "snippets/coffee"
    },
    "40f2538f-a52c-30ea-8f25-92add467b5aa": {
      "content": "<p>${1}</p>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "40f88285-fb4d-3067-9811-3bbaa94c953a": {
      "content": "grid-template: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "41093ef2-b482-36d9-a8b0-140145ab2c98": {
      "content": "before_destroy $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_destroy",
      "matches": {
        "befd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "410e6a2e-3392-334f-867b-05a6ed621796": {
      "content": "{% for ${1:#:var} in ${2:#:list} %}\n  ${0:TARGET}\n{% endfor%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "for in endfor",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "41138df3-110e-3961-bf50-719cf2ac60ae": {
      "content": "place-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "4113ea95-90fc-3f0d-b401-2ae70dcd5026": {
      "content": "<%inherit file=\"${1:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "inherit",
      "matches": {
        "inherit": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "411c55fc-f579-3c6c-966c-ff30dfe024d5": {
      "content": "Page Should Not Contain Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Button",
      "matches": {
        "psncb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "41250e5a-7c9c-3531-b109-92bc4f415752": {
      "content": "\\begin{align*}\n\t${0:${VISUAL}}\n\\end{align*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Align without a number",
      "matches": {
        "alnn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "412cbccb-408d-38a1-98c6-7a2a02e00a68": {
      "content": "<link rel=\"alternate\" href=\"${1:rss.xml}\" title=\"RSS\" type=\"application/atom+xml\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:rss": true
      },
      "source": "vim-snippets/snippets"
    },
    "4141498a-cb24-3366-8b39-94aacd868b03": {
      "content": "else if ${1:false} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "41592d44-c7b1-33ab-910d-38d6d137e5f4": {
      "content": "place-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "415a1a35-7c20-38ac-8dd3-ec1cac2c0d26": {
      "content": "import ${1:Data.List} as ${0:List}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impq": true
      },
      "source": "vim-snippets/snippets"
    },
    "41677648-281f-3cf3-947a-c9df010b1d15": {
      "content": "initial begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ini": true
      },
      "source": "vim-snippets/snippets"
    },
    "416ea1c5-89d4-3d83-9dbd-d732b0f973b0": {
      "content": "${1:attribute}=\"${2:property}\" attr+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr+": true
      },
      "source": "vim-snippets/snippets"
    },
    "41703f6a-5146-3993-b32b-1d93d01420e2": {
      "content": "$this->form_validation->set_rules(\"${1:field}\", \"${2:label}\", \"${3:trim|required}\");${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_validation-set_rules": true
      },
      "source": "vim-snippets/snippets"
    },
    "417549cc-71a9-314c-a3bc-f1d38bb3524a": {
      "content": "foreach(${1:elem}; ${2:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "41765672-9cb5-37ea-ac3a-15668ae7081a": {
      "content": "form_input(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_input": true
      },
      "source": "vim-snippets/snippets"
    },
    "417b3dbe-caa3-351a-b624-a313d4ddd66c": {
      "content": "expect(${1:target}).toBeNull();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be null (js)",
      "matches": {
        "en": true
      },
      "source": "vim-snippets/snippets"
    },
    "417c23ac-f1a3-3af5-9980-f12a31565aaa": {
      "content": "public ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts public method",
      "matches": {
        "tpmet": true
      },
      "source": "vim-snippets/snippets"
    },
    "418c5659-d4f1-35c8-829f-d42139f78a46": {
      "content": "import { Injectable } from '@angular/core';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor() { }\n\t$0\n}",
      "doc": "Angular Service with Injectable ProvidedIn Root",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-service",
      "matches": {
        "a-service": true,
        "angular service": true
      },
      "source": "javascript/angular"
    },
    "41955fe2-0c44-3200-b4a6-906d34c17781": {
      "content": "$this->${1:method}()->shouldNotContain(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotContain('value')",
      "matches": {
        "sncontain": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "419e6f2f-7e95-34a1-88b1-8a308dad88c9": {
      "content": "border-right-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      },
      "source": "vim-snippets/snippets"
    },
    "41a054bb-2164-30a5-89e6-1491ff876e83": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "default: ...",
      "matches": {
        "default": true
      },
      "source": "gosnippets/snippets"
    },
    "41a2717f-4eb7-396d-a30e-1d8ac488cecd": {
      "content": "mutable",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mu": true
      },
      "source": "vim-snippets/snippets"
    },
    "41a75526-c9c1-3c1a-8f59-878cec5fb142": {
      "content": "<input type=\"week\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:week": true
      },
      "source": "vim-snippets/snippets"
    },
    "41a84f23-57e1-36b4-bc47-08be6c6d28b6": {
      "content": "border-bottom-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      },
      "source": "vim-snippets/snippets"
    },
    "41ae7271-d0cd-3a75-ba55-d2006db557e9": {
      "content": "array_walk($${1:foo}, function(&$${2:v}, $${3:k}) {\n\t$$2 = ${0};\n});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "41b7f62f-47e0-3d08-9e55-add7a225e96a": {
      "content": "class ${1:MODEL_NAME}ListView(ListView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic List View",
      "matches": {
        "listview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "41b85cfc-fe7b-358f-ba5a-e5292a4109b2": {
      "content": "for (my $${1:#:var} = 0; $$1 < ${2:#:expression}; $$1++) {\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "41bdb14e-e64d-341d-85b6-8f8243a2a86e": {
      "content": "if !exists('b:undo_ftplugin')\n  let b:undo_ftplugin = ''\nendif\n${1}\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if !exists('b:undo_ftplugin')",
      "matches": {
        "b:undo_ftplugin": true,
        "undo_ftplugin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "41d0847a-1818-3aa4-abfe-0002f2819d9a": {
      "content": "if ${1:condition}, do: ${2}, else: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do: .. else:",
      "matches": {
        "ife:": true
      },
      "source": "vim-snippets/snippets"
    },
    "41d15989-4849-343d-9234-373f1a641c6d": {
      "content": "${1:name} := ${0:value}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Variable declaration :=",
      "matches": {
        ":": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "41d4debf-4bc6-3bc5-b829-7ae9c0e28a67": {
      "content": "func Example${1:Method}() {\n\t${0:${VISUAL}}\n\t// Output:\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func ExampleXYZ() { ... }",
      "matches": {
        "example": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "41e1b264-5ccf-3343-be94-c8869545fb13": {
      "content": "on:${1:click}=\"{() => ${2:count += 1}}\"",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-inline",
      "matches": {
        "svelte on event inline": true,
        "svon-inline": true
      },
      "source": "javascript/svelte"
    },
    "41e6056b-c384-3f0b-9775-36f510121681": {
      "content": "text-transform: lowercase",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "41e61985-c53b-3a13-ac64-b9d8909be31b": {
      "content": "nfs(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfs": true
      },
      "source": "vim-snippets/snippets"
    },
    "41f05aa5-c0bd-3b2e-8259-9fd2262208da": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "41f18d88-fa9d-3014-9952-27def5b20272": {
      "content": "(${1}) => ${0:${VISUAL}}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "() =>",
      "matches": {
        "af": true
      },
      "source": "snippets/javascript"
    },
    "41f3287b-dec8-3d6b-b515-69ee0c97dc20": {
      "content": "class ${1:class_name}:\n\t\"\"\"${0:description}\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      },
      "source": "vim-snippets/snippets"
    },
    "41f341de-8ea6-36c6-aa2c-c0e03a58d488": {
      "content": "chapter = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chapter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "41f3a5ce-6187-3d5d-9063-20c401eb8df6": {
      "content": "border-bottom: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "41f82fd1-81e0-3c94-8d88-7ba0ee115d20": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      },
      "source": "vscode-react/snippets"
    },
    "41fd4d7c-ca5e-3768-89fc-8db3d2b7ed36": {
      "content": "{% decrement ${0:variable} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "decrement": true
      },
      "source": "vim-snippets/snippets"
    },
    "421e3bda-eb5a-3744-9915-e72458e10600": {
      "content": "padding-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4220070f-dcf0-3a17-ae32-5f9d08dd49b4": {
      "content": "\\${${1:name}}=    Set Variable    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Variable",
      "matches": {
        "sv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4229407c-20e4-393a-806e-0500748485f0": {
      "content": "${1:obj}.keydown(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kdown": true
      },
      "source": "snippets/javascript"
    },
    "422acabc-e254-3968-8995-0e1bf7e407e5": {
      "content": "internal int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&": true
      },
      "source": "vim-snippets/snippets"
    },
    "422c5ca2-64c7-3cc7-a70d-309410311902": {
      "content": "\\textsf{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsf": true,
        "textsf \\textsf{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "42325915-2912-3b89-8e40-8b7cf0d14438": {
      "content": "def ${1:#:method_name}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "def ... end",
      "matches": {
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "42382191-872a-3663-a66d-7afa1ed5e4c0": {
      "content": "/**\n *\t${1:@private}$0\n */\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docc": true
      },
      "source": "vim-snippets/snippets"
    },
    "423addaf-60bc-35a6-bf23-9df1a987009e": {
      "content": "table-layout fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "423fd44a-d49c-3328-8fc8-c1e4e74574be": {
      "content": "@safe const pure nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@safe const pure nothrow (scpn)",
      "matches": {
        "scpn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "42438c45-f25b-3969-bdc0-7e6a3da1466a": {
      "content": "import React, { Component } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { Component }",
      "matches": {
        "imrc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "4243c814-d88f-343e-ab90-01d7b4318423": {
      "content": "justify-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "424682e1-05b8-3a71-b0f4-d6df7c04ef8a": {
      "content": "elseif {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "424833f3-a8c9-33ec-8475-af9ba4eee783": {
      "content": "{% trans %}\n\t$1\n{% endtrans %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "translation",
      "matches": {
        "trans": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "424999fe-fbc8-3f05-95e7-604b4e5022fc": {
      "content": "border-corner-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "424a450f-1163-3bc7-b6f2-43e27e96f7bd": {
      "content": "display block",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "425d1775-ac44-364d-979e-4ec4ad13f6e0": {
      "content": "/*\n *\t${0: comment ...}\n */",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4277dc32-811b-3ef0-873a-35fd5e9363f4": {
      "content": "resize: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "427e5fa6-0c71-3607-bf62-f838f7afd2f0": {
      "content": "{% include '${1:snippet}', ${2:variable}: ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "includewith": true
      },
      "source": "vim-snippets/snippets"
    },
    "4286fa1a-d30b-3155-87e1-e8483e5a25aa": {
      "content": "@doc \"\"\"${0:TARGET}\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "@doc \"\"\"...\"\"\"",
      "matches": {
        "doc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "428a2816-9b9d-3b59-9102-22d18feeea25": {
      "content": "import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: ${1:'root'} })\nexport class ${2:YourResolver} implements Resolve<${3:ObjectToResolve}> {\n\tresolve(route: ActivatedRouteSnapshot): Observable<${3:ObjectToResolve}> | Promise<${3:ObjectToResolve}> | ${3:ObjectToResolve} {\n\t\treturn ${0};\n\t}\n}",
      "doc": "Angular Resolver",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Resolver",
      "matches": {
        "a-resolver": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "429181f9-065e-39e0-b9ab-1ea8fd50a4ae": {
      "content": "(map #(${1:lambda}) ${0:coll})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapl": true
      },
      "source": "vim-snippets/snippets"
    },
    "42a1a1db-7ff0-34c0-b6f7-e1c907fc9f05": {
      "content": "import React from 'react'\nimport renderer from 'react-test-renderer'\n\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setupReactTest",
      "matches": {
        "stest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "42acab30-c5a0-3203-90d3-756c9148ba6d": {
      "content": "place-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "42acfed6-4507-3905-9b8d-8eaabb5cfe69": {
      "content": "font-weight: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      },
      "source": "vim-snippets/snippets"
    },
    "42b7261e-9075-30e4-94b2-8844f5664124": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}\n",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "42c448e3-2c41-3e0f-9dce-39e085557222": {
      "content": "// Package $1 provides ${2:...}\npackage ${1:main}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package ...",
      "matches": {
        "package": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "42cc1ba8-d585-30af-86e7-d393c27d99cf": {
      "content": "font-style: ${1:normal/italic/oblique};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-style:   normal:italic:oblique (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "42cd431c-ad1e-3bc0-8631-85c76e1b6d14": {
      "content": "text-wrap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      },
      "source": "vim-snippets/snippets"
    },
    "42d2620c-116e-3842-bdfe-b9bade437495": {
      "content": "bind:this={${1:dom_node}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-this",
      "matches": {
        "svbind-this": true,
        "svelte bind this": true
      },
      "source": "javascript/svelte"
    },
    "42d2d0da-763b-3272-9697-d3750d2fa92d": {
      "content": "<% require 'pry'; binding.pry %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      },
      "source": "vim-snippets/snippets"
    },
    "42d526fb-80b6-33c4-a1c0-6a19ebaf9ed5": {
      "content": "generic\n\ttype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "generic type",
      "matches": {
        "generic": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "42e1f287-9082-3192-b4fb-315e3284bea2": {
      "content": "$_SERVER['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "S": true
      },
      "source": "vim-snippets/snippets"
    },
    "42e279ff-6f23-3d8d-afff-0b9ddd0d0439": {
      "content": "public ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create public field",
      "matches": {
        "tpfi": true
      },
      "source": "vim-snippets/snippets"
    },
    "42e985ef-82d1-3eb4-b70b-970161812fee": {
      "content": "!important",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "!": true
      },
      "source": "vim-snippets/snippets"
    },
    "42ec873b-eb0c-3c1a-9f1e-ce7c93ee3b42": {
      "content": "background-repeat: no-repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "42f8c7ff-038f-3369-8a69-d45ee4ef54fd": {
      "content": "process.stderr",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stderr",
      "matches": {
        "stderr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "42fa6572-f2fb-305b-8fb3-8a80a20d8ca2": {
      "content": "console.warn(${1:object});",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleWarn",
      "matches": {
        "cwa": true
      },
      "source": "vscode-javascript/snippets"
    },
    "42fae799-c534-3db4-91d5-4670a029d9ca": {
      "content": "isset(${1:var})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "isset",
      "matches": {
        "is": true
      },
      "source": "vim-snippets/snippets"
    },
    "42fcc88d-f683-32c2-89cb-c8bbc13fa428": {
      "content": "while (${1:#:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "42ff16e7-7e5d-31f1-9d3b-692524e997e6": {
      "content": "if ${1:condition}; then\n\t${0:${VISUAL}}\nfi",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "4302de5e-f47d-3c2d-a9c1-31cd66c1520a": {
      "content": "\\$this->",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/snippets"
    },
    "430cb135-5555-3ec9-accb-56089f513304": {
      "content": "&#x232B;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backspace": true
      },
      "source": "vim-snippets/snippets"
    },
    "430ec086-7766-3211-b0e4-bdcf538e4a26": {
      "content": "$.param(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "snippets/javascript"
    },
    "43104fe5-9298-3f75-981e-2dea3dc03212": {
      "content": "${1:source} instanceof ${2:Object}",
      "doc": "instanceof",
      "filetype": "base",
      "grammar": "lsp",
      "label": "instanceof",
      "matches": {
        "base instanceof": true
      },
      "source": "javascript/base"
    },
    "43124707-e669-310a-9979-d8e0e97de698": {
      "content": "defp ${1:name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "defp .. end",
      "matches": {
        "defp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "431c3635-8ff8-384d-aaa6-5a00705273e8": {
      "content": "switch(${1:expression}) {\n\tcase '${3:case}':\n\t\t${4}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${2}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "4326149c-1ea8-3239-8b20-0b3bd7b2ee93": {
      "content": "match ${1:(* e1 *)} with\n| ${2:p} -> ${3:e2}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "432efc99-c8a7-3236-828e-8abc82d9bf4c": {
      "content": "${1:move }|$2| {\n\t$3\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Closure, anonymous function (block)",
      "matches": {
        "|}": true
      },
      "source": "vim-snippets/snippets"
    },
    "4330eb71-53c0-3862-9638-f89e7c66b14d": {
      "content": "match ${1:list} with\n| [] -> ${2:()}\n| x::xs -> ${3:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "pattern match on a list",
      "matches": {
        "matchl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "43310e94-942a-3989-96a5-d0f62486297c": {
      "content": "for ${1:item} <- ${2:items}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for:": true
      },
      "source": "vim-snippets/snippets"
    },
    "433356f4-93b9-3d29-ae97-53e872adbaa3": {
      "content": "class ${1:class_name}(${2:class_params})\n\t${0:/* members/methods */}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/snippets"
    },
    "4338d312-c883-381e-beee-fdd063cf2b42": {
      "content": "font-emphasize-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      },
      "source": "vim-snippets/snippets"
    },
    "433973d4-a34e-3fc6-bf0b-daa3a1ac5ffe": {
      "content": "class ${1:#:Name} ${2::} ${3:Parent}${4:,} ${5:Interface} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4339becb-bf72-3c63-8869-fc04d25675a3": {
      "content": "_.pad(${string}, ${length}, ${chars})",
      "doc": "_.pad('abc', 8);\n// => '  abc   '\n\n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n\n_.pad('abc', 3);\n// => 'abc'\n\nPads `string` on the left and right sides if it's shorter than `length`.\nPadding characters are truncated if they can't be evenly divided by `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pad",
      "matches": {
        "lodash pad": true
      },
      "source": "javascript/lodash"
    },
    "43406c10-741b-32bc-98f0-0637efbbb3dd": {
      "content": "var $1 = new sap.m.Text({\n\t\t\ttext :$2,\n\t\t\ttextDirection :$3,\n\t\t\tvisible :$4,\n\t\t\twrapping : $5,\n\t\t\ttextAlign : $6,\n\t\t\twidth :$7,\n\t\t\tmaxLines :$8\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmtext": true
      },
      "source": "vim-snippets/snippets"
    },
    "4341d7fc-386d-33d9-b045-9fd9069634f0": {
      "content": "{% pullquote %}\n${1:text} {\" ${2:quote} \"} ${0:text}\n{% endpullquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pullquote": true
      },
      "source": "vim-snippets/snippets"
    },
    "434ebd29-f685-3b04-9ffe-f76199060bd4": {
      "content": "const {${2:propertyName}} = ${1:objectToDestruct}",
      "doc": "Creates and assigns a local variable using object destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingObject",
      "matches": {
        "dob": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "436259fb-0bd3-3f78-a1ef-a675c9a3065b": {
      "content": "&#x21E5;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tab": true
      },
      "source": "vim-snippets/snippets"
    },
    "4364fd36-8950-3bf1-87ed-1b4eb59d0a67": {
      "content": "(let [bench-before (System/currentTimeMillis)]\n  ${1:TARGET}\n  (prn 'Took (- (System/currentTimeMillis) bench-before) 'msec))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bench": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "43763979-65f2-351b-99c1-b379361e4ee4": {
      "content": "curveDetail(${0:detail});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveDetail": true
      },
      "source": "vim-snippets/snippets"
    },
    "4379faf6-7adc-3338-af60-2988a7b70e05": {
      "content": "NSBezierPath *${1:#:path} = [NSBezierPath bezierPath];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bez": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "437cdf68-f913-3434-bbda-aaca2f041744": {
      "content": "<meter>${0}</meter>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meter": true
      },
      "source": "vim-snippets/snippets"
    },
    "438083a0-0b4d-3138-89fb-781acaebb6de": {
      "content": "${1:s:V}.import('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "s:V.import('...')",
      "matches": {
        "vital_import_without_let": true
      },
      "source": "neosnippets/vim"
    },
    "43861878-ccba-3d2e-80cc-d784b51e7a53": {
      "content": "NSMutableDictionary *${1:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dict": true
      },
      "source": "vim-snippets/snippets"
    },
    "4389fbcd-8549-3d9f-9760-37d32dcc434e": {
      "content": "rep(${1:x}, ${2:...})",
      "doc": "Rep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "rep",
      "matches": {
        "rep": true
      },
      "source": "vscode-R/snippets"
    },
    "438d1bb6-490a-3aa4-b4b5-809a8e3a14ab": {
      "content": "grid-row ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4392a16e-9b9f-3d49-b2ea-82f45bd281bd": {
      "content": "select { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      },
      "source": "vim-snippets/snippets"
    },
    "4392b1b5-0616-3d92-bcec-3738201be376": {
      "content": "render text: '${1:text to render}', status: ${0:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rts": true
      },
      "source": "vim-snippets/snippets"
    },
    "43988c3b-e8db-33df-b47b-4bb99b4b8d29": {
      "content": "position: ${1:static/relative/absolute/fixed};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "position: type (position)",
      "matches": {
        "position": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "439de439-1fda-396f-9e6c-b4cf3c910712": {
      "content": "export const ${1:actionName} = (payload) => ({\n\ttype: ${3:type},\n\tpayload\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reduxAction",
      "matches": {
        "rxaction": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "439f5028-ba2a-3f73-b486-1f7181a87b4f": {
      "content": "clip: rect(${1:0} ${2:0} ${3:0} ${0:0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "439f727b-01d4-345a-a138-571c063f0ad2": {
      "content": "$(this)",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "this": true
      },
      "source": "snippets/javascript"
    },
    "43a97c20-1dec-30fd-a261-52d6f27cfbd6": {
      "content": "System.Diagnostics",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.d": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "43bea469-f591-3145-885d-b1c0426c6b5f": {
      "content": "<table>\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table": true
      },
      "source": "vim-snippets/snippets"
    },
    "43bef9b4-c3ec-321b-9bc4-0e363a4721a4": {
      "content": "vertical-align sub",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "43c2c4ed-5022-3e22-8c34-2996814ae150": {
      "content": "else if(${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "43c9acfb-b453-37c6-9574-59f5bb8d3a11": {
      "content": "${1:$foo}->get${0:Bar}();",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$g": true
      },
      "source": "vim-snippets/snippets"
    },
    "43cc880f-5066-3400-b4db-3619500db513": {
      "content": "default:\n    ${0:TARGET}\n    break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "43cf975e-cbe6-3c65-8f1e-fee8ae257456": {
      "content": "normal(${1:nx}, ${2:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "normal": true
      },
      "source": "vim-snippets/snippets"
    },
    "43d9e453-8a1e-3895-b765-d1a5334a1c88": {
      "content": "\\\\begin{${1:p/b/v/V/B/small}matrix}\n\t${0:${VISUAL}}\n\\\\end{$1matrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "smart matrix environment",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "43dc30f4-63d8-3ede-8765-9b40a0f143c2": {
      "content": "<p id=\"${1}\">${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p#": true
      },
      "source": "vim-snippets/snippets"
    },
    "43df6a1d-2abf-34f1-b138-5786f4e7878c": {
      "content": "collection do\n\t${1:get :${2:action}}\n\t${3:put :${4:action}}\n\t${5:post :${6:action}}\n\t${7:delete :${8:action}}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "collection routes",
      "matches": {
        "col": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "43e1f6f1-2ef7-3a77-a307-65b050672105": {
      "content": "has ${1:Type} ${2:$!identifier};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      },
      "source": "vim-snippets/snippets"
    },
    "43e9aad4-e7d1-327d-a244-37b80e12026c": {
      "content": "asm {\n\t${1}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      },
      "source": "vim-snippets/snippets"
    },
    "43f3c003-973c-39c0-9d43-00364f607755": {
      "content": "@include \"${1}\"${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "@include",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "43f61aa6-ebd5-332d-8208-35ca0bc0efcd": {
      "content": "typedef ${1:#:base_type} ${2:#:custom_type};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typedef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "43fb01f4-96af-3a6b-aa9b-086b7962670c": {
      "content": "${${1:1}:${0:text}}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      },
      "source": "vim-snippets/snippets"
    },
    "43fbaa3f-7ed8-3f56-a6ec-8852a29b4dbf": {
      "content": "cursor: hand;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      },
      "source": "vim-snippets/snippets"
    },
    "44032df6-e872-3430-b53e-bf3bf4c21f94": {
      "content": "\\begin{overlay}\n\t${1:TARGET}\n\\end{overlay}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{overlay} \\overlay": true,
        "overlay": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4403371f-d9df-3e60-b679-a1b824361134": {
      "content": "_.add(${augend}, ${addend})",
      "doc": "_.add(6, 4);\n// => 10\n\nAdds two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-add",
      "matches": {
        "lodash add": true
      },
      "source": "javascript/lodash"
    },
    "440aa2e0-bbb5-3fcb-bf1b-e7da6a6a2b61": {
      "content": "top: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "440e7dea-624d-32aa-ae96-f70ce0bce820": {
      "content": "$.getJSON '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getjson": true
      },
      "source": "snippets/coffee"
    },
    "441c5231-a171-36b2-b4eb-351b7cb6dfd6": {
      "content": "<svelte:component this={${1:component}} />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component",
      "matches": {
        "svc": true,
        "svelte component": true
      },
      "source": "javascript/svelte"
    },
    "4428617c-55f9-3d8d-9207-73260fb5c97d": {
      "content": "align-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "4428f624-09a5-3cac-a447-770c56fac903": {
      "content": "class $1Inline(admin.StackedInline):\n\t'''\n\tStacked Inline View for $1\n\t'''\n\tmodel = ${2:$1}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = ($6,)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Stacked Inline",
      "matches": {
        "stackedinline": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "442e5600-21dd-33f7-a4d7-0f674e35c6bf": {
      "content": "include(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "include source code",
      "matches": {
        "incl": true
      },
      "source": "vim-snippets/snippets"
    },
    "442ef6a2-c8c2-354a-acaf-d70e203f1ad3": {
      "content": "## no critic\nour $VERSION = '${0:version}';\neval $VERSION;\n## use critic",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vers": true
      },
      "source": "vim-snippets/snippets"
    },
    "443651bf-3e32-33f5-849a-34ccdcb54142": {
      "content": "while ${1:conidition}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "443c2228-526f-3050-a157-3bcc3f579a55": {
      "content": "{VISUAL}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "443ef73a-3f8b-3912-8d73-4af2f992b0aa": {
      "content": "if ($1 != null)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if not null",
      "matches": {
        "ifnn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4441b470-2c1f-36e5-9b95-f9424f58697b": {
      "content": "list-style-type: ${1:decimal/decimal-leading-zero/zero};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: numeric (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4446c54f-ee99-3d71-bb05-9fb5e92b79bf": {
      "content": "while (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "444bfe86-55c0-3c22-97cc-fb2254d48c64": {
      "content": "{% endhtml %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endhtml",
      "matches": {
        "endhtml": true
      },
      "source": "vim-snippets/snippets"
    },
    "444d0462-aef6-34e2-a0c0-b12e5b4ff1f8": {
      "content": "auto ${1:f} = File(${2:\"useful_info.xml\"}, ${3:\"rw\"});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "44507bba-b948-34b8-8ad8-bc3933eaf0a9": {
      "content": "<i>${0}</i>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i": true
      },
      "source": "vim-snippets/snippets"
    },
    "445541aa-38ad-3610-aa80-f9204c2ad1a9": {
      "content": "@unless\n\t${1:${VISUAL}}\n@endunless",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@unless directive",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4463715d-56c0-34da-a5e7-c7275c08bcc0": {
      "content": "let ${1} = ${0};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "446a9694-5c26-383f-813d-c8809d2fe6f0": {
      "content": "${1:obj}.clone()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clone": true
      },
      "source": "snippets/javascript"
    },
    "44772de8-8e07-37cb-8c1f-cb30165f538a": {
      "content": "border-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4484fac2-550e-3f29-b791-9e9a655de088": {
      "content": "class:${1:name}={${2:condition}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class",
      "matches": {
        "svcl": true,
        "svelte class": true
      },
      "source": "javascript/svelte"
    },
    "4489871d-9f3e-309d-b6a2-b3328fb3ff76": {
      "content": "std::stack<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stack": true
      },
      "source": "vim-snippets/snippets"
    },
    "448d44ff-64d6-3103-9886-0296b321f3f7": {
      "content": "border-top-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "44967d5b-e530-3feb-9ba4-11116ff6c827": {
      "content": ":nth-last-child($0)",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "44998767-017a-39ea-b92b-5224c37fd4cd": {
      "content": "\\\\begin{equation}\n\t${0:${VISUAL}}\n\\\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "equation environment",
      "matches": {
        "eq": true
      },
      "source": "vim-snippets/snippets"
    },
    "4499f67e-03fd-3f47-98a1-0d3a923d8346": {
      "content": "font-weight: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      },
      "source": "vim-snippets/snippets"
    },
    "44a3ef03-197c-3742-9a33-56ac54f9c894": {
      "content": "$${1:arrayName} = ['${2}' => ${3}];",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$... = ['' => ]",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/snippets"
    },
    "44ad198c-9462-30aa-b83a-304b6ca00837": {
      "content": "expect(${1:target}).toMatch(${2:pattern})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to match (coffee)",
      "matches": {
        "em": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "44ad6235-eae9-3365-8085-7077b8f18327": {
      "content": "<footer id=\"${1}\">\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer#": true
      },
      "source": "vim-snippets/snippets"
    },
    "44b60a93-79c7-3339-a181-7a08f7eb10bc": {
      "content": "expect($1).toHaveBeenCalledTimes($0);",
      "doc": "returns true if the spy has been called given times",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalledtimes",
      "matches": {
        "jest expect tohavebeencalledtimes": true,
        "thbct": true
      },
      "source": "javascript/jest"
    },
    "44b76bad-cc0f-356a-b632-2241f2bd8d41": {
      "content": "justify-content: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "44c2b256-fcdf-3022-9572-a7c10de46759": {
      "content": "{% block ${1:#:name} %}\n\t${0:TARGET}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% block ... %} ... {% endblock %}",
      "matches": {
        "bl": true,
        "block": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "44c48b10-3947-344f-805f-5bedc86bc64e": {
      "content": "<router-link $1>$2</router-link>$0",
      "doc": "router-link element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerlink",
      "matches": {
        "routerlink": true,
        "vue routerlink": true
      },
      "source": "javascript/vue"
    },
    "44c535d7-2f52-31cf-8488-e1e547268f15": {
      "content": "[org.clojars.hozumi/clj-glob \"0.1.2\"]\n(:require [org.satta.glob :as g])\n(g/glob \"${0:TARGET}\")",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir-glob": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "44cfe3b9-6c09-3b76-a388-f4ebe4a2bbc4": {
      "content": "t.binary :${1:title}${2:, limit: ${3:2}.megabytes}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.binary (tcbi)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "44d204ba-7d93-389e-903a-f2dc58803d3a": {
      "content": "expect(${1:target}).not$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not (coffee)",
      "matches": {
        "notx": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "44d702f4-6272-3146-8c08-5e42a8acee15": {
      "content": "place-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "44d77980-5ce5-30e3-b61f-39005d5a5977": {
      "content": "<?= ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?=": true
      },
      "source": "vim-snippets/snippets"
    },
    "44dbd0ae-12e8-387e-9bf3-8f75522c580a": {
      "content": "{% verbatim %}\n\t${0:TARGET}\n{% endverbatim %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% verbatim %} ... {% endverbatim %}",
      "matches": {
        "verbatim": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "44e825ba-dd1e-3ce9-9d13-f61fb4d2d5a5": {
      "content": "![${1:id}]: ${2:url}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:": true
      },
      "source": "vim-snippets/snippets"
    },
    "44ec70b9-3fde-3b77-9de4-a8a779fbe1e5": {
      "content": "module.exports = {\n\tcss: {\n\t\tloaderOptions: {\n\t\t\t${1:sass}: {\n\t\t\t\tdata: `${2:@import '@/styles/_variables.scss';}`\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "vue.config.js",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue.config.js Import",
      "matches": {
        "vconfig": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "44f50792-5cdb-3a89-a4f3-abd69b110ae1": {
      "content": "// import java.nio.IntBuffer;\n// import java.nio.FloatBuffer;\n// import com.sun.opengl.util.BufferUtil;\n// You might need to create four buffers to store vertext data, normal data, texture coordinate data, and indices in vertex arrays\nIntBuffer bufferObjects = IntBuffer.allocate(${1:4});\ngl.glGenBuffers($1, bufferObjects);\nint vertexCount = ${2:3};\nint numCoordinates = ${0:3};\n// vertexCount * numCoordinates\nFloatBuffer vertices = BufferUtil.newFloatBuffer(vertexCount * numCoordinates);\nfloat[] v = {0.0f, 0.0f, 0.0f,\n\t\t\t\t\t\t 1.0f, 0.0f, 0.0f,\n\t\t\t\t\t\t 0.0f, 1.0f, 1.0f};\nvertices.put(v);\n// Bind the first buffer object ID for use with vertext array data\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, bufferObjects.get(0));\ngl.glBufferData(GL.GL_ARRAY_BUFFER, vertexCount * numCoordinates * BufferUtil.SIZEOF_FLOAT, vertices, GL.GL_STATIC_DRAW);",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl gen buffers",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "44fde495-01be-31a4-ad30-77ec5693243e": {
      "content": "if {${1}} {\n\t${2}\n} else {\n\t${0:# else...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "4507b05f-acd0-38ea-a530-2c7e2e3ca481": {
      "content": "{% post_url ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "post_url": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4508dd49-107e-3b64-ba3a-42f1867ea87c": {
      "content": "${1:obj}.keyup (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kup": true
      },
      "source": "snippets/coffee"
    },
    "451b426e-b85d-3d68-a84e-11620f7cf416": {
      "content": "$.data('${1:selector expression}', '${2:key}'${3:, 'value'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dataa": true
      },
      "source": "snippets/coffee"
    },
    "451d1582-e334-3001-9590-b513e05e0a3d": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\">\n\t${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "vim-snippets/snippets"
    },
    "452ace76-00fe-33a8-a503-499d7411d7c0": {
      "content": "sap.ui.controller(\"$1\", {\n   onInit: function(){\n   },\n   onAfterRendering: function() {\n   },\n   onAfterRendering: function() {\n   },\n   onExit: function() {\n   },\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapcomponent": true
      },
      "source": "vim-snippets/snippets"
    },
    "453f3e3a-478c-3f07-a86c-dcf08907202c": {
      "content": "text-align=\"center\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4541c035-d3bc-3c05-ac48-b05aebc61f2d": {
      "content": "main(_) -> ${0}.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "454ae958-3129-3963-bbd3-eac08751e58c": {
      "content": "border-bottom-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      },
      "source": "vim-snippets/snippets"
    },
    "454e8da4-5fc3-3772-ad26-ba66f85a58cf": {
      "content": "border-bottom-right-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "454f0115-2f33-339b-abc0-4e5569742fcd": {
      "content": "| remove_first: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remove_first": true
      },
      "source": "vim-snippets/snippets"
    },
    "455297ff-657d-3807-8246-334ae3fb55c5": {
      "content": "text-decoration: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "45557c49-f5d5-31b3-a3c0-495faeaed545": {
      "content": "@constructor",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@constructor",
      "matches": {
        "@constr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4557f46d-1c80-3845-94c5-9950e936db3c": {
      "content": "_.isFinite(${value})",
      "doc": "_.isFinite(3);\n// => true\n\n_.isFinite(Number.MIN_VALUE);\n// => true\n\n_.isFinite(Infinity);\n// => false\n\n_.isFinite('3');\n// => false\n\nChecks if `value` is a finite primitive number.\n\n**Note:** This method is based on\n[`Number.isFinite`](https://mdn.io/Number/isFinite).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isfinite",
      "matches": {
        "lodash isfinite": true
      },
      "source": "javascript/lodash"
    },
    "4562025b-770a-3cf1-b80b-778066fe22f5": {
      "content": "{\n\t\"type\": \"select\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"options\": [\n\t\t{\n\t\t\t\"group\": \"${5}\",\n\t\t\t\"value\": \"${6}\",\n\t\t\t\"label\": \"${0}\"\n\t\t}\n\t],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_select": true
      },
      "source": "vim-snippets/snippets"
    },
    "4562167b-0f4f-38a9-bcf8-443fe1070c63": {
      "content": "[[${1}]] ${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[[": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4570701d-2773-35b1-bb8f-cdb7c7db0005": {
      "content": "render action: \"${1:action}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (action)... (ra)",
      "matches": {
        "ra": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "457e1738-68b5-325c-b5fb-223c6de67194": {
      "content": "Yii::app()->request->isAjaxRequest",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yisajax": true
      },
      "source": "vim-snippets/snippets"
    },
    "4580179f-fbbb-39a6-af80-1df36175477a": {
      "content": "display: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "45813195-ddd9-358e-8ce9-24307dbbd9ee": {
      "content": "scope=\"${1:row}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scope": true
      },
      "source": "vim-snippets/snippets"
    },
    "458479f7-e076-3be3-83dd-e8e421c57baa": {
      "content": "stage('${1:Test}'){\n\tsteps {\n\t\tsh '${2:make check}'\n\t\tjunit '${3:reports/**/*.xml}'\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stage": true
      },
      "source": "vim-snippets/snippets"
    },
    "45884bf1-a02c-346f-a59c-7f016bef47ae": {
      "content": "else if (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "else if ()",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "45898a82-4428-38e9-89cc-790e3e9857d3": {
      "content": "let ${1:TARGET} = ${2};${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "458ee2b9-757e-3c70-baae-f78d0d547763": {
      "content": "${1:obj}.ajaxSend(function (${1:request, settings}) {\n\t${2:// error callback}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsend": true
      },
      "source": "snippets/javascript"
    },
    "45934fe5-c2cc-3c39-a567-1777f8c38c3c": {
      "content": "else {\n\t${1}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "4593ef38-cf5d-3a9e-a14f-1b43bd251c1b": {
      "content": "overflow-style scrollbar",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "4595b7ec-cb9e-3191-8abc-6c766b7f4364": {
      "content": "<%= ${1:f}.check_box :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffcb": true
      },
      "source": "vim-snippets/snippets"
    },
    "45999b57-d011-381b-a848-3293b9cd3490": {
      "content": "<form (ngSubmit)=\"onSubmit()\" #${1:form}=\"ngForm\">\n</form>",
      "doc": "Form with ngSubmit and form attributes",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngform",
      "matches": {
        "a-form": true,
        "angular ng form": true
      },
      "source": "javascript/angular"
    },
    "459a5518-3093-34f0-9d40-22a3024f3390": {
      "content": "<sub>${0}</sub>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "459cf400-24c5-30bb-8e24-67f723b0254b": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${0:100} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      },
      "source": "vim-snippets/snippets"
    },
    "459f9a11-d7c8-3058-8cbb-aefe4733017d": {
      "content": "<%= form_for @changeset, ${1:\"/users\"}, fn f -> %>\n\t\t${0}\n\t<%= submit \"Submit\" %>\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_for",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "45a0ceb0-d01f-3833-b9d4-0e22915cd437": {
      "content": "\\begin{filecontents}\n\t${1:TARGET}\n\\end{filecontents}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{filecontents} \\filecontents": true,
        "filecontents": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "45a92819-fcd4-3d98-aa20-30a7765aeb11": {
      "content": "it '${1:description}', ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "it (coffee)",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "45a941ee-4384-3717-921f-ab4336083bee": {
      "content": "spyOn(${1:object}, '${2:method}').and.returnValue(${3:arguments});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and return (js)",
      "matches": {
        "sr": true
      },
      "source": "vim-snippets/snippets"
    },
    "45acf346-1722-37ef-8105-267933f09db5": {
      "content": "border-left-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "45afb337-5187-3cb2-b6f9-993a53b20ded": {
      "content": "func Test${1:Function}(t *testing.T) {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func TestXYZ(t *testing.T) { ... }",
      "matches": {
        "test": true
      },
      "source": "gosnippets/snippets"
    },
    "45b1bcaf-1bf3-3e07-9639-f6596e41691a": {
      "content": "background-break: continuous;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "45ba24cb-bcad-3b5e-866a-5e0a64127e9b": {
      "content": "fallthrough",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fallthrough",
      "matches": {
        "ft": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "45cbd26f-1b5a-35aa-bacd-d358847f6b09": {
      "content": "#define",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "45cd2871-c7cf-3258-88ec-df90693cba3d": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"postcss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-postcss",
      "matches": {
        "vue base postcss": true
      },
      "source": "javascript/vue"
    },
    "45ddb7e5-420e-3f51-9129-6de4ea257914": {
      "content": "{\n\t\"type\": \"header\",\n\t\"content\": \"${1}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_header": true
      },
      "source": "vim-snippets/snippets"
    },
    "45eb6696-106a-3dff-9cf8-bd6404612540": {
      "content": "foreach(${1:i}, ${2:elem}; ${3:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fei": true
      },
      "source": "vim-snippets/snippets"
    },
    "45f13ba9-4270-3ac5-99d9-c89b565207ce": {
      "content": "<article id=\"${1}\">\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article#": true
      },
      "source": "vim-snippets/snippets"
    },
    "45fa6d5f-8723-381d-bfe1-562248cd7608": {
      "content": "${1:#:name}()\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "func": true,
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4608b1d8-a048-346a-a66e-d556d50f97aa": {
      "content": "must_be_kind_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbko": true
      },
      "source": "vim-snippets/snippets"
    },
    "4612adf2-c62c-3b51-8d42-6cee4a467005": {
      "content": "\\\\frac{d}{dt} {$1} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "time derivative",
      "matches": {
        "ddt": true
      },
      "source": "vim-snippets/snippets"
    },
    "461395f7-7f16-36fb-af36-8a5184bd933a": {
      "content": "assert_instance_of ${1:ExpectedClass}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asio": true
      },
      "source": "vim-snippets/snippets"
    },
    "4618ab35-f52f-33cf-985c-04b27339e971": {
      "content": "try\n\t${1}\nwith ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "461d26e8-32f3-3bf1-b404-b1f53676ae27": {
      "content": "width=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      },
      "source": "vim-snippets/snippets"
    },
    "46367f2d-5947-39b5-a054-77405fae957b": {
      "content": "axios.get('${1:uri}')\n.then(function (response) {\n\t${2:success}\n})\n.catch(function (error) {\n\t${3:error}\n})",
      "doc": "Use Axios to make a get request - promise based",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-get-promise",
      "matches": {
        "axios get promise": true
      },
      "source": "javascript/axios"
    },
    "4639a28e-2728-39e8-b69f-37e60608b009": {
      "content": "flash[:${1:notice}] = '${0}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flash": true
      },
      "source": "vim-snippets/snippets"
    },
    "4644f05b-1932-3b12-87c0-976c869140cb": {
      "content": "float64",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float64",
      "matches": {
        "f6": true
      },
      "source": "vim-snippets/snippets"
    },
    "464b5b49-4cda-345e-a137-6f8d9274b40b": {
      "content": "$this->assertContains(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContains($needle, $haystack)",
      "matches": {
        "ascon": true
      },
      "source": "vim-snippets/snippets"
    },
    "464b7288-6983-3eed-b1fd-0ae965482737": {
      "content": "<br>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "465a1609-25f9-3621-b42f-104a9396be1d": {
      "content": "text-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "vim-snippets/snippets"
    },
    "465f2837-15e1-3bce-be7f-4ef5b144c91c": {
      "content": "class ${1:MODEL_NAME}DetailView(DetailView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Detail View",
      "matches": {
        "detailview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4664a5aa-6558-3433-ad87-e401e3232aa6": {
      "content": "_.trimStart(${string}, ${chars})",
      "doc": "_.trimStart('  abc  ');\n// => 'abc  '\n\n_.trimStart('-_-abc-_-', '_-');\n// => 'abc-_-'\n\nRemoves leading whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trimstart",
      "matches": {
        "lodash trimstart": true
      },
      "source": "javascript/lodash"
    },
    "4665b44d-b499-3165-94ed-baa82ab04b6f": {
      "content": "background-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "4667477d-6f5a-3667-ab3b-f75500348143": {
      "content": "auto ${1} = std::make_unique<${2:T}>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amup": true
      },
      "source": "vim-snippets/snippets"
    },
    "466ac6f7-d535-3993-a6e2-e10b00ec2fee": {
      "content": "@selector(${1:#:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "466c9970-92f2-364e-8977-ee0ffdf49ddd": {
      "content": "elseif (${1:#:condition}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "467aad76-150f-3068-9a12-05624f1939df": {
      "content": "console.clear();",
      "doc": "Clears the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleClear",
      "matches": {
        "ccl": true
      },
      "source": "vscode-javascript/snippets"
    },
    "467f2341-32ff-34dc-898c-8a579eda9491": {
      "content": "grid-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "4687e347-341f-3206-886b-327132abde98": {
      "content": "yumrepo { \"${1:repo name}\":\n\tdescr   => \"${2:$1}\",\n\tenabled => ${0:1},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yumrepo": true
      },
      "source": "vim-snippets/snippets"
    },
    "4689d4d8-d807-385c-bd2a-85925a36c19e": {
      "content": "float: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "468e3cbc-2a48-36a1-bb52-16bf36d649ae": {
      "content": "border-left-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "46930338-6c60-3e02-b017-e020652a7669": {
      "content": "#include \"${1}\"${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc2, #include2": true,
        "inc2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4698b1ff-9684-3b90-94e5-17f53b31b681": {
      "content": "<tt>${1}</tt>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "46a21b6b-4325-34c8-aa6b-e9ff8c8d7a69": {
      "content": "<%include file=\"${0:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "46a95859-05fc-3976-90d3-40b832bf305a": {
      "content": "componentWillUnmount() {\n\t$0\n}\n",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillunmount",
      "matches": {
        "cwun": true,
        "react componentwillunmount": true
      },
      "source": "javascript/react"
    },
    "46b79694-3390-3d8f-924d-728684079e4d": {
      "content": "<%= number_to_currency(${1}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ntc": true
      },
      "source": "vim-snippets/snippets"
    },
    "46ba79d0-f68c-3edf-b517-f449a1fafb76": {
      "content": "{\n\tpath: '${1:pathName}',\n\tname: '${2:routeName}',\n\tcomponent: () => import('./${3:pathToComponent}'),\n},",
      "doc": "Vue Router route with per route code-splitting",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router Route",
      "matches": {
        "vroute-named": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "46ced9c7-6d3a-37bb-bc92-93b210ad7854": {
      "content": "scrollBehavior(to, from, savedPosition) {\n\tif(savedPosition) {\n\t\treturn savedPosition;\n\t} else {\n\t\treturn { x: 0, y: 0 };\n\t}\n},",
      "doc": "Vue Router scrollBehavior",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router scrollBehavior",
      "matches": {
        "vscrollbehavior": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "46d780c1-1e03-356e-a3ed-dd9f10c7274e": {
      "content": "select case (${1:expr})\n\tcase ($2)\n\tcase default\n\t\t$3\nend select ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "46d7b609-54e8-3836-86a6-83ba35e710de": {
      "content": "class ${1:ModelName}Admin(admin.ModelAdmin):\n\t${0}\nadmin.site.register($1, $1Admin)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modeladmin": true
      },
      "source": "vim-snippets/snippets"
    },
    "46d904d0-1cc7-36d5-b116-b8b110b49eba": {
      "content": "else if(${1:/*condition*/})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "else if (elif)",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "46d9ebf4-c8c0-3636-9d5d-5896b57bb1ea": {
      "content": "angular.module '${1:moduleName}', [${2:moduleDependencies}]\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngm": true
      },
      "source": "snippets/coffee"
    },
    "46e9abe4-fcad-31f1-96e5-472a8688fac9": {
      "content": "border-bottom-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "46f574a0-f4ce-387d-ab22-409bdf82d882": {
      "content": "t.datetime :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcdt": true
      },
      "source": "vim-snippets/snippets"
    },
    "46f84fda-409e-3fe9-a164-db5f01d16631": {
      "content": "urlize(trim_url_limit=${1:None}, nofollow=${2:False})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "convert plain-text url to <a/>",
      "matches": {
        "urlize": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "46fbdb8e-4aaf-3df9-b9d7-fd0607011956": {
      "content": "<?php if (${1:#:condition}): ?>\n${2:TARGET}\n<?php else: ?>\n${0}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "46fde772-b774-3ec4-8a8b-cac26430d0c3": {
      "content": "setTimeout(() => {\n\t${2}\n}, ${1:delayInms});",
      "doc": "Executes the given function after the specified delay in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setTimeOut",
      "matches": {
        "sto": true
      },
      "source": "vscode-javascript/snippets"
    },
    "4706ee9f-cd11-34e1-96ac-db265e0675f6": {
      "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    ${1:TARGET}\n</html>",
      "doc": "",
      "filetype": "xhtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xhtml": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "47086a48-50c9-3ccd-83d6-73edd61bc256": {
      "content": "border-right-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-color": true,
        "brc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "47095a7d-cabd-3629-8cbc-df0ffeb2d24f": {
      "content": "def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "47099548-1d84-32ab-a6b0-d39c0d293961": {
      "content": "it('${1:}', () => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "it('should do', () => { ... })",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "470ccd79-66b7-38d6-b247-40fec4270823": {
      "content": "lightSpecular(${1:v1}, ${2:v2}, ${0:v3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lightSpecular": true
      },
      "source": "vim-snippets/snippets"
    },
    "470cd77e-cdd1-3ad2-82d5-3831905ea375": {
      "content": "(:require [clojure.core.strint :refer (<<)])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "use-strint-in-ns": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4710196e-7574-3e53-9cfa-e25a70acebdb": {
      "content": "length_is:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      },
      "source": "vim-snippets/snippets"
    },
    "4710fdcc-c8b3-36a3-b4f3-c2dad31f36ab": {
      "content": "justify-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "471b79fc-ef04-3ed5-80a7-9c6b372e7bde": {
      "content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lorem": true
      },
      "source": "vim-snippets/snippets"
    },
    "471c5d30-e7b9-3091-a424-e790473213ea": {
      "content": "while (${1:#:expression}) {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "while (...) {...}",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "472599f3-36f5-3027-a478-d9b7dce9a57e": {
      "content": "% try:\n\t${1:}\n% except${2:}:\n\t${3:pass}\n% endtry",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "try",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4729ee2a-e38f-3a29-aa8d-b28e454d6760": {
      "content": "this.state.$0",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-state",
      "matches": {
        "react component state": true,
        "state": true
      },
      "source": "javascript/react"
    },
    "472ddb90-d06f-39b6-bf42-da8c95937234": {
      "content": "process.nextTick(() => {\n\t${0}\n});",
      "doc": "process nextTick",
      "filetype": "base",
      "grammar": "lsp",
      "label": "process-nexttick",
      "matches": {
        "base process next tick": true
      },
      "source": "javascript/base"
    },
    "4730f92d-b541-3cff-9e5c-e5e2a606f943": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "47324c62-37f6-3b7f-8155-dd061460c161": {
      "content": "unless ${1:condition}\n\t$2\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unlesse": true
      },
      "source": "vim-snippets/snippets"
    },
    "47398863-2dac-330a-b979-724c2cd45fa7": {
      "content": "_.isNative(${value})",
      "doc": "_.isNative(Array.prototype.push);\n// => true\n\n_.isNative(_);\n// => false\n\nChecks if `value` is a pristine native function.\n\n**Note:** This method can't reliably detect native functions in the presence\nof the core-js package because core-js circumvents this kind of detection.\nDespite multiple requests, the core-js maintainer has made it clear: any\nattempt to fix the detection will be obstructed. As a result, we're left\nwith little choice but to throw an error. Unfortunately, this also affects\npackages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\nwhich rely on core-js.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnative",
      "matches": {
        "lodash isnative": true
      },
      "source": "javascript/lodash"
    },
    "47399863-fc01-3da1-bdf0-faef17aa57d7": {
      "content": "cy.visit('${1:url}');",
      "doc": "Visit a remote URL",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-visit",
      "matches": {
        "cypress visit": true
      },
      "source": "javascript/cypress"
    },
    "473d7d77-d92a-3bce-bd71-9bce42344a0c": {
      "content": "<li>${0}</li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      },
      "source": "vim-snippets/snippets"
    },
    "473e9842-dc60-3f87-a5d0-6a408ec74056": {
      "content": "${1:action} unless ${2:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Unless",
      "matches": {
        "unl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4741ebdb-cfcd-3d6c-8864-1a1e4ffdbc5a": {
      "content": "if !reflect.DeepEqual(${1:expected}, ${2:actual}) {\n\t_, file, line, _ := runtime.Caller(0)\n\tfmt.Printf(\"%s:%d:\\n\\n\\texp: %#v\\n\\n\\tgot: %#v\\n\\n\", filepath.Base(file), line, $1, $2)\n\tt.FailNow()\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "equals: test two identifiers with DeepEqual",
      "matches": {
        "eq": true
      },
      "source": "gosnippets/snippets"
    },
    "47523569-d21f-3952-a53e-defaf04babf5": {
      "content": "text-align-last: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "475668e6-ef65-3bf6-96de-e0837069ae84": {
      "content": "const ${1:y} = useTransform(${2:x}, ${3:value => value * 2})",
      "doc": "useTransform()\nCreate a MotionValue that transforms the output of another MotionValue through a function.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-transform",
      "matches": {
        "framer-motion use-transform": true,
        "use-transform": true
      },
      "source": "javascript/framer-motion"
    },
    "476624cc-ae99-3c61-bcd3-71d4e2a6cb00": {
      "content": "{% ifnotequal ${1} ${2} %}\n\t${0}\n{% endifnotequal %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      },
      "source": "vim-snippets/snippets"
    },
    "478cc396-2417-3746-9aaf-5a8286fe9c11": {
      "content": "!important",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "!": true
      },
      "source": "vim-snippets/snippets"
    },
    "4796e430-c1c7-325f-8744-7d852171b37e": {
      "content": "__import__('bpdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bpdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "47a1d418-560b-3f3c-b123-6e3ac9dd7cdb": {
      "content": "div(ng-show='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      },
      "source": "vim-snippets/snippets"
    },
    "47a6d253-11f2-3ece-b71e-ce2c0b70becc": {
      "content": "internal ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m&": true
      },
      "source": "vim-snippets/snippets"
    },
    "47b4a782-6847-365c-baff-70375781df82": {
      "content": "{% img ${1:class} ${2:URL} ${3:width} ${4:height} ${5:title_text} ${0:alt_text} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "vim-snippets/snippets"
    },
    "47bc8047-e192-3af5-8830-af92284cde8a": {
      "content": "must_be_same_as ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbsa": true
      },
      "source": "vim-snippets/snippets"
    },
    "47c7bdbd-a4fe-3b6c-97c5-03d50e4384cb": {
      "content": "${${1:0}#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${X#optional}",
      "matches": {
        "$#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "47d06486-c313-3df7-915d-abc0fea5dd1f": {
      "content": "background-attachment: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "47d4321b-c493-36fe-bd57-ff334c872b53": {
      "content": "align-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "47d525a5-ffed-32fc-a397-7c47c87b399a": {
      "content": "import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeFunctionalExportComponentWithStyles",
      "matches": {
        "rnfes": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "47dbe5a8-d116-3846-8b67-bc260f4be2df": {
      "content": "border-top-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-color": true,
        "btc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "47e794ab-b9b3-3be9-b993-eacd13f5426f": {
      "content": "const express = require('express');\nconst app = express();\nconst port = process.env.PORT || ${1:port};\nconst www = process.env.WWW || '${2:./}';\napp.use(express.static(www));\nconsole.log(`serving \\${www}`);\napp.get('*', (req, res) => {\n\tres.sendFile(`index.html`, { root: www });\n});\napp.listen(port, () => console.log(`listening on http://localhost:\\${port}`));\n$0",
      "doc": "Node.js Express Server",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Node.js Express Server",
      "matches": {
        "ex-node-server-simple": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "47e8941d-01c6-3c4b-a19a-e80ae9442130": {
      "content": "{%- cycle '${1:group name}': '${2:odd}', '${3:even}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cyclegroup-": true
      },
      "source": "vim-snippets/snippets"
    },
    "47ec9662-327a-3192-b033-06306d46a60a": {
      "content": "{% endblock %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endblock",
      "matches": {
        "endblock": true
      },
      "source": "vim-snippets/snippets"
    },
    "47f30acf-496e-3fe9-bfd2-6e3428c2d1bc": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "47f4e187-420d-3bd9-9e8b-b383fbd6b7c2": {
      "content": "${1:obj}.load(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      },
      "source": "snippets/javascript"
    },
    "47f514a6-3cb0-3008-8f41-03cda0ed9fe4": {
      "content": "${1:var} ${2:item} = $1.findById(${3});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "findbyid": true
      },
      "source": "vim-snippets/snippets"
    },
    "47f51d2f-1635-3f81-835c-cc02d8e17fbc": {
      "content": "import ReactDOM from 'react-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import ReactDOM",
      "matches": {
        "imrd": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "47fad041-1adc-372f-b65b-c7cd52251f98": {
      "content": "if (${1:true}) {${0}}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "47fd5c5f-72bf-39a0-88f2-f7d877ff4487": {
      "content": "input {\n\tmessage '${1:Should we continue?}'\n\tok '${2:Yes, we should.}'\n\tsubmitter '${3:alice,bob}'\n\tparameters {\n\t\tstring(name: '${4:PERSON}' , defaultValue: '${5:Mr Jenkins}' , description: '${6:Who should I say hello to?}')\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      },
      "source": "vim-snippets/snippets"
    },
    "47ff069f-714c-36b0-8b7a-9a5c27dd93f4": {
      "content": "v-bind$1=\"${2}\"",
      "doc": "Expects: any (with argument) | Object (without argument)",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-bind",
      "matches": {
        "vbind": true,
        "vue v-bind": true
      },
      "source": "javascript/vue"
    },
    "47ffd843-2fd4-36e6-8bf8-3bb1826ac761": {
      "content": "{% requireLogin %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requirelogin",
      "matches": {
        "requirelogin": true
      },
      "source": "vim-snippets/snippets"
    },
    "4802f9f4-1fdf-3837-b40b-22fffd6912f1": {
      "content": "list-style-type square",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "4810b978-ad05-375e-a42d-89336bcab5ad": {
      "content": "align-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "4810fdf5-ac25-335a-a712-f26109627de4": {
      "content": "text-outline: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "48151940-b149-390f-a9d1-d6122d9111e4": {
      "content": "render inline: \"${0:<%= 'hello' %>}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ri": true
      },
      "source": "vim-snippets/snippets"
    },
    "481f38e3-dd57-36e7-9607-ca02f7b9a5cc": {
      "content": "Host ${1:name}\n\tHostName $1.${2:domain}\n\tPort ${3}\n\t${4:User }",
      "doc": "",
      "filetype": "sshconfig",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Host": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4825eb4b-e1a5-3d1b-b8cf-07e8b4af3086": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "#import <> (Imp)",
      "matches": {
        "Imp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "48274773-3036-385e-ad11-ac33509b8e53": {
      "content": "class $1Admin(admin.ModelAdmin):\n\t'''\n\t\tAdmin View for $1\n\t'''\n\tlist_display = ('$2',)\n\tlist_filter = ('$3',)\n\tinlines = [\n\t\t$4Inline,\n\t]\n\traw_id_fields = ('$5',)\n\treadonly_fields = ('$6',)\n\tsearch_fields = ['$7']\nadmin.site.register($1, $1Admin)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model Admin View",
      "matches": {
        "adminview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4827a318-cc70-3112-8f9e-9dbeaa899d8c": {
      "content": "scope :${1:name}, { ${2:joins(:${3:table}).}where(${4:'${5:$3.${6:field}} = ?', ${7:'${8:value}'}}) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope",
      "matches": {
        "scope": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4827d76e-09bc-3d74-8f3f-1f0b71e2e118": {
      "content": "using ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "load a package",
      "matches": {
        "use": true
      },
      "source": "vim-snippets/snippets"
    },
    "4828b920-4407-3392-bcf4-84f76f1fa375": {
      "content": "class ${2:#:ClassName} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4838126a-3cd7-30b8-a3a3-d5771b8e2815": {
      "content": "font-smooth: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "4847d480-cff5-3db7-b741-08ffe4253b96": {
      "content": "t.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "484845c2-37a9-31f2-9a00-be6e2eb086a0": {
      "content": "set terminal ${1:#:terminal}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set terminal",
      "matches": {
        "term": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "484b86c6-3300-3f77-ae25-11e71789d3a4": {
      "content": "font-effect none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "484e60e3-3f79-30ce-afdb-0ccf17f5a77b": {
      "content": "EntityDataModule.forRoot(${1:entityConfig}),",
      "doc": "Import NgRx Entity Data Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Import Entity Data Module",
      "matches": {
        "a-ngrx-data-entity-data-module-import": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "48504bd5-a12a-3524-a590-e2bde7a00ecd": {
      "content": "{# ${1:comment} #}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "485b3943-29e6-31f3-a1df-95c6b6d712b3": {
      "content": "[routerLink]=\"['/${1:routePath}']\" routerLinkActive=\"${2:router-link-active}\" $0",
      "doc": "Angular routerLink",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngRouterLink",
      "matches": {
        "a-routerLink": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "4860096d-b7b9-3d01-b1d3-3f1224d408f2": {
      "content": "do ${1:i} = ${2:start}, ${3:end}, ${4:incr}\n\t${0}\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "487b81cc-af9a-3458-9962-9b10200c140b": {
      "content": "text-emphasis: after;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "488e49db-71f1-31c1-9a50-15b6a35ea366": {
      "content": "def test_should_get_${1:action}\n\t${2:@${3:model} = ${4:$3s}(:${5:fixture_name})\n\t}get :$1${6:, id: @$3.to_param}\n\tassert_response :success\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "def get request",
      "matches": {
        "deftg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4893a84e-6e26-3792-b35a-2525f792e4d6": {
      "content": "${1:obj}.filter('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "snippets/coffee"
    },
    "4896faca-6d2d-3f37-9802-331757af70d4": {
      "content": "top: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "489d5b99-4eb2-3690-8851-40895067a017": {
      "content": "max-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true,
        "max-width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "489dd85c-e9e4-39c4-90bb-b08f388ea36f": {
      "content": "it { should rescue_from ${0:exception} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrf": true
      },
      "source": "vim-snippets/snippets"
    },
    "489f7597-d587-317a-9e49-c008cc0cef15": {
      "content": "dictsort:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      },
      "source": "vim-snippets/snippets"
    },
    "48a49091-ab52-3c42-9bed-05b16c7c4d92": {
      "content": "${1:div}(:class=\"{ ${2:className}: ${3:data} }\")",
      "doc": "vue class binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Class Binding",
      "matches": {
        "vclass": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "48a67bb3-06cd-3231-98eb-544d9ec41264": {
      "content": "local $@;\neval {\n\t${1:# do something risky...}\n};\nif (my $${2:exception} = $@) {\n\t${3:# handle failure...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "eval",
      "matches": {
        "eval": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "48aa8161-c4ef-38f2-b0d6-dcacd1abc41d": {
      "content": "${1:obj}.removeAttr('${2:attribute name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rema": true
      },
      "source": "snippets/coffee"
    },
    "48b1f2d5-072a-3fbe-b099-60cfd56f88f5": {
      "content": "${1:TMPFILE}=$(mktemp ${2:XXX})\ntrap \"rm -f '${$1}'\" 0               # EXIT\ntrap \"rm -f '${$1}'; exit 1\" 2       # INT\ntrap \"rm -f '${$1}'; exit 1\" 1 15    # HUP TERM\n${0}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tmp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "48b6dee5-dcbd-3f85-b365-66e0c73da671": {
      "content": "expect(${1:target}).not.toHaveBeenCalled();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to have been called (js)",
      "matches": {
        "nthbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "48bae456-339d-3e71-9363-e53b235b9365": {
      "content": "${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${0:, to_field=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fk": true
      },
      "source": "vim-snippets/snippets"
    },
    "48bdf9b5-5cb3-3a7a-ae87-7a3f7c8beeec": {
      "content": "for (let ${1:key} in ${2:array}) {\n\tif (${2:array}.hasOwnProperty(${1:key})) {\n\t\t${0}\n\t}\n}",
      "doc": "for in loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-in-loop",
      "matches": {
        "base for in": true
      },
      "source": "javascript/base"
    },
    "48cf9d72-265f-3c9e-9efe-d821cbfc79df": {
      "content": "var_export(${1}, true)",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inspect": true,
        "var_export": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "48d40a48-878d-30d3-8d2a-aece30c76ed6": {
      "content": "#!/usr/bin/env perl6",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "48d4bf5f-009e-3a36-8be5-1abdb47c3567": {
      "content": "break;",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "vim-snippets/snippets"
    },
    "48db8fd9-fd7d-3437-8423-888be1eebec1": {
      "content": "$this->${1:method}()->shouldEndWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldEndWith('string')",
      "matches": {
        "send": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "48dc5f7f-e29e-3aaf-a99a-dcc22953426b": {
      "content": "\\begin{equation*}\n\t${0:${VISUAL}}\n\\end{equation*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation without a number",
      "matches": {
        "eqnn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "48e01430-73b3-3354-bbcb-ac77e65d9c7b": {
      "content": "<textarea rows=\"${1}\" cols=\"${2}\">\n${3:TARGET}\n</textarea>\n${4}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "48eee23c-b2a4-3fd3-b4e8-3dfc9d07e1d1": {
      "content": "{#each ${1:items} as ${2:item}, (${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-key-block",
      "matches": {
        "sveach-key": true,
        "svelte each key": true
      },
      "source": "javascript/svelte"
    },
    "48eff629-6c44-3423-8209-27e916e67b89": {
      "content": "_.unary(${func})",
      "doc": "_.map(['6', '8', '10'], _.unary(parseInt));\n// => [6, 8, 10]\n\nCreates a function that accepts up to one argument, ignoring any\nadditional arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unary",
      "matches": {
        "lodash unary": true
      },
      "source": "javascript/lodash"
    },
    "48f5fb6d-79bd-38cd-9ea4-e6a322a6401c": {
      "content": "else:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "else: ...",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "48f8bacf-7390-3282-ba57-760bc08fb379": {
      "content": "each_with_index do |${1:e}, ${2:i}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawid": true
      },
      "source": "vim-snippets/snippets"
    },
    "48fe0146-f1bf-357a-9c90-5919c786dc03": {
      "content": ":- run_tests.\n:- halt.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "runtest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "48ffc540-7454-3f1e-99be-f7d0afc6289f": {
      "content": "make(${1:[]string}, ${2:0})${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "make(Type, size)",
      "matches": {
        "make": true
      },
      "source": "gosnippets/snippets"
    },
    "49061067-220d-3700-a44f-6bddad28cab7": {
      "content": "export default class ${1:className} extends ${2:baseclassName} {\n\t$0\n};\n",
      "doc": "Export default class which extends a base one in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportClassExtends",
      "matches": {
        "ece": true
      },
      "source": "vscode-javascript/snippets"
    },
    "49072eef-c556-3fbd-8760-46b6d45aa17d": {
      "content": "typedef struct {\n\t${0}\n} ${1:name_t};",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "types": true
      },
      "source": "vim-snippets/snippets"
    },
    "490a24e9-21b8-3fb2-ac9b-369f173b904a": {
      "content": "sap.ui.layout.HorizontalLayout.extend(\"$1\", {\n    metadata: {\n\tproperties: {\n\t  \t$2\n\t},\n\taggregations: {\n\t\t$3\n\t},\n\tevents: {\n\t\t$4\n\t}\n    },\n   init: function(){\n\t$5\n    },\n    renderer: \"$6\"\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extendHorizontalL": true
      },
      "source": "vim-snippets/snippets"
    },
    "491756da-eeec-390e-91df-3b09367d6aa0": {
      "content": "console.trace(${0:label});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.trace",
      "matches": {
        "ct": true
      },
      "source": "snippets/javascript"
    },
    "491caa43-affb-3520-87a5-1db4c16367bf": {
      "content": "<%= $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "=": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4920a0ad-141c-3ed2-8e57-b9df7983c98f": {
      "content": "height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true,
        "height": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4923d221-cc2f-3773-9155-dcef61f29f68": {
      "content": "<c:url value=\"${1}\" var=\"${2}\" />\n<a href=\"${$2}\">${0}</a>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curl": true
      },
      "source": "vim-snippets/snippets"
    },
    "493a8e33-4542-36cd-8d65-4b0fa9b1e431": {
      "content": "margin: ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "493fdafa-4dd9-3d4c-a21a-0cbe688b71c2": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "49407505-9d77-3cdd-bcc1-8a5174ff6872": {
      "content": "$this->renderDynamic('${1:callback}', array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "4941cd39-8e1a-3265-8a86-eaa8c45a3e7c": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-component-prop-types",
      "matches": {
        "imrcp": true,
        "react import component proptypes": true
      },
      "source": "javascript/react"
    },
    "4945d2c3-671d-3314-9cef-63302ba77e8a": {
      "content": "${1:obj}.nextAll('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nexta": true
      },
      "source": "snippets/javascript"
    },
    "49476c8f-e475-306d-b0a8-a78e6b672a02": {
      "content": "debugger;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "db": true,
        "debugger": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4947ea58-2439-3e0f-bf64-91795e8cae81": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${2:Your}Interceptor implements HttpInterceptor {\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn next.handle(req);\n\t}\n}",
      "doc": "Empty Angular HttpInterceptor for HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-empty",
      "matches": {
        "a-http-interceptor": true,
        "angular http interceptor empty": true
      },
      "source": "javascript/angular"
    },
    "49685cae-51cd-395e-8fef-f4d7f76ffd72": {
      "content": "margin ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "4977c329-5fda-3b15-aa39-2be7f1ba45cf": {
      "content": "*${1}*${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "*text*",
      "matches": {
        "bold": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "497e7810-c09d-3697-bfad-52be06d92b08": {
      "content": "As a special exception, if other files instantiate generics from\nthis unit, or you link this unit with other files to produce an\nexecutable, this unit does not by itself cause the resulting\nexecutable to be covered by the GNU General Public License.\nThis exception does not however invalidate any other reasons why the\nexecutable file might be covered by the GNU Public License.\n${0}",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "linking exception",
      "matches": {
        "GMGPL": true
      },
      "source": "vim-snippets/snippets"
    },
    "4983cc2a-aa4a-3999-ba1b-7765fe1e67b9": {
      "content": "border-corner-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "49842d78-728c-371e-aa24-2eb203f8d90c": {
      "content": "${1:deferred}.always(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dalways": true
      },
      "source": "snippets/coffee"
    },
    "498f4ba7-5f17-3a3c-b3a6-23e87f420d28": {
      "content": "school = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "school": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "499f9fef-dfbd-3764-9f7c-0e3c86000dce": {
      "content": "require(\"optparse\", quietly = TRUE)\noption_list <-\n    list(make_option(c(\"-n\", \"--add_numbers\"), action=\"store_true\", default=FALSE,\n                     help=\"Print line number at the beginning of each line [default]\")\n         )\nparser <- OptionParser(usage = \"%prog [options] file\", option_list=option_list)\narguments <- parse_args(parser, positional_arguments = TRUE)\nopt <- arguments$options\nif(length(arguments$args) != 1) {\n    cat(\"Incorrect number of required positional arguments\\n\\n\")\n    print_help(parser)\n    stop()\n} else {\n    file <- arguments$args\n}\nif( file.access(file) == -1) {\n    stop(sprintf(\"Specified file ( %s ) does not exist\", file))\n} else {\n    file_text <- readLines(file)\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optparse": true
      },
      "source": "vim-snippets/snippets"
    },
    "49bf3ae7-fff2-3005-8cf9-e26aee7a07b4": {
      "content": "align-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "49ca133b-c36f-351f-bebb-ddcad7666b6c": {
      "content": "foreach (${1:item} = ${2:list}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/snippets"
    },
    "49cbe3b9-f4ba-30d7-9254-d1b51aa10584": {
      "content": "beforeUpdate () {\n\t${0};\n},",
      "doc": "beforeUpdate lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeUpdate",
      "matches": {
        "vbeforeupdate": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "49d20bf2-229c-3ea3-8459-c2e209625b70": {
      "content": "NSArray ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsa": true
      },
      "source": "vim-snippets/snippets"
    },
    "49da1150-cf63-3347-bff8-d17f564e3949": {
      "content": "page-break-after right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "49dd9a41-5ac2-3d7c-9cd5-a0775571c20e": {
      "content": "validates_presence_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:can't be blank}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of (vp)",
      "matches": {
        "vp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "49df861d-7a52-3bcc-b102-fdc35d7c83b4": {
      "content": "${1:obj}.insertBefore('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insb": true
      },
      "source": "snippets/javascript"
    },
    "49e50014-fe31-3bd5-a7ba-b473f52c486b": {
      "content": "export { $2 } from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportDestructing",
      "matches": {
        "exd": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "49eb0925-e5b0-3388-8185-700eea363e08": {
      "content": "t.date :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.date (tcda)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "49eeac88-e2fe-35d4-88d6-658c27d4a220": {
      "content": "function ${1}(${2})\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function definition",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "49fa2a96-05cb-3b38-b444-afab9ca8e28e": {
      "content": "{|${1:#:var}|\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "{|var| ... }",
      "matches": {
        "blockvar": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a0d952e-da35-36f5-9a86-985250bc0972": {
      "content": "@slot('${1}')\n    ${2}\n@endslot",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@slot ... @endslot",
      "matches": {
        "slot": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a102f23-cef3-383c-b3cd-d0f0284de082": {
      "content": "margin-top auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a1e1367-77a6-3a02-af56-62d3861bd72d": {
      "content": "-moz-box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a22a5b8-4259-39fe-88bc-ae9acdf9e221": {
      "content": "list-style-type: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a27ece5-e4ea-3c4b-9959-560212745000": {
      "content": "bool",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "bool",
      "matches": {
        "bl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a2a6007-1004-30ea-bdb1-62bae7e60e95": {
      "content": "table-layout: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a2cc527-96b1-37d9-84f6-1ee1611e1fb2": {
      "content": "nuxtServerInit ({ commit }, { req }) {\n\t${1:data}\n}",
      "doc": "In universal mode, useful to fetch data on the server and give directly to the client-side.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-serverinit",
      "matches": {
        "nuxt serverinit": true
      },
      "source": "javascript/nuxt"
    },
    "4a305519-a446-3e16-bcfb-ad4e4d7970a2": {
      "content": "each_key {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_key": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a37407b-098f-3ce5-abd1-e6874e273c36": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a3ebafc-42a0-3634-a831-087b4d879a73": {
      "content": "foreach_reverse(${1:elem}; ${2:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fer": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a3f8a57-100a-3469-bec0-ee6a75b9f0cb": {
      "content": "<ul id=\"${1}\">\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul#": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a4a1ebf-0413-3051-b714-96e2ded76802": {
      "content": "spyOn(${1:object}, '${2:method}').and.callThrough();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and call through (js)",
      "matches": {
        "sct": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a5490e0-7b91-3dd6-bb47-3475964ac4ad": {
      "content": "fmt\"${0:#:TARGET}\"",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fmt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a54a907-05bc-354d-ac1d-fa5716f6230c": {
      "content": "{% requirePermission \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requirepermission",
      "matches": {
        "requirepermission": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a581494-923d-3316-8436-eb46a86d8925": {
      "content": "\\begin{quote}\n\t${1:TARGET}\n\\end{quote}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{quote} \\quote": true,
        "quote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a5d5073-990b-3592-bddb-e902c29299f4": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object",
      "matches": {
        "prop-types object": true,
        "pto": true
      },
      "source": "javascript/prop-types"
    },
    "4a6659fd-738a-3fce-88de-5e59d56af0aa": {
      "content": "components: {\n\t${1:New},\n},",
      "doc": "Import one component into another, within export statement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-into-the-component",
      "matches": {
        "vcomponents": true,
        "vue import into the component": true
      },
      "source": "javascript/vue"
    },
    "4a676971-b5d9-3db4-ab29-4c805c93eb98": {
      "content": "<ul type=\"disc\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uldisc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4a69aa7c-406a-30a8-96b0-0059d23d63de": {
      "content": "<%= link_to ${1:model}.${2:name}, ${3:$1}_path(${0:$1}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lim": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a73ad43-b7ff-3206-82e7-8eafa0c1bd46": {
      "content": "bool",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Boolean",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a783b7e-9a3a-3183-9163-4d56f3f80aa2": {
      "content": "std::set<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a79417d-e4a4-3676-9951-b2754895af03": {
      "content": "<router-link :to=\"{name: '${1:name}', params:{${2:id}: '${3:value}'} }\">${4:LinkTitle}</router-link>",
      "doc": "Named routing link w/ params",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Routing Link with Params",
      "matches": {
        "vroutenameparam": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "4a7d4595-348c-3988-b58b-7e9aaf4cef5e": {
      "content": "border-top-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a890de4-44c5-3c98-bd9f-c75946d714d7": {
      "content": "<hgroup class=\"${1}>\n\t${0}\n</hgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hgroup.": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a89d267-1599-363b-a53d-4b057ba31c33": {
      "content": "where(${1:'conditions'}${0:, bind_var})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a8c61f7-6599-3c26-ac1a-45d09e3d6e68": {
      "content": "(deftest $1\n\t$0)",
      "doc": "",
      "filetype": "lfe",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "4a96a996-e1fa-3297-a99b-66b061333423": {
      "content": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default=${2:None}, help=\"${3:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addnarg": true
      },
      "source": "vim-snippets/snippets"
    },
    "4aa42cf3-eaab-3345-8e42-e48287a2a495": {
      "content": "d_ply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d_": true
      },
      "source": "vim-snippets/snippets"
    },
    "4aae1885-f1ca-34d7-906f-11d188a07684": {
      "content": "font-weight bolder",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      },
      "source": "vim-snippets/snippets"
    },
    "4aaff8ad-0065-3d2f-a2bc-7362feba854b": {
      "content": "sort { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sor": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ab32b5b-9171-35bf-a6cc-c90151180f86": {
      "content": "{% use '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% use '...' %}",
      "matches": {
        "use": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4ab7eaa6-0b0b-32bb-81d7-ac26b1f64ac8": {
      "content": "text-align-last: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "4abe5634-9f3f-3cdc-a58e-2c3ae7f53af5": {
      "content": "echo CHtml::imageButton('${1:src}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhimgb": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ac038fd-412e-3bb5-8607-ad569730cbc0": {
      "content": "switch ${1:n}\n\tcase ${2:0}\n\t\t${3}${4:\n\totherwise\n\t\t${5}}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "switch ... otherwise",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4ac4560e-d30b-359b-8bd5-26c2958acf8b": {
      "content": "console.error(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ce": true,
        "console-error": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4acda192-09ef-3bd5-8112-4719aed20adb": {
      "content": "logger.fatal",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.fatal",
      "matches": {
        "logf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4ae0232c-2a61-3f4e-93a7-338cc6fb89d0": {
      "content": "sprintf('${1:#:format}', ${2:#:vars})",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "sprintf",
      "matches": {
        "sprintf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4ae7d27b-e65b-3181-af1d-74d73fc5001f": {
      "content": "${1:expression} if ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      },
      "source": "vim-snippets/snippets"
    },
    "4aebee91-a3e0-33d3-ac05-0a25340f5b17": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with CSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Css",
      "matches": {
        "vbase-css": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "4af759fb-0f17-3c9f-9ea5-f7d0f33b7f32": {
      "content": "add_executable(${1:bin})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bin": true
      },
      "source": "vim-snippets/snippets"
    },
    "4af86ff7-ec0a-3368-b23a-e6d5adf7d877": {
      "content": "import 'react-native'\nimport React from 'react'\nimport renderer from 'react-test-renderer'\n\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setupReactNativeTest",
      "matches": {
        "sntest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "4af8dc18-ad54-3257-be4c-bc40651b47ba": {
      "content": "render action: '${0:action}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ra": true
      },
      "source": "vim-snippets/snippets"
    },
    "4afacf88-5c7b-36b7-b93f-7839be69ce68": {
      "content": "enum ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4afe9a8d-3b69-3545-8814-31d7473a696e": {
      "content": "outline: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b01b135-1382-3275-bf93-a12863d122cb": {
      "content": "border-right-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-style: style (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4b071f08-a95b-3bad-ac34-c8b68edcf32d": {
      "content": "console.log(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true,
        "console-log": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4b0d9b0e-0015-33b1-91bb-e0572b4e727a": {
      "content": "program ${1:main}\n\t${2}\nend program $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "program",
      "matches": {
        "pr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4b0f64db-f5c6-3cbf-9675-8363f1401f0e": {
      "content": "it('${1:description}', inject(function($2) {\n\t$0\n}));",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "it (js, inject)",
      "matches": {
        "iti": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4b10b677-942b-3d7b-ac49-4fea72d8defb": {
      "content": "<ol id=\"${1}\">\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol#": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b120728-5013-3141-b43c-30cda573816e": {
      "content": "${1} := ${2}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "shorthand variable declaration",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b165db6-17dc-3dfa-8e8d-282a6067d727": {
      "content": "class ${1:Class} ${2:a} where\n  ${3:function} :: ${4:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4b1a68ba-7e41-39eb-9bb1-caaae9655518": {
      "content": "// @flow\nimport * as React from 'react';\ntype Props = {\n  $0\n};\ntype State = {\n  $1\n};\nexport class ${2:${TM_FILENAME_BASE}} extends React.Component<Props, State>{\n  render() {\n    return (\n      <div>\n        \n      </div>\n    );\n  };\n};",
      "doc": "Creates a React component class with FlowTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowClassComponent",
      "matches": {
        "fcc": true
      },
      "source": "vscode-react/snippets"
    },
    "4b1d0cc9-e700-35f5-98a2-9ee7ce421539": {
      "content": "${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attrm": true
      },
      "source": "snippets/javascript"
    },
    "4b1e2d33-1ff5-3f4a-ac82-6ab0d7525c61": {
      "content": "\\begin{lrbox}\n\t${1:TARGET}\n\\end{lrbox}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{lrbox} \\lrbox": true,
        "lrbox": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4b23bef6-7afa-3a0a-b9f8-2979f5ece54f": {
      "content": "file_exists(${1:file})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "file_exists",
      "matches": {
        "fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b24cdae-8f64-3c76-89b0-47a5fbccfbae": {
      "content": "list-style-type: upper-roman",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b2e1355-eccc-330c-b1cd-326c3ffd7fca": {
      "content": "public ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b38c944-ebb3-382e-97dd-8991c3d18830": {
      "content": "int",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Int",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b39a843-3ad7-3f95-b66a-55206c926ef4": {
      "content": "border-corner-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b3adde8-6be2-351f-97bc-b19ebdc1baef": {
      "content": "respond_to do |format|\n\tformat.${1:html} { ${0} }\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rest": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b4c76c3-0bd3-398c-80d4-87396d6a4bc3": {
      "content": "float left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b4d6280-bb94-3574-a0e3-14b120267e0a": {
      "content": "function ${1} return ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function declaration",
      "matches": {
        "fund": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b5cde12-cee0-3d73-ae89-9fa582061d01": {
      "content": "${1:out}: $1.o\n\t$(CC) $(CFLAGS) -o $@ $+",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b5fc13e-b4db-33e2-a35f-044cec4e0637": {
      "content": "${0:name}.filter (a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b67ba9a-cfaa-3396-bfeb-01a5e0caa143": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}\n",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentdidupdate",
      "matches": {
        "cdup": true,
        "react componentdidupdate": true
      },
      "source": "javascript/react"
    },
    "4b67c0f5-7c36-33c3-a29b-50b11c46b82d": {
      "content": "batch(linecount=$1, fill_with=${2:None})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "batch items",
      "matches": {
        "batch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4b68c7ad-fb53-38c4-b04b-7c484bbebc3d": {
      "content": "for (let ${1:key} of ${2:array}) {\n\t${0}\n}",
      "doc": "for of loop (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-of-loop-es6-",
      "matches": {
        "base for of": true
      },
      "source": "javascript/base"
    },
    "4b6d6d48-7b13-3c3a-98f6-2525752a325c": {
      "content": "{if ${1:expression}}\n\t$2\n{else}\n\t$0\n{/if}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "if .. else (ife)",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4b6dfa9a-d6e9-37fe-a038-729fc2f2e7c8": {
      "content": "${1:NSObject} *${2:foo} = [${3:$1 alloc}]${4};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b6ee8a0-51a7-3191-a9cb-4899e923b99c": {
      "content": "sample(${1:x}, ${2:size}, ${3:replace = ${4:FALSE}}, ${5:prob = ${6:NULL}})",
      "doc": "Sample",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sam",
      "matches": {
        "sample": true
      },
      "source": "vscode-R/snippets"
    },
    "4b882e03-8f7d-388f-b46a-d44579a268df": {
      "content": "<ol>\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true
      },
      "source": "vim-snippets/snippets"
    },
    "4b9f9afc-18d4-337e-889f-fb4c9001a7e5": {
      "content": "margin-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ba24601-e5b7-3cad-aa25-1e288fde249c": {
      "content": "if { [catch {${1:#do something...}} ${2:err}] } {\n\t${0:# handle failure...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4bab0d8b-4c31-3efb-8ea7-3430da62d390": {
      "content": "import { ${1} } from '${2}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import { member } from 'xyz'",
      "matches": {
        "imm": true
      },
      "source": "snippets/javascript"
    },
    "4bae3cdc-db43-3dd0-9636-a6160ec89f39": {
      "content": "| first",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "first": true
      },
      "source": "vim-snippets/snippets"
    },
    "4bb75f1a-b366-37a5-acb6-ca671d8ba589": {
      "content": "border-style: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "4bbaa554-f17d-38b3-b5b0-f6f01bb2e40a": {
      "content": "text-decoration ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "4bc0b2bb-0b0a-36cf-b1df-028079b12686": {
      "content": "$.post '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxpost": true
      },
      "source": "snippets/coffee"
    },
    "4bc1b134-0ae0-3256-b67b-d84af5dd25b3": {
      "content": "func ${1:name}(${2:#:arguments}) -> ${3:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "func name(...) -> Type { ... }",
      "matches": {
        "func": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4bd6a044-b4d4-34cf-bcfb-e11eb81d8eac": {
      "content": "#include <iostream>\nint main(int argc, char* argv[])\n{\n    std::cout << \"hello, world!\" << std::endl;\n    return 0;\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "#include<iostream> int main...",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4be349cb-f8d9-31e7-9597-ead2bea5fb47": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "4be8c36f-2594-3965-b666-ff4aa1b36804": {
      "content": "<#assign ${1:variable_name} = ${0:value${VISUAL}} />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#assign variable_name = value />",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/snippets"
    },
    "4be9f4fe-29b0-3dcc-b22d-d73c5972af28": {
      "content": "get ${1:#:NAME}() {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4bf69140-98f0-3103-b694-2a9100aee015": {
      "content": "Run Keyword If All Critical Tests Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If All Critical Tests Passed",
      "matches": {
        "rkiactp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4bff7534-edca-3d7d-bee9-046a503a7655": {
      "content": "font-emphasize-position: after;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c055d38-a543-31e1-9ef1-a55ba21b4023": {
      "content": "background-attachment: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c17dada-d220-331a-855e-92df4a1b8415": {
      "content": "{% cycle '${1:group name}': '${2:odd}', '${3:even}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cyclegroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c19e76f-7b9e-3979-8f66-38c0579ce61c": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c23731f-1000-30c3-afe0-f500e608db8c": {
      "content": "require_relative '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c246411-ae32-36cf-8fd8-f6738f979b77": {
      "content": "class ${1:MODEL_NAME}DeleteView(DeleteView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Delete View",
      "matches": {
        "deleteview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4c34b7b9-ca9e-3afe-8b33-265401b161c9": {
      "content": "checkEvents() {\n\tthis.router.events.subscribe(event => {\n\t\tswitch (true) {\n\t\t\tcase event instanceof ${1:eventName}:\n\t\t\t\t$0\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n}",
      "doc": "Angular Router Events",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Router Events",
      "matches": {
        "a-router-events": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "4c357a95-f515-3658-9f24-d126b34e9f0e": {
      "content": "<xsl:variable select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "variable": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c3e2ba0-6759-3e3a-8896-5ade45c8178f": {
      "content": "{% from '${1:#:module}' import ${2:#:macro} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% from '...' import ... %}",
      "matches": {
        "from": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4c3f8b12-8137-3dda-868e-9ebf73bd3b05": {
      "content": "#${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create private field using #",
      "matches": {
        "#+": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c510754-0794-3f24-a2df-1b74ad793d9b": {
      "content": "fmt.Println(${0:TARGET})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true,
        "println": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4c6079d5-be06-3890-9128-9f20f2515ce0": {
      "content": "opacity ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c655249-4110-3135-88b0-85047af223ca": {
      "content": "\\${0:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:#optional}",
      "matches": {
        "0#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4c6a34a7-738a-3cc7-a073-a9e77743f220": {
      "content": "import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport ${1:rootReducer} from '${1:./reducers/index}';\n\nconst store = createStore(\n  ${1:rootReducer},\n  applyMiddleware(thunk)\n);",
      "doc": "Create store with thunk template",
      "filetype": "redux-thunk",
      "grammar": "lsp",
      "label": "redux-thunk-store",
      "matches": {
        "redux-thunk createstore": true
      },
      "source": "javascript/redux-thunk"
    },
    "4c6e7412-7812-3b17-ab33-55ffb372b205": {
      "content": "display: compact",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c71ab10-5cd6-3da6-ad70-d9f849aa7975": {
      "content": "${fn:length(${0:collection_or_string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "length": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c72562f-42ff-39b6-a9ac-c33e1ad40ea8": {
      "content": "\\begin{flushleft}\n\t${1:TARGET}\n\\end{flushleft}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{flushleft} \\flushleft": true,
        "flushleft": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4c80b16a-bd3e-33ac-a372-f1a68cfa62d0": {
      "content": "case ${1:${VISUAL}} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c8b85dc-b44b-3edd-9803-b6b12e690f05": {
      "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doct": true
      },
      "source": "vim-snippets/snippets"
    },
    "4c8c607c-0e10-3382-bd03-d146f75a6a38": {
      "content": "describe '${1:description}', ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "Describe (coffee)",
      "matches": {
        "des": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4c908006-245d-39b6-8cf9-7678d3166c17": {
      "content": "console.assert(${1:expression}, ${2:object});",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleassert",
      "matches": {
        "base console assert": true
      },
      "source": "javascript/base"
    },
    "4c9244ff-0d23-3bbb-9162-97b03e30c9a2": {
      "content": "# Client App\nFROM johnpapa/angular-cli as client-app\nLABEL authors=\"${1:John Papa}\"\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --silent\nCOPY . .\nRUN ng build --prod\n\n# Node server\nFROM ${2:node:12-alpine} as node-server\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --production --silent && mv node_modules ../\nCOPY ${3:server.js} .\nCOPY ${4:/server} /usr/src/app/server\n\n# Final image\nFROM ${2:node:12-alpine}\nWORKDIR /usr/src/app\nCOPY --from=node-server /usr/src /usr/src\nCOPY --from=client-app /usr/src/app/dist ./\nEXPOSE ${5:3000}\n# CMD [\"node\", \"server.js\"]\nCMD [\"npm\", \"start\"]\n$0",
      "doc": "Multi-stage Node and Angular Dockerfile",
      "filetype": "dockerfile",
      "grammar": "lsp",
      "label": "Multi-stage Node and Angular Dockerfile",
      "matches": {
        "docker-angular-node-multi-stage": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "4caf585d-d24d-3156-9964-02614dd7e23c": {
      "content": "justify-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cb517e3-7518-3097-90d9-064067c9d524": {
      "content": "subset(${1:array}, ${0:offset});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subset": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cb97dbe-3174-3dca-9dcf-b3b5e616c381": {
      "content": "append(${1:slice}, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "append",
      "matches": {
        "ap": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cbce0cc-4176-39d9-899b-d4a17311bb28": {
      "content": "import _root_.net.liftweb.http._\nimport S._\nimport _root_.net.liftweb.util._\nimport Helpers._\nimport _root_.scala.xml._",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liftimports": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cc3a92a-cfaa-350b-ac4c-a793784f780e": {
      "content": "logical :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cc59fd0-df5b-365c-98ca-f141b60c5b04": {
      "content": "\\${${0:interpolation${VISUAL}}!\"${1:default_string}\"\\}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "\"${interpolation!\"default_string\"}\"",
      "matches": {
        "intd": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cc9db7d-400e-372a-a448-2ea80d722aca": {
      "content": "if err := ${1:condition}; err != nil {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err := ...; err != nil { ... }",
      "matches": {
        "ife": true
      },
      "source": "gosnippets/snippets"
    },
    "4cd72dff-a4ce-34ca-9515-d1c747425605": {
      "content": "# Execute resource\nexecute ${1:\"command to execute\"} do # The command to execute\n\t${2:#}creates ${3:nil} # A file this command creates - if the file exists, the command will not be run.\n\t${4:#}cwd ${5:nil} # Current working directory to run the command from.\n\t${6:#}environment ${7:nil} # A hash of environment variables to set before running this command.\n\t${8:#}group ${9:nil} # A group name or group ID that we should change to before running this command.\n\t${10:#}path ${11:nil} # An array of paths to use when searching for the command. Nil uses system path.\n\t${12:#}returns ${13:0} # The return value of the command - this resource raises an exception if the return value does not match.\n\t${14:#}timeout ${15:nil} # How many seconds to let the command run before timing it out.\n\t${16:#}user ${17:nil} # A user name or user ID that we should change to before running this command.\n\t${18:#}umask ${19:nil} # Umask for files created by the command\n\t${20:#}${21:action :run} # Run this command (Default)\n\t${22:#}${0:action :nothing} # Do not run this command\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "execute": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cd780a6-58b4-3dd4-865f-b271e5969fb3": {
      "content": "with ${1:expr} as ${2:var}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "4cea2311-150a-3f3f-902a-b382bff15ab0": {
      "content": "_.reject(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n_.reject(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.reject(users, { 'age': 40, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.reject(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.reject(users, 'active');\n// => objects for ['barney']\n\nThe opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reject",
      "matches": {
        "lodash reject": true
      },
      "source": "javascript/lodash"
    },
    "4cf2827d-b36d-321c-997f-f480b04b7c9e": {
      "content": "${1:obj}.replaceAll(${2:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repa": true
      },
      "source": "snippets/javascript"
    },
    "4cfbff75-1c1a-3e7d-bb58-127d07216e51": {
      "content": "nfc(${1:value}${2:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d03e0ae-ebe0-34b5-8834-ce00f86489a5": {
      "content": "#endregion",
      "doc": "Folding Region End",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      },
      "source": "vscode-R/snippets"
    },
    "4d0a5537-b1f2-3328-9268-02e3806cc9bf": {
      "content": "font-stretch semi-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d10f7a4-e42f-3ff9-950b-9a3917bf0df6": {
      "content": "private",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d15fb29-db8d-3493-b7aa-c40f6c042339": {
      "content": "overflow-x: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d1f2906-6c34-3335-ac9f-fa1a2f69c8a6": {
      "content": "dictsort(case_sensitive=${1:False}, by=${2:'key'})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sort and yield (key, value) pairs",
      "matches": {
        "dictsort": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4d1f61ea-8941-3867-b96c-5914b9f89c66": {
      "content": "int ${1:f}${2: = }${0:0};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d1f9893-7ef4-31b9-aee6-49c60b2e97c2": {
      "content": "$this->${1:method}()->shouldStartWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldStartWith('string')",
      "matches": {
        "sstart": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4d20b9f8-8919-33bc-adc6-d418e67f83ec": {
      "content": "| md5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md5": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d224309-2ae5-35ca-8836-39386189f797": {
      "content": "beforeEach(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "before each (js)",
      "matches": {
        "bef": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d227bea-3e9b-34a8-802d-266f1f74d9ae": {
      "content": "_.dropRight(${array}, ${n})",
      "doc": "_.dropRight([1, 2, 3]);\n// => [1, 2]\n\n_.dropRight([1, 2, 3], 2);\n// => [1]\n\n_.dropRight([1, 2, 3], 5);\n// => []\n\n_.dropRight([1, 2, 3], 0);\n// => [1, 2, 3]\n\nCreates a slice of `array` with `n` elements dropped from the end.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-dropright",
      "matches": {
        "lodash dropright": true
      },
      "source": "javascript/lodash"
    },
    "4d25bb48-5b4e-364b-b4ba-a3f51eb73632": {
      "content": "@book{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tsubtitle={${4:subtitle}},\n\tyear={${5:YYYY}},\n\tlocation={${6:somewhere}},\n\tpublisher={${7:publisher}},\n\tpages={${8:NN}--${9:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Book reference",
      "matches": {
        "book": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4d3012ab-2312-3f7f-a4f4-537c0d468fca": {
      "content": "cast(${1:T})(${2:val});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cast": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d3019c8-2703-35c2-ad85-872bdeaae7a3": {
      "content": "\\documentclass[${1}]{${2:article}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\documentclass": true,
        "documentclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4d4aae75-c565-3fd6-9c6d-494a14a0c336": {
      "content": "_.unzip(${array})",
      "doc": "var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n\n_.unzip(zipped);\n// => [['a', 'b'], [1, 2], [true, false]]\n\nThis method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-zip\nconfiguration.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unzip",
      "matches": {
        "lodash unzip": true
      },
      "source": "javascript/lodash"
    },
    "4d4c1835-c954-3345-8865-e182f715a564": {
      "content": "componentDidMount() {\n\t$0\n}\n",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentdidmount",
      "matches": {
        "cdm": true,
        "react componentdidmount": true
      },
      "source": "javascript/react"
    },
    "4d54d427-3968-3bf7-a18a-847a89821255": {
      "content": "RemoteIPHeader X-Forwarded-For",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "RemoteIPHeader": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4d54e042-7620-3df1-8b6a-9fe736b14b82": {
      "content": "min-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d5624df-44c0-3d24-b84f-2480eba924cd": {
      "content": "border-fit: scale;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d5956ef-2c71-3889-9803-9aee8984d14c": {
      "content": "${1:obj}.resize (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resize": true
      },
      "source": "snippets/coffee"
    },
    "4d68ae17-c05b-3aed-bbc8-6ce6957a0c17": {
      "content": "@return {${1:Type}} ${2:Description}",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@return {Type} Description",
      "matches": {
        "@ret": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4d7aa2ca-3fa6-3702-9a91-25b101285f24": {
      "content": "if (${1:/* condition */}) ${2};",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d7d3392-4108-3fe1-aa9d-ec84fd2f7ddc": {
      "content": "border-top-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d83632b-3055-3288-b00f-0a8e0dd55849": {
      "content": "set yrange [${1:*}:${2:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set yrange [Y1:Y2]",
      "matches": {
        "yrange": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4d875b64-491c-34cc-86d7-44f4e287d253": {
      "content": "import ${1:Html} as ${2} exposing (${2:..})\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... as ... exposing (..)",
      "matches": {
        "impae": true,
        "importAsExposing": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4d87a54c-9e7c-3aae-ac75-7cd4ae5980b3": {
      "content": "grid-auto-columns: max-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d93a396-af7f-3bee-8343-86874bd417b1": {
      "content": "(for/first ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/first",
      "matches": {
        "forfi": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d97ca94-6f5d-3d8a-8642-8fe2e3564f7b": {
      "content": "<legend>${0}</legend>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d98becb-64a9-3ca8-abe5-912fcb038290": {
      "content": "{% debug %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4d99f419-0027-36cb-a6b2-8e12597899d1": {
      "content": "<style lang=\"less\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with less scoped",
      "matches": {
        "style_with_less_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4d9b1df4-d9eb-3ccc-a440-aba73c784ec3": {
      "content": "${1:ModelName}::model()->findAllByPk(${2:pk}, ${3:condition},array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindabp": true
      },
      "source": "vim-snippets/snippets"
    },
    "4d9de2b3-96e0-3019-beac-73b1c6806dc4": {
      "content": ":- begin_tests(${1:name}).\n  ${0}\n:- end_tests($1).",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begintest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4da00508-4342-32aa-a98c-8d803d5d9bf4": {
      "content": "expect($1).toBeTruthy();$0",
      "doc": "expects the argument is truthy",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobetruthy",
      "matches": {
        "jest expect tobetruthy": true,
        "tbt": true
      },
      "source": "javascript/jest"
    },
    "4da70400-50b0-359f-8fb8-80192976322c": {
      "content": "Run Keyword If Test Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Test Failed",
      "matches": {
        "rkitf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4dab8629-da84-3fb5-a628-dc6d7701be7f": {
      "content": "{% elif %}$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ielif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4dbc51bd-a433-3af5-bea4-579052a7ee8f": {
      "content": "<ins>${1:TARGET}</ins>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ins": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4dc275eb-145f-3eb8-9e7a-3a9feb397375": {
      "content": "(for/foldr\n\t([${1}])\n\t([${2}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/foldr",
      "matches": {
        "forfr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4dc8f424-e99f-3942-9cd3-0f77bd792d6b": {
      "content": "${1:#:value_name}: ${0:#:value},",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": ":,",
      "matches": {
        "key-value": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4dc9c602-15b7-3bd1-bb85-bdd527d56ec4": {
      "content": "text-decoration: line-through",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "4dcdb06b-f5db-3a3d-8dc5-def05ac5a01d": {
      "content": "Run Keyword And Return If    '\\${${1:rc}}' != '${2:abc}'    ${3:${kw}}    ${4:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return If",
      "matches": {
        "rkari": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4de95c6c-98ba-35e8-b217-567e9ea4db82": {
      "content": "public ${1:int} ${2} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+|": true
      },
      "source": "vim-snippets/snippets"
    },
    "4deedc78-456e-3293-b1b9-20cd3dceb90a": {
      "content": "align-self last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "4df9362e-c994-3271-b267-90bba107f0ed": {
      "content": "align-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "4dfc10c8-6bef-3c05-a72c-63928dd3c703": {
      "content": "require('dotenv-safe').config({ debug: ${1|true,false|} })",
      "doc": "You may turn on logging to help debug why certain keys or values are not being set as you expect.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-debug",
      "matches": {
        "dotenv-safe debug": true
      },
      "source": "javascript/dotenv-safe"
    },
    "4dfe6c8f-6db9-313c-aade-e9cc346d748c": {
      "content": "{% empty %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4dfeb026-2621-3434-8ab3-16d643957c93": {
      "content": "\\\\begin{description}\n\t\\\\item[${1}] ${0}\n\\\\end{description}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "description environment",
      "matches": {
        "desc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4dffe07a-0daf-3bc3-8f5f-07febdbbbc46": {
      "content": "margin-top: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-top: length (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4e084f7b-7399-3d0d-9a0f-6177935448dd": {
      "content": "<input type=\"${1:text/submit/hidden/button/image}\" name=\"${2}\" id=\"${3:$2}\" value=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e0a8eab-38ae-3657-887f-4b29331ca5bc": {
      "content": "${1:FIELDNAME} = models.XMLField(schema_path=${2:None}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e0c1aaf-4e3a-3942-8072-3bf615c2d34f": {
      "content": "assert_redirected_to ${2:${12:model}_path(${13:@}${14:$12})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (path)",
      "matches": {
        "artp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4e1864bc-7824-3da3-ab85-95f0ad971369": {
      "content": "${1:obj}.hide '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hidec": true
      },
      "source": "snippets/coffee"
    },
    "4e1c426f-bda8-3e48-bc58-26d3f9817fd5": {
      "content": "width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e1d52f7-3c72-38bb-afe0-604895e0093d": {
      "content": "$this->assertContainsOnly(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContainsOnly($needle, $haystack)",
      "matches": {
        "ascono": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e1ea9e3-aa00-322f-8e35-18d827b13d2d": {
      "content": "reverse_each do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reved": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e259b23-e7a9-3581-9944-5c3c8f4b9bac": {
      "content": "$${1:variable}: ${0:value};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e2fca8f-fe26-3298-9fe9-b577a4efc3da": {
      "content": "<%= render partial: '${1:item}', locals: { :${2:name} => '${3:value}'${0} } %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e32b00b-51e1-3229-a391-d7fa9bf250e2": {
      "content": "<slot></slot>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slot": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e33a123-64c4-3aea-a242-5ed8cfc364fa": {
      "content": "align-items: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e343699-d012-3a5a-9d66-f27db8f0447e": {
      "content": "organization = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "organization": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4e37e176-0b66-3e42-9d01-0c82b0a8854e": {
      "content": "font-effect engrave",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e46bc45-1c49-3183-a7ba-dc8f00125c17": {
      "content": "public static void main (String[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psvm": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e473194-bc47-3da9-a314-be200af6dcd1": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} commodity ${4:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "declare commodity",
      "matches": {
        "commodity": true,
        "currency": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4e499315-a5c1-36cd-9a4a-f86d2faa160e": {
      "content": "border-style: ridge;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e4f8aa6-8654-3ea1-9d28-d4e848a23d5a": {
      "content": "print(${0:TARGET})",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true,
        "print": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4e50831c-3732-38d5-a279-1b97e2a66c0a": {
      "content": "render text: '${1:text to render}', layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rtl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e51e916-f66d-3941-9dc8-1477eb2083a9": {
      "content": "if __name__ == '__main__':\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "if __name__ == '__main__': ...",
      "matches": {
        "ifmain": true,
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4e531708-4ac5-3a27-8f33-5fc91461b37a": {
      "content": "echo CHtml::statefulForm(array('${1}'), '${2:post}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhsform": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e5a9107-42ae-38c4-a54d-84969df37736": {
      "content": "$.cssHooks['${1:CSS prop}'] = {\n\tget: (elem, computed, extra) ->\n\t\t${2: // handle getting the CSS property}\n\tset: (elem, value) ->\n\t\t${0: // handle setting the CSS value}\n}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csshooks": true
      },
      "source": "snippets/coffee"
    },
    "4e6101b3-4543-333a-bc58-badece574e13": {
      "content": "for (final ${2:item} in ${1:itemList}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e67e3dc-8d56-33c6-b56e-101917f33a90": {
      "content": "\\begin{thebibliography}\n\t${1:TARGET}\n\\end{thebibliography}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{thebibliography} \\thebibliography": true,
        "thebibliography": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4e6865d7-e00d-3c56-a6b0-776567685e86": {
      "content": "{% namespace \"${1}\" %}\n\t${0}\n{% endnamespace %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig namespace",
      "matches": {
        "namespace": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e694498-8ee4-3d3c-91cb-b613c6a758d0": {
      "content": "vertical-align: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e73f79e-abbb-3bd4-b5dd-d9ce69e829db": {
      "content": "NSMutableDictionary *${1:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSDictionary (dict)",
      "matches": {
        "dict": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4e764923-c395-3477-90b3-da09c833cbc6": {
      "content": "alias ${1:b} = ${2:a};\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e7ed73a-a3ce-30ed-8c1d-7878e4edf8ca": {
      "content": "${1:FIELDNAME} = models.BooleanField(${0:default=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e83cfc8-9902-35d0-b283-dfae0096546c": {
      "content": "method ${1:!}${2:method_name}(${3:$attr}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pmth": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e84fc1e-3d67-3031-879e-b241bdc33065": {
      "content": "before_filter :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bf": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e89d5ed-57da-35d0-a70c-dfbea5630db9": {
      "content": "string.length()",
      "doc": "string.length(limit: number | Ref, message?: string | function): Schema\n\nSet a required length for the string value. The ${length} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-length",
      "matches": {
        "yup string length": true
      },
      "source": "javascript/yup"
    },
    "4e8b3884-af11-31d4-87d9-0c51b2d0b8bc": {
      "content": "log(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e8b3b79-c8fa-33e3-93d7-86047b55e862": {
      "content": "when (${1:case}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e8df14a-c175-3e4a-a4ce-6b0de1c4ee3b": {
      "content": "const ${dragControls} = useDragControls()",
      "doc": "useDragControls()\nBy creating a dragControls using the useDragControls hook, we can pass this into the draggable component's dragControls prop.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-drag-controls",
      "matches": {
        "framer-motion use-drag-controls": true,
        "use-drag-controls": true
      },
      "source": "javascript/framer-motion"
    },
    "4e99ade1-c37b-32ab-a057-c845b58b8acf": {
      "content": "[${1:id}]: https://${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:\"": true
      },
      "source": "vim-snippets/snippets"
    },
    "4e9aea18-d927-3edf-880b-4479ea14f57a": {
      "content": "\\${2:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:default}",
      "matches": {
        "2:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4eaa9b07-10ef-333a-bc73-e97b774e373d": {
      "content": "word-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      },
      "source": "vim-snippets/snippets"
    },
    "4eb80b59-feed-3a16-9327-deaac4327767": {
      "content": "set the_choice to choose from list ${1}\"\\}}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_ItemFromList": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4eca16b9-c342-3193-bd86-bbbe34ecb397": {
      "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component as a named function with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessFunctionProps",
      "matches": {
        "rsfp": true
      },
      "source": "vscode-react/snippets"
    },
    "4ecb24e2-6c02-398a-b974-2784b003a93e": {
      "content": "_.toNumber(${value})",
      "doc": "_.toNumber(3.2);\n// => 3.2\n\n_.toNumber(Number.MIN_VALUE);\n// => 5e-324\n\n_.toNumber(Infinity);\n// => Infinity\n\n_.toNumber('3.2');\n// => 3.2\n\nConverts `value` to a number.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tonumber",
      "matches": {
        "lodash tonumber": true
      },
      "source": "javascript/lodash"
    },
    "4ecc8dec-faf0-36dd-903f-7bb682d31635": {
      "content": "font-size-adjust: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ecdabed-69e3-3f39-9947-bd4aeef78944": {
      "content": "strokeWeight(${0:1});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strokeWeight": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ed0f6a5-35ab-3422-ab7c-99de2b846f29": {
      "content": "static ${1:#:NAME}(${2:#:Args}) {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "static f(){}",
      "matches": {
        "static": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4ed3f229-0aa0-31fb-a976-86ea79a0f22e": {
      "content": "type\t\tfixedValue;\nvalue\t\tuniform ${0};",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ed4a848-5797-32d7-a83e-686d1a756009": {
      "content": "_.mapKeys(${object}, ${iteratee})",
      "doc": "_.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n  return key + value;\n});\n// => { 'a1': 1, 'b2': 2 }\n\nThe opposite of `_.mapValues`; this method creates an object with the\nsame values as `object` and keys generated by running each own enumerable\nstring keyed property of `object` thru `iteratee`. The iteratee is invoked\nwith three arguments: (value, key, object).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mapkeys",
      "matches": {
        "lodash mapkeys": true
      },
      "source": "javascript/lodash"
    },
    "4ed6cabb-b4d7-34de-905c-dc9813eb3c47": {
      "content": "use Symfony\\Component\\Validator\\Constraints as Assert;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Constraints as Assert",
      "matches": {
        "useassert": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4ee5c6d8-9892-32d0-8b7a-fff58e6d855b": {
      "content": "text-emphasis dot",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ee6233d-8f25-37b0-860b-62be84a0a999": {
      "content": "left: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ee9d2b2-7394-3e4b-9d4e-29c0cb25dfa7": {
      "content": "{% assign ${1:variable} = ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ef6abb2-6ae6-3101-b72b-4d72125a266a": {
      "content": "@change=\"${1:foo} = $event\"",
      "doc": "Vue Emit to Parent Component",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Emit to Parent",
      "matches": {
        "vemit-parent": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "4ef87743-0956-3023-be2e-9baf55da9ea6": {
      "content": "must_be_empty",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbe": true
      },
      "source": "vim-snippets/snippets"
    },
    "4efcf3d2-9df9-3f8b-b931-f95fecc41b88": {
      "content": "flex-direction: column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f0591ad-d9ca-3cc8-b95f-aeaab8f6b6eb": {
      "content": "${1:FIELDNAME} = forms.BooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BooleanField",
      "matches": {
        "fbool": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4f085cd4-183e-334f-ab50-10fb036f5850": {
      "content": "\\${2}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2}",
      "matches": {
        "2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4f0bc634-2116-36b2-aadf-f83d5024d9c1": {
      "content": "${1:obj}.position()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      },
      "source": "snippets/coffee"
    },
    "4f112a6f-ed15-325a-b667-73ea03238091": {
      "content": "left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f12f5ac-efea-398b-93d5-de77b3c240fa": {
      "content": "void mouseDragged(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseDragged": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f141a4f-8dc4-32ea-a4fd-11efcac150a9": {
      "content": "repeat\n\t$1\nuntil $0",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "repeat loop",
      "matches": {
        "repeat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4f1b019e-405e-32fe-8fea-fcd6090bdd5c": {
      "content": "(${1:a}, ${0:b})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f2367de-8a6e-3940-999e-e581a2c5bc61": {
      "content": "content: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f237fa2-95db-3c91-9fc7-9323a6e420e4": {
      "content": "echo '<pre>' . var_export(${1}, 1) . '</pre>';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "Dumb debug helper in HTML",
      "matches": {
        "ve": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f260cc2-74df-3d51-96f5-f7cfd8eea817": {
      "content": "Dir.glob(${1:'dir/glob/*'}) { |${2:file}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "Dir.global() { |file| .. }",
      "matches": {
        "Dir": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f2ba6d9-8618-3fa5-ad3a-bf76d9f627b9": {
      "content": "protected bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb|": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f31c290-c5ca-36ce-85c6-63207a6033a4": {
      "content": "$.trim('${1:string}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eltrim": true
      },
      "source": "snippets/javascript"
    },
    "4f33c3cf-dca5-308b-84d4-885290f0e493": {
      "content": "always_comb begin\n    ${1:TARGET}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_comb",
      "matches": {
        "alc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4f39411b-4f0a-36f3-ade9-68f2a54395fc": {
      "content": "\\${4:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:#optional}",
      "matches": {
        "4#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4f4a0c45-43ee-3ff4-8fbd-723bfa51294f": {
      "content": "direction: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true,
        "direction": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4f4e1a2b-2267-3077-a112-72917753a1ec": {
      "content": "function(${1:name} ${2:args})\n\t${3}\nendfunction($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "function() endfunction()",
      "matches": {
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4f549696-cd20-3e89-8d5e-03375ea475ec": {
      "content": "function* (${1:arguments}) {\n\t${0}\n}",
      "doc": "generator function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "generator-function-es6-",
      "matches": {
        "base function generator": true
      },
      "source": "javascript/base"
    },
    "4f563d5b-953e-348d-aeea-7ea747b206ab": {
      "content": "import { mapState } from 'vuex'\n\nexport default {\n\tcomputed: {\n\t\t...mapState([\n\t\t\t${1:'nameOfState'},\n\t\t])\n\t},\n}",
      "doc": "map getters inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapstate",
      "matches": {
        "vmapstate": true,
        "vue mapstate": true
      },
      "source": "javascript/vue"
    },
    "4f662cc1-29c1-3784-b891-a00603133af3": {
      "content": "border-left: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f6df8ad-f263-37fc-9f02-a51a1c09595c": {
      "content": "for ${1:name} in ${2:array}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      },
      "source": "snippets/coffee"
    },
    "4f70d367-f21b-367c-8ca9-9ba36a7be47d": {
      "content": "for (const ${1:item} of ${2:object}) {\n\t${0}\n}",
      "doc": "Iterating over property names of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forOf",
      "matches": {
        "fof": true
      },
      "source": "vscode-javascript/snippets"
    },
    "4f78807f-ccf1-3033-b41a-c27728809b28": {
      "content": "border-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4f86c0e8-f329-3ad7-a100-85450d1ce919": {
      "content": "import { use$1 } from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React hooks",
      "matches": {
        "irh": true
      },
      "source": "snippets/javascript"
    },
    "4f8e121a-beb7-35b4-a0d1-4fd17e260d43": {
      "content": "{% if ${1:condition} %}\n\t${2}\n{% else %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fa6399f-1e12-3078-8edb-9f7ade5986ff": {
      "content": "$this->redirect(array('${1:controller}/${0:action}'));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yre": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fa67281-11e3-31e0-a7ff-a9fd56daf52b": {
      "content": "<slot>${1:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot",
      "matches": {
        "svelte slot": true,
        "svsl": true
      },
      "source": "javascript/svelte"
    },
    "4fa94b91-4f39-3f47-b57b-47abd44378c1": {
      "content": "#!/usr/bin/env python3",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!3": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fb38183-39fc-3732-892f-2a950cec8cf3": {
      "content": "import * as ${2:alias} from '${1:module}';$0",
      "doc": "Imports everything as alias from the module in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importeverything",
      "matches": {
        "base import everything": true
      },
      "source": "javascript/base"
    },
    "4fb6a3c7-ac2b-3b6b-9fb4-d1c8d2fe9bd2": {
      "content": "$routeProvider.otherwise redirectTo: '${1:url}'\n${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngro": true
      },
      "source": "snippets/coffee"
    },
    "4fb7dbcf-f9b4-3d73-8e8b-4540fcb16d43": {
      "content": "> ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert quoted text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert quoted text",
      "matches": {
        "quote": true
      },
      "source": "vscode-R/snippets"
    },
    "4fc3df56-a2d6-383d-89a9-d53dd5e1c29b": {
      "content": "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React component class with connected redux and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassCompomentRedux",
      "matches": {
        "rcredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "4fc4ec9d-8051-3f42-9f99-14a7015e5656": {
      "content": "(define ${1:name}\n\t(lambda (x)(${0:definition})))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defl": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fc8f52b-43d8-3375-8cd8-634ea0dcabdd": {
      "content": "jasmine.any($1)",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "any (js)",
      "matches": {
        "any": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fcc18b7-a3a4-361f-b4ee-e85840430a45": {
      "content": "<style lang=\"postcss\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with postcss scoped",
      "matches": {
        "style_with_postcss_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4fcef6be-67ea-3add-a7bd-594229037a24": {
      "content": "@doc false\ndef child_spec(${1:_opts}) do\n\t%{\n\t\tid: __MODULE__,\n\t\tstart: {__MODULE__, :start_link, ${2:[]}},\n\t\trestart: ${3::permanent},\n\t\tshutdown: ${4:5000},\n\t\ttype: ${5::worker}\n\t}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fcf6d14-ec4d-3cf8-93f7-ff461919778b": {
      "content": "if (${1}) {\n\t${2}\n}\nelse {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fd2f7e5-d489-3471-b943-50879da7ebad": {
      "content": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: '${1:selector-name}'\n})\n\nexport class ${2:Name}Pipe implements PipeTransform {\n\ttransform(value: any, ...args: any[]): any {\n\t\t$0\n\t}\n}",
      "doc": "Angular pipe",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Pipe",
      "matches": {
        "a-pipe": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "4fd35faa-d229-3b8a-bdcd-04c116c20b73": {
      "content": "/*\n\t${0}\n */",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fd6c383-da18-37b2-ae98-bfad02cc3e1c": {
      "content": "componentDidMount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentDidMount",
      "matches": {
        "componentDidMount": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "4fdf7cae-2b50-31e5-9f11-37419ffd5b25": {
      "content": "border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fe09f82-17db-3aaf-8c96-0442d6352910": {
      "content": "def ${1:name}(${2:args}) when ${3:guard}, do:",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfw": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fe983b3-e36d-3921-851c-96b9884671d0": {
      "content": "def initialize(${1:args})\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "definit": true
      },
      "source": "vim-snippets/snippets"
    },
    "4fed1461-2562-338f-a6f9-b7163e574ecc": {
      "content": "[ngClass]=\"{${1:cssClass}: ${2:expression}}\"",
      "doc": "Angular ngClass",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngclass",
      "matches": {
        "a-ngclass": true,
        "angular ng class": true
      },
      "source": "javascript/angular"
    },
    "4ff1e13f-4989-3ce7-9bc3-d377c941e59c": {
      "content": "function(${1}) { ${0:TARGET} };",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "4ff76f1c-3df9-3829-ae28-789f00cf3d16": {
      "content": "println(\"${0}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "4ff968ea-afa0-394c-92ea-3859753e7871": {
      "content": "#[bench]\nfn ${1:bench_function_name}(b: &mut test::Bencher) {\n\tb.iter(|| {\n\t\t${0}\n\t})\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Bench function",
      "matches": {
        "bench": true
      },
      "source": "vim-snippets/snippets"
    },
    "50054961-3c86-3578-806b-cb6da9954453": {
      "content": "(defn ${1:name}\n\t\"${2:doc}\"\n\t[${3}]\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "defn function \"...\" [...] ...",
      "matches": {
        "defn-doc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5005ffc1-e5f0-3068-b161-8eaa13c3e434": {
      "content": "*args${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args": true
      },
      "source": "vim-snippets/snippets"
    },
    "5006de63-6dd9-3e90-8428-a70e13a27fd3": {
      "content": "elif ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      },
      "source": "vim-snippets/snippets"
    },
    "5010b6df-3c28-378b-8ccb-39d0820cd57c": {
      "content": "Page Should Not Contain Link    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Link",
      "matches": {
        "psncl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5015b35a-91a9-3b44-a047-3baed2caf72a": {
      "content": "text-outline ${1:0} ${2:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5016dbb2-2686-31f1-a898-c66a0e7665e6": {
      "content": "$.proxy(${1:function}, ${2:this})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      },
      "source": "snippets/javascript"
    },
    "50183c0e-4be3-388c-af12-c0cfba8eda74": {
      "content": "$.isXMLDoc(${1:node})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isxml": true
      },
      "source": "snippets/coffee"
    },
    "501db884-049b-36b6-af7e-48a94a84898f": {
      "content": "margin: ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "501fe8d6-ab02-34d9-970f-366182564e10": {
      "content": "grid-auto-flow ${1:row} ${0:dense}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5021b648-030f-3aaf-9e1d-339c9f5849e5": {
      "content": "else if (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "5029ad9a-7a2c-3f7f-bb15-4a4d5bd02b09": {
      "content": "public ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+": true
      },
      "source": "vim-snippets/snippets"
    },
    "502a2310-6079-3ef5-a65e-064ac8c25828": {
      "content": "${1:ModelName}::model()->find(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfind": true
      },
      "source": "vim-snippets/snippets"
    },
    "502da015-617e-33f5-b893-105f0443d3cd": {
      "content": "type ${1:name} struct {\n\t${2:attrName} ${3:attrType}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "composite literals",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "5037d6d5-4020-3e27-9c97-03991c97746b": {
      "content": "date:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      },
      "source": "vim-snippets/snippets"
    },
    "503907c3-6917-3ac3-8740-ae15089d02f3": {
      "content": "@media screen and (min-width: ${0}px)",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@msmw": true
      },
      "source": "vim-snippets/snippets"
    },
    "503b8987-9607-33a9-b69a-efcbe510dcd2": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\">\n\t<option value=\"${3}\">${4:$3}</option>\n\topt+${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select+": true
      },
      "source": "vim-snippets/snippets"
    },
    "503dd0a6-9ec2-38ce-a2a8-969c26fcf08b": {
      "content": "export default $1$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportDefault",
      "matches": {
        "exp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "50502888-a0c8-3e89-abae-9bcbec1f2188": {
      "content": "( ${0:#statements} )",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(": true
      },
      "source": "vim-snippets/snippets"
    },
    "5053ada0-d2ea-3e18-b98f-bf5074b02963": {
      "content": "justify-content right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "50549e30-35cd-3dd9-8c39-3f4f1e4a5cd8": {
      "content": "import { ${1:map} } from 'rxjs/operators';\n$0",
      "doc": "RxJs import",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "RxJs Operator Import",
      "matches": {
        "a-rxjs-operator-import": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "5055b0d2-b22e-3a56-a371-e6de3ce78d43": {
      "content": "background-position: ${1:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-position:  position (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "505b0695-457b-3ac9-b0c1-3a3633949158": {
      "content": "padding: ${1:0} ${2:0} ${3:0} ${4:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "50631282-bed1-3337-b3f8-47f57c8833d7": {
      "content": "\\ *${1:Emphasis}*\\ ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*c": true
      },
      "source": "vim-snippets/snippets"
    },
    "506c2b27-88df-35c4-b459-7878ae22c8c2": {
      "content": "${1:public} ${2:int} ${3} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      },
      "source": "vim-snippets/snippets"
    },
    "506d2f59-58a1-3a58-8f02-da3b2dc177f7": {
      "content": "@after-leave=\"$1\"$0",
      "doc": "@after-leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-leave",
      "matches": {
        "afterleaveevent": true,
        "vue after-leave": true
      },
      "source": "javascript/vue"
    },
    "5076aded-f82e-3325-a18e-0da042b6771e": {
      "content": "${1:obj}.addClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addClass": true
      },
      "source": "snippets/coffee"
    },
    "507c5392-47a9-3f28-a86a-a56d2daf12fe": {
      "content": "_.find(${collection}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': true }\n];\n\n_.find(users, function(o) { return o.age < 40; });\n// => object for 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.find(users, { 'age': 1, 'active': true });\n// => object for 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.find(users, ['active', false]);\n// => object for 'fred'\n\n// The `_.property` iteratee shorthand.\n_.find(users, 'active');\n// => object for 'barney'\n\nIterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-find",
      "matches": {
        "lodash find": true
      },
      "source": "javascript/lodash"
    },
    "5089eca1-4dd6-31b5-ba93-18829daf2d70": {
      "content": "list-style-type none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "508c9dbd-9cb1-39af-943b-78852dd59d43": {
      "content": "beforeEach ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "before each (coffee)",
      "matches": {
        "bef": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5093749e-7e55-34a1-bdcb-30e371717f96": {
      "content": "I18n.t('${1:type.key}')",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i18": true
      },
      "source": "vim-snippets/snippets"
    },
    "5094703d-7714-3d69-8d89-b17f38f7fe88": {
      "content": "align-items: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "509a7e32-c276-3433-85b1-47426871ce3c": {
      "content": "_.stubObject()",
      "doc": "var objects = _.times(2, _.stubObject);\n\nconsole.log(objects);\n// => [{}, {}]\n\nconsole.log(objects[0] === objects[1]);\n// => false\n\nThis method returns a new empty object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubobject",
      "matches": {
        "lodash stubobject": true
      },
      "source": "javascript/lodash"
    },
    "509abc17-f510-390b-a1c4-7b8bb3608255": {
      "content": "{% ifequal ${1} ${2} %}\n\t${0}\n{% endifequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      },
      "source": "vim-snippets/snippets"
    },
    "50a3dd36-c3d5-348d-927e-09387a75bf0b": {
      "content": "for (int ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {\n\t${0:$1[$2]}\n};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "50b49bb1-8adc-3dd5-9b98-916c046afdea": {
      "content": "align-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "50b62775-62a1-3c49-bb93-fc0ad7cd114c": {
      "content": "set(${1:x}, ${2:y}, ${0:color/image});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "pixel",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "50b7b68e-9e1d-3de1-a1b0-7944b89329a7": {
      "content": "switch ( ${1:#:condition} ) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "50c771a0-dc22-3d62-a3f9-1d7417efd431": {
      "content": "${1:obj}.andSelf()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "andself": true
      },
      "source": "snippets/javascript"
    },
    "50cb9e4f-a8c4-3def-9d58-0ff1d582e5b2": {
      "content": "throw(${1})\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "throw",
      "matches": {
        "thr": true
      },
      "source": "vim-snippets/snippets"
    },
    "50d1c86b-9995-3b37-90ed-c5ca4a42d640": {
      "content": "\\\\rightarrow {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "rightarrow",
      "matches": {
        "ra": true
      },
      "source": "vim-snippets/snippets"
    },
    "50d47306-1f3f-34a1-b4bb-e6c0454406be": {
      "content": "place-items: ${1:stretch} ${2:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      },
      "source": "vim-snippets/snippets"
    },
    "50d4ae0d-1403-3405-afb4-cfb665081707": {
      "content": "each_line {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_line": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "50e346c1-ea3b-3252-9bef-f8a31dfd947d": {
      "content": "justify-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "50e48085-e376-3e7d-a7eb-38364999e24f": {
      "content": "render json: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rjson": true
      },
      "source": "vim-snippets/snippets"
    },
    "50eb1e33-7dca-3404-93e8-3da2bfef3284": {
      "content": "| ${1} => ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      },
      "source": "vim-snippets/snippets"
    },
    "50ec2c58-e7aa-36fc-83a1-4a22b9f99c1e": {
      "content": "sq(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sq": true
      },
      "source": "vim-snippets/snippets"
    },
    "50ef1067-26fb-37f0-b070-c10a68986e26": {
      "content": "${1:FIELDNAME} = forms.FloatField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FloatField",
      "matches": {
        "ffloat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "50fb4318-d6ce-399c-8b40-2eba9bcee3a2": {
      "content": "border-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "510256d1-2edc-37ef-98be-99a1e1a46456": {
      "content": "@OneToMany${1:(cascade=CascadeType.ALL)}\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "om": true
      },
      "source": "vim-snippets/snippets"
    },
    "510c6ff7-bcc5-3e1c-b39b-29c153adae40": {
      "content": "<th id=\"${1}\">${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th#": true
      },
      "source": "vim-snippets/snippets"
    },
    "511bf6f4-c07b-3117-ace0-e9f07680f097": {
      "content": "_.isLength(${value})",
      "doc": "_.isLength(3);\n// => true\n\n_.isLength(Number.MIN_VALUE);\n// => false\n\n_.isLength(Infinity);\n// => false\n\n_.isLength('3');\n// => false\n\nChecks if `value` is a valid array-like length.\n\n**Note:** This method is loosely based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-islength",
      "matches": {
        "lodash islength": true
      },
      "source": "javascript/lodash"
    },
    "512329e1-c246-3a52-a2e9-a6c97f97315a": {
      "content": "visibility collapse",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "51247e20-0bd3-3bd1-a317-df2928e3d7cb": {
      "content": "console.table(${1:\"${2:value}\"});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.table",
      "matches": {
        "ctable": true
      },
      "source": "snippets/javascript"
    },
    "513196f3-59e0-38a0-a5de-97274dc1a1d5": {
      "content": "$this->${1:method}()->shouldReturn(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldReturn('value')",
      "matches": {
        "sreturn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5137d359-0477-3e8d-93de-cbea97e889a2": {
      "content": "${1:expression} foreach @${2:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "513a2786-7d20-3df8-b5ab-9f3934890acd": {
      "content": "validates :${1:attribute}, format: { with: /${0:regex}/ }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vf": true
      },
      "source": "vim-snippets/snippets"
    },
    "513c543a-5bb3-3bf9-816e-28505f10b2ba": {
      "content": "\" vim: ${0:foldmethod=marker}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "\" vim: {modeline}",
      "matches": {
        "modeline": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "513f415a-9971-39aa-a1c3-69e494a6f292": {
      "content": "lock (${1:#:resource}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "lock () {}",
      "matches": {
        "lock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5149e4a4-a3d3-31b7-a643-79b1526c4824": {
      "content": "validates_exclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not allowed}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of (ve)",
      "matches": {
        "ve": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5152c3ba-9556-3f3f-84f8-52af369f2d4a": {
      "content": "slot-scope=\"$1\"$0",
      "doc": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slotscope",
      "matches": {
        "slotscope": true,
        "vue slotscope": true
      },
      "source": "javascript/vue"
    },
    "516a7edc-f878-36e8-baa7-2b449646d477": {
      "content": "*ngIf=\"${1:expression}\"",
      "doc": "Angular *ngIf",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngif",
      "matches": {
        "a-ngif": true,
        "angular ng if": true
      },
      "source": "javascript/angular"
    },
    "516d4961-0fbe-3c48-8cc9-58176c6866e8": {
      "content": "_Generic(${1:#:expression}, ${2:#:association-list})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_Generic": true,
        "generic, select": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5172ec6e-f380-33b2-9ab2-1d2be2529bf9": {
      "content": "\\${0:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:default}",
      "matches": {
        "0:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5176a392-cd85-39f9-b23b-5260173c3760": {
      "content": "font-emphasize-style circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "5176aa61-2a3c-3691-858c-4fb00e570be7": {
      "content": "#pragma warning ${2:disable} ${3:#:errno}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pragma pragma_warn": true,
        "pragma_warning": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "517d3a37-873b-3628-a122-970781588424": {
      "content": "<transition-group$1>\n$2\n</transition-group>",
      "doc": "transition-group element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition-group",
      "matches": {
        "transitiongroup": true,
        "vue transition-group": true
      },
      "source": "javascript/vue"
    },
    "517d4942-3108-3419-9923-4b844b55d2be": {
      "content": "import { withTheme } from 'styled-components';",
      "doc": "import { withTheme } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-with-theme-from-styled-components",
      "matches": {
        "imsct": true,
        "styled-components import withtheme": true
      },
      "source": "javascript/styled-components"
    },
    "518d9513-a639-3ec8-84ff-fa7170bb024e": {
      "content": "=head2 ${1:MethodName}\n${0:Summary....}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psub": true
      },
      "source": "vim-snippets/snippets"
    },
    "518eae14-7506-3aec-a7e9-c321a9373614": {
      "content": "debug {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      },
      "source": "vim-snippets/snippets"
    },
    "5192e82b-f45d-3b8d-9643-5f67180b7304": {
      "content": "AllowOverride ${1:#:AuthConfig} ${2:#:FileInfo} ${3:#:Indexes} ${4:#:Limit} ${5:#:Options}",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "allow": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "51972a8b-29d9-3c47-85a4-7aca6d229d6c": {
      "content": "@if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "519cef4f-33b6-38b7-b7d8-e853ce5684d5": {
      "content": "each do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ead": true
      },
      "source": "vim-snippets/snippets"
    },
    "51a521ec-6351-3a3f-a399-25e519b86e47": {
      "content": "when ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "when ...: ...",
      "matches": {
        "when": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "51a5277b-4370-3b86-b97f-36dfc19819d8": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor(private httpClient: HttpClient) { }\n\t$0\n}",
      "doc": "Angular service with HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpclient-service",
      "matches": {
        "a-service-httpclient": true,
        "angular http client service": true
      },
      "source": "javascript/angular"
    },
    "51ad56c6-524e-3ae5-9738-c78919e6af77": {
      "content": "${1:obj}.position()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      },
      "source": "snippets/javascript"
    },
    "51b8b733-bb34-3ddb-acf9-b04c5ecfb831": {
      "content": "lock (${1:this})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lock": true
      },
      "source": "vim-snippets/snippets"
    },
    "51bea573-56fa-3e34-be56-1e90dc124602": {
      "content": "${0:// Parameters are the same for glGenBuffers}\ngl.glDeleteBuffers(${1:4}, ${2:bufferObjects});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl delete buffers",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "51c69981-b65a-36b1-859b-f2eb76632c60": {
      "content": "make(${1:[]string}, ${2:0})${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "make(Type, size)",
      "matches": {
        "make": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "51cc036c-82b6-336a-beb1-5fc31fb9efdc": {
      "content": "text-transform ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "51d41dfc-681d-3ab9-854c-2d68f6d08507": {
      "content": "${1:action} unless ${0:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      },
      "source": "snippets/coffee"
    },
    "51d7301a-06c6-3f3a-8474-c14899de0936": {
      "content": "import { observer } from '@ember/object';",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import { observer } from '@ember/object';",
      "matches": {
        "prooimport": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "51db54af-1a8f-3bb3-a773-df77d26d58c4": {
      "content": "<%= form_for @changeset, ${1:\"${2:/users}\"}, fn f -> %>\n\t\t$0\n\n\t<%= submit \"Submit\" %>\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_for",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "51dc98df-2b5b-3f0f-a8be-58eb0a12070f": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "51dc98e1-b4da-3239-8139-1719862f94ec": {
      "content": "[[${1:id}]]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "[[id]] text",
      "matches": {
        "anchor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "51de2b2d-2a99-3bbf-a1cf-bd9b7bf1517c": {
      "content": "{% else %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "51de7c07-0320-398b-9430-344b705a1277": {
      "content": "@spec ${1:name}(${2:args}) :: ${3:returns}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      },
      "source": "vim-snippets/snippets"
    },
    "51e3705a-07eb-38b4-8c02-e187789f4e7e": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}; trackBy:${1:item}.id\"${0}",
      "doc": "Angular *ngFor with trackBy",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFor with trackBy",
      "matches": {
        "a-ngFor-trackBy": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "51e5e8f3-b0fd-36ae-b761-a04db3658189": {
      "content": "NSDictionary ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsd": true
      },
      "source": "vim-snippets/snippets"
    },
    "51fd7676-5649-3b05-b3d0-f8d8fc4b96b9": {
      "content": "letter-spacing: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letter-spacing": true,
        "ls": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5200ca44-835f-3322-87c1-b0a26555e6b3": {
      "content": "Page Should Not Contain Image    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Image",
      "matches": {
        "psnci": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "52020207-3909-37b5-a0bf-c62040a5247d": {
      "content": "<svelte:options ${1|immutable,accessors,namespace,tag|}={${2:value}}/>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-options",
      "matches": {
        "svelte options": true,
        "svop": true
      },
      "source": "javascript/svelte"
    },
    "52061cac-d13f-35f5-9c2f-d1646d5932d1": {
      "content": "defer func() {\n\t${0}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer func() { ... }",
      "matches": {
        "def": true
      },
      "source": "gosnippets/snippets"
    },
    "520b8689-de8f-3699-be4c-c6f747972e7c": {
      "content": "${1:callbacks}.disable()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cdis": true
      },
      "source": "snippets/javascript"
    },
    "520e7699-cf48-3371-a0eb-c4f2e0a8e987": {
      "content": "\\begin{Vmatrix}\n\t${1:TARGET}\n\\end{Vmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Vmatrix": true,
        "\\begin{Vmatrix} \\Vmatrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "521e5fd1-6aab-30a5-af07-bc9d92aa5785": {
      "content": "font-variant small-caps",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "52209f11-2ad4-3c22-b207-d8b987d8b1f5": {
      "content": "import ${2:moduleName} from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "imp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "522357e6-f1cf-330f-8a1e-b4f82ba6171c": {
      "content": "kmeans(${1:x}, ${2:centers}, ${3:iter.max = ${4:10}}, ${5:nstart = ${6:1}}, ${7:algorithm = ${8:c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\",\"MacQueen\")}}, ${9:trace = ${10:FALSE}})",
      "doc": "Kmeans",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "km",
      "matches": {
        "kmeans": true
      },
      "source": "vscode-R/snippets"
    },
    "522466bb-f34b-3d67-b021-165263a8eb58": {
      "content": "- (void)addObjectTo${1:#:Things}:(${2:#:id})anObject;\n- (void)insertObject:(${2})anObject in${1}AtIndex:(unsigned int)i;\n- (${2})objectIn${1}AtIndex:(unsigned int)i;\n- (unsigned int)indexOfObjectIn${1}:(${2})anObject;\n- (void)removeObjectFrom${1}AtIndex:(unsigned int)i;\n- (unsigned int)countOf${1};\n- (NSArray${3: *})${1};\n- (void)set${1}:(NSArray${3: *})new${1};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "InterfaceAccessorsForKVCArray",
      "matches": {
        "iarray": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "522718ed-90e2-3672-a47e-eb6f58131064": {
      "content": "bezierPoint(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierPoint": true
      },
      "source": "vim-snippets/snippets"
    },
    "522a869c-3232-39ef-a474-2349ce95b5cb": {
      "content": "after_validation :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mav": true
      },
      "source": "vim-snippets/snippets"
    },
    "522d8d81-4974-39ac-932b-a4da09fa3f34": {
      "content": "$('<${1}/>'${2:, {}})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "snippets/javascript"
    },
    "523b9569-07cd-3dbf-b320-2269fc2f5a94": {
      "content": "border-style double",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      },
      "source": "vim-snippets/snippets"
    },
    "523cb2bc-b838-3538-b14e-3312dc09a255": {
      "content": "${1:dfname} <- data.frame(${2:a} = character(), ${3:b} = character())",
      "doc": "Code snippet for an empty character data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Empty data frame (character)",
      "matches": {
        "df2c": true
      },
      "source": "vscode-R/snippets"
    },
    "524dd153-5cf5-3666-abe6-cf0c4b86837f": {
      "content": "border-left-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-style: style (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "525878ab-754c-369e-933c-a57447e881bb": {
      "content": "_.compact(${array})",
      "doc": "_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]\n\nCreates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-compact",
      "matches": {
        "lodash compact": true
      },
      "source": "javascript/lodash"
    },
    "526ab3ff-7fd5-3382-8590-c85c1fc223a0": {
      "content": "do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "do block",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "527a1e31-6c56-35ec-96d1-2032397735e0": {
      "content": "border-bottom-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "527e4736-2710-3761-873b-3e70b4527a30": {
      "content": "${1:callbacks}.fireWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfirew": true
      },
      "source": "snippets/coffee"
    },
    "5284e7c4-d02f-3055-8ac0-e5a7f38e51d6": {
      "content": "<?php if (${1:#:condition}): ?>\n${0:TARGET}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5287e9bf-fff3-327d-9d9b-b49df81651df": {
      "content": "@\"${1}\"",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s": true
      },
      "source": "vim-snippets/snippets"
    },
    "529a5ae7-f9a4-363e-b327-80416a9bffea": {
      "content": "background:${6: #${1:DDD}} url($2) ${3:repeat/repeat-x/repeat-y/no-repeat} ${4:scroll/fixed} ${5:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background:  color image repeat attachment position (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "529b4201-d8f0-3f2a-8992-7e737cea89c8": {
      "content": "import { mapGetters } from 'vuex';\n\nexport default {\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t${1:'nameOfGetter'},\n\t\t])\n\t},\n};",
      "doc": "mapgetters inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapGetters",
      "matches": {
        "vmapgetters": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "52a42d36-c488-3155-8ae7-f76073717dd7": {
      "content": "render nothing: ${0:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rn": true
      },
      "source": "vim-snippets/snippets"
    },
    "52aeddfc-d5eb-36fc-abad-369fe3e46674": {
      "content": "define ${1} (${2}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "define": true
      },
      "source": "vim-snippets/snippets"
    },
    "52b1773b-b5a6-39f8-8f47-40c5b96aba52": {
      "content": "${1:dfname} <- data.frame(${2:varlist})",
      "doc": "Create a data frame from vectors",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Data frame",
      "matches": {
        "dfv": true
      },
      "source": "vscode-R/snippets"
    },
    "52b4b743-cfae-3c22-979f-ff2ed25932e7": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "52b600c9-4cc1-322b-b0be-997bed02bbaa": {
      "content": "@media ${1:all} and (max-width: ${2:SIZE}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media all and (max-width) {...}",
      "matches": {
        "media-max-width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "52b81a98-c9b9-360a-a23c-cd72877ad4c0": {
      "content": "t.integer :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create integer column",
      "matches": {
        "tci": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "52c7035f-5cd1-311c-b57b-acbfa4fd12ba": {
      "content": "def show\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\trespond_to do |format|\n\t\tformat.html # show.html.erb\n\t\tformat.json  { render json: @$1 }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defshow": true
      },
      "source": "vim-snippets/snippets"
    },
    "52c70394-9863-3a47-9633-f1fc64a7853f": {
      "content": "data ${1:Type} =\n\t${0:$1}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      },
      "source": "vim-snippets/snippets"
    },
    "52c9dfed-bec3-317d-9d4e-4a1f93b05df6": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return",
      "matches": {
        "errn": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "52cc7a08-4590-3fa4-9e9e-2517d4e418e0": {
      "content": "let(:${1:object}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "52d11643-4331-30e9-9e74-4b17d3b0e5a7": {
      "content": "font-family: ${0:Georgia,'Times New Roman'},serif",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "52d26a98-79ca-34ac-bb20-4f0317cf7735": {
      "content": "post {\n\taborted {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pab": true
      },
      "source": "vim-snippets/snippets"
    },
    "52e0d07f-2a13-31ce-8d6d-6d68a2803fe3": {
      "content": "delegate :${1:methods}, to: :${2:object}, prefix: :${3:prefix}, allow_nil: ${0:allow_nil}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "delegate .. to .. prefix .. allow_nil",
      "matches": {
        "dele": true
      },
      "source": "vim-snippets/snippets"
    },
    "52e33a9a-d7c8-353f-b057-07d456526aa1": {
      "content": "_.setWith(${object}, ${path}, ${value}, ${customizer})",
      "doc": "var object = {};\n\n_.setWith(object, '[0][1]', 'a', Object);\n// => { '0': { '1': 'a' } }\n\nThis method is like `_.set` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-setwith",
      "matches": {
        "lodash setwith": true
      },
      "source": "javascript/lodash"
    },
    "52ee7c60-219b-3f7b-94e3-fbbd8a6c9556": {
      "content": "jasmine.stringMatching(\"${1:matcher}\")",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "string matching (js)",
      "matches": {
        "strm": true
      },
      "source": "vim-snippets/snippets"
    },
    "52f27674-2bc6-3cd7-8266-54e5bb556f1e": {
      "content": "given ${1:$var} {\n  when ${2:condition} {\n\t  ${3:# code block ...}\n  }\n  ${4}\n  default {\n\t  ${5}\n  }\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "52f7dfcb-23f9-30c7-9358-191f1e0525fc": {
      "content": "Set<${1:Object}> ${2:set} = new HashSet<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.hs": true
      },
      "source": "vim-snippets/snippets"
    },
    "52fa8945-0ffb-3914-b39c-23761470f29e": {
      "content": "import ${1:defaultMember}, { ${2:MEMBERS} } from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import defaultMember, { member, ... } from \"module-name\";",
      "matches": {
        "import-default-member": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5300e3a6-2b79-3db9-8e93-76dfa301a112": {
      "content": "border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "531baae0-e359-3a5d-9227-e3891f009224": {
      "content": "\\begin{block}{${1:#:title}}\n\t${2:TARGET}\n\\end{block}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{block}": true,
        "block": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "532c8670-7e23-3d0a-b6f3-3ad7813e18f6": {
      "content": "@php\n\t${1:${VISUAL}}\n@endphp",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@php directive",
      "matches": {
        "php": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "532da9e8-f0e4-394c-8c9a-83e75219e05c": {
      "content": "debug\n{\n\t${VISUAL}$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "debug",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "533039c5-8d75-3d69-b700-cfa432a0b185": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-instance-of-required",
      "matches": {
        "prop-types instanceof required": true,
        "ptir": true
      },
      "source": "javascript/prop-types"
    },
    "53318802-279f-3a99-8f67-73913ebe428e": {
      "content": "it { expect(${1:object}).${2} ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iexp": true
      },
      "source": "vim-snippets/snippets"
    },
    "53388267-1fa9-3d5a-adac-3e01ee32efe8": {
      "content": "class ${1:#:name}(${2:object}):\n\t\"\"\"${3:#:class documentation}\"\"\"\n\tdef __init__(self, ${4}):\n\t\t\"\"\"${5:#:__init__ documentation}\"\"\"\n\t\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "class Class(...): \"...\"",
      "matches": {
        "classd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "533ccc1a-7976-3217-b1f0-11be6ebd20a1": {
      "content": "import ${1:${2:Data}.${0:Text}}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Simple import",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "533d77c8-af11-353c-a3bc-c5c2e6683ffe": {
      "content": "| replace: '${1:target}', '${2:replace}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace": true
      },
      "source": "vim-snippets/snippets"
    },
    "533ee5b0-83ff-3053-9462-67b9763d5d73": {
      "content": "reduce(${1:init}) { |${2:mem}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "red": true
      },
      "source": "vim-snippets/snippets"
    },
    "533f114f-8d86-3158-b57a-71dd0fe353e5": {
      "content": "resize: both;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "5341f658-c9ae-3a2b-b4dd-ac4f631d2935": {
      "content": "<dl>\n\t<dt>${1}</dt>\n\t<dd>${2}</dd>\n\tdt+${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5345bc41-86c9-3534-8444-92ca5279b426": {
      "content": "afterAll(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "after all (js)",
      "matches": {
        "afta": true
      },
      "source": "vim-snippets/snippets"
    },
    "5349b3d6-c920-3b7a-bf75-7deb7b098d23": {
      "content": "#ifndef ${1:#:SYMBOL}\n    #define $1\n    ${0:TARGET}\n#endif /* end of include guard */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifndef ... #define ... #endif",
      "matches": {
        "include-guard": true,
        "once": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "534d1bc2-9340-3d62-a045-f6e0d5624b49": {
      "content": "test \"${1:test_name}\", %{${2:arg: arg}} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testa": true
      },
      "source": "vim-snippets/snippets"
    },
    "53542ce1-0a69-3673-b25c-de7662704080": {
      "content": "try\n  ${1:TARGET}\ncatch ${2:#:error}\n  ${3}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "53582c18-295e-3df7-8d88-64c6317dcc80": {
      "content": "&#x2305;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enter": true
      },
      "source": "vim-snippets/snippets"
    },
    "535a25ae-7119-3dc7-9d0d-05638538b842": {
      "content": "// @flow \nimport * as React from 'react';\ntype Props = {\n\t$0\n};\nexport const ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};",
      "doc": "Creates a stateless React component with FlowTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowStatelessComponent",
      "matches": {
        "fsc": true
      },
      "source": "vscode-react/snippets"
    },
    "535d3d78-3377-3358-a793-849fd9d1c5a2": {
      "content": "[self lockFocus];\n$0\n[self unlockFocus];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Lock Focus",
      "matches": {
        "focus": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "535e7e53-1f86-3438-a25d-407581d18fa3": {
      "content": "using ${1:#:path};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true,
        "using_import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "535f763c-cb85-3a70-a648-f049aedb9eb8": {
      "content": "| plus: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "plus": true
      },
      "source": "vim-snippets/snippets"
    },
    "53668108-04f2-3a57-bbef-e71411888c79": {
      "content": "{% autoescape ${1:off} %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/snippets"
    },
    "5374bd33-abdd-3420-bbf9-1e93a3585b5b": {
      "content": "t.time :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create time column",
      "matches": {
        "tcti": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5375b97a-faa0-3411-873f-abc3c489d7de": {
      "content": "<a href=\"mailto:${1:joe@example.com}?subject=${2:feedback}\">${0:email me}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a:mail": true
      },
      "source": "vim-snippets/snippets"
    },
    "53762c29-4b41-356d-9bbf-4a6b416ad7dc": {
      "content": "{% case ${1:#:condition} %}\n{% when ${2:#:TARGET} %}\n  ${3}\n{% endcase%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "case when endcase",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "53767fb4-af5a-3959-a630-48dfd1dbd4ee": {
      "content": "form_upload(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_upload": true
      },
      "source": "vim-snippets/snippets"
    },
    "53799d49-b266-3457-93a2-f7a0092b1f95": {
      "content": "sap.ui.layout.VerticalLayout.extend(\"$1\", {\n    metadata: {\n\tproperties: {\n\t  \t$2\n\t},\n\taggregations: {\n\t\t$3\n\t},\n\tevents: {\n\t\t$4\n\t}\n    },\n   init: function(){\n\t$5\n    },\n    renderer: \"$6\"\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extendVerticalL": true
      },
      "source": "vim-snippets/snippets"
    },
    "537a73d4-5772-36eb-a4ee-a069a90903a2": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-instance-of",
      "matches": {
        "prop-types instanceof": true,
        "pti": true
      },
      "source": "javascript/prop-types"
    },
    "537c489b-35c8-3341-8768-d8563e2e80c0": {
      "content": "grid-auto-columns ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      },
      "source": "vim-snippets/snippets"
    },
    "5385cd1a-ba88-3933-bd2a-cde3639ed84f": {
      "content": "lambda {|${1:#:args}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda-keyword": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "538a69d9-61f9-31bf-aac3-0bfa84a0a707": {
      "content": "afterUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-after-update",
      "matches": {
        "svelte lifecycle-after-update": true,
        "svlfap": true
      },
      "source": "javascript/svelte"
    },
    "538d5a14-9f69-36a2-9eb6-85f5df424f75": {
      "content": "module ${1:(* Name *)} = struct\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module - no signature",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "539214d5-1347-3cea-a44f-d29007e16d6a": {
      "content": "#[macro_use]\nextern crate log;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate log",
      "matches": {
        "ecl": true
      },
      "source": "vim-snippets/snippets"
    },
    "53984d8e-8757-3290-a04a-f341aefe97a8": {
      "content": "enum ${1:MyEnum} { ${2:Item} };",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "enumeration",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "53994739-6e3c-367e-99fd-5dddab7b27c5": {
      "content": "font-size ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      },
      "source": "vim-snippets/snippets"
    },
    "539b07db-6708-364b-bb89-d843435eff88": {
      "content": "text-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "539b8b3d-7d25-3094-86a1-5324823bcf4a": {
      "content": "begin\n\t${0}\nend;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beg": true
      },
      "source": "vim-snippets/snippets"
    },
    "53a35932-a9f7-3bfc-8a67-be3dfa35bb3e": {
      "content": "default:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/snippets"
    },
    "53ac8062-c11d-3abe-8aa1-8206aebe06db": {
      "content": "border-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      },
      "source": "vim-snippets/snippets"
    },
    "53b40a4b-a78e-3845-a3d1-49ae8d926492": {
      "content": "{%- include '${0:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include-": true
      },
      "source": "vim-snippets/snippets"
    },
    "53c0b57e-60ca-3e1b-8b7d-f465c73a1000": {
      "content": "[ ${1} ]",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      },
      "source": "vim-snippets/snippets"
    },
    "53c3bd63-c3c5-3dbf-89ed-45899e39404a": {
      "content": "${1:callbacks}.lock()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clock": true
      },
      "source": "snippets/javascript"
    },
    "53c70d4c-4813-358b-8c6f-1b007449c901": {
      "content": "|> Enum.filter(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to filter",
      "matches": {
        ">f": true
      },
      "source": "vim-snippets/snippets"
    },
    "53d2a46b-0725-3732-849d-0c5e46f4724c": {
      "content": "echo CHtml::metaTag('${1:content}', '${2:name}', '${3:httpEquiv}',array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhmtag": true
      },
      "source": "vim-snippets/snippets"
    },
    "53e20f1f-2175-3bcf-85de-23a57926edaf": {
      "content": "cy.clearCookies();",
      "doc": "Clear all browser cookies for current domain and subdomain.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-cookies-clear-all",
      "matches": {
        "cypress cookies clear all": true
      },
      "source": "javascript/cypress"
    },
    "53f847d6-0e73-308b-a444-f306f4a07d02": {
      "content": "grid-row-end: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      },
      "source": "vim-snippets/snippets"
    },
    "54043e2e-bcbe-3c9a-9a30-0f0b602f7590": {
      "content": "t.timestamp :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create timestamp column",
      "matches": {
        "tcts": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "54079e7a-c72f-3208-a0ad-19e877a12cc3": {
      "content": "vertical-align: text-top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "540976ef-e26b-3e0b-8b6b-1f2a8a56ea07": {
      "content": "border-right: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "540c42d7-ea2c-3a23-a306-9d9b62f9e5cf": {
      "content": "place-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "54225d99-42c4-367b-bdad-805eb671863a": {
      "content": "&#x2190;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      },
      "source": "vim-snippets/snippets"
    },
    "54275d2d-6a35-37f2-a279-ae498d13c2bb": {
      "content": "__PACKAGE__->get_${1:package_method}(${0:var})",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgetv": true
      },
      "source": "vim-snippets/snippets"
    },
    "542a44f7-6e93-3dbf-b93b-88ea70c422e7": {
      "content": "gl.glGenLists(${0:1})",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl gen lists",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "542a4a5c-ebcd-3b14-91b0-1526d10879cc": {
      "content": "assert_redirected_to ${1:model}_path(${0:@$1})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artp": true
      },
      "source": "vim-snippets/snippets"
    },
    "542fd2f5-c45e-3527-ae58-efa7d1e2b76c": {
      "content": "<style lang=\"less\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with less",
      "matches": {
        "style_with_less": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5446d8cd-33d5-3515-a810-c490f2fa2cda": {
      "content": "${1:obj}.focusOut (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusout": true
      },
      "source": "snippets/coffee"
    },
    "54498713-dfd9-30ab-90d7-fd6cf62a4dac": {
      "content": "number.integer()",
      "doc": "number.integer(message?: string | function): Schema\n\nValidates that a number is an integer.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-integer",
      "matches": {
        "yup number integer": true
      },
      "source": "javascript/yup"
    },
    "544a7e50-5a49-3dab-927a-bd60d945201b": {
      "content": "{% filter ${1} %}\n\t${0}\n{% endfilter %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/snippets"
    },
    "544f7998-e5eb-3d11-8820-d971534d3f40": {
      "content": "page-break-inside: avoid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      },
      "source": "vim-snippets/snippets"
    },
    "54506929-7eda-3cb6-905d-6968e9b8ab17": {
      "content": "case ${1}:\n    ${2:TARGET}\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "545099f9-93e2-3cbc-baf9-f7910e8fe439": {
      "content": "(${1:params}) => {\n\t${2}\n}",
      "doc": "Creates an anonymous function in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "anonymousFunction",
      "matches": {
        "anfn": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "5455d7ab-1c13-3e81-b701-fe3b7ab9b093": {
      "content": "Page Should Contain Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Button",
      "matches": {
        "pscb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "545d938d-a0d0-3903-8081-7f58b49fd914": {
      "content": "<figcaption>${0}</figcaption>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figcaption": true
      },
      "source": "vim-snippets/snippets"
    },
    "54610b19-d10d-3a67-a041-ebe4678bab6c": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "547d6fb8-bf02-3df5-b76b-076bf0c2cbc2": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Route",
      "matches": {
        "useroute": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "547f3a57-3875-39a3-b023-8934be736eab": {
      "content": "switch ${2:$1 := }${1:v}.(type) {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "type switch x { ... }",
      "matches": {
        "tswitch": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5481bbc0-86d3-3e5e-8ebd-fdcbcca276b2": {
      "content": "case class ${1:name}${2:(arg)}${3: extends }${4: with} ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casecl": true
      },
      "source": "vim-snippets/snippets"
    },
    "5481cb97-908d-3e44-b6cd-fba285148bc6": {
      "content": "text-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "548a9ed6-0ff4-3f31-b399-8c1da6c9caa6": {
      "content": "background-clip no-clip",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "549cd67b-66aa-3897-b97e-75bf0767dd74": {
      "content": "echo CHtml::textArea('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhta": true
      },
      "source": "vim-snippets/snippets"
    },
    "54a07cdf-cfb3-343d-aaf5-3ae6aadfec1d": {
      "content": "{{local:${1:image_path}}}${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{<image path>}}",
      "matches": {
        "image_local": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "54a25e37-44ab-37c4-ae5b-252affefa5a8": {
      "content": "<input type=\"radio\" name=\"${1}\" id=\"${2:$1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:radio": true
      },
      "source": "vim-snippets/snippets"
    },
    "54ae4421-1a48-3225-805e-3bb207de7fe4": {
      "content": "border-left ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      },
      "source": "vim-snippets/snippets"
    },
    "54b58fd3-7634-3fd7-a219-dbed9d44022a": {
      "content": "character(${1}), dimension(${2}) :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "character dimension",
      "matches": {
        "chd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "54bd2ee6-91b6-3dc5-a511-5a08a0524075": {
      "content": "background-attachment: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      },
      "source": "vim-snippets/snippets"
    },
    "54be32f3-f6e8-3246-bc42-c3814e01d677": {
      "content": "table-layout ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "54c816f8-9d56-3353-8a49-1f64d1a480a5": {
      "content": "const ${1:${TM_FILENAME_BASE}} = () => {\n\t$2\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Custom Hook with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactCustomHook",
      "matches": {
        "rch": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "54d008d5-3a75-32c9-b1a8-4fdf80064191": {
      "content": "justify-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "54d772d3-f027-300f-90c2-1001a2cb6f9b": {
      "content": "mlply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "54df1a84-3491-3448-a3df-18f0e30076ef": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "54e5502b-56ef-36bc-b12e-76c6a2017534": {
      "content": "while ${1:condition}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "54ec7c47-957b-3ec5-bb0b-2accb7d21068": {
      "content": "quotes: '\\00AB' '\\00BB' '\\201E' '\\201C'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "54fe29ba-1fdb-3606-a915-6201dce60109": {
      "content": "always @(${1:*})${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "always @()",
      "matches": {
        "al": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "54ffb2a7-86c4-31c0-b398-17620971fc69": {
      "content": "data-${1}=\"${2:$1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      },
      "source": "vim-snippets/snippets"
    },
    "54ffbfa1-16d8-3808-b135-85c90423b25e": {
      "content": "${1:component}.$set(${2: params});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-set",
      "matches": {
        "svcoms": true,
        "svelte component set": true
      },
      "source": "javascript/svelte"
    },
    "5500b584-6f31-36e0-bd05-d1eaf2dbe967": {
      "content": "else if (${1:/* condition */}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "55050ec4-22bb-3c1a-a3b0-8ad880b3ed16": {
      "content": "open('${1:path/or/url/or/pipe}', '${2:w}') { |${3:io}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ope": true
      },
      "source": "vim-snippets/snippets"
    },
    "5510106f-e539-3cad-9b92-f16593311bb2": {
      "content": "{% ifequal ${1} ${2} %}\n\t${0}\n{% endifequal %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      },
      "source": "vim-snippets/snippets"
    },
    "5513923f-1e89-381e-8c47-a833bc5d0e3f": {
      "content": "<FilesMatch \"${1:regex}\">\n\t${0:${VISUAL}}\n</FilesMatch>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filesmatch": true
      },
      "source": "vim-snippets/snippets"
    },
    "5519858c-c348-343e-bad5-8a2e7422b33d": {
      "content": "echo CHtml::activeFileField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaff": true
      },
      "source": "vim-snippets/snippets"
    },
    "551aa744-57e4-33b9-a70d-b7abb862c766": {
      "content": ".directive('${1:directiveName}', (${2:directiveDeps}) ->\n\t(scope, element, attrs${3:ctrl}) ->\n\t\t${4}\n)",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdl": true
      },
      "source": "snippets/coffee"
    },
    "5529915c-76da-3513-8bba-b1e38174ed4e": {
      "content": "text-outline: ${1:0} ${2:0} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      },
      "source": "vim-snippets/snippets"
    },
    "552a2ea6-40b1-37f5-b1fe-cc24cd9567ea": {
      "content": "border-left-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "552d8ee4-0fe2-3e44-af49-313512e909b5": {
      "content": "justify-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "552dab98-eea9-342a-98b4-0f155850fb19": {
      "content": "to=\"$1\"$0",
      "doc": "to=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-to",
      "matches": {
        "to": true,
        "vue to": true
      },
      "source": "javascript/vue"
    },
    "552edb3e-d1b8-356e-bf15-348464b6d3c0": {
      "content": "grid-template-rows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      },
      "source": "vim-snippets/snippets"
    },
    "55355673-ff47-35b3-be5b-1367a37eae77": {
      "content": "<style>\n\t${1:/* your styles go here */}\n</style>",
      "doc": "add styles to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-style-tag",
      "matches": {
        "svelte style": true,
        "svstyle": true
      },
      "source": "javascript/svelte"
    },
    "5536f089-c2d0-3a8b-9f63-f99519b049a7": {
      "content": "it { should validate_confirmation_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvc": true
      },
      "source": "vim-snippets/snippets"
    },
    "5537a20c-1d29-3c27-8e64-4d9f4da6b682": {
      "content": "AnyRef",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anyr": true
      },
      "source": "vim-snippets/snippets"
    },
    "55393d17-8e1f-34e0-8d50-263948adf9a6": {
      "content": "border-top-left-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "554a80b3-8a8b-33a2-a59e-1934854e9e64": {
      "content": "$.isXMLDoc(${1:node})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isxml": true
      },
      "source": "snippets/javascript"
    },
    "554e7a2e-848b-396f-8785-406cd34a1b22": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch(${2:Exception} ${3:e}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "555237e0-c556-324e-be7a-9ae6dcc9859d": {
      "content": "expect(() => {\n\t$0\n}).toThrow($1);",
      "doc": "expects that the method will throw an error",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrow",
      "matches": {
        "jest expect tothrow": true,
        "tt": true
      },
      "source": "javascript/jest"
    },
    "55538970-9a96-3f1a-ac2d-918d566d5bc9": {
      "content": "*ngIf=\"${1:expression};else ${2:templateName}\"",
      "doc": "Angular *ngIfElse",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngifelse",
      "matches": {
        "a-ngifelse": true,
        "angular ng if else": true
      },
      "source": "javascript/angular"
    },
    "555988a0-c167-3752-aa74-d3b9c52e935a": {
      "content": "table(${1:...})",
      "doc": "Table",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "tab",
      "matches": {
        "table": true
      },
      "source": "vscode-R/snippets"
    },
    "555a718c-abd7-35fa-8876-9dbf14413821": {
      "content": "border-style: wave",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "556ce245-c480-31d6-8b07-4c5bf616dc9c": {
      "content": "private ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p-": true
      },
      "source": "vim-snippets/snippets"
    },
    "5572a4b9-cb47-39a0-bfd0-b5aeea72fe13": {
      "content": "set ${1:#:axis}tics ${2:#:start}, ${3:#:incr}, ${4:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set x/y tics start, incr, end",
      "matches": {
        "tics": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "55772f86-20d1-328e-a779-4ea4dca255cf": {
      "content": "#!/usr/bin/env bash\nset -euo pipefail\nIFS=$'\\n\\t'",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sbash": true
      },
      "source": "vim-snippets/snippets"
    },
    "55778ff7-44cd-312d-aaac-f48136fbbe05": {
      "content": "${1:actionName}() {\n\tthis.\\$store.dispatch('${1:actionName}', ${2:payload});\n}",
      "doc": "dispatch to vuex store in methods for action",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Dispatch Vuex Store in Methods",
      "matches": {
        "vdispatch": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "557f775a-6388-31e2-9593-9e9a71e6ab5c": {
      "content": "$this->shouldThrow(${1:'\\Exception'})->duringInstantiation();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldThrow('\\Exception')->duringInstantiation()",
      "matches": {
        "sthrowi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5593b88a-e37f-33b0-9c67-2d4329b52090": {
      "content": ":source-highlighter: highlight.js$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: highlight.js",
      "matches": {
        "highlight-highlight.js": true,
        "hihighlight.js": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "55ab9ef6-bdf2-34ab-8940-cab55ef9f73c": {
      "content": "<template>\n\t<${1:div}$2>\n\t\t$0\n\t</${1:div}>\n</template>",
      "doc": "template element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-template",
      "matches": {
        "template": true,
        "vue template": true
      },
      "source": "javascript/vue"
    },
    "55bb97ee-76af-3fba-bea2-49ca4a804a2e": {
      "content": "if ${1:value}, ok := ${2:map}[${3:key}]; ok == true {\n\t${4:/* code */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if key in a map",
      "matches": {
        "om": true
      },
      "source": "vim-snippets/snippets"
    },
    "55bd0b9e-e2f2-31cf-84ec-9396c881a349": {
      "content": "text-wrap: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      },
      "source": "vim-snippets/snippets"
    },
    "55c89cfd-f149-3719-8cea-6f4f93ac4b24": {
      "content": "describe \"${1}\" [ $0 ]",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "desc": true
      },
      "source": "vim-snippets/snippets"
    },
    "55cc8c45-b3bc-3004-8a58-c7c41c917b6e": {
      "content": "scan(${1:/pattern/}) { |${2:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sca": true
      },
      "source": "vim-snippets/snippets"
    },
    "55cd4a12-7641-3c0b-bc44-88ba4179f756": {
      "content": "text-transform: uppercase",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "55d992f4-e9ab-3829-98ed-7c0e3590dac9": {
      "content": "log.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Println(...)",
      "matches": {
        "ln": true
      },
      "source": "gosnippets/snippets"
    },
    "55daf2a8-5547-3fb0-948f-5564783fdfb0": {
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "viewport": true
      },
      "source": "vim-snippets/snippets"
    },
    "55e91b14-0fee-3752-9406-3fea8e5e09d8": {
      "content": "box-shadow: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "55eac911-edef-33c6-9160-35062e191382": {
      "content": "word-break break-strict",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "55ef6af5-e9bc-3e27-a99e-02d6db6429ef": {
      "content": "background-color: transparent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "55fbea7e-07fa-3f39-95f5-e10600214f90": {
      "content": "echo CHtml::activeId(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhai": true
      },
      "source": "vim-snippets/snippets"
    },
    "5600ebc0-c5a3-316f-97d6-b1f7531809f5": {
      "content": "<input type=\"checkbox\" name=\"${1}\" id=\"${2:$1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:checkbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "560c1d9d-0612-3647-852c-0722717bf88a": {
      "content": "function ${1:function_name} (${2:argument}: ${3:argument_type}) {\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "function (named)",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "560fb4bb-7453-30f4-aefe-bd1b78e936a4": {
      "content": "import ${0:module}",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "562620c8-41a6-313d-9d18-290702fa58f6": {
      "content": "else if (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true,
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "562d0959-83c7-3664-ae2c-42b4e3d0771d": {
      "content": "<dl>\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      },
      "source": "vim-snippets/snippets"
    },
    "5630196f-f4fe-3c16-b6e6-3d863955e3b5": {
      "content": "echo CHtml::activeLabelEx(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhale": true
      },
      "source": "vim-snippets/snippets"
    },
    "56305d56-8282-309d-b6d5-9915edefca0e": {
      "content": "| camelcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "camelcase": true
      },
      "source": "vim-snippets/snippets"
    },
    "5632d642-501e-3b3d-9728-0feb1cbaede9": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;\n",
      "doc": "Create React Native Styled Components file",
      "filetype": "snippets-ts",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-react-native": true
      },
      "source": "rocketseat-vscode-react-native-snippets/snippets"
    },
    "56360fbb-0901-3273-85ee-2d54d1172b32": {
      "content": "_.lowerFirst(${string})",
      "doc": "_.lowerFirst('Fred');\n// => 'fred'\n\n_.lowerFirst('FRED');\n// => 'fRED'\n\nConverts the first character of `string` to lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lowerfirst",
      "matches": {
        "lodash lowerfirst": true
      },
      "source": "javascript/lodash"
    },
    "564a514b-bddd-3800-9203-9129bd644a8b": {
      "content": "const ${1} = styled.${2}.attrs({\n  ${3}: ${4}\n})`\n  ${5}\n`;",
      "doc": "Styled-Component with attributes",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-with-attributes",
      "matches": {
        "scattrs": true,
        "styled-components component with attributes": true
      },
      "source": "javascript/styled-components"
    },
    "564f048f-e1f5-3341-9452-bf3cfaf023e4": {
      "content": ":source-highlighter: rouge$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: rouge",
      "matches": {
        "highlight-rouge": true,
        "hirouge": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5653e3d9-a1a3-3bcf-a423-587e7b6e4edf": {
      "content": "$this->${1:method}()->shouldBe(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBe('value')",
      "matches": {
        "sbe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "56583b2a-4cac-33ce-837f-d4fc20846363": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "else part of statement",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "5658bb15-2941-34a8-b415-ef819c73f408": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else}\n\t${3: <!-- else content here -->}\n{/if}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-block",
      "matches": {
        "svelte if else": true,
        "svif-else": true
      },
      "source": "javascript/svelte"
    },
    "565a1169-48f3-37e0-8443-6ed1d0c83733": {
      "content": "%% @spec ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%s": true
      },
      "source": "vim-snippets/snippets"
    },
    "5662c2c3-fdc4-3454-ad4a-43353f19fa1f": {
      "content": "{\n\tblock : '${1:name}',\n\tmods: { ${2:modName}: '${3:modVal}' },\n\tcontent : [\n\t\t'${4:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bwm": true
      },
      "source": "vim-snippets/snippets"
    },
    "56756e6c-49d5-37a8-a12d-5a2f76fa59f1": {
      "content": "enum_with_index.map { |${1:e}, ${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapwi-": true
      },
      "source": "vim-snippets/snippets"
    },
    "567a23bd-a21c-3716-9324-a4a6ca193366": {
      "content": "expect(${1:target}).wasCalled()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was called (coffee)",
      "matches": {
        "esc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "567e5f56-25eb-368c-83f6-089cd9ad6cbb": {
      "content": "before_validation_on_update",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation_on_update",
      "matches": {
        "befvou": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5680d986-c02b-3191-8cac-b0cc90b62b8c": {
      "content": "[${1:#:link}](https://${2:#:url})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](url)",
      "matches": {
        "linkurl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5681beeb-abef-39e0-bd63-7073f0c287e6": {
      "content": "box-sizing: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "56828f1f-6f30-36a1-bbb2-c642508ef699": {
      "content": "(${1:name} [${2:this} ${0:args}])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pmethod": true
      },
      "source": "vim-snippets/snippets"
    },
    "568439d4-2258-340a-a938-ebbc757cb84a": {
      "content": "expect($1).toHaveBeenCalled();$0",
      "doc": "returns true if the spy was called",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalled",
      "matches": {
        "jest expect tohavebeencalled": true,
        "thbc": true
      },
      "source": "javascript/jest"
    },
    "568a34f8-389c-3413-bd41-a72b8b5223ad": {
      "content": "${1:obj}.dblclick(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dblclick": true
      },
      "source": "snippets/javascript"
    },
    "568e1cbe-7cc6-38f0-a453-eef689ea5edd": {
      "content": "place-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      },
      "source": "vim-snippets/snippets"
    },
    "5691a466-bf0b-36b8-aebe-a0e3638f61d4": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) {\n\t\tstate.${2:value} = ${3:payload};\n\t}\n}",
      "doc": "vuex mutation",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Mutation",
      "matches": {
        "vmutation": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "569500ec-40f9-3538-9b32-a7fc1c107d16": {
      "content": "beforeRouteEnter(to, from, next) {\n\tnext(vm => {${1:}});\n},",
      "doc": "Vue Router component guards beforeRouteEnter",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteEnter",
      "matches": {
        "vbeforerouteenter": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "5696208b-bc8a-3a16-9def-a64c8f87a5bc": {
      "content": "wordwrap(width=${1:79}, break_long_words=${2:True})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "wordwrap",
      "matches": {
        "wordwrap": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "56ab1a43-1506-3667-bf96-f06f8a28f9d0": {
      "content": "${1:obj}.offsetParent()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offsetp": true
      },
      "source": "snippets/coffee"
    },
    "56ab6d72-5640-3997-ab0f-9a0df9b8822d": {
      "content": "background-clip: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "56ab8a4b-353e-35c3-8a41-fc9f74203a82": {
      "content": "-   ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      },
      "source": "vim-snippets/snippets"
    },
    "56aefa64-a9ef-35f1-860a-40fd6fa944a5": {
      "content": "{% for $1 in $2 %}\n\t$3\n{% endfor %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "56b1f51d-8a4c-3953-8a0b-4acea0b2ba49": {
      "content": "v-on:${1:event}=\"${2:handle}\"",
      "doc": "Expects: Function | Inline Statement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-on",
      "matches": {
        "von": true,
        "vue v-on": true
      },
      "source": "javascript/vue"
    },
    "56b78aec-0fb1-320d-9f10-51ab236246fc": {
      "content": "<c:out value=\"${1}\" default=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cout": true
      },
      "source": "vim-snippets/snippets"
    },
    "56b8f401-352e-34c4-a61c-e1f7dcb25c5c": {
      "content": "pragma(msg, ${1:Warning});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pms": true
      },
      "source": "vim-snippets/snippets"
    },
    "56c517ac-608c-386c-9199-21fe373cc665": {
      "content": "{%- comment -%}${0:${VISUAL}}{%- endcomment -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment-": true
      },
      "source": "vim-snippets/snippets"
    },
    "56c84df3-3a85-3fef-9dbe-0dbf6eed4004": {
      "content": "place-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "56c9c343-4220-35d6-a3f9-72de8382f47d": {
      "content": "Export-CSV -NoTypeInformation -Path ${1:path}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epcsv": true
      },
      "source": "vim-snippets/snippets"
    },
    "56ca69c8-f99d-3277-89db-848896d89295": {
      "content": "debugger;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      },
      "source": "snippets/javascript"
    },
    "56cc3f38-cc0f-3fee-ae9e-21c7e6327849": {
      "content": "<details${2}>\n    <summary>${1}</summary>\n    ${3}\n</details>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "details": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "56d9e739-d8bb-36f8-9812-0b89708fc17b": {
      "content": "text-height text-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "56e712cc-747d-3ded-a610-442fa7d2dac2": {
      "content": "string.matches()",
      "doc": "string.matches(regex: Regex, options: { message: string, excludeEmptyString: bool }): Schema\n\nAn alternate signature for string.matches with an options object. excludeEmptyString, when true,\nshort circuits the regex test when the value is an empty stringlet schema = string().matches(/(hi|bye)/, { excludeEmptyString: true });\n\nawait schema.isValid(\"\"); // => true\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-matches",
      "matches": {
        "yup string matches": true
      },
      "source": "javascript/yup"
    },
    "56e80035-5fc1-3c24-9ea4-e2e82d1d4053": {
      "content": "@${1:variable_name} ||= ${0:cached_value}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ivc": true
      },
      "source": "vim-snippets/snippets"
    },
    "56eddec5-d2f3-3a21-9e9e-a34d6ea6b7b7": {
      "content": "_.isMap(${value})",
      "doc": "_.isMap(new Map);\n// => true\n\n_.isMap(new WeakMap);\n// => false\n\nChecks if `value` is classified as a `Map` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismap",
      "matches": {
        "lodash ismap": true
      },
      "source": "javascript/lodash"
    },
    "56f45450-b8bb-3d5a-b089-4902720f8525": {
      "content": "(*$T ${1:name}\n\t${2:test}\n*)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "inline qtest",
      "matches": {
        "qt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5704924f-391f-3949-9611-afddd95ac3d3": {
      "content": "let {${1:name}} = ${2:value};",
      "doc": "Object destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-let-assignment",
      "matches": {
        "base let destruct object": true
      },
      "source": "javascript/base"
    },
    "5706a317-6048-3a23-8eb8-953fb722d7d9": {
      "content": "import qualified ${1} as ${2}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "import qualified ... as ...",
      "matches": {
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "57077304-9a77-343c-90ad-50b7afe1e8ba": {
      "content": "const ${1} = new ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "constn": true
      },
      "source": "snippets/javascript"
    },
    "570be33e-769a-3bde-abf8-8bdea0aef45f": {
      "content": "(cond ((${1:predicate}) (${2:action}))\n\t((${3:predicate}) (${0:action})))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      },
      "source": "vim-snippets/snippets"
    },
    "571404de-52e3-3ca4-8cbd-48b2c14d463c": {
      "content": "echomsg string([${0:TARGET}])",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "debug-echomsg",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "571c8cf9-0d87-3a92-aa37-e357bc2754ae": {
      "content": "${1:FIELDNAME} = models.DateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateTimeField",
      "matches": {
        "mdatetime": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "57249365-8632-3e04-b7fa-8b1c8cc6a990": {
      "content": "/******************************************************************************/\nPROCEDURE ${1:ProcName}:\n\t${0}\nEND PROCEDURE. /* $1 */\n/******************************************************************************/",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      },
      "source": "vim-snippets/snippets"
    },
    "5729427e-ae21-302a-80fe-7a33c6d5a980": {
      "content": "${fn:trim(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trim": true
      },
      "source": "vim-snippets/snippets"
    },
    "572e0653-b6c8-385b-861b-5404d7ebead4": {
      "content": "_.concat(${array}, ${values})",
      "doc": "var array = [1];\nvar other = _.concat(array, 2, [3], [[4]]);\n\nconsole.log(other);\n// => [1, 2, 3, [4]]\n\nconsole.log(array);\n// => [1]\n\nCreates a new array concatenating `array` with any additional arrays\nand/or values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-concat",
      "matches": {
        "lodash concat": true
      },
      "source": "javascript/lodash"
    },
    "573108fc-c0b5-3efe-b0b8-30876bcb3a75": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}}, ${7:value = ${8:FALSE}}, ${9:fixed = ${10:TRUE}})",
      "doc": "Grep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grep2",
      "matches": {
        "grep": true
      },
      "source": "vscode-R/snippets"
    },
    "57413d72-7382-3066-bfe5-ed4fad7ca2b1": {
      "content": "for (${1:item} in ${2:list}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "5742ca1e-3bfc-38bb-8c0d-b4511be43ed7": {
      "content": "gl.glVertex3f(${1:0.0f}, ${2:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl vertex 3f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "57466dca-2ffe-36b2-8e3b-2778b99a72a2": {
      "content": "has_and_belongs_to_many :${1:object}, join_table: '${2:table_name}', foreign_key: '${3}_id'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "habtm": true
      },
      "source": "vim-snippets/snippets"
    },
    "574d5130-7b1b-357b-b86e-1b3013e6298f": {
      "content": "text-transform lowercase",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "575370a4-c061-3e72-bb66-d92e452ab3af": {
      "content": "Ada.Text_IO.New_Line(${1:1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.New_Line",
      "matches": {
        "newline": true
      },
      "source": "vim-snippets/snippets"
    },
    "5757edb1-c4cc-3e4f-94a4-3ce9146d62e2": {
      "content": "annote = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "annote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "575af1dc-b60a-3291-b6e5-5eedbba1e25d": {
      "content": "# -*- coding: latin-1 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clatin1": true
      },
      "source": "vim-snippets/snippets"
    },
    "575b2e5c-e7b1-3453-8187-ecc0d9e81bae": {
      "content": "<%= ${1:f}.input :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffi": true
      },
      "source": "vim-snippets/snippets"
    },
    "575e7748-4db2-3cd5-a29d-07ba5e27b979": {
      "content": "[NSThread detachNewThreadSelector:@selector(${1:method}:) toTarget:${2:aTarget} withObject:${3:anArgument}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Detach New NSThread",
      "matches": {
        "thread": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "575f42d5-1946-3b62-89b6-77665f76370c": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "57639776-2a16-33a0-9573-a03e4f05585d": {
      "content": "java.io.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.i": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5767343b-e622-3f66-a2c7-cef3083a8c39": {
      "content": "<nuxt-link to=\"$1\">$2</nuxt-link>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-linkto",
      "matches": {
        "nuxt linkto": true
      },
      "source": "javascript/nuxt"
    },
    "5777680a-b637-3968-ac75-f0e8598cce68": {
      "content": "outline-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "577994f6-d010-31ec-8c9e-5bd971dec15c": {
      "content": "${1:obj}.fadeIn('slow/400/fast', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeinc": true
      },
      "source": "snippets/javascript"
    },
    "5786b331-5f22-38ca-bc8d-ba229727766a": {
      "content": "type=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      },
      "source": "vim-snippets/snippets"
    },
    "5787f839-2522-3af5-b79c-ff0b51f6c3ee": {
      "content": "INITIAL ${0:?}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ini": true
      },
      "source": "vim-snippets/snippets"
    },
    "578ac0ca-2600-321b-8dae-f299de46db35": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "578c7534-66c8-3ff1-b116-8ac66a6d3150": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if error not nil, return err",
      "matches": {
        "ir": true
      },
      "source": "vim-snippets/snippets"
    },
    "578e6e8b-7cf3-328d-acd4-3746d93f2cc8": {
      "content": "floatformat:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      },
      "source": "vim-snippets/snippets"
    },
    "578f11ca-f43f-3fff-9c6f-2bcc8bde9504": {
      "content": "${1:name}.foldRight(${0:first}) {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fldr": true
      },
      "source": "vim-snippets/snippets"
    },
    "5793b3d4-6876-387c-8dc6-9784fc84c371": {
      "content": "(${1:a}: ${2:T}) => $1 ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fcf": true
      },
      "source": "vim-snippets/snippets"
    },
    "579a3d31-df7e-3d28-8715-6704cbe10b65": {
      "content": "&#x2326;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delete": true
      },
      "source": "vim-snippets/snippets"
    },
    "579b80c7-e8da-3342-a69f-5090a560f26f": {
      "content": "if (${1}) {\n\t${2}\n} {\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "57a31a20-0e09-3d8c-a98e-f014d17309ac": {
      "content": "(if ${1} ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "57aa3035-bd7b-395c-9743-f14193e1d401": {
      "content": "override def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "57abe07a-91ec-3827-ad97-b5a5d6f3df3f": {
      "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessProps",
      "matches": {
        "rscp": true
      },
      "source": "vscode-react/snippets"
    },
    "57bde5e5-478f-3664-81c1-d971aca08315": {
      "content": "use ${1:std::$2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "use ...;",
      "matches": {
        "use": true
      },
      "source": "vim-snippets/snippets"
    },
    "57be62c1-a06a-3b5e-bbf7-e2e7f759437e": {
      "content": "import React, { Component } from 'react'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-component",
      "matches": {
        "imrc": true,
        "react import component": true
      },
      "source": "javascript/react"
    },
    "57c23a46-e9c6-33f5-afd9-0370557d9bdf": {
      "content": "for ${1:name} from ${2:start} til ${3:finish}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrex": true
      },
      "source": "vim-snippets/snippets"
    },
    "57c583e0-ec49-3e20-9454-0f491f2c3985": {
      "content": "@foreach ($$1 as $$2)\n\t${3:${VISUAL}}\n@endforeach",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@foreach directive",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "57cedf09-9bdb-3beb-90e1-152b624d6408": {
      "content": "(define (${1})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun": true
      },
      "source": "vim-snippets/snippets"
    },
    "57d4a11d-0109-3f19-86c0-fc728cb53293": {
      "content": "(fun ${1:x} -> ${2:TARGET})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "(fun x -> ...)",
      "matches": {
        "fun": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "57d8d02a-ce5b-39c9-914d-d2b2aff9d2f4": {
      "content": "-> (${1:#:args}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "57de63d7-6ac4-31c7-b921-d9af4136270f": {
      "content": "+ (${1:#:id})${0:#:method};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "InterfaceClassMethod",
      "matches": {
        "icm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "57e0af59-226d-30bb-b874-b9cc3abab7ff": {
      "content": "-moz-border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "57ed620b-ab7f-3ac1-bfbc-2b4827a714b4": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-enum-required",
      "matches": {
        "prop-types enum required": true,
        "pter": true
      },
      "source": "javascript/prop-types"
    },
    "57f45f58-3db1-3144-ba19-c5271b809a95": {
      "content": "getSnapshotBeforeUpdate = (prevProps, prevState) => {\n\t$0\n}\n",
      "doc": "Called right before mutations are made (e.g. before the DOM is updated)",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getSnapshotBeforeUpdate",
      "matches": {
        "gsbu": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "57ff5f7b-095a-3b78-9bca-6c764bb168dc": {
      "content": "_.unset(${object}, ${path})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 7 } }] };\n_.unset(object, 'a[0].b.c');\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\n_.unset(object, ['a', '0', 'b', 'c']);\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\nRemoves the property at `path` of `object`.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unset",
      "matches": {
        "lodash unset": true
      },
      "source": "javascript/lodash"
    },
    "580622a9-2e20-331d-adc9-263ea5de8d6e": {
      "content": "{:else if ${1: otherCondition}}\n\t${2: <!-- else if content here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-if-block",
      "matches": {
        "svelse-if": true,
        "svelte else if": true
      },
      "source": "javascript/svelte"
    },
    "580c71ba-f1d0-3a46-b079-c23cbc398977": {
      "content": "Yii::app()->cache->flush();",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycaf": true
      },
      "source": "vim-snippets/snippets"
    },
    "58135087-50f6-3c01-b1f5-4a52016de3c3": {
      "content": "_.update(${object}, ${path}, ${updater})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.update(object, 'a[0].b.c', function(n) { return n * n; });\nconsole.log(object.a[0].b.c);\n// => 9\n\n_.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\nconsole.log(object.x[0].y.z);\n// => 0\n\nThis method is like `_.set` except that accepts `updater` to produce the\nvalue to set. Use `_.updateWith` to customize `path` creation. The `updater`\nis invoked with one argument: (value).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-update",
      "matches": {
        "lodash update": true
      },
      "source": "javascript/lodash"
    },
    "5813bc85-48b2-3072-b118-ccd3dacf25de": {
      "content": "def dispatch(self, request, *args, **kwargs):\n\treturn super(${1:CLASS_NAME}, self).dispatch(request, *args, **kwargs)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Dispatch View method",
      "matches": {
        "dispatch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "58207ce0-03ce-37a7-bfcd-874652a6219e": {
      "content": "Set${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "5823e1dd-bbee-31b3-bdc9-642d865c0023": {
      "content": "justify-content: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "582f7517-7bc9-35ef-9d07-2d1c33343233": {
      "content": "border-collapse: separate",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "5834348f-1b93-36c7-acb5-4e9aa4c40b90": {
      "content": "public int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5846a43d-4cc9-3f66-b6d7-fccfeed8a4d3": {
      "content": "for ${1} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "584a9c35-5929-3757-a52f-264a7c7c3e64": {
      "content": "display: list-item",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      },
      "source": "vim-snippets/snippets"
    },
    "5851f6eb-2eb7-3652-a507-72561162a905": {
      "content": "${1:ModelName}::model()->findByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindbp": true
      },
      "source": "vim-snippets/snippets"
    },
    "5854c1b8-c1f8-3361-b6d6-bf82f72e9901": {
      "content": "import React, { PureComponent } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:$TM_FILENAME_BASE}\n",
      "doc": "Creates a React pure component class with ES7 module system export",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-pure-component",
      "matches": {
        "react component class export pure": true,
        "rpce": true
      },
      "source": "javascript/react"
    },
    "5856e9b8-6230-32ee-b7f8-aab775863343": {
      "content": "print!(\"${1}\");",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "print!",
      "matches": {
        "pri": true
      },
      "source": "vim-snippets/snippets"
    },
    "585ef76c-a861-3e9d-bc7c-09db213a67a0": {
      "content": "outline-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "5862eb06-9660-31ee-965d-46db9a9338f6": {
      "content": "task body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task body",
      "matches": {
        "taskb": true
      },
      "source": "vim-snippets/snippets"
    },
    "5864ad5e-8c14-3c5c-bcd3-9ce030eb96d5": {
      "content": "else {\n\t${0}\n}",
      "doc": "else statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "else-statement",
      "matches": {
        "base else": true
      },
      "source": "javascript/base"
    },
    "586e4552-dcca-3691-9342-b83634bc6bf8": {
      "content": "${1:http}.HandleFunc(\"${2:/}\", func(w http.ResponseWriter, r *http.Request) {\n\t${0:fmt.Fprintf(w, \"hello world\")}\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "mux.HandleFunc",
      "matches": {
        "hhf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "587042a0-428c-352d-9112-b5e90102ae2b": {
      "content": "{% set ${1:#:var} %}\n\t${0:TARGET}\n{% endset %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% set ... %} ... {% endset %}",
      "matches": {
        "setblock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5883a78e-b841-3c69-aaf7-c49a07cc4b69": {
      "content": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifndef ... #define ... #endif",
      "matches": {
        "#ifndef": true,
        "ifndef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5893a971-6917-3f76-90f8-cd3daafa6d0b": {
      "content": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: '${1:selector-name}'\n})\n\nexport class ${2:Name}Pipe implements PipeTransform {\n\ttransform(value: any, ...args: any[]): any {\n\t\t$0\n\t}\n}",
      "doc": "Angular pipe",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-pipe",
      "matches": {
        "a-pipe": true,
        "angular pipe": true
      },
      "source": "javascript/angular"
    },
    "589dd1b3-6b5c-3755-9125-bd6fd13af960": {
      "content": "import { graphql } from 'gatsby';",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-graphql-import",
      "matches": {
        "gatsby import graphql": true
      },
      "source": "javascript/gatsby"
    },
    "58a30c45-19ac-320b-b921-ea527bb192e1": {
      "content": "<c:param name=\"${1}\" value=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cparam": true
      },
      "source": "vim-snippets/snippets"
    },
    "58a609b3-68e6-3445-a36b-add8eb50fc7c": {
      "content": "FIND FIRST ${1:BufferName}\n${2:WHERE $1.${3}} ${0}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "58ad7a9b-6580-3a97-a1cc-d8115e1b9186": {
      "content": "main : Program Never ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}beginnerProgram\n\t\t{ init: ${6:init}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "basicProgram": true,
        "progb mainb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "58adcc92-61e6-3457-8be8-1cb07e7e5f51": {
      "content": "${1:obj}.reset (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reset": true
      },
      "source": "snippets/coffee"
    },
    "58b202ef-f826-37dc-80ac-6afe45c76198": {
      "content": "text-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "58b31ea6-ee1d-3029-8251-e5ade03c8de4": {
      "content": "\\fullcite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\fullcite": true,
        "fullcite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "58b459f2-a03c-39c0-82f0-6a137ed5de5b": {
      "content": "justify-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "58c0cb48-28c3-3828-a9e0-15ed46761b16": {
      "content": "def initialize(${1})\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defi": true
      },
      "source": "vim-snippets/snippets"
    },
    "58ca850a-0cbd-35b9-81de-0d57e035b518": {
      "content": "const {\n  ${1:queryName}: { childImageSharp: {fixed: ${2:imageFixed}}}\n} = useStaticQuery(graphql`\n  query {\n    ${1:queryName}: file(relativePath: { eq: \"${3:imagePath.png}\" }) {\n      childImageSharp {\n        fixed(width: ${4:300}) {\n          ...${5|GatsbyImageSharpFixed,GatsbyImageSharpFixed_noBase64,GatsbyImageSharpFixed_tracedSVG,GatsbyImageSharpFixed_withWebp,GatsbyImageSharpFixed_withWebp_noBase64,GatsbyImageSharpFixed_withWebp_tracedSVG|}\n        }\n      }\n    }\n  }\n`)",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-usestaticquery-fixed",
      "matches": {
        "gatsby-image usestaticquery fixed": true
      },
      "source": "javascript/gatsby-image"
    },
    "58d03303-8dfb-3ed2-b42c-7c0d8bd9061d": {
      "content": "_.isWeakMap(${value})",
      "doc": "_.isWeakMap(new WeakMap);\n// => true\n\n_.isWeakMap(new Map);\n// => false\n\nChecks if `value` is classified as a `WeakMap` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isweakmap",
      "matches": {
        "lodash isweakmap": true
      },
      "source": "javascript/lodash"
    },
    "58d12733-2448-33e9-9d7d-653ea6486565": {
      "content": "%ul\n\t%li\n\t\t${0:item}\n\t%li",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul": true
      },
      "source": "vim-snippets/snippets"
    },
    "58d8cb17-74c1-3a75-bca0-ca1cdeb0378b": {
      "content": "for (let ${1:i} = 0; $1 < ${2:#:Things}.length; ++$1) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "58de0a4c-16fd-37b4-97d8-f3ab73f09c31": {
      "content": "-undef(${1:macro}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undef": true
      },
      "source": "vim-snippets/snippets"
    },
    "58e14443-58e0-3d17-91b2-7acdb21a287c": {
      "content": "{% use \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig use",
      "matches": {
        "use": true
      },
      "source": "vim-snippets/snippets"
    },
    "58e4ac4b-4e57-356a-aef0-cca71326762c": {
      "content": "border-width: ${1:1px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-width: width (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "58e957e6-a850-3534-955e-daffe3a4b73f": {
      "content": "<label for=\"${1}:id\">${2:TARGET}</label>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "labelfor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "58f4c77d-82aa-3fab-9424-ee3407b23c83": {
      "content": "\\\\lstinline|${1}| ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lsi": true
      },
      "source": "vim-snippets/snippets"
    },
    "58fde947-90d9-3e3d-b142-f3c0fdf3e1a0": {
      "content": "has_and_belongs_to_many :${1:object}${2:, join_table: \"${3:table_name}\", foreign_key: \"${4:$1_id}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_and_belongs_to_many (habtm)",
      "matches": {
        "habtm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "59065c43-e5bc-315c-9bbc-553d09392047": {
      "content": "$this->fail(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->fail()",
      "matches": {
        "fail": true
      },
      "source": "vim-snippets/snippets"
    },
    "590b3792-a60a-3dcb-8e36-4ee16f246191": {
      "content": "opts.on('-${1:o}', '--${2:long-option-name}', ${3:String}, '${4:Option description.}') do |${5:opt}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      },
      "source": "vim-snippets/snippets"
    },
    "590c2445-bfcb-3023-94a0-3c00acf807b5": {
      "content": "_.sample(${collection})",
      "doc": "_.sample([1, 2, 3, 4]);\n// => 2\n\nGets a random element from `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sample",
      "matches": {
        "lodash sample": true
      },
      "source": "javascript/lodash"
    },
    "59142d26-a2a0-3e8f-90af-f6bcc9e45db1": {
      "content": "font-family: ${0:Monaco,'Courier New'},monospace;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "591e5cd9-22ab-3cdd-95a9-1851b00b7404": {
      "content": "_.groupBy(${collection}, ${iteratee})",
      "doc": "_.groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n\n// The `_.property` iteratee shorthand.\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The order of grouped values\nis determined by the order they occur in `collection`. The corresponding\nvalue of each key is an array of elements responsible for generating the\nkey. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-groupby",
      "matches": {
        "lodash groupby": true
      },
      "source": "javascript/lodash"
    },
    "59215db7-63b3-322e-b0de-2f126671befe": {
      "content": "padding: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "592441eb-eee0-3690-8822-647965c65e0a": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:Console.WriteLine(e.Message);}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch () {}",
      "matches": {
        "try": true,
        "try_catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "592b259b-8f1d-33d4-b541-10d12ad2abac": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State, props) => ${3:selectLogic}\n);",
      "doc": "Creates an NgRx Selector using props",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Selector w/ Props",
      "matches": {
        "a-ngrx-create-selector-props": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "59355042-834b-38ab-9b0a-5930f19f0c04": {
      "content": "import React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassExportComponent",
      "matches": {
        "rce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "594f129c-1e9a-35fa-9377-d31317155fdf": {
      "content": "<aside>\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside": true
      },
      "source": "vim-snippets/snippets"
    },
    "59509ce9-da6d-398a-9205-c6e3aa3ee128": {
      "content": "mag(${1:a}, ${2:b}${3:, }${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mag": true
      },
      "source": "vim-snippets/snippets"
    },
    "5951e5fd-bc28-3435-bd0e-f5fedf6a3721": {
      "content": "Return From Keyword    ${1:${optional return value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Return From Keyword",
      "matches": {
        "rfk": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "595b58d4-b859-3ab0-930c-3fb5dd61a6c7": {
      "content": "slot=\"$1\"$0",
      "doc": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slota",
      "matches": {
        "slota": true,
        "vue slota": true
      },
      "source": "javascript/vue"
    },
    "596899b1-8324-307c-89e8-16f1aaaa6901": {
      "content": "${1:FIELDNAME} = models.TimeField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      },
      "source": "vim-snippets/snippets"
    },
    "596b326d-a2db-376d-be5b-a49b9063ab37": {
      "content": "public bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5971d57b-b503-39a4-8731-f5852e687755": {
      "content": "${1:FIELDNAME} = forms.TypedChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TypedChoiceField",
      "matches": {
        "ftchoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "59762e9b-7574-3783-88bf-850550770f2e": {
      "content": "color: ${1:red};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-name (color)",
      "matches": {
        "color": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "597bb61c-27a0-3307-88cb-b1901fedd70a": {
      "content": "\\$_REQUEST['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "request": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "597cc10d-bf9d-300a-95b0-a3c0fe038991": {
      "content": "text-height max-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "597e6e5a-442a-3f1d-90ad-d7906f8c3b0d": {
      "content": "set(${1:var} ${0:val})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "5987eb95-0ae9-3125-a970-f494a8725686": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component",
      "matches": {
        "vue base": true
      },
      "source": "javascript/vue"
    },
    "598ea3cb-368e-3ac7-a1d9-80c3a09f2bdb": {
      "content": "${1:obj}.unbind('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbind": true
      },
      "source": "snippets/javascript"
    },
    "599c0581-14dd-3782-8e2f-022546265085": {
      "content": "<xsl:call-template name=\"${1:template}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "call-template": true
      },
      "source": "vim-snippets/snippets"
    },
    "599c6246-98c8-3934-85a8-d3c100fc7158": {
      "content": "/// ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "599f838f-2264-3d45-871f-0aded6a4cb99": {
      "content": "unless ($1) {\n\t${2:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "unless",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "59b2bb28-cedc-3ff6-b92a-3ff0d8e052e5": {
      "content": "const axios = require('axios').default;",
      "doc": "require axios",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-require",
      "matches": {
        "axios require": true
      },
      "source": "javascript/axios"
    },
    "59b54e8e-6a0f-3820-a06c-19ff0cd792dc": {
      "content": "hasOwnProperty(${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      },
      "source": "snippets/javascript"
    },
    "59cbe0bf-2b2e-3853-a3c9-8b138f53293d": {
      "content": "border-right-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "59d6ee69-7467-3c19-89d0-61e45f88f8e5": {
      "content": "class ${1:ClassName}(${2:object}):\n\t\"\"\"${3:docstring for $1}\"\"\"\n\tdef __init__(self, ${4:arg}):\n\t\t${5:super($1, self).__init__()}\n\t\tself.$4 = $4\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "59d973ab-7311-3cd6-b255-d4126a47aac1": {
      "content": "import ${1:Json.Encode} as ${2:Encode} exposing (${0:Value})",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impae": true
      },
      "source": "vim-snippets/snippets"
    },
    "59da47cf-f22f-349d-bb9f-a0d3ef3863f7": {
      "content": "import ${1:Data.Text} (${0:head})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import2": true
      },
      "source": "vim-snippets/snippets"
    },
    "59da922f-a6f6-3ebe-b43a-678da2eba5cd": {
      "content": "let mut ${1} = ${2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let mut variable declaration with type inference",
      "matches": {
        "letm": true
      },
      "source": "vim-snippets/snippets"
    },
    "59dc9221-05ae-3e70-b092-f022886964d9": {
      "content": "<slot ${1:prop}={${2:value}}>${3:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-prop",
      "matches": {
        "svelte slot prop": true,
        "svsp": true
      },
      "source": "javascript/svelte"
    },
    "59f1ba15-a99a-3498-99c5-03b35f55d58b": {
      "content": "while {${1:condition}} {\n\t$2\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "while... (while)",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "59f726f7-57c4-3675-8e48-074921022e0f": {
      "content": "console.table(${1:object});",
      "doc": "Displays tabular data as a table.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletable",
      "matches": {
        "base console table": true
      },
      "source": "javascript/base"
    },
    "5a063fbd-7345-3ffa-8c33-48228a54d31a": {
      "content": "/// <reference path=\"${0:#:TARGET}\" />",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "/// <reference path=\"...\" />",
      "matches": {
        "reference": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a12d389-d688-3105-9b32-7bd9f4e0689a": {
      "content": "border-right-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-style": true,
        "brs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a1d3cf2-9df5-32da-87d5-34786773b0bb": {
      "content": "reverse_each { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reve": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a2e2cf5-fec7-3905-807a-1a91f3bb9d13": {
      "content": "require('${1:package}');",
      "doc": "Require a package",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "rqr": true
      },
      "source": "vscode-javascript/snippets"
    },
    "5a3ba9db-a4ed-3aee-998f-44a5ae758236": {
      "content": "<ol>${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a3d1292-e21c-3485-a27e-4e39c2f7a5b8": {
      "content": "${1:obj}.load('${2:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(responseText, textStatus, xhr) ->\n\t\t${0:// success callback}\n})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadf": true
      },
      "source": "snippets/coffee"
    },
    "5a417a0a-5fde-37e2-ae21-49e99acb53ea": {
      "content": "on:${1|introstart,introend,outrostart,outroend|}=\"{() => status = '${1|introstart,introend,outrostart,outroend|}'}\"",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-events",
      "matches": {
        "svelte transition events": true,
        "svte": true
      },
      "source": "javascript/svelte"
    },
    "5a45eb77-6e2e-30a3-ba49-ab58e0f92e11": {
      "content": "namespace ${1:#:name} {\n    ${0:TARGET}\n} // namespace $1",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "namespace {}",
      "matches": {
        "namespace": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a46f841-b1d1-3507-9382-7753241932ff": {
      "content": "var ${1:margin} = { top: ${2:10}, right: ${3:10}, bottom: ${4:10}, left: ${5:10} };\nvar ${6:width} = ${7:970} - $1.left - $1.right;\nvar ${8:height} = ${9:500} - $1.top - $1.bottom;\nvar ${10:svg} = d3.select(\"${11}\").append(\"svg\")\n  .attr(\"width\", $6 + $1.left + $1.right)\n  .attr(\"height\", $8 + $1.top + $1.bottom)\n    .append(\"g\")\n  .attr(\"transform\", \"translate(\" + $1.left + \",\" + $1.top + \")\")",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "marginconvention": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a4b2730-3f4b-375c-b099-0cfda3f11bde": {
      "content": "if ${1:/* condition */} {\n\t${2:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if condition",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a4e2447-65a3-3c87-a1cb-14cb95432414": {
      "content": "/**\n * @brief    ${1:function description}\n *\n * @details  ${2:detailed description}\n *\n * @param    ${3:param}\n *\n * @return   ${4:return type}\n */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "/** @brief ...",
      "matches": {
        "doxy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a4e938d-f0f4-3ae4-8476-627ffd52970a": {
      "content": "cursor: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a4f8c75-369c-3735-811f-deb69ab48f8e": {
      "content": "clear: both",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a561c5b-31ad-304f-bd45-9cf252d24844": {
      "content": "Wait Until Page Contains Element    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Contains Element",
      "matches": {
        "wupce": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5a5e58d5-1832-3230-8150-019711403c7e": {
      "content": "use GenServer\n@doc false\ndef start_link do\n\tGenServer.start_link(__MODULE__, ${1:Map.new})\nend\n@impl true\ndef init(state) do\n\t{:ok, state}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "basic genserver structure",
      "matches": {
        "genserver": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a5f5b88-808b-3eb4-9718-905c2bf3ed83": {
      "content": "${1:obj}.queue(${2:name}${3:, newQueue})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      },
      "source": "snippets/coffee"
    },
    "5a61c387-f226-3e29-a210-18e3fa2d1b81": {
      "content": "/*\n * ${0}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a61fc5f-a85b-3c12-9f9e-e62c932e0951": {
      "content": "<dd id=\"${1}\">${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd#": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a6f7a63-5e12-34a4-a8c9-fd493f6904c0": {
      "content": "{% capture ${1:variable} %}${0}{% endcapture %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a703f49-1422-3e59-8397-e8d1561bce54": {
      "content": "HashMap[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a766328-3b9e-30de-bfce-ac81ec8f977a": {
      "content": "const ${1:ComponentName} = (${2:props}) => {\n\t${3:state}\n\treturn (\n\t\t<>\n\t\t\t${4}\n\t\t</>\n\t);\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raf": true
      },
      "source": "snippets/javascript"
    },
    "5a7d7543-4b7d-38b5-98ce-e27ccfff12bd": {
      "content": "_.times(${n}, ${iteratee})",
      "doc": "_.times(3, String);\n// => ['0', '1', '2']\n\n _.times(4, _.constant(0));\n// => [0, 0, 0, 0]\n\nInvokes the iteratee `n` times, returning an array of the results of\neach invocation. The iteratee is invoked with one argument; (index).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-times",
      "matches": {
        "lodash times": true
      },
      "source": "javascript/lodash"
    },
    "5a7e8f83-70f0-394c-aed2-ff6ffd22f7d8": {
      "content": "| modulo: ${1:2}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modulo": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a7fc8fb-adc0-361d-b1e0-0db9e29998f4": {
      "content": "== ${1:Title}\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "== heading on level 2",
      "matches": {
        "heading": true,
        "section": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5a7fe166-0ad3-31f0-ba75-fa94698794d0": {
      "content": "\\\\vec{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "vector",
      "matches": {
        "vec": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a83e80c-ec93-3561-a2b1-9c86881ca237": {
      "content": "$.makeArray(${0:obj});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "makearray": true
      },
      "source": "snippets/javascript"
    },
    "5a88e26e-fc0b-3384-b4f9-aabe6a2762c4": {
      "content": "class ${1:FormName}(forms.Form):\n\t\"\"\"${2:docstring}\"\"\"\n\t${0}",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a8e7bbf-bc15-3c84-8082-6c91c97735ff": {
      "content": "letter-spacing: $1em;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "letter-spacing:   length-em (letter)",
      "matches": {
        "letter": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5a90989c-b2e0-39c7-88c5-633d3180db8b": {
      "content": "public string ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+&": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a9506fd-3e52-3ff8-af68-d78d5cafcc5a": {
      "content": "find_all do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "finad": true
      },
      "source": "vim-snippets/snippets"
    },
    "5a964b24-5130-30cf-a4a5-ed81bc6fc7ce": {
      "content": "height: ${1:auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "height",
      "matches": {
        "h": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5a99ffe8-49a0-3c97-86d7-a8ef750134f8": {
      "content": "enum ${1}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ab0cad4-81d4-3c99-8611-2bdd8b3a4722": {
      "content": "import Route from '@ember/routing/route';\n\nexport default Route.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Route from '@ember/routing/route';",
      "matches": {
        "eroute": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5ab2a309-7695-36ba-8053-851dc6bde8cb": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "5abc5d06-d2b3-37f4-8458-28abca068313": {
      "content": "font-stretch extra-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "5abeb5b4-3d62-3ca5-90b3-748bc284470b": {
      "content": "divisibleby:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ac21448-2368-3a2b-af2f-c7b4ede322b6": {
      "content": "for ${1:name} in ${2:array}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Array Comprehension",
      "matches": {
        "fora": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5ac60bad-0e93-3c08-8443-8b9d600dc77d": {
      "content": "logger.warn",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.warn",
      "matches": {
        "logw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5acb939b-080d-3858-9815-117232e40c4b": {
      "content": "#![feature(${1:plugin})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "feature attribute",
      "matches": {
        "feat": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ace7665-1494-3e8e-bd4d-9696889b9d96": {
      "content": "${1|onBeforeMount,onMounted,onBeforeUpdate,onUpdated,onBeforeUnmount,onUnmounted,,onActivated,onDeactivated,onErrorCaptured,onRenderTracked,onRenderTriggered|}(() => {${2}})",
      "doc": "Lifecycle hooks can be registered with directly imported `onXXX` functions:",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3lifecyclehook",
      "matches": {
        "vue v3 lifecyclehook": true
      },
      "source": "javascript/vue"
    },
    "5ad985e6-8968-36f3-946c-83e24753ba18": {
      "content": "word-break: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5adc6007-a5aa-361e-bc70-a73d0dfb75fe": {
      "content": "var ${1:x} ${2:Type}${3: = ${0:value}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var x Type [= ...]",
      "matches": {
        "var": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5ae10ff6-8f23-3e8d-b7b7-2fe89213fb3a": {
      "content": "delete ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5ae35600-07cb-3057-9e4d-aa49f30c53bb": {
      "content": "${1:#:expression} while ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "xwh",
      "matches": {
        "xwhile": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5ae56bb7-753f-33dd-bd0f-0e1baa1c1a15": {
      "content": "font-variant ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ae7c736-2340-3424-b582-b311c138fbfc": {
      "content": "implements ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ae89fc6-6731-31eb-9beb-e78f008239f7": {
      "content": "const ${1:NAME} ${2:Type} = ${0:0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const XXX Type = ...",
      "matches": {
        "con": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5aea266b-b32b-3038-b13c-cb26d8336436": {
      "content": "font-emphasize-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      },
      "source": "vim-snippets/snippets"
    },
    "5aeca44d-bca2-36e5-9b83-578ae0f85230": {
      "content": "while ${1:true} do\n  ${2:TARGET}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "while ... do; ... done",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5b0495b9-b8cf-3a2f-bedf-fd32782ecdc8": {
      "content": "has_many :${1:object}s${2:, class_name: \"$1\", foreign_key: \"${4:reference}_id\"}, dependent: :destroy$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many dependent: :destroy",
      "matches": {
        "hmd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5b06956b-7907-3e12-a735-1ee02e694c4b": {
      "content": "NSAutoreleasePool *pool = [NSAutoreleasePool new];\n$0\n[pool drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSAutoreleasePool (pool)",
      "matches": {
        "pool": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5b0fea25-429e-3ba8-963f-7f1ad8387c22": {
      "content": "$this->assertNotContains(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotContains($needle, $haystack)",
      "matches": {
        "asncon": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b1c9986-a5ba-38d6-a89d-8de540ea0a87": {
      "content": "overflow-style: scrollbar",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b22017f-6db4-3052-99df-d0ebb23ac648": {
      "content": "public function test${1}()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "public function testXYZ() { ... }",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b33cb5e-8d57-3d22-b069-fd407a7a8f5b": {
      "content": "${1:obj}.hasClass('${2:className}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasc": true
      },
      "source": "snippets/coffee"
    },
    "5b377944-af9a-32ef-a35f-b91705ffa1c8": {
      "content": "try\n\t${0:TARGET}\non error\n\t-- error handling\nend try",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5b3ea575-6bd8-321f-88b6-f9eb3c75f364": {
      "content": "border-top-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b488dbb-3528-3fbe-a2cf-e675ae2b6bf0": {
      "content": "expect(${1:target})$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect (coffee)",
      "matches": {
        "ex": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5b4e38bf-d6fd-35de-b7a0-17098622db9b": {
      "content": "else\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b56a708-922a-3f2b-abc4-b9d33cc33aa2": {
      "content": "align-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b5b7c2c-15f7-38d7-a186-77309d9868f6": {
      "content": "overflow: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b6f1a4e-5754-35f9-a6b8-c8bfdf8fd0e9": {
      "content": "var $1 = new sap.m.Button({\n\t\t\ttext : $2,\n\t\t\ttype : $3,\n\t\t\twidth : $4,\n\t\t\tenabled :$5,\n\t\t\tvisible :$6,\n\t\t\ticon : $7,\n\t\t\ticonFirst : $8,\n\t\t\tactiveIcon :$9,\n\t\t\ticonDensityAware : $10,\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmbutton": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b6f59bb-133f-3d2b-ad4f-7cb9a3cb16f0": {
      "content": "$this->db->insert(${1:table}, ${2:data});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_insert": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b76014e-4a20-355d-a5fa-80ede21aa869": {
      "content": "expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have attribute (js)",
      "matches": {
        "eha": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b77a3d3-6fdb-3caa-ac81-3142f704a646": {
      "content": "expect($1).toHaveBeenLastCalledWith($0);",
      "doc": "returns true if the spy has been last called with",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeenlastcalledwith",
      "matches": {
        "jest expect tohavebeenlastcalledwith": true,
        "thblcw": true
      },
      "source": "javascript/jest"
    },
    "5b8011a8-a5dc-3744-a136-e49a61de765d": {
      "content": "booleanParam(name: \"${1:TOGGLE}\" , defaultValue: ${2:default}, description: \"${3:Toggle this value}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parambool": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b803427-c467-3c98-8e2d-b776f237eb06": {
      "content": "expect(${1:target}).wasNotCalledWith(${2:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was not called with (coffee)",
      "matches": {
        "noscw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5b82c7da-c2f2-3053-ba9f-f50f66077862": {
      "content": "names(${1:x})",
      "doc": "Names",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "nam",
      "matches": {
        "names": true
      },
      "source": "vscode-R/snippets"
    },
    "5b848a04-f5e2-31e1-97ae-fccc8e392797": {
      "content": "<router-link :to=\"{name: '${1:name}'}\">${2:LinkTitle}</router-link>",
      "doc": "Named routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Routing Link",
      "matches": {
        "vroutename": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "5b85d9ef-6e89-36b6-94fd-4b433a81c206": {
      "content": "font-emphasize-style: accent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b8645e6-a15a-358b-a2a7-2905eccd9ff5": {
      "content": "pgl.beginGL();\n\t${0}\npgl.endGL();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "begin gl",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b8f5da5-d9bc-3132-bc66-8c4cf408bf9d": {
      "content": "checked\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "checked block",
      "matches": {
        "checked": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5b96b8d2-3f5a-3f99-ac16-fb88ab479d1e": {
      "content": "std::priority_queue<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pqueue": true
      },
      "source": "vim-snippets/snippets"
    },
    "5b9bb28f-183c-3068-8205-c9d4b02505e7": {
      "content": ":yields: ${0:arguments}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "y": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ba136eb-5617-395e-870a-5852f20aaa3e": {
      "content": "{ path: '', pathMatch: 'full', redirectTo: '${1:path}' },$0",
      "doc": "Angular default route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Default Route Path",
      "matches": {
        "a-route-path-default": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "5ba1ad44-bec6-3213-9ee5-52f2bc416743": {
      "content": "expect(${1:target}).toBeUndefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (js)",
      "matches": {
        "eud": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ba1c15e-734a-3bff-b338-d2ce274c67ba": {
      "content": "Rails.logger.${1:debug} ${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ba254d9-ff7c-3fd2-83d7-2591df316c62": {
      "content": "type ${1} is ${2}\n\twith Default_Value => ${3};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type with default value",
      "matches": {
        "type_default": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5bad705f-377f-3299-adf4-5769a7064ffe": {
      "content": "use parent qw(${0:Parent Class});",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      },
      "source": "vim-snippets/snippets"
    },
    "5bb184f1-f350-385c-89f3-4b62de4aebd7": {
      "content": "if(${1:#:condition})\n\t${0}\nendif()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "if() endif()",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5bbf542b-2d0b-35e1-a624-5d1a3b62cc0d": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "vim-snippets/snippets"
    },
    "5bc15727-abe0-39b7-a1f8-5ab2187121e4": {
      "content": "$this->shouldNotImplement($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotImplement('Type')",
      "matches": {
        "snimplement": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5bc84b9e-d83b-36e7-8d7f-cf9ee9f5bb5d": {
      "content": "else {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "else {}",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5bdc3896-06e3-3bfb-8e50-038760c38ea0": {
      "content": "$.inArray(${1:value}, ${0:array})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inarr": true
      },
      "source": "snippets/coffee"
    },
    "5be477a6-b312-3465-b6fc-aa2a2f152739": {
      "content": "Ada.Text_IO.Get(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get",
      "matches": {
        "get": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5bf1e7ec-c989-351f-9c5d-4879b4a60653": {
      "content": "casez (${1:/* variable */})\n\t${2:/* value */}: begin\n\t\t${3}\n\tend\n\tdefault: begin\n\t\t${4}\n\tend\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casez": true
      },
      "source": "vim-snippets/snippets"
    },
    "5bf35d8b-c448-317f-9d05-80e33745a12f": {
      "content": "place-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "5bf6a19d-d9ba-39ea-a400-fd889a3e733d": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun3": true
      },
      "source": "vim-snippets/snippets"
    },
    "5bfff7ae-7d96-35d2-bb03-c28ddc93f306": {
      "content": "background-clip: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c05b0de-a576-3bbd-ad49-0c1c062f0496": {
      "content": "[#${1:Id}] ${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "[#anchor] #text#, itemize, ...",
      "matches": {
        "anchorblock": true,
        "block-anchor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5c08168f-a802-3471-8e7b-5cd1bc81c614": {
      "content": "/// ${3:/*documentation*/}\nclass $1Exception : $2Exception\n{\n\tpublic this(string msg, string file = __FILE__, int line = __LINE__)\n\t{\n\t\tsuper(msg, file, line);\n\t}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "exception declaration (exc)",
      "matches": {
        "exc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5c224236-dc07-392f-864e-4f0957b30efb": {
      "content": "align-self: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c243d9d-9417-3fcb-aad9-7e1bbe96a9bb": {
      "content": "async fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Async function definition",
      "matches": {
        "afn": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c24a8ce-5400-3f89-8e07-4b4219726d58": {
      "content": "<area shape=\"circle\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c2813e1-8b10-321b-80a9-8794a1f6d017": {
      "content": "[<Literal>]\nlet ${1} = ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lit": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c3cec8e-6b7e-3bac-a82e-6f478a51fed1": {
      "content": "_.toLower(${string})",
      "doc": "_.toLower('--Foo-Bar--');\n// => '--foo-bar--'\n\n_.toLower('fooBar');\n// => 'foobar'\n\n_.toLower('__FOO_BAR__');\n// => '__foo_bar__'\n\nConverts `string`, as a whole, to lower case just like\n[String#toLowerCase](https://mdn.io/toLowerCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tolower",
      "matches": {
        "lodash tolower": true
      },
      "source": "javascript/lodash"
    },
    "5c4671e8-385a-3c2a-9e09-65b20a627828": {
      "content": "import 'react-native'\nimport renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from 'src/store'\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(\n\t\t<Provider store={store}>\n\t\t\t<${1:${TM_FILENAME_BASE}} {...defaultProps} />\n\t\t</Provider>,\n\t)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_setupReactNativeTestWithRedux",
      "matches": {
        "_snrtest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "5c482973-9b5c-302e-bc20-cfc8d4c8e863": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillupdate",
      "matches": {
        "cwup": true,
        "react componentwillupdate": true
      },
      "source": "javascript/react"
    },
    "5c48d7fc-b8a4-3da5-b67d-e892529b738e": {
      "content": "NSMutableArray *${1:array} = [NSMutable array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c522c79-9aa2-33e7-b6a0-8dc30662ffbc": {
      "content": "extlookup(\"${1:variable}\", \"${2:default}\", \"${3:data source}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Extlookup with defaults and custom data file",
      "matches": {
        "extlookup": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c541e88-9500-34e0-b76f-2ad592c04286": {
      "content": "${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${0:, db_table=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m2m": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c590585-6a13-3d2b-b95d-e040ed41ffda": {
      "content": "logger.fatal { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.fatal",
      "matches": {
        "logf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5c62b289-34fa-3981-a478-6d633d3ca2a8": {
      "content": "{% include '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% include '...' %}",
      "matches": {
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5c6454f4-707e-39b3-947d-082baa55c3b7": {
      "content": "vertex(${1:x}, ${2:y}, ${3:z}${4:, }${5:u}${6:, }${0:v});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "vertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c646f15-66cb-3db1-91dd-d6e22b69015e": {
      "content": "outline-color invert",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c67041a-4bf2-328c-baab-757bd1ecd39e": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit('${1:updateValue}', ${2:payload});\n\t}\n}",
      "doc": "vuex action",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Action",
      "matches": {
        "vaction": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "5c76fdbb-73e0-3d31-85b2-4b610ac8a7c7": {
      "content": "DEFINE OUTPUT PARAMETER ${1:ParamName} AS ${0:ParamType}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "output": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c7854e8-fb6d-3bfe-8950-fa785d970c1a": {
      "content": "else:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c7e185d-a31e-38db-9682-35943c344b42": {
      "content": "{% exit ${1} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig exit",
      "matches": {
        "exit": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c81d943-7a75-3164-9f52-ced6bef5869a": {
      "content": "trace(${1:\"$0\"});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5c82c4de-fb5d-3150-9c49-8215405c0fb2": {
      "content": "$this->db->delete(\"${1:table}\", \"${2:where}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-delete": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c8c53ab-6231-33d0-bdc5-24c715c88a8d": {
      "content": "_.size(${collection})",
      "doc": "_.size([1, 2, 3]);\n// => 3\n\n_.size({ 'a': 1, 'b': 2 });\n// => 2\n\n_.size('pebbles');\n// => 7\n\nGets the size of `collection` by returning its length for array-like\nvalues or the number of own enumerable string keyed properties for objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-size",
      "matches": {
        "lodash size": true
      },
      "source": "javascript/lodash"
    },
    "5c8dc004-4dd8-3300-9eaa-c9d594c46a67": {
      "content": "text-shadow: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5c9426f3-42a1-3666-9d4b-c585964cf793": {
      "content": "text-emphasis: accent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ca77595-1910-3eb3-8729-b04741ce4e9f": {
      "content": "library(cluster)\nclara(${1:xData}, k = ${2:k}, metric = ${3:metric}, stand = ${4:stand}, samples = ${5:samples})",
      "doc": "Cluster data into k clusters (library: cluster)",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Clustering",
      "matches": {
        "clara": true
      },
      "source": "vscode-R/snippets"
    },
    "5cae05fd-2d3c-3ac4-80d1-19f33b56d38d": {
      "content": "border-left-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5caee582-e439-32b9-9c85-ae03aae26fd4": {
      "content": "#!/usr/bin/env sh\nset -eu",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cb19cba-9480-3500-903d-6b3d0fc19d4a": {
      "content": "View::renderTemplate('${1:part}', $${2:array});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_render_template": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cb52913-8df3-354f-b7f3-0a9d59f2968c": {
      "content": "place-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cc688ab-67dd-3b11-b1a3-13e49213b798": {
      "content": "unicode-bidi: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ub": true,
        "unicode-bidi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5ccadee7-c7e8-3d62-a76f-db97f6d1aecc": {
      "content": "echo CHtml::activeCheckBoxList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhacbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cd0fe5c-abb4-38eb-a002-bbb44366fceb": {
      "content": "overflow-x ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ce09a0b-85cc-3c3e-a447-1d6e1745e3c2": {
      "content": "${0:obj}.toArray()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toarr": true
      },
      "source": "snippets/coffee"
    },
    "5ce53bdd-2001-3a0f-9337-c3cb43bdbe9a": {
      "content": "setter! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w!": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cf1f215-26a3-3004-8ba8-0b23ac552ffb": {
      "content": "text-transform: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cf9fa98-8c06-3d74-aa18-077d02a6df46": {
      "content": "\\ **${1:Strong emphasis}**\\ ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**c": true
      },
      "source": "vim-snippets/snippets"
    },
    "5cf9fb4e-12d1-39a0-ad86-d16bab0b4a55": {
      "content": "elif ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "elif ...: ...",
      "matches": {
        "elif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5cff75d1-9c5f-3ed7-9fa7-0f76fa959c0c": {
      "content": "string.min()",
      "doc": "string.min(limit: number | Ref, message?: string | function): Schema\n\nSet a minimum length limit for the string value. The ${min} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-min",
      "matches": {
        "yup string min": true
      },
      "source": "javascript/yup"
    },
    "5d02c80f-62fe-311f-a94c-aceec7dd63aa": {
      "content": "it { should respond_to :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isres": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d076941-389a-3780-849e-6f35ee8cfe23": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d09219e-ea28-35c4-a703-1a2a66a75ed4": {
      "content": "{% elsif ${1:condition} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elsif": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d16e5e5-feb1-319b-88c2-2cdd60396992": {
      "content": "$this->redirect($this->generateUrl('$1', $2));",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 redirect",
      "matches": {
        "redir": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5d272524-ca77-3773-9b35-02e4a7c0a657": {
      "content": "Yii::app()->clientScript->registerScriptFile('${1:scriptUrl}', CClientScript::POS_${0:END});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregsf": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d28781c-a2d0-3909-a518-21cb5b45f612": {
      "content": "case ${1} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "case .. => ..",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d29539c-2f54-3c78-a968-64061cf44148": {
      "content": "max-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d297a36-e8a1-3c04-a26d-542a2bd50557": {
      "content": "margin-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d2a7d22-5803-3a79-a0bd-5d2af6d8eaae": {
      "content": "abstract ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ab": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d2ee6a0-ca78-332a-9ccc-d745208b8be6": {
      "content": "list-style-type circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d324347-cc75-3d23-906c-eb1331b7f69c": {
      "content": "expect { ${1:object} }.to raise_error ${2:StandardError}, /${0:message_regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "experr": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d3426a7-ac68-3f0a-a71b-fbfadcb9cfda": {
      "content": "border-top-right-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d3aace8-2319-3d88-a6c1-bbedf21fa866": {
      "content": "place-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d3b444d-3ea3-38df-8003-a4d798894ad6": {
      "content": "Dir.glob(${1:'**/*'}) do |fname|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glob": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d4cd8bf-bfd7-3135-a5e3-3ef62a021239": {
      "content": "text-emphasis after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d54efdb-1430-310e-b9a5-d80fc8a1752c": {
      "content": "${1:obj}.after('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "after": true
      },
      "source": "snippets/javascript"
    },
    "5d57f348-9cc6-31ba-9c6e-ec4ceeabc535": {
      "content": "point(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "point": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d69a520-7450-3ce7-bb18-aa4afd27d783": {
      "content": "render inline:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :inline",
      "matches": {
        "ri": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d6be1a6-6460-3c1a-afa9-b171320780df": {
      "content": "java.net.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d6d9b7f-0311-3f7a-8188-2266d9eda794": {
      "content": "$this->shouldNotBe$1();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotBeXYZ()",
      "matches": {
        "snbstate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5d6f767f-beca-39e0-bb25-e9e744548be5": {
      "content": "<%# ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%# %>",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d70f3d0-33bf-3c4e-89e6-11bb6f5b3337": {
      "content": "fun ${1} => ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d774ffe-1d2a-3cf0-9fc7-18e10d46522d": {
      "content": "border-top-right-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d78c2cf-1cd7-384e-a6c8-1c242844c2b0": {
      "content": "text-decoration line-through",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d799e74-361c-3788-acb0-74216e70478d": {
      "content": "switch(${1}){\n\tcase ${2}:\n\t\t${0}\n\tbreak;\n\tdefault:\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d7d57b8-4fda-3203-8725-320aea4adc93": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "5d825ab2-b446-3de4-9607-51267b0a6ffa": {
      "content": "justify-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d83d8b2-ac96-3fec-bcc6-cb507ec825ec": {
      "content": "text-transform uppercase",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d83f551-c6fe-3eef-86ea-c5d953afc89b": {
      "content": "background-attachment: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d87e8b8-5bf7-32ae-839a-00c821d335c8": {
      "content": "func main() {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main() { ... }",
      "matches": {
        "main": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5d8974de-928b-37ec-9b55-ec8de260c6d2": {
      "content": "white-space: ${1:normal/pre/nowrap};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "white-space:  normal:pre:nowrap (white)",
      "matches": {
        "white": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5d8c0b16-d2a2-3a37-949b-ed0abc1190b0": {
      "content": "grid-template: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d8c1cd3-7d07-3201-89cf-a79e38f58a7e": {
      "content": "\\part{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\part": true,
        "part \\part{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d8dcd60-069f-376c-bd07-22adb8258044": {
      "content": "display ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d9091af-c5d2-38eb-ad29-16504691318c": {
      "content": "if (${1:#:condition}) {\n    ${2:TARGET}\n} else {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifel": true,
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5d90930c-0fac-3aa0-b11b-3364e28318c5": {
      "content": "border-left-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5d9f0e68-fcae-311b-be4f-29951000b2c2": {
      "content": "_.upperFirst(${string})",
      "doc": "_.upperFirst('fred');\n// => 'Fred'\n\n_.upperFirst('FRED');\n// => 'FRED'\n\nConverts the first character of `string` to upper case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-upperfirst",
      "matches": {
        "lodash upperfirst": true
      },
      "source": "javascript/lodash"
    },
    "5da4aba2-6238-3bf4-be7e-60f2510dcc58": {
      "content": "display table-caption",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "5da59722-7b78-3e3f-a012-d9f15bb9cc92": {
      "content": "border-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "5daa676a-2322-300e-9e9b-24181d259f51": {
      "content": "<ol>\n\t<li>${1}</li>\n\tli+${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5db058f5-a810-3641-9845-58e721722fd6": {
      "content": "border-bottom-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbc": true,
        "border-bottom-color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5db0aabe-6365-34c9-bb01-94d7a3d6e035": {
      "content": "cursor: text",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "5db3d8af-9bd6-3a81-9dcf-6d2fbf2a46d7": {
      "content": "@proceedings{${1:LABEL},\n    title = {${2}},\n    year = {${3}},\n    memo = {editor, publisher, organization, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@proceedings": true,
        "proceedings": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5db87337-8c3d-3797-8570-6efa2f7a298e": {
      "content": "border-style: double;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      },
      "source": "vim-snippets/snippets"
    },
    "5dc57cc7-3cca-33f4-8aa0-432da946883c": {
      "content": "letter-spacing: $1px;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "letter-spacing:   length-px (letter)",
      "matches": {
        "letter": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5dc7e114-ccda-3e4c-afc8-6b6656caf4d9": {
      "content": "cursor pointer",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "5dc8da88-10a6-341d-ac40-efd95378a6fa": {
      "content": "white-space: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "5dccbb24-1f74-3154-afee-980c39b3ff90": {
      "content": "for ${1:#:key}, ${2:#:value} of ${3:#:object}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5dcced37-010e-3aec-a526-071a49b2da98": {
      "content": "join:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5dceb67a-5394-3cb7-9345-44636aad4d0f": {
      "content": "public string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+-": true
      },
      "source": "vim-snippets/snippets"
    },
    "5dd24319-b752-3a88-bf09-e99cadc677dc": {
      "content": "flex-direction: column-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:cr": true
      },
      "source": "vim-snippets/snippets"
    },
    "5dd4f19b-9afd-35e5-9ef2-6865c5e406e2": {
      "content": ":first-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ddc3326-55c6-3d0a-b23e-9ca99f7e899e": {
      "content": "${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nextu": true
      },
      "source": "snippets/coffee"
    },
    "5dde9e17-fb6f-3e9a-9bd9-89989b55103c": {
      "content": "align-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "5de37b7d-c974-37c3-b5e8-e13b17628394": {
      "content": "${1:obj}.ajaxError(function (${1:e}, xhr, settings, thrownError) {\n\t${2:// error callback}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxerror": true
      },
      "source": "snippets/javascript"
    },
    "5dfac341-cc3b-3a95-a2e2-e6245c0718d8": {
      "content": "date:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5e0bb346-a8e1-372b-97ed-0add61866f99": {
      "content": "func Test${1:name}(t *testing.T) {\n\ttests := []struct {\n\t\tname string\n\t}{\n\t\t{\n\t\t\tname: \"${2:test name}\",\n\t\t},\n\t}\n\tfor _, test := range tests {\n\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\t${0:${VISUAL}}\n\t\t})\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "table test function",
      "matches": {
        "testt": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e0e2f4d-5791-3aa1-a77e-d988dcd0ee0d": {
      "content": "import ${1} from '${2:$1}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import xyz from 'xyz'",
      "matches": {
        "im": true
      },
      "source": "snippets/javascript"
    },
    "5e14ffdb-13f5-38ee-a32a-d1f6ab9152d9": {
      "content": "(${1:#:Args}) => { ${0:#:TARGET} }",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "() => {}",
      "matches": {
        "arrow-function": true,
        "function-arrow": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5e18a527-3779-3b25-a224-47502118d783": {
      "content": "<router-view>$1</router-view>$0",
      "doc": "router-view element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerview",
      "matches": {
        "routerview": true,
        "vue routerview": true
      },
      "source": "javascript/vue"
    },
    "5e1afe9e-291f-3711-a9a5-736610335b4c": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${2:Your}Interceptor implements HttpInterceptor {\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn next.handle(req);\n\t}\n}",
      "doc": "Empty Angular HttpInterceptor for HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor - Empty",
      "matches": {
        "a-http-interceptor": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "5e1d94f7-02c8-3044-9f6e-4dd7f488d9b8": {
      "content": "content: counter(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e2223c5-6085-3c36-b505-5bb006956593": {
      "content": "_.toUpper(${string})",
      "doc": "_.toUpper('--foo-bar--');\n// => '--FOO-BAR--'\n\n_.toUpper('fooBar');\n// => 'FOOBAR'\n\n_.toUpper('__foo_bar__');\n// => '__FOO_BAR__'\n\nConverts `string`, as a whole, to upper case just like\n[String#toUpperCase](https://mdn.io/toUpperCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toupper",
      "matches": {
        "lodash toupper": true
      },
      "source": "javascript/lodash"
    },
    "5e223a93-ce07-3ae4-94af-ff8b728626f9": {
      "content": "java.math.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.m": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5e240f95-a83e-3b1f-8ac2-6267b377a1f4": {
      "content": "${1:callbacks}.remove(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Crem": true
      },
      "source": "snippets/coffee"
    },
    "5e2a48af-266a-3f1a-97d5-765d721e89a9": {
      "content": "text-align-last right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e2b44d5-9750-3348-8966-9ca6db381ccd": {
      "content": "${1:obj}.parents('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parents": true
      },
      "source": "snippets/coffee"
    },
    "5e2e6600-1ea2-33f7-b9a6-078ed7818197": {
      "content": "<li><a href=\"${2:#}\">${1}</a></li>\nlia+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia+": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e2f8fc6-bcd4-337d-954a-d2d34bec9cc3": {
      "content": "\"${1:link text}\":${0:url}",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e403016-6784-3110-9785-38528394bd21": {
      "content": "_.isDate(${value})",
      "doc": "_.isDate(new Date);\n// => true\n\n_.isDate('Mon April 23 2012');\n// => false\n\nChecks if `value` is classified as a `Date` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isdate",
      "matches": {
        "lodash isdate": true
      },
      "source": "javascript/lodash"
    },
    "5e45945a-f3fe-37d2-838b-313291fafe0b": {
      "content": "if ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e4a7860-9391-37d9-bfb0-543299aab9fc": {
      "content": "delegate :${1:methods}, to: :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "delegate .. to",
      "matches": {
        "dele": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e569a4f-3c96-3ea2-b832-6b46fca1d5af": {
      "content": "add:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e5741f7-079c-38af-bf3e-6fd85a3e6bbb": {
      "content": "{\n\t\"type\": \"image_picker\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_image_picker": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e5a3d2e-83f4-3ac9-9cd1-ae47988272e2": {
      "content": "pub fn new(${1}) -> ${2:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub fn new() {}",
      "matches": {
        "pubnew": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5e721d8c-15c2-32cc-8702-bec8bf0a3fa7": {
      "content": "[${0:foo} autorelease];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arel": true
      },
      "source": "vim-snippets/snippets"
    },
    "5e723703-c6a3-315a-bda2-18920e94da0d": {
      "content": "${1:obj}.on '${2:events}', '${3:selector expression}', (${4:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      },
      "source": "snippets/coffee"
    },
    "5e7c7559-d1db-3d17-a167-89160e27b0ad": {
      "content": "if err != nil {\n\tpanic(${1})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error panic",
      "matches": {
        "errp": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5e81d6c0-982b-3ca7-9380-fc6940dd48d8": {
      "content": "<< ${1:EOF}\n\t${0:#:TARGET}\n$1",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h <<": true,
        "heredoc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5e820a96-5752-3e23-8c83-49daf254c5fe": {
      "content": "in\n{\n\tassert(${1:/*condition*/}, \"${2:error message}\");\n\t$3\n}\nbody",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "in contract (in)",
      "matches": {
        "in": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5e8c39e5-e8e5-300d-91e8-213619c68482": {
      "content": "daply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ea0cbec-f3f4-322c-80c0-1ef8e5fb1e5c": {
      "content": "page-break-before always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ea21172-27d1-3f23-a509-d1c80b477a8e": {
      "content": "- (${1:id})${2:method}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "5eb3dffe-ea62-3ae3-8128-e3847cfa436e": {
      "content": "div(ng-repeat='${1} in ${2}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      },
      "source": "vim-snippets/snippets"
    },
    "5eb79d33-25a6-336b-b3f1-e2b99d07b9d5": {
      "content": "switch ${1:var} {\ncase ${2:value1}:\n\t${3}\ncase ${4:value2}:\n\t${5}\ndefault:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ebf0594-9f17-34e8-8cb1-c7a58e6a1316": {
      "content": "_.toLength(${value})",
      "doc": "_.toLength(3.2);\n// => 3\n\n_.toLength(Number.MIN_VALUE);\n// => 0\n\n_.toLength(Infinity);\n// => 4294967295\n\n_.toLength('3.2');\n// => 3\n\nConverts `value` to an integer suitable for use as the length of an\narray-like object.\n\n**Note:** This method is based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tolength",
      "matches": {
        "lodash tolength": true
      },
      "source": "javascript/lodash"
    },
    "5ec00272-8366-3bb6-8266-8049820bab21": {
      "content": "functor (${1:Arg} : ${2:ARG}) -> ${3:(* BODY *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "functor signature or anonymous functor",
      "matches": {
        "sigf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5ec41178-c465-373b-a374-5c0c941d1d68": {
      "content": "import React, { PureComponent } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { PureComponent }",
      "matches": {
        "imrpc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "5ec548af-a04c-3bde-aea5-cc4f6cb87ae3": {
      "content": "$('${1:selector}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jj": true
      },
      "source": "snippets/coffee"
    },
    "5ec89651-1ede-3b67-b170-be745eb90cce": {
      "content": "case ${1}:\n\t${0}\n\tbreak",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ed1b503-22e0-3c7d-be75-ca32971f283f": {
      "content": "| asset_img_url: '${1:medium}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asset_img_url": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ed34fb4-2991-37a5-9721-7ad22ab80445": {
      "content": "import { useStaticQuery, graphql } from \"gatsby\"",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-usestaticquery-import",
      "matches": {
        "gatsby import usestaticquery": true
      },
      "source": "javascript/gatsby"
    },
    "5ed7cf23-ace0-3b6d-a085-9ce1ab23a604": {
      "content": "font-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ee021bd-4032-3a34-a776-13f6cfda276f": {
      "content": "border-style wave",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ee54ed3-3598-38a7-bbb8-48279df16bf3": {
      "content": "#region $0",
      "doc": "Folding Region Start",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      },
      "source": "vscode-R/snippets"
    },
    "5ee7fc15-9eb1-32b8-856a-f992edbf4037": {
      "content": "componentWillReceiveProps(nextProps) {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillreceiveprops",
      "matches": {
        "cwr": true,
        "react componentwillreceiveprops": true
      },
      "source": "javascript/react"
    },
    "5eed0e10-ac0c-3717-b02b-ec1fb65c851c": {
      "content": "~this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dtor": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ef1836d-c39a-363d-9f4b-1b004bada2f4": {
      "content": "padding: ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ef5f0af-b0ff-3734-916b-b4114aa45726": {
      "content": "#!/usr/bin/env lua\n$1",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "5ef8d312-6054-319b-9258-971a255d42b7": {
      "content": "for ${1:item} <- ${2:items}, into: ${3} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f01c4c4-4e74-319b-a5ce-4fa20e8777b6": {
      "content": "overflow visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f0a2e27-bc74-3c22-9220-5b913c82a17f": {
      "content": "form_submit(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_submit": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f16a2a0-ef7d-389d-b8c0-d8c72d4a530d": {
      "content": "{% tablerow ${1:#:var} in ${2:#:list} %}\n  ${0:TARGET}\n{% endtablerow %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "tablerow in endtablerow",
      "matches": {
        "tablerow": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f1e8ab0-4514-389f-bc91-026e7ad62648": {
      "content": "array.ensure()",
      "doc": "array.ensure(): Schema\n\nEnsures that the value is an array, by setting the default to [] and transforming null and undefined\nvalues to an empty array as well. Any non-empty, non-array value will be wrapped in an array.array()\n  .ensure()\n  .cast(null); // => []\narray()\n  .ensure()\n  .cast(1); // => [1]\narray()\n  .ensure()\n  .cast([1]); // => [1]\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-ensure",
      "matches": {
        "yup array ensure": true
      },
      "source": "javascript/yup"
    },
    "5f235dbe-af07-3a2c-9999-83391743d15b": {
      "content": "<%= error_tag ${1:f}, :${2:field} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "error_tag",
      "matches": {
        "et": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f263dee-242a-35e6-9932-d69600eaac3c": {
      "content": "until ${1:#:condition} ; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f2b4f0c-733c-3f16-a770-cb1d798e01f4": {
      "content": "for all ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for all",
      "matches": {
        "fora": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f2de6c4-8e8a-351e-bda6-415b571e24da": {
      "content": "private string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms-": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f32b7a9-6ff2-324c-9646-a50dcb1a90b7": {
      "content": "var $1 = new sap.m.Input({\n\tvalue :$2,\n\twidth : $3,\n\tenabled :$4,\n\tvisible :$5,\n\tvalueState :$6,\n\tname : $7,\n\tplaceholder : $8,\n\teditable : $9,\n\ttype : $10,\n\tmaxLength :$11,\n\tvalueStateText :$12,\n\tshowValueStateMessage :$13,\n\tdateFormat :$14,\n\tshowValueHelp :$15,\n\tshowSuggestion :$16,\n\tvalueHelpOnly :$17,\n\tfilterSuggests :$18,\n\tmaxSuggestionWidth :$19,\n\tstartSuggestion : $20,\n\tshowTableSuggestionValueHelp : $21,\n\tdescription : $22,\n\tfieldWidth : $23,\n\tvalueLiveUpdate :$24,\n\tsuggestionItems  :[$25],\n\tsuggestionColumns : [$26],\n\tsuggestionRows : [$27],\n\tliveChange : $28,\n\tvalueHelpRequest :$29,\n\tsuggest : $30,\n\tsuggestionItemSelected : $31\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapminput": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f35b3e6-296f-32f2-b12b-ceb7e404cc40": {
      "content": "case ${1:object}\nwhen ${2:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f392c8b-92c7-3c70-9566-486509c4f8d6": {
      "content": "Register Keyword To Run On Failure    ${1:${kw}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Register Keyword To Run On Failure",
      "matches": {
        "rktrof": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5f3ebff0-c0bb-387b-b76a-13072e4720f9": {
      "content": "find_all { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fina": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f416339-09ed-3337-9534-3567199ae0e5": {
      "content": "let rec ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnr": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f41a57b-7553-3248-a4b7-002b93ddd303": {
      "content": "_Static_assert(${1:#:condition}, ${2:#:message});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_Static_assert": true,
        "_static_assert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f427c4e-acbb-3588-8cfc-328743001ad7": {
      "content": "_.sortedLastIndexOf(${array}, ${value})",
      "doc": "_.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n// => 3\n\nThis method is like `_.lastIndexOf` except that it performs a binary\nsearch on a sorted `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindexof",
      "matches": {
        "lodash sortedlastindexof": true
      },
      "source": "javascript/lodash"
    },
    "5f44cc19-00d6-3e37-8c2e-cb03edd38cbd": {
      "content": "post {\n\tunstable {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f4681f0-ac48-3388-93bf-e322260d9576": {
      "content": "<div [ngSwitch]=\"${1:conditionExpression}\">\n\t<div *ngSwitchCase=\"${2:expression}\">${3:output}</div>\n\t<div *ngSwitchDefault>${4:output2}</div>\n</div>",
      "doc": "Angular ngSwitch",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngswitch",
      "matches": {
        "a-ngswitch": true,
        "angular ng switch": true
      },
      "source": "javascript/angular"
    },
    "5f4d4a58-7a18-3578-be25-0b4266edbce4": {
      "content": "$${1:mock} = $this->createMock(${2:SomeClass}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$mock = $this->createMock(SomeClass::class);",
      "matches": {
        "mock": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f5354b5-d9bf-3c60-be9d-5b7983b1f517": {
      "content": "{\n\t\"name\": \"Launch Angular\",\n\t\"type\": \"${1:chrome}\",\n\t\"request\": \"launch\",\n\t\"preLaunchTask\": \"${2:npm: start}\",\n\t\"url\": \"http://localhost:${3:4200}/\",\n\t\"webRoot\": \"${4:\\${workspaceFolder\\}}\"\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create launch config for Chrome",
      "matches": {
        "a-launch-chrome": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "5f54109c-69f5-381c-a2b2-85389475c5c8": {
      "content": "require('getopt', quietly = TRUE)\nopt_spec <- matrix(c(\n\t\t\t\t'help',     'h', 0, \"logical\", \t\"Getting help\",\n\t\t\t\t'file',     'f', 1, \"character\",\"File to process\"\n                ), ncol = 5, byrow = TRUE)\nopt <- getopt(spec = opt_spec)\nif ( !is.null(opt$help) || is.null(commandArgs()) )   {\n    cat(getopt(spec = opt_spec, usage = TRUE, command = \"yourCmd\"))\n    q(status=0)\n}\n# some inital value\nif ( is.null(opt$???) )    { opt$??? <- ??? }",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f55a82e-6a54-3d24-92d7-12262ef01e1b": {
      "content": "- (${1:#:id})${2:#:thing};\n- (void)set${2}:(${1})aValue;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iobj": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f5aa8e8-95bb-3e68-81fd-cb2507258f7e": {
      "content": "text-justify inter-ideograph",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f5f1c37-99ac-3971-aacd-46b962070e33": {
      "content": "\\begin{verbatim}\n\t${1:TARGET}\n\\end{verbatim}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verbatim} verb \\verbatim": true,
        "verbatim": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f650fbb-24cb-3fbc-8b39-ce219ea96a8c": {
      "content": "{% from \"${1}\" import ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig from",
      "matches": {
        "from": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f660a8b-878c-3007-ae9b-47a05e4b0463": {
      "content": "\\begin{description}\n\t\\item[${1}] ${0}\n\\end{description}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{description} \\description desc": true,
        "description": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "5f6937ee-79fc-33c0-8edb-fab82ebc5754": {
      "content": "// http://snipplr.com/view.php?codeview&id=1986 // modified\nclass CSVIterator implements Iterator\n{\n\tprivate $f;\n\tprivate $curr;\n\tprivate $rowCounter;\n\t /* opts keys:\n\t\t* row_size\n\t\t* escape\n\t\t* enclosure\n\t\t* delimiter\n\t\t*/\n\tpublic function __construct( $file_or_handle, $opts = [4096, ','] )\n\t{\n\t\t$d = function($n) use(&$opts){ return isset($opts[$n]) ? $opts[$n] : false; };\n\t\t$this->combine = $d('combine');\n\t\t$this->headers = $d('headers');\n\t\t$this->headerCheckFunction = $d('header_check_function');\n\t\t$this->f =\n\t\t\tis_string($file_or_handle)\n\t\t\t? fopen( $file_or_handle, 'r' )\n\t\t\t: $file_or_handle;\n\t\tif (!$this->f) throw new Exception('bad file descriptor');\n\t\t$this->fgetcsv_args = [\n\t\t\t\t$this->f,\n\t\t\t\tisset($opts['row_size']) ? $opts['row_size'] : 4096,\n\t\t\t\tisset($opts['delimiter']) ? $opts['delimiter'] : ',',\n\t\t\t\tisset($opts['enclosure']) ? $opts['enclosure'] : '\"',\n\t\t\t\tisset($opts['escape']) ? $opts['escape'] : '\\\\',\n\t\t];\n\t\t$this->start();\n\t}\n\tprotected function readRow(){\n\t\t$this->curr = call_user_func_array('fgetcsv', $this->fgetcsv_args );\n\t\t$this->rowCounter++;\n\t\tif ($this->rowCounter == 1){\n\t\t\t$this->processHeader();\n\t\t} elseif ($this->curr) {\n\t\t\t$this->processRow();\n\t\t}\n\t}\n\tpublic function processHeader(){\n\t\tif ($this->headers || $this->combine){\n\t\t\t$this->header = $this->curr;\n\t\t\tif ($this->headerCheckFunction){\n\t\t\t\t$f = $this->headerCheckFunction;\n\t\t\t\t$f($this->header);\n\t\t\t}\n\t\t\t$this->readRow();\n\t\t}\n\t}\n\tpublic function processRow(){\n\t\tif ($this->combine)\n\t\t\t$this->curr = array_combine($this->header, $this->curr);\n\t}\n\tpublic function start(){\n\t\t$this->rowCounter = 0;\n\t\trewind( $this->f );\n\t\t$this->readRow();\n\t}\n\tpublic function rewind()\n\t{\n\t\t$this->start();\n\t}\n\tpublic function current()\n\t{\n\t\t$curr = $this->curr;\n\t\t$this->readRow();\n\t\treturn $curr;\n\t}\n\tpublic function key()\n\t{\n\t\treturn $this->rowCounter;\n\t}\n\tpublic function next()\n\t{\n\t\treturn $this->curr;\n\t}\n\tpublic function valid(){\n\t\tif( !$this->next() )\n\t\t{\n\t\t\tfclose( $this->f );\n\t\t\treturn FALSE;\n\t\t}\n\t\treturn TRUE;\n\t}\n} // end class",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CSVIterator": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f750388-8923-395b-8c07-e488414be398": {
      "content": "| abs",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abs": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f76ff0c-c8e3-304e-9608-59255089612a": {
      "content": "refute_kind_of ${1:UnexpectedKind}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfko": true
      },
      "source": "vim-snippets/snippets"
    },
    "5f8a949f-9beb-3940-b6ee-74c8986dd4f5": {
      "content": "props.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "props",
      "matches": {
        "pp": true
      },
      "source": "snippets/javascript"
    },
    "5f963a39-ee07-371b-b854-b54eec3e8494": {
      "content": "${1} := ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "v := value",
      "matches": {
        ":": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "5f9c1032-e8ec-3e3e-a30d-d93f48b14609": {
      "content": "const component = new ${1:App}({\n\ttarget: ${2|target,document.body|},\n\tprops: ${3:props},\n\tanchor: ${4:anchor},\n\thydrate: ${5|false,true|},\n\tintro: ${5|false,true|}\n})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-create-component",
      "matches": {
        "svcreate-component": true,
        "svelte create component": true
      },
      "source": "javascript/svelte"
    },
    "5fa236d0-4ebb-335b-a9ff-85016e4de8ec": {
      "content": "{% ifequal $1 $2 %}\n\t$3\n{% endifequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5fa9e8a4-301d-36f1-88bc-d685f38718d7": {
      "content": "list-style: ${1:none/disc/circle/square/decimal/zero} ${2:inside/outside} url($3);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style: type position image (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5faf7911-2d78-3eb5-84c8-1c5d1cc1b160": {
      "content": "[NSGraphicsContext saveGraphicsState];\n$0\n[NSGraphicsContext restoreGraphicsState];\n",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Save and Restore Graphics Context (gsave)",
      "matches": {
        "gsave": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "5fb9c21f-c772-3616-bb50-fb3ea06389d7": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fc00760-1176-30c0-8292-2f9dc7985780": {
      "content": "each { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ea": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fc767f2-4132-3914-90fe-a86028b3833e": {
      "content": "System.out.println(Arrays.toString(${0}));",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printlna": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fc7e83e-f076-30b2-974b-c6631814cab7": {
      "content": "_.methodOf(${object}, ${args})",
      "doc": "var array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]\n\nThe opposite of `_.method`; this method creates a function that invokes\nthe method at a given path of `object`. Any additional arguments are\nprovided to the invoked method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-methodof",
      "matches": {
        "lodash methodof": true
      },
      "source": "javascript/lodash"
    },
    "5fd144c4-ce25-3f07-996d-d47405ae9261": {
      "content": "font: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fd79718-2374-37c0-991a-b198b61f217b": {
      "content": "find!(${1:p})($2:xs);\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fd942bb-f81c-3040-8611-91e40421abdf": {
      "content": "case ${1:value}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fd98434-dfca-3d58-8aff-7dad422d31be": {
      "content": "margin ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fdb05dd-9eb2-32d7-a320-99b86259843b": {
      "content": "display: flex;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "5fec0bed-e144-356d-849c-689f265ae2e1": {
      "content": "$scope.$on '${1:eventName}', (event, ${2:args}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$on": true
      },
      "source": "snippets/coffee"
    },
    "5ffbbe82-85c4-3c74-933b-6b2f3b1c71d2": {
      "content": "<%= options_from_collection_for_select ${1:collection}, ${2:value_method}, ${3:text_method}, ${0:selected_value} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ofcfs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6000d96e-b85a-3310-9679-989d05423de0": {
      "content": "${1:callbacks}.disable()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cdis": true
      },
      "source": "snippets/coffee"
    },
    "60022e2b-c0ba-36b2-8787-f798007a336f": {
      "content": "${1:obj}.blur (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blur": true
      },
      "source": "snippets/coffee"
    },
    "60028241-5ea2-34ad-b086-87ed9afc95cd": {
      "content": "overflow-x: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "6008f82c-2598-3f2e-b5d2-015058b706ff": {
      "content": "console.warn(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.warn",
      "matches": {
        "cw": true
      },
      "source": "snippets/javascript"
    },
    "601ea3b7-ee1b-39d1-bccd-457e3cc44ebd": {
      "content": "display: table",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "60325a1d-c03b-3f37-87e2-9ba7fd470853": {
      "content": "@Before\nstatic void ${1:intercept}(${2:args}) { ${0} }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      },
      "source": "vim-snippets/snippets"
    },
    "60360333-94d9-34a3-af85-2bbf5226b055": {
      "content": "$this->shouldImplement($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldImplement('Type')",
      "matches": {
        "simplement": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "60383595-4536-3749-bec8-bb0dd3e04147": {
      "content": "<c:import url=\"${1}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cimport": true
      },
      "source": "vim-snippets/snippets"
    },
    "603b125a-1aea-3504-9849-ad0205341ba5": {
      "content": "define('${1:VARIABLE_NAME}', ${2:'definition'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "define('VARIABLE_NAME', 'definition')",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "603c6e92-67d5-3e5e-bb97-6e341a06a52c": {
      "content": "catch {\n    ${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "catch {}",
      "matches": {
        "catch_n": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "60433350-219b-3f35-8d63-e8834524f11a": {
      "content": "width: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "604d249e-dac2-3859-b3dd-14a39afe05b0": {
      "content": "getURL(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gu": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "605d4165-1b65-3ced-ab4a-677a4e5fa29f": {
      "content": "align-self: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "60602a64-0ff7-3c0d-a540-d3a06931e0a5": {
      "content": ".. danger::\n\t${0:ah!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dan:": true
      },
      "source": "vim-snippets/snippets"
    },
    "60698a97-6b57-399b-bb0c-6f3f63b8026c": {
      "content": "font-effect: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      },
      "source": "vim-snippets/snippets"
    },
    "606a3b6e-9c7c-3b13-b7a3-d21251b1e0b9": {
      "content": "<?php\n\tnamespace Models;\n\tuse Core\\Model;\n\tclass ${1:class_name} extends Model\n\t{\n\t\tfunction __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_model": true
      },
      "source": "vim-snippets/snippets"
    },
    "606cfb2c-8c07-3d65-b159-f131896de4d4": {
      "content": "text-height: max-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "607ae77c-49f9-3ac3-bd87-0f0d9f114baf": {
      "content": "args <- commandArgs(TRUE)\nif (length(args) == 0)\n    stop(\"Please give ${1:}!\")\nif (!all(file.exists(args)))\n     stop(\"Couln't find input files!\")",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmdarg": true
      },
      "source": "vim-snippets/snippets"
    },
    "607aea2f-ccf2-3bd0-b930-caf73f98e739": {
      "content": "class $1 extends StatefulWidget {\n\t@override\n\t_$1State createState() => _$1State();\n}\nclass _$1State extends State<$1> {\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stful": true
      },
      "source": "vim-snippets/snippets"
    },
    "608bfa87-78ca-309f-a4cb-7ace02533fc4": {
      "content": "binary(${1:value}${2:, }${0:digits});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binary": true
      },
      "source": "vim-snippets/snippets"
    },
    "608ea293-5792-3cfc-be0b-708bb415e626": {
      "content": "$$${1:#:expression}$$${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "$$ expression $$",
      "matches": {
        "$$": true,
        "mathenva": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "60956c47-7f49-3648-9ffd-5090a8a250d1": {
      "content": "import Vue from 'vue';\nimport ${1:HelloWorld} from './components/${1:HelloWorld}';\n\ndescribe('${1:HelloWorld}.vue', () => {\n\tit('${2:should render correct contents}', () => {\n\t\tconst Constructor = Vue.extend(${1:HelloWorld});\n\t\tconst vm = new Constructor().$mount();\n\t\texpect(vm.$el.querySelector('.hello h1').textContent)\n\t\t\t.to.equal(${3:'Welcome to Your Vue.js App'});\n\t});\n});",
      "doc": "unit test component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Unit Test",
      "matches": {
        "vtest": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "609941a1-e581-3037-a3d2-e6edc480c197": {
      "content": "updated () {\n\t${0};\n},",
      "doc": "updated lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-updated",
      "matches": {
        "vue lifecycle updated": true,
        "vupdated": true
      },
      "source": "javascript/vue"
    },
    "60a3dbc8-887b-3a94-9174-f3cf949899e9": {
      "content": "pragma(${1})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prag": true
      },
      "source": "vim-snippets/snippets"
    },
    "60a74d3f-f25b-3809-a13f-1ec13d959e12": {
      "content": "{% blocktrans %}\n    ${VISUAL}\n{% endblocktrans %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blocktrans": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "60ae3cde-4092-3476-97c6-cf5b65731a64": {
      "content": "${1:s:V}.load('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "s:V.load('...')",
      "matches": {
        "vital_load_without_call": true
      },
      "source": "neosnippets/vim"
    },
    "60af2010-a4e7-3160-9579-4059c85e7810": {
      "content": "class=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "60b32946-05ba-3822-ae90-c069700e67b2": {
      "content": "validates_uniqueness_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:must be unique}\", if: proc { |obj| ${6:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of if (vuif)",
      "matches": {
        "vuif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "60b5cb2f-534b-3f53-a293-89beea9c1b0f": {
      "content": "Hash.new { |${1:hash}, ${2:key}| $1[$2] = ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hash": true
      },
      "source": "vim-snippets/snippets"
    },
    "60bbbb46-a3e0-3280-b483-b155116cc3af": {
      "content": "JSON.stringify(${1:TARGET}, null, 2);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "60cbc72e-8d3e-3bd3-9a38-547ed2c7db63": {
      "content": "EntityDataModule.forRoot(${1:entityConfig}),",
      "doc": "Import NgRx Entity Data Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-import-entity-data-module",
      "matches": {
        "a-ngrx-data-entity-data-module-import": true,
        "angular ng rx data import entity module": true
      },
      "source": "javascript/angular"
    },
    "60d2f784-019d-3c18-b23a-dddf56ca3bde": {
      "content": "font-family ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "60d54da9-8d33-3d5e-924b-be06a8457871": {
      "content": "var ${1:function_name} = function $1(${2}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vf": true
      },
      "source": "snippets/javascript"
    },
    "60dfda59-308b-3210-8071-98c4537eff18": {
      "content": "'use strict';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "us": true
      },
      "source": "snippets/javascript"
    },
    "60e056f5-2f27-34d8-891c-7c9e200e2122": {
      "content": "const ${1:actionName} = (${2:arg}) => {\n\treturn {\n\t\ttype: ${3:VISUAL},\n\t\t$2\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "act": true
      },
      "source": "snippets/javascript"
    },
    "60e6a512-108a-34b3-85c4-fc24da484044": {
      "content": "/// ${1:description}\n///\n/// ${2:Params:  ${3:param} = ${4:param description}\n///\t\t\t $5}\n///\n/// ${6:Returns: ${7:return value}}\n///\n/// ${8:Throws:  $9Exception $10}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "function ddoc block (fdoc)",
      "matches": {
        "fdoc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "60f945b1-4df6-35fa-985b-66d6f5547401": {
      "content": "ifel ensuring(${1:a}==${0:b})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ensuring": true
      },
      "source": "vim-snippets/snippets"
    },
    "61084750-e729-3a61-963c-2faea19d707c": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\n\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Setup Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Setup Composition API with Typescript",
      "matches": {
        "vbase-3-ts-setup": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "61084dca-287a-321f-9281-04455569c13d": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Y index (2D)",
      "matches": {
        "ixy": true
      },
      "source": "vim-snippets/snippets"
    },
    "610b662c-67c5-3d35-b5ac-f3cbbb53bcd3": {
      "content": "${1:obj}.next('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "next": true
      },
      "source": "snippets/javascript"
    },
    "61102af3-4a7e-38dc-ae65-5e2b2818e16c": {
      "content": "this.setState({\n\t${1}: ${2}\n});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sst": true
      },
      "source": "snippets/javascript"
    },
    "611adc68-2b6b-3345-b733-91aef69d6ca9": {
      "content": "${1:public} ${2:void} ${3}(${4})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "611dbc3b-fb09-33c5-93e2-169e2505584c": {
      "content": "File.open('${1:path/to/file.dump}', 'wb') { |${2:file}| Marshal.dump(${3:obj}, $2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Md": true
      },
      "source": "vim-snippets/snippets"
    },
    "6124a445-4579-37d2-9009-52ce0c37198e": {
      "content": "(if (not ${1})\n\t(begin\n\t\t${2})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnb": true
      },
      "source": "vim-snippets/snippets"
    },
    "61331bdc-9619-34fd-a879-f41d20d27fc1": {
      "content": "function (${1:int x}) => ${2}${3:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "funl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6133ef52-e39c-306b-925a-1403edea7cac": {
      "content": "line-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      },
      "source": "vim-snippets/snippets"
    },
    "613777bc-f84e-3ded-8af6-50b0b3906d02": {
      "content": "{@value ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{value": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "613ea622-2ac0-30a4-bff1-9b7b0ba0ed2c": {
      "content": "${1:obj}.show '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showc": true
      },
      "source": "snippets/coffee"
    },
    "61446ffb-21ba-379f-b470-6c151ddc50ae": {
      "content": "{% if ${1:#:condition} %}\n  ${2:TARGET}\n{% else %}\n  ${3}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "if else endif",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6145b653-7d5d-3fb8-aedb-aa6d1dae6334": {
      "content": "begin\n\t${1:block}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "beg",
      "matches": {
        "beg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "614999f0-2171-3e40-a77d-538843668b09": {
      "content": "<header class=\"${1}\">\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header.": true
      },
      "source": "vim-snippets/snippets"
    },
    "614a3c8a-24e8-30f6-8078-8d53471616a8": {
      "content": "= ${1:Document Name}\n${2:Alice <alice@example.com>}\n${3:Revision line}\n:toc:\n:imagesdir: img/\n:homepage: https://www.example.com\n:icons: font\n:data-uri:\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Start a new document",
      "matches": {
        "doc": true,
        "title": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "614a7046-13f7-3e2e-b247-d389f23aab9e": {
      "content": "{{^${1:value}}}\n${0:${VISUAL}}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{^value}} ... {{/value}}",
      "matches": {
        "ifn": true
      },
      "source": "vim-snippets/snippets"
    },
    "614d8bc8-cd7a-3856-aa54-ebabbe60482f": {
      "content": "<xsl:apply-templates select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "plain",
      "matches": {
        "apply-templates": true
      },
      "source": "vim-snippets/snippets"
    },
    "615e359d-41e5-3853-829d-023ba6863c30": {
      "content": "mixin ${1:/*mixed_in*/} ${2:/*name*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "mixin (mixin)",
      "matches": {
        "mixin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "616201b8-4eff-3d64-8c57-3156f2641ebe": {
      "content": "${1:reg}_r <= $1_w;${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "_r <= _w;",
      "matches": {
        "regseq": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "61779d83-53c2-33b1-ac5d-dedf7b20a2c0": {
      "content": "border-top: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "61860cf3-120f-3676-befe-a9be7906dcb8": {
      "content": "${1} ->\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      },
      "source": "vim-snippets/snippets"
    },
    "618fabd5-0ae9-3a2f-8395-cd9302735d16": {
      "content": "# Development & Debugging, don't forget to uncomment afterwards!\n#--------------------------------------------------------------------------------\n#setwd(\"~/Projekte/${1:}\")\n#opt <- list(${2:}\n#            )\n#--------------------------------------------------------------------------------",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "618fc9e5-53d9-352b-adfe-c5ef83242037": {
      "content": "_.map(${collection}, ${iteratee})",
      "doc": "function square(n) {\n  return n * n;\n}\n\n_.map([4, 8], square);\n// => [16, 64]\n\n_.map({ 'a': 4, 'b': 8 }, square);\n// => [16, 64] (iteration order is not guaranteed)\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n// The `_.property` iteratee shorthand.\n_.map(users, 'user');\n// => ['barney', 'fred']\n\nCreates an array of values by running each element in `collection` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\nThe guarded methods are:\n`ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n`fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n`sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n`template`, `trim`, `trimEnd`, `trimStart`, and `words`",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-map",
      "matches": {
        "lodash map": true
      },
      "source": "javascript/lodash"
    },
    "6191e70a-ee1c-3996-ac37-9837d3db54b3": {
      "content": "<%= render template: \"${1:file}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      },
      "source": "vim-snippets/snippets"
    },
    "61a0c78d-a5dd-3191-b74e-bae5d94dbb7d": {
      "content": "(\n\t${0}\n)",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "61a6d41d-f9d9-3e1e-8b2a-d5e08fdb9cae": {
      "content": "overflow-y: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      },
      "source": "vim-snippets/snippets"
    },
    "61bbb2ee-ad8a-3f7a-85e9-063fb24d8841": {
      "content": "unsafe {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unsafe {}",
      "matches": {
        "unsafe": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "61bdae93-0984-3be2-bc27-5929ad7369eb": {
      "content": "align-self: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "61c09ef0-adcc-35c9-89f3-0fe95765d287": {
      "content": "Plug '${1}', { 'do': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'do': '' }",
      "matches": {
        "plugdo": true
      },
      "source": "vim-snippets/snippets"
    },
    "61c34c4b-e84e-356c-abb1-97f349246e8d": {
      "content": "procedure ${1}(${2}) is\n\t${3}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure",
      "matches": {
        "proc": true
      },
      "source": "vim-snippets/snippets"
    },
    "61ca5be3-68a2-3282-84c4-e8adbab2e9e9": {
      "content": "foreach ( $${1:iterator} in $${2:collection} ) {\n\t${3:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/snippets"
    },
    "61cd32db-86c3-33b7-9f9f-889f5b27fc6a": {
      "content": "_.functions(${object})",
      "doc": "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functions(new Foo);\n// => ['a', 'b']\n\nCreates an array of function property names from own enumerable properties\nof `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-functions",
      "matches": {
        "lodash functions": true
      },
      "source": "javascript/lodash"
    },
    "61d504a3-9425-3f13-b692-d9cd824592fe": {
      "content": "if(${1:true})\n{\n\t${2:${VISUAL}}\n}\nelse\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "61da6177-ca21-3d15-87eb-61b19d174873": {
      "content": "cy.viewport(${1:width}, ${2:height});",
      "doc": "Control the size of the screen for your application.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-viewport",
      "matches": {
        "cypress viewport": true
      },
      "source": "javascript/cypress"
    },
    "61e08b37-2786-3e7e-832e-0d0abc5543ca": {
      "content": "top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "61e3b143-99b0-3bf8-9e48-53c89e78c90a": {
      "content": "expect(${1:target}).not.toBeLessThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not be less than (js)",
      "matches": {
        "notl": true
      },
      "source": "vim-snippets/snippets"
    },
    "61e56e1a-3fe5-3252-b670-0be8fe9ac00b": {
      "content": "logger.warn { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logw": true
      },
      "source": "vim-snippets/snippets"
    },
    "61f086d8-8201-3c4b-b695-fe913b265c69": {
      "content": "page-break-after: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "61f1a9d8-787b-3a4f-a1b4-6dceb6949127": {
      "content": "params[:${1:id}]",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pa": true
      },
      "source": "vim-snippets/snippets"
    },
    "61f1def2-8620-34ac-b098-bbd05e985c98": {
      "content": "help: ## Prints help for targets with comments\n\t@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $\\$1, $\\$2}'\n${0}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "help": true
      },
      "source": "vim-snippets/snippets"
    },
    "61fd1fc8-4c3c-3bdd-baea-804d66dc0bb4": {
      "content": "auto ${1} = std::make_shared<${2:T}>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amsp": true
      },
      "source": "vim-snippets/snippets"
    },
    "61feb6e5-2994-349d-98be-e40e666cb459": {
      "content": "display table-column",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "620816b9-3415-34e0-a592-57d59d456839": {
      "content": "{% paginate ${1} as ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig paginate",
      "matches": {
        "paginate": true
      },
      "source": "vim-snippets/snippets"
    },
    "620acf37-ebea-3fb8-8139-4d069ff7e63f": {
      "content": "if __name__ == '__main__':\n\t${0:main()}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmain": true
      },
      "source": "vim-snippets/snippets"
    },
    "622130ae-7af6-3d25-9589-8d080139efd4": {
      "content": "\\\\frac{\\\\partial^2 {$1}}{\\\\partial {$2} \\\\partial {$3}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "second partial derivation",
      "matches": {
        "ppdv": true
      },
      "source": "vim-snippets/snippets"
    },
    "622fe0d8-cd06-32a1-b55e-08988e44f7ed": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-func",
      "matches": {
        "prop-types func": true,
        "ptf": true
      },
      "source": "javascript/prop-types"
    },
    "62310684-de3d-312e-b59b-6cf710eb6a1a": {
      "content": "border-top-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "62422826-89a7-3cd3-8160-73938dd8f374": {
      "content": "text-align: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "624bfdee-7b68-31a1-99d1-793533aa0047": {
      "content": "font-stretch: condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "62509e0e-891d-38da-a89d-4c11256c021a": {
      "content": "${1:obj}.eq(${2:element index})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      },
      "source": "snippets/coffee"
    },
    "6252f36d-7a2b-3a67-91df-582e1e8c7f3e": {
      "content": "(reduce ${1:(fn [p n] ${3})} ${2})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reduce": true
      },
      "source": "vim-snippets/snippets"
    },
    "6253dc4d-a6e1-3ce6-9c3d-b93238c4ad04": {
      "content": "${1} {\n\t${2:${VISUAL}}\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "selector { }",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "62709ced-bb88-3895-b8b9-4f587979839b": {
      "content": "std::queue<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      },
      "source": "vim-snippets/snippets"
    },
    "627197c1-2404-327c-81d3-682becf2b907": {
      "content": "border-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6277cd88-10a6-3790-8f9b-f22747d31d11": {
      "content": "\\begin{Bmatrix}\n\t${1:TARGET}\n\\end{Bmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Bmatrix": true,
        "\\begin{Bmatrix} \\Bmatrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "627f1f2a-367a-3e69-8c86-a5a285ea91f6": {
      "content": "t.boolean :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.boolean (tcb)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "62820081-4684-3b2e-8381-3409d55f2451": {
      "content": "margin: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "62842cef-a9ea-373e-8cc5-ec02df0a059e": {
      "content": "define \"${1:#name}\", [\"${2:#dependencies1}\"], (${3:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      },
      "source": "snippets/coffee"
    },
    "628f22e5-2ffc-33fd-9f0d-1c478e66d5a8": {
      "content": "read(unit = ${1:fp}, file = ${2:filename}, iostat = ${3:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "read": true
      },
      "source": "vim-snippets/snippets"
    },
    "629763de-caa1-376f-837a-bb6683051b96": {
      "content": "echo CHtml::activeHiddenField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhahf": true
      },
      "source": "vim-snippets/snippets"
    },
    "629bd170-ba17-3b53-9e7e-533f7d0c7804": {
      "content": "import Vue from 'vue'\nimport ${1:HelloWorld} from './components/${1:HelloWorld}'\n\ndescribe('${1:HelloWorld}.vue', () => {\n\tit('${2:should render correct contents}', () => {\n\t\tconst Constructor = Vue.extend(${1:HelloWorld})\n\t\tconst vm = new Constructor().$mount()\n\t\texpect(vm.$el.querySelector('.hello h1').textContent)\n\t\t\t.to.equal(${3:'Welcome to Your Vue.js App'})\n\t})\n})",
      "doc": "unit test component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-unit-test",
      "matches": {
        "vtest": true,
        "vue unit test": true
      },
      "source": "javascript/vue"
    },
    "62a0bb19-980b-3688-bb08-f9cefa1aa57b": {
      "content": "Co-authored-by: ${1} <${2}>",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      },
      "source": "vim-snippets/snippets"
    },
    "62a3f439-a57e-34c8-82b9-f0f6688cd3e5": {
      "content": "::before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      },
      "source": "vim-snippets/snippets"
    },
    "62aba244-cca4-3f53-8ee7-dbd0c113701f": {
      "content": "<slot$1>$2</slot>$0",
      "doc": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slote",
      "matches": {
        "slote": true,
        "vue slote": true
      },
      "source": "javascript/vue"
    },
    "62b67832-9030-34ad-8af4-5c3333d030d7": {
      "content": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${5}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "62bcbc3b-dbff-3dc0-9637-11e4a00b6fb9": {
      "content": "bezierTangent(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierTangent": true
      },
      "source": "vim-snippets/snippets"
    },
    "62c32652-01d7-3551-9318-54e27203ca96": {
      "content": "System.err.print(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      },
      "source": "vim-snippets/snippets"
    },
    "62cdc27b-3cc2-3b51-b0a1-341b9279ccce": {
      "content": "justify-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      },
      "source": "vim-snippets/snippets"
    },
    "62d94138-447a-301a-9db0-4549dce5f94a": {
      "content": "@after-enter=\"$1\"$0",
      "doc": "@after-enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-enter",
      "matches": {
        "afterenterevent": true,
        "vue after-enter": true
      },
      "source": "javascript/vue"
    },
    "62d97d4d-ac36-35f5-a9b7-e62a9c4ce15b": {
      "content": "background-position ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      },
      "source": "vim-snippets/snippets"
    },
    "62dc1327-4495-3bd2-8479-bcde8fcc7fc0": {
      "content": "${fn:toUpperCase(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uc": true
      },
      "source": "vim-snippets/snippets"
    },
    "62dc13ab-e024-3582-970e-067bcad386e3": {
      "content": "case ${1}:\n\t${0}\nbreak;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "62de18fb-3851-3c71-9333-0692893a3019": {
      "content": "render action: '${1:action}', layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ral": true
      },
      "source": "vim-snippets/snippets"
    },
    "62e8e47f-00c4-3439-804f-4796f8ea0705": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-node-required",
      "matches": {
        "prop-types node required": true,
        "ptndr": true
      },
      "source": "javascript/prop-types"
    },
    "62ef618a-775a-3b1e-9edc-c1a355117f2d": {
      "content": "add_subdirectory(${0:src})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subdir": true
      },
      "source": "vim-snippets/snippets"
    },
    "62f866a6-f53b-3e21-8e1a-6245cabbcf55": {
      "content": "${1:Object} ${2:o}${3: = new $1}(${0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      },
      "source": "vim-snippets/snippets"
    },
    "62f9cd3d-fc6b-35ff-bc8c-d42490790edf": {
      "content": "import { request } from 'graphql-request';",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-import-request",
      "matches": {
        "graphql-request import request": true
      },
      "source": "javascript/graphql-request"
    },
    "62fe8599-b4d0-3397-a2ca-361036a08959": {
      "content": "content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "63056db9-3189-359e-802e-dca7f218dc6d": {
      "content": "when ${1} => ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "630a4b8e-f045-36c4-b100-4d1e0fc52645": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\n",
      "doc": "Creates a React Functional Component with ES7 module system with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionalComponentWithPropTypes",
      "matches": {
        "rfcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "630c3f1c-58b4-3e78-8905-2be003bb2c85": {
      "content": "<seealso cref=\"${1:#:member}\"/>}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<seealso cref=\"\"/>",
      "matches": {
        "seealso": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "630fe90e-36b3-3691-9c57-e78f9a3239ce": {
      "content": "switch (${1:#:var}) {\n\tcase ${2:#:val}:\n\t\t${0:TARGET}\n\t\tbreak;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "switch () {}",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "631ab431-a776-33a2-80fc-acf54498cd4c": {
      "content": "border-top-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "6321d33c-8020-3c7c-9961-f066bc99fb79": {
      "content": "assert_not_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnn": true
      },
      "source": "vim-snippets/snippets"
    },
    "632f3637-247d-3196-a9d6-521859f7c00c": {
      "content": "counter-reset: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      },
      "source": "vim-snippets/snippets"
    },
    "63371124-d8d7-3f7b-ae44-74777e51c478": {
      "content": "text-justify inter-cluster",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      },
      "source": "vim-snippets/snippets"
    },
    "6337afda-6012-31db-825e-2be8775c6e0a": {
      "content": "${1:document}.getElementById('${0:element ID}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "by#": true
      },
      "source": "snippets/javascript"
    },
    "633e8c47-942f-3b99-bde2-e308df0eea59": {
      "content": "_.uniqueId(${prefix})",
      "doc": "_.uniqueId('contact_');\n// => 'contact_104'\n\n_.uniqueId();\n// => '105'\n\nGenerates a unique ID. If `prefix` is given, the ID is appended to it.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqueid",
      "matches": {
        "lodash uniqueid": true
      },
      "source": "javascript/lodash"
    },
    "634aa5c8-1619-3270-a8dd-e3ce2f3ca4af": {
      "content": "for ${1:needle} in ${2:haystack} ; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "634b1b32-8f2f-3b1e-b2e0-fad0cdec94dc": {
      "content": "word-wrap: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      },
      "source": "vim-snippets/snippets"
    },
    "634c5097-3c40-3490-9e5c-b9d020f6ec95": {
      "content": "#!/usr/bin/awk -f",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "#!/usr/bin/awk -f",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "635446e8-2733-379f-993d-9c477ea636e0": {
      "content": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    environment.production ? [] : StoreDevtoolsModule.instrument()\n  ]\n})\nexport class $1StoreModule {}",
      "doc": "NgRx Store Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-store-module",
      "matches": {
        "a-ngrx-store-module": true,
        "angular ng rx store module": true
      },
      "source": "javascript/angular"
    },
    "6356b7ea-c313-376e-9d34-956741961ec7": {
      "content": "eprint = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eprint": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6358bd3f-621b-3f7f-968a-f9898f64896d": {
      "content": "<%# ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%# %>",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/snippets"
    },
    "635ebebb-0951-34e6-81a0-3989201b0959": {
      "content": "try {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_n": true,
        "try_without_catch_nor_finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6363ccaa-2ebb-3fa3-bdc2-fc2fcfbeac1b": {
      "content": "${1:ModelName}::model()->count(${2:condition}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycountm": true
      },
      "source": "vim-snippets/snippets"
    },
    "63657695-da00-3494-988e-4cfdedd5bd55": {
      "content": "**kwargs${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kwargs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6365c831-d70d-31c8-b462-9f51e9be16df": {
      "content": "this.setState((state, props) => { return { $0 }});\n",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      },
      "source": "vscode-react/snippets"
    },
    "63697191-1464-3ef1-a9af-4b0f10b0aed0": {
      "content": "background-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "636e3eed-aeaa-30b2-a02e-e7f73c8ae5a1": {
      "content": "<label>${1}: <input type=\"${2:TARGET}\" /></label>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "636f4846-a7e2-37a2-8277-f8aa1a8d6056": {
      "content": "<?php foreach ($${1:variable} as $${2:value}): ?>\n\t${0:${VISUAL}}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php foreach ($var as $value): ?>  ... <?php endforeach; ?>",
      "matches": {
        "foreachil": true
      },
      "source": "vim-snippets/snippets"
    },
    "6372f599-d7b8-325b-ba81-23b32cc4057b": {
      "content": "unless (${1:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "un",
      "matches": {
        "unless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "637a3d18-81bb-3eaf-b592-bb05bc63b6ec": {
      "content": "synchronized",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6380a2d8-dc70-321a-99ca-a57daac68576": {
      "content": "{\n\t\"type\": \"paragraph\",\n\t\"content\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_paragraph": true
      },
      "source": "vim-snippets/snippets"
    },
    "638244f4-9a65-3b31-a46f-5aa0d3dc120a": {
      "content": "echo CHtml::activeTextArea(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhata": true
      },
      "source": "vim-snippets/snippets"
    },
    "63888db6-8da0-30bd-9246-0de6cac255f2": {
      "content": "until ($1) {\n\t${2:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "until",
      "matches": {
        "until": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6392fa55-5441-3706-bfef-7d170e96300f": {
      "content": "<?php if (${1}): ?>\n\t${0:${VISUAL}}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php if (condition): ?> ... <?php endif; ?>",
      "matches": {
        "ifil": true
      },
      "source": "vim-snippets/snippets"
    },
    "639ab326-cc4c-3b75-b5c4-dadeefbc9b4f": {
      "content": "background-origin: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "639ebce2-4c5d-33f8-8431-b3d9a795a19f": {
      "content": "protected ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m|": true
      },
      "source": "vim-snippets/snippets"
    },
    "63a33033-9617-3223-b9fa-77c692eb766a": {
      "content": "import ${1:Name} from './components/$1.vue';\nexport default {\n\tcomponents: {\n\t\t$1\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vimport:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "63aa4bfd-d77b-339b-91a8-5bb49585f5fc": {
      "content": "<html>\n${1}\n</html>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "63b09491-266f-307a-ad25-f6026f774d0a": {
      "content": "private bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb-": true
      },
      "source": "vim-snippets/snippets"
    },
    "63b0d33c-9345-30d4-b2cf-d548c21d2892": {
      "content": "<Directory ${1:/}>\n\tDirectoryIndex ${0:index.html}\n\tOrder Deny,Allow\n\tDeny from All\n</Directory>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      },
      "source": "vim-snippets/snippets"
    },
    "63b97599-5b81-3b91-9c04-bffe0f1de7ee": {
      "content": "text-emphasis: before;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "63bd5029-63cb-31ac-9408-703dd83787ac": {
      "content": "\\begin{equation}\n\t${1:TARGET}\n\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{equation} \\equation": true,
        "equation": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "63bd77a7-09ae-3042-ab89-0e1013e5cad1": {
      "content": "%% @end",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%e": true
      },
      "source": "vim-snippets/snippets"
    },
    "63c11d76-4c1a-31ba-8176-ef36e67d4acc": {
      "content": "<span>${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span": true
      },
      "source": "vim-snippets/snippets"
    },
    "63c557e1-17e3-3b79-9728-5e8abffb336e": {
      "content": "${1:obj}.hover(function (${2:e}) {\n\t${3:// event handler}\n}, function ($2) {\n\t${4:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hover": true
      },
      "source": "snippets/javascript"
    },
    "63d15385-c219-3a4b-a751-5b6fbe26605a": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      },
      "source": "vim-snippets/snippets"
    },
    "63dbe2de-6b16-39d2-92c4-bb6df693a30c": {
      "content": "caption-side bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "63dca847-5643-338a-9988-b3683b4e3f4c": {
      "content": "_.wrap(${value}, ${wrapper})",
      "doc": "var p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n\np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'\n\nCreates a function that provides `value` to `wrapper` as its first\nargument. Any additional arguments provided to the function are appended\nto those provided to the `wrapper`. The wrapper is invoked with the `this`\nbinding of the created function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-wrap",
      "matches": {
        "lodash wrap": true
      },
      "source": "javascript/lodash"
    },
    "63dcb47a-567e-3ae2-891f-44837d0dd929": {
      "content": "\\${${1:width}}    \\${${2:height}}=    Get Window Size",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Get Window Size",
      "matches": {
        "gws": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "63e0e3a6-dbac-3226-85fb-5c2072dcfaf0": {
      "content": "${1:obj}.val('${2:text}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      },
      "source": "snippets/coffee"
    },
    "63e142f2-118c-3b91-9a69-1c7a4c8b0cc6": {
      "content": "content: counters(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "63e9c9c7-16b3-3ed5-a07a-2a455127be7a": {
      "content": "<li>${1}</li>\nli+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li+": true
      },
      "source": "vim-snippets/snippets"
    },
    "63eb2395-e2b5-3b96-bf93-cf3ceb2b2c07": {
      "content": "List${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/snippets"
    },
    "63ef8b49-4720-30b7-881c-84281ee6819a": {
      "content": "mixins: [${1:mixinName}],",
      "doc": "vue use mixin",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-use-mixin",
      "matches": {
        "vmixin-use": true,
        "vue use mixin": true
      },
      "source": "javascript/vue"
    },
    "63f2447e-800a-3c91-ae7d-c31bff20de2c": {
      "content": "build(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "build conventional commit",
      "matches": {
        "build": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "63f43bf7-7306-3635-872e-cb0540eac08a": {
      "content": "${1:FIELDNAME} = models.SlugField(max_length=${2:50}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slug": true
      },
      "source": "vim-snippets/snippets"
    },
    "6409e013-0679-39e2-b1f4-c4e81bb5d0df": {
      "content": "${1:obj}.width(${2:integer})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      },
      "source": "snippets/javascript"
    },
    "640d782a-9232-33bd-b9ba-45aaca9f833e": {
      "content": "${1:/* condition */} ? ${2:a} : ${3:b}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "640e52df-71e9-3bf3-83ab-25fa45a1aaee": {
      "content": "| img_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_tag": true
      },
      "source": "vim-snippets/snippets"
    },
    "6415d8a4-f3b3-3658-9181-af5f775a51a8": {
      "content": "fill(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fill": true
      },
      "source": "vim-snippets/snippets"
    },
    "641bac01-4071-323b-b959-5951b9b4a197": {
      "content": "specify { subject.${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "641cdc3a-9512-3fba-8160-00a32b5a00d4": {
      "content": "-moz-border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "6420baa7-3f0b-3194-b655-f7226d4529ab": {
      "content": "var ${1:name}${2:: T} = ${0:value}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "64329f88-0fcf-3d51-96a4-7615eb33e2ef": {
      "content": "cursor: crosshair",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "643de17d-fb8a-36f6-80b4-1836ff416372": {
      "content": "<caption>${0}</caption>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caption": true
      },
      "source": "vim-snippets/snippets"
    },
    "64401ec9-b75c-3c5e-bb97-72ae90e90823": {
      "content": "after_each(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "after_each(func)",
      "matches": {
        "after_each": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6444ccaa-aa56-324e-9646-4df4de18a95f": {
      "content": "${1:obj}.last('${1:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      },
      "source": "snippets/coffee"
    },
    "644c537e-7483-3a1c-be55-9730e0724542": {
      "content": "{{ ${1:#:TARGET} | ${2:#:filter} }}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "{{ | }}",
      "matches": {
        "filter": true,
        "{{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "644c83d1-265a-3ea3-9713-49f407bb9192": {
      "content": "${1:obj}.html('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      },
      "source": "snippets/coffee"
    },
    "64560401-b787-39e6-8f6a-f319eb24c386": {
      "content": "for(let ${1:item} of ${2:object}) {\n\t${0}\n}\n",
      "doc": "Iterating over property names of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forOf",
      "matches": {
        "fof": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "64604139-0009-3839-8cfc-e781f54a0787": {
      "content": "font-stretch: extra-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      },
      "source": "vim-snippets/snippets"
    },
    "6468765b-f3bf-3191-ba7f-07c897f6f7bd": {
      "content": "import React, { ReactElement } from 'react'\n\ninterface Props {\n\t\n}\n\nfunction ${1:${TM_FILENAME_BASE}}({}: Props): ReactElement {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Functional Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactFunctionalExportComponent",
      "matches": {
        "tsrfce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "6468ca89-675e-3c8a-999b-5dba275caa5e": {
      "content": "password(name: \"${1:PASSWORD}\" , defaultValue: \"${2:SECRET}\" , description: \"${3:Enter a password}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parampassword": true
      },
      "source": "vim-snippets/snippets"
    },
    "647457b9-dc3a-3c21-b672-2c266553a3f9": {
      "content": "regsubst(${1:hay stack}, ${2:needle}, \"${3:replacement}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regsubst": true
      },
      "source": "vim-snippets/snippets"
    },
    "647b1655-c08b-3abe-80fa-af8d9623493e": {
      "content": "import React, { memo } from 'react'\n\nexport default memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n",
      "doc": "Creates a React Memo Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-function-memo-component",
      "matches": {
        "react component function memo": true,
        "rmc": true
      },
      "source": "javascript/react"
    },
    "647f3c93-fd50-3ed6-9782-772b469f19c6": {
      "content": "warning(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warning": true
      },
      "source": "vim-snippets/snippets"
    },
    "648939d3-87e6-326e-90ba-d88ff1351a19": {
      "content": "import ${0:Data.Text}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "648d70a0-46df-31fb-9055-e1eac52b3028": {
      "content": "const mapStateToProps = (state) => ({\n\t${1}\n})\n\nconst mapDispatchToProps = {\n\t\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "mappingToProps",
      "matches": {
        "reduxmap": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "648fa30f-0c9e-33a1-8d8d-126e3abc2865": {
      "content": "std.array",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      },
      "source": "vim-snippets/snippets"
    },
    "6496fe7c-e5ea-3dbc-a2a5-fe6f08bb434e": {
      "content": "printf(\"${1}\\n\"${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "printf(\"...\\n\", ...);",
      "matches": {
        "printf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "64c0ab31-fc52-338d-a0b4-bc57943f411d": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon}\n\tbuttons {\"${3:Cancel}\", \"${4:OK}\"}\n\tdefault button \"${4}\"\nset button_pressed to button returned of result\nif button_pressed is \"${4}\" then\n\t${5:#:TARGET}\nelse\n\t-- action for cancel button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK/Cancel": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "64c54057-27e4-3149-bd26-4f1ed651648e": {
      "content": "(${1:name} [${2:this} ${3:args}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "met": true
      },
      "source": "vim-snippets/snippets"
    },
    "64c84930-d434-3fa6-93c3-a941b8adb6e7": {
      "content": "overflow: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "64c9a2b7-f762-3ff0-a401-da5cceb92eee": {
      "content": "{% comment %}${1:#:comment}{% endcomment %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "64cb2d93-b773-33e0-9f28-302a17a76134": {
      "content": "parameter ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "parameter ... = ...",
      "matches": {
        "pa": true,
        "parameter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "64daac83-7366-3fd2-b468-52bea4523e11": {
      "content": "${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dpipe": true
      },
      "source": "snippets/javascript"
    },
    "64dc4267-b149-3179-81e7-d52d3edbc917": {
      "content": "white-space: pre-line;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "64e081c2-0236-3c29-961e-ef9ad9281429": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      },
      "source": "vim-snippets/snippets"
    },
    "64e4ed2d-4e82-3bbb-8d58-bac25d5e5cb3": {
      "content": "${1:FIELDNAME} = models.EmailField(max_length=${2:75}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "email": true
      },
      "source": "vim-snippets/snippets"
    },
    "64e86f6d-a340-3b15-8d74-141a8a97e507": {
      "content": "% while ${1:}:\n\t${2:}\n% endwhile",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "64f88af3-d7b6-37cc-b451-09b3a0a1f241": {
      "content": "\\begin{eqnarray}\n\t${1:TARGET}\n\\end{eqnarray}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{eqnarray} \\eqnarray": true,
        "eqnarray": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "64fcc7d0-a2b0-31a7-b93d-9ec09827dab4": {
      "content": "${1:obj}.mouseout (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      },
      "source": "snippets/coffee"
    },
    "6500e948-cb45-322f-bafd-ce402b6a3485": {
      "content": "_.isArrayLike(${value})",
      "doc": "_.isArrayLike([1, 2, 3]);\n// => true\n\n_.isArrayLike(document.body.children);\n// => true\n\n_.isArrayLike('abc');\n// => true\n\n_.isArrayLike(_.noop);\n// => false\n\nChecks if `value` is array-like. A value is considered array-like if it's\nnot a function and has a `value.length` that's an integer greater than or\nequal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraylike",
      "matches": {
        "lodash isarraylike": true
      },
      "source": "javascript/lodash"
    },
    "6501e8af-4728-38fa-88e6-6d8cb6701a9a": {
      "content": "${1:map} ${2:fn} ${0:list}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ap": true
      },
      "source": "vim-snippets/snippets"
    },
    "65043dcc-6e8c-362f-ad06-988ba1ddf717": {
      "content": "if ${1}\n\t${2:${VISUAL}}\nelse\n\t${0}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if ... else statement",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "6509c65f-8582-3649-ba8f-d8b452666439": {
      "content": "@inbook{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tsubtitle={${4:subtitle}},\n\tbooktitle={${5:book}},\n\teditor={${6:editor}},\n\tyear={${7:YYYY}},\n\tlocation={${8:somewhere}},\n\tpublisher={${9:publisher}},\n\tpages={${10:NN}--${11:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "In Book reference",
      "matches": {
        "inb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "650e0719-b4ce-31a1-9e84-05749457bbe8": {
      "content": "import React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component",
      "matches": {
        "rcc": true,
        "react component class": true
      },
      "source": "javascript/react"
    },
    "650eca09-f36f-308a-97d7-496f6db42319": {
      "content": "View::render('${1:view}', $${2:array});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_render": true
      },
      "source": "vim-snippets/snippets"
    },
    "6513c3b3-66b1-380c-82ee-025815eb0c8e": {
      "content": "module Main exposing (Model, Msg(..), init, main, subscriptions, update, view)\nimport Browser\nimport Html exposing (..)\nimport Json.Encode\nmain : Program Flags Model Msg\nmain =\n\tBrowser.element\n\t\t{ init = init\n\t\t, update = update\n\t\t, subscriptions = subscriptions\n\t\t, view = view\n\t\t}\ntype alias Model =\n\t{}\ntype alias Flags =\n\tJson.Encode.Value\ninit : Flags -> ( Model, Cmd Msg )\ninit flags_ =\n\t( {}\n\t, Cmd.none\n\t)\ntype Msg\n\t= Noop\nupdate : Msg -> Model -> ( Model, Cmd Msg )\nupdate msg model =\n\tcase msg of\n\t\tNoop ->\n\t\t\t( model\n\t\t\t, Cmd.none\n\t\t\t)\nsubscriptions : Model -> Sub Msg\nsubscriptions model =\n\tSub.none\nview : Model -> Html Msg\nview model =\n\th1 [] [ text \"Hello, world!\" ]",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "element": true
      },
      "source": "vim-snippets/snippets"
    },
    "651b079d-a36e-32f6-a83c-eb0d2b8bc4e9": {
      "content": "import { ${1:map} } from 'rxjs/operators';\n$0",
      "doc": "RxJs import",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "rxjs-operator-import",
      "matches": {
        "a-rxjs-operator-import": true,
        "angular import rx js operator": true
      },
      "source": "javascript/angular"
    },
    "65222884-1c6f-399c-b630-1e0f460864b4": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/snippets"
    },
    "65250a8c-7447-3406-9a13-2ede523687bb": {
      "content": "white-space-collapse: keep-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "653301f3-d75d-326d-b5db-88700d6d1bca": {
      "content": "<returns>$0</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML returns comment",
      "matches": {
        "<r": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "653dca25-ef78-3453-bde3-6dd598de0505": {
      "content": "<?php echo ${1} ?>${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pecho": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "65469c71-bf7f-3abf-ade8-88f4da4a4370": {
      "content": "font-family: ${0:'Monotype Corsiva','Comic Sans MS'},cursive",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "654f070c-3cde-300f-b6c4-bba8818c6597": {
      "content": "display: table-header-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      },
      "source": "vim-snippets/snippets"
    },
    "65545615-491b-393d-b5d9-b711fcaaae94": {
      "content": "@return {${1:type}} ${0:description}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@ret": true
      },
      "source": "snippets/javascript"
    },
    "655f2f83-8ce9-387d-9b2c-1f54a8051e0a": {
      "content": "if err != nil {\n\treturn nil, errors.Wrapf(err, \"${1:message %v}\", ${2:args...})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrapf with two return values",
      "matches": {
        "errn,wf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "65631b3d-8310-303f-971b-8676dc9f1d55": {
      "content": "end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "=> end?",
      "matches": {
        "edn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "656c063c-b01e-33c8-bc54-15ffd9060d65": {
      "content": "for ${1} of ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "657dd363-54bd-316b-ab61-dcfd34920ae1": {
      "content": "validates_acceptance_of :${1:terms}${2:${3:, accept: \"${4:1}\"}${5:, message: \"${6:You must accept the terms of service}\"}}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of if",
      "matches": {
        "vaoif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "658adcc9-9f63-3e99-9ffc-c712c354fde6": {
      "content": "<#-- ${0:comment${VISUAL}} -->",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#-- comment -->",
      "matches": {
        "com": true
      },
      "source": "vim-snippets/snippets"
    },
    "658c446a-4959-39b7-9e40-3e2ded067347": {
      "content": "$.ajaxStop(function () {\n\t${1:// handler for when all AJAX calls have been completed};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstop": true
      },
      "source": "snippets/javascript"
    },
    "65937c38-68d7-3f11-895d-1aede452ac75": {
      "content": "pow(${1:num}, ${0:exponent});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pow": true
      },
      "source": "vim-snippets/snippets"
    },
    "6595561a-f0d1-3abf-93fc-6c8fafb77a2a": {
      "content": "echo ${0};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "65968b62-6efd-354c-8cc5-5531fbf0a4a9": {
      "content": "<input type=\"text\" name=\"${1:user}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputtext": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6597376c-6240-3252-b7b6-bd1f38d50fb0": {
      "content": "(${1:args}) ~>\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      },
      "source": "vim-snippets/snippets"
    },
    "659dc9db-eade-3f0e-af68-9f1139963830": {
      "content": "edition = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "edition": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "659f3090-97e2-39c5-8f3d-e444a1f76b21": {
      "content": "match {\n\tcase ${1} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "match {\\n  case .. => ..",
      "matches": {
        "match": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "65aa2d02-28e3-3dad-946b-34b1e49bed04": {
      "content": "<!-- ${1} -->${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "//": true
      },
      "source": "vim-snippets/snippets"
    },
    "65abef99-3a8e-3e43-b64f-a75fd579f76b": {
      "content": "direction: ${1:ltr|rtl};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "direction: ltr|rtl (direction)",
      "matches": {
        "direction": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "65ad8497-c01f-3252-a2c7-c7ceca91db65": {
      "content": "list-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      },
      "source": "vim-snippets/snippets"
    },
    "65b60547-2a14-3e19-a9fe-4fcb9a4431c6": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "65b7d645-9430-325b-8e9b-9a6549bb91df": {
      "content": "validates :${0:attribute}, numericality: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vn": true
      },
      "source": "vim-snippets/snippets"
    },
    "65be90e3-2960-388b-85a1-c62eb141dffa": {
      "content": "place-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "65c3eb97-e199-33d1-92ea-9fd5a2f45e1f": {
      "content": "<ul type=\"square\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ulsquare": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "65d2c4c4-d25e-3e51-95a1-b392a5500887": {
      "content": "-> { ${0} }.must_be_silent",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbsi": true
      },
      "source": "vim-snippets/snippets"
    },
    "65d3efd0-bd10-3767-9bf0-f789a35cde6f": {
      "content": "beforeRouteLeave(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router component guards beforeRouteLeave",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteLeave",
      "matches": {
        "vbeforerouteleave": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "65dfb986-ee22-30f5-adc4-78acf2fa821f": {
      "content": "System.err.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serr": true
      },
      "source": "vim-snippets/snippets"
    },
    "65e14816-67f3-3fe0-ae4b-15d07b48fe91": {
      "content": "margin: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "65e459c3-4397-39b0-8eb2-56c23a46cc18": {
      "content": "<iframe src=\"${1}\"></iframe>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "65f25287-c292-37c7-9a37-d373c72fac7e": {
      "content": "background-size auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "65f3e525-0858-3a38-812c-95b85362377d": {
      "content": "docs(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "docs conventional commit",
      "matches": {
        "docs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "66040606-6ebe-3366-8048-82b3c46ad2c6": {
      "content": "computed: {\n\t${1:name}() {\n\t\treturn this.${2:data} ${0}\n\t}\n},",
      "doc": "computed value",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Computed",
      "matches": {
        "vcomputed": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6604c93d-f1e6-3858-b79b-00ba59f13179": {
      "content": "If ${1:condition 1} Then\n\t${2:; True code}\nElseIf ${3:condition 2} Then\n\t${4:; True code}\nElse\n\t${0:; Else code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelif": true
      },
      "source": "vim-snippets/snippets"
    },
    "6607b7f8-744d-3440-b235-61cee06fe067": {
      "content": "echo CHtml::activeRadioButtonList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yharbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6611feb2-06a1-39ea-abc7-f57d6d0e0eb3": {
      "content": "padding-top: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-top: length (margin)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "661c8c95-698e-3b78-a138-c93ca64faea8": {
      "content": "begin\n    ${1:TARGET}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "be": true,
        "beginend": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "661edbe3-b516-3d30-8a65-67f812e194da": {
      "content": "import React, { Component } from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React and Component",
      "matches": {
        "irc": true
      },
      "source": "snippets/javascript"
    },
    "662266fb-511e-34e8-a9d6-71f9956c92e2": {
      "content": "echo CHtml::linkButton('${1:lable}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlinkb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6628642f-a917-3868-81e3-3162971382d5": {
      "content": "{:catch error}\n\t<!-- promise was rejected -->",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-catch-block",
      "matches": {
        "svcatch": true,
        "svelte catch": true
      },
      "source": "javascript/svelte"
    },
    "6638ea32-eb28-386a-bb97-3d36a35db587": {
      "content": "match ${1:(* e1 *)} with\n| ${2:p} -> ${3:e2}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "Match": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "664338c9-8026-3419-9325-9766dca69561": {
      "content": "....\n${0}\n....",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "literal block ... text ...",
      "matches": {
        "block-literal": true,
        "literalblock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "664369d8-fbb8-310a-bd35-c5232c1d2248": {
      "content": "each_pair { |${1:name}, ${2:val}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eap": true
      },
      "source": "vim-snippets/snippets"
    },
    "66475845-2f06-3633-a857-637a4fae2d96": {
      "content": "tapply(${1:vector}, ${2:index}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "664afbaa-b43e-3e39-a5b2-d32e88ecbfc6": {
      "content": "overflow: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "664de25a-a54e-37ac-9d9b-a252acc20100": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "664f02f4-5eb9-3d0d-9988-c9029ddb36ee": {
      "content": "\\begin{list}\n\t${1:TARGET}\n\\end{list}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{list} \\list": true,
        "list": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6654d128-a992-3106-ad7d-e8998a3375ae": {
      "content": "process.stdin",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stdin": true
      },
      "source": "snippets/javascript"
    },
    "6659576e-9fe8-30a3-9fcf-9fb698675bb2": {
      "content": "class ${0:BlankSlate}\n\tinstance_methods.each { |meth| undef_method(meth) unless meth =~ /\\A__/ }\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "class BlankSlate .. initialize .. end",
      "matches": {
        "blankslate": true
      },
      "source": "vim-snippets/snippets"
    },
    "665d22f7-3ed0-3a79-9e5e-683b101e3ed4": {
      "content": "${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cssm": true
      },
      "source": "snippets/coffee"
    },
    "666291d5-cd9d-397e-86f4-9ce1db2cc2ec": {
      "content": "foreach ${1:x} {${2:#list}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "6665ce38-250a-3f8f-b863-de10f9462b26": {
      "content": "validates_length_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of",
      "matches": {
        "vl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6668aa3d-0906-3020-a2e2-da50a9441bfb": {
      "content": "${1:obj}.prev('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prev": true
      },
      "source": "snippets/javascript"
    },
    "6668ada0-3d3d-306b-8ab0-8e568b025272": {
      "content": "z-index: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "666db3f7-c11e-391b-81d2-ba548c581a7d": {
      "content": "${1:obj}.prop('${2:property name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      },
      "source": "snippets/coffee"
    },
    "666eb1d1-3091-363b-a45c-5f685a5572e5": {
      "content": "generic\n\ttype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "generic type",
      "matches": {
        "gen": true
      },
      "source": "vim-snippets/snippets"
    },
    "66733ad1-8b77-3ff6-afdf-03b15be6b97d": {
      "content": "{% include \"${0:filename}\" %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "667ccba5-9500-3f7a-8097-c08c09583a9a": {
      "content": "__SOURCE_FILE__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__FILE__",
      "matches": {
        "sourcef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "66816a0f-746e-3a71-959b-aba7c5ec56c0": {
      "content": "pluralize:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      },
      "source": "vim-snippets/snippets"
    },
    "668bddc4-846b-3bc6-97c2-c635ac5951ce": {
      "content": "private string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps-": true
      },
      "source": "vim-snippets/snippets"
    },
    "668d640d-01f7-34c9-b72f-fc618fb7f555": {
      "content": "grid-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "6699f2f8-9bee-3f30-82e1-746cf522fc5a": {
      "content": "import PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport const mapStateToProps = state => ({\n\n})\n\nexport const mapDispatchToProps = {\n \n}\n\nexport const ${1:hocComponentName} = (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}\n\nexport default WrapperComponent => connect(mapStateToProps, mapDispatchToProps)(${1:hocComponentName}(WrapperComponent))\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_hocComponentWithRedux",
      "matches": {
        "_hocredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "66a0ba6d-3277-392e-b056-3b8e43d2b758": {
      "content": "if err != nil {\n\treturn errors.Wrapf(err, \"${1:message %v}\", ${2:args...})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrapf",
      "matches": {
        "errnwf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "66a740b6-2621-3c52-b0d3-6f35cb9e7508": {
      "content": "justify-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "66b342a4-7508-30ca-968d-7316c907b102": {
      "content": "validates_confirmation_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of",
      "matches": {
        "vc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "66b517b4-a180-3019-8024-4fa3dc1cf93a": {
      "content": "_.sortedLastIndexBy(${array}, ${value}, ${iteratee})",
      "doc": "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 1\n\n// The `_.property` iteratee shorthand.\n_.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n// => 1\n\nThis method is like `_.sortedLastIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindexby",
      "matches": {
        "lodash sortedlastindexby": true
      },
      "source": "javascript/lodash"
    },
    "66b86428-e2cd-392f-9241-a5711f16b3d1": {
      "content": "resize: horizontal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "66b92492-9475-349f-bc25-382f38a1398b": {
      "content": "post {\n\talways {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pa": true
      },
      "source": "vim-snippets/snippets"
    },
    "66c03d61-9290-3dcd-a244-d10aea628fd1": {
      "content": "typedef enum ${2:logic[15:0]}\n{\n\t${3:REG = 16'h0000}\n} ${1:my_dest_t};",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tde": true
      },
      "source": "vim-snippets/snippets"
    },
    "66cc0145-74a3-38de-b323-6708c3ddf40b": {
      "content": "word-wrap: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "66ccdff3-20f8-30f1-ad5c-974cbdf37829": {
      "content": "foreach ($${1:#:variable} as $${2:#:key}${3: =>} $${4:#:value}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach-hashmap": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "66dc159f-8c5e-3870-b38c-c24c0726b5b7": {
      "content": "background-size: cover;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      },
      "source": "vim-snippets/snippets"
    },
    "66df540d-b0fd-3015-8b49-20ead23e3996": {
      "content": "{%- if ${1:condition} -%}\n\t${2}\n{%- else -%}\n\t${0}\n{%- endif -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse-": true
      },
      "source": "vim-snippets/snippets"
    },
    "66e213c6-e10d-3ab1-8e4a-59eba86051cb": {
      "content": "border-right: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      },
      "source": "vim-snippets/snippets"
    },
    "66e8512f-3d87-37e5-9885-89e61d36c9e8": {
      "content": "list-style-type: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/snippets"
    },
    "66e93c8d-2986-35a5-85ff-43986a36036f": {
      "content": "place-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "66ee25a2-e050-3061-a794-0af2726688a6": {
      "content": "console.timeEnd(${1:object});",
      "doc": "Sets end point for execution time measurement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletimeend",
      "matches": {
        "base console time end": true
      },
      "source": "javascript/base"
    },
    "66f4cd50-dcac-3bcb-aa29-39c9651f20ad": {
      "content": "font-effect: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      },
      "source": "vim-snippets/snippets"
    },
    "66fc4d25-6921-3d10-86a0-9360826409e1": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "else {...}",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "66fea924-995d-30f6-97e3-dceba0fccdc1": {
      "content": "font-emphasize-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "67019151-1c6d-31cc-82e2-a2bd8a6e1045": {
      "content": "term:: ${1:definintion}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "definintion": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "670a34ed-ec5b-3e05-a851-df884291b57e": {
      "content": "after_touch :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "6711d42a-3e64-342e-ad09-54d43712795c": {
      "content": "#!/usr/bin/env tclsh",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "671f8e3d-1971-39f9-8ec7-2e43f83f93f5": {
      "content": "catch (${1:Exception} ${2:e}) {\n    ${0:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6722da11-515c-3610-a931-435145c6a988": {
      "content": "\\\\begin{${1:tabular}}{${2:c}}\n\t${0:${VISUAL}}\n\\\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tabular (or arbitrary) environment",
      "matches": {
        "tab": true
      },
      "source": "vim-snippets/snippets"
    },
    "67296cef-0a46-3e39-8cbd-1fbaf54145ef": {
      "content": "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\ninterface Props {\n\t\n}\ninterface State {\n\t\n}\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n\tstate = {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React component class with PropTypes with connected redux and ES7 module system and TypeScript interfaces",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactClassCompomentRedux",
      "matches": {
        "tsrcredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "67304519-90fd-3d73-9c04-e6a0d9f6ede9": {
      "content": "console.debug(${1:object});",
      "doc": "Displays a message in the console. Also display a blue right arrow icon along with the logged message in Safari",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoledebug",
      "matches": {
        "base console debug": true
      },
      "source": "javascript/base"
    },
    "6736a5b9-18bd-32ec-bc47-c51c5e60d4df": {
      "content": "| truncate: ${1:20}, '${2:...}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncate": true
      },
      "source": "vim-snippets/snippets"
    },
    "673b4681-ec82-3656-879a-576c18edd4cf": {
      "content": "switch ${1:expression} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "673dd7a6-ad14-3a97-a4ab-70fbcb8ae053": {
      "content": "t.timestamps\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.timestamps (tctss)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "673fdc08-f314-3a9e-8e3f-1b13ae55d225": {
      "content": "var $1 = new sap.m.FlexBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmflexbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "6740189d-b50a-3e9c-8566-c6339611d73d": {
      "content": "<ol class=\"${1}\">\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol.": true
      },
      "source": "vim-snippets/snippets"
    },
    "674cf489-c4d8-328b-be80-eaa985f475a0": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with PropTypes and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-proptypes",
      "matches": {
        "rccp": true,
        "react component class proptypes": true
      },
      "source": "javascript/react"
    },
    "6751456c-3697-3248-91ca-20e10065fc33": {
      "content": "border-fit clip",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "6754b1be-5514-3809-9712-1c02c27e77cd": {
      "content": "stringformat:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      },
      "source": "vim-snippets/snippets"
    },
    "67656dfc-c9cf-3dcc-ba48-81e89db99915": {
      "content": "grid-auto-rows: max-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "676cb48d-8fd0-3a9f-b059-837da0bb988b": {
      "content": "${1:FIELDNAME} = models.PositiveIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "posint": true
      },
      "source": "vim-snippets/snippets"
    },
    "676d564f-673a-322a-8b9f-b3bd32c20b42": {
      "content": "#define ${1}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#def, #define": true,
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6778f5ec-295c-3f45-851a-6ff9bf566011": {
      "content": "import React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-component",
      "matches": {
        "react component functional": true,
        "rfc": true
      },
      "source": "javascript/react"
    },
    "67825a32-7d49-376a-a265-00c597a4f567": {
      "content": "import ipdb; ipdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import ipdb..",
      "matches": {
        "ipdb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "67909b75-a0dc-313a-9b42-e33219bda964": {
      "content": "case (${1:/* variable */})\n\t${2:/* value */}: begin\n\t\t${3}\n\tend\n\tdefault: begin\n\t\t${4}\n\tend\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "6798412c-3731-3f56-b148-74bf1e355a01": {
      "content": "${1:obj}.scrollTop(${2:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrollt": true
      },
      "source": "snippets/javascript"
    },
    "67987775-c1af-3ac3-8833-6331cdc0dff3": {
      "content": "after_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_create",
      "matches": {
        "aftc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "679b3835-53fb-3502-9765-26d7ec3f2d1a": {
      "content": "console.time(\"${1:label}\");\n${0:${VISUAL}}\nconsole.timeEnd(\"$1\");",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.time ... console.timeEnd",
      "matches": {
        "ctime": true
      },
      "source": "snippets/javascript"
    },
    "67a37434-8426-3ec9-91a4-4c6ffa0dc42d": {
      "content": "grid-auto-rows min-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "67a5ca6e-815c-369f-952c-fe8e9387b006": {
      "content": "must_match /${0:regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mm": true
      },
      "source": "vim-snippets/snippets"
    },
    "67a9e015-daa8-3154-bdc5-8546c9432269": {
      "content": "Rc::new(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Rc::new()",
      "matches": {
        "rc": true
      },
      "source": "vim-snippets/snippets"
    },
    "67a9fda6-3cd2-34aa-9c4b-91aaec4df5a3": {
      "content": "font-emphasize-position: after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "67ab3544-972f-3f16-ad43-5715a9d8ef91": {
      "content": "is_null($${1:var})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "is_null",
      "matches": {
        "in": true
      },
      "source": "vim-snippets/snippets"
    },
    "67ac693c-963d-3229-a251-e6b336df134d": {
      "content": "caption-side: bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "67ad3f05-e92c-3861-b6ad-e7519392a736": {
      "content": "after_find :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maf": true
      },
      "source": "vim-snippets/snippets"
    },
    "67b2bdb8-9db6-302f-9353-a27db97b446e": {
      "content": "attach(${1:frame})",
      "doc": "Attach",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "att",
      "matches": {
        "attach": true
      },
      "source": "vscode-R/snippets"
    },
    "67b594aa-e1ef-3cfe-abbb-d93a648401e7": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) => {\n\t\tstate.${2:value} = $3;\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmutations": true
      },
      "source": "vim-snippets/snippets"
    },
    "67bf9067-bf62-3ccb-8efb-7cf3be256961": {
      "content": "useLayoutEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t};\n}, [${3:input}])",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-uselayouteffect",
      "matches": {
        "react uselayouteffect": true,
        "uselayouteffect": true
      },
      "source": "javascript/react"
    },
    "67c5a0bc-fcf3-3a75-aa12-4cf702120c8d": {
      "content": "IO.inspect(${1})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect()",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "67c7ed6a-9112-3082-8796-32090887e476": {
      "content": "case ${1}:\n\t${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "67c94109-58a4-3e90-b8aa-5d2c557fd1b8": {
      "content": "word-wrap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      },
      "source": "vim-snippets/snippets"
    },
    "67d76e02-a4a5-32c4-938f-d80d386828de": {
      "content": "${1:obj}.removeData('${2:key name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remd": true
      },
      "source": "snippets/javascript"
    },
    "67e079e2-f870-37e8-b879-3d2c3267fce5": {
      "content": "void mousePressed(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mousePressed": true
      },
      "source": "vim-snippets/snippets"
    },
    "67e41122-5ee1-39df-a290-cca2a6c80f35": {
      "content": "render(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ren": true
      },
      "source": "vim-snippets/snippets"
    },
    "67f2cdb5-ba2a-3584-8c45-ccd4ce8df8c9": {
      "content": "class Migration${1:class_name} < ApplicationRecord\n\tself.table_name = :${2:model_name}s\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "class Migration... < ApplicationModel .. self.table_name .. end",
      "matches": {
        "cmm": true
      },
      "source": "vim-snippets/snippets"
    },
    "67f4a430-2f3a-3acd-b201-d9e67f1b3c5e": {
      "content": "quote do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qu": true
      },
      "source": "vim-snippets/snippets"
    },
    "67fefcfc-9ee1-3cf5-8650-2a69a4f8365c": {
      "content": "word-wrap: unrestricted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "680290e3-3947-35e4-ba36-5312c782528d": {
      "content": "fun (${1:Parameters}) -> ${2:body} end",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "6809925a-762a-3b55-b73f-ce4099d635a3": {
      "content": "require ${0:Logger}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "680d3b4c-a15e-3b62-98bf-c7e4ba69e8eb": {
      "content": "<script lang=\"ts\">\nimport Vue from 'vue'\nexport default Vue.extend({\n  ${0}\n})\n</script>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <script> with TypeScript",
      "matches": {
        "script_with_TypeScript": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6811ea9a-ca82-37e9-bc29-a5168385d932": {
      "content": "<track src=\"${1}\" srclang=\"${2}\" label=\"${3}\" default=\"${4:default}>${5}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "track": true
      },
      "source": "vim-snippets/snippets"
    },
    "681f1503-3b8e-36b0-947c-c257e8128f81": {
      "content": "{% spaceless %}\n\t${0:TARGET}\n{% endspaceless %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% spaceless %} ... {% endspaceless %}",
      "matches": {
        "spaceless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68210b34-f2bc-3850-acea-89e836937b04": {
      "content": "<script src=\"${0}.js\"></script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scripts": true
      },
      "source": "vim-snippets/snippets"
    },
    "6824613b-51bc-39ef-9295-6bb29dfdb37d": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "68354305-e75d-30fd-ab65-abc19088db37": {
      "content": "-webkit-border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "6837c3b1-53a3-31df-8cc4-9f1d69594436": {
      "content": "if ${1}\n\t${0:${VISUAL}}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "683ddb05-157f-32b9-82f1-cc9336c2f4ab": {
      "content": "after cancel ${0:id or script}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afc": true
      },
      "source": "vim-snippets/snippets"
    },
    "684dcf0c-1b7a-3b73-aeff-4503d5f03125": {
      "content": "constructor(${1:params}) {\n\t${0}\n}",
      "doc": "Add default constructor in a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "constructor",
      "matches": {
        "con": true
      },
      "source": "vscode-javascript/snippets"
    },
    "684f2c13-f0df-3477-9e8f-368735d248b8": {
      "content": "\\path[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\path": true,
        "path": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68507409-e9c1-3a0e-a029-1743ac96eb3c": {
      "content": "<%= radio_button ${1:f}, :${2:field},  ${3:\"value\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "radio_button",
      "matches": {
        "rb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6852a902-eb71-344e-992a-5604d9e304db": {
      "content": "{% include '${0:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "68538135-6372-3b05-9994-d34f75f1bb32": {
      "content": "img(:src=\"'/path/to/images/' + ${1:fileName}\" alt=\"${2:altText}\")",
      "doc": "image source binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Image Source Binding",
      "matches": {
        "vsrc": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6855d127-241a-374e-844a-6a764276dac2": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "6857a190-5483-31e4-97a0-1b61cccf4c1e": {
      "content": "console.info(${1:object});",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleInfo",
      "matches": {
        "cin": true
      },
      "source": "vscode-javascript/snippets"
    },
    "6858c55b-2b7b-3578-8763-08bb818e4cf3": {
      "content": "$this->db->delete(${1:table}, ${2:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_delete": true
      },
      "source": "vim-snippets/snippets"
    },
    "686e2b8e-a074-303e-9b2e-626d60d9c356": {
      "content": "border-top-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      },
      "source": "vim-snippets/snippets"
    },
    "687407b4-73e1-3d51-a8a3-36b209166f64": {
      "content": "componentDidUpdate: (prevProps, prevState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentDidUpdate",
      "matches": {
        "componentDidUpdate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6883e2d6-d0fc-3f85-a4f9-73c570fe2e66": {
      "content": "cut(${1:x}, breaks = c(${2:${3:}, ${4:max(${1:x})}}))",
      "doc": "Divide Into Intervals",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cut",
      "matches": {
        "cut": true
      },
      "source": "vscode-R/snippets"
    },
    "68991a18-43f4-3c97-b7dc-a18380f68c13": {
      "content": "white-space: pre-wrap",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      },
      "source": "vim-snippets/snippets"
    },
    "68a2399a-aec5-3ff2-95ad-0efa863e52cc": {
      "content": "(Thread/sleep ${1})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sleep": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68a26a26-c2cf-3382-a2e3-32faaecab706": {
      "content": "class ${1} {\n\tconstructor(${2}) {\n\t\t${0:${VISUAL}}\n\t}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clac": true
      },
      "source": "snippets/javascript"
    },
    "68a6338f-3b50-370b-8f46-9b1a644204ef": {
      "content": "java.math.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.m": true
      },
      "source": "vim-snippets/snippets"
    },
    "68ac93bb-2a4c-3cb8-b180-a3103303dec4": {
      "content": "${1:pattern} {\n\t${2:#do something}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      },
      "source": "vim-snippets/snippets"
    },
    "68b0986c-db1d-36c7-be69-0ae790c80b08": {
      "content": "<dd>${1:TARGET}</dd>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68b2254e-5ff2-34ef-8fb9-2f29627319a1": {
      "content": "fixed (${1:#:type}* ${2:#:var} = ${3:#:adress}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "fixed () {}",
      "matches": {
        "fixed": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68b3f7ee-1f08-3909-8b93-f6ece35747dc": {
      "content": "case ${1:0}:\n\t${2}\n\tbreak;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "68ba0fca-062d-3f7e-aebd-67b56722207d": {
      "content": "else if (${3})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "68bf018d-b5f4-3191-8ddd-9c894fb9c3df": {
      "content": "echo \"${1:#:string}\";",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68c33352-4caa-3a92-99e1-b18cf9870027": {
      "content": "<http://${1:url}>",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<": true
      },
      "source": "vim-snippets/snippets"
    },
    "68c78188-1274-3b73-8332-d324bef308d0": {
      "content": "any? { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "any": true
      },
      "source": "vim-snippets/snippets"
    },
    "68c87444-2d6a-30ad-b041-fadf7680414f": {
      "content": "#!/usr/bin/env ruby\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "#!/usr/bin/env ruby",
      "matches": {
        "#!": true,
        "shebang": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68cee62a-2307-3e74-99bd-60cc7ea52569": {
      "content": "validates :${0:terms}, acceptance: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates .., acceptance: true",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/snippets"
    },
    "68e5b960-0b97-386d-a290-41bd1df560a4": {
      "content": "{-# OPTIONS_HADDOCK ${0:hide} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "haddock": true
      },
      "source": "vim-snippets/snippets"
    },
    "68e61c8d-257c-399d-adb8-1ef290f06ac0": {
      "content": "\\autocite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\autocite": true,
        "autocite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "68e6d8dc-2560-3f2c-92fa-3d8ca54afdd9": {
      "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docts": true
      },
      "source": "vim-snippets/snippets"
    },
    "68ee711a-231a-3c3e-b095-78828084978c": {
      "content": "border-fit overwrite",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "68f716d3-34ee-3878-8f93-185efe840e6f": {
      "content": "it \"${1}\" $\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "68fbc16d-91dc-3e61-a74d-d851e139583d": {
      "content": "loadVariables(${1:url}, ${2:target}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lv": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "69017b90-ce6d-352d-910f-3596922de245": {
      "content": "assert_same ${1:expected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "assert_same(..)",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/snippets"
    },
    "69039c40-7c59-3a1e-b2be-649eab175f84": {
      "content": "${1:deferred}.progress(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprog": true
      },
      "source": "snippets/javascript"
    },
    "690e77fd-03a5-3c6a-af29-15ec7684bbfe": {
      "content": "Main.@infiltrate",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "Infiltrator breakpoint",
      "matches": {
        "inf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "690ed011-451d-3df2-b236-4d0ddb5330aa": {
      "content": "belongs_to :${0:association}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bt": true
      },
      "source": "vim-snippets/snippets"
    },
    "691234ad-5517-394f-b30a-630da93df6fc": {
      "content": "\\begin{tikzpicture}[${1}]\n\t${2:TARGET}\n\\end{tikzpicture}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tikzpicture}": true,
        "tikzpicture": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "691460cb-678a-3a4b-b258-d3a1bf069854": {
      "content": "enter-active-class=\"$1\"$0",
      "doc": "enter-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-active-class",
      "matches": {
        "enteractiveclass": true,
        "vue enter-active-class": true
      },
      "source": "javascript/vue"
    },
    "692c5539-e84f-343e-a376-e9e77a575194": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State, props) => ${3:selectLogic}\n);",
      "doc": "Creates an NgRx Selector using props",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-selector-w-props",
      "matches": {
        "a-ngrx-create-selector-props": true,
        "angular ng rx create selector props": true
      },
      "source": "javascript/angular"
    },
    "693e8352-e7ba-3de3-bca1-8c35d7200278": {
      "content": "{% firstof $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "69456e3a-3301-3a19-8efb-d210c2f1550c": {
      "content": "${1:value_key}:\nrbac:\n  create: true\nserviceAccount:\n  create: true\n  name:\nimagePullSecrets: []\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rbac_values": true
      },
      "source": "vim-snippets/snippets"
    },
    "695088f9-573a-3758-8766-778bb3987cca": {
      "content": "${1:$foo}->set${2:Bar}(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$s": true
      },
      "source": "vim-snippets/snippets"
    },
    "695385fc-337b-3037-9657-fa88c1aff93f": {
      "content": "border-top: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "695713b8-91a2-3b0b-9971-0c9ef992c5c9": {
      "content": "place-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "695e5b04-2852-3943-ad71-555acbb0189f": {
      "content": "- (IBAction)${1:method}:(${2:id})sender;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibad": true
      },
      "source": "vim-snippets/snippets"
    },
    "69656050-5aab-3839-9ffe-2408bf8ef3ab": {
      "content": "font-stretch: condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "696b9f2f-9ff1-384f-8e0f-d4ee2154c2ff": {
      "content": "<%doc>\n\t${0:}\n</%doc>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "6970c0b9-694e-3ead-9ad0-77c320737606": {
      "content": "<svelte:self />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self",
      "matches": {
        "svelte self": true,
        "svse": true
      },
      "source": "javascript/svelte"
    },
    "6974a947-a9ae-356f-8a5d-0098c4c7e792": {
      "content": "position: absolute",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "697a06c0-51b0-3e18-a496-1945497fd836": {
      "content": "{%- render '${1:snippet}', ${2:variable}: ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renderwith-": true
      },
      "source": "vim-snippets/snippets"
    },
    "698646bf-26d8-36d7-a208-ebd52a91d777": {
      "content": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "698be5a3-3dac-3cbd-b480-1106a13b6e02": {
      "content": ".. warning:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "warning",
      "matches": {
        "warning": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6992aea8-f189-3764-bdb0-058ac8724f31": {
      "content": "{\n\t\"name\": \"Launch Angular\",\n\t\"type\": \"${1:edge}\",\n\t\"version\": \"${2:dev}\",\n\t\"request\": \"launch\",\n\t\"preLaunchTask\": \"${3:npm: start}\",\n\t\"url\": \"http://localhost:${4:4200}/\",\n\t\"webRoot\": \"${5:\\${workspaceFolder\\}}\"\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create launch config for Edge",
      "matches": {
        "a-launch-edge": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "6996d78b-ca2d-39fe-b49d-a43addfb0b03": {
      "content": "align-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "699bf646-b717-3a2e-aac8-203516aa1051": {
      "content": "for (${1:i} in ${2:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "69a32a05-7f39-3a6f-bc8b-ff16b5c1a003": {
      "content": "@phdthesis{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    school = {${4}},\n    year = {${5}},\n    memo = {address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@phdthesis": true,
        "phdthesis": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "69adcf49-a213-3d78-9740-23363dc389aa": {
      "content": "const (\n\t${1:NAME} ${2:Type} = iota\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... = iota )",
      "matches": {
        "iota": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "69b925c2-9cbe-366f-ad03-f75547872dc0": {
      "content": "<small>${0}</small>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "small": true
      },
      "source": "vim-snippets/snippets"
    },
    "69c20240-c138-34e0-ae67-db4fd605adbc": {
      "content": "member do\n\t${1:get :${2:action}}\n\t${3:put :${4:action}}\n\t${5:post :${6:action}}\n\t${7:delete :${8:action}}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "member routes",
      "matches": {
        "member": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "69cd868a-f80c-3df8-b41d-122e689e03a1": {
      "content": "IGNORECASE = ${1:1}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "IGNORECASE",
      "matches": {
        "ign": true
      },
      "source": "vim-snippets/snippets"
    },
    "69cff255-9d9d-30f8-ba0f-026c817884a4": {
      "content": "border-style outset",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "69d0be23-d5e1-3fe9-a2ee-dd8447561227": {
      "content": "<?php if (${1}): ?>\n\t${0:${VISUAL}}\n<?php else: ?>\n\t${2}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php if (condition): ?> ... <?php else: ?> ... <?php endif; ?>",
      "matches": {
        "ifeil": true
      },
      "source": "vim-snippets/snippets"
    },
    "69d16697-9528-3ed5-a4fc-1f321f1f802c": {
      "content": "if ${1:/* condition */} {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if else condition",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "69d1c924-79b4-3946-b953-efb30950e877": {
      "content": "pointLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pointLight": true
      },
      "source": "vim-snippets/snippets"
    },
    "69d583a9-077d-3a53-9c92-ea32ea62d0d2": {
      "content": "detect { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "det": true
      },
      "source": "vim-snippets/snippets"
    },
    "69d84ba8-870d-3089-b222-9de8fb58b2d9": {
      "content": "word-break: break-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "69dd3133-d2c6-3cb0-bae8-2b60f4524074": {
      "content": "border-fit: space",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      },
      "source": "vim-snippets/snippets"
    },
    "69ddcc57-cff5-322d-84fa-109ed9acb6bb": {
      "content": "${1:obj}.last('${1:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      },
      "source": "snippets/javascript"
    },
    "69dea1b9-beac-33bf-94be-9d97969ba299": {
      "content": "_.toInteger(${value})",
      "doc": "_.toInteger(3.2);\n// => 3\n\n_.toInteger(Number.MIN_VALUE);\n// => 0\n\n_.toInteger(Infinity);\n// => 1.7976931348623157e+308\n\n_.toInteger('3.2');\n// => 3\n\nConverts `value` to an integer.\n\n**Note:** This method is loosely based on\n[`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tointeger",
      "matches": {
        "lodash tointeger": true
      },
      "source": "javascript/lodash"
    },
    "69e0f21d-82f8-3c14-a3d2-5b37e0f11600": {
      "content": "export ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expt": true
      },
      "source": "vim-snippets/snippets"
    },
    "69e15972-f2d3-3f11-95ee-52ae65297587": {
      "content": "<xsl:with-param name=\"${1:name}\">${0}</xsl:with-param>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with-param": true
      },
      "source": "vim-snippets/snippets"
    },
    "69eb110e-fa26-3577-951f-14e7463f08f7": {
      "content": "await tick()",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tick",
      "matches": {
        "sv-tick": true,
        "svelte tick": true
      },
      "source": "javascript/svelte"
    },
    "69f527c8-546c-39ff-99cb-bbc8257a8cc9": {
      "content": "ortho(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${0:far});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ortho": true
      },
      "source": "vim-snippets/snippets"
    },
    "69f94c8a-4413-3f4c-ac08-aa8984c888e9": {
      "content": "border-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "69fd8b73-4c86-3a38-9821-9b5ca93db61c": {
      "content": "#import \"${1}}\"",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Imp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6a01093c-213f-3ca1-beb1-c0e1d710a9c6": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactArrowFunctionComponentWithPropTypes",
      "matches": {
        "rafcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "6a02ad7f-2852-3a1e-b56e-6cc4e2ea683b": {
      "content": "require('${1:module}');",
      "doc": "require",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "base require": true
      },
      "source": "javascript/base"
    },
    "6a0b78ab-3a1a-3e3e-af8a-d80f3e2371aa": {
      "content": "wilcox.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wil": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a15ca8c-5058-3d1c-b2f4-15cc1e1df0fc": {
      "content": "_.curryRight(${func}, ${arity})",
      "doc": "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(3)(1, _)(2);\n// => [1, 2, 3]\n\nThis method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-curryright",
      "matches": {
        "lodash curryright": true
      },
      "source": "javascript/lodash"
    },
    "6a20efa8-12e8-3b05-8ee7-1ee9cc322be1": {
      "content": "if [[ $${1:string} =~ ${2:^regexp.*} ]]; then\n\t${0}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "=~",
      "matches": {
        "match-regexp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6a37792e-31a2-3c31-bf5a-5a2fe8bf8745": {
      "content": "_.ceil(${number}, ${precision})",
      "doc": "_.ceil(4.006);\n// => 5\n\n_.ceil(6.004, 2);\n// => 6.01\n\n_.ceil(6040, -2);\n// => 6100\n\nComputes `number` rounded up to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ceil",
      "matches": {
        "lodash ceil": true
      },
      "source": "javascript/lodash"
    },
    "6a412963-9abd-3fa9-b5d6-4b47ec96c38a": {
      "content": "$this->shouldThrow(${1:'\\Exception'})->during${2:Method}(${3:'$arg'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldThrow('\\Exception')->duringXYZ($arg)",
      "matches": {
        "sthrowm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6a47de57-1489-3955-b2d0-db1460e689cc": {
      "content": "${1:map}.catch_all '*${2:anything}', controller: '${3:default}', action: '${4:error}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapca": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a489bcb-6b15-3da5-95b0-718fef8da857": {
      "content": "${1:obj}.removeProp('${2:property name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remp": true
      },
      "source": "snippets/javascript"
    },
    "6a49000d-1716-3df2-bd88-ca88254a4798": {
      "content": "${1:obj}.mouseup(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      },
      "source": "snippets/javascript"
    },
    "6a5e5597-3103-382d-a6dd-eccb751c0120": {
      "content": "public ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a5e7a02-a03d-3887-976f-ea7017340685": {
      "content": "<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\n\t${0:<!-- html... -->}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php foreach ($var as $key => $value): ?>  ... <?php endforeach; ?>",
      "matches": {
        "foreachkil": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a6999a4-734c-3f84-b863-3ae3ffc160cf": {
      "content": "do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a70191d-15aa-3945-a0f6-f42433569086": {
      "content": "| url_encode",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_encode": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a73fbce-fdbf-3ab3-859d-858acffe4c60": {
      "content": "t.date :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create date column",
      "matches": {
        "tcda": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6a770311-1d34-3ecd-92eb-3f379efc55ed": {
      "content": "outline: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a7b6aae-0dfc-300f-b318-dbde16090298": {
      "content": "font-smooth: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a8da7a0-3684-3bed-b596-5cc9a6e1fb1f": {
      "content": "param(${0:s});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a93a0c8-024a-3342-a4fd-03891c02e431": {
      "content": "this(${1:/*args*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "ctor (this)",
      "matches": {
        "this": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6a9500c2-ba1a-3c60-935b-9bd6ff736c29": {
      "content": "border-style dot-dash",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "6a9e43a5-eb7e-3e2e-a544-cb773cce35fe": {
      "content": "<q>${0}</q>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      },
      "source": "vim-snippets/snippets"
    },
    "6aa0ab6c-a739-3bdd-9bd0-096e9a7bfd5e": {
      "content": "<link rel=\"manifest\" href=\"${1:manifest.json}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "manifest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6aa20275-3451-3199-85f9-535bc3bf90ae": {
      "content": "library UNISIM;\nuse UNISIM.VCOMPONENTS.ALL;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "libx": true
      },
      "source": "vim-snippets/snippets"
    },
    "6aa2975c-c6b4-30ab-b622-60d6ba60fe93": {
      "content": "import React from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React",
      "matches": {
        "ir": true
      },
      "source": "snippets/javascript"
    },
    "6aaa1398-41ba-3efd-81b2-6b127c62b2df": {
      "content": "text-decoration: underline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "6aad41be-3457-3a11-928a-63d29bd7b48e": {
      "content": "&#x2190;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      },
      "source": "vim-snippets/snippets"
    },
    "6aafc448-4320-3ddc-9752-6e700b32fd99": {
      "content": "${1:obj}.wrap('${2:&lt;div class=\"extra-wrapper\"&gt;&lt;/div&gt;}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrap": true
      },
      "source": "snippets/javascript"
    },
    "6ab212a1-1ceb-31f3-9e8d-a2068fcdd294": {
      "content": "def __add__(self, other):\n\t${1:pass}\ndef __sub__(self, other):\n\t${2:pass}\ndef __mul__(self, other):\n\t${3:pass}\ndef __div__(self, other):\n\t${4:pass}\ndef __truediv__(self, other):\n\t${5:pass}\ndef __floordiv__(self, other):\n\t${6:pass}\ndef __mod__(self, other):\n\t${7:pass}\ndef __divmod__(self, other):\n\t${8:pass}\ndef __pow__(self, other):\n\t${9:pass}\ndef __lshift__(self, other):\n\t${10:pass}\ndef __rshift__(self, other):\n\t${11:pass}\ndef __and__(self, other):\n\t${12:pass}\ndef __xor__(self, other):\n\t${13:pass}\ndef __or__(self, other):\n\t${14:pass}\ndef __neg__(self):\n\t${15:pass}\ndef __pos__(self):\n\t${16:pass}\ndef __abs__(self):\n\t${17:pass}\ndef __invert__(self):\n\t${18:pass}\ndef __complex__(self):\n\t${19:pass}\ndef __int__(self):\n\t${20:pass}\ndef __long__(self):\n\t${21:pass}\ndef __float__(self):\n\t${22:pass}\ndef __oct__(self):\n\t${22:pass}\ndef __hex__(self):\n\t${23:pass}\ndef __index__(self):\n\t${24:pass}\ndef __coerce__(self, other):\n\t${25:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for emulating a numeric type",
      "matches": {
        "numeric": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ab5d460-70a6-3b81-8109-265d86be3443": {
      "content": "import { motion } from 'framer-motion'",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-import",
      "matches": {
        "framer-motion import": true
      },
      "source": "javascript/framer-motion"
    },
    "6abc2a4f-1f38-3b71-893a-941907c45901": {
      "content": "v-for=\"(${1:item}, ${2:index}) in ${3:items}\" :key=\"${4:index}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-for",
      "matches": {
        "vfor": true,
        "vue v-for": true
      },
      "source": "javascript/vue"
    },
    "6ac2c754-5a73-3e74-b17d-5780a564a996": {
      "content": "_.max(${array})",
      "doc": "_.max([4, 2, 8, 6]);\n// => 8\n\n_.max([]);\n// => undefined\n\nComputes the maximum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-max",
      "matches": {
        "lodash max": true
      },
      "source": "javascript/lodash"
    },
    "6ac3c629-da26-3abc-a9f7-349468fda4e2": {
      "content": "*ngIf=\"${1:expression};else ${2:templateName}\"",
      "doc": "Angular *ngIfElse",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngIfElse",
      "matches": {
        "a-ngIfElse": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "6ac8e5b7-de97-330c-9a99-4aebb6b3bc1c": {
      "content": "display: table;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ad35ee0-b111-3b32-91cf-a991877559a2": {
      "content": "{% macro ${1:name}(${2:args}) %}\n\t$3\n{% endmacro %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "macro",
      "matches": {
        "macro": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6adc806f-daa5-30b4-92d1-1b47c1de28d2": {
      "content": "try:\n\t# Short option syntax: \"hv:\"\n\t# Long option syntax: \"help\" or \"verbose=\"\n\topts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])\nexcept getopt.GetoptError, err:\n\t# Print debug info\n\tprint str(err)\n\t${3:error_action}\nfor option, argument in opts:\n\tif option in (\"-h\", \"--help\"):\n\t\t${0}\n\telif option in (\"-v\", \"--verbose\"):\n\t\tverbose = argument",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      },
      "source": "vim-snippets/snippets"
    },
    "6adfb239-26cf-33ff-8f98-82057d247f6b": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) {\n\t\tstate.${2:value} = ${3:payload};\n\t}\n}",
      "doc": "vuex mutation",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-mutation",
      "matches": {
        "vmutation": true,
        "vuex mutation": true
      },
      "source": "javascript/vuex"
    },
    "6ae6940a-7e69-323f-9c5a-2bf7e7899cb8": {
      "content": "_.meanBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.meanBy(objects, function(o) { return o.n; });\n// => 5\n\n// The `_.property` iteratee shorthand.\n_.meanBy(objects, 'n');\n// => 5\n\nThis method is like `_.mean` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be averaged.\nThe iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-meanby",
      "matches": {
        "lodash meanby": true
      },
      "source": "javascript/lodash"
    },
    "6aeaf4a7-0c55-3eab-958b-f1be547bea51": {
      "content": "align-content: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6aeb6554-3a62-32d5-94c3-13f7a44c75cb": {
      "content": "interface ${1} {\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6aef659b-12da-319e-a58a-e9a8917aab94": {
      "content": "scrollbar-base-color:       ${1:#CCCCCC};${2:\nscrollbar-arrow-color:      ${3:#000000};\nscrollbar-track-color:      ${4:#999999};\nscrollbar-3dlight-color:    ${5:#EEEEEE};\nscrollbar-highlight-color:  ${6:#FFFFFF};\nscrollbar-face-color:       ${7:#CCCCCC};\nscrollbar-shadow-color:     ${9:#999999};\nscrollbar-darkshadow-color: ${8:#666666};}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "scrollbar",
      "matches": {
        "scrollbar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6af48081-281a-306f-944c-f3b23fffc250": {
      "content": "internal ${1:int} ${2} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&|": true
      },
      "source": "vim-snippets/snippets"
    },
    "6af53ccf-9e9a-3058-a535-04db73db82ce": {
      "content": "<%text>\n\t${1:}\n</%text>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "text",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6af94685-3292-3a27-8110-80dc6f95dd5e": {
      "content": "howpublished = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "howpublished": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6afcb5d5-24b5-3487-b736-809633cba0d1": {
      "content": "File.open(${1:#:filename}, '${2:#:mode}') do |${3:io}|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.open(filename) do ... end",
      "matches": {
        "fileopen": true,
        "open": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6b0161aa-d424-3c87-a692-187478cf890a": {
      "content": "cursor ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b0452bc-d3ca-36e9-8fd2-bbcf67cf863a": {
      "content": "else if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b08fa79-d09b-3081-92fd-ddc1a0112999": {
      "content": "text-transform: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-transform",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6b09c757-35ec-3398-abc3-8ececb476ba2": {
      "content": "_.gte(${value}, ${other})",
      "doc": "_.gte(3, 1);\n// => true\n\n_.gte(3, 3);\n// => true\n\n_.gte(1, 3);\n// => false\n\nChecks if `value` is greater than or equal to `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-gte",
      "matches": {
        "lodash gte": true
      },
      "source": "javascript/lodash"
    },
    "6b0f3387-69bc-383c-a8a7-0402030bab4a": {
      "content": "while (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6b207da9-0a70-3ed5-8886-66957f3ff6b7": {
      "content": "console.groupCollapsed(\"${1:label}\");\n${0:${VISUAL}}\nconsole.groupEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.groupCollapsed",
      "matches": {
        "cgroupc": true
      },
      "source": "snippets/javascript"
    },
    "6b2481ac-1efa-329a-9ef4-d58eff64d20f": {
      "content": "should \"${1}\" in {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "should-scalatest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6b310327-a04f-38ce-98f3-62746c814c08": {
      "content": "self.${1:attribute} = $1",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "self.attribute = attribute",
      "matches": {
        "sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b343eb8-f3ae-381d-8a2f-86d5c1de54a1": {
      "content": "feat(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "feat conventional commit",
      "matches": {
        "feat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6b3501ea-6521-3c4b-bab3-a2bfa70d636b": {
      "content": "accept ${1}(${2}) do\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "accept",
      "matches": {
        "acc": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b3a9075-6644-336f-b78b-ffc595e78766": {
      "content": "border-style: wave;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b45f84f-6a9c-3ab3-a68b-4e6e2f3986a4": {
      "content": "{for $${1:var} in range(${2:rangeexpr})}\n\t$0\n{/for}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "for command",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6b556fae-062a-33c7-a8b2-efc2f8254a0a": {
      "content": "<c:choose>\n\t${0}\n</c:choose>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cchoose": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b5933e4-d5a8-33ca-bd78-2577de4e4646": {
      "content": "[${1:X} || ${2:X} <- ${3:List}${4:, gen}]",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "List Comprehension",
      "matches": {
        "||": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6b5b95ec-ccbb-32bc-aec3-3987bf6f457c": {
      "content": "${1:document}.querySelector('${0:CSS selector}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qs": true
      },
      "source": "snippets/javascript"
    },
    "6b5cc10d-06dc-375a-a67a-690039cac9fa": {
      "content": "if $${1:variable} {\n\t${2}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b5f434c-e515-3ec4-bef2-de94c14deb96": {
      "content": "padding 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b68f6db-db7e-3647-9eb4-286e665a4f7c": {
      "content": "${1:deferred}.fail(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dfail": true
      },
      "source": "snippets/javascript"
    },
    "6b695157-5305-31b6-babe-583e8c9dc8fc": {
      "content": "<%= link_to '${1:link text...}', controller: '${0:items}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lic": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b6ea3f4-2714-338d-aa5b-7c88f537f97c": {
      "content": "_.conforms(${source})",
      "doc": "var objects = [\n  { 'a': 2, 'b': 1 },\n  { 'a': 1, 'b': 2 }\n];\n\n_.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n// => [{ 'a': 1, 'b': 2 }]\n\nCreates a function that invokes the predicate properties of `source` with\nthe corresponding property values of a given object, returning `true` if\nall predicates return truthy, else `false`.\n\n**Note:** The created function is equivalent to `_.conformsTo` with\n`source` partially applied.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-conforms",
      "matches": {
        "lodash conforms": true
      },
      "source": "javascript/lodash"
    },
    "6b80e653-746c-3f03-a1b0-c9dcfed49f28": {
      "content": "$this->refresh();",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrf": true
      },
      "source": "vim-snippets/snippets"
    },
    "6b85e2fd-41af-377f-b17e-60b1e3400f2b": {
      "content": "case ${1}:\n\t${0}\n\tbreak;",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "case: break;",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6b8badc6-9818-3a5e-a72f-7e251357e66a": {
      "content": "removetags:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6b937558-773a-36a5-bfeb-960f3eeac53e": {
      "content": "if err != nil {\n  t.Fatalf(\"${1}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatalf(...) }",
      "matches": {
        "terf": true
      },
      "source": "gosnippets/snippets"
    },
    "6bae994e-3f0b-3276-94d5-eb59d5deef23": {
      "content": "text-indent ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bbc826b-0780-3595-bca7-87f5c4b8a0d5": {
      "content": "find(:all${1:, conditions: ['${2:${3:field} = ?}', ${5:true}]})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(:all)",
      "matches": {
        "fina": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6bbd58d1-3af7-3c94-8272-403891554904": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"sass\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with SASS",
      "matches": {
        "vbase-sass": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6bd05717-3efc-39b5-8490-99c395f4689e": {
      "content": "text-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bd2a17b-4c27-38be-bf24-6dc4724046bd": {
      "content": "\\\\stackrel{${1:above}}{${2:below}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\stackrel{}{}",
      "matches": {
        "stackrel": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bd5fa40-1ccb-3b74-b342-2d015b59705a": {
      "content": "font-emphasize: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bd69ba1-e121-3441-a887-06bbc3dbfdb8": {
      "content": "def __len__(self):\n\t${1:pass}\ndef __getitem__(self, key):\n\t${2:pass}\ndef __setitem__(self, key, value):\n\t${3:pass}\ndef __delitem__(self, key):\n\t${4:pass}\ndef __iter__(self):\n\t${5:pass}\ndef __reversed__(self):\n\t${6:pass}\ndef __contains__(self, item):\n\t${7:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for emulating a container type",
      "matches": {
        "contain": true
      },
      "source": "vim-snippets/snippets"
    },
    "6be22625-4270-37ca-ba84-60e5c3b75da0": {
      "content": "${1:obj}.clearQueue(${2:'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clearq": true
      },
      "source": "snippets/javascript"
    },
    "6be6b2e8-1b9f-3eda-9108-25d3e786f11d": {
      "content": "void loop()\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      },
      "source": "vim-snippets/snippets"
    },
    "6be7ee16-546e-3ed7-9b3d-070d20508247": {
      "content": "import PropTypes from 'prop-types';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import PropTypes",
      "matches": {
        "irp": true
      },
      "source": "snippets/javascript"
    },
    "6be9d76d-ad5c-3ec4-8c62-4b62f4128854": {
      "content": "for ${1:name} in [${2:start}..${3:finish}]\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "snippets/coffee"
    },
    "6bf3a67c-1d7d-3587-a48c-e8b6f3f3bad9": {
      "content": "Yii::t('${1:category}', '${2:message}',array(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yt": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bf9dae5-a853-3510-ad60-b65fd8e238cf": {
      "content": "_.unzipWith(${array}, ${iteratee})",
      "doc": "var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n// => [[1, 10, 100], [2, 20, 200]]\n\n_.unzipWith(zipped, _.add);\n// => [3, 30, 300]\n\nThis method is like `_.unzip` except that it accepts `iteratee` to specify\nhow regrouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unzipwith",
      "matches": {
        "lodash unzipwith": true
      },
      "source": "javascript/lodash"
    },
    "6bfa79c2-4c5d-30f5-9e5d-01880960352c": {
      "content": "border-style: groove",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "6bfef716-24d5-39d0-91e3-43feb84c54e7": {
      "content": "#include <boost/${1:shared_ptr}.hpp>",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binc": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c01fd46-3cac-3de5-9492-fd68b2826d5a": {
      "content": "refute_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfn": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c02f993-6c65-3884-9469-bbd00c8bd0af": {
      "content": "static if(${1}) {\n\t${2}\n} else {\n\t${3}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sife": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c134689-3b84-39c8-abe0-e388060544f6": {
      "content": "display: ${1:table/inline-table/table-row-group/table-header-group/table-footer-group/table-row/table-column-group/table-column/table-cell/table-caption};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: table-types (display)",
      "matches": {
        "display": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6c29edb4-11a9-354b-b5e4-d186552aeab9": {
      "content": "visibility hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c3699d9-a2ad-3e58-87bc-0d166a00278a": {
      "content": "def ${1:mname}(self, ${2:arg}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c3b030c-254b-381b-aa9b-243e26360850": {
      "content": "${1:ModelName}::model()->findAllByAttributes(array('${2:attributeName}'=>${3:attributeValue}), ${4:condition}, array('${5:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindaba": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c503433-aca0-3d44-8139-a3a2a8dbd770": {
      "content": "overflow-style auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c53e913-dc6d-3b97-a94f-8d4dd90d5ee5": {
      "content": "with (${1:#:target});\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6c5503bf-f784-3498-8477-16df0a0ce7c8": {
      "content": "printf(\"${1:#:string}\\n\"${2:, });",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6c551bc3-fdc1-30b2-bdfa-2ba1a4a2c50e": {
      "content": "form_open(\"${1:action}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_open": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c58f942-2dfb-37a5-9606-77ff7d9044aa": {
      "content": "it { should allow_value(${1}).for :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isav": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c622340-5a2d-3557-b8fa-774374c1ca6e": {
      "content": "url = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6c63f66b-8590-31a5-8471-063c4335f46e": {
      "content": "{% regroup ${1} by ${2} as ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c643387-eb78-3b3f-b8b0-45b5212ae84a": {
      "content": "\\[${1:#:expression}\\]${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\[ expression \\]",
      "matches": {
        "\\[": true,
        "mathenvb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6c652561-2d0c-3df3-a27c-ebbcf87571ff": {
      "content": "place-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c65e515-7648-33ba-a151-d7de2fa27f00": {
      "content": "<img src=\"${1}\" alt=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c6d8695-3d0b-3b8b-9fe2-e048ede279aa": {
      "content": "set datafile separator '${1:#:separator}'",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set datafile separator 'separator'",
      "matches": {
        "datasep": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6c726716-cd3a-34d9-a176-0ebbc31ac025": {
      "content": "justify-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c76cfb5-d386-3dbd-8378-49dea6a852a5": {
      "content": "xhr :put, :${1:update}, id: ${2:1}, ${3:object}: ${4:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xput": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c7b1eb4-1d00-3c0f-a89a-fafd616e199b": {
      "content": "console.groupEnd();",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroupEnd",
      "matches": {
        "cge": true
      },
      "source": "vscode-javascript/snippets"
    },
    "6c8560fc-c7ec-3f40-b4fc-b9944d3f0322": {
      "content": "${1} ? ${2} : ${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c892f10-7820-3fbd-bd7a-b620145a2d3a": {
      "content": "_.pullAll(${array}, ${values})",
      "doc": "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pullAll(array, ['a', 'c']);\nconsole.log(array);\n// => ['b', 'b']\n\nThis method is like `_.pull` except that it accepts an array of values to remove.\n\n**Note:** Unlike `_.difference`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullall",
      "matches": {
        "lodash pullall": true
      },
      "source": "javascript/lodash"
    },
    "6c8c4ab2-dc72-3484-bff2-25147cfe5cb8": {
      "content": "dictsortreversed:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6c8f32e9-9b45-35b3-b2b3-33694b69a0ad": {
      "content": "@OneToOne\n${1}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c8f9b5a-1145-3e6c-9578-28f6de57a3c7": {
      "content": "content: close-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      },
      "source": "vim-snippets/snippets"
    },
    "6c9c6cab-8af2-39ba-9aec-37af54d564c6": {
      "content": "while(${1:/*condition*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "while (wh)",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6c9e8c3f-5bf7-32a3-9aa7-85d2710b9042": {
      "content": "<th>${1}</th>\nth+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th+": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ca11037-2984-34df-9af7-0faee741cf2a": {
      "content": "(apply ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ca191c9-562f-366d-acdf-2bdc9384d3a7": {
      "content": "${1:public} ${2:String} get${3:}(){\n\treturn this.${0:};\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cab39b7-236d-3131-9c33-454799435443": {
      "content": "${1:https://www.example.org}[${2:Text}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "External link",
      "matches": {
        "extlink": true,
        "link": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6cace802-09c0-379b-8c1b-4975f7b21057": {
      "content": "${1:obj}.prependTo('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prependto": true
      },
      "source": "snippets/javascript"
    },
    "6cae0fdb-ac65-3896-8961-909447dc1b08": {
      "content": "${1:obj}.unload (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unload": true
      },
      "source": "snippets/coffee"
    },
    "6cb63256-5c42-3a49-87b2-fa5303b17485": {
      "content": "wont_include ${0:what}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wi": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cb9e850-5dc5-3354-9917-abaf0f009099": {
      "content": "grid-auto-columns: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cc001e3-4354-373a-a7ae-d57abec5137c": {
      "content": "<h1 class=\"${1}\">${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1.": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cc02d1b-0ce3-3924-bb2f-8b9e48a71a37": {
      "content": "${1:app}.put('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express PUT",
      "matches": {
        "eput": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6cc8a106-b225-3b30-99b4-625a95988004": {
      "content": "defer ${0:func}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer",
      "matches": {
        "df": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cc91d01-e6e1-3b9f-aa61-1053512cf0f4": {
      "content": "@{ ${1:hash}  }{ ${0:array} }",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hslice": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ccc140a-2501-3fca-a5ef-615a09f93533": {
      "content": "createReader(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "createReader": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cce562d-c9de-33fc-9a35-be1f7836bf3b": {
      "content": "background-position-x: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cd11513-21ff-31b2-aa0b-84aa6020460f": {
      "content": "afterAll(() => {\n\t$0\n});",
      "doc": "afterAll function is called once after all specs",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-afterall",
      "matches": {
        "aa": true,
        "jest afterall": true
      },
      "source": "javascript/jest"
    },
    "6cd2b109-9265-3529-a64e-7f562d09ff71": {
      "content": "display: table-cell",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ce72f73-54af-337b-82b1-0b59da4ed624": {
      "content": "func (${1:receiver} ${2:type}) ${3:funcName}(${4}) ${5:error} {\n\t${6}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "method",
      "matches": {
        "fum": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ce801a6-3617-3cd7-abcc-95a27e1f5285": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!');\n\t},\n};",
      "doc": "vue mixin",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Mixin",
      "matches": {
        "vmixin": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6ce84f27-202b-36b6-ab54-e77339c063ff": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-hoc",
      "matches": {
        "hoc": true,
        "react hoc": true
      },
      "source": "javascript/react"
    },
    "6cf01f9d-f523-3d47-83b7-df27a3681593": {
      "content": "lmObj <- lm(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, na.action = ${6:na.action})\nsummary(lmObj)",
      "doc": "Fit a linear model",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Linear model",
      "matches": {
        "lm": true
      },
      "source": "vscode-R/snippets"
    },
    "6cfab6b3-b82d-3d11-9149-129c3e10a3a4": {
      "content": "crit(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crit": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cfbbe2d-b4f4-3128-9ea8-807ff6c1056a": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.$1;\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vgetters": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cfc164f-65a4-30f1-b7da-3bd318161272": {
      "content": "NSMutableArray ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsma": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cfea58c-a862-3057-98ca-874e01afb355": {
      "content": "<dfn>${0}</dfn>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfn": true
      },
      "source": "vim-snippets/snippets"
    },
    "6cffc2ca-7ed5-33c9-8e4f-2cf6f818ac0d": {
      "content": "<input v-model=\"${1:data}\" type=\"text\" />",
      "doc": "v-model directive",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-model Directive",
      "matches": {
        "vmodel": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6d01a7c2-57ff-3442-896e-5f9ee40e5814": {
      "content": "border-corner-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d04a275-7aa7-36f0-876d-94102a8b3f10": {
      "content": "<ul class=\"${1}\">\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul.": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d04b631-e837-32bd-b5b1-9476393a8972": {
      "content": "{{ $1 }}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "variable",
      "matches": {
        "{{": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6d0ba3c6-f4c9-311e-b3fe-69e5079fa4e0": {
      "content": "border-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d13cbcd-8a0e-3691-be2a-e3e9c631f5fd": {
      "content": "foreach(${1:/*elem*/}; ${2:/*range*/})\n{\n\t${VISUAL}$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach (fore)",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6d189a92-d09f-3bda-9694-620fa0431ff0": {
      "content": "border-length: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d21e268-4a2e-305d-96a9-134039f85380": {
      "content": "@moduledoc ~S\"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdocs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d2564be-952a-38ca-850b-828bda4f9d09": {
      "content": "flex-basis: ${0:auto};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d362212-f2f0-30bd-88d5-977e900d0d2d": {
      "content": "import React, { PureComponent } from 'react'\nimport { Text, View } from 'react-native'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativePureComponent",
      "matches": {
        "rnpc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "6d4932c4-4a07-3562-ad95-32c2651ac69f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\n\nexport default {\n\tsetup () {\n\t\tconst state = reactive({\n\t\t\t${0:count}: ${1:0},\n\t\t})\n\t\n\t\treturn {\n\t\t\t...toRefs(state),\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API Reactive",
      "matches": {
        "vbase-3-reactive": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "6d4d486a-c860-3911-9718-012865b436b6": {
      "content": "class ${1} extends ${2} {\n\t${3}\n\tconstructor(public ${4}: ${5: any}) {\n\t\t${6}\n\t}\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts class extends",
      "matches": {
        "tclax": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d4f180c-e1fd-3e83-b603-1348f4673cb7": {
      "content": "let!(:${1:object}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let!": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d51eb5e-dc1f-3480-9807-4f633a362e74": {
      "content": "background-origin: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d532b17-a48e-3092-9733-bed8438a0717": {
      "content": "echo \"${0:TARGET}\" 1>&2\nexit 1",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abort": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6d5be458-353f-379c-99b3-4a2c8fddae30": {
      "content": "(fun ${1:x} -> ${2:x})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "anonymous function",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6d5d157b-0ac2-361c-a0c0-b0738464568d": {
      "content": "select do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seld": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d79ee81-9a6e-36d0-876a-b954f9a8623d": {
      "content": "font-smooth: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d7dcc4a-02cb-37d8-aa06-939b407c3354": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d7de5d5-60e9-38a8-af0d-0c35657f641f": {
      "content": "render partial: '${1:item}', object: ${0:@$1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpo": true
      },
      "source": "vim-snippets/snippets"
    },
    "6d903036-3c52-340a-85e2-e7915bea47c4": {
      "content": "${1:deferred}.resolveWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dresw": true
      },
      "source": "snippets/javascript"
    },
    "6d91f607-b411-38de-988c-554fe82def6b": {
      "content": "match ${1:TARGET} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6da5930a-866b-3269-8db3-db0c3b2f1914": {
      "content": "__LINE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "LINE": true
      },
      "source": "vim-snippets/snippets"
    },
    "6dac0cc7-b7a5-3028-987a-242e073f545c": {
      "content": "do {\n    ${0:TARGET:code}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true,
        "do_while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6db829f2-ee52-3f8b-8704-9ffa65e59093": {
      "content": "- (id)init\n{\n\tif (self = [super init]) {\n\t\t${0}\n\t}\n\treturn self;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      },
      "source": "vim-snippets/snippets"
    },
    "6db939e5-187f-3950-a47b-8b83bdc60089": {
      "content": "\\\\label{${1:eq:}${2:fig:}${3:tab:}${0}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\label",
      "matches": {
        "lab": true
      },
      "source": "vim-snippets/snippets"
    },
    "6db96756-1308-3011-9d33-02b46d3c8c9b": {
      "content": "HashSet${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hset": true
      },
      "source": "vim-snippets/snippets"
    },
    "6dc1d308-ff62-3bcf-913b-15c73bdf7c06": {
      "content": "on:${1:eventname}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-forward",
      "matches": {
        "svelte on event foward": true,
        "svon-foward": true
      },
      "source": "javascript/svelte"
    },
    "6dc43c90-d1fb-3ea8-9093-6f831e4dd7b8": {
      "content": "-ms-filter 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      },
      "source": "vim-snippets/snippets"
    },
    "6dd12856-5dff-38df-a05f-b858cadc38d1": {
      "content": "_.sumBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.sumBy(objects, function(o) { return o.n; });\n// => 20\n\n// The `_.property` iteratee shorthand.\n_.sumBy(objects, 'n');\n// => 20\n\nThis method is like `_.sum` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be summed.\nThe iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sumby",
      "matches": {
        "lodash sumby": true
      },
      "source": "javascript/lodash"
    },
    "6ddd8a0f-03e7-3091-bc47-8a6629a794ec": {
      "content": "list-style-type upper-roman",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      },
      "source": "vim-snippets/snippets"
    },
    "6de26f18-08bf-392a-9007-e5fbc65a72bf": {
      "content": "_.sum(${array})",
      "doc": "_.sum([4, 2, 8, 6]);\n// => 20\n\nComputes the sum of the values in `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sum",
      "matches": {
        "lodash sum": true
      },
      "source": "javascript/lodash"
    },
    "6deb33cc-e7b2-31ca-8042-764481388d5b": {
      "content": "{% with ${1} as ${2} %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "6df0753a-92d3-3e4c-9e50-f7d7308ec4b5": {
      "content": "list",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "List",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "6dfa1942-2e54-351b-b4bd-294fda769190": {
      "content": "bind:group={${1:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-group",
      "matches": {
        "svbind-group": true,
        "svelte bind group": true
      },
      "source": "javascript/svelte"
    },
    "6e023d77-b616-361d-a036-8665b71ba8f8": {
      "content": "padding-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e07eb69-9e43-3e99-8585-d4db9b0f2014": {
      "content": "cursor: move",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e0c1625-f8ae-3f7c-9b8c-47641ed0532b": {
      "content": "z-index: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e134962-2043-3f0d-8307-f2b769df0f28": {
      "content": "border-right-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-width: size (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6e185ce4-1ed1-38ec-9600-253c991916eb": {
      "content": "message(WARNING \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(WARNING \"...\")",
      "matches": {
        "warning_message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e258976-8b17-393c-b4aa-cdff87ed8769": {
      "content": "#[derive(${1:Debug})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[derive(..)]",
      "matches": {
        "der": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e26d133-427e-3bd6-a414-8ecdbe975513": {
      "content": "vmap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vm": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e2ccc94-2687-3e49-8b2c-1e23992e0ab1": {
      "content": "${1:ModelName}::model()->countBySql(${2:sql},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycountbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e2e83e5-5475-325c-99f5-df968b4180a3": {
      "content": "if\n\t${1:guard} ->\n\t\t${0:body}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e319498-f6fc-3733-b22e-f94c2e12e547": {
      "content": "with timeout ${1:#:number} seconds\n\t${0:TARGET}\nend timeout",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "timeout": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e4a3047-be46-3c00-8009-1fd32ff2b1a7": {
      "content": "\\begin{theindex}\n\t${1:TARGET}\n\\end{theindex}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{theindex} \\theindex": true,
        "theindex": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e4a87cf-15ac-3bed-b407-381e5982e471": {
      "content": "outline: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true,
        "outline": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e57c8b9-9730-3638-9f5d-8c4ba3f2befc": {
      "content": "order('${0:field}')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oa": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e63b460-7c3d-3dbe-b787-1acd0016a3cc": {
      "content": "display: table-footer-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e6b6324-5837-3bf1-ab60-368c82c78ab8": {
      "content": "use lib qw{ ./t/lib };",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tlib": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e75864d-1298-35b9-9ab8-4c02cecdd90d": {
      "content": "-webkit-border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e78b26f-af77-330f-b5dc-9ea3dfcb661b": {
      "content": "($2 *)calloc(${1:N_MEMBERS}, sizeof(${2:TYPE}));\n${0}\nfree(${3:MEM});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "calloc(n, size)",
      "matches": {
        "calloc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e794abc-342d-3ef2-b5af-a2fd6eea1593": {
      "content": "font-weight: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e7a067c-11fc-36b4-8920-b55b717f09c8": {
      "content": "elsif ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e7d2d5f-49e3-374d-bda4-c06e704fed65": {
      "content": "else if ${1:condition}\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e951db3-d75e-33d0-9fe5-9a6687ea1d10": {
      "content": "@param ${1:#:var} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6e952914-4b8f-3453-a86f-48338332337b": {
      "content": "?assertEqual(${1}, ${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aseq": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e96fda1-9afb-363b-acde-72d0d2850eea": {
      "content": "white-space: pre-line",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6e985c89-737f-3f23-9bfb-ca47c0b84c35": {
      "content": "grid-row-start ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ea40bc3-b798-377a-a58b-ecc41dc36cfd": {
      "content": "orphans: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ea5b04a-6ac2-306b-ad99-7d06d076bb1e": {
      "content": "background-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      },
      "source": "vim-snippets/snippets"
    },
    "6eae4cc0-8ae5-3002-803b-395a450222d9": {
      "content": "const ${1:packageName} = require('${1:package}');$0",
      "doc": "Require a package to const",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "requireToConst",
      "matches": {
        "req": true
      },
      "source": "vscode-javascript/snippets"
    },
    "6eaeedff-30f2-32bd-a918-03190bc2e9ff": {
      "content": "var ${1} = ${2};",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "6eafa437-06c8-3ea1-81f5-8e2e61fe5dba": {
      "content": "<%= password_input ${1:f}, :${2:password} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "password_input",
      "matches": {
        "pi": true
      },
      "source": "vim-snippets/snippets"
    },
    "6eb57cb3-26af-3e46-b2a9-d3c08cbde6d5": {
      "content": "interface ${1} {\n\t${2}: ${3:any};\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "6eb8325d-5aa4-3853-8119-e89ed2b8ea78": {
      "content": "(if (not ${1})\n\t(let (${2})\n\t\t${3})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ebb7f84-9483-3a39-bdb8-d154b95fbb7c": {
      "content": "clip: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ebf4669-bcfd-3883-854e-3b75cc1479c2": {
      "content": "${1:a} <- ${0:m a}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<-": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ec6c564-612f-3e83-a421-86a9bca6ab3f": {
      "content": "for ${1:i} in 1 .. ${0:l_res}.count loop\n\tpipe row( $2($1) );\nend loop;\nreturn;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpipe": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ec76001-6955-37eb-9d6c-e0fa824d342f": {
      "content": "reduce(Array.new) { |${1:arr}, ${2:a}| $1.push(*$2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flao": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ed6509f-12aa-387f-a354-30edded47a3f": {
      "content": "echo CHtml::ajaxButton('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajb": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ef349c2-4c97-3bf6-96cc-4192ce4a1013": {
      "content": "$this->assertArrayHasKey(${1:$key}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArrayHasKey($key, $array)",
      "matches": {
        "ashk": true
      },
      "source": "vim-snippets/snippets"
    },
    "6ef59bf7-402b-3c3a-abf8-3952ff2cbcb5": {
      "content": "where\n\t${1} = ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "where": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f09f56d-0bcd-3f76-b946-22502deb705e": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${0:raise $3}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f1ad0fe-5cd6-3311-8795-270b641824f9": {
      "content": "\\$_COOKIE['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cookie": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6f1db3ad-22f0-3796-8d31-9087351361c0": {
      "content": "fmt.Errorf(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Errorf(...)",
      "matches": {
        "fe": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "6f23fdc2-652b-3146-842d-eb3d7c71618a": {
      "content": "Serial.println(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sl": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f28fa8e-f002-385a-80ee-03f721c9671b": {
      "content": "func Test${1} (${2:t *testing.T}) {\n  for i := 0; i < ${3:t.N}; i++ {\n    ${4}\n  }\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func Test... (t *testing.T) { ... }",
      "matches": {
        "funcTest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6f2d0220-e390-33a3-aa55-8071f35be621": {
      "content": "font-style: italic;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f2ea9f7-30e6-35cc-88fb-274d60993efa": {
      "content": "font-emphasize-position: before;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f3443a6-e639-338a-9766-dfd11b6f8a2f": {
      "content": "#include <stdio.h>\nint main(int argc, char* argv[])\n{\n    puts(\"hello, world!\");\n    return 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6f34a077-97f3-32f6-b6cd-1a0c71e9f0b9": {
      "content": "const $1 = $2 => dispatch($3);",
      "doc": "Redux dispatch hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-dispatch-hook",
      "matches": {
        "redux dispatch": true,
        "rxd": true
      },
      "source": "javascript/redux"
    },
    "6f413939-f966-3572-8a7c-847736193890": {
      "content": "border-right-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-width": true,
        "brw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6f46332c-ecbe-3748-9e84-5a879c9c70e2": {
      "content": "{\n\t\"type\": \"blog\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_blog": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f487bc3-0255-31e9-aaa5-e6c023657905": {
      "content": "Yii::trace('${0:msg}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ytrace": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f4d4c64-7f06-356a-a49f-d239ff9141d4": {
      "content": "elsif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true,
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6f5371c6-82fa-3cc8-bfc0-fd4e863d2266": {
      "content": "ggplot(${1:data}, aes(${0:aesthetics}))",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ggp": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f6088cb-f743-3146-85dd-bf90e7a40d03": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      },
      "source": "vscode-react/snippets"
    },
    "6f698779-659f-36a8-b908-89f46014685f": {
      "content": "left: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f7ddcef-cc2e-3701-8993-11f081eba4dd": {
      "content": "@moduledoc \"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdoc": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f84436a-3128-3886-a29f-7c3cbb9f2a4f": {
      "content": "char ${1:m}${2: = \"}${0:char\"};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f88583d-fcc6-36b2-888e-f4f26e2ce761": {
      "content": "fun ${1:name}(${2}): ${3:String} {\n\t${4}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f88c26b-0dab-3476-b1b6-0268386969ee": {
      "content": "echo CHtml::tag('${1:tag}',array('${2:optionName}'=>${3:optionValue}),${4:false},${0:true});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yht": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f8b2470-4bb2-3dc4-b5eb-1278b93eb703": {
      "content": "let (${1:tx}, ${2:rx}): (Sender<${3:i32}>, Receiver<${4:i32}>) = channel();",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Declare (Sender, Receiver) pair of asynchronous channel()",
      "matches": {
        "chan": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f923a48-9496-3fe2-b022-e2dc7a1422eb": {
      "content": "${1:deferred}.notifyWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotifyw": true
      },
      "source": "snippets/coffee"
    },
    "6f947c3d-e8e9-32a7-9906-cb00722f39cb": {
      "content": "$this->session->userdata(\"${1:item}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_userdata": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f98ae71-44f0-36af-9315-ebc6899acbd9": {
      "content": "function ${2:function_name}(${3})\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f9e7189-472a-36b7-9ee6-7c10065793a5": {
      "content": "border-fit: space;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      },
      "source": "vim-snippets/snippets"
    },
    "6f9ffea7-5b48-3434-8020-c12e6fc58855": {
      "content": "<syntaxhighlight lang=\"${1}\">\n${2}\n</syntaxhighlight>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6fa43644-fbff-3a34-81f4-f0571c90cf5d": {
      "content": "<output>${0}</output>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "output": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fa5fa5c-154a-3371-be19-33320b8fe424": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fb50104-5a6c-3feb-8e65-e54e8a498b47": {
      "content": "@property (${1:retain}) ${2:NSSomeClass} ${3:*$2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fbe4326-0b87-3f43-be35-8510ca0af24f": {
      "content": "LOGICAL",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fc60e07-7797-312e-8381-543b6cc97264": {
      "content": "length_is:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6fcb6a0a-4e06-349e-a795-c0248ec083b1": {
      "content": "result",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "result",
      "matches": {
        "rs": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fd227c7-6cfb-3671-ad8c-ec9fa9d8ee0b": {
      "content": "-\n-\n-\n-",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6fe3d15b-0add-37bb-8c30-cf428b6651f2": {
      "content": "module.exports = {\n\tcss: {\n\t\tloaderOptions: {\n\t\t\t${1:sass}: {\n\t\t\t\tdata: `${2:@import '@/styles/_variables.scss';}`\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "vue.config.js",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-vue-config-js-import",
      "matches": {
        "vconfig": true,
        "vue vue.config.js import": true
      },
      "source": "javascript/vue"
    },
    "6fe3e6b8-02fa-38ac-9246-6a59068c8892": {
      "content": "Execute Javascript    ${1:${code line 1}}    ${2:${code line 2}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Execute Javascript",
      "matches": {
        "ej": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "6fe6417d-2d74-33c1-9c45-315cc38594c0": {
      "content": "= mail_to ${1:email_address}, ${2:name}, :subject => ${3}, :body => ${4}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mts": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fe89313-ca42-3cef-923a-08ed5001480d": {
      "content": "val ${1:fn} ${2}: fn ${3:'a} -> ${4:'a}\nlet $1 ${5} =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fe95ae7-e8e2-3ec4-a356-15b66a6da526": {
      "content": "{ ${1:#capture}(${2:#:arguments}) -> ${3:Void} in\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "{ (...) -> Type in ... }",
      "matches": {
        "closure": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "6fe9b5dc-7d53-3e98-816d-ee9fbe57d4f1": {
      "content": "abstract class ${1:name}${2:(arg)}${3: extends }${4: with} {\n\t${5:override def toString = \"$1\"}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abstract": true
      },
      "source": "vim-snippets/snippets"
    },
    "6fecfcdf-dbef-321e-b820-f493532dc0f3": {
      "content": "number.truncate()",
      "doc": "number.truncate(): Schema\n\nTransformation that coerces the value to an integer by stripping off the digits\nto the right of the decimal point.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-truncate",
      "matches": {
        "yup number truncate": true
      },
      "source": "javascript/yup"
    },
    "700a0889-baff-324d-953d-5bd063598097": {
      "content": "${1:obj}.append('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      },
      "source": "snippets/coffee"
    },
    "70119d51-900c-39d4-a635-dae2e6c14300": {
      "content": "{% regroup ${1} by ${2} as ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "701976d7-9a8c-385d-b035-dff0c5e8ce3d": {
      "content": "{% for ${1:#:value} in ${2:#:list} %}\n\t${0:TARGET}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% for ... in ... %} ... {% endfor %}",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "701c9f69-4539-39b4-bbb3-351b57c51363": {
      "content": "${0:obj}.toArray()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toarr": true
      },
      "source": "snippets/javascript"
    },
    "701cc7e8-58e5-318d-b838-69475adef70a": {
      "content": "dictsort:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      },
      "source": "vim-snippets/snippets"
    },
    "701d9e20-e16a-337e-97c4-c67c24b8017c": {
      "content": "${1:obj}.offset()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      },
      "source": "snippets/javascript"
    },
    "70257719-e790-3938-a172-96c160d3e7f6": {
      "content": "_.isObject(${value})",
      "doc": "_.isObject({});\n// => true\n\n_.isObject([1, 2, 3]);\n// => true\n\n_.isObject(_.noop);\n// => true\n\n_.isObject(null);\n// => false\n\nChecks if `value` is the\n[language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\nof `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isobject",
      "matches": {
        "lodash isobject": true
      },
      "source": "javascript/lodash"
    },
    "702582b4-c297-3502-9e68-1a3a16646c29": {
      "content": "render layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7031fa80-b390-3bee-96f2-b2717d2c2bd2": {
      "content": "@protected",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@protected",
      "matches": {
        "@pro": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "70435cb4-5546-36fb-af6e-fa86513d5ffd": {
      "content": "${1}:\nfor ${2:I} in ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for",
      "matches": {
        "named_for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "70455f85-43e0-3937-958a-98ddface1d9a": {
      "content": "text-emphasis: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "704adf0c-30b8-3dad-ac4a-867d20b609f2": {
      "content": "align-self: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "704bfa55-3bd6-3e6d-b142-e8dcd56b9b0d": {
      "content": "content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "705d1c0a-1767-3f5b-a2e2-3701f21f8a55": {
      "content": "function __construct(${1})\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "construct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7062cf08-70b6-3614-97b5-2ac608825ed1": {
      "content": "display: table-column-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      },
      "source": "vim-snippets/snippets"
    },
    "70652e02-303a-3d1b-8b94-eaff18614762": {
      "content": "$this->db->from(\"${1:table}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-from": true
      },
      "source": "vim-snippets/snippets"
    },
    "706a9061-19b2-3900-a004-f4c251bf1631": {
      "content": "\\textmd{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textmd": true,
        "textmd \\textmd{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "706cd248-d4a4-32de-8a06-729207b62730": {
      "content": "$this->markTestIncomplete(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->markTestIncomplete()",
      "matches": {
        "marki": true
      },
      "source": "vim-snippets/snippets"
    },
    "7070f26c-afe7-31df-9d7c-69bd3d38078a": {
      "content": "content open-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      },
      "source": "vim-snippets/snippets"
    },
    "707147f7-1eaa-37d6-9554-3d280ac377df": {
      "content": "if (${1:#:condition}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7071926a-de05-3cdd-8583-0d5c0c1a8408": {
      "content": "public import",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimp": true
      },
      "source": "vim-snippets/snippets"
    },
    "70734391-2ada-3f78-bf78-8b6db9f286fe": {
      "content": "${1:FIELDNAME} = forms.MultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "MultipleChoiceField",
      "matches": {
        "fmuchoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "70738e6b-e506-326a-8d82-b8f23860467e": {
      "content": "defp ${1:name}(${2:args}) when ${3:guard} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defpw": true
      },
      "source": "vim-snippets/snippets"
    },
    "7074d0c7-0caa-3e52-83f1-6dbf107fd567": {
      "content": "[${1}](${2})${3}{ ${4:TARGET} }${0:;}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "[](){}",
      "matches": {
        "lambda": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7075d33b-447f-376d-b9ed-de37bccfcd02": {
      "content": "verify only: [:$1], session: :user, params: :id, redirect_to {:action: '${2:index}'}\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "verify -- redirect",
      "matches": {
        "verify": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "707a91e7-6b75-3220-ac37-6e877eb34269": {
      "content": "<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@page": true
      },
      "source": "vim-snippets/snippets"
    },
    "707cd371-2940-3c0e-b371-d54f502de8ba": {
      "content": "page-break-before auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "707f3883-aa99-3f1f-a623-054114c7be40": {
      "content": "finally {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "finally {}",
      "matches": {
        "fin": true,
        "finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7082d591-14b1-35ce-8b5d-eb8554425a42": {
      "content": "flex: ${1:0} ${2:1} ${0:auto};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fx": true
      },
      "source": "vim-snippets/snippets"
    },
    "708ba6c2-deba-367c-b28d-0753aa7df7e3": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "708fa3a1-de31-39ba-8501-fa6f9b733826": {
      "content": "cursor: help",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      },
      "source": "vim-snippets/snippets"
    },
    "70a27c68-fa8b-3a25-a7d4-c07ff09ecea3": {
      "content": "local ${1:x} = ${0:1}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "local x = 1",
      "matches": {
        "local": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "70a2f73a-83d3-3965-b6ab-fcba3c7f8798": {
      "content": "static public final String ${1:var} = \"${2}\";",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cos": true
      },
      "source": "vim-snippets/snippets"
    },
    "70a3293b-d21f-3b1a-84e8-7d13cb6bda97": {
      "content": "if ${1:TARGET}\nthen ${2}\nelse ${3}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "if..then..else",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "70ac3d59-4cc0-3415-a357-6d7ff414e0b1": {
      "content": "border-style: solid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "70b83453-0c23-31ff-8d5c-006a13aa281d": {
      "content": "local ok, err = pcall(${1:your_function})\nif not ok then\n\thandler(${2:ok, err})\n${3:else\n\tsuccess(${4:ok, err})\n}end",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "pcall statement",
      "matches": {
        "pcall": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "70c01687-ab59-3786-9de4-637dbc294e26": {
      "content": ":global(${1:body}) {\n\t/* this will apply to <body> */\n\t${2:/* your styles go here */}\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-global-style",
      "matches": {
        "svelte global style": true,
        "svsglobal": true
      },
      "source": "javascript/svelte"
    },
    "70ceb7d9-d675-3745-af4a-aab5fc6da8ba": {
      "content": "IO.puts(${1})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "puts": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "70d28cea-50e8-328e-9636-6a1361448b70": {
      "content": "\\\\subparagraph{${1:subparagraph name}}%\n\\\\label{subp:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subparagraph",
      "matches": {
        "subp": true
      },
      "source": "vim-snippets/snippets"
    },
    "70d3384e-eee4-3d9e-829c-e4b20acd8ba0": {
      "content": "for(int ${1:i} = 0; $1 < ${2:count}; $1++) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "70dac26d-60db-32e8-a12d-e92c7757fc69": {
      "content": "module.exports = {\n\t$0\n};\n",
      "doc": "Module exports from Common JS, node syntax at ES6",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "moduleExports",
      "matches": {
        "mde": true
      },
      "source": "vscode-javascript/snippets"
    },
    "70db30b1-90f3-3e90-a36e-58695c8443e1": {
      "content": "_.drop(${array}, ${n})",
      "doc": "_.drop([1, 2, 3]);\n// => [2, 3]\n\n_.drop([1, 2, 3], 2);\n// => [3]\n\n_.drop([1, 2, 3], 5);\n// => []\n\n_.drop([1, 2, 3], 0);\n// => [1, 2, 3]\n\nCreates a slice of `array` with `n` elements dropped from the beginning.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-drop",
      "matches": {
        "lodash drop": true
      },
      "source": "javascript/lodash"
    },
    "70e0a966-cb7f-3f2b-9699-177c6005386a": {
      "content": "@finally {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@finally": true
      },
      "source": "vim-snippets/snippets"
    },
    "70e4c877-4ecb-3fce-a476-e6680fa7fb19": {
      "content": "maply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      },
      "source": "vim-snippets/snippets"
    },
    "70e59756-eb2f-3c7f-a732-5b003063a3ed": {
      "content": "Ada.Text_IO.Put_Line(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put_Line",
      "matches": {
        "put_line": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "70e7c028-7375-39a6-abec-456536a70e88": {
      "content": "must_be_within_epsilon ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbwe": true
      },
      "source": "vim-snippets/snippets"
    },
    "70ec2ffe-7fc6-39d3-8911-050fd28774eb": {
      "content": "describe(${1:#:message}, function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "describe(message, func)",
      "matches": {
        "describe": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "70eccfd9-1f68-36b5-a6bd-afad45b8ecb3": {
      "content": "it { should be_valid }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbv": true
      },
      "source": "vim-snippets/snippets"
    },
    "70f02608-5f7d-3fb8-b8f3-bec5e2789b26": {
      "content": "${1:FIELDNAME} = forms.RegexField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "RegexField",
      "matches": {
        "freg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "70f93300-a778-3e35-b9ff-3e0391eee050": {
      "content": "import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = memo((props) => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n});\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a memoized stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactMemoProps",
      "matches": {
        "rscpm": true
      },
      "source": "vscode-react/snippets"
    },
    "70fc9e02-004c-3d49-9aa3-0e4079af2d48": {
      "content": "factor(${1:x})",
      "doc": "Factor",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fac",
      "matches": {
        "factor": true
      },
      "source": "vscode-R/snippets"
    },
    "7100f885-cc23-3f05-a9c6-0cd5f88c0153": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      },
      "source": "vim-snippets/snippets"
    },
    "7103a75d-a100-36dc-bf15-31340822ee22": {
      "content": "internal bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&": true
      },
      "source": "vim-snippets/snippets"
    },
    "7106389c-10d2-3dbc-b4eb-0d90ee0019f4": {
      "content": "collect do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cold": true
      },
      "source": "vim-snippets/snippets"
    },
    "711a48cc-c515-3a0c-981c-2773937f3c2f": {
      "content": "<img :src=\"'/path/to/images/' + ${1:fileName}\" alt=\"${2:altText}\"/>",
      "doc": "image source binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Image Source Binding",
      "matches": {
        "vsrc": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "711abbec-5b4b-3a40-862d-21338dfce290": {
      "content": "$this->${1:method}()->shouldBe${2:String|Array|Bool}();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeString|Array|Bool()",
      "matches": {
        "sbscalar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "71202134-3602-3441-98c4-1a8b3b4cd2e5": {
      "content": "reversed",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reversed": true
      },
      "source": "vim-snippets/snippets"
    },
    "7130f209-c5d4-37d1-83eb-5caee034bf66": {
      "content": "${${1:}}",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "$",
      "matches": {
        "$": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "713179f3-cee8-392c-b286-7c20082e8931": {
      "content": "${1:div}(:class=\"[${2:classNameA}, ${3:classNameB}]\")",
      "doc": "vue class binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Class Binding Object",
      "matches": {
        "vclass-obj": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "713fcf37-a433-3371-8197-5a03be5128b0": {
      "content": "test.todo('${1:should }');",
      "doc": "creates a test placeholder",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-todo",
      "matches": {
        "jest test todo": true,
        "testt": true
      },
      "source": "javascript/jest"
    },
    "71420d0e-a173-33cc-9670-7e4869a4841c": {
      "content": "validates :${1:attribute}, length: { in: ${2:3}..${0:20} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7142acf8-c0ce-3746-bf01-e7155086c676": {
      "content": "Page Should Contain Link    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Link",
      "matches": {
        "pscl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "714c1e65-42f7-3d6d-88ec-3d1dc3dc2c21": {
      "content": "border-length: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "714c6acd-b375-3860-b95c-439feef8147a": {
      "content": "function${1:# nbit} ${1:func_name};\n    ${2:portlist};\n    begin\n        ${0:TARGET};\n    end\nendfunction",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "function ... endfunction",
      "matches": {
        "func": true,
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "714ee257-61d5-3c55-b4d6-b0866e2b1a13": {
      "content": "box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "715012a2-5822-37c7-96db-54ba073edf97": {
      "content": "// Package $1 provides ${2:...}\npackage ${1:main}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package ...",
      "matches": {
        "package": true
      },
      "source": "gosnippets/snippets"
    },
    "7156d825-4901-3366-8b4b-7a2e5103f7dc": {
      "content": "*${1}*${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "*bold*",
      "matches": {
        "bold": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7158b53c-9c6c-3f98-93d9-6f622e845b2a": {
      "content": "auto ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "auto (auto)",
      "matches": {
        "auto": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "715baec2-6697-33a0-8a24-5a0b19dc4bb3": {
      "content": "#[allow(${1:unused_variables})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "allow lint attribute",
      "matches": {
        "allow": true
      },
      "source": "vim-snippets/snippets"
    },
    "715ca09e-4dd8-34a6-85ec-b7e63039e05d": {
      "content": "${1:obj}.fadeOut('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeout": true
      },
      "source": "snippets/javascript"
    },
    "715ebf3f-9939-38e6-ab67-f17211c76b91": {
      "content": "Page Should Contain Checkbox    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Checkbox",
      "matches": {
        "pscc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7168e000-77db-3d86-acfe-71147a3cd49a": {
      "content": "describe('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe",
      "matches": {
        "desc": true,
        "jest describe": true
      },
      "source": "javascript/jest"
    },
    "716ab116-1092-38b8-ae58-c51a6f948a8f": {
      "content": "<h1>${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1": true
      },
      "source": "vim-snippets/snippets"
    },
    "71738e1b-3b21-3b3a-a6ab-45a996438d95": {
      "content": "$.get('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxget": true
      },
      "source": "snippets/javascript"
    },
    "71799548-8d11-3c0a-a850-1ecdaf39b779": {
      "content": "${1:expression} foreach @${2:array};\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Loop one-line (xforeach)",
      "matches": {
        "xfore": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7180153e-b72a-3ce0-b1bd-4a07a2ed7d9d": {
      "content": "border-right-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-color: color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "718337eb-d886-3dc0-9a08-766daa60d9bc": {
      "content": "for (${1:auto} ${2:i} : ${3:container}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "71894ded-f62e-3999-b69c-a7f3fa8e94bf": {
      "content": "_.intersectionBy(${arrays}, ${iteratee})",
      "doc": "_.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [2.1]\n\n// The `_.property` iteratee shorthand.\n_.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }]\n\nThis method is like `_.intersection` except that it accepts `iteratee`\nwhich is invoked for each element of each `arrays` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersectionby",
      "matches": {
        "lodash intersectionby": true
      },
      "source": "javascript/lodash"
    },
    "7189808c-117e-30d0-8ba9-71bcbe17db2f": {
      "content": "position fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "71899b95-a823-3588-8dab-030d18c44df1": {
      "content": "border-top-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      },
      "source": "vim-snippets/snippets"
    },
    "7189b422-a4be-30ba-955f-0625d28c0b04": {
      "content": "<meta name=\"others\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaothers": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "718d038d-7163-3a12-8971-069a1f3ae57c": {
      "content": "<!% ${0:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<!%": true
      },
      "source": "vim-snippets/snippets"
    },
    "718d9a5f-1474-3525-aa10-dfb68c3abf3b": {
      "content": "const ${1} = Symbol('${0}');",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sym": true
      },
      "source": "snippets/javascript"
    },
    "718fcdb6-b976-38cf-bb55-c6d584383e13": {
      "content": "image(${1:img}, ${2:x}, ${3:y}${4:, }${5:width}${6:, }${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      },
      "source": "vim-snippets/snippets"
    },
    "719187e7-b5f1-371e-a940-bb0e7f0a02e4": {
      "content": "<img src=\"$1\"${2: alt=\"$3\"}/>",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "719f5f46-86b6-3ff1-96fc-541457b321e4": {
      "content": "export default {\n\tstate: {\n\t\tvalue: 'my value'\n\t},\n\tgetters: {\n\t\tvalue: state => {\n\t\t\treturn state.value;\n\t\t}\n\t},\n\tmutations: {\n\t\tupdateValue(state, payload) {\n\t\t\tstate.value = payload;\n\t\t}\n\t},\n\tactions: {\n\t\tupdateValue({commit}, payload) {\n\t\t\tcommit('updateValue', payload);\n\t\t}\n\t}\n};",
      "doc": "vuex module",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Module",
      "matches": {
        "vmodule": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "71a22cae-9728-3065-bd35-1907a7fdea5c": {
      "content": "expect($1).toHaveProperty(${2:keyPath}, ${3:value});$0",
      "doc": "returns true if the argument matches the second object",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohaveproperty",
      "matches": {
        "jest expect tohaveproperty": true,
        "thp": true
      },
      "source": "javascript/jest"
    },
    "71a29ab6-ba05-373f-860f-1407202c3f88": {
      "content": "grid-auto-columns auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "71a3c375-e4cf-3fd7-9161-452c9e0b91bb": {
      "content": "do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "do ... end",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "71a44dc4-779d-3c65-affb-77b6ae6af41f": {
      "content": "border-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      },
      "source": "vim-snippets/snippets"
    },
    "71ac9ff4-02b6-32db-b53e-a49bfc2430c1": {
      "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps() {\n\t\treturn null\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t}\n\n\t// shouldComponentUpdate(nextProps, nextState) {}\n\n\tgetSnapshotBeforeUpdate(prevProps, prevState) {\n\t\treturn null\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with PropTypes and all lifecycle methods and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponentWithMethods",
      "matches": {
        "rcfc": true
      },
      "source": "vscode-react/snippets"
    },
    "71aef129-f8d8-394b-9949-ca602d155003": {
      "content": "wants.${1:js|json|html}${2: { $0 }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "wants_format",
      "matches": {
        "wants": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "71b0d5b7-a30b-3e85-a21b-21e5dd4c4dd6": {
      "content": "font-weight bold",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "71b2142b-22a6-3ee2-829e-8729f2c7434b": {
      "content": "match ${1:TARGET} {\n    ${2:#:pattern} => ${3:#expr},${4}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "71b6895b-e9a6-39ff-bc18-871de1e90b71": {
      "content": "import { ${1:Observable} } from 'rxjs';\n$0",
      "doc": "RxJs import",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "RxJs Import",
      "matches": {
        "a-rxjs-import": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "71baa687-0f59-31b6-98ee-414e681e362a": {
      "content": "(defmethod ${1:multifn} \"${2:doc-string}\" ${3:dispatch-val} [${4:args}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      },
      "source": "vim-snippets/snippets"
    },
    "71bf87d4-f2f2-3c44-a37c-851c12a8d9cb": {
      "content": "${1:obj}.filter (${2:index}) ->\n\t${3}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtert": true
      },
      "source": "snippets/coffee"
    },
    "71c69aec-d290-30f9-a0ee-c2c9168c99ed": {
      "content": "let rec ${1} =\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnr": true
      },
      "source": "vim-snippets/snippets"
    },
    "71c78d7f-0332-3589-ba45-7dadf29e7fd6": {
      "content": "= render :partial => \"${1:item}\", :object => ${0:@$1}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpo": true
      },
      "source": "vim-snippets/snippets"
    },
    "71cf737c-1a4e-3986-be9c-168a0fcd313b": {
      "content": "{#each ${1:items} as ${2:item}, i (${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-key-block",
      "matches": {
        "sveach-i-k": true,
        "svelte each index key": true
      },
      "source": "javascript/svelte"
    },
    "71cfe0d3-5171-391a-8c21-f4028bc9fdaa": {
      "content": "saveBytes(${1:filename}, ${0:bytes});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveBytes": true
      },
      "source": "vim-snippets/snippets"
    },
    "71dc24bb-a249-380b-a13e-239f4e6e0656": {
      "content": "text-decoration: line-through;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "71dcaebd-6512-3b8e-911c-a1a4210fab6c": {
      "content": "height: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "71e25fe8-8051-3acc-ba9c-8a6c7e8d8426": {
      "content": "perspective(${1:fov}, ${2:aspect}, ${3:zNear}, ${0:zFar});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "perspective": true
      },
      "source": "vim-snippets/snippets"
    },
    "71e9925e-85db-3047-9c85-440efb3aecb6": {
      "content": "Run Keyword If Any Tests Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Any Tests Failed",
      "matches": {
        "rkiatf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "71ec870c-96b3-30e7-912a-4b770617781a": {
      "content": "try\n{\n\t${VISUAL}$0\n}\nfinally\n{\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try finally block",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "71ede16b-9938-30e5-bdea-e8a3226608ea": {
      "content": "return ${1} do\n\t${0}\nend return;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "extended return",
      "matches": {
        "return": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "71ef0e85-3d4b-361a-9b78-ab19c66df202": {
      "content": "try {\n    ${0:TARGET}\n} catch {\n    ${1}\n} finally {\n    ${2}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch {} finally {}",
      "matches": {
        "try_catch_n_finally": true,
        "try_cnf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "71ef2f0f-ac63-3676-9a2c-a6c0669c7de9": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "71ef46f4-9c9a-3646-a4c9-81d4eb2f3571": {
      "content": "_.mapValues(${object}, ${iteratee})",
      "doc": "var users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n\n_.mapValues(users, function(o) { return o.age; });\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\n// The `_.property` iteratee shorthand.\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\nCreates an object with the same keys as `object` and values generated\nby running each own enumerable string keyed property of `object` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, key, object).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mapvalues",
      "matches": {
        "lodash mapvalues": true
      },
      "source": "javascript/lodash"
    },
    "71fab5ac-cab0-3444-b278-cf83f826a5b1": {
      "content": "string.email()",
      "doc": "string.email(message?: string | function): Schema\n\nValidates the value as an email address via a regex.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-email",
      "matches": {
        "yup string email": true
      },
      "source": "javascript/yup"
    },
    "71febe25-433d-37a3-8f06-ad76c5aad030": {
      "content": "page-break-before: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "71ff2322-38d6-3ee7-8211-85fd9d716497": {
      "content": "@param {${1:type}} ${2:name} ${0:description}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@par": true
      },
      "source": "snippets/javascript"
    },
    "72211f90-43bb-39a1-bfee-7eafb243b14c": {
      "content": "map[${1:string}]${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "map[Type]Type",
      "matches": {
        "map": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "7222fcae-d417-3d86-a9d8-7cd4a01d540a": {
      "content": "{% else %}\n\t${1}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "722ea7f6-8fc6-3768-b1ba-3e7804f1e65d": {
      "content": "display: inline;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: inline (display)",
      "matches": {
        "display": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "723193de-4614-3e55-aaf8-db0cc32f7220": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t${0:${VISUAL}}\nendif",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7231ba83-d724-3b01-bed9-f9b8321727a1": {
      "content": "${1:${VISUAL}} match {\n\tcase ${2} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "724419a2-8163-3493-add4-5e75c628b56a": {
      "content": "background-attachment: ${1:scroll/fixed};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-attachment: scroll:fixed (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "724be8d2-389c-30d0-be68-9fcf16ad0f2a": {
      "content": "getDefaultProps: ->\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define getDefaultProps",
      "matches": {
        "getDefaultProps": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "724db190-8ba4-36fb-b5f9-99377eadaa07": {
      "content": "command! ${1:#:command_name} call ${2:#:func_name}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "command call function",
      "matches": {
        "command": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "724f0524-b640-3288-a6c2-056cc2ec6f47": {
      "content": "xhr :get, :${1:show}, id: ${2:1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xget": true
      },
      "source": "vim-snippets/snippets"
    },
    "7251728d-790d-3c05-af36-374485ffcce9": {
      "content": "enum ${1:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "72546b3e-8ac0-361a-bf62-7ba25f3c93e0": {
      "content": ":only-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "725aa08b-87eb-3ec1-948e-b8e87ca6fdde": {
      "content": "font-weight: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "725f7503-74b9-3fe0-90bc-bd3f05a4e815": {
      "content": "<%= ${1:f}.label :${2:attribute}, '${0:$2}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7260b1f0-09dc-3529-ba19-32fb28f29c9b": {
      "content": "${1:Section}~\\\\ref{sec:${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a section",
      "matches": {
        "section": true
      },
      "source": "vim-snippets/snippets"
    },
    "726659c0-6bc3-330b-9fbf-868e856203ae": {
      "content": "font-emphasize-position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      },
      "source": "vim-snippets/snippets"
    },
    "7272cbc8-d1b0-31b2-aaf1-eda2ce5cfdee": {
      "content": "export default function ${1:${TM_FILENAME_BASE}}(${2:params}) {\n\t$0\n};\n",
      "doc": "Export default function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportDefaultFunction",
      "matches": {
        "edf": true
      },
      "source": "vscode-javascript/snippets"
    },
    "727a7533-cb2e-30af-9690-43396d84ad37": {
      "content": "import { Route, Router } from 'svelte-routing'",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-routing-import",
      "matches": {
        "svelte import routing": true,
        "svroute": true
      },
      "source": "javascript/svelte"
    },
    "728863be-0601-31fa-acdc-6f121168bd76": {
      "content": "if ${1:condition}\n\t$2\nelsif ${3:condition}\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "728d33ca-c315-3a73-b0fe-7be9036b6091": {
      "content": "expect(${1:target}).not.toEqual(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to equal (js)",
      "matches": {
        "note": true
      },
      "source": "vim-snippets/snippets"
    },
    "72995240-cd57-3073-bb15-1234d890de48": {
      "content": "print!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "print! with format param",
      "matches": {
        "pri,": true
      },
      "source": "vim-snippets/snippets"
    },
    "729bf713-2096-39bc-9652-af0979a6effe": {
      "content": "\\\\begin{align${1:ed}}\n\t\\\\label{eq:${2}}\n\t${0:${VISUAL}}\n\\\\end{align$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "align(ed) environment",
      "matches": {
        "ali": true
      },
      "source": "vim-snippets/snippets"
    },
    "72a79bca-eba6-3c96-8492-d004dac7ab9f": {
      "content": "\\begin{cases}{${1}}\n\t${2:TARGET}\n\\end{cases}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{cases} \\cases": true,
        "cases": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "72ac4479-2e90-33fa-bdff-3f081abda650": {
      "content": "if !ok {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if !ok { ... }",
      "matches": {
        "ok": true
      },
      "source": "gosnippets/snippets"
    },
    "72b82a56-5309-3903-95a3-1cf04eced991": {
      "content": "# Directory resource\ndirectory ${1:\"/path/to/dir\"} do # The path to the directory\n\t${2:#}group ${3} # The group owner of the directory (string or id)\n\t${4:#}mode ${5} # The octal mode of the directory, eg 0755\n\t${6:#}owner ${7} # The owner for the directory\n\t${10:#}recursive ${11:false} # When deleting the directory, delete it recursively. When creating the directory, create recursively (ie, mkdir -p)\n\t${12:#}${13:action :create} # Create this directory (Default)\n\t${14:#}${0:action :delete} # Delete this directory\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "directory": true
      },
      "source": "vim-snippets/snippets"
    },
    "72c125d6-b10f-3867-aead-78db55d45769": {
      "content": "assert_operator ${1:left}, :${2:operator}, ${3:right}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aso": true
      },
      "source": "vim-snippets/snippets"
    },
    "72c2f355-8898-30de-91bc-aa58eb2db13b": {
      "content": "${1:#:object} = require('$1')",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "72c50ba9-2ca4-3497-9fcc-314bc49820ed": {
      "content": "background-break bounding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "72d1c567-2d7f-3d7d-a758-431540258c8c": {
      "content": "assert(${0:/* condition */});",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "72d2b6c2-c629-3c57-96e8-44ccf014bfa2": {
      "content": "<article class=\"${1}\">\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article.": true
      },
      "source": "vim-snippets/snippets"
    },
    "72d8af00-d388-3cc2-b642-5d9723e72b55": {
      "content": "printf(\"${1:} = %${2}\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prx": true
      },
      "source": "vim-snippets/snippets"
    },
    "72dd1f51-a0bf-3375-88d9-68af23a0d179": {
      "content": "background-size: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      },
      "source": "vim-snippets/snippets"
    },
    "72e22c87-4f2b-33b4-8527-c65c148a49c5": {
      "content": "struct ${1:name} {\n\t${2:/* data */}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "struct",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/snippets"
    },
    "72eb9347-a20c-3030-a632-44f0f51194d1": {
      "content": "__FUNCTION__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FUN": true
      },
      "source": "vim-snippets/snippets"
    },
    "72ec755c-64ba-378a-b66a-192bf32b47d5": {
      "content": "$this->assertFileNotExists(${1:'path/to/file'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFileNotExists('path/to/file')",
      "matches": {
        "asfnex": true
      },
      "source": "vim-snippets/snippets"
    },
    "72f3f28d-fee3-3aaf-8387-5eb823eb6d78": {
      "content": "return(${0})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "72f4491b-2024-3acf-bd3d-d4a472364f63": {
      "content": "page-break-before: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      },
      "source": "vim-snippets/snippets"
    },
    "72f5009d-206e-3ec7-b2a6-b2163b89e8b3": {
      "content": "this.$1 = this.$1.bind(this);$0",
      "doc": "Binds the this of a method. To be used inside a constructor",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "bindThis",
      "matches": {
        "bnd": true
      },
      "source": "vscode-react/snippets"
    },
    "72fa9fa2-2fad-31e1-9686-f62dbf33fb86": {
      "content": "create_table :${1:table_name} do |t|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mct": true
      },
      "source": "vim-snippets/snippets"
    },
    "72ffe4ac-fe50-3c5d-809e-f50c3b5ca11a": {
      "content": "catch (${1:Exception} ${2:e}) {\n    ${0:Console.WriteLine(e.Message);}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "catch () {}",
      "matches": {
        "catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "73097d6e-d5f8-3636-9f1b-e11cc6e532a8": {
      "content": "-webkit-box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "7310ab93-3279-3c8e-bf1d-0ff3f9d2b654": {
      "content": "List<${1:listName}> ${2:items} = $1.findAll();",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "findall": true
      },
      "source": "vim-snippets/snippets"
    },
    "731224c9-314c-3d2d-8270-69d511843bdd": {
      "content": "(** ${1:odoc} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "odoc",
      "matches": {
        "oo": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "731d64f1-14e9-3082-a8b7-4d7a6702bab9": {
      "content": "outline: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "732245f1-227a-3793-b075-254f2d223e6a": {
      "content": "END {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "END { ... }",
      "matches": {
        "end": true
      },
      "source": "vim-snippets/snippets"
    },
    "7329493a-7db0-3be2-8d58-c2c9b57ec2dc": {
      "content": "Run Keyword If Timeout Occurred    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Timeout Occurred",
      "matches": {
        "rkito": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "733aadc7-6325-322f-b24d-04ed30beebb1": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon} ${3:1}\n\tbuttons {\"${4:OK}\"} default button 1",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "733af4ef-7ffd-3892-837a-389c314ba754": {
      "content": "$this->renderText('${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "73440c0e-60a2-3b84-b99b-618d3ec76ff8": {
      "content": "else if ($1)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "elseif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "734a434b-3bdb-363c-aee2-3f92681b648c": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ${2:ComponentName}Component } from './${3:filename}.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable({providedIn: ${4:'root'}})\nexport class ${1:Name}Guard implements CanDeactivate<${2:ComponentName}Component> {\n\tcanDeactivate(\n\t\tcomponent: ${2:ComponentName}Component,\n\t\tcurrentRoute: ActivatedRouteSnapshot, \n\t\tcurrentState: RouterStateSnapshot\n\t): Observable<boolean>|Promise<boolean>|boolean {\n\t\treturn false;$0\n\t}\n}",
      "doc": "Angular CanDeactivate guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanDeactivate Guard",
      "matches": {
        "a-guard-can-deactivate": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "734be428-6a94-3cf6-aa37-5c20eacfa3fc": {
      "content": "console.log('${1:object} :>> ', ${1:object});",
      "doc": "Displays an object in the console with its name",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolelogobject",
      "matches": {
        "base console log object": true
      },
      "source": "javascript/base"
    },
    "734caba3-cd5e-3b6f-abd3-13f233d3c535": {
      "content": "static ${1:#:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7350a583-faf5-36e7-a9ff-1cc78a81d9ed": {
      "content": "PFont ${1:font};\n$1 = loadFont(\"${0:FFScala-32.vlw}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/snippets"
    },
    "7352f1b8-c3a3-3619-bc8a-9dffa2c5b736": {
      "content": "${1:public} ${2:void} ${3:MyMethod}(${4})\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "mth": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "73646889-15d6-30e7-bf60-5d95136738eb": {
      "content": "cummin(${1:x}",
      "doc": "Cummulative min",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cumi",
      "matches": {
        "cumin": true
      },
      "source": "vscode-R/snippets"
    },
    "736a1218-243a-3eda-b2d6-148088e53df3": {
      "content": "import Controller from '@ember/controller';\n\nexport default Controller.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Controller from '@ember/controller';",
      "matches": {
        "econtroller": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "737179db-ffd6-30ac-8037-95b70fa60989": {
      "content": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpr": true
      },
      "source": "vim-snippets/snippets"
    },
    "737927c8-8186-3074-8a50-6ee8fade4172": {
      "content": "unittest\n{\n\t$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "unittest (unittest)",
      "matches": {
        "unittest": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "737b31d4-2899-3d64-aa70-7b023f8fe9cb": {
      "content": "alt=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alt": true
      },
      "source": "vim-snippets/snippets"
    },
    "737d13c0-9acc-30ad-b53d-43e916ebea08": {
      "content": "t.float :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.float (tcf)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "737d6e10-08e6-30fc-9163-e5e97ff55ae1": {
      "content": "class ${1:FORMNAME}(forms.Form):\n\n\t${2:# TODO: Define form fields here}",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Form",
      "matches": {
        "form": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "737df19a-0aad-3f33-8287-8f5575342d7f": {
      "content": "(if ${1:test-expr}\n\t${2:then-expr}\n\t${0:else-expr})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "737f091e-9022-335b-98fa-3ca1c3ff661a": {
      "content": "counter-reset ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      },
      "source": "vim-snippets/snippets"
    },
    "7385b5d5-3360-3b47-9c8d-e767aff8c5c1": {
      "content": "for ${2:k}, ${3:v} in ${1:ipairs(xs)} do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "738b132a-f7f5-3772-8848-1683dce730c5": {
      "content": "__import__('rpdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "738db08a-7cf1-34fc-b336-6859cdcdc016": {
      "content": "$this->${1:method}()->shouldNotStartWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotStartWith('string')",
      "matches": {
        "snstart": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7390a8b3-3898-3e2d-80c5-0670d0f885ee": {
      "content": "<Link to=\"${1:/blog}\">${2:Text}</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link",
      "matches": {
        "gatsby link": true
      },
      "source": "javascript/gatsby"
    },
    "7390b3b5-1cbd-3e47-b30f-2fc8b018a151": {
      "content": "${1:New} = () => import('@/components/${1:New}.vue')",
      "doc": "Import component that should be lazy loaded",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Component Dynamically",
      "matches": {
        "vimport-dynamic": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "73a09d2b-bef2-32db-a052-ed4fcf1e1a2a": {
      "content": "<%page args=\"${1:}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "page",
      "matches": {
        "page": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "73a3c14d-c5c9-3cc9-84c1-453af9dec62c": {
      "content": "&#x2191;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "up": true
      },
      "source": "vim-snippets/snippets"
    },
    "73a4aad2-4ae0-3f16-af5d-b88f5918051d": {
      "content": "abs(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abs": true
      },
      "source": "vim-snippets/snippets"
    },
    "73adf4c1-ef67-36ec-9b57-a9c84361671f": {
      "content": "emerg(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emerg": true
      },
      "source": "vim-snippets/snippets"
    },
    "73ae0dd5-a8d8-3eaf-8ac0-cd9dda4ec875": {
      "content": "$_ENV['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "E": true
      },
      "source": "vim-snippets/snippets"
    },
    "73b16e4d-947a-31e2-ab8c-019a24dc3dc5": {
      "content": "expect($1).toMatchInlineSnapshot($0);",
      "doc": "returns true if the argument matches the most recent inline snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchinlinesnapshot",
      "matches": {
        "jest expect tomatchinlinesnapshot": true,
        "tmis": true
      },
      "source": "javascript/jest"
    },
    "73b29ad3-bd46-38da-9627-df5cf9ebcc4e": {
      "content": "with ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "with",
      "matches": {
        "wi": true
      },
      "source": "vim-snippets/snippets"
    },
    "73b58263-2bb9-3755-91ea-9fcc0f847aa0": {
      "content": "else${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true,
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "73b5b0a2-946e-301e-88f5-ae681a739b1e": {
      "content": "Page Should Contain Element    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Element",
      "matches": {
        "psce": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "73bef156-c6d1-38a8-9028-944dad34d5ed": {
      "content": "grid-auto-rows: min-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "73c27a55-3ab9-3c83-9a06-8ca91879046e": {
      "content": "v-once",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-once",
      "matches": {
        "vonce": true,
        "vue v-once": true
      },
      "source": "javascript/vue"
    },
    "73c9f460-4878-3326-85bc-7a5b2709e780": {
      "content": "font-stretch: ultra-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      },
      "source": "vim-snippets/snippets"
    },
    "73ce7d31-577c-3323-bed5-cd73a4a92faa": {
      "content": "lambda { |${1:args}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lam": true
      },
      "source": "vim-snippets/snippets"
    },
    "73d240a5-d509-3c09-9785-69b36026f4ea": {
      "content": "invariant()\n{\n\tassert(${1:/*condition*/}, \"${2:error message}\");\n\t$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "invariant (inv)",
      "matches": {
        "inv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "73d3ae46-2fd3-3097-bae3-b15df867c3a9": {
      "content": "float right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "73da7d0b-1e46-3eef-ac03-255959f692a5": {
      "content": "render partial:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :partial",
      "matches": {
        "rp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "73e1a56d-e613-3026-8322-33b5a83fc1ce": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", locals { ${2::name}: \"${3:value}\"$4 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline,locals) (ril)",
      "matches": {
        "ril": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "73e1b4ec-b472-3975-a629-02956142232c": {
      "content": "jest.fn($0)",
      "doc": "creates jest.fn()",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-jest-fn",
      "matches": {
        "jest fn": true,
        "jfn": true
      },
      "source": "javascript/jest"
    },
    "73fac2bd-3183-3aa4-b3d8-338ae88657c6": {
      "content": "justify-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "73fd6bab-e090-301c-844c-d9801e0a4b2a": {
      "content": "include(ExternalProject)\nExternalProject_Add(${1:googletest}\n  URL ${2:http://googletest.googlecode.com/files/gtest-1.7.0.zip}\n  URL_HASH SHA1=${3:f85f6d2481e2c6c4a18539e391aa4ea8ab0394af}\n  SOURCE_DIR \"${4:${CMAKE_BINARY_DIR}/gtest-src}\"\n  BINARY_DIR \"${0:${CMAKE_BINARY_DIR}/gtest-build}\"\n  CONFIGURE_COMMAND \"\"\n  BUILD_COMMAND     \"\"\n  INSTALL_COMMAND   \"\"\n  TEST_COMMAND      \"\"\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ext_url": true
      },
      "source": "vim-snippets/snippets"
    },
    "740e5c43-e663-383f-b090-3f19be462085": {
      "content": "import ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ip": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "741a05b1-bd91-39c3-bb44-2d6661067e9f": {
      "content": "${1:void} ${2:function_name}(${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fund": true
      },
      "source": "vim-snippets/snippets"
    },
    "741a9657-6a68-3cd8-bf1f-c3adf2a94d75": {
      "content": ".footnote:[${1:footnotetext}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "footnote",
      "matches": {
        "footnote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "741aff1a-dcf5-38cd-beb6-9c9154195768": {
      "content": "realize(${1:Resource}[${2:name}])",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "realize": true
      },
      "source": "vim-snippets/snippets"
    },
    "74274408-ac18-3a69-84b7-367708ff8ea4": {
      "content": "resize horizontal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "7427b15c-3542-3202-be74-d85ed7c03ab3": {
      "content": "lang=\"${1:en}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lang": true
      },
      "source": "vim-snippets/snippets"
    },
    "742845cf-46a2-32cd-9855-d6c349c9d300": {
      "content": "<%= ${1:f}.radio_button :${2:attribute}, :${0:tag_value} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffrb": true
      },
      "source": "vim-snippets/snippets"
    },
    "742c83cf-ee62-31e4-94ae-0ef3c4a03908": {
      "content": "${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create field",
      "matches": {
        "+": true
      },
      "source": "vim-snippets/snippets"
    },
    "7433fce8-86ba-3f56-8d02-bdd69c6eae1a": {
      "content": "place-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "743767a1-2a73-38f0-97fc-bd8a869f8b3f": {
      "content": "${1:obj}.siblings('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sib": true
      },
      "source": "snippets/coffee"
    },
    "743da08b-703b-3d0f-9803-af1acbad9de9": {
      "content": "$.extend(${1:true, }${2:target}, ${3:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extend": true
      },
      "source": "snippets/javascript"
    },
    "74442e55-ab07-3ded-8c1a-e2faa0879dff": {
      "content": "_.random(${lower}, ${upper}, ${floating})",
      "doc": "_.random(0, 5);\n// => an integer between 0 and 5\n\n_.random(5);\n// => also an integer between 0 and 5\n\n_.random(5, true);\n// => a floating-point number between 0 and 5\n\n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2\n\nProduces a random number between the inclusive `lower` and `upper` bounds.\nIf only one argument is provided a number between `0` and the given number\nis returned. If `floating` is `true`, or either `lower` or `upper` are\nfloats, a floating-point number is returned instead of an integer.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-random",
      "matches": {
        "lodash random": true
      },
      "source": "javascript/lodash"
    },
    "744a749d-b063-38f0-adfe-efe21df5eb7d": {
      "content": "<%= form_tag(${1:\"/users\"}, method: ${2::post}) %>\n\t${0}\n</form>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_tag",
      "matches": {
        "ft": true
      },
      "source": "vim-snippets/snippets"
    },
    "744b3139-9af0-3088-9a4c-f7b2aa71ea3e": {
      "content": "delete_if { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deli": true
      },
      "source": "vim-snippets/snippets"
    },
    "74501baa-5685-3342-a4bb-6a3942979810": {
      "content": "border-style: outset;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "745d8c6a-17fe-30ec-95a1-b59dddc90bc1": {
      "content": "white-space-collapse: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "74632902-359a-3c93-810e-e2385784279b": {
      "content": "border-break close",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "746783a8-3c76-3a5a-bb79-a5583d965979": {
      "content": "m_ply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m_": true
      },
      "source": "vim-snippets/snippets"
    },
    "74688fb1-ed64-3a2a-9f10-2c657e188865": {
      "content": "std.algorithm",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "algo": true
      },
      "source": "vim-snippets/snippets"
    },
    "746fd20c-260d-3567-80b5-5bb83c0f2784": {
      "content": "real ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real",
      "matches": {
        "re": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "74710be8-98af-3858-b46a-0c8feb5ca5d9": {
      "content": "background-size: contain",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "747486b0-07b8-3cff-8c72-615a571b2636": {
      "content": "_.toArray(${value})",
      "doc": "_.toArray({ 'a': 1, 'b': 2 });\n// => [1, 2]\n\n_.toArray('abc');\n// => ['a', 'b', 'c']\n\n_.toArray(1);\n// => []\n\n_.toArray(null);\n// => []\n\nConverts `value` to an array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toarray",
      "matches": {
        "lodash toarray": true
      },
      "source": "javascript/lodash"
    },
    "748bbb67-0406-3d6f-a5ac-f3106f290be8": {
      "content": "text-justify: tibetan;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "748d491a-4cca-3364-8283-67c602081e99": {
      "content": "byte ${1:b}${2: = }${0:127};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "byte": true
      },
      "source": "vim-snippets/snippets"
    },
    "74963461-deb0-36fb-9928-d3db4cddd7e9": {
      "content": "each_pair do |${1:name}, ${2:val}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eapd": true
      },
      "source": "vim-snippets/snippets"
    },
    "7497633f-99a5-3e26-9d36-570b3ad2ca6b": {
      "content": "{#await ${1:promise}}\n\t${2: <!-- content when promise is pending -->}\n{:then ${3:value}}\n\t${4: <!-- content when promise was fulfilled -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-then-block",
      "matches": {
        "svawait": true,
        "svelte await then": true
      },
      "source": "javascript/svelte"
    },
    "7497b3f6-fcce-30e2-98e6-2edb7015bc0a": {
      "content": "use ${0:test_class};\n$1->runtests();",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trunner": true
      },
      "source": "vim-snippets/snippets"
    },
    "749faea5-172d-38a1-9c0a-bb7ea5fce310": {
      "content": "${1:obj}.addClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addClass": true
      },
      "source": "snippets/javascript"
    },
    "74a19269-d02b-3705-bf84-99f9aa418e7d": {
      "content": "t.timestamp :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.timestamp (tcts)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "74a6363e-9201-3ffe-a2d2-c60296628a1e": {
      "content": "% if ${1:condition}:\n\t${2:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if ",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "74a78071-b89a-340b-b487-79ef427742fc": {
      "content": "<template></template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      },
      "source": "vim-snippets/snippets"
    },
    "74b1b267-710e-3b89-8c9e-d85578acee63": {
      "content": "place-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "74b6b22c-e8b3-3430-9c5d-37e6cc963a74": {
      "content": "Run Keyword If Test Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Test Passed",
      "matches": {
        "rkitp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "74bd23e1-1c0d-3e87-8534-e07a40b89f3e": {
      "content": "${1:obj}.fadeOut('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeout": true
      },
      "source": "snippets/coffee"
    },
    "74bf2f0d-8dc9-3389-9fd5-b68f13fd01d6": {
      "content": "${1}:\nloop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named loop",
      "matches": {
        "named_loop": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "74d5dd1f-de50-38ed-bbd9-2416179fe9fa": {
      "content": "console.table(${1:object});",
      "doc": "Displays tabular data as a table.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTable",
      "matches": {
        "clt": true
      },
      "source": "vscode-javascript/snippets"
    },
    "74d8e303-653b-31f4-b8e2-c1301c491f6e": {
      "content": "import qualified ${1:Data.Text} as ${0:T}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impq": true
      },
      "source": "vim-snippets/snippets"
    },
    "74e08182-fd0b-346e-bec8-13b57c2305c3": {
      "content": "$.unique(${1:array})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      },
      "source": "snippets/javascript"
    },
    "74e4de53-71c2-3642-81f1-739438f5aa67": {
      "content": "onDestroy(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-destroy",
      "matches": {
        "svelte lifecycle destroy": true,
        "svlfd": true
      },
      "source": "javascript/svelte"
    },
    "74ece13f-1260-380e-8ff1-fa664de294bd": {
      "content": "[Obsolete(\"${1:#:description}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obs dep deprecated": true,
        "obsolete": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "74ed74bf-7b63-3694-8d9d-dd980d7bbe65": {
      "content": "pipe(${1:stream})${2}",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipe": true
      },
      "source": "snippets/javascript"
    },
    "74f87bfe-e374-35dc-a217-0902fbdb58e4": {
      "content": "${1:obj}.unwrap()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unwrap": true
      },
      "source": "snippets/coffee"
    },
    "74ff65c6-edbf-3a5a-ab20-e3306094cf21": {
      "content": "{% layout none %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layoutnone": true
      },
      "source": "vim-snippets/snippets"
    },
    "75014533-a359-36f5-a1de-e6f22c3cd726": {
      "content": "millis();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "75065d2e-27d6-3a2c-a0a6-adce6ddcfd2c": {
      "content": "namespace ${1:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "namespace {}",
      "matches": {
        "name": true,
        "namespace": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "750c9711-0688-31c4-8dd9-8b752c52dfd4": {
      "content": "background-origin: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      },
      "source": "vim-snippets/snippets"
    },
    "751096e4-6737-3b7f-84b0-292378fc13b7": {
      "content": "%% @doc ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%d": true
      },
      "source": "vim-snippets/snippets"
    },
    "751160e0-333a-3360-80a3-bf6ba7b84943": {
      "content": "for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "for ($i = 0; $i < $count; $i++) { ... }",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "75189ac0-e304-3ffe-a183-d6ce2e67cb9b": {
      "content": "${1:classNames}({ '${2:foo-bar}': true });",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-usage-object",
      "matches": {
        "classnames usage object": true
      },
      "source": "javascript/classnames"
    },
    "751fe722-b38f-301f-9c22-fdc9f40e98d0": {
      "content": "make(${1:[]string}, ${0:0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "make",
      "matches": {
        "mk": true
      },
      "source": "vim-snippets/snippets"
    },
    "75260a27-807f-3485-9102-7e1cc914deac": {
      "content": "internal int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi&": true
      },
      "source": "vim-snippets/snippets"
    },
    "752865d1-f88f-322a-a1e8-4d2ff51fbaef": {
      "content": "state = {\n\t$1\n}\n",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "emptyState",
      "matches": {
        "est": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "752da6f4-f0c8-3407-9577-f921b6519d23": {
      "content": "Ada.Text_IO.Get(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/snippets"
    },
    "7530e2e8-cd1c-3701-9cb8-8c22e8c01cf4": {
      "content": "printf(\"${1:} = %d\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prd": true
      },
      "source": "vim-snippets/snippets"
    },
    "7531b1ed-821f-332a-9cd6-117b6e11edde": {
      "content": "@opaque ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      },
      "source": "vim-snippets/snippets"
    },
    "7535a044-adc3-35ea-8cd9-5bfe38d2cc90": {
      "content": "export const ${1} = styled(${2})`\n  ${3}\n`;",
      "doc": "Export styled-component from existing component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component-from-existing-component",
      "matches": {
        "exscc": true,
        "styled-components export component from existing": true
      },
      "source": "javascript/styled-components"
    },
    "75408349-eaec-3219-863a-3ec681c52027": {
      "content": "\\${3:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:TARGET}",
      "matches": {
        "3T": true,
        "3t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "75441e14-fb0f-3adf-bd9a-819741dbe6c6": {
      "content": "if (${1:condition}) {\n   ${2:selected}\n} else {\n   \n}",
      "doc": "Code snippet for 'if-else' conditional block",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "if-else block",
      "matches": {
        "ifelse": true
      },
      "source": "vscode-R/snippets"
    },
    "754f912c-b22f-31ad-a552-9e7c8ceb605e": {
      "content": "@while ${1:$i} ${2:>} ${3:0} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/snippets"
    },
    "7550c5ab-9dd3-31e2-9c88-7eb027e82125": {
      "content": "def ${1:name}(${0:arg}) =\n\tif($2) $2\n\telse $1($2)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "7556e304-411e-3d12-8a62-b36a42e991cd": {
      "content": "{% nav ${1} in ${2} %}\n\t${0}\n{% endnav %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig nav",
      "matches": {
        "nav": true
      },
      "source": "vim-snippets/snippets"
    },
    "755713f8-ab99-3f71-b7e3-0e8187756201": {
      "content": "content: open-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      },
      "source": "vim-snippets/snippets"
    },
    "7562f627-1134-3e6c-a4c6-670af8571b93": {
      "content": "echo(${0:#:TARGET})",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "757069d0-3e54-3279-9fd2-67208d7bf886": {
      "content": "console.clear();",
      "doc": "Clears the console",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleclear",
      "matches": {
        "base console clear": true
      },
      "source": "javascript/base"
    },
    "75710220-cbcd-3fc0-9534-2350a19321c4": {
      "content": "Session::set(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_destroy": true
      },
      "source": "vim-snippets/snippets"
    },
    "758aa429-bf9e-326d-b5f4-32ea7bdf5e3c": {
      "content": "\\\\begin{figure}\n\\\\begin{center}\n\t\\\\includegraphics[scale=${1}]{Figures/${2}}\n\\\\end{center}\n\\\\caption{${3}}\n\\\\label{fig:${4}}\n\\\\end{figure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "figure environment (includegraphics)",
      "matches": {
        "fig": true
      },
      "source": "vim-snippets/snippets"
    },
    "758e60b7-12a1-3fa8-b446-4473258ff210": {
      "content": "display: list-item;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      },
      "source": "vim-snippets/snippets"
    },
    "759a24a0-667b-3402-8a2b-4f91c003a6d6": {
      "content": "clip: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "75a8cb9f-f7b3-351f-8219-a477c4b96698": {
      "content": "border-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      },
      "source": "vim-snippets/snippets"
    },
    "75b2e80b-f777-31dc-8091-2befca02c793": {
      "content": "<%= link_to '${1:link text...}', controller: '${2:items}', action: '${3:edit}', id: ${0:@item} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "licai": true
      },
      "source": "vim-snippets/snippets"
    },
    "75b45f83-f3e1-34c0-8410-1509e00f034a": {
      "content": "<h${1:1}>${2}</h$1>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "75b47693-449d-3758-9f7f-92ce94e6a51c": {
      "content": "expect($1).toEqual($0);",
      "doc": "expects the first argument to be equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-toequal",
      "matches": {
        "jest expect toequal": true,
        "te": true
      },
      "source": "javascript/jest"
    },
    "75b7446c-5e67-388d-96cd-9233a73d2635": {
      "content": "_.constant(${value})",
      "doc": "var objects = _.times(2, _.constant({ 'a': 1 }));\n\nconsole.log(objects);\n// => [{ 'a': 1 }, { 'a': 1 }]\n\nconsole.log(objects[0] === objects[1]);\n// => true\n\nCreates a function that returns `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-constant",
      "matches": {
        "lodash constant": true
      },
      "source": "javascript/lodash"
    },
    "75b91b61-07b6-362d-92a3-04dc75d655e3": {
      "content": "background-color: ${1:red};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-name (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "75bc72f6-e96c-3c4c-b403-6e4be770f5cb": {
      "content": "expect(${1:target}).toThrow(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to throw (js)",
      "matches": {
        "eth": true
      },
      "source": "vim-snippets/snippets"
    },
    "75bd270c-f9fc-3d85-a1ff-c711fb54e50d": {
      "content": "switch (${1:#:var}) {\ncase ${2:#:val}:\n    ${0:TARGET}\n    break;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "switch () {}",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "75c42007-0608-35e0-ac38-9862caf276a9": {
      "content": "${1:$TM_FILENAME_BASE}.defaultProps = {\n\t$2\n};",
      "doc": "Creates empty defaultProps declaration",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "defaultProps",
      "matches": {
        "rdp": true
      },
      "source": "vscode-react/snippets"
    },
    "75c75e7e-9523-396c-bd00-1988a706d4be": {
      "content": "${1:obj}.error(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      },
      "source": "snippets/javascript"
    },
    "75c9184f-b90f-367b-acb4-7dbff592db60": {
      "content": "while (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "75caf10d-e0f5-3a1a-8be8-ee710afd367c": {
      "content": "defined(${1:Resource}[\"${2:name}\"])",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defined": true
      },
      "source": "vim-snippets/snippets"
    },
    "75cffd94-3c86-3f23-9a0b-6e94beb57c36": {
      "content": "__import__('pdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "75d7415f-7293-3aea-9ac3-281a98e3d26a": {
      "content": "<map name=\"${1}\" id=\"${2:$1}>\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map#": true
      },
      "source": "vim-snippets/snippets"
    },
    "75d9ca22-7336-3bbd-9ba7-984b5f6297d1": {
      "content": "switch ${1:-exact} -- ${2:\\$var} {\n\t${3:match} {\n\t\t$4\n\t}\n\tdefault {$5}\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "switch... (switch)",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "75dd3f4d-53c4-31cb-ab4e-6ddf87f9667a": {
      "content": "import ${1:New} from '@/components/${1:New}.vue';",
      "doc": "Import one component into another",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import File",
      "matches": {
        "vimport": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "75e0d870-ab61-3198-a0d4-07689f95f9bb": {
      "content": "text-transform: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "75e69039-8b1b-37c3-8857-87c613792c43": {
      "content": "pravFrame();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "75f18bce-7353-3d01-bd07-ce92d960c3a7": {
      "content": "margin: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin: T R B L (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "75f3fbaf-6e3a-36db-8dea-9a276b6958bf": {
      "content": "#ifdef __cplusplus\nextern \"C\" {\n#endif\n${0}\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nocxx": true
      },
      "source": "vim-snippets/snippets"
    },
    "75f438d8-dc9a-3e03-8728-ad92c3fbf61c": {
      "content": "background-clip padding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "75fa39d5-12ee-3724-b2cb-ca07491e2b23": {
      "content": "change_table :${1:table_name} do |t|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mcht": true
      },
      "source": "vim-snippets/snippets"
    },
    "75fd3784-7319-34f7-8639-5ff98aaf9d5a": {
      "content": "\"\"\"${0:doc}\n\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\"": true
      },
      "source": "vim-snippets/snippets"
    },
    "7611f368-2ffb-30b3-ab24-6fa14b183b34": {
      "content": "if ${1:condition} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if ... { ... }",
      "matches": {
        "if": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "7612ff7a-9feb-3e73-99ec-13f4a957fbfc": {
      "content": "procedure ${1:name}(${0:args});",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pps": true
      },
      "source": "vim-snippets/snippets"
    },
    "761d41a5-1df7-3131-b81d-6f4a49cc0736": {
      "content": "when others => ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when others",
      "matches": {
        "when_others": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "762297f0-8a4f-3382-88aa-aab8d889193d": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!')\n\t},\n}",
      "doc": "vue mixin",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mixin",
      "matches": {
        "vmixin": true,
        "vue mixin": true
      },
      "source": "javascript/vue"
    },
    "7628fc64-18b7-37de-93fc-31aa47500099": {
      "content": "install.packages(${1:pkgs}, ${2:lib}, ${3:repos = ${4:getOption(\"repos\")}}, ${5:contriburl = ${6:contrib.url(repos, type)}})",
      "doc": "Install package",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "ins",
      "matches": {
        "insall": true
      },
      "source": "vscode-R/snippets"
    },
    "763108b2-806b-3fbc-b268-1aabc2b84dae": {
      "content": "\\\\documentclass{${1:class}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\documentclass{}",
      "matches": {
        "dcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "763852ba-9289-3c32-a4a7-63d6edc9e919": {
      "content": "border-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7638dbff-554a-303f-bcfc-5be6f09ad7cd": {
      "content": "text-align-last left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "763bdf0f-ec0d-3c15-a870-cd6e22c94a01": {
      "content": "\\begin{slide}\n\t${1:TARGET}\n\\end{slide}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{slide} \\slide": true,
        "slide": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "763f5b16-429d-3de4-938a-187e9db79b5d": {
      "content": "case (${1})\n    ${2:'b0}: begin\n        ${3}\n    end\n    default : begin\n        ${4}\n    end\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "case () ... endcase",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7644cbb1-ed21-319b-870d-00fa10826b47": {
      "content": "echo CHtml::radioButtonList('${1:name}', ${2:select}, array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "76559f6b-50dd-3742-bd04-e77f56f9cfcf": {
      "content": "Char",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chr": true
      },
      "source": "vim-snippets/snippets"
    },
    "765ce9e5-4721-326a-9448-816c9d319729": {
      "content": "{\n\t\"type\": \"textarea\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_textarea": true
      },
      "source": "vim-snippets/snippets"
    },
    "76656cc9-0f17-3b38-a817-faf3e7b296bb": {
      "content": "(${1:Class} ${2:a}) => $2",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Type constraint",
      "matches": {
        "=>": true
      },
      "source": "vim-snippets/snippets"
    },
    "7665b6dd-eefe-3982-a50d-f4d78da5eafc": {
      "content": "{% macro ${1:#:name}(${2:#:args}) %}\n\t${0:TARGET}\n{% endmacro %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% macro ...(...) %} ... {% endmacro %}",
      "matches": {
        "macro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "766745df-90c8-3fcc-ac56-602380ade2a7": {
      "content": "import styled from 'styled-components';\n\nconst ${1} = styled.${2}`\n  ${3}\n`;\n\nexport default ${1};",
      "doc": "Styled-Components file",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-components-file",
      "matches": {
        "scf": true,
        "styled-components file": true
      },
      "source": "javascript/styled-components"
    },
    "766a5433-6b95-316f-a596-0e06559b6384": {
      "content": "use:action",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use",
      "matches": {
        "svelte use": true,
        "svu": true
      },
      "source": "javascript/svelte"
    },
    "766e4085-fdd6-3f9b-b253-6db863af0f09": {
      "content": ".. note::\n\t${0:my notes}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not:": true
      },
      "source": "vim-snippets/snippets"
    },
    "76700ed8-e08c-3512-87ae-ce7563370f86": {
      "content": "_.updateWith(${object}, ${path}, ${updater}, ${customizer})",
      "doc": "var object = {};\n\n_.updateWith(object, '[0][1]', _.constant('a'), Object);\n// => { '0': { '1': 'a' } }\n\nThis method is like `_.update` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-updatewith",
      "matches": {
        "lodash updatewith": true
      },
      "source": "javascript/lodash"
    },
    "7675445d-dfd9-3baf-ae93-86d7766194c4": {
      "content": "{% render '${0:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render": true
      },
      "source": "vim-snippets/snippets"
    },
    "767fa49e-fe0f-3dea-b2ef-d3101cfe7b85": {
      "content": "${1:FIELDNAME} = models.SmallIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smallint": true
      },
      "source": "vim-snippets/snippets"
    },
    "7683be10-2c2a-3168-9ea3-2bb80d915558": {
      "content": "border-style: outset",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "7688f6c6-9b20-320b-aded-8b5ec6e6de84": {
      "content": "@synthesize ${1:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "syn": true
      },
      "source": "vim-snippets/snippets"
    },
    "768cad99-9210-36ce-89b6-772a219e0e74": {
      "content": "router.afterEach((to, from) => {\n\t\n});",
      "doc": "Vue Router global guards afterEach",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router afterEach",
      "matches": {
        "vaftereach": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "769229c9-20ea-3923-8433-928eecb7495a": {
      "content": "overflow-y: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "7693b14d-d4f0-3912-83af-2537456b4bc1": {
      "content": "@doc \"\"\"\n${1:doc string}\n\"\"\"\ndef ${2:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defd": true
      },
      "source": "vim-snippets/snippets"
    },
    "7693f117-9e01-377f-90c0-79343ec4269d": {
      "content": "sub ${1:#:function_name} {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "769a4dcf-9e59-374b-bf91-494b6b4929bc": {
      "content": "text-emphasis: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "769e749e-02c6-3f24-852a-25ef70ac2ba0": {
      "content": "{% capture ${1:#:var} %}${2:#:TARGET}{% endcapture %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "769f1cdb-bfc8-321b-8830-a484ecbe000e": {
      "content": "border-top-right-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "76a18045-9511-3e3b-8a9a-7c1c7c57c863": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon}\n\tbuttons {\"${3:Cancel}\", \"${4:Other Choice}\", \"${5:OK}\"}\n\tdefault button \"${5}\"\nset button_pressed to button returned of result\nif button_pressed is \"${5}\" then\n\t${6:TARGET}\nelse if button_pressed is \"${3}\" then\n\t-- action for cancel button goes here\nelse\n\t-- action for other button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK/Cancel/Other": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "76b09c15-dfd0-3dc2-bbdd-c4c494d43f02": {
      "content": "memcpy(${1:DEST}, ${2:SRC}, ${3:NBYTES})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "memcpy(dest, src, nbytes)",
      "matches": {
        "memcpy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "76b26393-2721-386a-a26a-849fa6032343": {
      "content": "\\\\begin{block}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{block}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "block environment",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/snippets"
    },
    "76b77e5a-fa2a-3c03-9032-3a72128ab78f": {
      "content": "internal string ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&|": true
      },
      "source": "vim-snippets/snippets"
    },
    "76bac44b-2bb9-3fc7-809b-2bba7dd5ac48": {
      "content": "bezierDetail(${0:detail});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierDetail": true
      },
      "source": "vim-snippets/snippets"
    },
    "76c79424-39ff-3721-9f37-8fe1a3cc6e8c": {
      "content": "static_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "static_cast<>()",
      "matches": {
        "static_cast": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "76c8825b-8708-3b44-8d7a-d20e56e00a76": {
      "content": "place-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "76caf215-2f6e-34a9-a73e-7003ac5be1ca": {
      "content": "display inline-table",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      },
      "source": "vim-snippets/snippets"
    },
    "76cb62ba-2fe9-37fe-ac9f-3af98cc8f609": {
      "content": "${2:$1} = require '${1:sys}'",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "snippets/coffee"
    },
    "76d3c916-585d-39b0-972f-5c435833b060": {
      "content": "(defn ${1:name} \"${2:doc-string}\" [${3:arg-list}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      },
      "source": "vim-snippets/snippets"
    },
    "76d561b8-632f-3044-aa03-9f2b634d17f9": {
      "content": "func main() {\n\t${1}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main()",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "76d6f60a-998c-30ba-a7b3-7ed533b9e2ba": {
      "content": "case ${1} is\n\twhen ${2} => ${3};${0}\nend case;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "76e46a4f-e9ba-38dd-bada-dc73d9c124cc": {
      "content": "import axios from 'axios';",
      "doc": "import axios",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-import",
      "matches": {
        "axios import": true
      },
      "source": "javascript/axios"
    },
    "76ed5fb0-e6ed-3907-b806-66fc3404d9b1": {
      "content": "$this->assertFileExists(${1:'path/to/file'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFileExists('path/to/file')",
      "matches": {
        "asfex": true
      },
      "source": "vim-snippets/snippets"
    },
    "76f40e91-d964-3e03-a87d-4da7d647231d": {
      "content": "split('::').inject(Object) { |par, const| par.const_get(const) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clafn": true
      },
      "source": "vim-snippets/snippets"
    },
    "76fda9b2-a530-3030-b5be-1360e101bf2e": {
      "content": "align-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "7700d3d9-8ffb-32b1-bd4c-75e2a5ed9ed6": {
      "content": "export default ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ed": true
      },
      "source": "snippets/javascript"
    },
    "770413b6-cc89-3770-95d8-9e744d367133": {
      "content": "use feature 'switch';",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "7704840c-f3f3-3d1f-b6a4-829ca57bc44d": {
      "content": "border-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bc": true,
        "border-color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77126d05-0a39-346f-b343-9af84c773b61": {
      "content": "// ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "vim-snippets/snippets"
    },
    "7715d11b-fd41-37e8-adac-b0dedf1eef07": {
      "content": "-moz-box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "771b2234-179b-3cb4-b184-25f0a26ceda4": {
      "content": "(* ${1:comment} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "commment",
      "matches": {
        "cc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7722abea-7558-3c4c-84bf-7e1832ffd856": {
      "content": "_.merge(${object}, ${sources})",
      "doc": "var object = {\n  'a': [{ 'b': 2 }, { 'd': 4 }]\n};\n\nvar other = {\n  'a': [{ 'c': 3 }, { 'e': 5 }]\n};\n\n_.merge(object, other);\n// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\nThis method is like `_.assign` except that it recursively merges own and\ninherited enumerable string keyed properties of source objects into the\ndestination object. Source properties that resolve to `undefined` are\nskipped if a destination value exists. Array and plain object properties\nare merged recursively. Other objects and value types are overridden by\nassignment. Source objects are applied from left to right. Subsequent\nsources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-merge",
      "matches": {
        "lodash merge": true
      },
      "source": "javascript/lodash"
    },
    "7722d7c0-37f7-3560-b28d-855c9e5ba892": {
      "content": "set title ${1:#:title}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set title '...'",
      "matches": {
        "title": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77267826-cba6-3ae2-84a2-797cfd1fb118": {
      "content": "priority case (${1}) begin\n    ${2:'b0}: begin\n        ${3}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case_full": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "772a40d7-9c18-30b7-a026-df13b2cf46a6": {
      "content": "{{{\n${0:TARGET}\n}}}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{{<code>}}}",
      "matches": {
        "code": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "772c8dd6-d4b9-350f-9b00-6c7ad4e82c21": {
      "content": "${1:obj}.dblclick (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dblclick": true
      },
      "source": "snippets/coffee"
    },
    "7746665f-2fec-3c8e-991a-93a04a5ef201": {
      "content": "_.trim(${string}, ${chars})",
      "doc": "_.trim('  abc  ');\n// => 'abc'\n\n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n\n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar']\n\nRemoves leading and trailing whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trim",
      "matches": {
        "lodash trim": true
      },
      "source": "javascript/lodash"
    },
    "77484d42-2ef7-35ca-ab24-fb8dd9767c78": {
      "content": "{% continue %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "continue": true
      },
      "source": "vim-snippets/snippets"
    },
    "77571164-157c-31e5-a294-42adf2357eb6": {
      "content": "\\\\begin{cases}\n\t${1:equation}, &\\\\text{ if }${2:case}\\\\\n\t${0:${VISUAL}}\n\\\\end{cases}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "cases environment",
      "matches": {
        "cas": true
      },
      "source": "vim-snippets/snippets"
    },
    "775ac258-ab4a-3e41-a3f5-92c8caa650d2": {
      "content": "while ${1:#:condition} ; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true,
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "775f8d7b-f5d9-3bbe-9eb7-f726bb361a9d": {
      "content": "display: inline-table",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      },
      "source": "vim-snippets/snippets"
    },
    "776becdf-34b7-3a14-82ff-1fbe665d9836": {
      "content": "white-space pre-wrap",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      },
      "source": "vim-snippets/snippets"
    },
    "7772228e-64c7-3f1f-acfa-7fc8cacc881c": {
      "content": "set",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Set",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "7772cb21-d782-3c6c-8934-8e5948e4746b": {
      "content": "border-right-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      },
      "source": "vim-snippets/snippets"
    },
    "777873f8-945f-3eb5-a88c-691c133f1ad8": {
      "content": "{-# OPTIONS_GHC ${0:-fno-warn-unused-imports} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ghc": true
      },
      "source": "vim-snippets/snippets"
    },
    "778084c8-9295-3180-b82f-347434d55a8e": {
      "content": "class ${1:ModelName}(models.Model):\n\t\"\"\"${2:docstring}\"\"\"\n\t${3}\n\tclass Meta:\n\t\t${4}\n\tdef __unicode__(self):\n\t\t${5}\n\tdef save(self, *args, **kwargs):\n\t\t${6}\n\t@models.permalink\n\tdef get_absolute_url(self):\n\t\treturn ('${7:view_or_url_name}' ${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "model": true
      },
      "source": "vim-snippets/snippets"
    },
    "778a059c-237e-3d4d-b54d-ec3c395be048": {
      "content": "noise(${1:x}${2:, }${3:y}${4:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noise": true
      },
      "source": "vim-snippets/snippets"
    },
    "778afb10-44ed-388e-921d-7075d5c0b32c": {
      "content": "#!/usr/bin/env ruby",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "778ec477-8775-3ab3-b01a-c4004800c116": {
      "content": "<td>${1}</td>\ntd+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td+": true
      },
      "source": "vim-snippets/snippets"
    },
    "77901734-4d55-369d-8077-931aa84c697c": {
      "content": "<%def name=\"${1:name}\">\n\t${2:}\n</%def>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "77a4e003-b4f2-3622-aaec-862cbedd2182": {
      "content": "${1:obj}.hover (${2:e}) ->\n\t${3:// event handler}\n, ($2) ->\n\t${4:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hover": true
      },
      "source": "snippets/coffee"
    },
    "77ac2196-b48a-331f-814a-3e0b24fa7363": {
      "content": "around_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mard": true
      },
      "source": "vim-snippets/snippets"
    },
    "77ad34b9-0771-379b-8499-d3e8dc88acb7": {
      "content": ".. tip:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "tip",
      "matches": {
        "tip": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77afbeb1-a1b9-3846-ba8c-ffab22b99322": {
      "content": "*ngFor=\"let ${1:item} of ${2:stream} | async as ${3:list}\"${0}",
      "doc": "Angular *ngForAsync",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngforasync",
      "matches": {
        "a-ngforasync": true,
        "angular ng for async": true
      },
      "source": "javascript/angular"
    },
    "77b4a0ff-ef9f-3e19-8d41-35af7297a4ff": {
      "content": "opacity: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      },
      "source": "vim-snippets/snippets"
    },
    "77b87ab2-d556-3cbd-a576-5fad3ac573c2": {
      "content": "<%inherit file=\"${0:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inherit": true
      },
      "source": "vim-snippets/snippets"
    },
    "77bbafe2-3d28-3f9c-bed2-b7f6e4544ffa": {
      "content": "System.out.print(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77c20dc2-3462-3ca3-8536-65c210d22ce5": {
      "content": "$dataProvider = new CActiveDataProvider('${1}', array(\n  'criteria' => array(\n\t\t'condition' => '${2}',\n\t\t'order' => '${3}',\n\t\t'with' => array('${4}')\n\t),\n//'pagination' => false,\n\t'pagination' => array(\n\t\t'pageSize'=>${5},\n\t),\n));\n${0}\n// $dataProvider->getData() will return a list of Post objects",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yadp": true
      },
      "source": "vim-snippets/snippets"
    },
    "77c25525-90b1-31a2-9209-d9bd041cae8f": {
      "content": "outline-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      },
      "source": "vim-snippets/snippets"
    },
    "77c3c81f-6623-3d9b-abc6-c67d92d01438": {
      "content": "${1:deferred}.done(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ddone": true
      },
      "source": "snippets/javascript"
    },
    "77c57e72-29a7-3c6c-92ed-1c563d15a471": {
      "content": "render file: \"${1:filepath}\", use_full_path: ${2:false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (file,use_full_path) (rfu)",
      "matches": {
        "rfu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "77cd1f20-c6ef-3b6f-a44b-2f76d6cf14c7": {
      "content": "# SCM Resource, Chef::Provider::Subversion\nsvn ${1:\"/destination/path\"} do # Path to clone/checkout/export the source to\n\t${2:#}repository ${3} # URI of the repository\n\t${4:#}revision ${5:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${6:#}reference ${7} # (Git only) alias for revision\n\t${8:#}user ${9:nil} # System user to own the checked out code\n\t${10:#}group ${11:nil} # System group to own the checked out code\n\t${12:#}svn_username ${13} # (Subversion only) Username for Subversion operations\n\t${14:#}svn_password ${15} # (Subversion only) Password for Subversion operations\n\t${16:#}svn_arguments ${17} # (Subversion only) Extra arguments passed to the subversion command\n\t${18:#}${19:action :sync} # Update the source to the specified revision, or get a new checkout (Default)\n\t${20:#}${21:action :checkout} # Checkout the source. Does nothing if a checkout is available\n\t${22:#}${0:action :export} # Export the source, excluding or removing any version control artifacts\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "svn": true
      },
      "source": "vim-snippets/snippets"
    },
    "77d5e095-fdb1-31b2-84bd-f6ed9f54c6a6": {
      "content": "$this->session->flashdata(\"${1:item}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_flashdata": true
      },
      "source": "vim-snippets/snippets"
    },
    "77dffada-de96-38d0-8e8e-7b3a0720bc99": {
      "content": "-define(${1:macro}, ${2:body}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "77e1044d-b0b0-38df-b2e0-b309a7af6c44": {
      "content": "$this->${1:method}()->shouldHaveKeyWithValue(${2:'key'}, ${3:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveKeyWithValue('key', 'value')",
      "matches": {
        "skeyvalue": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "77e2d3b4-a276-310f-9b05-59a10a64d172": {
      "content": "parfor ${1:i} = ${2:1:n}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "parfor",
      "matches": {
        "parfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "77e34f84-7f10-3985-bb75-ee718ccd6d61": {
      "content": "<th>${1:TARGET}</th>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77e5fca8-c6b8-359f-81b4-33d9f86720c5": {
      "content": "struct ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77e72b99-6f1d-316e-abaa-976e00cf7002": {
      "content": "for (${1:auto&& }${2:var} : ${3:container}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "for (:) {}",
      "matches": {
        "for_CPP11": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "77e97d4a-0cd0-3d82-97d5-e8b0e310ab74": {
      "content": "<button class=\"${1:button}\" type=\"${2:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button.": true
      },
      "source": "vim-snippets/snippets"
    },
    "77fa5eff-64b1-3087-ab88-85a123b26b92": {
      "content": "(** ${0:TARGET} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "ocamldoc comment (** .. *)",
      "matches": {
        "oo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "78030150-cc28-3c70-8dcc-a8f391899117": {
      "content": "\\begin{bfseries}\n\t${1:TARGET}\n\\end{bfseries}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{bfseries} \\bfseries": true,
        "bfseries": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7805a25d-93e8-3158-beb1-f312e666a39d": {
      "content": "border-corner-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "78164aa2-df56-31ad-bdaf-554c1986d5db": {
      "content": ".. important:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "important",
      "matches": {
        "important": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "782ae361-7678-30d4-a432-93313fe66426": {
      "content": "_.zipObjectDeep(${props}, ${values})",
      "doc": "_.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\nThis method is like `_.zipObject` except that it supports property paths.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipobjectdeep",
      "matches": {
        "lodash zipobjectdeep": true
      },
      "source": "javascript/lodash"
    },
    "782ca651-6cfd-38b3-86f6-248e9837a4a4": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivate {\n\tconstructor() { }\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivate guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canactivate-guard",
      "matches": {
        "a-guard-can-activate": true,
        "angular can activate guard": true
      },
      "source": "javascript/angular"
    },
    "783c54f6-5135-3ecb-be1e-4a8f2f7d22c4": {
      "content": "<iframe class=\"${1}\" src=\"${2}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe.": true
      },
      "source": "vim-snippets/snippets"
    },
    "7841c06f-737b-367d-bcd0-affcea33cd88": {
      "content": "<summary>${0:#:description}</summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<summary></summary>",
      "matches": {
        "summary": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "78447b86-11e7-3a99-a115-35b206f9f4d7": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      },
      "source": "vscode-react/snippets"
    },
    "7853d04f-8873-3373-b0b8-592acc6ecaee": {
      "content": "overflow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      },
      "source": "vim-snippets/snippets"
    },
    "78602f28-14df-3ca2-8329-1a41ab478027": {
      "content": "afterEach(() => {\n\t$0\n});",
      "doc": "afterEach function is called once after each spec",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-aftereach",
      "matches": {
        "ae": true,
        "jest aftereach": true
      },
      "source": "javascript/jest"
    },
    "7867ba16-b814-3489-9050-6393f3c10186": {
      "content": "${1:obj}.insertAfter('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insa": true
      },
      "source": "snippets/javascript"
    },
    "7868fa16-62ae-3e0e-8424-c3364e553766": {
      "content": "watch([${1:foo}, ${2:bar}], ([new${1}, new${2}], [prev${1}, prev${2}]) => {\n\t${3}\n})",
      "doc": "Vue Composition api - watch as array",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watch - array",
      "matches": {
        "v3watch-array": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "78706bea-8bfa-35c4-a086-26ec9bff958a": {
      "content": "<input type=\"radio\" name=\"${1}\" value=\"value\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputradio": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7873e655-7985-3a38-a2be-4fc3cee9533d": {
      "content": "export const ${1:constantName} = '${1:constantName}'",
      "doc": "",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-const",
      "matches": {
        "redux const": true,
        "rxconst": true
      },
      "source": "javascript/redux"
    },
    "78806182-7c6a-3fda-9c9c-050867e88ac1": {
      "content": "<input type=\"datetime\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:datetime": true
      },
      "source": "vim-snippets/snippets"
    },
    "7888eada-10bd-3477-b529-6cd288a6ecee": {
      "content": "border-style ridge",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "788c855a-378f-3c1d-9811-5cb7eb218e6e": {
      "content": "do while (${1:condition})\n\t$2\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dow": true
      },
      "source": "vim-snippets/snippets"
    },
    "788dae3a-a687-3e46-93bc-2b371e4f545a": {
      "content": "@warn \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@w": true
      },
      "source": "vim-snippets/snippets"
    },
    "788feb52-cf1c-3f89-b44f-75243d4bc970": {
      "content": "get {${1:TARGET}}${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "get {}",
      "matches": {
        "get": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "789567ae-fc9d-3a9e-ad97-f1170a30da99": {
      "content": "var _self = this;",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_sthis": true
      },
      "source": "vim-snippets/snippets"
    },
    "7898126f-e6bb-3e75-a3d6-352a15caa446": {
      "content": "<param name=\"${1:#:name}\">${0:#:description}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<param name=\"\"></param>",
      "matches": {
        "param": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "789ead38-66ab-3bde-a1d2-1ca9fa2136c3": {
      "content": "import React from 'react'\n\nexport const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-component",
      "matches": {
        "rafc": true,
        "react component arrow function": true
      },
      "source": "javascript/react"
    },
    "78a1e13e-b6f5-3758-b2e1-1bd35720e008": {
      "content": "catch(${1:Exception} ${2:e}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      },
      "source": "vim-snippets/snippets"
    },
    "78a89680-e32e-3f5e-8faf-0ac9fd723da8": {
      "content": "expect(${1:target}).not.toContain(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to contain (js)",
      "matches": {
        "notc": true
      },
      "source": "vim-snippets/snippets"
    },
    "78ac73cc-808b-39da-bdbc-2605803a877e": {
      "content": "digitalWrite(${1}, LOW);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dwLow": true
      },
      "source": "vim-snippets/snippets"
    },
    "78b68e21-d176-3044-8fda-068e2c5e2b6a": {
      "content": "shared static this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sst": true
      },
      "source": "vim-snippets/snippets"
    },
    "78b94ab2-7ae1-3814-b7f7-714be3ac603c": {
      "content": "text-height: text-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "78c5a04e-bfde-385e-8d03-729c9091a079": {
      "content": "box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "78cb4cdc-b8fc-31c0-9e23-1feb903acc28": {
      "content": "_.fill(${array}, ${value}, ${start}, ${end})",
      "doc": "var array = [1, 2, 3];\n\n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n\n_.fill(Array(3), 2);\n// => [2, 2, 2]\n\n_.fill([4, 6, 8, 10], '*', 1, 3);\n// => [4, '*', '*', 10]\n\nFills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-fill",
      "matches": {
        "lodash fill": true
      },
      "source": "javascript/lodash"
    },
    "78d1f563-d330-34aa-999b-fd605a16d71c": {
      "content": "list-style-position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      },
      "source": "vim-snippets/snippets"
    },
    "78d256db-456b-3c1c-9247-88018a9b3d4e": {
      "content": "mixed.isType()",
      "doc": "mixed.isType(value: any): boolean\n\nRuns a type check against the passed in value. It returns true if it matches,\nit does not cast the value. When nullable() is set null is considered a valid value of the type.\nYou should use isType for all Schema type checks.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-type",
      "matches": {
        "yup mixed istype": true
      },
      "source": "javascript/yup"
    },
    "78dec63d-a2a4-3e7c-8536-a287aa394d25": {
      "content": "orphans ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      },
      "source": "vim-snippets/snippets"
    },
    "78f684f1-781f-3dcc-916d-149720988080": {
      "content": "outline-color: invert",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "78f8e0a4-9d26-301f-abf3-5d419f89db4b": {
      "content": "const ${1:function_name} = async (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casf": true
      },
      "source": "snippets/javascript"
    },
    "78f959d1-ee58-311d-b65d-5dd502ebf655": {
      "content": "grid-column: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7901192e-7e0d-3d86-8845-641eff6fa1de": {
      "content": "internal bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb&": true
      },
      "source": "vim-snippets/snippets"
    },
    "7903404f-24e3-315e-838c-57ed9f52932c": {
      "content": "max-height none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "7910adc7-8da8-3ce5-9d14-1792cd346882": {
      "content": "{% css %}\n\t${0}\n{% endcss %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig css",
      "matches": {
        "css": true
      },
      "source": "vim-snippets/snippets"
    },
    "79162a53-6658-321f-8306-c78bf6ab89bc": {
      "content": "for ${1} of ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "for_each": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "79173483-5f17-31d6-a183-7b2f1a6ade21": {
      "content": "#!/usr/bin/env Rscript",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "79194345-1d48-3e96-88bb-367984b1cb75": {
      "content": "while (${1:true}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7919c46e-a209-31c8-99b3-830046e49bc3": {
      "content": "let [${1:name}] = ${2:value};",
      "doc": "Array destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-let-array",
      "matches": {
        "base let destruct array": true
      },
      "source": "javascript/base"
    },
    "792bab10-1ccb-36e4-a93e-e9e9b1f48bde": {
      "content": "[#]",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caption": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "79315059-26cf-3c45-874f-eef2ff20a78a": {
      "content": "expect($1).toBeDefined();$0",
      "doc": "expects the argument is defined",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobedefined",
      "matches": {
        "jest expect tobedefined": true,
        "tbd": true
      },
      "source": "javascript/jest"
    },
    "7934ef5d-e619-3c1b-96df-b37e4df85517": {
      "content": "for ${1} = ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "standard for loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "79364acf-9614-3cf1-ba3f-bcf6cad62f1e": {
      "content": "template ${1:#:name}(${2}):${3:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "79383d39-437b-30d3-8d1b-bce3075cd6e8": {
      "content": "text-emphasis: dot;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "79491a03-b4c8-3c29-be8b-868ad86817d4": {
      "content": "type ${1:Interface} interface {\n\t${2:/* TODO: add methods */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "interface I { ... }",
      "matches": {
        "interface": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "794e5487-9056-3461-9d24-dba640d0b0a4": {
      "content": "it { should ensure_length_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isel": true
      },
      "source": "vim-snippets/snippets"
    },
    "794e8c85-0f2b-3e47-9c22-eb165a8136fa": {
      "content": "place-self: ${1:stretch} ${2:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      },
      "source": "vim-snippets/snippets"
    },
    "7956aec3-1e9e-386d-ba87-35fda076c949": {
      "content": "justify-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "79606085-8c41-32cd-b225-8a5f9607ae97": {
      "content": "it { should render_template ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrtp": true
      },
      "source": "vim-snippets/snippets"
    },
    "79615023-dc21-368f-b673-e724915e156c": {
      "content": "\\\\times {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "cross product",
      "matches": {
        "\\x": true
      },
      "source": "vim-snippets/snippets"
    },
    "79636ac6-3d4e-39c9-8d25-b981f99004be": {
      "content": "${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "off": true
      },
      "source": "snippets/coffee"
    },
    "797544ef-db6b-3446-9911-856fdc189e37": {
      "content": "assert(${1:ptr} != NULL);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7975ec4c-d6e7-3696-99f5-1f778e46fcab": {
      "content": "Yii::app()->clientScript->registerScript('${1:id}', '${2}', CClientScript::POS_${0:READY});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregs": true
      },
      "source": "vim-snippets/snippets"
    },
    "7979b5c0-76b3-34fe-a7f9-0b259c83ed05": {
      "content": "<nowiki>${1}</nowiki>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nowiki": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "797c8b27-18dc-3df4-b94c-5d2576537823": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplateUrl: '${2:name}.component.html'\n})\n\nexport class ${3:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }$0\n}",
      "doc": "Angular component",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-component",
      "matches": {
        "a-component": true,
        "angular component": true
      },
      "source": "javascript/angular"
    },
    "79817c25-7bdb-38b0-85a2-2622689544ba": {
      "content": "_.reverse()",
      "doc": "var array = [1, 2, 3];\n\n_(array).reverse().value()\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]\n\nThis method is the wrapper version of `_.reverse`.\n\n**Note:** This method mutates the wrapped array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reverse",
      "matches": {
        "lodash reverse": true
      },
      "source": "javascript/lodash"
    },
    "7993dafa-9240-3d43-98ca-b0abccdf49fa": {
      "content": "white-space-collapse: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7996a625-0621-30e9-8d68-b4914f896e56": {
      "content": "_.flattenDeep(${array})",
      "doc": "_.flattenDeep([1, [2, [3, [4]], 5]]);\n// => [1, 2, 3, 4, 5]\n\nRecursively flattens `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flattendeep",
      "matches": {
        "lodash flattendeep": true
      },
      "source": "javascript/lodash"
    },
    "7996d5c9-1585-310e-ad0a-91ea47f7cd12": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "while (condition) { ... }",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "79982bb0-c683-355d-818e-8ceac50e0524": {
      "content": "type ${1:Type} = ${0:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "799f1d9d-14b0-3ab5-b56e-5b7645697832": {
      "content": "-moz-border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "79c206dc-5821-3ac3-ac75-8eabc247d441": {
      "content": "set grid",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set grid",
      "matches": {
        "grid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "79c49d2a-67dd-373a-b598-a9f811928ebb": {
      "content": "background-break continuous",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "79c78cc7-4bd3-3959-bf44-660caf7a7a28": {
      "content": "content: attr(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "79d0218b-845f-3d36-b952-5a802fd3365f": {
      "content": "[bibliography]\n== References\n- [[${1:id}]] ${2:Entry}\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "bibliography",
      "matches": {
        "bib": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "79e04e56-5588-3187-9f3a-f2e92348dd93": {
      "content": "impl AsRef<${1:Ref}> for ${2:Type} {\n\tfn as_ref(&self) -> &${3:$1} {\n\t\t&self.${0:field}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "AsRef trait implementation",
      "matches": {
        "asref": true
      },
      "source": "vim-snippets/snippets"
    },
    "79ec8b34-04c1-319c-907a-f3f7b71151f3": {
      "content": "attr_accessible :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ata": true
      },
      "source": "vim-snippets/snippets"
    },
    "79ed3286-e272-398b-a934-03384b37e869": {
      "content": "if (${1:true}) {\n  ${2}\n} else {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "79f250d4-ccb0-33b3-b6dc-9af6d985b53c": {
      "content": "console.error(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.error",
      "matches": {
        "ce": true
      },
      "source": "snippets/javascript"
    },
    "79f6fdab-775c-3bad-8245-c87d19989343": {
      "content": "render file: '${1:filepath}', use_full_path: ${0:false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfu": true
      },
      "source": "vim-snippets/snippets"
    },
    "79f94d7f-9aea-3ada-be5c-904c9fb29b1c": {
      "content": "echo CHtml::form(array('${1}'), '${2:post}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhform": true
      },
      "source": "vim-snippets/snippets"
    },
    "79fb315c-1dcc-3b4e-be86-431282223dd2": {
      "content": "place-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a002507-9194-357d-99c3-fe905d3902c1": {
      "content": "Console.WriteLine(\"$1\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Console.WriteLine",
      "matches": {
        "cw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7a018ebb-5848-34fa-935b-f89f7db491bc": {
      "content": "switch (${1:expression}) {\n\tcase '${3:case}':\n\t\t${4}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${2}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "snippets/javascript"
    },
    "7a03ef54-fa17-3b7d-9301-0d8fdb4fe89a": {
      "content": "redirect_to controller: \"${1:items}\", action: \"${2:list}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller, action)",
      "matches": {
        "reca": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7a0609d5-596e-3d24-b91d-3821071656a3": {
      "content": "$.grep(${1:array}, (item, index) >\n\t${2}\n${0:, true})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grep": true
      },
      "source": "snippets/coffee"
    },
    "7a0e6195-31f1-370b-b819-d0a945089536": {
      "content": "| ceil",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ceil": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a1467f9-bdf2-3313-8a5d-d2828740e368": {
      "content": "${1:FIELDNAME} = models.TextField(${0:blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a1ca17f-0c1a-31d1-84b2-f871d70a6702": {
      "content": "Yii::app()->user->",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yuser": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a22374d-10c0-38eb-8373-4af5e3fb6242": {
      "content": "console.warn(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "console-warn": true,
        "cw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7a239257-320c-3414-843c-47f3aa1015e6": {
      "content": "{-# LANGUAGE ${0:OverloadedStrings} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lang": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a249ba1-7648-37ef-9df3-60dead911cba": {
      "content": "${1:div}(v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\")\n\t| {{ ${2:item} }}",
      "doc": "vfor statement",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-for",
      "matches": {
        "vfor": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "7a28ebba-1994-3d09-91df-0bb1d3695176": {
      "content": "justify-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a3748f1-8a4f-39ab-9b42-acf25ac69c43": {
      "content": "_.differenceBy(${array}, ${values}, ${iteratee})",
      "doc": "_.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2]\n\n// The `_.property` iteratee shorthand.\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n// => [{ 'x': 2 }]\n\nThis method is like `_.difference` except that it accepts `iteratee` which\nis invoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).\n\n**Note:** Unlike `_.pullAllBy`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-differenceby",
      "matches": {
        "lodash differenceby": true
      },
      "source": "javascript/lodash"
    },
    "7a3917f2-ddbd-34fd-86da-0fcaa4eb2799": {
      "content": "$this->${1:method}()->shouldNotReturn(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotReturn('value')",
      "matches": {
        "snreturn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7a39713d-83e0-33ab-85c1-72fa4561b6ea": {
      "content": "<%= render partial: '${0:item}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a3dfb00-12ba-30b0-b48c-51fd436daba1": {
      "content": "else if ${1:#:condition}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7a3f19d3-8e37-3a21-b807-7832a5e2d9a8": {
      "content": "Mouse Out    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Out",
      "matches": {
        "mout": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7a46784c-d3a7-31bf-a300-6fc5d2a90d02": {
      "content": "transaction(${1:true}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tra": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a486533-9b56-39a8-9862-25af3f9d0e84": {
      "content": "| asset_url",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asset_url": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a49f6ed-5152-34e1-9528-93fac3532480": {
      "content": "unless ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a52d347-3717-31bb-9a52-ce0526cf0e41": {
      "content": "{% cycle '${1:odd}', '${2:even}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a59cb5c-c549-3a9f-8f33-2b190060e535": {
      "content": "class ${1:name}${2:(arg)} extends Ordered[$1] ${3: with} {\n\t${4:override def toString = \"$1\"}\n\tdef compare(that: $1) = ${5:this - that}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ordered": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a617ad1-9cdb-30d3-9fa0-0ed34e3abe53": {
      "content": "this.route.paramMap\n\t.pipe(map(params => params.get('id')), tap(id => (this.id = +id)))\n\t.subscribe(id => {$1});\n$0",
      "doc": "Angular - subscribe to routing parameters",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Routing Params - Subscribe",
      "matches": {
        "a-route-params-subscribe": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "7a670ed8-49c2-33a1-8a57-6d3aad886506": {
      "content": "align-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a68cd44-e9f8-33f7-af53-b59f62f04372": {
      "content": "type ${1} = ${0};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a6b8231-04a3-36b2-8372-85c326f876aa": {
      "content": "for ${1:i} = ${2:0} to ${3:10} do\n  ${0:TARGET}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "for i=x..y do; ... done",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7a6d93ab-3b62-37fb-b947-89fe35629554": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select { case a := <-chan: ... }",
      "matches": {
        "select": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "7a711842-ee60-3ee1-8bec-9a36b6d262ba": {
      "content": "_.isNaN(${value})",
      "doc": "_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false\n\nChecks if `value` is `NaN`.\n\n**Note:** This method is based on\n[`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\nglobal [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n`undefined` and other non-number values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnan",
      "matches": {
        "lodash isnan": true
      },
      "source": "javascript/lodash"
    },
    "7a7d95d0-e02e-36b8-bc80-d865271006c4": {
      "content": "if ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7a96019b-6f91-3865-8693-f61d1ce1b00c": {
      "content": "this.state.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tst": true
      },
      "source": "snippets/javascript"
    },
    "7a9835a0-aff4-36d9-8726-3ba6408ea012": {
      "content": "for ${1:i} in ${2:#:words}; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7aa3c68e-f484-34da-bf56-bf39eb54b5f8": {
      "content": "import ${1:String}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "imp": true,
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7aa78a33-04b3-3c72-8820-fda309bef73d": {
      "content": "each_value do |${1:val}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eavd": true
      },
      "source": "vim-snippets/snippets"
    },
    "7aada790-6943-3dad-9e75-b89cdbaee27a": {
      "content": "${1}:\nloop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named loop",
      "matches": {
        "nlo": true
      },
      "source": "vim-snippets/snippets"
    },
    "7aafe4e1-ae16-3f41-a7eb-289d77011c17": {
      "content": "NSAutoreleasePool${TM_C_POINTER: *}pool = [NSAutoreleasePool new];\n${0}\n[pool drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pool": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7ab1d3c2-7872-3784-887f-fcf90cc1615f": {
      "content": "${1}\t=> ${0}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        ">": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ab31924-01b2-3e67-96cf-822dae5c2001": {
      "content": "switch ($${1:variable}) {\n\tcase '${2:value}':\n\t\t${3}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${4}\n\t\tbreak;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "switch($var) { case 'xyz': ... default: .... }",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "7abc7283-34ab-3c56-b6bf-5f1fd032d48d": {
      "content": "${1:obj}.next('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "next": true
      },
      "source": "snippets/coffee"
    },
    "7abd3b63-ddb5-30bd-9744-71fcdb0d2c35": {
      "content": "import React from 'react'\nimport { View } from 'react-native'\n\ninterface ${1:${TM_FILENAME_BASE}}Props {\n\t\n}\n\nconst ${1:${TM_FILENAME_BASE}}: React.FC<${1:${TM_FILENAME_BASE}}Props> = (props) => {\n\treturn (\n\t\t<View>\n\t\t\t$0\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Native Arrow Function Component with ES7 module system and named TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typescriptReactNativeArrowFunctionComponentNamedProps",
      "matches": {
        "tsrnfi": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "7abfaaa0-50e4-347a-b60a-8675bfff70cc": {
      "content": "v-else-if=\"${1:condition}\"",
      "doc": "Expects: any. previous sibling element must have v-if or v-else-if.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-else-if",
      "matches": {
        "velseif": true,
        "vue v-else-if": true
      },
      "source": "javascript/vue"
    },
    "7ac303a6-b405-381f-8810-a0af5c63e496": {
      "content": "caption-side: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ac41066-20ae-3fe5-aabf-10a0f248a908": {
      "content": "echo CHtml::beginForm(array('${1}'), '${2:post}',array('${3:optionName}'=>${4:optionValue}));\n${0}\necho CHtml::endForm();",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhbeform": true
      },
      "source": "vim-snippets/snippets"
    },
    "7acaa395-6bed-34b4-8dce-8dd18c0e6994": {
      "content": "justify-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "7acb0bee-5415-39ec-b567-33979b45cd5f": {
      "content": "goto case ${1:#:Val};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "goto": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7acd26d9-796b-3b2e-bd3e-95eccade9981": {
      "content": "switch (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "7acd75a0-93d1-3d78-add4-ad78e9707787": {
      "content": "{\n\tpath: '${1:path}', \n\tloadChildren: () => import('${2:lazy-path}').then(m => m.${3:lazy-module})\n},$0",
      "doc": "Angular lazy route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Lazy Route Path",
      "matches": {
        "a-route-path-lazy": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "7ad3153f-80e4-3772-a383-d259821974d2": {
      "content": "exec { \"${1:name}\":\n\tcommand => \"${2:$1}\",\n\tuser    => \"${3:root}\",\n\t${4}    => ${0},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exec": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ad34028-e3b5-3ec4-b556-9822cf515081": {
      "content": ";;\n;; @brief      ${1:function description}\n;;\n;; @details    ${2:detailed description}\n;;\n;; @param      ${3:param}\n;;\n;; @return     ${4:return}\n;;",
      "doc": "",
      "filetype": "asm",
      "grammar": "snu",
      "label": ";; @brief ...",
      "matches": {
        "doxy": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7ae34b7f-72a5-38cd-a931-4a1001a67b46": {
      "content": "let ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts let",
      "matches": {
        "tlet": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ae49b83-4612-33c8-b621-58616039887d": {
      "content": "align-self flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ae5d81b-6f9e-3034-b2c4-f7e8a9acbce9": {
      "content": "sort_by { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sorb": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ae5e817-9803-30d1-8a1a-2636808f0f2c": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "(condition) { ... }",
      "matches": {
        "wh": true
      },
      "source": "snippets/javascript"
    },
    "7aedc7a0-6c3a-3e13-a7c6-de120a49b1ca": {
      "content": "=head2 $1\nSummary of $1\n=cut\nsub ${1:subroutine_name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subpod": true
      },
      "source": "vim-snippets/snippets"
    },
    "7af2600d-96a4-3ac7-8461-2d1cc986376a": {
      "content": "cursor: pointer;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "7af9a431-9ab8-3837-804f-0d604f443abd": {
      "content": "padding-bottom: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-bottom: length (margin)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7b02dfd3-34bf-3954-886d-92f768fb2c67": {
      "content": "{{- if .Values.$1.initContainers }}\n\t  initContainers:\n\t  - name: wait-workers\n\t\timage: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\t\timagePullPolicy: {{ .Values.${1:value_key}.image.pullPolicy }}\n\t\t# env\n\t\tcommand:\n\t\t  - sh\n\t\t  - -c\n\t\t  - |\n\t\t\tuntil printf \".\" && nc -z -w 2 {{ template \"${2:chartName}.fullname\" . }} {{ .Values.postgresql.service.port }}; do\n\t\t\t\tsleep 2;\n\t\t\tdone;\n\t\t\techo 'PostgreSQL OK ✓'\n\t\t# args\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "initContainers_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b09825e-d364-353d-9bc0-21ea8e0d521c": {
      "content": "(for/fold\n\t([${1}])\n\t([${2}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/fold",
      "matches": {
        "forf": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b0e4bfb-bb6a-3c66-924a-e9d795d4620d": {
      "content": "font-family: ${1:\"Helvetica Neue\", Helvetica, Arial, sans-serif};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-family",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7b0fc437-927c-30c5-9592-77c5946355a2": {
      "content": "border-top-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b18c140-a65c-3df2-9ca9-2a1e50f5ef74": {
      "content": "const ${1:actionCreatorName} = ${2:payload} => {\n  return {\n    type: '${3:ACTION_TYPE}',\n    payload: ${2:payload},\n  };\n};",
      "doc": "Redux action template",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-action",
      "matches": {
        "redux action": true,
        "rxaction": true
      },
      "source": "javascript/redux"
    },
    "7b1caae1-6c7d-311b-a0d5-289e480a9d3b": {
      "content": "runs ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "runs (coffee)",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7b2ef8ae-15a0-3b5d-a6f6-a5951634d230": {
      "content": "IBOutlet ${1}${2: *}${3};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "IBOutlet",
      "matches": {
        "ibo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7b327e78-4316-3ef6-9d58-e6ab69f9666a": {
      "content": "<Helmet>\n  <title>${1:title}</title>\n</Helmet>",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-title",
      "matches": {
        "react-helmet title": true
      },
      "source": "javascript/react-helmet"
    },
    "7b36bd5b-aa1e-36e0-a195-46465df18f2e": {
      "content": "NSArray * array;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b396e7a-c647-35ba-892f-a75887a3b6f4": {
      "content": "border-bottom-left-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b3a3acb-c581-3c13-8dae-734fa91b2088": {
      "content": "t.${1:string} :${2:title}${3:, null: false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mnc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b3b26d7-108f-3447-bf3b-9051e63aeec6": {
      "content": "continue",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "continue",
      "matches": {
        "cn": true
      },
      "source": "gosnippets/snippets"
    },
    "7b401a66-861f-3bb2-8a81-fa870ec85b6d": {
      "content": "div(ng-repeat='${1} in ${2}' | ${3})",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repf": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b40bbb6-2c81-39a4-a9b1-a88bdf29a0fd": {
      "content": "fn ${1:args} -> ${0} end",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b429203-444d-30fd-8277-bf451b1a2662": {
      "content": "display table",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b467a67-eee0-3921-9f68-9a7aa409dafa": {
      "content": "Wait Until Element Is Enabled    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Enabled",
      "matches": {
        "wueie": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7b485ca5-e488-3538-93ab-68d9824fd7aa": {
      "content": "min-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b58efc0-da37-3c6f-a860-0dc4f9274c57": {
      "content": "runs(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "runs (js)",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b5e2c40-e45a-3a3d-8bb0-d9fc856d2acd": {
      "content": "let ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "let ... end",
      "matches": {
        "let": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7b68a4e6-712f-34c8-9e7f-63c546fc2842": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switchndef": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b6a02e0-a7a3-3e23-a655-47c58b47f7ef": {
      "content": "case ${1:#:expression} :\n\t${1:TARGET}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "ce",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7b7c53df-ae20-3262-a668-dad13585f757": {
      "content": "_.clamp(${number}, ${lower}, ${upper})",
      "doc": "_.clamp(-10, -5, 5);\n// => -5\n\n_.clamp(10, -5, 5);\n// => 5\n\nClamps `number` within the inclusive `lower` and `upper` bounds.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clamp",
      "matches": {
        "lodash clamp": true
      },
      "source": "javascript/lodash"
    },
    "7b917508-5b27-331d-ab23-ef5135350eaf": {
      "content": "outline ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      },
      "source": "vim-snippets/snippets"
    },
    "7b9fcb26-2ffe-3805-ab2c-567407aa5cdd": {
      "content": "background-clip: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ba6c602-376f-3354-b314-bc7b4b75c7bc": {
      "content": "{\n\tblock : '${1:name}',\n\tcontent : [\n\t\t'${2:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ba88c1b-4178-3891-ad4e-e4db6fe091e9": {
      "content": "for ${1:name} in ${2:array}\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ba9596d-1e31-36e7-992e-c2ed363ba7f3": {
      "content": "if let ${1:Some($2)} = $3 {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if let (...)",
      "matches": {
        "ifl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bab6ef9-7cc9-3b5a-860f-39bd59a33323": {
      "content": "this.$route.params.${1:id}",
      "doc": "Nuxt Route Params",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Route Params",
      "matches": {
        "nparam": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "7bb70424-7ac4-3506-9c59-be8d51515bf3": {
      "content": "def ${1:name}, do: ${2}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bcf5c0a-6817-3e57-a6f6-fb5547ae80c1": {
      "content": "---\nlayout: ${1}\ntitle: ${2}\ncategory: ${3}\n---\n${0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "layout title category",
      "matches": {
        "---": true,
        "front-matter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7bd065e0-5e76-38a2-82ef-6e88f6db773c": {
      "content": "<select [(ngModel)]=\"${1:model}\">\n\t<option *ngFor=\"let ${2:item} of ${3:list}\" [value]=\"${2:item}\">{{${2:item}}}</option>\n</select>",
      "doc": "<select> control with ngModel",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngselect",
      "matches": {
        "a-select": true,
        "angular ng select": true
      },
      "source": "javascript/angular"
    },
    "7bd6dd5f-e0ba-370a-89c6-9b5d4c81d953": {
      "content": "when {\n\tbuildingTag '${1:tag}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenbuildingTag": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bd980c8-d1e5-357c-bb12-366083eb9e96": {
      "content": "{\n\t\"type\": \"range\",\n\t\"id\": \"${1}\",\n\t\"min\": ${2},\n\t\"max\": ${3},\n\t\"step\": ${4},\n\t\"unit\": \"${5}\",\n\t\"label\": \"${6}\",\n\t\"default\": ${0}\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_range": true
      },
      "source": "vim-snippets/snippets"
    },
    "7be37f76-8f5f-30bd-8a03-f34757a0ce94": {
      "content": ".. csv-table:: ${1:#:TITLE}\n\t:header: \"${2:#:Header1}\", \"${3:#:Header2}\"${4:#:Headers}\n\t\"${5:#:Column1}\", \"${6:#:Column2}\"${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_csvtable",
      "matches": {
        "csvtable": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7be3efed-ce27-3acb-8b5a-5ddce73beacb": {
      "content": "empty-cells show",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bec65b7-b003-34fd-aed1-ff8a8a25e5c1": {
      "content": "{% endcache %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endcache",
      "matches": {
        "endcache": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bef4840-3423-31bb-881d-aa383ac05411": {
      "content": "border-corner-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bf4df53-7468-3316-9b05-d76d926108be": {
      "content": "display: -moz-inline-stack",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      },
      "source": "vim-snippets/snippets"
    },
    "7bf80ca4-91ad-3cce-b52c-b282dde7460d": {
      "content": "font-weight: bolder;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c03e030-7f94-372c-a77c-8b236ddaf613": {
      "content": "expect(${1:object}).to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c0421af-5a03-3864-864a-4b11153d6749": {
      "content": "expects($this->${1:once}())\n\t->method('${2}')\n\t->with(${3})\n\t->willReturn(${4});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "phpunit expects",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c04e387-c403-3eed-9d5b-4e8dba5e7da9": {
      "content": "render file: '${0:filepath}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c05ae1f-47f5-34b2-be4b-e1c0abcf4da3": {
      "content": "append(${1:array}, ${0:element});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c0f87ae-3c58-3995-a941-ab828745c55d": {
      "content": "\\\\longrightarrow {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "longrightarrow",
      "matches": {
        "lra": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c111526-2636-3bb7-bfa4-bfff5c0ee5ff": {
      "content": "${${0:0}:TARGET}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${*:TARGET}",
      "matches": {
        "T": true,
        "TARGET": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c1609e5-7210-3a67-a577-f552f431e052": {
      "content": "expect(${1:target}).not.toBeHidden()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be hidden (coffee)",
      "matches": {
        "noth": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7c17503d-92da-3386-a2e8-3d56170923cb": {
      "content": "set output '${1:#:filename}'",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set output 'filename'",
      "matches": {
        "out": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c21a503-3668-3156-b5b0-66a0148fca5f": {
      "content": "text-emphasis: before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c28ddf7-9422-3e3e-8146-53d8eddc3d4b": {
      "content": "align-content: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c2f7548-9930-3a23-8cc0-b07a31848638": {
      "content": "\"blocks\": [\n\t{\n\t\t\"type\": \"${1}\",\n\t\t\"name\": \"${2}\",\n\t\t\"settings\": [\n\t\t\t${0}\n\t\t]\n\t}\n]",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_blocks": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c3114de-e5a4-32e7-b174-2c5fc9872d96": {
      "content": "display: grid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c34f09b-183f-3c05-ac18-71522134c227": {
      "content": "std::multimap<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c367f95-edf7-3db7-9f93-0773695718a0": {
      "content": "go func() {\n\t${1:${VISUAL}}\n}()\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go func() { ... }()",
      "matches": {
        "gof": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "7c368913-ae81-37b5-8706-4330ac4ea17a": {
      "content": "#if ${1:FOO}\n\t${0:${VISUAL}}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c36c947-c01c-369d-bf19-d50eedf34771": {
      "content": "mailalias { \"${1:localpart}\":\n\trecipient => \"${0:recipient}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mailalias": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c374302-5420-34cf-90e4-ed2774cf2e60": {
      "content": "\\begin{displaymath}\n\t${1:TARGET}\n\\end{displaymath}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{displaymath} \\displaymath": true,
        "displaymath": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c3983e7-f38b-3e17-b14a-dd9b8efd10ad": {
      "content": "form_reset(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_reset": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c3d1593-5c45-3cc0-bac3-bdde37714496": {
      "content": "macro ${1}(${2})\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "macro ... end",
      "matches": {
        "macro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c3f42c5-91a5-3fb0-ad90-d26440fb7db8": {
      "content": "<meta name=\"author\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaauthor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c3f6c3d-1f33-3033-8dbb-b8879766a9f2": {
      "content": "${1:name}\tdate\t${3:default sysdate}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dcol": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c4dafbf-8434-3bd6-bafe-98068317cd36": {
      "content": "$.merge(${1:target}, ${0:original});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "merge": true
      },
      "source": "snippets/javascript"
    },
    "7c4f695c-d564-366a-82c7-5fd09a72d652": {
      "content": "list-style-type: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c526fb5-6999-3178-bbec-8e3948a86805": {
      "content": "\\${1}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1}",
      "matches": {
        "1": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c54f904-9da7-39b0-a9fa-07aa3e1ce66b": {
      "content": "background-attachment: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c5b23c5-7576-3709-ba81-479851bbf5d4": {
      "content": "{% tablerow ${1:item} in ${2:collection} cols: ${3:2} %}\n\t${0}\n{% endtablerow %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tablerow": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c62b94d-09de-3a1e-b32f-72353df02c64": {
      "content": "{% endcss %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endcss",
      "matches": {
        "endcss": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c6735ca-f266-3d9c-85c3-e3f48e4efd25": {
      "content": "NSMutableArray * array;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c6b842a-82a8-3beb-8719-861798845a82": {
      "content": "<small>${1:TARGET}</small>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "small": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c6d3cde-4b8b-3f4e-a8b2-617111203099": {
      "content": "printAsBitmapNum(${1:#:level}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c732383-c4a9-34bf-b4af-1c575b1b7e29": {
      "content": "justify-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c75dca1-f965-3ced-a279-dc4224799c3a": {
      "content": "background-origin content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c7ebb89-3b9b-320a-8898-b72d42c71578": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} balance ${4:Account} ${5:Amount} ${6:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "balance",
      "matches": {
        "balance": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7c828e1f-253f-3c35-8d9e-b5d9bf1e24d3": {
      "content": "number.negative()",
      "doc": "number.negative(message?: string | function): Schema\n\nValue must be a negative number.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-negative",
      "matches": {
        "yup number negative": true
      },
      "source": "javascript/yup"
    },
    "7c82999f-c681-3bd9-9f79-4ae9dbb85366": {
      "content": "<main role=\"main\">\n\t${0}\n</main>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c8317a1-d62d-34fe-a650-0425ca7d7c3f": {
      "content": "@if ($1)\n\t${2:${VISUAL}}\n@else\n\t${3:${VISUAL}}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@if @else structure",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7c88603b-04c4-3c44-bbec-9d6788cd3b37": {
      "content": "export type ${1:${TM_FILENAME_BASE}} = {$0}",
      "doc": "",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "Export type",
      "matches": {
        "exptp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "7c97fa46-babc-38f6-b663-156c116b3a5d": {
      "content": "<h5>${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c99b87b-4a07-35e2-8caa-1652d80d60a9": {
      "content": "@mixin ${1:name}(${2}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      },
      "source": "vim-snippets/snippets"
    },
    "7c9fcf14-7813-3ac4-9814-8dd4ecfa1152": {
      "content": "if __FILE__ == \\$0\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7ca5f242-a814-3985-aac5-aa33221ee02c": {
      "content": "urlizetrunc:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cb231fd-4c72-333d-8921-75974ed14e96": {
      "content": "slice:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cb36835-79a5-3b3f-ad3b-3ef3dfe6f7e8": {
      "content": "@see ${0:#:reference}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "see": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7cb86df8-ceb2-3f6c-a477-890c42b1e91e": {
      "content": "{% stylesheet '${1:scss}' %}\n\t${0}\n{% endstylesheet %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet_scss": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cbb7a5d-85ac-36ea-9c81-89132b7e1dd3": {
      "content": "word-break: keep-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cc1bf05-3da7-37f4-91b5-16d6c44d0aca": {
      "content": "expand.grid(${1:...}, ${2:KEEP.OUT.ATTRS = ${3:TRUE}}, ${4:stringsAsFactors = ${5:TRUE}})",
      "doc": "Expand grid",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "exp",
      "matches": {
        "exppand": true
      },
      "source": "vscode-R/snippets"
    },
    "7cc6fede-bb4f-3435-84df-b60c9433dce9": {
      "content": ":only-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ccf9b60-6d3e-3f34-b6b7-8ff50f030a8d": {
      "content": "border-left: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ce74823-f925-3c34-805a-69fde8a5d862": {
      "content": "function* ${1:name}(${2:arguments}) {\n\t${0}\n}",
      "doc": "named generator function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "named-generator-function-es6-",
      "matches": {
        "base function generator named": true
      },
      "source": "javascript/base"
    },
    "7cea35c1-947e-3b80-af75-6891fb070ef7": {
      "content": "{% raw ${0:expression} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cea63a8-b2db-3546-9829-5ce6226799cf": {
      "content": "<#macro ${1:macro_name} ${2:param1}>\n\t${0:${VISUAL}}\n</#macro>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#macro macro_name param1>...</#macro>",
      "matches": {
        "mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cef818e-f827-302a-b4d8-b1ba2c46c33a": {
      "content": "Ada.Text_IO.Put_Line(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put_Line",
      "matches": {
        "putl": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cefc5e7-ff49-3dba-9769-25b49c60693a": {
      "content": "console.log ${0}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "snippets/coffee"
    },
    "7cf2479a-6000-3f67-b124-ba9672ccf6e9": {
      "content": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {\n\t${3:std::cout << *$1 << std::endl;}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itera": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cf4cb5b-5754-357d-b568-52cb373843de": {
      "content": "<script>\n\t${0}\n</script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cf6782f-7068-3e75-bd4f-9488b11a1631": {
      "content": "<legend><span>${0}</span></legend>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend+": true
      },
      "source": "vim-snippets/snippets"
    },
    "7cffc245-6fc2-3261-bed0-1ff5c54a3437": {
      "content": "${1:deferred}.reject(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drej": true
      },
      "source": "snippets/coffee"
    },
    "7d013d85-7ca1-3fea-a002-77fb2f2cd210": {
      "content": "${1:app}.get('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express GET",
      "matches": {
        "eget": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7d0bb87d-67dd-3ac0-99f5-6ed923d2ad0b": {
      "content": "test(\"${1:description}\") {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d112132-bc8d-3de1-9131-e431887d0d8e": {
      "content": "has_one :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ho": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d12eb05-73e0-3afa-9450-37f5a8411bfc": {
      "content": "when {\n\tchangeRequest '${1:changeRequest}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangeRequest": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d1358c1-d718-39e5-8327-bdded57e2911": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thr": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d16fcf2-7b20-334d-8be9-1e611b4a6b17": {
      "content": "while ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "while ...: ...",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7d1f4670-b1c9-3cbb-8d9f-bc0711672250": {
      "content": "for (${1:1}, ${2:10}) {${3: |i}|}\n\t$0\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7d2f050c-3771-36f5-a5a2-d941789903be": {
      "content": "word-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d315109-7e0f-3d26-8bbb-cec3eac416a5": {
      "content": "text-wrap unrestricted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d33c1b8-a7c5-3057-bc91-dca0454f2667": {
      "content": "<fieldset class=\"${1}\">\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset.": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d35beb7-a7b8-3346-a9a1-0640ed5c9277": {
      "content": "#lang web-server/insta",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#wi": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d3c3e7e-5409-3d2e-a068-53e27cd6a246": {
      "content": "to!(${1:/*type*/})(${2:/*arg*/})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "to (to)",
      "matches": {
        "to": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7d4433ec-201d-3f48-8510-2b4d04bb55aa": {
      "content": "align-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d44d7db-b6cc-3d02-827e-1bf1e2e46d3b": {
      "content": "= link_to ${1:name}, ${2:dest}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lt": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d498de3-3568-3094-8f8a-a173ba1bf21e": {
      "content": "$.parseJSON(${1:data})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsejson": true
      },
      "source": "snippets/javascript"
    },
    "7d4cbe03-aaa8-3d70-ac45-74a1b6556b53": {
      "content": "${1:obj}.promise(${2:'fx'}, ${3:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "promise": true
      },
      "source": "snippets/javascript"
    },
    "7d593f0c-c9a1-3987-afb8-b0868d9e2864": {
      "content": "if ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d5a2205-5405-3176-a2a7-63d9489c9073": {
      "content": "[${1:#:link_id}][]${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link][]",
      "matches": {
        "link": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7d60bb30-aeb7-3206-84ec-43d5afcd3e7b": {
      "content": "<option value=\"${1}\">${2:TARGET}</option>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7d86c7aa-7480-3806-b981-2e9900765385": {
      "content": "str",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "String",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d8f0884-f487-3868-b748-48b48894a1ef": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "7d8f402d-4927-3d50-8b01-95fdfc4def22": {
      "content": "background-size: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d902748-c73c-3667-875c-9687631dc68f": {
      "content": "+${1}+${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "+verbatim+",
      "matches": {
        "verb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7d9422c7-4528-3937-afcd-6d8484ed9547": {
      "content": "override",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "over": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d96a348-8b69-342b-9ff9-43557598a190": {
      "content": "case ${1} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "7d9c23bc-0521-3f4d-92f0-375886344d9c": {
      "content": "<Proxy ${1:*}>\n\t${0:${VISUAL}}\n</Proxy>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      },
      "source": "vim-snippets/snippets"
    },
    "7da20f05-ccae-3cce-9d12-3eceebf1f4ee": {
      "content": "return ${0};",
      "doc": "return",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "base return": true
      },
      "source": "javascript/base"
    },
    "7da541a2-d9ce-3003-9067-1facf7ac44c5": {
      "content": "refute_same ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfs": true
      },
      "source": "vim-snippets/snippets"
    },
    "7db23432-3695-3522-9bda-6c37df440544": {
      "content": "@manual{${1:LABEL},\n    title = {${2}},\n    memo = {author, organization, address, edition, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@manual": true,
        "manual": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7db895a3-e251-3780-baa1-2ab77a6382b7": {
      "content": "export const ${1} = styled.${2}.attrs({\n  ${3}: ${4}\n})`\n  ${5}\n`;",
      "doc": "Export styled-component with attributes",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component-with-attributes",
      "matches": {
        "exscattrs": true,
        "styled-components export component with attributes": true
      },
      "source": "javascript/styled-components"
    },
    "7dbfc894-8546-3bb7-afe5-65fefc913cd8": {
      "content": "<datagrid>\n\t${0}\n</datagrid>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datagrid": true
      },
      "source": "vim-snippets/snippets"
    },
    "7dcf0e59-facb-3c5b-b48d-296d24a2c5f9": {
      "content": "<slot name=\"${1:x}\">${2:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-name",
      "matches": {
        "svelte slot name": true,
        "svsn": true
      },
      "source": "javascript/svelte"
    },
    "7dd0b613-5d66-359d-90a7-88f5f77dd6b5": {
      "content": "_.isPlainObject(${value})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\n_.isPlainObject(new Foo);\n// => false\n\n_.isPlainObject([1, 2, 3]);\n// => false\n\n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n\n_.isPlainObject(Object.create(null));\n// => true\n\nChecks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isplainobject",
      "matches": {
        "lodash isplainobject": true
      },
      "source": "javascript/lodash"
    },
    "7dd32900-ce81-3ca7-91d1-cea4a2ebe865": {
      "content": "css: ['assets/${1:normalize.css}'],",
      "doc": "link to css assets such as normalize",
      "filetype": "nuxt-config",
      "grammar": "lsp",
      "label": "Nuxt Use CSS File",
      "matches": {
        "ncss": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "7dd349c6-0cef-3d77-8931-3f893a1c0d36": {
      "content": "visibility: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "7de49ce3-466d-33b9-a4de-937a450de652": {
      "content": "namespace ${1:MyNamespace}\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "namespace": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7de504dd-15e1-3640-b70a-a326cf21eb78": {
      "content": "module ${1:M} (${2:Arg} : ${3:ARG}) = struct\n\t${4:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "define functor - no signature",
      "matches": {
        "func": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7df0e755-d11b-3a81-a496-c1b02de8213a": {
      "content": "try\n  ${1:TARGET}\ncatch /${2:#:pattern}/\n  ${3}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try endtry",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7df0fdc6-632a-3d50-a49a-b2968e940d1d": {
      "content": "const { ${scrollYProgress} } = useViewportScroll()",
      "doc": "useViewportScroll(): ScrollMotionValues Returns MotionValues that update when the viewport scrolls.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-viewport-scroll",
      "matches": {
        "framer-motion use-viewport-scroll": true,
        "use-viewport-scroll": true
      },
      "source": "javascript/framer-motion"
    },
    "7df591ef-704a-3059-8d07-b69636bab489": {
      "content": "if !ok {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if !ok { ... }",
      "matches": {
        "ok": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "7e0c96c9-5be8-3134-b93b-e51644497187": {
      "content": "considering ${1:#:case}\n\t${0:TARGET}\nend considering",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7e125e85-a2d5-3cf9-8c7b-ce423bd7d02e": {
      "content": "justify-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e202861-eef6-35d0-98b2-75043b6ac8ea": {
      "content": "shared_examples ${0:'shared examples name'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shared": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e276bba-05ee-3555-aad1-061ea0792678": {
      "content": "<Head>\n${1:content}\n</Head>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-head",
      "matches": {
        "next head": true
      },
      "source": "javascript/next"
    },
    "7e31e099-75f8-315f-8075-de87f2dfa0d6": {
      "content": "accept ${1}(${2}) do\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "accept": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7e3228ad-f876-3608-aa21-b17814bd99ff": {
      "content": "{% comment %}\n\t$1\n{% endcomment %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7e383428-0eb4-38df-85f6-92b2c66686f7": {
      "content": "module ${1} = {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e3a4fe0-8e78-3e16-8814-6473fa54bc42": {
      "content": "YYii::app()->request->userHostAddress",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yuserip": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e4812ea-eef3-3e2d-8c48-9619eb68e5ef": {
      "content": "async function ${1:name}() {\n\ttry {\n\t\tconst response = await axios.get('${2:uri}');\n\t\t${3:success}\n\t}\tcatch (error) {\n\t\t${4:error}\n\t}\n}",
      "doc": "Use Axios to make a get request - async-await",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-get-async-await",
      "matches": {
        "axios get async await": true
      },
      "source": "javascript/axios"
    },
    "7e4c6eba-f119-3330-8bc5-fe6dabe287d8": {
      "content": "object:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "object:",
      "matches": {
        "object": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7e502fc8-8e0b-397b-80db-76757723d002": {
      "content": "class $1 extends StatelessWidget {\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stless": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e52d9a9-f509-3ba6-b6d8-342b48701cc0": {
      "content": "[TearDown]\npublic void TearDown() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testteardown": true,
        "ttd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7e55f4be-c9a5-3a4b-b159-5abd123d2553": {
      "content": "props: {\n\t${1:propName}: {\n\t\ttype: ${2:Number},\n\t\tdefault: ${0}\n\t},\n},",
      "doc": "Vue Props with Default",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-props-with-default",
      "matches": {
        "vprops": true,
        "vue props with default": true
      },
      "source": "javascript/vue"
    },
    "7e57ee94-d27d-3102-ab68-ac25adf3b689": {
      "content": "watch(() => ${1:foo}, (newValue, oldValue) => {\n\t${2}\n})",
      "doc": "Requires watching a specific data source, and applies side effects in a separate callback function.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watch",
      "matches": {
        "vue v3 watch": true
      },
      "source": "javascript/vue"
    },
    "7e60d41f-c156-39c9-804f-791782369927": {
      "content": "zoom: 1;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e6122a0-aa02-3d18-adac-f389e929c4cb": {
      "content": "interface{}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "in": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e6aeea5-708c-348b-abbe-9ac87149c6bb": {
      "content": "runs(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "runs (js)",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7e75ed02-9dda-365c-8795-6ebec7f6b42d": {
      "content": "function* ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun*": true
      },
      "source": "snippets/javascript"
    },
    "7e79092c-a7c5-3022-9774-28a2cd930b23": {
      "content": "background-repeat: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      },
      "source": "vim-snippets/snippets"
    },
    "7e836b83-ac27-31dc-a8c7-947c573a7948": {
      "content": "journal = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "journal": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7e8f7a03-aa98-3aea-a877-c0b4e954343f": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:e}) {\n\t${2:/* handle error */}\n} finally {\n\t${3:/* be executed regardless of the try / catch result*/}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "try { ... } catch(e) { ... } finally { ... }",
      "matches": {
        "tryf": true
      },
      "source": "snippets/javascript"
    },
    "7e955959-c6f4-3e67-b8fc-04798bd5e181": {
      "content": "mixed.validateSyncAt()",
      "doc": "mixed.validateSyncAt(path: string, value: any, options?: object): any\n\nSame as validateAt but synchronous.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-sync-at",
      "matches": {
        "yup mixed validatesyncat": true
      },
      "source": "javascript/yup"
    },
    "7e96f0de-b300-39c0-bca8-e379b61978a1": {
      "content": "${1:obj}.keyup(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kup": true
      },
      "source": "snippets/javascript"
    },
    "7e9b358b-5120-3fb5-81ee-774ec6ac234d": {
      "content": "async function ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "async function",
      "matches": {
        "asf": true
      },
      "source": "snippets/javascript"
    },
    "7e9d0cd5-076d-3d06-94d8-5e9b76680898": {
      "content": "@media ${1:all} and (min-width: ${2:SIZE}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media all and (min-width) {...}",
      "matches": {
        "media-min-width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7ea8d15c-1442-3fb9-9af9-d4c2bada1b11": {
      "content": "redirect_to action: \"${1:index}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (action)",
      "matches": {
        "rea": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7eb15cfb-03d4-36b8-a730-c3fc068a20e0": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "if {...}",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ebb503f-845c-3457-a881-81fd891de551": {
      "content": "hset",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "HashSet",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ebda9d5-8f77-3872-8bf0-306f641dcf7a": {
      "content": "else static if(${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seif": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ec725b0-d2ab-33cb-a415-be8788fd2333": {
      "content": "cursor help",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ecc82a3-1cf8-3f02-8838-36fc6d2fd980": {
      "content": "\t  {{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imagePullSecrets_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ed0d859-66ad-39d7-815e-9e90d35d8589": {
      "content": "justify-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ed4c699-bf3b-3df6-8d99-2f1e5d07b51b": {
      "content": "flex-grow: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxg": true
      },
      "source": "vim-snippets/snippets"
    },
    "7eda8a40-1a80-3055-9fb5-ec08b3799644": {
      "content": "import pudb; pudb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import pudb..",
      "matches": {
        "pudb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7eec5360-272e-3fae-89e6-273eb30efd66": {
      "content": "display: run-in;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ef0ce52-7992-3cb3-a0d2-33e42ce753e6": {
      "content": "var $1 = new sap.m.HBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmhbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ef2d930-c3b2-3cd1-bf08-5a77911eb4e2": {
      "content": "${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undele": true
      },
      "source": "snippets/coffee"
    },
    "7ef4db84-a451-3a51-9161-40d17087e48e": {
      "content": "${1:auto} ${2:var} = new ${3:Object}(${4});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "new": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f04df72-52e6-3aa4-90bb-944a64701830": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { return err }",
      "matches": {
        "errn": true
      },
      "source": "gosnippets/snippets"
    },
    "7f092ebc-8a99-3b06-a8d6-66a8e8bf2e78": {
      "content": "def ${1:#:name}(self, ${2}):\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def method(self, ...): ...",
      "matches": {
        "defm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7f0a104d-f38e-396d-8cd1-5a2cbfbf9d66": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      },
      "source": "vscode-react/snippets"
    },
    "7f0baffb-23f9-3ec1-94c0-c2e62c102f7c": {
      "content": "align-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f11c1c1-58d9-3ba0-b44c-2c3d78c3c934": {
      "content": "${1:classNames}('${2:foo}', '${3:bar}');",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-usage",
      "matches": {
        "classnames usage": true
      },
      "source": "javascript/classnames"
    },
    "7f15c332-752c-3c69-8766-e710a3e5a31f": {
      "content": "text-align-last: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f28772d-bc22-3ad8-95ec-ed08ea40cfb2": {
      "content": "_.sortedIndex(${array}, ${value})",
      "doc": "_.sortedIndex([30, 50], 40);\n// => 1\n\nUses a binary search to determine the lowest index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindex",
      "matches": {
        "lodash sortedindex": true
      },
      "source": "javascript/lodash"
    },
    "7f292f60-253a-36ef-9266-3e329b12237d": {
      "content": "cy.viewport('${1:preset}');",
      "doc": "Control the size of the screen for your application via presets. Preset supports the following options: ipad-2, ipad-mini, iphone-3, iphone-4, iphone-5, iphone-6, iphone-6+, iphone-x, iphone-xr, macbook-11, macbook-13, macbook-15, samsung-note9, samsung-s10",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-viewport-preset",
      "matches": {
        "cypress viewport preset": true
      },
      "source": "javascript/cypress"
    },
    "7f36435d-e092-3ff1-b4c5-d8ef0cd8f7ea": {
      "content": "assert_kind_of ${1:ExpectedKind}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asko": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f44413e-335d-32b1-86f2-4b4c6230ab62": {
      "content": "floatformat:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7f46c086-5d75-3ea6-958a-2cb21ac57d81": {
      "content": "padding: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f538391-fe8a-3872-b883-8a69a6136e15": {
      "content": "{{#unless ${1:value}}}\n${0:${VISUAL}}\n{{/unless}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#unless value}} ... {{/unless}}",
      "matches": {
        "ifn": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f5acfc0-0cd6-34a4-95d8-bd1776003847": {
      "content": "Marshal.load(Marshal.dump(${1:obj_to_copy}))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deec": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f5b53e7-8905-3371-b97e-ef120acc4b7d": {
      "content": "{% elif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f5b751d-eeda-304d-a297-d560dc512b57": {
      "content": "go ${1:funcName}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go someFunc(...)",
      "matches": {
        "go": true
      },
      "source": "gosnippets/snippets"
    },
    "7f62d12b-dbfe-3919-b214-458b82559dda": {
      "content": "${1:classname}Class = React.createClass\n\tdisplayName: \"$1\"\n\trender: ->\n\t\t$2\n$1 = React.createFactory($1)",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define Class",
      "matches": {
        "createClass": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7f79faef-dbaf-3e8b-a598-4b84defb0460": {
      "content": "-ifdef(TEST).\n-include_lib(\"eunit/include/eunit.hrl\").\n${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ieunit": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f8553dd-5c66-3f86-9977-35ad2bb17911": {
      "content": "quotes '\\201C' '\\201D' '\\2018' '\\2019'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f887d2a-9c9b-3cd7-9d2d-4600686d068a": {
      "content": "<AnimatePresence>\n    {${1:isVisible} && (\n      <motion.div\n        initial={{ ${3:style} }}\n        animate={{ ${4:style} }}\n        exit={{ ${5:style} }}\n      />\n    )}\n</AnimatePresence>",
      "doc": "AnimatePresence allows components to animate out when they're removed from the React tree.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-presence",
      "matches": {
        "animate-presence": true,
        "framer-motion animate-presence": true
      },
      "source": "javascript/framer-motion"
    },
    "7f943c63-d3b4-3d18-a703-db3c2d4967d4": {
      "content": "background-color: transparent;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  transparent (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7f956843-196c-3b40-aa28-a96f81d7c628": {
      "content": "Ada.Text_IO.Get_Line(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get_Line",
      "matches": {
        "get_line": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7f9735be-cda4-36ed-b39e-f0162c80af9c": {
      "content": "copy(${1:srcImg}${2:, }${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:dx}, ${8:dy}, ${9:dwidth}, ${0:dheight});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "copy": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f9928f7-5b10-3e0e-ace0-dd93ea61f81a": {
      "content": "if ${1:condition} then\n\t${2:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f9d5c70-907c-3552-a02e-d6c6cc259468": {
      "content": "Url:templatePath();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_templatepath": true
      },
      "source": "vim-snippets/snippets"
    },
    "7f9f5626-53cd-3517-9ebd-573296767b23": {
      "content": "overflow-x: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fa41a71-2963-3558-8f9f-988eb72f1fa8": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "hocComponent",
      "matches": {
        "hoc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "7fab7132-a38e-3ae1-baed-73066b089207": {
      "content": "{% endjs %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endjs",
      "matches": {
        "endjs": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fb21802-8633-3ea5-b2a3-a62d323a33bf": {
      "content": "it { should have_one :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isho": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fb46e07-3751-375d-8e79-d89083f52992": {
      "content": "margin-right auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fb54a6b-f198-3a3a-8010-acb923ad0dc5": {
      "content": "<map class=\"${1}\" name=\"${2}\">\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map.": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fc0a806-f424-30f1-82ee-eb946be3b078": {
      "content": "getSnapshotBeforeUpdate = (prevProps, prevState) => {\n\t$0\n}\n",
      "doc": "Called right before mutations are made (e.g. before the DOM is updated)",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-getsnapshotbeforeupdate",
      "matches": {
        "gsbu": true,
        "react getsnapshotbeforeupdate": true
      },
      "source": "javascript/react"
    },
    "7fc4d150-6899-31fb-97f9-88112c26049e": {
      "content": "<c:url value=\"${1}\" var=\"${2}\">\n\t<c:param name=\"${4}\" value=\"${5}\" />\n\tcparam+${0}\n</c:url>\n<a href=\"${$2}\">${3}</a>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curl+": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fc73204-fe72-3064-9587-519372ecf94a": {
      "content": "_.isTypedArray(${value})",
      "doc": "_.isTypedArray(new Uint8Array);\n// => true\n\n_.isTypedArray([]);\n// => false\n\nChecks if `value` is classified as a typed array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-istypedarray",
      "matches": {
        "lodash istypedarray": true
      },
      "source": "javascript/lodash"
    },
    "7fd214c3-2c40-3709-9054-a046f17c0c92": {
      "content": "@license ${1:MIT}$0",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@license Description",
      "matches": {
        "@li": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "7fd9e255-69fe-3ac5-ab1f-0f6c9f4d8a49": {
      "content": "downto(${1:0}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dow": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fda9882-fd11-3ebe-b460-24536fbfd203": {
      "content": "$.isEmptyObject(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isempty": true
      },
      "source": "snippets/coffee"
    },
    "7fe57f72-6a0a-3812-bc08-878026f46bcb": {
      "content": "${1:#:NAME}(${2:#:Args}): ${3:#:TYPE} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "7fe5f1d0-a327-3ea2-8a17-be8111311a4b": {
      "content": "size(${1:200}, ${2:200}${0:, OPENGL});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "opengl",
      "matches": {
        "size": true
      },
      "source": "vim-snippets/snippets"
    },
    "7fe7429b-ef3e-386c-9b77-7466d010125f": {
      "content": "content: no-close-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      },
      "source": "vim-snippets/snippets"
    },
    "7ffeec2e-5be4-37f2-a4cd-990398b50270": {
      "content": "<h4 id=\"${1}\">${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4#": true
      },
      "source": "vim-snippets/snippets"
    },
    "8002fecc-5d36-3178-8230-9b39b0da43ef": {
      "content": "entry ${1}(${2}) when ${3} is\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "entry ... when",
      "matches": {
        "ent": true
      },
      "source": "vim-snippets/snippets"
    },
    "800641b0-9115-3a05-b4bc-374d7a882f8a": {
      "content": "scope :${1:name}, { ${2:where(${3::${4:field}: ${5:'${6:value}'}})} } do\n\tdef ${7:method_name}\n\t\t$0\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope with extension",
      "matches": {
        "scopee": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8009aff2-c4cf-3ad4-853b-521c905b1e68": {
      "content": "${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeto": true
      },
      "source": "snippets/coffee"
    },
    "800b453b-a516-3e4e-8bfb-f78c14830ef0": {
      "content": "echo CHtml::hiddenField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhhf": true
      },
      "source": "vim-snippets/snippets"
    },
    "800ec304-2083-384d-8413-424c391c3b93": {
      "content": "<option value=\"${1}\">${2:$1}</option>\nopt+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "800f93d5-1e34-3619-a71e-eebe671e5ddd": {
      "content": "${1:mutationName}() {\n\tthis.\\$store.commit('${1:mutationName}', ${2:payload})\n}",
      "doc": "commit to vuex store in methods for mutation",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-commit-vuex-store-in-methods",
      "matches": {
        "vcommit": true,
        "vue commit vuex store in methods": true
      },
      "source": "javascript/vue"
    },
    "80126120-c5f0-355d-ac7c-fa3c27df8771": {
      "content": "raise (${1:Not_found})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "raise",
      "matches": {
        "rs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8032c44c-f612-36a4-b7a4-c02acd426ebd": {
      "content": "border-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      },
      "source": "vim-snippets/snippets"
    },
    "803337ed-d3e2-3d9b-91e4-21b2c6bf03ab": {
      "content": "proc ${1:#:name}(${2}) =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80431e03-2e56-3b66-b3f0-dc2a4e35c3dc": {
      "content": "for (${1} : ${2}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "8049d3ea-0367-39c1-a527-de92a1b44179": {
      "content": "beginRecord(${1:renderer}, ${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beginRecord": true
      },
      "source": "vim-snippets/snippets"
    },
    "804ed388-7b6a-3ad1-8af6-a3dc5cbcd8c4": {
      "content": "use Symfony\\Component\\HttpFoundation\\Response;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Response",
      "matches": {
        "useresponse": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8050bc69-5580-368b-b28c-5e5e6ec3e86f": {
      "content": "width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true,
        "width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80792d4f-a0ff-3900-bf5c-c2ca0b2db425": {
      "content": "<param name=\"${1}\">${2:$1}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<p": true
      },
      "source": "vim-snippets/snippets"
    },
    "808f15d9-57dc-308c-895e-bed7c037d692": {
      "content": "-export([${0:f/1}]).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-export": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8093ba2c-791d-3d8f-a626-20f6a697689b": {
      "content": "\\chapter{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\chapter": true,
        "chapter \\chapter{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8097e96c-f7c4-3802-9b15-92bff6989023": {
      "content": "let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "let s:M = s:V.import('...')",
      "matches": {
        "vital_import": true
      },
      "source": "neosnippets/vim"
    },
    "809c23a1-90f0-3163-9d8f-27b714493484": {
      "content": "<select [(ngModel)]=\"${1:model}\">\n\t<option *ngFor=\"let ${2:item} of ${3:list}\" [value]=\"${2:item}\">{{${2:item}}}</option>\n</select>",
      "doc": "<select> control with ngModel",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngSelect",
      "matches": {
        "a-select": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "809dae2e-2934-35b5-9763-c6bf19d83a4f": {
      "content": "\\\\begin{equation*}\n\\\\begin{tikzcd}\n\t${1}\n\\\\end{tikzcd}\n\\\\end{equation*}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tikzcd environment in equation*",
      "matches": {
        "tikzcd*": true
      },
      "source": "vim-snippets/snippets"
    },
    "80a20ae5-43f9-369d-b732-95bfbdbb7847": {
      "content": "$ENV{TEST_METHOD} = '${0:regex}';",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tmeths": true
      },
      "source": "vim-snippets/snippets"
    },
    "80a28539-ac6e-35a5-a165-9e2cb859807f": {
      "content": "console.groupEnd()",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroupEnd",
      "matches": {
        "cge": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "80aeb958-d69b-3c00-bf24-ed24ccb8e3c3": {
      "content": "useEffect(() => {\n$0\n})",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "usf": true
      },
      "source": "vscode-react/snippets"
    },
    "80b0bd7c-8270-3f36-96b0-9f69f7bcb4b0": {
      "content": "margin-top: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-top": true,
        "mt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80b2969b-5bf1-33e0-b111-6237fa091c17": {
      "content": "@media ${1:screen}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@m": true
      },
      "source": "vim-snippets/snippets"
    },
    "80b683be-3163-3a32-90f3-8ded0a9efcc8": {
      "content": "each_with_index { |${1:e}, ${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawi": true
      },
      "source": "vim-snippets/snippets"
    },
    "80b7c187-579b-343c-a1f6-21d041ef8a18": {
      "content": "display compact",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "80c58b1f-357f-3924-bbbc-42a06b63be5e": {
      "content": "Result<${1:#:~str}, ${2:#:()}>${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Result<A, B>",
      "matches": {
        "res": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80c85c6a-4d26-3370-a2d7-cc40d6cf6cf5": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      },
      "source": "vim-snippets/snippets"
    },
    "80cd5d16-bfae-34ca-8510-752f80feb434": {
      "content": "saturation(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saturation": true
      },
      "source": "vim-snippets/snippets"
    },
    "80ce4eae-dfc6-3a76-9dbb-66606c356f64": {
      "content": "white-space: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "white-space": true,
        "ws": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80ee804b-a281-3593-b917-baada6919d29": {
      "content": "before_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "80f26e70-3561-37c7-93ac-b024e456e50d": {
      "content": "validates_acceptance_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of",
      "matches": {
        "vb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "80f59b02-9d31-3143-8b32-4b008f85fd90": {
      "content": "private int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi-": true
      },
      "source": "vim-snippets/snippets"
    },
    "80f7e489-d4fa-3eb9-8727-244e073ee0f7": {
      "content": "cy.scrollTo(${1:x}, ${2:y});",
      "doc": "Scroll to a position defined by the distance in pixels from window/element’s x and y or percentage of the window/element’s width and height.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-scroll-to-coordinates",
      "matches": {
        "cypress scroll to coordinates": true
      },
      "source": "javascript/cypress"
    },
    "80f81949-b3aa-32a8-908e-dc588a71e0c8": {
      "content": "white-space-collapse: break-strict;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "80f9d900-b64f-313d-9008-fb35bb1140c7": {
      "content": "for ${1:i} in ${2:1}..${3:42} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "81017bbe-c465-3167-bc70-27686762de05": {
      "content": "mixed.isValidSync()",
      "doc": "mixed.isValidSync(value: any, options?: object): boolean\n\nSynchronously returns true when the passed in value matches the schema.Takes the same options as validateSync() and has the same caveats around async tests.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-valid-sync",
      "matches": {
        "yup mixed isvalidsync": true
      },
      "source": "javascript/yup"
    },
    "81018fe6-018c-342c-a1a4-ec90f4d74104": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "81026218-e5f3-35fe-92ff-a69f73404b87": {
      "content": "place-content stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "81079e83-1661-39a7-89b7-eaafa669664b": {
      "content": "_.camelCase(${string})",
      "doc": "_.camelCase('Foo Bar');\n// => 'fooBar'\n\n_.camelCase('--foo-bar--');\n// => 'fooBar'\n\n_.camelCase('__FOO_BAR__');\n// => 'fooBar'\n\nConverts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-camelcase",
      "matches": {
        "lodash camelcase": true
      },
      "source": "javascript/lodash"
    },
    "8108e964-0bb6-3a90-9323-dcc7f960783d": {
      "content": "\\begin{verse}\n\t${1:TARGET}\n\\end{verse}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verse} \\verse": true,
        "verse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "811860ea-3108-3631-8082-f9246fcc655f": {
      "content": "[routerLink]=\"['/${1:routePath}']\" routerLinkActive=\"${2:router-link-active}\" $0",
      "doc": "Angular routerLink",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrouterlink",
      "matches": {
        "a-routerlink": true,
        "angular ng router link": true
      },
      "source": "javascript/angular"
    },
    "811a0cfd-8605-3eea-89b8-604dc1caced3": {
      "content": "else {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "811ce26b-a2e6-347c-be55-51bfed246238": {
      "content": "logger.error",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.error",
      "matches": {
        "loge": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "813107d6-8d55-3b7f-8a2f-e84a76e00e7b": {
      "content": "expect(${1:target}).toThrowError(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to throw error (js)",
      "matches": {
        "ethe": true
      },
      "source": "vim-snippets/snippets"
    },
    "8141d19f-207c-3134-8890-89d96114378c": {
      "content": "font-effect: outline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "81425080-a7d6-37e6-a823-40faab4668e7": {
      "content": "${1:propName}: {\n  type: ${2:Number},\n  default: ${0}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vprops:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "814271b7-a0fd-3cbf-8d2f-8346fe2931fa": {
      "content": "import React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionalComponent",
      "matches": {
        "rfc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "814bd31c-2cfc-3618-a3cf-bf859a91b118": {
      "content": "type ${1:Msg}\n\t= ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "814c2eae-ab39-3752-b767-e2ee3b09d1ff": {
      "content": "grid-row-end: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      },
      "source": "vim-snippets/snippets"
    },
    "814f2b39-4d02-38e2-a67c-82b5975b5d9a": {
      "content": "*${1}*${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "*emphasis*",
      "matches": {
        "emphasis1": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "81556d29-3cdb-3adc-ad73-da184fd0e31f": {
      "content": "test(${1:case}, [true(${2:var} = ${3:value})]) :-\n  ${0:goal}.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "815c7375-ea50-31db-b54c-1aafaa6844f6": {
      "content": "${1:function_name}() {\n\t${0:#function_body}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun-sh": true
      },
      "source": "vim-snippets/snippets"
    },
    "8166d05a-436a-3609-8780-f081eb2b7269": {
      "content": "{@literal ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{literal": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8173d91c-d134-3ccb-98c4-c968c147a200": {
      "content": "const ${1:name} = computed(() => {\n\treturn ${2}\n})",
      "doc": "Vue Composition api - computed",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Computed",
      "matches": {
        "v3computed": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "81753d23-217b-39d8-bb7f-db267bf85ab1": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdown": true
      },
      "source": "snippets/coffee"
    },
    "81778495-a9e7-3c81-87bd-1c7bdd934652": {
      "content": "_.extendWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignInWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.assignIn` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-extendwith",
      "matches": {
        "lodash extendwith": true
      },
      "source": "javascript/lodash"
    },
    "817cb6bc-57aa-3643-b35e-79e27c5f1c63": {
      "content": "$_GET['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "get",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/snippets"
    },
    "817d3f4c-378e-331b-89e3-20e775132d6d": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "8185f6fc-d7d1-3209-9972-4a2e200522fe": {
      "content": "| concat: ${1:array}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "concat": true
      },
      "source": "vim-snippets/snippets"
    },
    "818633af-90ea-33b1-be21-a4954f79f8a0": {
      "content": "def ${1:name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "def .. do .. end",
      "matches": {
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8189a80f-2bbc-3eed-84f9-9fe56d651742": {
      "content": "begin\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "begin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "818df110-e29b-327a-bc3d-14d2699828e5": {
      "content": "&#x232B;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backspace": true
      },
      "source": "vim-snippets/snippets"
    },
    "8191cc7e-c83c-3759-9ecc-fdf2733685b3": {
      "content": "{%- render '${0:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render-": true
      },
      "source": "vim-snippets/snippets"
    },
    "81929b6c-103a-34ec-9ec8-05bd41bc5f19": {
      "content": "validates_uniqueness_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:must be unique}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of (vu)",
      "matches": {
        "vu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "819c63b4-77b4-39fc-8138-741b75fb1dfa": {
      "content": "\\begin{tabular}{${1}}\n\t${2:TARGET}\n\\end{tabular}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tabular} \\tabular": true,
        "tabular": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "81a0c8f9-22b6-3ec4-acf3-c165e7d84e2d": {
      "content": "background-clip content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "81b4a37f-f3b6-3616-84c9-7170831e07df": {
      "content": "verify only: [:$1], method: :post, render {:status: 500, text: \"use HTTP-POST\"}\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "verify -- render",
      "matches": {
        "verify": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "81bb79a5-acf6-3ad5-b257-84438e5d54a4": {
      "content": "sin(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sin": true
      },
      "source": "vim-snippets/snippets"
    },
    "81bea718-94b7-3bdb-af35-4a7cdd30796e": {
      "content": "padding-top: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-top": true,
        "pt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "81c39183-2db0-3575-8dc0-a2d5ae7c572f": {
      "content": "{% ifchanged %}${1}{% endifchanged %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      },
      "source": "vim-snippets/snippets"
    },
    "81c72e70-968e-364e-af05-bbf76221433d": {
      "content": "cy.route('${1:METHOD}', '${2:url}', ${3:response});",
      "doc": "Use cy.route() to manage the behavior of network requests.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-route",
      "matches": {
        "cypress route": true
      },
      "source": "javascript/cypress"
    },
    "81c9cef2-2de6-3604-ae99-cc85b60fe2a8": {
      "content": "class << ${1:self}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "class << self .. end",
      "matches": {
        "claself": true
      },
      "source": "vim-snippets/snippets"
    },
    "81cd15fd-7e21-3698-acff-d8a7ff57a0b7": {
      "content": "<%= link_to '${1:link text...}', action: '${0:index}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia": true
      },
      "source": "vim-snippets/snippets"
    },
    "81cd1abd-6a25-3e0b-805b-ce665f3e0d04": {
      "content": "def main(args: Array[String]):${1:T} = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "81cdc9e6-af7c-3d5c-83a1-09ed1068a8a5": {
      "content": "border-bottom-right-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "81d29a89-0bc3-351f-a31b-500a1beab366": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-string",
      "matches": {
        "prop-types string": true,
        "pts": true
      },
      "source": "javascript/prop-types"
    },
    "81d7b8ab-983c-3eb2-900a-3eccb542783a": {
      "content": "static void Main(string[] args)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "static void main",
      "matches": {
        "svm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "81e19987-e82b-33c8-bb70-d5f818117a01": {
      "content": "_.findLastIndex(${array}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n// => 2\n\n// The `_.matches` iteratee shorthand.\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\n// => 0\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastIndex(users, ['active', false]);\n// => 2\n\n// The `_.property` iteratee shorthand.\n_.findLastIndex(users, 'active');\n// => 0\n\nThis method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlastindex",
      "matches": {
        "lodash findlastindex": true
      },
      "source": "javascript/lodash"
    },
    "81e1e3fb-45fc-3d4d-a167-716edb1e963b": {
      "content": "===========================\n${1:#:content_name}\n===========================\n.. contents:: contents_name\ntitle1\n====================================\nsubtitle1\n-----------------------------------\nsubtitle2\n-----------------------------------\nsubtitle3\n-----------------------------------\ntitle2\n====================================\nsubtitle1\n-----------------------------------\nsubtitle2\n-----------------------------------\nsubtitle3\n-----------------------------------\ntitle3\n====================================\nsubtitle1\n-----------------------------------\nsubtitle2\n-----------------------------------\nsubtitle3\n-----------------------------------",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "quickstart": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "81e74b13-76ba-37f9-82c7-657ae2d2216c": {
      "content": "${1:app}.delete('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "edel": true
      },
      "source": "snippets/javascript"
    },
    "81e871bf-c2e9-3c7b-8765-c1135d3de1bd": {
      "content": "justify-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "81f5aca8-9eb9-34c9-a741-75d73e7e3f6a": {
      "content": "{% apply ${1} %}\n\t${0}\n{% endapply %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig apply",
      "matches": {
        "apply": true
      },
      "source": "vim-snippets/snippets"
    },
    "81f96aab-fc42-31c4-be1c-0c7507502177": {
      "content": "max-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      },
      "source": "vim-snippets/snippets"
    },
    "81fd6a3c-80c4-306c-a799-b875151e891d": {
      "content": "import React, { memo } from 'react'\n\ninterface Props {\n\t\n}\n\nexport default memo(function ${1:${TM_FILENAME_BASE}}({}: Props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n",
      "doc": "Creates a React Memo Function Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactFunctionMemoComponent",
      "matches": {
        "tsrmc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "81ff7fb3-4436-32fe-a480-b7d6c1eda52f": {
      "content": "border-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      },
      "source": "vim-snippets/snippets"
    },
    "81ffa6af-e7c5-3052-a2ba-dddb7dc64625": {
      "content": "overflow-x: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "82057455-9852-3dcb-a2fb-ad074640499e": {
      "content": "<select>${1:TARGET}</select>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "820bed22-8dab-350d-bd44-5980d6489a13": {
      "content": "describe('${1:description}', function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "Describe (js)",
      "matches": {
        "des": true
      },
      "source": "vim-snippets/snippets"
    },
    "82128539-8133-3412-a5c3-a5ba5dccf6d5": {
      "content": "var_dump(${1}); die(${0:});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdd": true
      },
      "source": "vim-snippets/snippets"
    },
    "82233808-4e1f-3e86-ae07-9c20a655c4c2": {
      "content": "[assembly: InternalsVisibleTo(\"${1:#:FriendName}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm_internals_visible_to": true,
        "internals asmInternalsVisibleTo friend_attr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "822bcdf6-7f5b-30dd-8715-939a46bb4240": {
      "content": "overflow-style: panner",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "8235eb64-8d56-303b-b44f-b26df9914503": {
      "content": "cursor: default",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "82491218-bc69-3a86-8323-4811d3480ea4": {
      "content": "private ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts private method",
      "matches": {
        "tprmet": true
      },
      "source": "vim-snippets/snippets"
    },
    "824ef096-6ded-3c68-97d8-5dd0cf6609cd": {
      "content": "${1:obj}.not('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not": true
      },
      "source": "snippets/javascript"
    },
    "827ec01f-51d0-3647-995d-2ec6a2aec54c": {
      "content": "import renderer from 'react-test-renderer'\n\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_setupReactTest",
      "matches": {
        "_stest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "82822ec2-63be-32ec-9e3c-964e98c05dbb": {
      "content": "useMemo(() => ${1:function}, ${2:input})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usememo",
      "matches": {
        "react usememo": true,
        "usememo": true
      },
      "source": "javascript/react"
    },
    "82836f32-45c7-3928-826a-505d2ede0042": {
      "content": "<c>${1:#:text}</c>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<c></c>",
      "matches": {
        "c": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "82871e82-c419-3f8a-a2bc-d90014a7eabe": {
      "content": "grid-column-start: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      },
      "source": "vim-snippets/snippets"
    },
    "828df337-0238-3a08-8609-75d7183ec308": {
      "content": "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: {{ template \"$2.fullname\" . }}-data-pv\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n\tid: {{ template \"${2:chartName}.name\" . }}-data-pv\n\ttype: nfs-volume\nspec:\n  capacity:\n\tstorage: {{ .Values.$1.persistence.nfs.capacity }}\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  nfs:\n\tserver: {{ .Values.$1.persistence.nfs.ip }}\n\tpath: \"{{ .Values.${1:value_key}.persistence.nfs.haDataMount }}\"\n\treadOnly: false\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pv_nfs_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "82946c52-6252-3d9e-a4f1-5b3995634457": {
      "content": "font-effect: engrave;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      },
      "source": "vim-snippets/snippets"
    },
    "829cc7c7-f96d-38a0-a3d9-da8157834c98": {
      "content": "this.${1:refName}Ref = React.createRef()\n",
      "doc": "Create ref statement used inside constructor",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-createref",
      "matches": {
        "cref": true,
        "react createref": true
      },
      "source": "javascript/react"
    },
    "82a3085f-a964-3ea4-93cf-7b08fcf6e177": {
      "content": "clocking ${1:clocking_name} @(${2:posedge} ${3:clk});\n\t${0}\nendclocking : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clock": true
      },
      "source": "vim-snippets/snippets"
    },
    "82a71330-d521-3bff-8159-7b3610fb4ddc": {
      "content": "#lang scribble/base",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "82b81faa-2f24-3bdf-9811-ccd6535170d1": {
      "content": "{% dd ${1} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig dd",
      "matches": {
        "dd": true
      },
      "source": "vim-snippets/snippets"
    },
    "82b95dea-24ed-34a2-a5d8-598d327b2638": {
      "content": "<h3 class=\"${1}\">${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3.": true
      },
      "source": "vim-snippets/snippets"
    },
    "82b97dd6-5d0e-32e9-993a-075eb031317c": {
      "content": "font-variant normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "82b9d775-4bef-3431-b4aa-67e5d04e14da": {
      "content": "${1:obj}.toggle(function (${2:e}) {\n\t${3:// event handler}\n}, function ($2) {\n\t${4:// event handler}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tog": true
      },
      "source": "snippets/javascript"
    },
    "82bd9aa4-356b-3b0a-afc1-c07570d038fd": {
      "content": "validates_numericality_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:is not a number}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of",
      "matches": {
        "vn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "82c0d60a-b31d-3785-b00e-2c1dc2c4bb55": {
      "content": "repeat with ${1} in ${2}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "repwi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "82c3e0b8-0f80-3642-9e70-0b99d8c640a9": {
      "content": "from __future__ import ${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fut": true
      },
      "source": "vim-snippets/snippets"
    },
    "82c5df13-c8c3-34ff-83cc-447db15010ea": {
      "content": "list-style-type: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "82cef3f5-bd0f-324c-9297-584f864abb02": {
      "content": "word-break loose",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "82d02687-99eb-36b4-891b-c76058f0f2e8": {
      "content": "background-repeat: repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "82d38466-c0d0-38c4-9bd7-3f415749cbd2": {
      "content": "border-top-left-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "82d68b78-32e1-3214-9a29-cbb8e8a77e66": {
      "content": "console.log(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.log",
      "matches": {
        "cl": true
      },
      "source": "snippets/javascript"
    },
    "82da10b9-a07b-3fe6-a6ad-5cdad19317e3": {
      "content": "self.",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "82db45f4-cba8-3db2-a01e-2aab4c1693ae": {
      "content": "return ${0:result};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "snippets/javascript"
    },
    "82de3325-c8eb-3b16-bb02-fada38782f03": {
      "content": "round(precision=${1:0}, method=${2:'common|ceil|floor'})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "round number",
      "matches": {
        "round": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "82e4673f-a5da-306f-a3f5-848058c73514": {
      "content": "# coding: utf-8\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enc": true,
        "encoding": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "82ea45da-7c56-3c23-a92c-c0ac0120db4e": {
      "content": "tapply(${1:X}, ${2:INDEX}, ${3:FUN = ${4:NULL}}, ${5:...}, ${6:simplify = ${7:TRUE}})",
      "doc": "Tapply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "tap",
      "matches": {
        "tapply": true
      },
      "source": "vscode-R/snippets"
    },
    "82ed9c39-2913-39be-96d5-86eade17b190": {
      "content": "<c:set var=\"${1}\">${2:item1,item2,item3}</c:set>\n<c:forTokens var=\"${3}\" items=\"${$1}\" delims=\"${4:,}\">\n\t${0:<c:out value=\"$3\" />}\n</c:forTokens>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfort": true
      },
      "source": "vim-snippets/snippets"
    },
    "82f93000-0c25-3945-923c-14ca6e0bccd2": {
      "content": "while(${1:#:condition})\n\t${2}\nendwhile()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "while() endwhile()",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "82fb6154-64f6-3de7-9fbf-2ab2bd0a4038": {
      "content": "#undef ${0:#:SYMBOL}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "und": true,
        "undef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "830c7fe1-99e6-3ee7-ac9d-cab51b7cb9db": {
      "content": "[[NSUserDefaults standardUserDefaults] objectForKey:${1:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ReadDefaultsValue",
      "matches": {
        "rdef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "830ee672-362c-3fb3-92ba-8799df02eba6": {
      "content": "mixed.describe()",
      "doc": "mixed.describe(): SchemaDescription\n\nCollects schema details (like meta, labels, and active tests) into a serializable\ndescription object.SchemaDescription {\n  type: string,\n  label: string,\n  meta: object,\n  tests: Array<{ name: string, params: object }>\n}\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-describe",
      "matches": {
        "yup mixed describe": true
      },
      "source": "javascript/yup"
    },
    "831214c9-5d46-3842-a48c-4526d3741874": {
      "content": "border-style dotted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "831b6b0b-5900-3ac8-a57c-e72078e2ab15": {
      "content": "onUnmounted(() => {${1}})",
      "doc": "(destroyed) Vue onUnmounted Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onUnmounted",
      "matches": {
        "v3onunmounted": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "8325563f-4bb2-3d39-b002-f11af1cfafef": {
      "content": "on ${1:#:functionName}(${2:#:arguments})\n\t${3:TARGET}\nend ${1}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "832c5fcb-80fa-314c-b6ef-087996959edf": {
      "content": "margin-bottom: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "833d4739-fe62-3384-bddc-16ee5c05a588": {
      "content": "${1:FIELDNAME} = models.IPAddressField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IPAddressField",
      "matches": {
        "mip": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8347a2c2-31f0-3870-9e91-d2b1ae22763c": {
      "content": "time_ago_in_words",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "time_ago_in_words",
      "matches": {
        "taiw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "83484985-b596-3b4f-a1c4-b82a572dce2a": {
      "content": "curveTightness(${0:squishy});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveTightness": true
      },
      "source": "vim-snippets/snippets"
    },
    "834a66a9-d6ad-307d-809c-688607b77fac": {
      "content": "chan ${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "chan Type",
      "matches": {
        "ch": true
      },
      "source": "gosnippets/snippets"
    },
    "834ac9f7-8b0e-3698-a98c-f39b2f1a97e4": {
      "content": "echo CHtml::activeListBox(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhalb": true
      },
      "source": "vim-snippets/snippets"
    },
    "835089ab-73cb-3593-a73d-5f2c0c20e756": {
      "content": "<c:when test=\"${${1}}\">\n\t${0}\n</c:when>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cwhen": true
      },
      "source": "vim-snippets/snippets"
    },
    "835ef6a4-8a73-3f9a-95c7-8a6de4dec9de": {
      "content": "/**\n * ${3:#:undocumented constant}\n **/\ndefine(${1} ${2});${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_constant": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "838015c6-e281-38a1-9f84-c1c48be5fb46": {
      "content": "else if (${1:condition}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      },
      "source": "vim-snippets/snippets"
    },
    "83803a4e-0977-324f-bb7c-9ad099189acc": {
      "content": "|> IO.inspect",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to inspect",
      "matches": {
        ">i": true
      },
      "source": "vim-snippets/snippets"
    },
    "838237ec-e9db-3019-af0b-5ec86f97dc86": {
      "content": "reject do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rejd": true
      },
      "source": "vim-snippets/snippets"
    },
    "838989f3-7a4e-3b92-9b58-6fcd4aabaf7f": {
      "content": "text-transform none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "8394d16f-5243-3d1b-a06c-83ae192b02be": {
      "content": "const [${1:state}, set${2}] = useState(${3:initialState});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useState",
      "matches": {
        "uses": true
      },
      "source": "snippets/javascript"
    },
    "8396348f-a624-389e-9786-5d140255ab34": {
      "content": "for ${1:i} in ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "83973f0e-8d2c-3f41-ba2f-5327d4fc8845": {
      "content": "${1:obj}.hide('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      },
      "source": "snippets/javascript"
    },
    "83987c0e-45fd-3ec2-8768-7d8588c1724d": {
      "content": "position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      },
      "source": "vim-snippets/snippets"
    },
    "83a2ac2c-8303-3f89-bc23-4cc989d5077c": {
      "content": "${1:obj}.removeClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remc": true
      },
      "source": "snippets/javascript"
    },
    "83a30c7f-84e9-323d-88c3-77e11e2086a1": {
      "content": "import { Directive } from '@angular/core';\n\n@Directive({ selector: '[${1:selector-name}]' })\nexport class ${2:Name}Directive {\n\tconstructor() { }\n}",
      "doc": "Angular directive",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-directive",
      "matches": {
        "a-directive": true,
        "angular directive": true
      },
      "source": "javascript/angular"
    },
    "83a3b419-ede9-3c27-a640-8a39ff928fc9": {
      "content": "<LimitExcept ${1:POST GET}>\n\t${0:${VISUAL}}\n</LimitExcept>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "limitexcept": true
      },
      "source": "vim-snippets/snippets"
    },
    "83ac0894-9fe5-3401-be95-01cc3cf3c769": {
      "content": "filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}');",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "83aef24a-03ef-3b03-979d-3da282c40d09": {
      "content": "${1:obj}.end()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      },
      "source": "snippets/coffee"
    },
    "83b6ea3d-e927-31cb-9fb6-8cab9790b692": {
      "content": "mutable.Map[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "83c42ded-10fc-3e81-94aa-24af2337daeb": {
      "content": "fgets(${0:ROW}, ${1:LENGTH}, ${2:stdin});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fgets(row, length, file);",
      "matches": {
        "fgets": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "83c9e6c6-c031-3b8e-ba64-f72c354f73dc": {
      "content": "background-break each-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "83cd1e71-a472-3ee1-8f2e-32d8938eb734": {
      "content": "[quote, ${1:Name}, ${2:Occasion}}]\n____\n${0}\n____",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "quote block --- text ---",
      "matches": {
        "block-quote": true,
        "quote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "83cd604e-f724-3e8a-a424-db51321178d9": {
      "content": "${1:#:macro_name}!(${2})${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "83cdefce-e883-3bbb-b978-5b2f1f82e60a": {
      "content": "border-corner-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "83d34230-f502-3050-aa7f-511fc3616eff": {
      "content": "background-attachment: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      },
      "source": "vim-snippets/snippets"
    },
    "83d51e2f-05d4-3261-ad9e-fc7c83141e95": {
      "content": "public ${1:int} ${2:MyProperty} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propr": true
      },
      "source": "vim-snippets/snippets"
    },
    "83d6b1f1-796f-33ef-951e-289daa066be5": {
      "content": "overflow-style: marquee",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      },
      "source": "vim-snippets/snippets"
    },
    "83df216c-7d59-3e64-a06a-2507e1433f72": {
      "content": "friend",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fr": true
      },
      "source": "vim-snippets/snippets"
    },
    "83e09b42-44c0-3c63-8371-0e2c68d35118": {
      "content": "${1:obj}.get(${2:element index})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "snippets/javascript"
    },
    "83f1af8f-7cac-3444-86b4-5cce66f7774b": {
      "content": "cursor: default;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "83f38edf-76a7-3a8a-91dd-49860d5b4669": {
      "content": "text-transform: lowercase;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "83f44015-a9e1-3104-8158-475999f8cac9": {
      "content": ":after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "83f99773-ca3e-3b78-a993-580bebc92447": {
      "content": "constructor(props) {\n\tsuper(props)\n\n\tthis.state = {\n\t\t $0\n\t}\n}\n",
      "doc": "Adds a default constructor for it('', () => {})the class that contains props as arguments",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "rconst": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "83f9e956-a2cb-3255-a9e2-34f35cb32c23": {
      "content": "\\begin{${1:#:type}}\n\t${2:TARGET}\n\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin": true,
        "begin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "83fd568c-5aa6-36e6-b662-933cbc5fa8c1": {
      "content": "Session::get(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_get": true
      },
      "source": "vim-snippets/snippets"
    },
    "83feb927-099e-37fd-92a3-171eebc8bc92": {
      "content": "<#include \"${0:file.ftl${VISUAL}}\" />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "\"<#include \\\"file.ftl\\\" />\"",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8402b00b-ad98-350d-98f6-ed418f776e1d": {
      "content": "collect { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      },
      "source": "vim-snippets/snippets"
    },
    "840457ed-3ffb-3d9d-a91a-a3acf2316b00": {
      "content": "${1:FIELDNAME} = models.OneToOneField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "OneToOneField",
      "matches": {
        "o2o": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "840692c9-902c-3a1e-8d65-a83cf72159ed": {
      "content": "import React from 'react'\n\ninterface Props {\n\t\n}\n\nexport const ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactArrowFunctionComponent",
      "matches": {
        "tsrafc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8420c4d9-df40-321d-8d55-2a5329cb4a4d": {
      "content": "center:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      },
      "source": "vim-snippets/snippets"
    },
    "84211319-bae9-3198-a86a-4f1c77e0119f": {
      "content": "\\\\sum_{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "summation",
      "matches": {
        "summ": true
      },
      "source": "vim-snippets/snippets"
    },
    "842586b1-5d9a-3be2-b019-735c83048591": {
      "content": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n  ${0}\nfinally\n  call setreg('$1', save_reg_$1, save_regtype_$1)\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use register save",
      "matches": {
        "save_register": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "84286d41-753c-3c94-a521-82d0bb452c07": {
      "content": "$.post('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxpost": true
      },
      "source": "snippets/javascript"
    },
    "84324085-b916-3d7c-aea3-be31400421c5": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      },
      "source": "vim-snippets/snippets"
    },
    "843651a2-f865-3d94-9e2e-c40691bb203f": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/snippets"
    },
    "8439f46b-6553-3796-8bf6-5e08c1767068": {
      "content": "if ${1:#:condition} {\n    ${2:TARGET}\n} else {\n    ${3}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "843bd2c0-5cab-302b-b384-db61d02da186": {
      "content": "<xsl:text>${0}</xsl:text>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/snippets"
    },
    "843e13d1-4c7a-3794-a43f-5a404f001973": {
      "content": "for var ${1:i = 0}; ${2:i < j}; ${3:i++} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8447539f-ec60-3b59-8ae6-082be135e88c": {
      "content": "Map[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "845bd0ec-032c-3961-bf75-4202020cfe0b": {
      "content": "if (${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifs": true
      },
      "source": "vim-snippets/snippets"
    },
    "84612775-638e-30a9-b193-9f0578d5991f": {
      "content": "private fun ${1:name}(${2}): ${3:String} {\n\t${4}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfun": true
      },
      "source": "vim-snippets/snippets"
    },
    "847a756b-2e07-3685-9187-c836243cd18c": {
      "content": "font-variant: small-caps;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "84832010-5c2c-30f1-af47-add43a4ac651": {
      "content": "vertical-align ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/snippets"
    },
    "84882a95-83d8-370b-bb28-7f9ab2194569": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      },
      "source": "vim-snippets/snippets"
    },
    "848d4f8d-8d06-3d38-ac24-7a146f59bc91": {
      "content": "*${1:Emphasis}* ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*": true
      },
      "source": "vim-snippets/snippets"
    },
    "848f7fbb-94b4-327c-95b8-5a1fea2b0a72": {
      "content": "import Vue from 'vue'\nimport ${1:VueCompositionApi} from '${2:@vue/composition-api}'\n\nVue.use(${1:VueCompositionApi})",
      "doc": "Import a plugin to main.js or plugins file",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Plugin import",
      "matches": {
        "vplugin": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "84965bdd-8279-3bf1-b9fe-2aae240cfb6e": {
      "content": "mattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrw": true
      },
      "source": "vim-snippets/snippets"
    },
    "849c1d26-5f98-3e7d-941b-87c075abb3d0": {
      "content": "test ${1:test_name} => { description => '${2:Description of test.}'} => sub {\n\tmy ($self) = @_;\n\t${0}\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trsub": true
      },
      "source": "vim-snippets/snippets"
    },
    "849d6897-8d2a-3c0e-8652-50946b715554": {
      "content": "for ($${1:i}=${2:0}; $$1 < ${3}; $$1++) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "849dbf46-b749-3308-b181-d0e24d2b9cad": {
      "content": "@param ${0:param}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@pa": true
      },
      "source": "vim-snippets/snippets"
    },
    "849f1595-99a9-3120-ac54-7e33f3b03cb8": {
      "content": "| lstrip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lstrip": true
      },
      "source": "vim-snippets/snippets"
    },
    "84a8c966-465f-33d5-bbe4-ec12b09d4e25": {
      "content": "class Class\n\tdef descendants\n\t\tObjectSpace.each_object(::Class).select { |klass| klass < self }\n\tend\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "descendants": true
      },
      "source": "vim-snippets/snippets"
    },
    "84b324a4-5ea6-3bc6-b971-7d0bbc3c2675": {
      "content": "${1:auto} ${2:var} = ${0:1};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "84b3f54a-97ad-3d74-bdf3-96ca7d502915": {
      "content": "Session::id();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_id": true
      },
      "source": "vim-snippets/snippets"
    },
    "84b4390d-1fb3-321c-9b71-5391dbdc123a": {
      "content": "it { should have_readonly_attribute :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishro": true
      },
      "source": "vim-snippets/snippets"
    },
    "84bd2466-cb1c-39f4-a6c9-38d28d5f99a6": {
      "content": "if (${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "84cd7ff4-7657-306f-a4f2-f1d6e42b358c": {
      "content": "import React from 'react'\n\nfunction ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionalExportComponent",
      "matches": {
        "rfce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "84ce4d58-c7cc-33ca-9422-c92351cc3e09": {
      "content": "useCallback(\n\t() => {\n\t\t${1:callback}\n\t},\n\t[${2:input}],\n)",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usecallback",
      "matches": {
        "react usecallback": true,
        "usecallback": true
      },
      "source": "javascript/react"
    },
    "84da12fe-14f9-3efe-9435-37035866a86c": {
      "content": "_.rest(${func}, ${start})",
      "doc": "var say = _.rest(function(what, names) {\n  return what + ' ' + _.initial(names).join(', ') +\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n});\n\nsay('hello', 'fred', 'barney', 'pebbles');\n// => 'hello fred, barney, & pebbles'\n\nCreates a function that invokes `func` with the `this` binding of the\ncreated function and arguments from `start` and beyond provided as\nan array.\n\n**Note:** This method is based on the\n[rest parameter](https://mdn.io/rest_parameters).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rest",
      "matches": {
        "lodash rest": true
      },
      "source": "javascript/lodash"
    },
    "84f6682f-90a0-3bdf-a33f-604c7ba64d29": {
      "content": "text-align-last auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "8500d7c1-cdd9-3897-be4b-7b833bf3fde4": {
      "content": "Yii::app()->cache->get('${0:key}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycag": true
      },
      "source": "vim-snippets/snippets"
    },
    "8512f472-4446-3a2d-84ef-8b868422d44b": {
      "content": "text-wrap: suppress;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "85154af3-3679-3bd6-86d2-20ae2933498c": {
      "content": "#{$1}$0",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Interpolated Code",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8516de5c-3a9a-3dd5-ae97-7af6368c4f23": {
      "content": "it { should belong_to(:${1}).counter_cache ${0:true} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbtcc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8519f35c-9f07-367b-80d9-db5bf5888479": {
      "content": "Session::set(${1:key}, ${2:value});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_set": true
      },
      "source": "vim-snippets/snippets"
    },
    "851a4354-5230-3a17-b558-fb059e191c8f": {
      "content": "public void test${1:#:Name}() throws Exception {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8521ed5b-05cd-35dc-b9fe-5082cccc32dd": {
      "content": "process (${1:clk})\nbegin\n\tif rising_edge ($1) then\n\t\t${2}\n\tend if;\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8534ac2c-bcd5-370b-9905-30cf91772739": {
      "content": "const ${1:contextName} = React.createContext()\n",
      "doc": "Create React context",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "createContext",
      "matches": {
        "rcontext": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "853b4175-9eff-3dc0-89bd-1e2a1efcb37a": {
      "content": "<%= if ${1} do %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "8544a74b-8529-3893-b400-a09c0710ef90": {
      "content": "assert_respond_to ${1:object}, :${2:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "8544ba91-6da2-34c6-8084-7703264a32fd": {
      "content": "border-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "854b15bf-1bbd-37fb-a97b-eaf45e4825e9": {
      "content": "<kbd>${0}</kbd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kbd": true
      },
      "source": "vim-snippets/snippets"
    },
    "8552cc93-c484-3f6e-b14c-36c2f69291b0": {
      "content": "spyOn(${1:object}, '${2:method}').and.callFake(${3:function});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and call fake (js)",
      "matches": {
        "scf": true
      },
      "source": "vim-snippets/snippets"
    },
    "85576e00-6964-34e6-ab85-75680f5569ab": {
      "content": "@unittest.skip(${1:skip_reason})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "skip unittests",
      "matches": {
        "sk": true
      },
      "source": "vim-snippets/snippets"
    },
    "855b076f-69b3-35ff-9d16-3e871fb1ddfb": {
      "content": "defmodule ${1:module_name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "def module",
      "matches": {
        "defm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "855f0dbf-9419-3ec2-8388-a858d6bc652f": {
      "content": "<style lang=\"sass\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with sass",
      "matches": {
        "style_with_sass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "856cd6bc-b2dd-39ff-aa4f-da260a316d46": {
      "content": "augroup ${1:AU_NAME}\n\tautocmd!\n\t${0:${VISUAL}}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroupvisual ... autocmd block with visual placeholder",
      "matches": {
        "auv": true
      },
      "source": "vim-snippets/snippets"
    },
    "8586dfcf-a9bf-3774-bafa-86a64f375e84": {
      "content": "_.flattenDepth(${array}, ${depth})",
      "doc": "var array = [1, [2, [3, [4]], 5]];\n\n_.flattenDepth(array, 1);\n// => [1, 2, [3, [4]], 5]\n\n_.flattenDepth(array, 2);\n// => [1, 2, 3, [4], 5]\n\nRecursively flatten `array` up to `depth` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flattendepth",
      "matches": {
        "lodash flattendepth": true
      },
      "source": "javascript/lodash"
    },
    "85873e8c-993e-3e60-bb7e-48359c9f4184": {
      "content": "Serial.read();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sr": true
      },
      "source": "vim-snippets/snippets"
    },
    "8592f1fc-7fa1-3a50-8676-961b9e3a1c53": {
      "content": "\\begin{align}\n\t${0:${VISUAL}}\n\\end{align}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Align",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "859ae8ab-ddae-3140-a7a3-4521be0b7d71": {
      "content": "startDrag(${1:#:target}, ${2:#:lockcenter}, ${3:#:l}, ${4:#:t}, ${5:#:r}, ${6:#:b} );",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "859d069f-3aba-32a1-b53c-f71f82c0e432": {
      "content": "import { Injectable } from '@angular/core';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor() { }\n\t$0\n}",
      "doc": "Angular Service with Injectable ProvidedIn Root",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Service",
      "matches": {
        "a-service": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "859fe575-6bab-3098-9060-0ac129537e2f": {
      "content": "_.split(${string}, ${separator}, ${limit})",
      "doc": "_.split('a-b-c', '-', 2);\n// => ['a', 'b']\n\nSplits `string` by `separator`.\n\n**Note:** This method is based on\n[`String#split`](https://mdn.io/String/split).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-split",
      "matches": {
        "lodash split": true
      },
      "source": "javascript/lodash"
    },
    "85a24950-5617-386d-ae20-3c3ecebcbff0": {
      "content": "place-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "85cb439d-37c4-3891-b577-5de9c67caf45": {
      "content": "partition do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pard": true
      },
      "source": "vim-snippets/snippets"
    },
    "85ce0171-1f94-3926-85e8-517785c7d458": {
      "content": "background-size ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      },
      "source": "vim-snippets/snippets"
    },
    "85cfb7fc-58a1-3053-aa21-e5eda05d6230": {
      "content": "quotes none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "85d2d471-bd9f-3d7f-9c81-fe950e8229c8": {
      "content": "eval {\n\t${1:TARGET}\n};\nif ($@) {\n\t${2:#:handle failure...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eval": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "85d7359a-f8ab-3383-bdbc-de146c3951bb": {
      "content": "(*\n   ${0:TARGET}\n*)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "multi line comment",
      "matches": {
        "Cc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "85df070d-a4c6-3745-9150-f5745b719fa1": {
      "content": "panic(\"${0:msg}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic()",
      "matches": {
        "pn": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "85e65943-232b-3804-9c96-22164a1753d3": {
      "content": "inout${1:#: nbit} io_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "inout [] io_,",
      "matches": {
        "IO": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "85f157b4-9bec-3f17-a03a-cedd20c0fba0": {
      "content": "public bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+-": true
      },
      "source": "vim-snippets/snippets"
    },
    "85f5c88a-21a7-368b-b035-fc7ea60db267": {
      "content": "clean:\n  rm -f ${0}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clean:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "85faead4-631e-3f02-a04d-8363bfcd5e9e": {
      "content": "${1:m a} -> ${0:a}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->": true
      },
      "source": "vim-snippets/snippets"
    },
    "860869a3-cc1f-39e4-8426-193b475a4ad1": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "8609d946-bbf8-3a95-a181-3c3bd3e119eb": {
      "content": "while (${1:condition}) {\n\t${0}\n}",
      "doc": "while loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "while-loop",
      "matches": {
        "base while": true
      },
      "source": "javascript/base"
    },
    "860fa7de-4ec9-311e-823c-d0d94a51c9a1": {
      "content": "type tt_${1:name} is table of tr_${0:name} index by binary_integer;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tti": true
      },
      "source": "vim-snippets/snippets"
    },
    "8625d46c-7c46-3307-b1ee-d007d995944a": {
      "content": "expect($1).toHaveBeenCalledWith($0);",
      "doc": "returns true if the spy has been called with",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalledwith",
      "matches": {
        "jest expect tohavebeencalledwith": true,
        "thbcw": true
      },
      "source": "javascript/jest"
    },
    "862d893a-6efe-32fd-b1ea-72ef0ce753e0": {
      "content": "${1:map}.${2:connect} '${3::controller/:action/:id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.named_route",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "86348248-908e-3d90-8a1e-7b7d7caea483": {
      "content": "${fn:toLowerCase(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lc": true
      },
      "source": "vim-snippets/snippets"
    },
    "864370d9-cd38-3a63-b502-e185c9ced13c": {
      "content": "do {\n\t${1:TARGET}\n} while (${2:#:condition});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8648e306-890c-36ad-b58e-f7c22a8c47b2": {
      "content": "vertical-align: super;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      },
      "source": "vim-snippets/snippets"
    },
    "865523a5-8211-3059-9982-ba8bc143b669": {
      "content": "{% elif ${0:condition} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "86574f5c-8aca-3072-b73d-1161a988401d": {
      "content": "import { motion, AnimatePresence } from \"framer-motion\"",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-presence-import",
      "matches": {
        "animate-presence": true,
        "framer-motion import animate-presence": true
      },
      "source": "javascript/framer-motion"
    },
    "865cfb55-d038-3882-9612-9c0fa6f7f81e": {
      "content": "protected bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb|": true
      },
      "source": "vim-snippets/snippets"
    },
    "865fc941-0b80-3d71-af1e-f80535040585": {
      "content": "(lambda (${1}) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      },
      "source": "vim-snippets/snippets"
    },
    "86695d58-e8aa-33ba-9b62-7377754305ce": {
      "content": "background-position-x: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      },
      "source": "vim-snippets/snippets"
    },
    "8671c0f5-8c00-3717-b757-c1a1091bdc99": {
      "content": "#!/usr/bin/env perl",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "86754d41-fead-322d-b272-baee235c4a6f": {
      "content": "number.lessThan()",
      "doc": "number.lessThan(max: number | Ref, message?: string | function): Schema\n\nValue must be less than max. The ${less} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-less-than",
      "matches": {
        "yup number lessthan": true
      },
      "source": "javascript/yup"
    },
    "867fdfdb-a62f-3810-ae42-310ee6b50494": {
      "content": "line(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "line": true
      },
      "source": "vim-snippets/snippets"
    },
    "868770c2-6e6c-318a-b91b-c083ba4fc952": {
      "content": "${1:obj}.fadeIn('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadein": true
      },
      "source": "snippets/coffee"
    },
    "86905378-07c8-3ed5-9d7a-d4efe9f682ba": {
      "content": "outline ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      },
      "source": "vim-snippets/snippets"
    },
    "8692d12a-a7a3-38d1-80e2-91f1e9f02f44": {
      "content": "assert_redirected_to ${0:model}s_path",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artpp": true
      },
      "source": "vim-snippets/snippets"
    },
    "8693a103-33e7-31f8-b7e3-0672f01ce1db": {
      "content": ":hover",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      },
      "source": "vim-snippets/snippets"
    },
    "86a9330e-175d-37da-b3c6-5ba6123587dc": {
      "content": "module ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/snippets"
    },
    "86af7753-47d1-3fb4-80a5-09d9f8b99990": {
      "content": "elseif ${1:#:condition}\n    ${0:TARGET}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "86b2b739-4f89-3ebe-9d64-3e98a3e89889": {
      "content": "after_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macr": true
      },
      "source": "vim-snippets/snippets"
    },
    "86b4815a-00a8-3ad1-b3df-e424a1fc656c": {
      "content": "${1:#:set the_file to }choose file with prompt \"${2:#:Pick a file:}\"\n${3:#:default location path to home folder}\n${4:#:with invisibles}\n${5:#:with multiple selections allowed}\n${6:#:with showing package contents}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Files": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "86b569b3-0138-36f0-a03e-6dd8e6360645": {
      "content": "while getopts '${1:o}' ${2:opts}\ndo\n\tcase $$2 in\n\t${3:o0})\n\t\t${0:#staments};;\n\tesac\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "go": true
      },
      "source": "vim-snippets/snippets"
    },
    "86b9884c-9bce-3348-8b79-01d4d074a949": {
      "content": "async def ${1:mname}(self, ${2:arg}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "adefm": true
      },
      "source": "vim-snippets/snippets"
    },
    "86c1864c-26b9-3660-8e32-15973493dd1c": {
      "content": "summary(${1:dataName}, digits = ${2:digits}, maxsum = ${3:maxsum})",
      "doc": "Mean, median, 25th and 75th quartiles, min, and max of variables",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Descriptive statistics summary",
      "matches": {
        "summary": true
      },
      "source": "vscode-R/snippets"
    },
    "86cc5648-2b7d-3ee7-8dfa-ac680dcc876d": {
      "content": "System.Text",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "86cc96a5-107f-3610-863b-18c494e05839": {
      "content": "${1:int}[] ${2:numbers}${3: = new $1}[${0:length}];",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/snippets"
    },
    "86ccb7fa-acf7-328e-9689-66fbd57f1f6b": {
      "content": "Ada.Text_IO.Get_Line(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get_Line",
      "matches": {
        "getl": true
      },
      "source": "vim-snippets/snippets"
    },
    "86cdfea0-6158-346b-8889-383da1a3cc63": {
      "content": "if (${1}) ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "86d01bce-ee04-3519-b117-134508656dd9": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      },
      "source": "vscode-react/snippets"
    },
    "86e155c6-fa58-3f06-8cb0-f22c2ab12f75": {
      "content": "function ${1:function_name}(${2})${3}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "86ed0d03-d1fa-3c4e-aa08-9ff1786605ca": {
      "content": "default :\n\t${1}\nbreak;",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/snippets"
    },
    "8718eb7a-890d-3566-ba6b-b4020f4951af": {
      "content": "if ${1:condition}\n\t${2:# body...}\nelse\n\t${3:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "If .. Else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "871b9b1e-492a-351d-9a5f-bafcd33e4cd9": {
      "content": "dictsort:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "871ce191-08dd-3c37-acd1-4de8559a9c73": {
      "content": "let open ${1:module} in\n${2:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "open",
      "matches": {
        "open": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8722fa75-5a8c-32ce-92bd-314ea5c4a408": {
      "content": "{% with ${1} as ${2} %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "87252fbf-7a25-3e84-b7cb-be4c089f0890": {
      "content": "script src=\"${1:script.js}\" type=\"text/javascript\"",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      },
      "source": "vim-snippets/snippets"
    },
    "8726a1f3-cace-3658-8149-f238dedc751a": {
      "content": "floor(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floor": true
      },
      "source": "vim-snippets/snippets"
    },
    "8733111c-9145-39e8-82a0-90059702060c": {
      "content": "echo CHtml::link('${1:text}',array(${2}),array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlink": true
      },
      "source": "vim-snippets/snippets"
    },
    "87343ec6-2319-372d-960c-b3a6defeb63f": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "87396dab-3a67-3b55-9a68-efbe748d07d9": {
      "content": "@font-face\n\tfont-family: ${1}\n\tsrc: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      },
      "source": "vim-snippets/snippets"
    },
    "8746765b-1329-323c-9f57-cf0d16ecefb3": {
      "content": "margin: ${1:0} ${2:0} ${3:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "8752f8f2-cdc2-35e0-ac66-81b09355eef5": {
      "content": "| minus: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "minus": true
      },
      "source": "vim-snippets/snippets"
    },
    "8753a247-9f53-35f6-9a3b-1bbac7d1e208": {
      "content": "translate(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "translate": true
      },
      "source": "vim-snippets/snippets"
    },
    "875fc49e-75a2-3e86-8e71-cda550206dad": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/**": true
      },
      "source": "vim-snippets/snippets"
    },
    "8761cbf3-5b39-3fbf-8ad9-9384192235e3": {
      "content": "_.difference(${array}, ${values})",
      "doc": "_.difference([2, 1], [2, 3]);\n// => [1]\n\nCreates an array of `array` values not included in the other given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.\n\n**Note:** Unlike `_.pullAll`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-difference",
      "matches": {
        "lodash difference": true
      },
      "source": "javascript/lodash"
    },
    "8765cd5c-4bba-3fd8-9f3c-8ddb6f1605d3": {
      "content": "${1:name}.split(\"${0:,}\")",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spl": true
      },
      "source": "vim-snippets/snippets"
    },
    "87667af0-a287-3b24-9fd8-ec00306a81d6": {
      "content": "<#local ${1:variable_name} = ${0:value${VISUAL}} />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#local variable_name = value />",
      "matches": {
        "loc": true
      },
      "source": "vim-snippets/snippets"
    },
    "876d8c32-436f-3f32-ae60-33636bf616a1": {
      "content": "DECIMAL",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dec": true
      },
      "source": "vim-snippets/snippets"
    },
    "876ee359-9b59-36b9-8497-67c86cd41bc0": {
      "content": "|> IO.inspect(label: \"${1:label}\")",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to inspect with label",
      "matches": {
        ">il": true
      },
      "source": "vim-snippets/snippets"
    },
    "87767aba-b7b9-3f51-83b5-22266a38d0ae": {
      "content": "${1}:\nfor ${2:I} in ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for",
      "matches": {
        "nfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "87784ab0-b34f-3cfc-ad20-1304877459ed": {
      "content": "process.stderr",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stderr": true
      },
      "source": "snippets/javascript"
    },
    "877b846c-c015-3731-a714-1515d4e09215": {
      "content": "type ${1:Type} = ${0:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      },
      "source": "vim-snippets/snippets"
    },
    "87908e34-a629-3aa7-b6ad-a6b73e56082f": {
      "content": "/// <summary>\n/// $0\n/// </summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML summary comment",
      "matches": {
        "///": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8791b44b-9d5d-3fa5-a4b3-04d5792f5085": {
      "content": "<menu type=\"context\">\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "87950b82-1582-38ae-abea-5a145ac89e35": {
      "content": "const ${1:value} = get(${2:store});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-store-get",
      "matches": {
        "svelte store-get-value": true,
        "svstoregm": true
      },
      "source": "javascript/svelte"
    },
    "8795c1d7-e29d-3372-bae6-43a64bdb501f": {
      "content": "accepts_nested_attributes_for :${0:association}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ana": true
      },
      "source": "vim-snippets/snippets"
    },
    "879b22b8-a7c8-3f0e-951d-43e0f97003f4": {
      "content": "margin-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      },
      "source": "vim-snippets/snippets"
    },
    "87a862ec-759f-3a86-b70f-a35c88f71fec": {
      "content": "{% requireGuest %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requireguest",
      "matches": {
        "requireguest": true
      },
      "source": "vim-snippets/snippets"
    },
    "87ae4c30-0ee7-3b08-9539-2faf8fe7fc0f": {
      "content": "_.takeRightWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.takeRightWhile(users, function(o) { return !o.active; });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeRightWhile(users, ['active', false]);\n// => objects for ['fred', 'pebbles']\n\n// The `_.property` iteratee shorthand.\n_.takeRightWhile(users, 'active');\n// => []\n\nCreates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takerightwhile",
      "matches": {
        "lodash takerightwhile": true
      },
      "source": "javascript/lodash"
    },
    "87b36778-f925-3651-903c-72d6db7e3f68": {
      "content": "/**\n* @group ${1}\n*/",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "phpunit comment with group",
      "matches": {
        "testcmt": true
      },
      "source": "vim-snippets/snippets"
    },
    "87ba8275-8a1b-3bfe-8c88-9d90b043b50b": {
      "content": "noiseDetail(${1:octaves}${2:, }${0:falloff});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noiseDetail": true
      },
      "source": "vim-snippets/snippets"
    },
    "87bb5bf3-f372-31ad-b42d-469628536398": {
      "content": "_.nth(${array}, ${n})",
      "doc": "var array = ['a', 'b', 'c', 'd'];\n\n_.nth(array, 1);\n// => 'b'\n\n_.nth(array, -2);\n// => 'c';\n\nGets the element at index `n` of `array`. If `n` is negative, the nth\nelement from the end is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-nth",
      "matches": {
        "lodash nth": true
      },
      "source": "javascript/lodash"
    },
    "87bba080-9f9b-3c80-9afc-eab90a68c417": {
      "content": "$.isEmptyObject(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isempty": true
      },
      "source": "snippets/javascript"
    },
    "87c62622-2b00-3996-8d7c-fd3bb00f4b6d": {
      "content": "align-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "87edd40e-a443-362f-83ae-61636689c343": {
      "content": "visibility: collapse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "87fb65a3-9163-334c-af62-3ce1d7cfe5d9": {
      "content": "@extends('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@extends directive",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "87fda457-a782-38c9-be7d-903e7607a3b5": {
      "content": "import { BrowserRouter as Router } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router",
      "matches": {
        "imbr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8801ce00-e0d3-32f9-943f-09b57c7cf70f": {
      "content": "background-origin ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      },
      "source": "vim-snippets/snippets"
    },
    "8808a477-0f85-3df5-896e-de74773bd09e": {
      "content": "integer, dimension(${1::})${2:#:, allocatable} :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension",
      "matches": {
        "ind": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "880a7c89-518a-3fef-a2dc-95a59cb22ed2": {
      "content": "<xsl:copy-of select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "copy-of": true
      },
      "source": "vim-snippets/snippets"
    },
    "880be5fa-6487-38f8-b83f-bf938899c810": {
      "content": "#if ${1:FOO}\n\t${0:${VISUAL}}\n#endif",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      },
      "source": "vim-snippets/snippets"
    },
    "88163d42-2f55-342e-9199-e69d69afae2f": {
      "content": "_.assign(${object}, ${sources})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assign({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'c': 3 }\n\nAssigns own enumerable string keyed properties of source objects to the\ndestination object. Source objects are applied from left to right.\nSubsequent sources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object` and is loosely based on\n[`Object.assign`](https://mdn.io/Object/assign).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-assign",
      "matches": {
        "lodash assign": true
      },
      "source": "javascript/lodash"
    },
    "881a6576-4413-30dd-a124-a1e0c4c87988": {
      "content": "{!! $1 !!}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{!! !!} statement",
      "matches": {
        "{!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "882eea29-91a3-3cac-9718-4e36649c53ac": {
      "content": "<% ${1}.each do |${2}| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ead": true
      },
      "source": "vim-snippets/snippets"
    },
    "8837be1a-9a1f-3528-af01-67a6529cb5e9": {
      "content": "{%- layout '${1:layout}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layout-": true
      },
      "source": "vim-snippets/snippets"
    },
    "883945f7-2cd8-3eb5-9516-1210e5c82d01": {
      "content": "fmt.Printf(\"%${1:s}\\n\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf()",
      "matches": {
        "pf": true
      },
      "source": "vim-snippets/snippets"
    },
    "884a4bea-f742-3987-94f1-74c07fb44f05": {
      "content": "const mapStateToProps = (state) => ({\n\t${1}\n})\n\nconst mapDispatchToProps = {\n\t\n}\n",
      "doc": "Creates mapStateToProps function.",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-map-to-props",
      "matches": {
        "redux map props": true
      },
      "source": "javascript/redux"
    },
    "884a98f1-a938-3053-9859-b1da654d15cb": {
      "content": "expect(${1:target}).not.toBeDefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be defined (js)",
      "matches": {
        "notd": true
      },
      "source": "vim-snippets/snippets"
    },
    "884c34fb-a281-34be-aac3-880e407bfca3": {
      "content": "\\begin{pmatrix}\n\t${1:TARGET}\n\\end{pmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\pegin{bmatrix} \\pmatrix": true,
        "pmatrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8855f317-9507-34a5-9e5d-7bef45ed86fd": {
      "content": "chan ${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "chan Type",
      "matches": {
        "ch": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "8859604b-6539-3ef9-879a-e48736c430c9": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "885c83b2-2173-392e-91bb-b4943df93c09": {
      "content": "{{#${1:value}}}\n${2:${VISUAL}}\n{{/$1}}\n{{^$1}}\n${3}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{#value}} ... {{/value}} {{^value}} ... {{/value}}",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "8864fe83-5d77-3dfc-90c7-fa05a5592564": {
      "content": "if (${1:#:condition}) {\n    ${2:TARGET}\n} else {\n    ${3}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "88673c7b-b7ef-3d6b-b9b5-268a2448da9e": {
      "content": "assert_throws :${1:expected} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "astd": true
      },
      "source": "vim-snippets/snippets"
    },
    "886a06ea-c162-3a5c-9c0c-bd3b1d824ab6": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "886ad962-1bff-3787-9170-177fd8240cd4": {
      "content": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ummap": true
      },
      "source": "vim-snippets/snippets"
    },
    "886b344d-6683-3c1a-98cd-77f747175b19": {
      "content": "place-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "88734b9a-b88c-3c65-a95c-ea2fecbe3e4f": {
      "content": "{% set ${1:name} = ${2:'value'} %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "set",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8875b9d4-caf5-386a-849e-8a23598259a8": {
      "content": "internal string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&-": true
      },
      "source": "vim-snippets/snippets"
    },
    "887a71ff-a070-3d0c-b813-a00d0ebbd5c5": {
      "content": "font-style: oblique",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "887fc24e-7f50-316a-8d24-fcfe530ded27": {
      "content": "import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeFunctionalComponentWithStyles",
      "matches": {
        "rnfs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8887047c-abf9-314c-997f-d0daed747053": {
      "content": "${1:obj}.html('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      },
      "source": "snippets/javascript"
    },
    "8895a29a-902e-30c1-8802-46dce8a0853d": {
      "content": "$.map ${1:arrayOrObject}, (${2:value}, ${3:indexOrKey}) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapp": true
      },
      "source": "snippets/coffee"
    },
    "889c7e08-68b9-366d-8d3c-3b18becaef71": {
      "content": "$.ajaxStart ->\n\t${1:// handler for when an AJAX call is started and no other AJAX calls are in progress}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstart": true
      },
      "source": "snippets/coffee"
    },
    "88a1c2b9-11ec-3a4e-b290-f0b76fecf129": {
      "content": "${1:obj}.remove()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rem": true
      },
      "source": "snippets/javascript"
    },
    "88a97814-037b-3d0f-b394-add064ec553c": {
      "content": "position: relative;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "88a9e930-2b91-3a33-9b2a-d295ad720a2b": {
      "content": "import PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-types-import",
      "matches": {
        "impt": true,
        "prop-types import": true
      },
      "source": "javascript/prop-types"
    },
    "88abd119-fb36-303e-84fa-f1e813837cc9": {
      "content": "word-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      },
      "source": "vim-snippets/snippets"
    },
    "88b24b72-54f1-380a-a66f-075b3e82ad4a": {
      "content": "<summary>\n\t${0}\n</summary>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "summary": true
      },
      "source": "vim-snippets/snippets"
    },
    "88b45e62-8f91-3725-852b-af0718a8f2b2": {
      "content": "<component :is=\"${1:componentId}\"></component>$0",
      "doc": "component element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-component",
      "matches": {
        "component": true,
        "vue component": true
      },
      "source": "javascript/vue"
    },
    "88c30abf-6cd8-36f2-8bd7-74c2f5e0bfcf": {
      "content": "<style lang=\"stylus\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with stylus",
      "matches": {
        "style_with_stylus": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "88c3782d-3d08-3309-b71b-b9e53ff36730": {
      "content": "render text:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :text",
      "matches": {
        "rt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "88d28cbb-30a4-3d52-b40d-2f30b1ffe7f2": {
      "content": "${1:obj}.fadeTo('slow/400/fast', ${2:0.5}, function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadetoc": true
      },
      "source": "snippets/javascript"
    },
    "88dab866-9be0-3cb3-b553-dccd27650b77": {
      "content": "![${1:alt}](http://${2:link})$0",
      "doc": "Insert image",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert image",
      "matches": {
        "image": true
      },
      "source": "vscode-R/snippets"
    },
    "88e4e742-f01f-347e-b4f2-f6d09230dd0f": {
      "content": "_.minBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.minBy(objects, function(o) { return o.n; });\n// => { 'n': 1 }\n\n// The `_.property` iteratee shorthand.\n_.minBy(objects, 'n');\n// => { 'n': 1 }\n\nThis method is like `_.min` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-minby",
      "matches": {
        "lodash minby": true
      },
      "source": "javascript/lodash"
    },
    "88edb2b1-f335-31aa-9bbf-c26b50765bee": {
      "content": "${1:actionName}() {\n\tthis.\\$store.dispatch('${1:actionName}', ${2:payload})\n}",
      "doc": "dispatch to vuex store in methods for action",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-dispatch-vuex-store-in-methods",
      "matches": {
        "vdispatch": true,
        "vue dispatch vuex store in methods": true
      },
      "source": "javascript/vue"
    },
    "88edba42-2323-39b3-b5ac-9480de258250": {
      "content": "gl.glVertex2f(${1:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl vertex 2f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "88f11659-3f56-3bf4-bd83-05307534551f": {
      "content": "for(let ${1:item} in ${2:object}) {\n\t${0}\n}\n",
      "doc": "Iterating over property values of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forIn",
      "matches": {
        "fin": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "88f450a3-b52b-385a-b44c-6873954a173c": {
      "content": "import * as ${2:alias} from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importEverything",
      "matches": {
        "ime": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "88f910f2-dadc-35c7-895c-0cef1fabfd86": {
      "content": "expect(${1:target}).toBeHidden();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be hidden (js)",
      "matches": {
        "eh": true
      },
      "source": "vim-snippets/snippets"
    },
    "89182290-047e-3ba7-9ab9-0091e3904d3b": {
      "content": "*ngFor=\"let ${1:item} of ${2:stream} | async as ${3:list}\"${0}",
      "doc": "Angular *ngForAsync",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngForAsync",
      "matches": {
        "a-ngForAsync": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "891ab0f6-5a16-3b4a-b98f-615f14354168": {
      "content": "border-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      },
      "source": "vim-snippets/snippets"
    },
    "89208fad-a34f-3948-9a1c-a7af335fb4e2": {
      "content": "display: table-caption;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "89218404-69c2-340f-98ed-6702de4f3b11": {
      "content": "DirectoryIndex index.php index.html",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "directoryindex": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8924914a-d4af-3857-af09-d36ddca53529": {
      "content": "border-bottom: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      },
      "source": "vim-snippets/snippets"
    },
    "8931ee6b-5e47-3315-a6a0-d89d5d5cb0f8": {
      "content": "procedure ${1:name}\n\t${0}\nend procedure $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      },
      "source": "vim-snippets/snippets"
    },
    "89382054-4267-355c-81f0-90576451f35c": {
      "content": "get_digit:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8942aafb-f858-3fbb-8dc6-db7b2db3d666": {
      "content": "const ${1:value} = useContext(${2:MyContext});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useContext",
      "matches": {
        "usect": true
      },
      "source": "snippets/javascript"
    },
    "8948ce3a-7e67-3fb3-ace3-d1c9d3c142f8": {
      "content": "${1:obj}.focusOut(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusout": true
      },
      "source": "snippets/javascript"
    },
    "894a2c18-c96a-3a38-8619-b9d72bbd4871": {
      "content": "text-transform: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "89528f7a-29e6-3a4a-9880-d7796954de33": {
      "content": "import { mapMutations } from 'vuex';\n\nexport default {\n\tmethods: {\n\t\t...mapMutations([\n\t\t\t${1:'nameOfMutation'}, //also supports payload `this.nameOfMutation(amount)` \n\t\t])\n\t},\n};",
      "doc": "mapmutations inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapMutations",
      "matches": {
        "vmapmutations": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "89544375-65a6-35e3-9b41-8affa417c0f9": {
      "content": "const ${1:ref} = useRef(${2:initialValue})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useref",
      "matches": {
        "react useref": true,
        "useref": true
      },
      "source": "javascript/react"
    },
    "895c32a6-9aaf-32e0-b047-01ead2d71f1d": {
      "content": "grid-auto-rows: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "8961fff3-2b14-3c5a-9529-dd3de6a15be8": {
      "content": "mods : { ${1:modName} : '${2:modVal}' },",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mo": true
      },
      "source": "vim-snippets/snippets"
    },
    "896d5b4b-e414-33e4-85fb-a2a0b282bc53": {
      "content": "{% hook \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig hook",
      "matches": {
        "hook": true
      },
      "source": "vim-snippets/snippets"
    },
    "896db8c1-aae3-3523-9023-2828e124e078": {
      "content": "resize ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      },
      "source": "vim-snippets/snippets"
    },
    "8972ca73-b429-3d61-825c-8b67d4a52723": {
      "content": "t.string :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcs": true
      },
      "source": "vim-snippets/snippets"
    },
    "897c8867-ec83-3206-a315-c0538a3b24e3": {
      "content": "extension ${1:Int} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extension": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8982fa77-fa47-3c92-bd56-ae469006f893": {
      "content": "expect(${1:target}).not.toThrow(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to throw (js)",
      "matches": {
        "notth": true
      },
      "source": "vim-snippets/snippets"
    },
    "8988fa24-f72e-3667-a40b-a6c98673a546": {
      "content": "if ${1:#:condition} then ${2:#:value} else ${3:#:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "89958557-a680-3985-9af8-1bf8f978cfba": {
      "content": "#!/usr/bin/env ${1}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "env": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "899ab776-4988-3f90-9f07-9e0c265f9d53": {
      "content": "${${1}}${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "${": true
      },
      "source": "snippets/javascript"
    },
    "89a01a5b-464f-3730-a7ef-1830fb8b895a": {
      "content": "import { $2 } from '${1:module}';$0",
      "doc": "Imports only a portion of the module in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importdestructing",
      "matches": {
        "base import destructing": true
      },
      "source": "javascript/base"
    },
    "89a136e1-21a0-3fc4-bab7-a80530fa25b4": {
      "content": "{{ MEDIA_URL }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mediau": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "89ab340b-9ae8-3a6c-abc2-b914acba1ffc": {
      "content": "character(${1}) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "character",
      "matches": {
        "ch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "89b6d3d4-7e5b-3b51-b47f-1f5aa2f66f5c": {
      "content": "font-effect: engrave",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      },
      "source": "vim-snippets/snippets"
    },
    "89c012ec-a515-3ecb-8a7f-123f4c48ccbc": {
      "content": "threadIdx.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Thread Index",
      "matches": {
        "tid": true
      },
      "source": "vim-snippets/snippets"
    },
    "89cf36d7-4110-3699-a3a9-491e95bf0613": {
      "content": "MsgBox(0, \"${0:VarName}\", $1)",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showvar": true
      },
      "source": "vim-snippets/snippets"
    },
    "89d22ba9-ce8e-324f-9065-7ba25785dd89": {
      "content": "type ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "89d455eb-521e-33ba-b363-ff8928c7c86a": {
      "content": "setup do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "setup do..end",
      "matches": {
        "setup": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "89d9948e-e98c-316b-adc4-2bc8b0d91a7c": {
      "content": "expect(${1:target}).toHaveBeenCalledWith(${2:arguments});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have been called with (js)",
      "matches": {
        "ethbcw": true
      },
      "source": "vim-snippets/snippets"
    },
    "89dcb738-ad9a-3e78-bcfc-421b2d46451f": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "89df6520-0761-303c-980e-3858bc2d47b1": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "89e579c4-cd95-3ec6-97e0-ce1fb030af01": {
      "content": "${1:pattern}${2: when ${3:guard}} ->\n\t${4:body}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Case:Receive:Try Clause",
      "matches": {
        "pat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "89e98e6b-3732-3ba9-9764-c526fa117f4b": {
      "content": "text-align: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true,
        "text-align": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "89ea48ac-385d-3cc1-b878-fba7572c3eb9": {
      "content": "sub ${1:function_name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "89f2fa0a-fbc5-37c1-a013-e7d9e47a7956": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "89f46bd7-9c64-3e12-b592-7d460d9bbb7b": {
      "content": "public string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a019bce-2be0-35cc-8052-9c1352a5f5cd": {
      "content": "// FIXME: $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "FIXME comment",
      "matches": {
        "fixme": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a0579e9-de3c-34d9-808e-fa5e476a3d1f": {
      "content": "string.uppercase()",
      "doc": "string.uppercase(message?: string | function): Schema\n\nTransforms the string value to uppercase. If strict() is set it\nwill only validate that the value is uppercase.numberDefine a number schema. Supports all the same methods as mixed.let schema = yup.number();\n\nawait schema.isValid(10); // => true\nThe default cast logic of number is: parseFloat.Failed casts return NaN.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-uppercase",
      "matches": {
        "yup string uppercase": true
      },
      "source": "javascript/yup"
    },
    "8a05ec46-7168-3f0f-9ed1-a08c4deac2d7": {
      "content": "#define ${1}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a078af6-4fb8-3dc8-a2d6-2e0d417b8351": {
      "content": "nuxt-link(to=\"/${1:page}\") ${1:page}",
      "doc": "nuxt routing link",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Nuxt Routing Link",
      "matches": {
        "vnuxtl": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "8a0824db-4839-3aa3-9a22-9f7b7c5cc2a4": {
      "content": "cy.wait(${1:time});",
      "doc": "Wait for a number of milliseconds or wait for an aliased resource to resolve before moving on to the next command.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-wait",
      "matches": {
        "cypress wait": true
      },
      "source": "javascript/cypress"
    },
    "8a1f845b-6e8c-3b08-a26d-58ab94c40e00": {
      "content": "DROP TABLE IF EXISTS ${1:table};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "DROP TABLE IF EXISTS ...",
      "matches": {
        "DROP_TABLE": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a2433ba-f77d-319d-aa26-1d6927e889c3": {
      "content": "qr/${0:regex}/x",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qr/": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a26d242-a730-3be2-a2d8-60ca659c3e22": {
      "content": "\ncomponentWillMount() {\n\t$0\n}\n",
      "doc": "Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      },
      "source": "vscode-react/snippets"
    },
    "8a278224-5b92-336a-ae96-ccefb118bee5": {
      "content": "<figure class=\"${1}\">\n\t${0}\n</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure.": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a295721-e470-379d-ac63-4b7b1b1993e7": {
      "content": "var tests = []struct {\n    name string\n    expected string\n    given string\n}{\n    {\"${2}\", \"${3}\", \"${4}\",},\n}\nfor _, tt := range tests {\n    tt := tt\n    t.Run(tt.name, func(t *testing.T){\n        actual := ${1:Function}(tt.given)\n        if actual != tt.expected {\n            t.Errorf(\"given(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n        }\n    })\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var test = {...}{...} for {t.Run(){...}}",
      "matches": {
        "tt": true
      },
      "source": "gosnippets/snippets"
    },
    "8a2d2cd6-7a42-3e0f-800d-6ed20410f3dd": {
      "content": "${1:property_name}: computed('${3:argument}', function() {\n\t${0://body...}\n}),",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "property_name: computed('...', function() {...}),",
      "matches": {
        "cpro": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8a2fc8a1-c374-375f-96ae-80bdd463728e": {
      "content": "__LINE__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__LINE__",
      "matches": {
        "line": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a4560ea-34f2-30fd-8bb0-44149381bd18": {
      "content": "${fn:escapeXml(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "escape": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a48abcc-fc0e-3731-aa0d-22e0ea2a249a": {
      "content": "import ${1:Name} from '@/components/${1:Name}.vue'\n\nexport default {\n\tcomponents: {\n\t\t${1:Name}\n\t},\n}",
      "doc": "import a component and include it in export default",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-export",
      "matches": {
        "vimport-export": true,
        "vue import export": true
      },
      "source": "javascript/vue"
    },
    "8a4d4b28-e515-3dec-9aac-e1504dd108a0": {
      "content": "| strip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a553c68-5fbb-3aad-b5e7-5b8ca3d686ef": {
      "content": "border-top-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-style": true,
        "bts": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a5987bb-bf05-39b9-afc1-818ac48ae6da": {
      "content": "<input type=\"button\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:button": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a5ddaa3-590b-332a-af9e-ca0fb00812db": {
      "content": "<?php\n\tnamespace Controllers;\n\tuse Core\\View;\n\tuse Core\\Controller;\n\tclass ${1:class_name} extends Controller\n\t{\n\t\tpublic function __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\t\tpublic function index()\n\t\t{\n\t\t\t${2:}\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_controller": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a5e3494-2f07-3cfc-96ac-8774d21e645d": {
      "content": "stopDrag();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a66f97a-ce67-3793-8b63-b86e60048b85": {
      "content": "msgid \"${1}\"\nmsgstr \"${2}\"\n${0}",
      "doc": "",
      "filetype": "po",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msg": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a6f0f46-c3a0-34aa-b3cb-65ad4edaef8d": {
      "content": "<grammar> grammar{\n\tE<${1}>\n\t\t: [${2}] ${3}\n\t\t;\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grammar": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a70ebbe-f8b7-3caf-8dfb-a8d8cfbe7c62": {
      "content": "<textarea name=\"$2\"${3: id=\"$4\"}>$5</textarea>",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8a77a1a0-d267-3e03-b32a-0eb93c025cec": {
      "content": "when {\n\tchangeset '${1:changeSet}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangeset": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a8a952b-5da0-382c-b2df-895421dc0a97": {
      "content": "place-content: ${1} ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a8ad753-3a7a-3041-8581-06c44deb73fb": {
      "content": "[${1:#:id}]: https://${2:#:url} \"${3:#:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[id]: url \"title\"",
      "matches": {
        "idurl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a8c2e5e-681a-383c-95aa-bedbdec27f0f": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:Console.WriteLine(e.Message);}\n} finally {\n    ${4}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch () {} finally {}",
      "matches": {
        "try_catch_finally": true,
        "try_cf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8a9127f1-fc2b-3ce9-9b0a-73b8d068e5aa": {
      "content": "<%= javascript_include_tag ${0::all} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jit": true
      },
      "source": "vim-snippets/snippets"
    },
    "8a97cd7c-9089-36b3-8208-a0444b9772d5": {
      "content": "{% raw %}${0}{% endraw %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      },
      "source": "vim-snippets/snippets"
    },
    "8aa44d63-c24b-397a-8add-4a6baab1f5ba": {
      "content": "class ${1:class_name}:\n\t\"\"\"${2:description}\"\"\"\n\tdef __init__(self, ${3:args}):\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clai": true
      },
      "source": "vim-snippets/snippets"
    },
    "8aa46f43-084d-3984-bfa9-271c769bcaa0": {
      "content": "echo CHtml::activePasswordField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhapf": true
      },
      "source": "vim-snippets/snippets"
    },
    "8aa49207-4574-3dc3-ab11-10e627eb6e61": {
      "content": "\\\\subsection{${1:subsection name}}%\n\\\\label{sub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsection",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "8aa991c1-98ed-3f2b-b97b-65873539cd09": {
      "content": "exception ${0:TARGET} of ${1:string}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "exception",
      "matches": {
        "exn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8ab2a25c-afb6-3843-8292-634d696f98ee": {
      "content": "def method_missing(meth, *args, &blk)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defmm": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ab5c7e4-2cd1-3180-aed1-f13050bad302": {
      "content": "protected string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps|-": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ab9190d-5832-346e-a25b-0a34d72beb3e": {
      "content": "print ${1:\"${2}\"}${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "pri": true
      },
      "source": "vim-snippets/snippets"
    },
    "8acddd5c-fa1f-3900-8959-a18200172572": {
      "content": "text-emphasis: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ade5428-5f25-3460-9861-4cd57b91cbfa": {
      "content": "for (${1:i} <- ${2:0} to ${3:obj}.length) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ae65141-5b3c-35a2-b15f-68ff1086eacc": {
      "content": "assert_no_difference '${1:Model}.${2:count}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnd": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ae6dddf-87a1-3d64-a839-1b20751d2097": {
      "content": "|> Array.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amap": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ae7cd5b-7c22-3be2-bfa1-1a93ddbf0672": {
      "content": "it '${1:spec_name}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "8aed5f5b-b393-3ee5-8eb0-0e56d4d8913c": {
      "content": "unset key",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "unset key",
      "matches": {
        "key!": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8aedf40e-8e27-38fc-afbf-51e83bc60f1c": {
      "content": "\\\\sum^{${1:n}}_{${2:i=1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\sum^{}_{}",
      "matches": {
        "sum": true
      },
      "source": "vim-snippets/snippets"
    },
    "8af21f57-90cc-3f38-8b3a-ad9e7815704b": {
      "content": "white-space: nowrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      },
      "source": "vim-snippets/snippets"
    },
    "8af5f219-bd47-3eab-9a52-fe60acffa90e": {
      "content": "_${1}_${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "_italic_",
      "matches": {
        "italic": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8afee77b-565b-3582-811d-7db873c0c054": {
      "content": "forceUpdate(${1:callback});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fup": true
      },
      "source": "snippets/javascript"
    },
    "8b0bbfcf-b457-393a-8c89-42801082788d": {
      "content": "import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React pure component class with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactPureComponent",
      "matches": {
        "rpc": true
      },
      "source": "vscode-react/snippets"
    },
    "8b0d8b38-500a-3488-b976-555f1fb6c82c": {
      "content": "<h6 class=\"${1}\">${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6.": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b1461ac-184a-3075-a4ec-1b81fb744be6": {
      "content": "process.stdout",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stdout",
      "matches": {
        "stdout": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8b16e7b3-5191-3df1-91e9-4e976d22a2a6": {
      "content": "${1:condition} ?? ${2:value-if-true} !! ${3:value-if-false};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b18cf81-7f45-3fef-b871-74d20ee69328": {
      "content": "{% break %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b1d16f9-3837-3502-9c62-fb1231ed5c6c": {
      "content": "text-transform: capitalize",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b1fff48-1465-3e30-aba1-5cd5be54ba52": {
      "content": "foreach (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forea": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b3a97aa-0108-3cc8-817f-0a0a00576ef5": {
      "content": "overflow-x scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b3d0daf-ab4e-32df-ae77-d57ec4cc1bc6": {
      "content": "case '${1:value}':\n\t${0:${VISUAL}}\n\tbreak;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "case 'value': ... break",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b3dcd3b-7f56-38eb-bc0e-5292601898e7": {
      "content": "use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\File",
      "matches": {
        "usefile": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8b41d2f1-aa83-3da4-a367-f18259610a35": {
      "content": "(${1}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=>": true
      },
      "source": "snippets/javascript"
    },
    "8b442ebc-5dff-3748-abaa-6591bb99c17a": {
      "content": "_.includes(${collection}, ${value}, ${fromIndex})",
      "doc": "_.includes([1, 2, 3], 1);\n// => true\n\n_.includes([1, 2, 3], 1, 2);\n// => false\n\n_.includes({ 'a': 1, 'b': 2 }, 1);\n// => true\n\n_.includes('abcd', 'bc');\n// => true\n\nChecks if `value` is in `collection`. If `collection` is a string, it's\nchecked for a substring of `value`, otherwise\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nis used for equality comparisons. If `fromIndex` is negative, it's used as\nthe offset from the end of `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-includes",
      "matches": {
        "lodash includes": true
      },
      "source": "javascript/lodash"
    },
    "8b44df43-432a-3d8c-8e11-09e14b4d455f": {
      "content": "text-transform: ${1:capitalize/uppercase/lowercase};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-transform: capitalize:upper:lower (text)",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8b497feb-06b8-3a72-b689-6278a076f8f6": {
      "content": "import std.stdio, std.string, std.array;\nimport std.traits, std.conv, std.algorithm;\nimport std.math, std.regex;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "theusual": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b54f14e-f2ea-3f7a-8331-5bd23db54667": {
      "content": "font-stretch: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b5b345f-5227-3e3b-87c6-f690fae4a096": {
      "content": "\\\\frac{d {$1}}{d {$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "derivative",
      "matches": {
        "dv": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b65ee27-bae6-317d-aff1-ba538b8b10f5": {
      "content": "_.eq(${value}, ${other})",
      "doc": "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.eq(object, object);\n// => true\n\n_.eq(object, other);\n// => false\n\n_.eq('a', 'a');\n// => true\n\n_.eq('a', Object('a'));\n// => false\n\n_.eq(NaN, NaN);\n// => true\n\nPerforms a\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\ncomparison between two values to determine if they are equivalent.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-eq",
      "matches": {
        "lodash eq": true
      },
      "source": "javascript/lodash"
    },
    "8b6a3d6e-2203-3202-a52f-a09ab03bfe06": {
      "content": "spotLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:x}, ${5:y}, ${6:z}, ${7:nx}, ${8:ny}, ${9:nz}, ${10:angle}, ${0:concentration});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spotLight": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b6e3b9d-054f-3740-807f-81f69b34f0af": {
      "content": "switch ${1:n}\n\tcase ${2:0}\n\t\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b743374-5cb0-3a3d-8368-d0f508de25e6": {
      "content": "grid-auto-flow: ${1:row} ${2:dense};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b77be3a-77e8-3428-95af-49f2cff0f253": {
      "content": "use Symfony\\Component\\HttpFoundation\\Request;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Request",
      "matches": {
        "usereauest": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8b827525-49a3-3272-89fa-09b4e26d6dcf": {
      "content": "${1:obj}.fadeTo 'slow/400/fast', ${2:0.5}, ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadetoc": true
      },
      "source": "snippets/coffee"
    },
    "8b871074-eea7-3cb3-a4c9-f2967575e191": {
      "content": "cy.go('${1:direction}');",
      "doc": "Navigate back or forward to the previous or next URL in the browser’s history.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-go",
      "matches": {
        "cypress go": true
      },
      "source": "javascript/cypress"
    },
    "8b91692d-f89f-3f32-8350-b6a3321d88ee": {
      "content": "font-emphasize-position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b93e1fb-5cf6-3567-927b-678138d66901": {
      "content": "margin: ${1:0} ${2:0} ${3:0} ${4:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b97af08-3331-360f-b6d1-d0615044322b": {
      "content": "display: -moz-inline-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      },
      "source": "vim-snippets/snippets"
    },
    "8b9dbe59-53e1-3654-9e08-013c66b15c7a": {
      "content": ".. toctree::\n\t:maxdepth: 2\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toc:": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ba733dc-b780-3973-a924-aa3dba5a52aa": {
      "content": "text-align: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ba7f9a2-caa0-3c5b-a1b3-20eebc683fc6": {
      "content": "overflow-style: scrollbar;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bafd049-c8b0-38f0-8ac4-65768fee5a47": {
      "content": "for ${1} = ${2}, ${3} = ${4}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "nested for loop",
      "matches": {
        "fornest": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bb7b405-0bec-3e00-91e2-9ac167108c25": {
      "content": "(println ${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bb95126-cd32-3b93-a963-b96c6a8fbc4e": {
      "content": "function ${1:fname}(${2:...})\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bbd31c9-1486-3665-8cf4-523135a6e0ab": {
      "content": "font-weight: bolder",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bc011c4-b86c-3519-a3a6-9a60c21967d5": {
      "content": "if ${1:condition} then\n\t${2:-- if condition}\nelse\n\t${0:-- else}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bcc00aa-eaa7-3d07-9168-8f8db0703dc9": {
      "content": "for [${1:str} in '${2:#:string list}']",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "for [string in \"A B C...\"]",
      "matches": {
        "fors": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8bdae91c-a4c5-3697-b881-0ad64d30cfb7": {
      "content": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addaarg": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bdb8b38-2428-3db2-9482-762184f0d7cd": {
      "content": "padding-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bdc667b-946c-3619-a83f-92d12a8c8b3f": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rdmd": true
      },
      "source": "vim-snippets/snippets"
    },
    "8be33f92-c51b-3209-a476-e32a9ac54ebc": {
      "content": "detach(${0:})",
      "doc": "Detach",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "det",
      "matches": {
        "detach": true
      },
      "source": "vscode-R/snippets"
    },
    "8be9222c-4978-377f-8b25-a43f77ba5276": {
      "content": "<ng-template [ngTemplateOutlet]=\"${1:outlet}\" [ngOutletContext]=\"${2:context}\"></ng-template>",
      "doc": "Angular ng-template",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-template",
      "matches": {
        "a-ng-template": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "8bed9630-1da2-34c4-9fd5-259890625087": {
      "content": "public",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bf60a44-efbf-35cf-9895-5a926db9bb1c": {
      "content": "overflow-style: move",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      },
      "source": "vim-snippets/snippets"
    },
    "8bfdb011-de9f-383d-b965-9bf606146ad6": {
      "content": "strftime('${1:%Y-%m-%d %H:%M:%S %z}')${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strf": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c07aca9-ebcb-3a9b-bbe0-e6aa7046728d": {
      "content": "text-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c088ba4-bee2-39b5-8a20-f4db1c48645d": {
      "content": "for ${1:i} = ${2:1} to ${3:10} do\n\t${4:(* BODY *)}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8c0f2edb-319b-3d2b-a8ea-0c1be811c21b": {
      "content": "if ${1:#:condition}\n  ${2:TARGET}\nelse\n  ${3:#:body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8c1171cd-3cfb-3de8-96e3-767a36848b01": {
      "content": "case ${1:#:val}:\n    ${0:TARGET}\n    break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8c1a3491-6d98-3b2c-b1ba-fd92e776ab1b": {
      "content": "{% import \"${1}\" as ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig import",
      "matches": {
        "import": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c21b900-298b-3860-9c6e-579f18c7830a": {
      "content": "assert_rjs :${1:replace}, ${2:\"${3:dom id}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_rjs",
      "matches": {
        "asrj": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8c2308b3-2b43-3b76-9229-c2a1d0e245eb": {
      "content": "{{#${1:value}}}\n${0:${VISUAL}}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{#value}} ... {{/value}}",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c244d53-52e8-3721-bf91-98ad2ca3f463": {
      "content": "border-right-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c28cb48-3c84-3aa8-8aee-da31bed48011": {
      "content": "text-emphasis accent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c319abe-285b-3a23-bb58-c1ec489e0afd": {
      "content": "<pre>{{${1:model} | async | json}}</pre>$0",
      "doc": "Angular pre debug | async | json",
      "filetype": "html",
      "grammar": "lsp",
      "label": "pre w/ async json",
      "matches": {
        "a-preja": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "8c32afa1-888c-3c2d-97bc-37908a792864": {
      "content": "&#x2303;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctrl": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c349fd9-8b4a-36cd-8fa3-a171fa4c5981": {
      "content": "unless ${1:condition}, do: ${2}, else: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do: .. else:",
      "matches": {
        "unlesse:": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c387ef5-3ec0-3998-a8fe-fb249b950f5a": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8c4328a7-5ff7-3949-8bd8-025f8754091f": {
      "content": "${1:type}, parameter :: $2 = ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c492b90-3802-3e04-b3ed-8add55b45505": {
      "content": "${1:FIELDNAME} = forms.ModelMultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelMultipleChoiceField",
      "matches": {
        "fmomuchoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8c4d730d-ef75-32ce-b078-7c120e58a191": {
      "content": "box-sizing border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c565417-ea82-3fb0-829b-c86c73d1865f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with CSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-css",
      "matches": {
        "vue base css": true
      },
      "source": "javascript/vue"
    },
    "8c587862-a5db-34c1-a903-a7adcd3f4f1b": {
      "content": "const ${1:name} = computed(() => {\n\treturn ${2}\n})",
      "doc": "Set computed property - Vue Composition API",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3computed",
      "matches": {
        "vue v3 computed": true
      },
      "source": "javascript/vue"
    },
    "8c5a38ca-e2ef-384b-8d69-befe19b20376": {
      "content": "${1:obj}.delegate '${2:selector expression}', '${3:event name}', (${4:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dele": true
      },
      "source": "snippets/coffee"
    },
    "8c5a4694-c94e-3342-8631-ef610735822e": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% end %>",
      "matches": {
        "end": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8c5b1c15-c17b-3db2-a594-53d7a3159425": {
      "content": "header (\"HTTP/1.1 301 Moved Permanently\");\nheader (\"Location: \".URL);\nexit();",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "http_redirect": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c5d870c-fcbc-318f-b9c5-b33f95347e0d": {
      "content": "angular.forEach ${1:iterateOver}, (value, key) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngfor": true
      },
      "source": "snippets/coffee"
    },
    "8c61c041-3514-39ac-bef5-44c963800905": {
      "content": "? {\n\t\"${1}\"\t=> ${0}\n  }",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c61c41b-f53b-39a2-bfa4-3528f4f07c82": {
      "content": "display: -moz-inline-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c672e0a-2063-3763-bc8c-b4c5f8994ac2": {
      "content": "expect(${1:target}).wasNotCalled()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was not called (coffee)",
      "matches": {
        "notsc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8c6b1aac-d1e6-39b8-a281-ff2bc6c5a533": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c7b1295-f909-31cd-bda7-5cda0c478a9e": {
      "content": "padding: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c7c14a9-45f6-3bfa-a52b-285ed29df298": {
      "content": "each_line { |${1:line}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eal": true
      },
      "source": "vim-snippets/snippets"
    },
    "8c898b3d-852d-3476-bf7c-c6dd5eb90324": {
      "content": "${1:condition} ? ${2:expression} : ${3:expression};",
      "doc": "ternary operator",
      "filetype": "base",
      "grammar": "lsp",
      "label": "ternary-operator",
      "matches": {
        "base ternary operator": true
      },
      "source": "javascript/base"
    },
    "8c8a5ee8-d25f-3a14-9caa-7c453034bf4f": {
      "content": "${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "animate": true
      },
      "source": "snippets/javascript"
    },
    "8c8a78fa-6cdf-39a7-a954-68d93756d831": {
      "content": "[${1}](${2}){${3}};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ca8909a-25b9-3b53-aaaf-a15d655f7637": {
      "content": "\\begin{matrix}\n\t${1:TARGET}\n\\end{matrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{matrix} \\matrix": true,
        "matrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8cac95f0-17ff-3192-9b27-3b4ac307816b": {
      "content": "${1:ptr} = (${2:type}*) malloc(sizeof($2));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8cb210b8-9f63-3d5a-bd16-91506e211dfb": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\return ${3:Return parameter description}\n */\n${4:void} ${5:function_name}()\n{\n\t${6}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun0": true
      },
      "source": "vim-snippets/snippets"
    },
    "8cb77db0-eb8f-3e81-80f2-08cfc300f1ee": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React component class with PropTypes with connected redux and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassCompomentReduxPropTypes",
      "matches": {
        "rcreduxp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8cba1c5e-c978-33c5-aa3f-75eaf02846f9": {
      "content": "border-bottom-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "8cbbf08d-6d89-30de-8d71-0946a4c77263": {
      "content": "text-transform: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "8cbd578a-5f98-3f4d-bc27-a84e3947198c": {
      "content": "\"${1:key}\": ${0:value},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Number",
      "matches": {
        "n": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8cc343a7-c7ac-34c8-8b52-58950281c41c": {
      "content": "@interface ${1} : ${2:NSObject}\n{\n}\n@end\n@implementation ${1}\n- (id)init\n{\n\tif((self = [super init]))\n\t{${0}\n\t}\n\treturn self;\n}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Class",
      "matches": {
        "cl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8cd8e4a3-d1c6-34b1-a2d5-fa1b889147fe": {
      "content": "formControlName=\"${1:control}\"",
      "doc": "Angular formControlName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormControlName",
      "matches": {
        "a-formControlName": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "8cd96604-2839-33cf-bb47-d155a316b26a": {
      "content": "echo CHtml::activeInputField('${1:type}', ${2:model}, '${3:attribute}',array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaif": true
      },
      "source": "vim-snippets/snippets"
    },
    "8cdd71ac-86e0-31f2-a8df-9ecf433db799": {
      "content": "<pre>\n\t{{ dump(${0:TARGET}) }}\n</pre>",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "<pre> {{ dump(...) }} </pre>",
      "matches": {
        "dump": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8cdee9cf-b403-389b-8381-8210c00c048b": {
      "content": "text-shadow: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ce27cc0-b50a-3952-bf46-582cba869a13": {
      "content": "curvePoint(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curvePoint": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ce80604-1738-3f20-9222-a80fd668b521": {
      "content": "${1:obj}.find('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      },
      "source": "snippets/javascript"
    },
    "8cf7688b-c656-38e2-b84c-4f10f7441a06": {
      "content": "${1:obj}.removeProp('${2:property name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remp": true
      },
      "source": "snippets/coffee"
    },
    "8cfc907b-5f97-3b7a-8513-ee2be2e4b82d": {
      "content": "import * as ${1:NAME} from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import * as NAME from \"...\";",
      "matches": {
        "import-all": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d0553e5-aeda-38d6-ae0f-cd086b367170": {
      "content": "${1:FIELDNAME} = models.DecimalField(max_digits=${2:10}, decimal_places=${3:2})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DecimalField",
      "matches": {
        "mdecimal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8d07afc4-67cd-3c21-b755-437e9f3a0998": {
      "content": "results.report('${1:name}:') { TESTS.times { ${0} } }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d0a6343-f8ec-3012-8b50-e457b9e3db58": {
      "content": "content: counters(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d0b8966-3a59-3e4b-a75e-6a59c00c94a8": {
      "content": "font-style: italic",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d159bbf-c1c5-3cc3-a1d3-27dced710787": {
      "content": "if (${1})\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d233322-2425-3a34-956a-ee1c8019d333": {
      "content": "expect(() => {\n\t$0\n}).toThrowError($1);",
      "doc": "expects that the method will throw an error",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerror",
      "matches": {
        "jest expect tothrowerror": true,
        "tte": true
      },
      "source": "javascript/jest"
    },
    "8d2663b4-6ba3-3be1-9ab3-2f8eb9761f4f": {
      "content": "\\$_POST['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "post": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d26f398-bb93-3c03-92e3-e982a5520d30": {
      "content": "text-justify tibetan",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d27dbf2-1d8b-365b-96f7-b6d1384034d9": {
      "content": "const ${1:name} = (${2:params}) => {\n\t${3}\n}\n",
      "doc": "Creates a named function in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "namedFunction",
      "matches": {
        "nfn": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8d2a6af3-a988-3b55-8726-d22db097bccc": {
      "content": "use:action={${1:parameters}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use-parameters",
      "matches": {
        "svelte use parameters": true,
        "svupar": true
      },
      "source": "javascript/svelte"
    },
    "8d2af0c7-4223-3c17-9a30-42648639d1e9": {
      "content": "post {\n\tcleanup {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d3b4848-3e36-30bb-b1b3-47f0457bca7c": {
      "content": "grid-column-start: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d42a0cf-c312-3645-b4f7-efbb5eba76d3": {
      "content": "co________:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "co________:",
      "matches": {
        "co_": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d4a95af-ef8f-34c1-a717-7d4c44f21503": {
      "content": "try:\n  ${1:pass}\nfinally:\n  ${2:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "try: ... finally: ...",
      "matches": {
        "tryfinally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d4b0184-190b-313a-8993-58390ca74f97": {
      "content": "@function ${1:name}(${2:args}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d4bb475-307a-34d3-b48c-03b78c76f401": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxt": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d60a30e-2fe1-3f2d-8153-6766de04623f": {
      "content": "@media ${1:print}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@m": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d63ba48-b955-3abb-8e46-2ca63fdac9d9": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit('${1:updateValue}', ${2:payload});\n\t}\n}",
      "doc": "vuex action",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-action",
      "matches": {
        "vaction": true,
        "vuex action": true
      },
      "source": "javascript/vuex"
    },
    "8d64382e-0ba0-369c-9ba2-022f1fb48f5d": {
      "content": "border-collapse collapse",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d6516e8-7e41-3419-82cc-fed00adfe01e": {
      "content": "#!/usr/bin/env julia",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d6cc264-9458-3e9d-9a84-b8be3757e017": {
      "content": "print_r(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d6eaf02-8223-3a8d-adbe-b5bfa30cab3c": {
      "content": "v-cloak",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-cloak",
      "matches": {
        "vcloak": true,
        "vue v-cloak": true
      },
      "source": "javascript/vue"
    },
    "8d705175-38bb-3dde-b122-39c8868b2970": {
      "content": "overflow-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d742ee1-556f-3279-a442-427f9f35ccbd": {
      "content": "padding-bottom: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-bottom": true,
        "pb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8d88f7a9-b06a-36c4-98f3-732492cf0bd0": {
      "content": "throw new $1Exception(\"$2\");",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "throw (thr)",
      "matches": {
        "thr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8d8d1f9e-166d-397b-8738-2710cea816dc": {
      "content": "border-right-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d8d582f-ab72-3b5e-b620-bc39646b2dda": {
      "content": "void keyTyped(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyTyped": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d94d5cb-d074-3ae1-a420-a889bd3d50d3": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d95c476-5a72-3207-87c7-195539918efa": {
      "content": "font-family: ${0:Georgia,'Times New Roman'},serif;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "8d969fa7-8dd2-388e-8f01-b7bcbf7446e2": {
      "content": "<iframe id=\"${1}\" src=\"${2}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe#": true
      },
      "source": "vim-snippets/snippets"
    },
    "8daa4d8b-43b2-3b6d-91b1-1027a797199e": {
      "content": "import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nexport class PreloadSelectedModulesList implements PreloadingStrategy {\n\tpreload(route: Route, load: Function): Observable<any> {\n\t\treturn route.data && route.data['${1:preload}'] ? load() : of(null);\n\t}\n}\n$0",
      "doc": "Angular opt-in preload strategy",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Opt-In Preload Strategy",
      "matches": {
        "a-preload-opt-in-strategy": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "8dab0ea3-2c68-388b-ae6f-b24e78f2e62b": {
      "content": "<xsl:if test=\"${1:test}\">${2}\n</xsl:if>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "8db91032-f5c6-311f-a072-da37fa08eae0": {
      "content": "printf(\"${1:%s}\\n\", ${2})${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "printf",
      "matches": {
        "printf": true
      },
      "source": "vim-snippets/snippets"
    },
    "8dc71895-5549-3bfa-8621-7807c2d23801": {
      "content": "dynamic_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dca": true
      },
      "source": "vim-snippets/snippets"
    },
    "8dc8dd71-643c-3b47-9cec-05f721746749": {
      "content": "constrain(${1:value}, ${2:min}, ${0:max});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "constrain": true
      },
      "source": "vim-snippets/snippets"
    },
    "8dcfbffe-330e-307b-86d1-364cc0a818ff": {
      "content": "@import '${0}'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "8de49544-27ee-3722-919f-421f14e6b4df": {
      "content": ".. error:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "error",
      "matches": {
        "error": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8de52764-cab4-3220-b312-74e18e15e396": {
      "content": "@before-appear=\"$1\"$0",
      "doc": "@before-appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-appear",
      "matches": {
        "beforeappearevent": true,
        "vue before-appear": true
      },
      "source": "javascript/vue"
    },
    "8de5e088-a591-32f9-a4dd-cfa9b04f0b93": {
      "content": "<input type=\"date\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:date": true
      },
      "source": "vim-snippets/snippets"
    },
    "8deeca6e-b38f-39d0-9491-6c48b172f8eb": {
      "content": "grid-auto-flow dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "8dfb5ad7-6cf6-399c-9574-8766cec0158d": {
      "content": "{% $1 %}$2",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8e00c845-1e98-3c87-8970-062a65cbc22a": {
      "content": "beforeCreate () {\n\t${0};\n},",
      "doc": "beforeCreate lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforecreate",
      "matches": {
        "vbeforecreate": true,
        "vue lifecycle beforecreate": true
      },
      "source": "javascript/vue"
    },
    "8e045d07-d6aa-39ad-9471-a3228399d55d": {
      "content": "border-fit: overwrite",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e0d80ab-a23e-30b9-9dfb-f1f646a95555": {
      "content": "${0:root} = exports ? this",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "snippets/coffee"
    },
    "8e0db9d5-2078-3371-a90f-5c07ef3c8f1c": {
      "content": "Result<${1:&str}, ${2:()}>",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Result<T, E>",
      "matches": {
        "res": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e179f03-fdbf-3c18-bc69-749276a9c727": {
      "content": "clear: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e1aba92-dbd3-3efb-85d3-846a184da6a9": {
      "content": "[${1:id}]: http://${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e2281a1-795c-3ec6-a535-02d6a44f238c": {
      "content": "%table\n\t%tr\n\t\t%th\n\t\t\t${1:headers}\n\t%tr\n\t\t%td\n\t\t\t${0:headers}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e2bb58e-53bb-3ef1-9532-8fd41beea151": {
      "content": "if ${1:true} then\n\t${0:TARGET}\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8e3933ba-8a25-3ce6-9462-0dc957733994": {
      "content": "wont_be ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wb": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e4514be-9b27-3cb4-8e69-b62ed174436a": {
      "content": "${1:FIELDNAME} = forms.TimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TimeField",
      "matches": {
        "ftime": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8e50eb3a-24a5-33f3-86a0-9ee5008ea802": {
      "content": "object ${1:name}${2:(arg)}${3: extends }${4: with} ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e52e98f-a826-3aa8-b320-fb2235459a7e": {
      "content": "std::cout << ${1} << std::endl;",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cout": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e53a16c-4804-378b-918b-9fac582f0d4b": {
      "content": "border-top-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-style: style (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8e567d70-f42e-3254-bbca-c2d07bfcd799": {
      "content": "System.IO",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.i": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8e580ef6-9714-3a66-b3a7-1d53fe78624a": {
      "content": "<nav id=\"${1}\">\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav#": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e5aac9a-808e-3dd8-b26e-ef503cc64bf7": {
      "content": "user { \"${1:user}\":\n\tensure      => present,\n\tcomment     => \"${2:$1}\",\n\tmanagehome  => true,\n\thome        => \"${0:/home/$1}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "user": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e5b735c-3aba-3903-bbd2-9521790860a3": {
      "content": "std::map<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e65b19d-2a0a-328e-a8d8-94ff46338c0d": {
      "content": "border-bottom none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e662140-8f8d-30ea-9ef1-31ec50dcf8b7": {
      "content": "margin: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8e6744bb-68e5-3a82-9d0c-eccbb7401ef3": {
      "content": "page-break-inside: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e757db3-286a-3cef-b9ab-78a3a7f7a72d": {
      "content": "${1:name}.reduceRight[${0:T}] {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redr": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e79dd95-a3d3-3eb6-9d00-c34a2018137f": {
      "content": "loadMovie(${1:url}, ${2:target}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8e7ecc1e-4271-3aee-a709-769662f31880": {
      "content": "file { \"${1:filename}\":\n\tensure  => ${2:present},\n\towner   => \"${3:root}\",\n\tgroup   => \"${4:root}\",\n\tmode    => \"${5:0644}\",\n\tsource  => \"puppet:///modules/${6:module}/${7:source}\",\n\tcontent => template(\"${8:module}/${9:template}\"),\n\talias   => \"${10:alias}\",\n\trequire => [ Package[\"${11:package}\"], File[\"${12:file}\"], ],\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e7f5934-f988-37dd-9208-f9f2f850f156": {
      "content": "| join: '${1:, }'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e819e5e-fec8-37ba-8c6a-d5e07a155d82": {
      "content": "class ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8e85eab7-d17b-3245-8e15-923a2ff75c4e": {
      "content": "{{- if .Values.$1.affinity }}\n  affinity:\n{{ toYaml .Values.${1:value_key}.affinity | indent 8 }}\n{{- end }}\n  terminationGracePeriodSeconds: 60\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "affinity_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e874407-a1b8-31e8-bab5-04febf462474": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n\t${3}\n} finally {\n\t${4}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcf": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e878516-2a74-369b-99f3-d8ea5234f5bc": {
      "content": "@click=\"${1:handler}(${2:arg}, $event)\"",
      "doc": "v-on click handler with arguments",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-on Shortcut Directive",
      "matches": {
        "von": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "8e90afbb-4ec7-3239-87e4-c9ec33909fd3": {
      "content": "No Operation",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "No Operation",
      "matches": {
        "nop": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8e938882-873c-3cb2-a037-5a295e6152ad": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\" class=\"${3}>\n\t${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select.": true
      },
      "source": "vim-snippets/snippets"
    },
    "8e9d118f-9239-35ed-8f4c-d7597ffd53df": {
      "content": "const (\n\t${1:NAME} ${2:Type} = ${3:value}\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... )",
      "matches": {
        "cons": true
      },
      "source": "gosnippets/snippets"
    },
    "8e9e54f3-26f6-3e6f-815b-c68b13b8de80": {
      "content": "{% set ${1} = ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig set",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ea95f8a-b955-35c4-a574-c3b29eb6cc94": {
      "content": "@font-face {\n\tfont-family: ${1};\n\tsrc: url(${2});\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      },
      "source": "vim-snippets/snippets"
    },
    "8eaad0af-052c-36e5-bd60-ee501c53407b": {
      "content": "place-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "8eafc5d9-ae7a-34ed-900d-1b7260c6104f": {
      "content": "{% ${1} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/snippets"
    },
    "8eafed3e-d0bf-34b1-9155-3bd69e3899b7": {
      "content": "t.binary :${1:title}${2:, limit: ${3:2}.megabytes}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create binary column",
      "matches": {
        "tcbi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8eb02a2a-ebae-3ba7-9a4f-e00e846b0a6c": {
      "content": "console.log ${0}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8eb531df-4e37-3ebf-a2ed-42753acac6eb": {
      "content": "${1:deferred}.notifyWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotifyw": true
      },
      "source": "snippets/javascript"
    },
    "8eb75051-2441-3a91-8f9a-ad7a266d4b9b": {
      "content": "align-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "8eb91e79-d1db-364e-80da-1193310c0904": {
      "content": "${1:funname} <- \t\t\t# ${2:}\n\tfunction\n(\n \t${3:}\n)\n{\n  ${4:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ec7db40-0580-3af9-81b5-1ab07ff5f38c": {
      "content": "public bool ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+&": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ed362e3-d67f-3197-98ce-fd43016575f4": {
      "content": "program ${1:program_name} ();\n\t${0}\nendprogram : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prog": true
      },
      "source": "vim-snippets/snippets"
    },
    "8edd2810-bc4c-3f9b-a910-9c9e18c8d74b": {
      "content": "Wait Until Page Contains    ${1:${text}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Contains",
      "matches": {
        "wupc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8ee22259-d055-3c27-9ba3-4f3c27378849": {
      "content": "rel=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rel": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ee263fd-1e93-38a1-91ca-f4b4f7a5eb40": {
      "content": "with open(${1:#:file}, '${2:r}') as ${3:f}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fileidiom": true,
        "with_open": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8eecdc6c-f39d-301b-a920-49f7bd8db31f": {
      "content": "(${1:arguments}) => ${2:statement}",
      "doc": "arrow function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "arrow-function-es6-",
      "matches": {
        "base function arrow": true
      },
      "source": "javascript/base"
    },
    "8ef2a1a3-6d5f-3e42-b8c0-7aa8fa12642c": {
      "content": "justify-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f04a70f-7c43-30c9-9ae2-fa625a43e990": {
      "content": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpr": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f10195f-0ecc-319b-8854-5867d0da5d5f": {
      "content": "beforeEach(() => {\n\t$0\n});",
      "doc": "beforeEach function is called once before each spec",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-beforeeach",
      "matches": {
        "be": true,
        "jest beforeeach": true
      },
      "source": "javascript/jest"
    },
    "8f1e0566-ad3c-3f29-a3f4-96e67438989b": {
      "content": "default :\n\t${1:TARGET}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f1f0223-f847-3a7d-b859-d15bac7eb3f1": {
      "content": "place-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f205b75-e6c8-3419-ac5e-54ece0ca0239": {
      "content": "align-self baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f291d47-c9bc-398b-9e8c-7b2415bffc09": {
      "content": "expect($1).toBeGreaterThanOrEqual($0);",
      "doc": "expects the argument is greater than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobegreaterthanorequal",
      "matches": {
        "jest expect tobegreaterthanorequal": true,
        "tbgte": true
      },
      "source": "javascript/jest"
    },
    "8f2a480b-6315-37f5-853d-258c7ef44731": {
      "content": "= render :partial => \"${1:item}\", :collection => ${0:@$1s}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f3235dc-a1e4-3126-ba1a-87701c9e2c25": {
      "content": "center:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8f33fd46-49ac-3faf-b8fd-846636e20300": {
      "content": "protected body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected body",
      "matches": {
        "protected_body": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f43fb6e-c95c-3977-b31e-f90b4f4c0d31": {
      "content": "const { $1 } = this.props",
      "doc": "Creates and assigns a local variable using props destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructProps",
      "matches": {
        "cp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "8f4cb88d-c6c0-3b6c-bb3c-0ac9f89ea8f8": {
      "content": ".. code:: ${1:type}\n\t${0:write some code}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cod:": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f4ccf0e-8d99-3f61-8295-b3b587a3a983": {
      "content": "import pdb; pdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import pdb..",
      "matches": {
        "pdb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f57f6e4-d990-38a1-bf34-bce876ec3ec1": {
      "content": "while (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f6127ba-c084-3807-962c-7811c3bdc06f": {
      "content": "@synthesize ${1:#:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "syn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f629d76-234d-364d-b063-83470b06a043": {
      "content": "private ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create private field",
      "matches": {
        "tprfi": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f680f21-73cc-3226-9c85-5022adb5d2b6": {
      "content": "<optgroup label=\"${1}\">\n${2:TARGET}\n<optgroup>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optgroup": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8f724dce-d329-3b6c-9d50-44247abeca3f": {
      "content": "padding ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f7d0c3f-7db0-3c29-9c0b-1964c21ca753": {
      "content": "${1:FIELDNAME} = models.XMLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "XMLField",
      "matches": {
        "mxml": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "8f842179-89bf-3b43-b57d-abe9d299b39d": {
      "content": "<label for=\"${2:$1}\">${1}</label>\n<input type=\"${3:text/submit/hidden/button}\" name=\"${4:$2}\" id=\"${5:$2}\" value=\"${6}\" />",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "8f8bd4a4-e1f8-3029-98a6-91447cbdad2f": {
      "content": "(match ${1}\n\t[(${2}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fa2e924-888a-3acc-b393-31620e7f281d": {
      "content": "empty-cells hide",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fa527ef-fcf5-3b05-b469-de2ebfa89374": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      },
      "source": "snippets/javascript"
    },
    "8faace67-2978-320c-96ce-459cb3b503a7": {
      "content": "def test_${1:case_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deft": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fabaa5d-cd8b-371b-9c1d-3c755e83c431": {
      "content": "",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fb1d27a-d17a-390b-9682-32817490b78d": {
      "content": "margin-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fb893cd-26f0-37f9-bdc0-7c974c13040e": {
      "content": "function ${1:#:function_name}(${2:#:argument})\n\t${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "function name(args)...end",
      "matches": {
        "func": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "8fbc1396-2ab2-33a4-980b-615f83b56522": {
      "content": "_.stubString()",
      "doc": "_.times(2, _.stubString);\n// => ['', '']\n\nThis method returns an empty string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubstring",
      "matches": {
        "lodash stubstring": true
      },
      "source": "javascript/lodash"
    },
    "8fbfafbf-8979-3686-8bdb-9ac85f22c29f": {
      "content": "<% require IEx; IEx.pry %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fbfc60c-d82a-39ba-b57c-9077347f5d27": {
      "content": "<video\nsrc={${1:clip}}\nbind:${2:duration}\nbind:${3:buffered}\nbind:${4:seekable}\nbind:${5:played}\nbind:${6:currentTime}\nbind:${7:paused}\nbind:${8:volume}\n></video>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-video",
      "matches": {
        "svbind-video": true,
        "svelte bind video": true
      },
      "source": "javascript/svelte"
    },
    "8fc136b9-d6b9-35fe-9776-2b96307286b7": {
      "content": "enum ${1:name} {\n\t${2:item1}\n\t${3:item2}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fc21b21-b5e2-3a45-8cc6-bf89a1cfbcfd": {
      "content": "PropTypes.any,",
      "doc": "Any prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-any",
      "matches": {
        "prop-types any": true,
        "ptany": true
      },
      "source": "javascript/prop-types"
    },
    "8fcbf8cb-dd12-331a-9aae-763d16db54d2": {
      "content": "{% ${1:tag_name} %}\n${0}\n{% end$1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      },
      "source": "vim-snippets/snippets"
    },
    "8fd0b374-3241-3540-b219-99c44d68d31b": {
      "content": "program ${1:main}\n\t${0}\nend program $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prog": true
      },
      "source": "vim-snippets/snippets"
    },
    "8ff319fd-e4cd-38a6-b48d-04beb49919bf": {
      "content": "${1:FIELDNAME} = models.NullBooleanField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nullbool": true
      },
      "source": "vim-snippets/snippets"
    },
    "90000bba-ea95-3a74-8048-136b28cea7b1": {
      "content": "<dl>${1:TARGET}</dl>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9000d0d5-a4a3-3a31-b7c4-c333571d993d": {
      "content": "text-height font-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "900720c1-f820-3357-b7f9-3086993c6677": {
      "content": "border-bottom-left-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9007e1b4-7864-3f5b-be92-0e632c4e9d03": {
      "content": "::after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      },
      "source": "vim-snippets/snippets"
    },
    "900e87c2-d91d-336a-942a-a93deae4c044": {
      "content": "justify-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "900f5230-6f96-321e-b0c6-eb4cd5e49432": {
      "content": "${1}.map((${2:item}) => {\n\t${0}\n});",
      "doc": "map",
      "filetype": "base",
      "grammar": "lsp",
      "label": "map",
      "matches": {
        "base map": true
      },
      "source": "javascript/base"
    },
    "9015716d-9585-3fcb-8598-e72b21e2efab": {
      "content": "accepts_nested_attributes_for :${1:association_name}${2:${3:, allow_destroy: true}${4:, reject_if: proc \\{ |obj| ${5:obj.blank?} \\}}}\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "accepts_nested_attributes_for",
      "matches": {
        "anaf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "901f348a-c920-3a15-96d0-354012bc7540": {
      "content": "border-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      },
      "source": "vim-snippets/snippets"
    },
    "902af0c8-9435-39ab-8206-dc75526c76bf": {
      "content": "align-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "903080f1-4443-350c-91a1-a248bd323d84": {
      "content": "loop {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "loop {}",
      "matches": {
        "loop": true
      },
      "source": "vim-snippets/snippets"
    },
    "903c566c-8837-39c6-99a6-fd48cf49c91b": {
      "content": "<Link to=\"${1:/blog}\" activeStyle={{ ${2:color}: \"${3:red}\" }} >Text</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-activestyle",
      "matches": {
        "gatsby link activestyle": true
      },
      "source": "javascript/gatsby"
    },
    "90433fac-7b23-3d6d-aecd-ed25a537c420": {
      "content": "data.frame(${1:}, header = TRUE)",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      },
      "source": "vim-snippets/snippets"
    },
    "90499ccb-104a-305c-8a34-89f28d165705": {
      "content": "curve(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${0:y4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curve": true
      },
      "source": "vim-snippets/snippets"
    },
    "904cd7cc-07c1-3b91-b279-5814bbdc521c": {
      "content": "componentWillUnmount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      },
      "source": "snippets/javascript"
    },
    "905109c7-7926-381e-9cc4-a79c96d502a2": {
      "content": "unless ARGV.${1}\n\tabort \"Usage: #{$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usau": true
      },
      "source": "vim-snippets/snippets"
    },
    "905344c6-cf8f-32aa-a860-fb6fb1833d75": {
      "content": "<embed src=\"${1}\" type=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "embed": true
      },
      "source": "vim-snippets/snippets"
    },
    "90573ca5-7833-35ac-a65a-865aa3a6ee7e": {
      "content": "unless ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "90579b9a-04a2-341e-9a09-91b15eee1896": {
      "content": "saveFrame(\"${1:filename-####}${0:.ext}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveFrame": true
      },
      "source": "vim-snippets/snippets"
    },
    "9064a812-85d3-335e-b732-8756b7e3e3cb": {
      "content": "${1:obj}.focusIn (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusin": true
      },
      "source": "snippets/coffee"
    },
    "906903e3-133f-310f-a92c-7ccf13fcae59": {
      "content": "\\${${1:val}}=    Evaluate    ${2:${x} - 10}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Evaluate",
      "matches": {
        "eval": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "906b892e-8f4a-385e-9e68-6dd63238295e": {
      "content": "clear: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9074a8ef-f1ca-3714-a8a0-bed14adfda64": {
      "content": "${1:class_name}.prototype.${2:method_name} = function(${3}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proto": true
      },
      "source": "snippets/javascript"
    },
    "90813b9c-79b1-3a85-b68e-a7a665eaf498": {
      "content": "import \"${1:import file}\"",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "90871235-b06b-35df-9ba9-008060f67fd3": {
      "content": "border-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "90885cb4-468f-3fca-97d5-44f04dd1b224": {
      "content": "jasmine.objectContaining({\n\t${VISUAL}$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "object containing (js)",
      "matches": {
        "objc": true
      },
      "source": "vim-snippets/snippets"
    },
    "908a8846-589b-3fa3-b1f7-655137d15a59": {
      "content": "{% blockquote ${1:author}, ${2:title} %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote-author": true
      },
      "source": "vim-snippets/snippets"
    },
    "908bfd61-207b-3686-b001-c0091f2a6ab1": {
      "content": "l_ply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l_": true
      },
      "source": "vim-snippets/snippets"
    },
    "9091678f-90c5-343a-9eb5-56665db73249": {
      "content": "<xsl:include href=\"${1:stylesheet}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "9091c894-91e7-3bc8-a069-bccf943e1f70": {
      "content": "<h4 class=\"${1}\">${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4.": true
      },
      "source": "vim-snippets/snippets"
    },
    "9095d8a4-3ce3-3267-98cc-8abcd1c07eea": {
      "content": "@while ${1:$i} ${2:>} ${3:0}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/snippets"
    },
    "9098db56-5727-3431-82e6-e2a1c3396bd2": {
      "content": "font-emphasize-style: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "909d36eb-4d20-3148-a1ae-c08bf3c1f49b": {
      "content": "_.deburr(${string})",
      "doc": "_.deburr('déjà vu');\n// => 'deja vu'\n\nDeburrs `string` by converting\n[Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nand [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\nletters to basic Latin letters and removing\n[combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-deburr",
      "matches": {
        "lodash deburr": true
      },
      "source": "javascript/lodash"
    },
    "90bccac3-2304-387c-8cbb-9d8ece1d8f3c": {
      "content": "set ${1:#:axis}range [${2:*}:${3:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set x/y range.",
      "matches": {
        "range": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "90c839ee-05fe-368e-b800-742c4c18443b": {
      "content": "for ${1:I} in ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "90d315e7-5d46-3bb1-971c-b2cf6b4ae629": {
      "content": "use Data::Dump qw(dump);\nwarn dump ${1:variable}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dump": true
      },
      "source": "vim-snippets/snippets"
    },
    "90d4c250-c0e3-3600-b4ff-2ae0d1563eb4": {
      "content": "Ada.Text_IO.Put(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put",
      "matches": {
        "put": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "90d6e05b-2bb5-3d08-b4cd-cd45111b62d9": {
      "content": "-include(\"${1:file}\").",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "90d786da-fa76-30c8-bc61-2190da99ce46": {
      "content": "_.stubTrue()",
      "doc": "_.times(2, _.stubTrue);\n// => [true, true]\n\nThis method returns `true`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubtrue",
      "matches": {
        "lodash stubtrue": true
      },
      "source": "javascript/lodash"
    },
    "90d9866c-dcd2-3044-a961-bbe39b495cc2": {
      "content": "if (${1:condition}) {\n\t${2:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "90db20b7-a5fe-304e-a3f3-7d82b87e1844": {
      "content": "<%= text_input ${1:f}, :${2:field} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "text_input",
      "matches": {
        "ti": true
      },
      "source": "vim-snippets/snippets"
    },
    "90dc6603-2b4d-34de-a961-7a4863a9f231": {
      "content": "border-left-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      },
      "source": "vim-snippets/snippets"
    },
    "90deadf2-a4a2-3061-9ff5-f624c7d72f8e": {
      "content": "@mastersthesis{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    school = {${4}},\n    year = {${5}},\n    memo = {address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@mastersthesis": true,
        "mastersthesis": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "90e291e0-2d01-3fc5-a5db-5fecbfae8533": {
      "content": "\\\\subsection*{${1:subsection name}}%\n\\\\label{sub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsection*",
      "matches": {
        "sub*": true
      },
      "source": "vim-snippets/snippets"
    },
    "90e848cd-e647-33db-8ed4-8e6553dababf": {
      "content": "${1:obj}.siblings('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sib": true
      },
      "source": "snippets/javascript"
    },
    "90eea54b-9ce7-3fb3-aeb2-a13ec2139499": {
      "content": "<remarks>${1}</remarks>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<rem": true
      },
      "source": "vim-snippets/snippets"
    },
    "90ef7327-83b3-3f95-adcc-9b3f625b0b52": {
      "content": "(filter ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/snippets"
    },
    "90f0b7a4-5a3f-38dd-b881-631f99296b71": {
      "content": "(${1:args}) ->\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "90f29c45-6f45-39e8-a75f-89cc2bcc782a": {
      "content": "vertical-align: text-bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "90fcf9ed-440c-31f6-8cac-3148bebd8fea": {
      "content": "<noscript>\n\t${0}\n</noscript>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noscript": true
      },
      "source": "vim-snippets/snippets"
    },
    "90fe4ddb-2288-3cae-9d74-f855fd838736": {
      "content": "SELECT ${1:*}\nFROM ${2:cities} ${3:WHERE area = 'Asia'}\n${4: ORDER BY distance}\n${5: LIMIT 30};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "SELECT * from ... ORDER BY ... LIMIT ...",
      "matches": {
        "SELECT_DATA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9113c9b9-60d6-367a-934e-3aad03e5aa8d": {
      "content": "log.Println(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Println(...)",
      "matches": {
        "ln": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "91150465-1cab-31bb-91e2-90dec1ced93e": {
      "content": "change_column :${1:table}, :${2:column}, :${0:type}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mcc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9120266f-acf7-3cef-a8f8-7c6eb947f695": {
      "content": "#include <${1:stdio}.h>",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9124313a-a56d-3b44-9c68-a416f8db0cfd": {
      "content": "(let ([${1}]) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "912464aa-49a7-3883-8f27-9896b38ca19f": {
      "content": "&#x21E7;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shift": true
      },
      "source": "vim-snippets/snippets"
    },
    "912732cb-e9e6-3cea-af8b-cdd9232668cb": {
      "content": "var $1 = new sap.m.VBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmvbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "9128e9d3-29f3-3d35-a106-d820386097bc": {
      "content": "${0:name}.view.zipWithIndex",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zipwi": true
      },
      "source": "vim-snippets/snippets"
    },
    "9132b8c6-df80-395c-91c2-56e3d7f76f5a": {
      "content": "assertNotNull(\"${1:Failure message}\", ${2:object});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ann": true
      },
      "source": "vim-snippets/snippets"
    },
    "9133e229-4eb0-3728-aed2-a4465f996eb2": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "913bb5ec-3f20-3fa2-b8dc-8cc43aed1646": {
      "content": "bind:@\"${1:binding}\" toObject:${2:observableController} withKeyPath:@\"${3:keyPath}\" options:${4:nil}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Key:value binding (bind)",
      "matches": {
        "bind": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "913cb28a-21fb-38a9-bff9-197a58a1eac6": {
      "content": "static propTypes = {\n\t${1}: PropTypes.${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "static propTypes",
      "matches": {
        "spt": true
      },
      "source": "snippets/javascript"
    },
    "914b7f99-defa-3378-9437-a9290d0aa049": {
      "content": "gl.glColor4f(${1:red}, ${2:green}, ${3:blue}, ${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl color 4f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "91544221-7c0c-3b3f-b62a-ed7b46a14408": {
      "content": "case ${1} is\n\twhen ${2} => ${3},${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case expression",
      "matches": {
        "case_expression": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9155e756-8147-37f2-9c30-2cb24c0a4c71": {
      "content": "fmt.Println(\"${1:s}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println()",
      "matches": {
        "pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "915d55f7-eade-31a2-b2cf-c8c0f141811e": {
      "content": "@verbatim\n\t${0:$VISUAL}\n@endverbatim",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@verbatim directive",
      "matches": {
        "verbatim": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "915ecc54-0aa2-3adf-a7b5-913001b74bc1": {
      "content": "IF ${1:Condition}\nTHEN ${2:Action}\n${3:ELSE ${4:OtherWise}}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "91680ecf-24cf-34f9-86be-81b7e4b0cef0": {
      "content": "${1:obj}.slideToggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stoggle": true
      },
      "source": "snippets/javascript"
    },
    "916a5904-232b-3f0a-8620-e68883be9286": {
      "content": "inject(${1:init}) do |${2:mem}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "injd": true
      },
      "source": "vim-snippets/snippets"
    },
    "916d60e6-71e5-3f36-8aa1-7c0f7606da41": {
      "content": "outline-color: ${1:#000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9172ba6d-1158-39cc-8c62-07020c4a18c7": {
      "content": "set ${1:setting} = ${0:value}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "917381c0-55d2-3ebe-b99e-18177c45a13d": {
      "content": "try:\n  ${1:pass}\nexcept ${2:#:ExceptionClass}:\n  ${3:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "try: ... except ...: ...",
      "matches": {
        "tryexcept": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "917a1774-1974-3a0b-9719-3843028dc937": {
      "content": "place-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "9182d095-803b-395a-8632-5605155afdd7": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      },
      "source": "vscode-react/snippets"
    },
    "91870623-d8b4-30b7-b8f2-3cb0991b1c23": {
      "content": "import ${2:moduleName} from '${1:module}';$0",
      "doc": "Imports entire module statement in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "imp": true
      },
      "source": "vscode-javascript/snippets"
    },
    "918e6888-249d-3fe7-a8ef-d222b91baf4a": {
      "content": "${1:obj}.appendTo('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "appendTo": true
      },
      "source": "snippets/javascript"
    },
    "9195076e-838d-3ac6-ac08-4e443475dec1": {
      "content": "{\n\t\"type\": \"html\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"<div>${0}</div>\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_html": true
      },
      "source": "vim-snippets/snippets"
    },
    "9196461e-8655-39e7-9932-16a34e268ac6": {
      "content": "if(${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "919a744b-8319-3deb-bb6f-c98eb9834885": {
      "content": "-moz-border-image: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "919a8697-1f27-3c63-88b5-60fd90c1c8b5": {
      "content": "[...Array(${1:length}).keys()]${0}",
      "doc": "sequence of 0..n",
      "filetype": "base",
      "grammar": "lsp",
      "label": "sequence-of-0-n",
      "matches": {
        "base sequence of": true
      },
      "source": "javascript/base"
    },
    "91a37ab2-ed1e-3c74-8f34-b68037f25cf1": {
      "content": "background-size: cover",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      },
      "source": "vim-snippets/snippets"
    },
    "91a3a14a-f2bb-3d31-b304-ea1d6389157e": {
      "content": "if ${1:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "91a5fa46-62ad-3a86-9bd3-b828a0e6adc8": {
      "content": "{{ ${1} }}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/snippets"
    },
    "91ad2523-2bd9-3fe8-a2af-d5282b839745": {
      "content": "echo CHtml::label('${1:label}', '${2:for}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlabel": true
      },
      "source": "vim-snippets/snippets"
    },
    "91b142fa-6fd9-386e-9cb3-9525040fa6bf": {
      "content": "<meta name=\"description\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metadescription": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "91b1ae90-7cc0-3645-ae36-003b9b6d351f": {
      "content": "return ${1};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "91b999b7-a2aa-33cb-bf15-898205c39df4": {
      "content": "_.unescape(${string})",
      "doc": "_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'\n\nThe inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\ntheir corresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional\nHTML entities use a third-party library like [_he_](https://mths.be/he).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unescape",
      "matches": {
        "lodash unescape": true
      },
      "source": "javascript/lodash"
    },
    "91b9c947-52bd-318e-a8fc-dbe2507a3888": {
      "content": "$.isPlainObject(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isobj": true
      },
      "source": "snippets/javascript"
    },
    "91ba4ede-e523-3a90-8be1-78194309b677": {
      "content": "display -moz-inline-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      },
      "source": "vim-snippets/snippets"
    },
    "91c2b5cb-5a04-36b1-9458-73d394075938": {
      "content": "Url:previous();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_previous": true
      },
      "source": "vim-snippets/snippets"
    },
    "91c5ea25-e4e6-3473-af21-c17f8c465e8f": {
      "content": "import { TimelineMax, ${1:Ease} } from 'gsap'",
      "doc": "component methods options that dispatch an action from vuex store.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-gsap",
      "matches": {
        "vimport-gsap": true,
        "vue import gsap": true
      },
      "source": "javascript/vue"
    },
    "91c6b8a2-96ef-3402-a827-00177ef3b699": {
      "content": "\\textsl{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsl": true,
        "textsl \\textsl{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "91c840ba-ba3a-31b7-8206-9bc501af4db0": {
      "content": "\\textup{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textup": true,
        "textup \\textup{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "91c90881-024a-36b1-8ce1-e25dc22c93f9": {
      "content": "{namespace ${1:name}}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "Namespace",
      "matches": {
        "ns": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "91d2aa6c-1812-3a5f-8a27-b241cf3c611d": {
      "content": "extends ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "91da63c6-ec55-389a-9ce6-07c43587806a": {
      "content": "Option<${1:()}>${2}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Option<A>",
      "matches": {
        "opt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "91dd11af-fc19-37dc-a7ec-7a27472361de": {
      "content": "${1:obj}.replaceWith(${2:content})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repw": true
      },
      "source": "snippets/javascript"
    },
    "91ea9fd8-8097-3d3a-8cb6-044c9d46e986": {
      "content": "deinit {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deinit": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "91fb8c76-6ac8-32f0-9921-04f1e2f84ac6": {
      "content": "_.filter(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.filter(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, { 'age': 36, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.filter(users, 'active');\n// => objects for ['barney']\n\nIterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).\n\n**Note:** Unlike `_.remove`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-filter",
      "matches": {
        "lodash filter": true
      },
      "source": "javascript/lodash"
    },
    "920186b9-7743-32bc-a71f-fb1663777d91": {
      "content": "[[ ${0:test} ]]",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      },
      "source": "vim-snippets/snippets"
    },
    "920c01a6-1a11-3315-b6fc-c91c25280e99": {
      "content": "(when-let [${1:result} ${2:test}]\n\t${0:body})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when-let": true
      },
      "source": "vim-snippets/snippets"
    },
    "9219c600-11c5-3120-b819-510384b1c212": {
      "content": "_.without(${array}, ${values})",
      "doc": "_.without([2, 1, 2, 3], 1, 2);\n// => [3]\n\nCreates an array excluding all given values using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.pull`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-without",
      "matches": {
        "lodash without": true
      },
      "source": "javascript/lodash"
    },
    "921fa269-5f56-39d3-a361-db2d2c996fa6": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docx": true
      },
      "source": "vim-snippets/snippets"
    },
    "92265a7a-7ac0-36cb-adbf-627800e2a0f6": {
      "content": "display: grid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "9227ad3d-3d72-30de-8fb7-0eb4a9584b95": {
      "content": "border-bottom: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      },
      "source": "vim-snippets/snippets"
    },
    "9228ea2e-eba1-39be-ab3b-9004d909ced4": {
      "content": "overflow-style move",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      },
      "source": "vim-snippets/snippets"
    },
    "9230b934-7367-3709-a470-0128931da497": {
      "content": "\\$_SERVER['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "server": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "92335814-ae67-3db1-8ea6-3484ca3c287d": {
      "content": "class=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "92336659-1f34-3052-8d0d-85f5f4a5247c": {
      "content": "import * as ${1} from '${2:$1}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import * as xyz from 'xyz'",
      "matches": {
        "imas": true
      },
      "source": "snippets/javascript"
    },
    "9235604b-bbe5-3dfa-b14f-8908e3094e55": {
      "content": "new Promise((resolve, reject) => {\n\t${0}\n})",
      "doc": "Promise (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-es6-",
      "matches": {
        "base promise": true
      },
      "source": "javascript/base"
    },
    "923667d3-83db-3273-9165-9088643059e9": {
      "content": "display: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9239af3d-1fbd-3d6b-bdfe-5a342a7bbb49": {
      "content": "grid-template ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "923b22ae-a7ea-3db3-8b52-41dd402fc01e": {
      "content": "else {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "923c31a3-1245-3b30-8ad3-033976faae68": {
      "content": "padding: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   T R B L (padding)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "924221ab-bc54-31a1-9c6c-fb1f15e50645": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}; trackBy:${1:item}.id\"${0}",
      "doc": "Angular *ngFor with trackBy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngfor-with-trackby",
      "matches": {
        "a-ngfor-trackby": true,
        "angular ng for with track by": true
      },
      "source": "javascript/angular"
    },
    "924f0f53-31be-3432-b131-529c6a63b61b": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-component-proptypes",
      "matches": {
        "rafcp": true,
        "react component arrow function proptypes": true
      },
      "source": "javascript/react"
    },
    "92511910-104f-34af-944d-b4248e1f5ffc": {
      "content": "<returns>${1}</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<r": true
      },
      "source": "vim-snippets/snippets"
    },
    "9258771d-2d76-3a16-a2fb-97dda7c06df3": {
      "content": "for (${2:i} = 0; i < ${1:n}; ${3:++i}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "926c9e55-3f7a-3989-8a09-03b90c5f12c8": {
      "content": "each_with_index {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_with_index": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "927f0c20-3667-30c0-8c41-e919e4544200": {
      "content": "box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "92885efa-f1a1-3995-b26e-0036df34459c": {
      "content": "message(FATAL_ERROR \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(FATAL_ERROR \"...\")",
      "matches": {
        "fatal_error_message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "928b8733-3ee8-3cba-bc44-06a8abf7b315": {
      "content": "do {\n\t${1}\n} while(${2});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      },
      "source": "vim-snippets/snippets"
    },
    "928cc947-6f38-3244-93e1-20bbe7c24a71": {
      "content": "assert_difference '${1:Model}.${2:count}', ${3:1} do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asd": true
      },
      "source": "vim-snippets/snippets"
    },
    "928e3277-7916-33d5-83ff-9ac806d7feac": {
      "content": "${1:FIELDNAME} = models.IPAddressField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ip": true
      },
      "source": "vim-snippets/snippets"
    },
    "92911b29-e6f5-38cb-9c24-50fda35def35": {
      "content": "for (var ${1} = 0; $1 < ${2}.length; $1++) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "fr",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9295c247-888f-3625-b335-a7513a38e756": {
      "content": "state = {\n\t${1}: ${2},\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      },
      "source": "snippets/javascript"
    },
    "929c9434-b0db-3ad1-9680-fb6b2e86dab6": {
      "content": "t.references :${1:taggable}${2:, polymorphic: ${3:{ default: '${4:Photo}' }}}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.references (tcr)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "92ab6c68-64ba-334e-b224-e0fe25af15a2": {
      "content": "@typep ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typ": true
      },
      "source": "vim-snippets/snippets"
    },
    "92b08533-3ebd-3e74-a88d-287677a308da": {
      "content": "for ${1:name} from ${2:start} to ${3:finish} by ${4:step}\n\t${5}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrb": true
      },
      "source": "vim-snippets/snippets"
    },
    "92b608b9-046d-3611-b86d-17c8ff57853d": {
      "content": "it { should have_many(:${1}).through :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishmt": true
      },
      "source": "vim-snippets/snippets"
    },
    "92bf128c-6702-3068-b845-722d016d07eb": {
      "content": "distance_of_time_in_words",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "distance_of_time_in_words",
      "matches": {
        "dotiw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "92cae1ff-c389-3eae-a0b6-1b8b75799c8d": {
      "content": "if ($1) {\n\t${2:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "92df8373-6cd7-3a7a-99dd-4d6522c7f2f4": {
      "content": "require('dotenv-safe').config({ path: '${1:/full/custom/path/to/your/env/vars}' })",
      "doc": "You may specify a custom path if your file containing environment variables is located elsewhere.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-path",
      "matches": {
        "dotenv-safe path": true
      },
      "source": "javascript/dotenv-safe"
    },
    "92e23be3-f63d-3998-96a3-7f70b52d17ca": {
      "content": "grid-auto-flow: row dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      },
      "source": "vim-snippets/snippets"
    },
    "92e328a2-5109-3a9c-999b-b25fef253eff": {
      "content": "== ${1} ==\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "==": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "92e5de39-0926-3f3b-9f97-1c20a12ad118": {
      "content": "text-justify: inter-ideograph;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      },
      "source": "vim-snippets/snippets"
    },
    "92e924df-fd97-3248-8e6e-addad29a9d2c": {
      "content": "_.maxBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.maxBy(objects, function(o) { return o.n; });\n// => { 'n': 2 }\n\n// The `_.property` iteratee shorthand.\n_.maxBy(objects, 'n');\n// => { 'n': 2 }\n\nThis method is like `_.max` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-maxby",
      "matches": {
        "lodash maxby": true
      },
      "source": "javascript/lodash"
    },
    "92e97a4f-d850-384b-bd8d-b684e587339d": {
      "content": "protected ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p|": true
      },
      "source": "vim-snippets/snippets"
    },
    "92f07d8c-ef8c-36ae-b17f-ea7ad85c44b4": {
      "content": "text-emphasis circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "92f3e90d-e2dc-3ecd-af20-4763b21bcbe0": {
      "content": "```{r}\n$0\n```",
      "doc": "Insert R code chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert R code chunk",
      "matches": {
        "r code chunk": true
      },
      "source": "vscode-R/snippets"
    },
    "92f4fc9e-ea43-3079-b125-af77ba36f75c": {
      "content": "text-replace: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "930366a6-ce00-3552-968e-b0edddac82c0": {
      "content": "Examples:\n/// --------------------\n/// ${1:example code}\n/// --------------------",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Examples (Example)",
      "matches": {
        "Example": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9303e52e-3169-3561-8ab0-eaefb9bbef5b": {
      "content": "each_byte {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_byte": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93041304-0aec-323c-a2a7-99665d9e90d0": {
      "content": "${1:obj}.toggleClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togclass": true
      },
      "source": "snippets/coffee"
    },
    "930629ff-89db-33fe-bc93-049933f3a87c": {
      "content": "text-decoration overline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "930d1de6-c2b7-3d1a-83da-1c4f4820e22b": {
      "content": "fmt.Printf(\"${1} = %+v\\n\", $1)\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(...)",
      "matches": {
        "ff": true
      },
      "source": "gosnippets/snippets"
    },
    "93203e7c-af1a-34c1-bb0e-4045f2b9114f": {
      "content": "int choice = NSRunAlertPanel(@\"${1:Something important!}\", @\"${2:Something important just happend, and now I need to ask you, do you want to continue?}\", @\"${3:Continue}\", @\"${4:Cancel}\", nil);\nif(choice == NSAlertDefaultReturn) // \"$3\"\n{\n\t$0;\n}\nelse if(choice == NSAlertAlternateReturn) // \"$4\"\n{\n\t\t$0\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSRunAlertPanel (alert)",
      "matches": {
        "alert": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "93212e57-22a0-3828-8d32-c519da9d6af3": {
      "content": "each_line do |${1:line}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eald": true
      },
      "source": "vim-snippets/snippets"
    },
    "9321a6db-1706-3143-b44c-e340c955609e": {
      "content": "vertical-align baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      },
      "source": "vim-snippets/snippets"
    },
    "93305e00-5678-3ec5-a5dd-78d92b0a97e1": {
      "content": "pub fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Function definition",
      "matches": {
        "pfn": true
      },
      "source": "vim-snippets/snippets"
    },
    "9335d854-f913-357b-967d-7ac08ce8bace": {
      "content": "${1:obj}.focusIn(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusin": true
      },
      "source": "snippets/javascript"
    },
    "93384126-6cdb-3b41-83ac-b265af7dc83d": {
      "content": "println!(\"${1}\");",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println!",
      "matches": {
        "pln": true
      },
      "source": "vim-snippets/snippets"
    },
    "9344ca0e-c327-3332-bf1d-0c757fab52ef": {
      "content": "(ns ${0:name})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      },
      "source": "vim-snippets/snippets"
    },
    "935b30b1-255a-334f-9766-ef514c91b883": {
      "content": "echo CHtml::activeName(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhan": true
      },
      "source": "vim-snippets/snippets"
    },
    "935dfe72-cb77-30cb-9824-04bd5e183180": {
      "content": "[[NSNotificationCenter defaultCenter] addObserver:${1:self} selector:@selector(${3}) name:${2:NSWindowDidBecomeMainNotification} object:${4:nil}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reg": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93657d31-93c6-3560-8b84-79d9d4daa568": {
      "content": "after_validation_on_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation_on_create",
      "matches": {
        "aftvoc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "936924ee-8763-3e97-aff9-f53a5aaf3dff": {
      "content": "\\\\dot{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "dot",
      "matches": {
        "dot": true
      },
      "source": "vim-snippets/snippets"
    },
    "936a8528-7506-34cd-b803-4195de29497e": {
      "content": "visibility: ${1:visible/hidden/collapse};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "visibility: type (visibility)",
      "matches": {
        "visibility": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "936cb515-b39e-35a5-9fc6-1f3110654f09": {
      "content": "#!/usr/bin/env sh",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "93714392-4e46-3a85-9c84-2bddd45e8fe9": {
      "content": "font-stretch: semi-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "937f8ac4-5950-35bf-9da8-bb9ab6d3ddec": {
      "content": "triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${0:y3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "triangle": true
      },
      "source": "vim-snippets/snippets"
    },
    "938d2404-b8cb-3266-8728-f1fd0a230376": {
      "content": "${1}.find(${2:item} => {\n\t${0}\n});",
      "doc": "find",
      "filetype": "base",
      "grammar": "lsp",
      "label": "find",
      "matches": {
        "base find": true
      },
      "source": "javascript/base"
    },
    "938e792b-9c95-3eed-93e3-d3e45cb1ff3f": {
      "content": "set ${1:#:axis}label ${2:#:label}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set title '...'",
      "matches": {
        "labelaxis": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93905926-fb7b-323c-b3f6-4d876dd709c3": {
      "content": "switch ${1:var} {\n\t${3:pattern 1} {\n\t\t${0:#do something}\n\t}\n\tdefault {\n\t\t${2:#do something}\n\t}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "939a43b3-a298-35c7-adbd-1d1fe08e70c9": {
      "content": "jasmine.anything()",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "anything (js)",
      "matches": {
        "anyt": true
      },
      "source": "vim-snippets/snippets"
    },
    "939a85c7-68fc-3a87-b2d8-0c7efc7a5321": {
      "content": "assert_nothing_raised ${1:StandardError} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnrd": true
      },
      "source": "vim-snippets/snippets"
    },
    "939ffa8f-a8dc-3521-9dcc-8d91e9e60cde": {
      "content": "public class ${1} extends ${2:TestCase} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true,
        "testclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93a5d97c-1491-3f77-9b20-bc77b897db24": {
      "content": "console.debug(${1:object});",
      "doc": "Displays a message in the console. Also display a blue right arrow icon along with the logged message in Safari",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleDebug",
      "matches": {
        "cdb": true
      },
      "source": "vscode-javascript/snippets"
    },
    "93a6786a-bc26-3209-b179-780169131ef2": {
      "content": "foreach(${1:/*elem*/}; ${2:/*range*/}) if(${3:/*condition*/})\n{\n\t${VISUAL}$4\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach if (forif)",
      "matches": {
        "forif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "93a80391-3cfb-383c-ab9b-b8d2a2adb6f2": {
      "content": "{%- cycle '${1:odd}', '${2:even}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle-": true
      },
      "source": "vim-snippets/snippets"
    },
    "93b14bec-87f0-3f5f-9817-eb4e2253c2d7": {
      "content": "import { ${2:originalName} as ${3:alias} } from '${1:module}';$0",
      "doc": "Imports a specific portion of the module by assigning a local alias in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importas",
      "matches": {
        "base import as": true
      },
      "source": "javascript/base"
    },
    "93b20e63-9e17-3957-9b21-c7dfad514175": {
      "content": "{% youtube ${0:video_id} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "youtube": true
      },
      "source": "vim-snippets/snippets"
    },
    "93b4d128-1eb8-3c42-9056-a4eb5f0fc628": {
      "content": "case ${1} is\n\twhen ${2} => ${3},${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case expression",
      "matches": {
        "casex": true
      },
      "source": "vim-snippets/snippets"
    },
    "93bfebde-6d68-38f6-98eb-a8211d0c601d": {
      "content": "counter-reset: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      },
      "source": "vim-snippets/snippets"
    },
    "93c3ad36-8970-33c4-ac1d-1b2a78db61ab": {
      "content": "super(${1:/*args*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "super (sup)",
      "matches": {
        "sup": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "93cb21db-34db-33d1-bd2a-7f67a988cb0b": {
      "content": "c(${0:items})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      },
      "source": "vim-snippets/snippets"
    },
    "93d14ddf-9bce-3688-b199-e472b982bd09": {
      "content": "<bdi>${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "93d2ff1c-13c0-35b1-91b3-ad43dbd84738": {
      "content": "for [${1:i} = ${2:#:start}, ${3:#:end}, ${4:1}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "for [intvar = start, end, incr]",
      "matches": {
        "fori": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93d99168-f6f2-3793-a910-f038d9c94dde": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "93ddd2d9-7986-3685-bf4a-71f97bdb80ae": {
      "content": "System.Runtie.CompilerServices",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.r.c": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "93e338ba-7fa1-3b32-9390-574309147a38": {
      "content": "import { mapActions } from 'vuex'\n\nexport default {\n\tmethods: {\n\t\t...mapActions([\n\t\t\t${1:'nameOfAction'}, //also supports payload `this.nameOfAction(amount)` \n\t\t])\n\t},\n}",
      "doc": "mapactions inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapactions",
      "matches": {
        "vmapactions": true,
        "vue mapactions": true
      },
      "source": "javascript/vue"
    },
    "93ec91ef-a5a4-324c-85be-90cd03a1f095": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-of",
      "matches": {
        "prop-types arrayof": true,
        "ptao": true
      },
      "source": "javascript/prop-types"
    },
    "93f90264-0661-33c0-8cae-e44efe4db79b": {
      "content": "list-style-type: decimal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      },
      "source": "vim-snippets/snippets"
    },
    "94058cda-eb80-3000-bbd9-24c1d6194cc3": {
      "content": "internal int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&-": true
      },
      "source": "vim-snippets/snippets"
    },
    "9407add8-463f-32c6-9d60-e3eb870c821c": {
      "content": "${1:f}: (${2:args}) =>\n  ${0:TARGET}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "940c0ddb-b102-3ad5-bc76-335c6025c450": {
      "content": "if ($1)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "940fb6b6-7ab8-3dfb-96c3-b2e7ac78860e": {
      "content": "<bdo dir=\"rtl\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "9412d2e5-dc74-3133-9b2b-fbb886efb2d5": {
      "content": "align-content stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "9413195c-c148-353d-a0b2-1f6d6400e2c1": {
      "content": "process (${1})\nbegin\n\t${2}\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "9414b75d-ed7e-33bd-b749-b85cd2d632a5": {
      "content": "justify-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "9423f01a-fd45-3741-800d-1d80e309f2fa": {
      "content": "unless ${1:condition}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do: ..",
      "matches": {
        "unless:": true
      },
      "source": "vim-snippets/snippets"
    },
    "9425468d-91d0-3893-b09d-10d738784074": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "import ( ... )",
      "matches": {
        "import": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "9427e0d4-5145-3047-8e36-368915d98f69": {
      "content": "stroke(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stroke": true
      },
      "source": "vim-snippets/snippets"
    },
    "942f3441-9e5a-3fde-8219-bf9efa0ffebf": {
      "content": "$this->shouldReturnAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldReturnAnInstanceOf('Type')",
      "matches": {
        "srinstance": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "94384edd-657d-37f0-856c-467f75909a00": {
      "content": "else if (${1:condition}) {\n\t${0}\n}",
      "doc": "else if statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "else-if-statement",
      "matches": {
        "base else if": true
      },
      "source": "javascript/base"
    },
    "943c06ab-be93-3c7a-871f-73229f39d27c": {
      "content": "${1:map}.resource :${2:resource}${10: do |${11:$2}|\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.resource",
      "matches": {
        "mapr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "943c63b2-9ccd-32d0-815c-11cafb39ab73": {
      "content": "def ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "943c7423-b9c3-39e1-ad53-c187207345d4": {
      "content": "# coding: utf-8\nrequire 'erb'\nputs ERB::Util.url_encode '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlencode": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "944822c8-3ea9-34f9-b1f6-49ed8a1a9c2b": {
      "content": "destroyed () {\n\t${0};\n},",
      "doc": "destroyed lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle destroyed",
      "matches": {
        "vdestroyed": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "94593c20-0c19-3a01-82f8-a37b8ab707a5": {
      "content": "unsigned int ${1:object}Count = [${2:array} count];\nfor (unsigned int index = 0; index < $1Count; index++) {\n\t${3:id} $1 = [$2 $1AtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forarray": true
      },
      "source": "vim-snippets/snippets"
    },
    "945c50c5-47f5-3d09-9494-45dab1fb9f3e": {
      "content": "int opCmp($1 rhs) @safe const pure nothrow\n{\n\t$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opCmp (opCmp)",
      "matches": {
        "opCmp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9460e640-c1e4-3aba-8a08-b4b3b83c0af1": {
      "content": "function ${1}(${2}):${3}{\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9465bdd5-deca-3d82-9dc4-3bdf34e960af": {
      "content": "#include <${1:stdio}.h>",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc, #include": true,
        "inc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "946c93b1-17dd-3e41-bb40-90c9ec483f86": {
      "content": "{\n\t\"type\": \"product\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_product": true
      },
      "source": "vim-snippets/snippets"
    },
    "946eddff-3e79-3c96-b079-9ffefe861526": {
      "content": "case ${1:pattern}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "946f69ed-1809-35ac-b456-d069fc2ae47c": {
      "content": "?then(${1:true}, ${0:false${VISUAL}})",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "?then(true, false)",
      "matches": {
        "?th": true
      },
      "source": "vim-snippets/snippets"
    },
    "9471179c-aeff-382e-ad5a-ac0083d8b02a": {
      "content": "empty-cells: show",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "947117e7-fec5-31b8-bf0d-fd1387ed827f": {
      "content": "${1:public} static void Main(string[] args)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "svm": true
      },
      "source": "vim-snippets/snippets"
    },
    "947ace08-64f8-3cac-b324-b1a4310b8029": {
      "content": "export async function getServerSideProps(${1:context}) {\n  return {\n    props: {}, \n  }\n}",
      "doc": "If you export an async function called getServerSideProps from a page, Next.js will pre-render this page on each request using the data returned by getServerSideProps. The context parameter is an object containing the following keys: params, req, res, query, preview, previewData.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-server-side-props",
      "matches": {
        "next getserversideprops": true
      },
      "source": "javascript/next"
    },
    "947c2145-44d3-3416-a81f-df4bc63c2b7a": {
      "content": "\\cite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\cite": true,
        "cite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "948944f2-bf9e-3f07-9614-8ca434874159": {
      "content": "white-space-collapse: break-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "948e88da-fc1b-3a9a-b620-3c8a268e74a4": {
      "content": "${1:FIELDNAME} = forms.MultiValueField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "MultiValueField",
      "matches": {
        "fmuval": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9490dd2e-3e27-3745-a62a-2d7244666596": {
      "content": "if ${1:condition}\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "9495e64a-d9bc-338d-89b8-395127a328c2": {
      "content": "add:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "94973aaa-1e41-3d4c-aaf8-f9b2a0a675fd": {
      "content": "${1:method_name}: function (${2:attribute}) {\n\t${0:${VISUAL}}\n},",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":f": true
      },
      "source": "snippets/javascript"
    },
    "9497915e-520d-3749-88c4-09b312d42fcb": {
      "content": "${1:controls}.start({ ${2:opacity: 1} })",
      "doc": "AnimationControls with a start and stop method",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animation-controls",
      "matches": {
        "controls": true,
        "framer-motion controls": true
      },
      "source": "javascript/framer-motion"
    },
    "94a5e46d-2438-37bd-870b-afbb11eda262": {
      "content": "import React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-component",
      "matches": {
        "rce": true,
        "react component class export": true
      },
      "source": "javascript/react"
    },
    "94a5f944-af53-36f7-b1b1-787617addb78": {
      "content": "justify-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "94aa5dfc-40d1-3f5e-9e84-b3b9625af539": {
      "content": "#pragma mark ${0:-}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prag": true
      },
      "source": "vim-snippets/snippets"
    },
    "94b65761-de07-3fe0-a414-9785b87043be": {
      "content": "<video class=\"${1}\" src=\"${2}\" height=\"${3}\" width=\"${4}\" preload=\"${5:none}\" autoplay=\"${6:autoplay}\">${7}</video>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "video.": true
      },
      "source": "vim-snippets/snippets"
    },
    "94b69f87-9a5f-3519-8f59-84f7d7bd2d1d": {
      "content": "{< ${1:x} = ${2:y} >}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object functional update",
      "matches": {
        "{{": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "94be9686-fabf-3e36-9cdc-87e444a78d7b": {
      "content": "(dosync\n\t(ref-set ${1:ref} ${2:value}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "(dosync (ref-set ...",
      "matches": {
        "ref-set": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "94c779f9-32b9-37f7-be47-b795c9c833b5": {
      "content": "$.isNumeric(${1:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      },
      "source": "snippets/coffee"
    },
    "94c81ce5-0e9f-30e7-9a5f-066b2ed4cc45": {
      "content": "outline-color: ${0:#000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "94c96dbb-014f-3112-be51-25a392651712": {
      "content": "_.curry(${func}, ${arity})",
      "doc": "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]\n\nCreates a function that accepts arguments of `func` and either invokes\n`func` returning its result, if at least `arity` number of arguments have\nbeen provided, or returns a function that accepts the remaining `func`\narguments, and so on. The arity of `func` may be specified if `func.length`\nis not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-curry",
      "matches": {
        "lodash curry": true
      },
      "source": "javascript/lodash"
    },
    "94cf243c-73a0-30ea-9a50-4b15d52acdbe": {
      "content": "border-length: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      },
      "source": "vim-snippets/snippets"
    },
    "94d4b75d-4186-327d-ac6f-20a08dca0b48": {
      "content": "#!/usr/bin/env perl -w\n\nuse strict;\nuse Test::More tests => ${1:1};\nuse ${2:ModuleName};\n\nok(${3:assertion});\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Test",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "94deed0f-ff32-3d1a-8202-0f4c0b891544": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-enum",
      "matches": {
        "prop-types enum": true,
        "pte": true
      },
      "source": "javascript/prop-types"
    },
    "94e43538-09fb-3bd7-8eae-faf0502108cd": {
      "content": "display: table-row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "94e7b192-1db7-375c-b136-22cea45fd1e2": {
      "content": "func Test${1:name}(t *testing.T) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "test function",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "94e7be58-3842-3864-b8a4-f99ff05d7731": {
      "content": "${1:/* condition */} ? ${2:a} : ${0:b}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "94e93780-5ae5-3f26-a991-65f7fd7b07b0": {
      "content": "{%- paginate ${1:collection.products} by ${2:12} -%}\n\t{%- for ${3:product} in $1 -%}\n\t\t${0}\n\t{%- endfor -%}\n{%- endpaginate -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paginate-": true
      },
      "source": "vim-snippets/snippets"
    },
    "94efd0e8-6665-382e-8755-37522d6ec0ca": {
      "content": "const ${1:store} = writable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable-set",
      "matches": {
        "svelte writeable set": true,
        "svwt": true
      },
      "source": "javascript/svelte"
    },
    "94f41682-78c6-3dab-8777-f5581bbc700d": {
      "content": "\\${1:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:TARGET}",
      "matches": {
        "1T": true,
        "1t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "94f96ec2-7b18-3e8b-a292-b40dacadb138": {
      "content": "typeof ${1:source} === '${2:undefined}'",
      "doc": "typeof",
      "filetype": "base",
      "grammar": "lsp",
      "label": "typeof",
      "matches": {
        "base typeof": true
      },
      "source": "javascript/base"
    },
    "95036b19-c356-341e-9ea5-0c11e1f8ff37": {
      "content": "for ${1}{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for loop",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "950df230-7cea-3f45-8b4f-ba984d3c8229": {
      "content": "if(Yii::app()->request->isAjaxRequest == TRUE)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yifisajax": true
      },
      "source": "vim-snippets/snippets"
    },
    "950f8eee-9406-34b3-843f-9ad3f96578ca": {
      "content": "public void test${1:Name}() throws Exception {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "95187bae-18ad-38e0-82b3-2afba81fb54b": {
      "content": "bind:${1:property}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind",
      "matches": {
        "svbind-simple": true,
        "svelte bind": true
      },
      "source": "javascript/svelte"
    },
    "951f0363-32b1-3c5d-bcfc-5e74b994782d": {
      "content": "onBeforeUnmount(() => {${1}})",
      "doc": "(beforeDestroy) Vue onBeforeUnmount Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeUnmount",
      "matches": {
        "v3onbeforeunmount": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "952535fd-8724-3460-9924-253419cff20e": {
      "content": "define [\"${1:#dependencies1}\"], (${2:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "snippets/coffee"
    },
    "9529acf9-55ae-3611-8f68-c886c4f06e4d": {
      "content": "must_include ${0:what}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      },
      "source": "vim-snippets/snippets"
    },
    "952ca658-252d-3eab-b709-b0f407e8c6a1": {
      "content": "{% ${1:tag_name} %}\n${0}\n{% end$1 %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      },
      "source": "vim-snippets/snippets"
    },
    "9531c670-b6cb-3ddd-be9c-420cd28523b4": {
      "content": "${1:Figure}~\\\\ref{${2:fig:}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a figure",
      "matches": {
        "figure": true
      },
      "source": "vim-snippets/snippets"
    },
    "95345e8e-ea63-3db2-889b-92fdd03f09b8": {
      "content": "${1:action} unless ${2:condition}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      },
      "source": "vim-snippets/snippets"
    },
    "9545d751-6ea7-3c7e-bd5a-7ab2dc39c5cb": {
      "content": "if(${1:#:condition})\n\t${2}\nelse()\n\t${3}\nendif()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "if() else() endif()",
      "matches": {
        "if_else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "954ebc92-433d-3909-bfb8-0d3bee059e10": {
      "content": "else if (${1:condition}) {\n   ${2:selected}\n}",
      "doc": "Code snippet for 'else' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "elseif",
      "matches": {
        "elseif": true
      },
      "source": "vscode-R/snippets"
    },
    "95523d75-9d9b-30df-aaa7-b415cd01e68a": {
      "content": "${1:obj}.prev('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prev": true
      },
      "source": "snippets/coffee"
    },
    "95559ee2-45d6-3c74-8de8-c028503b0775": {
      "content": "-webkit-border-image: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "9559a39c-2767-3bdf-a245-567f827322e4": {
      "content": "when {\n\tbranch '${1:branch}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenbranch": true
      },
      "source": "vim-snippets/snippets"
    },
    "955d0dc5-d046-3470-a443-3fc4f83c2a7c": {
      "content": "log.Printf(\"${1:${VISUAL}} = %+v\\n\", $1)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Printf(...)",
      "matches": {
        "lf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "95618532-293b-343f-ab0a-5e19f376d6ab": {
      "content": "it { should render_with_layout ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrwl": true
      },
      "source": "vim-snippets/snippets"
    },
    "9563edcd-ee6b-3ef9-9584-dd2714f3c4a0": {
      "content": "assert_not_equal ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asne": true
      },
      "source": "vim-snippets/snippets"
    },
    "95677973-11d6-31a6-ba82-9a5409c2d0d6": {
      "content": "${1:obj}.ajaxError (${1:e}, xhr, settings, thrownError) ->\n\t${2:// error callback}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxerror": true
      },
      "source": "snippets/coffee"
    },
    "9570225a-0d72-361d-a08b-8517bdd70fe8": {
      "content": "case ${1:expression} of\n\t${2:pattern} ->\n\t\t${0:body};\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "95730a59-8e1f-3847-a7e6-95c74502e64e": {
      "content": "text-emphasis: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      },
      "source": "vim-snippets/snippets"
    },
    "95744b00-24c9-38e2-859d-be0762c16a41": {
      "content": "\\begin{upshape}\n\t${1:TARGET}\n\\end{upshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{upshape} \\upshape": true,
        "upshape": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "95776c73-e238-3cbb-b8ce-477dd6476e21": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:parent}_${3:child}_path(${0:@$2}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "linpp": true
      },
      "source": "vim-snippets/snippets"
    },
    "9587c109-cbd2-3e3e-8901-63347eabb4b3": {
      "content": "widows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      },
      "source": "vim-snippets/snippets"
    },
    "95885578-3db0-3bb7-b7cf-65a720b61cca": {
      "content": "/**\n * ${3:undocumented class variable}\n *\n * @var ${4:string}\n */\n${1:var} $${2};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_v": true
      },
      "source": "vim-snippets/snippets"
    },
    "958b4c55-34ea-3187-ba43-3cb4e08cb626": {
      "content": "border-fit: repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "9593a034-c945-3fef-ac76-4378828f5faa": {
      "content": "const ${1:contextName} = React.createContext()\n",
      "doc": "Create React context",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-createcontext",
      "matches": {
        "rcontext": true,
        "react createcontext": true
      },
      "source": "javascript/react"
    },
    "9594e1c9-806f-3bbf-a9c1-6742a35d89a2": {
      "content": "align-items: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "959a0483-567f-3704-acd4-32eac2a7bbc2": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "959a6443-2e65-31ae-b5c7-0f213d1a048d": {
      "content": "#include \"${1}\"",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "959b24ad-d8ac-3e3d-82aa-14119f20b3af": {
      "content": "assert_nothing_thrown do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asntd": true
      },
      "source": "vim-snippets/snippets"
    },
    "959d9de3-8ba1-32ea-a7db-4afc65b7fb2a": {
      "content": "protected function tearDown()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "protected function tearDown() { ... }",
      "matches": {
        "teardown": true
      },
      "source": "vim-snippets/snippets"
    },
    "95a2f9b4-50cb-34f1-ba87-762082a83933": {
      "content": "try {\n  ${0:${VISUAL}}\n} catch (${1:Exception e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/snippets"
    },
    "95a8b7c7-cf3f-35d7-b4b8-fac6ea08ba01": {
      "content": "${1:FIELDNAME} = forms.IntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IntegerField",
      "matches": {
        "fint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "95aec80c-6175-301a-b520-15b64ef2b359": {
      "content": "var $1 = new sap.m.ResponsivePopover({\n\t\t\tplacement :$2 ,//sap.m.PlacementType (default: sap.m.PlacementType.Right)\n\t\t\tshowHeader :$3 ,//boolean (default: true)\n\t\t\ttitle : $4,//string\n\t\t\ticon :$5 ,//sap.ui.core.URI\n\t\t\tmodal :$6 ,// boolean\n\t\t\toffsetX :$7, //int\n\t\t\toffsetY :$8, //int\n\t\t\tcontentWidth : $9,//sap.ui.core.CSSSize\n\t\t\tcontentHeight :$10, //sap.ui.core.CSSSize\n\t\t\thorizontalScrolling :$11, //boolean\n\t\t\tverticalScrolling :$12, //boolean\n\t\t\tshowCloseButton :$13, //boolean (default: true)\n\t\t\t//Aggregations\n\t\t\tcontent :$14,  //sap.ui.core.Control[]\n\t\t\tcustomHeader :$15,  //sap.m.IBar\n\t\t\tsubHeader : $16, //sap.m.IBar\n\t\t\tbeginButton :$17,  //sap.m.Button\n\t\t\tendButton : $18, //sap.m.Button\n\t\t\t//Associations\n\t\t\tinitialFocus : $19, //string | sap.ui.core.Control\n\t\t\t//Events\n\t\t\tbeforeOpen :$20,  //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tafterOpen : $21, //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tbeforeClose : $22, //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tafterClose : $23 //fnList\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmresponsivepopup": true
      },
      "source": "vim-snippets/snippets"
    },
    "95b79a1a-05bc-3cb8-8048-c76e67ddade4": {
      "content": "<% ${1:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "<%",
      "matches": {
        "<%": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "95c4eacc-98d3-3fe5-b3ae-12040a3b5a34": {
      "content": "import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\nimport { ${1:Model} } from '${2:../core}';\n\n@Injectable({ providedIn: ${3:'root'} })\nexport class ${1:Model}Service extends EntityCollectionServiceBase<${1:Model}> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('${1:Model}', serviceElementsFactory);\n  }\n}",
      "doc": "NgRx Data Entity Collection Data Service",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-entity-collection-data-service",
      "matches": {
        "a-ngrx-data-entity-collection-data-service": true,
        "angular ng rx data entity collection service": true
      },
      "source": "javascript/angular"
    },
    "95c5b972-42dc-311a-8745-ff2298e9183a": {
      "content": "exit when ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "exit when",
      "matches": {
        "ex": true
      },
      "source": "vim-snippets/snippets"
    },
    "95c676c1-a94d-37d0-a0cb-4c408f67185c": {
      "content": "<?php\n/**\n * ${1:}\n */\nclass ${2:Site}Controller extends ${3:CController}\n{\n\t  public function action${4:Index}()\n\t  {\n\t      ${0}\n\t  }\n\t// -----------------------------------------------------------\n\t// Uncomment the following methods and override them if needed\n\t/*\n\tpublic function filters()\n\t{\n\t\t// return the filter configuration for this controller, e.g.:\n\t\treturn array(\n\t\t\t'inlineFilterName',\n\t\t\tarray(\n\t\t\t\t'class'=>'path.to.FilterClass',\n\t\t\t\t'propertyName'=>'propertyValue',\n\t\t\t),\n\t\t);\n\t}\n\tpublic function actions()\n\t{\n\t\t// return external action classes, e.g.:\n\t\treturn array(\n\t\t\t'action1'=>'path.to.ActionClass',\n\t\t\t'action2'=>array(\n\t\t\t\t'class'=>'path.to.AnotherActionClass',\n\t\t\t\t'propertyName'=>'propertyValue',\n\t\t\t),\n\t\t);\n\t}\n\t*/\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycontroller": true
      },
      "source": "vim-snippets/snippets"
    },
    "95cd6ea3-7d77-3d9c-b4ab-53d4af2a0331": {
      "content": "${1:FIELDNAME} = models.DecimalField(max_digits=${2}, decimal_places=${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "decimal": true
      },
      "source": "vim-snippets/snippets"
    },
    "95ce7342-ed01-34f4-9e38-7b5fcf556e72": {
      "content": "overflow-y: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "95cf1711-7789-39b9-bc08-6bcb3803b82d": {
      "content": "class ${1:#:name} {\n    ${2}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class-without-constructor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "95dae8e8-d5b5-315c-b194-a648d98aa503": {
      "content": "if ARGV.${1}\n\tabort \"Usage: #{$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usai": true
      },
      "source": "vim-snippets/snippets"
    },
    "95daf4af-59f4-378a-9771-40109db497d1": {
      "content": "require('dotenv').config({ path: '${1:/full/custom/path/to/your/env/vars}' })",
      "doc": "You may specify a custom path if your file containing environment variables is located elsewhere.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-path",
      "matches": {
        "dotenv path": true
      },
      "source": "javascript/dotenv"
    },
    "95f304ff-2597-3b6d-ba5a-3e02d6aec220": {
      "content": "for ${1:i},${2:v} in pairs(${3:table_name}) do\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forp": true
      },
      "source": "vim-snippets/snippets"
    },
    "96114f63-982f-39bd-80fc-584091462bf8": {
      "content": "_.create(${prototype}, ${properties})",
      "doc": "function Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\nfunction Circle() {\n  Shape.call(this);\n}\n\nCircle.prototype = _.create(Shape.prototype, {\n  'constructor': Circle\n});\n\nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n\ncircle instanceof Shape;\n// => true\n\nCreates an object that inherits from the `prototype` object. If a\n`properties` object is given, its own enumerable string keyed properties\nare assigned to the created object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-create",
      "matches": {
        "lodash create": true
      },
      "source": "javascript/lodash"
    },
    "96136360-6005-3058-9d25-490e44a6ea10": {
      "content": "default:\n  ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      },
      "source": "vim-snippets/snippets"
    },
    "96151ae1-b3e6-3d83-8d45-1ce9f5e9d962": {
      "content": "overflow-y: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "9624f43b-42a4-3fa6-b6f6-21eafcbadd4d": {
      "content": "page-break-after auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "962e9062-2563-3513-840a-6353f928f37e": {
      "content": "dbg!(&${1});\n${0}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "dbg! debugging macro statement",
      "matches": {
        "d;": true
      },
      "source": "vim-snippets/snippets"
    },
    "9630f65e-1aaa-3ef9-b2ca-e3a044ef8a14": {
      "content": "import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: ${1:'root'} })\nexport class ${2:YourResolver} implements Resolve<${3:ObjectToResolve}> {\n\tresolve(route: ActivatedRouteSnapshot): Observable<${3:ObjectToResolve}> | Promise<${3:ObjectToResolve}> | ${3:ObjectToResolve} {\n\t\treturn ${0};\n\t}\n}",
      "doc": "Angular Resolver",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-resolver",
      "matches": {
        "a-resolver": true,
        "angular resolver": true
      },
      "source": "javascript/angular"
    },
    "9640c1d0-d8ad-3948-af2d-86e94f8330f6": {
      "content": "if (${1:#:condition}) {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "if (...) {...}",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "96585d04-f83a-3370-8ca0-d4c0b55b2d81": {
      "content": "useImperativeHandle(\n\t${1:ref},\n\t() => {\n\t\t${2:handler}\n\t},\n\t[${3:input}],\n)",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useImperativeHandle",
      "matches": {
        "useImperativeHandle": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "965bc7d4-c0c6-3834-91d6-0a5d3647f652": {
      "content": "max(${1:value1}, ${2:value2}${3:, }${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "max": true
      },
      "source": "vim-snippets/snippets"
    },
    "96689b91-82e2-3065-a253-d8314aab450b": {
      "content": "const ${1:module} = require('${1:module}');",
      "doc": "require assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-assignment",
      "matches": {
        "base require assignment": true
      },
      "source": "javascript/base"
    },
    "96711912-a26b-3c20-ae6d-915feb2f0646": {
      "content": "${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dthen": true
      },
      "source": "snippets/coffee"
    },
    "96794ac1-52ac-30f2-bd27-cecc36007111": {
      "content": "import ${0:Http}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "96799a1e-0114-3fa1-bacc-c62b8deb3c58": {
      "content": "switch(${1:/* variable */})\n{\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "9680ac57-89b9-3677-a8f1-5e84620dbc16": {
      "content": "border-right: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9681458a-5ff3-31b3-a8a8-7cd68db7733c": {
      "content": "before_each(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "before_each(func)",
      "matches": {
        "before_each": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "968396c8-a013-3cda-8d7e-b5d0d507b56e": {
      "content": ":${1:#:text}:\n: :\n: :\n: :",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "simple_table",
      "matches": {
        "table_simple": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9688a6c3-fdb6-3421-89da-532e2bedee5c": {
      "content": "$('${1:selector}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jj": true
      },
      "source": "snippets/javascript"
    },
    "968cbe60-fe8b-3ef2-9b45-bee25929d4db": {
      "content": "\\\\maketitle",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "maketitle",
      "matches": {
        "mkt": true
      },
      "source": "vim-snippets/snippets"
    },
    "968d5c35-5a90-38e2-bc08-2f47f4ebee92": {
      "content": "<value>${0:#:description}</value>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<value></value>",
      "matches": {
        "value": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "968e80cc-95c7-3207-a84e-5f281a44a2bf": {
      "content": "${1:public} int ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      },
      "source": "vim-snippets/snippets"
    },
    "969541ac-6809-3897-bb5a-a5c6a2d34b29": {
      "content": "map[${1:string}]${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "map[Type]Type",
      "matches": {
        "map": true
      },
      "source": "gosnippets/snippets"
    },
    "969721b9-3f23-3da3-9f96-7465746e842b": {
      "content": "validates_numericality_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of",
      "matches": {
        "vn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "969fc8f2-7e5a-3e57-9dc7-fdb5aa6a85c3": {
      "content": "${1:obj}.dequeue(${2:'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deq": true
      },
      "source": "snippets/coffee"
    },
    "96a57316-eece-367c-adc8-db4eda2b66c3": {
      "content": "const ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "const (con)",
      "matches": {
        "con": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "96a7b1ca-f5d4-31f6-bb6e-d2944d293a53": {
      "content": "echo CHtml::mailto('${1:text}', '${2:email}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhmt": true
      },
      "source": "vim-snippets/snippets"
    },
    "96aba13d-d7af-3f56-b93e-a49809c4615b": {
      "content": "border-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      },
      "source": "vim-snippets/snippets"
    },
    "96b5f03d-d97b-3cee-aad1-87a61a7beb23": {
      "content": "(map ${1:func} ${0:coll})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "96b6095e-454a-3436-b10f-641746de1720": {
      "content": "for ${1:i} in ${2} ${3:to} ${4} loop\n\t${5}\nend loop;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "96b67b23-9a21-3240-ad08-8a16e78dba0c": {
      "content": "useMemo(() => ${1:function}, ${2:input})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useMemo",
      "matches": {
        "useMemo": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "96c5351f-ca3c-3ff3-a2e6-cff579193efc": {
      "content": ".. caution::\n\t${0:Watch out!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cau:": true
      },
      "source": "vim-snippets/snippets"
    },
    "96d0f1a0-5aaf-3414-981f-edd7a3bc6ff5": {
      "content": "#![feature(phase)]\n#[phase(plugin, link)] extern crate log;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate log",
      "matches": {
        "ecl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "96d31ee9-8921-3e06-b2e9-a859e7b3689a": {
      "content": "when (${1:${VISUAL}}) {\n\t${2} -> ${3}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whe": true
      },
      "source": "vim-snippets/snippets"
    },
    "96d45a18-4f08-32ef-8bef-e6d630e63e2f": {
      "content": "${1:obj}.prop('${2:property name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      },
      "source": "snippets/javascript"
    },
    "96d5a43e-5fa7-336b-8959-4e9f14e67817": {
      "content": "elsif (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "96dcce8c-f9bb-3fa5-82fa-4530e071a425": {
      "content": "overflow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      },
      "source": "vim-snippets/snippets"
    },
    "96e30378-abab-3202-b21c-69516e5ff496": {
      "content": "_.every(${collection}, ${predicate})",
      "doc": "_.every([true, 1, null, 'yes'], Boolean);\n// => false\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.every(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.every(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.every(users, 'active');\n// => false\n\nChecks if `predicate` returns truthy for **all** elements of `collection`.\nIteration is stopped once `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index|key, collection).\n\n**Note:** This method returns `true` for\n[empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n[everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\nelements of empty collections.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-every",
      "matches": {
        "lodash every": true
      },
      "source": "javascript/lodash"
    },
    "96f29c00-139e-3356-bdef-1fb988e6d168": {
      "content": "module.exports = ${1};",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ex": true
      },
      "source": "snippets/javascript"
    },
    "96f63be5-1afc-3b44-b48e-30bbb4af3b7f": {
      "content": "${1:deferred}.promise(${2:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprom": true
      },
      "source": "snippets/javascript"
    },
    "96fd022f-97cf-3774-8732-00bae260b304": {
      "content": "white-space-collapse ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      },
      "source": "vim-snippets/snippets"
    },
    "96ffc49a-630e-3598-b232-cd46f5c7aea0": {
      "content": "constructor(${1:arguments}) {\n\tsuper(${1:arguments});${0}\n}",
      "doc": "class constructor (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "class-constructor-es6-",
      "matches": {
        "base class constructor": true
      },
      "source": "javascript/base"
    },
    "9704a49b-c625-36c7-828c-190ed89811a0": {
      "content": "t.integer :lock_version, null: false, default: 0\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create lock_version column",
      "matches": {
        "tcl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "970810ce-89be-3375-9a35-165f0b75f021": {
      "content": "<template>\n\t<div>\n\t</div>\n</template>\n<script>\n\texport default{\n\t\t${0}\n\t}\n</script>\n<style scoped>\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vbase": true
      },
      "source": "vim-snippets/snippets"
    },
    "9717eaf6-f280-3ec8-86e0-01825e479842": {
      "content": "for ${1:lowerbound} to ${2:upperbound}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forto": true
      },
      "source": "vim-snippets/snippets"
    },
    "971bdde8-6b40-3d0c-b9c2-a7421b137199": {
      "content": "<pre>\n${1}\n</pre>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "971c81a5-0018-3f74-8e35-08e2ba033289": {
      "content": "const ${controls} = useAnimation()",
      "doc": "useAnimation()\nuseAnimation hook can be used to create a set of imperative AnimationControls with a start and stop method.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-animation",
      "matches": {
        "framer-motion use-animation": true,
        "use-animation": true
      },
      "source": "javascript/framer-motion"
    },
    "9721b6d4-1888-384c-a512-29ccfb7af2b5": {
      "content": "${1:obj}.click (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "click": true
      },
      "source": "snippets/coffee"
    },
    "972b0be4-5114-30a4-8b58-f2482f8d0c49": {
      "content": "key = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "key": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "97345d6a-58d0-3fea-a378-7377a1f29dce": {
      "content": "${1:int}[${2:string}] ${3:dict} = ${0};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      },
      "source": "vim-snippets/snippets"
    },
    "9734878e-5541-3301-b961-1f5b9a0c89df": {
      "content": "Wait Until Element Contains    ${1:${locator}}    ${2:${text}}    ${3:${timeout=None}}    ${4:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Contains",
      "matches": {
        "wuec": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9738fe32-8a7f-3c62-85a2-ed75095cd8ce": {
      "content": "<VirtualHost ${1:*}:${2:80}>\n\tServerAdmin ${3:webmaster@example.com}\n\tDocumentRoot ${4:/www/example.com}\n\tServerName ${0:www.example.com}\n</VirtualHost>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "virtualhost": true
      },
      "source": "vim-snippets/snippets"
    },
    "973e53ec-042f-3791-9f63-7ec63420b86c": {
      "content": "public static ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts public static method",
      "matches": {
        "tpsmet": true
      },
      "source": "vim-snippets/snippets"
    },
    "973f0a48-8555-314a-b7eb-adbd3d292791": {
      "content": "${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\n\t${0}\n};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      },
      "source": "vim-snippets/snippets"
    },
    "97423e95-af7f-3553-960b-63c0d7c93193": {
      "content": "let ${1:x} = ${2:v} in\n${3:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let .. in binding",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "97427257-b865-3ca4-a048-1a022e73f6d9": {
      "content": "private:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "private (priv)",
      "matches": {
        "priv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "974d9db9-89f1-384c-8ed1-b22418599b9a": {
      "content": "table-layout: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "975acc4a-ef44-3c22-9679-9b4899d7b7f4": {
      "content": "#' @description\n#'\n#' ${1:function description}\n#'\n#' ${2:@param ${3:name}::${4:Type} ${5:Description}}\n#'\n#' ${6:@returns ${7:name}::${8:Type} ${9:Description}}\n#'\n#' @examples\n#'\n#' ${10: function call examples}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function documentation",
      "matches": {
        "docf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "975bebce-ac7e-3974-9fed-72d3b88fc30d": {
      "content": "expect(${1:target}).not.toBeFalsy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be falsy (js)",
      "matches": {
        "notf": true
      },
      "source": "vim-snippets/snippets"
    },
    "975c074e-aa7b-3842-a49a-03a636c57203": {
      "content": "beforeEnter(el) {\n\tconsole.log('beforeEnter');\n},\nenter(el, done) {\n\tconsole.log('enter');\n\tdone();\n},\nbeforeLeave(el) {\n\tconsole.log('beforeLeave');\n},\nleave(el, done) {\n\tconsole.log('leave');\n\tdone();\n},",
      "doc": "transition component js hooks",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Transition Methods with JavaScript Hooks",
      "matches": {
        "vanimhook-js": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "975fef3e-3de9-312d-8582-65c49c672ed3": {
      "content": "height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      },
      "source": "vim-snippets/snippets"
    },
    "97630957-b3c6-3003-b4e1-d8e9820eaf73": {
      "content": "<dt id=\"${1}\">${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt#": true
      },
      "source": "vim-snippets/snippets"
    },
    "9763edaa-e9bf-309f-af16-5ab73cfa3b15": {
      "content": "(scope, element, attrs${1:ctrl}) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdlf": true
      },
      "source": "snippets/coffee"
    },
    "9768e4c5-5ced-3030-a67f-7d18f315bb89": {
      "content": "=> $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "=> ",
      "matches": {
        "=": true
      },
      "source": "vim-snippets/snippets"
    },
    "976c6db7-60ca-3d09-8ded-2dc62887d385": {
      "content": "expect($1).toBeInstanceOf($0);",
      "doc": "expects the argument is less than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobeinstanceof",
      "matches": {
        "jest expect tobeinstanceof": true,
        "tbi": true
      },
      "source": "javascript/jest"
    },
    "976da79f-7970-3755-8c47-d3256318b499": {
      "content": "public ${1:object} this[${2:int} index]\n{\n\tget { ${0} }\n\tset { ${0} }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "index": true
      },
      "source": "vim-snippets/snippets"
    },
    "978049c1-3c13-3d1d-86cc-b4d75afb671b": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9783d742-42ba-3913-bb23-dfc60232c7a6": {
      "content": "while(${1:cond}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "978c666f-9896-3978-a2e1-a5e18e7442c5": {
      "content": "object.from()",
      "doc": "object.from(fromKey: string, toKey: string, alias: boolean = false): Schema\n\nTransforms the specified key to a new key. If alias is true then the old key will be left.let schema = object({\n  myProp: mixed(),\n  Other: mixed()\n})\n  .from(\"prop\", \"myProp\")\n  .from(\"other\", \"Other\", true);\n\nschema.cast({ prop: 5, other: 6 }); // => { myProp: 5, other: 6, Other: 6 }\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-from",
      "matches": {
        "yup object from": true
      },
      "source": "javascript/yup"
    },
    "978ec010-14c7-3056-be01-0cdd218e7c8e": {
      "content": "<input type=\"file\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:file": true
      },
      "source": "vim-snippets/snippets"
    },
    "979208b8-41ab-3431-a6d8-8bbfa4525be9": {
      "content": "${1:fn} : ${2:a}\n$1 =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      },
      "source": "vim-snippets/snippets"
    },
    "9792f774-43ea-3c69-bb62-f95412ef60b2": {
      "content": "border-fit: overwrite;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "97937e35-4ff6-31cd-af53-36962de0fb50": {
      "content": "_.isArray(${value})",
      "doc": "_.isArray([1, 2, 3]);\n// => true\n\n_.isArray(document.body.children);\n// => false\n\n_.isArray('abc');\n// => false\n\n_.isArray(_.noop);\n// => false\n\nChecks if `value` is classified as an `Array` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarray",
      "matches": {
        "lodash isarray": true
      },
      "source": "javascript/lodash"
    },
    "979840bd-eaee-39c3-b01c-0482fe4c51d0": {
      "content": "${1:obj}.fadeOut 'slow/400/fast', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeoutc": true
      },
      "source": "snippets/coffee"
    },
    "979a7253-be90-38e8-b5d9-380e8b16644c": {
      "content": "- if ${1:condition}.presence?\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifp": true
      },
      "source": "vim-snippets/snippets"
    },
    "97b278c5-1785-33db-8420-3933f8b1afb0": {
      "content": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addsp": true
      },
      "source": "vim-snippets/snippets"
    },
    "97b864d6-3e55-3214-8ee7-c5313e538f5d": {
      "content": "content normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "97bc5928-67e4-37bb-a0a0-a84d50553d11": {
      "content": "list-style-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      },
      "source": "vim-snippets/snippets"
    },
    "97c8642c-0de5-389c-8b68-ad4e7642bf5c": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}\n${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "97cf1e13-9fbe-362f-9eb4-0207086167a2": {
      "content": "_.padEnd(${string}, ${length}, ${chars})",
      "doc": "_.padEnd('abc', 6);\n// => 'abc   '\n\n_.padEnd('abc', 6, '_-');\n// => 'abc_-_'\n\n_.padEnd('abc', 3);\n// => 'abc'\n\nPads `string` on the right side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-padend",
      "matches": {
        "lodash padend": true
      },
      "source": "javascript/lodash"
    },
    "97d7ecd1-10d6-3a25-84c4-07094d202d8e": {
      "content": "word-wrap: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "97e07e6c-5f12-343e-8adc-5f7036758771": {
      "content": "[<EntryPoint>]\nlet main argv =\n\t${0}\n\t0",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "97e32cdc-638a-3cca-8f1a-e1e81ace3c5f": {
      "content": "if ${1:condition}; then\n\t${2:${VISUAL}}\nelse\n\t${0:# statements}\nfi",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "97e408b2-00fc-3ab2-b701-7388b04f63bf": {
      "content": "var (\n\t${1} ${2} = ${3}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variables declaration",
      "matches": {
        "vars": true
      },
      "source": "vim-snippets/snippets"
    },
    "97e91b11-4dbd-3e71-bf6b-405462faad1f": {
      "content": "scope :${1:name}, lambda { |${2:param}| ${3:where(${4::${5:field}: ${6:\"${7:value}\"}})} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope lambda",
      "matches": {
        "scopel": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "97fc0ef9-70cd-3962-92ab-22b74d9deab4": {
      "content": "flex-direction: ${0:row};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd": true
      },
      "source": "vim-snippets/snippets"
    },
    "980a9212-d793-3916-8043-11e389b08926": {
      "content": "using (${1:resource})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "using statement",
      "matches": {
        "using": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "98175780-031f-31b5-aa07-f33f0070e533": {
      "content": "::before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "981a9516-0b67-3583-bc32-b206a7fb0a8f": {
      "content": "${1:deferred}.notify(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotify": true
      },
      "source": "snippets/coffee"
    },
    "981bf36f-3619-3e88-b8c9-e8070b859c11": {
      "content": "grid-auto-rows: max-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "9822a870-4908-33bd-964f-29fae7e4fa70": {
      "content": "This Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n${0}",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "",
      "matches": {
        "MPL2": true
      },
      "source": "vim-snippets/snippets"
    },
    "98310100-eec4-3666-8430-27de955a5144": {
      "content": "\"${1:key}\": {\n\t${VISUAL}$0\n},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Named object",
      "matches": {
        "no": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9835fa46-c926-3203-b8e9-d3793bc2143e": {
      "content": "else\n\t${1}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "983cb43e-f317-3934-8804-7935c682548f": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassExportComponentWithPropTypes",
      "matches": {
        "rcep": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "983f217a-bd64-31ec-a3b4-1b60700930fe": {
      "content": "class ${0:ModelName}Inline(admin.TabularInline):\n\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tabularinline": true
      },
      "source": "vim-snippets/snippets"
    },
    "9846f6cf-c03f-3d41-8f30-319f07aae27c": {
      "content": "allow(${1:object}).to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "allow": true
      },
      "source": "vim-snippets/snippets"
    },
    "984ea581-0108-3fc3-9699-1d170bedcbaf": {
      "content": "for (let ${1:prop} in ${2:object}) {\n\t${0:$2[$1]}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "snippets/javascript"
    },
    "9851fa3c-5fe9-3be7-9301-32bf17f0906b": {
      "content": "t.integer :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.integer (tci)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9853f917-ad01-3aad-a355-57e393e1db53": {
      "content": "${1:obj}.unwrap()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unwrap": true
      },
      "source": "snippets/javascript"
    },
    "9870d262-349f-3b5d-8c3f-d0b7f4fa522d": {
      "content": "justify-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "987d2f73-45b8-34c6-80a8-1f30ddcf8087": {
      "content": "t.time :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.time (tcti)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9883663c-3e68-39e4-9e0a-8e3ec11fb6f9": {
      "content": "class ${1:MODEL_NAME}UpdateView(UpdateView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Update View",
      "matches": {
        "updateview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9893ae99-41e7-3871-b106-5e57bd49c175": {
      "content": "font-family: ${1:Arial, \"MS Trebuchet\"}, ${2:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-family:   family (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "98984351-4a29-36d3-9d5a-5bdfbb77ab65": {
      "content": "\\begin{itemize}\n\t\\item ${1:TARGET}\n\\end{itemize}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{itemize} \\itemize": true,
        "itemize": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "98a20d6b-3a25-313d-8341-d2bff3cda5cd": {
      "content": "struct ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "98a64d35-b69b-3380-93c5-e81a31481109": {
      "content": "# Link resource\nlink ${1:\"/target/file\"} do # The file name of the link\n\t${2:#}to ${3} # The real file you want to link to\n\t${4:#}link_type ${5:symbolic} # Either :symbolic or :hard\n\t${6:#}owner ${7} # The owner of the symlink\n\t${8:#}group ${9} # The group of the symlink\n\t${10:#}${11:action :create} # Create a link (Default)\n\t${12:#}${0:action :delete} # Delete a link\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      },
      "source": "vim-snippets/snippets"
    },
    "98a88d72-be48-3bb6-8bf1-93904931cb6a": {
      "content": "axios.interceptors.response.use(function (response) {\n\t${1:do something}\nreturn response;\n}, function (error) {\n\t${2:do something}\n$return Promise.reject(error);\n});",
      "doc": "You can intercept responses before they are handled by then or catch.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-interceptors-response",
      "matches": {
        "axios interceptors response": true
      },
      "source": "javascript/axios"
    },
    "98ab95ca-7a74-3b44-aa23-44dd7c3bd81c": {
      "content": "place-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "98ac772a-a8a0-3557-a13c-66b058ce914b": {
      "content": "@callback ${1:name}(${2:args}) :: ${3:returns}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "98ad5076-1fbe-3213-9a4a-00c376327ea4": {
      "content": "<input type=\"color\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:color": true
      },
      "source": "vim-snippets/snippets"
    },
    "98b6431d-7d3c-30bb-910b-58a1959d40de": {
      "content": "info(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "info": true
      },
      "source": "vim-snippets/snippets"
    },
    "98b7eae3-d154-3abd-8a0b-303e43e0b7df": {
      "content": "export const ${1:exportVariable} = ${2:localVariable};\n",
      "doc": "Export named variable in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportNamedVariable",
      "matches": {
        "env": true
      },
      "source": "vscode-javascript/snippets"
    },
    "98b968b9-0d8a-3d75-993c-254da841bf6d": {
      "content": "mixed.typeError()",
      "doc": "mixed.typeError(message: string): Schema\n\nDefine an error message for failed type checks. The ${value} and ${type} interpolation can\nbe used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-type-error",
      "matches": {
        "yup mixed typeerror": true
      },
      "source": "javascript/yup"
    },
    "98c19718-197e-34f8-95a9-e994e8ee6743": {
      "content": "**${1}**${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "**strong**",
      "matches": {
        "strong1": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "98c69237-ebb6-3154-b19e-b4b0450eeb9b": {
      "content": "% if ${1:condition}:\n\t${0:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "98d9b88a-3d9f-30c8-8325-d044dc2e12cb": {
      "content": "match '${1:${2::controller}${3:/${4::action}${5:/${6::id}${7:(.:format)}}}}'${8: '${9:$2}#${10:$4}'${11:, as: :${12:$10}}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "98d9d80f-9565-3e19-953e-fdb15e7f0904": {
      "content": "each_cons(${1:2}) { |${2:group}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "each_cons(..) { |group| .. }",
      "matches": {
        "eac-": true
      },
      "source": "vim-snippets/snippets"
    },
    "98de7387-3ec7-3c7c-a7f6-17b909b7c533": {
      "content": "map do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapd": true
      },
      "source": "vim-snippets/snippets"
    },
    "98e4656d-8c37-388b-9f93-8c8c2370e437": {
      "content": "while ${1:condition} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "98e4c664-fd99-3a7b-bbe2-f578a1d8fa6e": {
      "content": ":last-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      },
      "source": "vim-snippets/snippets"
    },
    "98ecb826-9534-3949-aedc-173310bf677a": {
      "content": "<em>${0}</em>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "em": true
      },
      "source": "vim-snippets/snippets"
    },
    "9903889f-ae00-3616-b6e0-c5f3e7e3b5ba": {
      "content": "font-effect ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      },
      "source": "vim-snippets/snippets"
    },
    "9909f00c-769b-3589-baf9-b0d89b18e7de": {
      "content": "try\n\t${1:${VISUAL}}\ncatch\n\t${2:_:_} -> ${0:got_some_exception}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "99193c43-e009-3a52-a806-b93716ada4f2": {
      "content": "{% schema %}\n\t{\n\t\t\"name\": \"${1}\",\n\t\t\"class\": \"${2}\",\n\t\t\"settings\": [\n\t\t\t${0}\n\t\t]\n\t}\n{% endschema %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_schema": true
      },
      "source": "vim-snippets/snippets"
    },
    "992514ab-051c-3bce-874f-c8c7af407828": {
      "content": "filter '${1:filterName}', (${2:injectables}) ->\n\t(input, ${3:args}) ->\n\t\t${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmfi": true
      },
      "source": "snippets/coffee"
    },
    "9927822e-393c-377c-9d33-535f26377692": {
      "content": "${1:FIELDNAME} = models.PositiveSmallIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PositiveSmallIntegerField",
      "matches": {
        "mpossmallint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "99302c76-3a3e-3269-8da9-90d597e1ccc4": {
      "content": "{#each ${1:items} as ${2:item}, ${3:i}}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-block",
      "matches": {
        "sveach-index": true,
        "svelte each index": true
      },
      "source": "javascript/svelte"
    },
    "9931a355-4613-327a-9063-2fb64ef2110d": {
      "content": "while(${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "993bac65-e41a-3456-a67c-d2f4fbbdfeda": {
      "content": "grep(${1:/pattern/}) { |${2:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      },
      "source": "vim-snippets/snippets"
    },
    "993bdede-3450-3d2b-a6cd-41466988d85f": {
      "content": "content: no-open-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      },
      "source": "vim-snippets/snippets"
    },
    "993bf94d-f391-368e-9155-47eda299f8fc": {
      "content": "require 'test_helper'\n\nclass ${1:Model}ControllerTest < ActionController::TestCase\n\ttest$0\nend\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create functional test class",
      "matches": {
        "clact": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "993e7514-6259-36c8-b848-0442cb1b9b27": {
      "content": "{% module ${0:expression} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "module": true
      },
      "source": "vim-snippets/snippets"
    },
    "9941ec60-b2f3-3bcb-856a-befb76b15dd9": {
      "content": "{{#if ${1:value}}}\n${2:${VISUAL}}\n{{else}}\n${3}\n{{/if}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#if value}} ... {{else}} .. {{/if}}",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "99438216-a97b-3572-9ab5-204b89608bd3": {
      "content": "border-bottom-left-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "994a9fc8-61f7-3d39-aa3f-966501daeee0": {
      "content": "extends ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "9952a74a-fb19-3445-864a-09ddd4fafb44": {
      "content": "(${1:x}) => ${2:x}${0:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      },
      "source": "vim-snippets/snippets"
    },
    "995e5f2e-d1f0-372b-94c2-e3d91f46104d": {
      "content": "grid-auto-flow column",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "9962ceb9-cf64-35ab-a33a-28dac96e32a0": {
      "content": "overflow-style: move;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      },
      "source": "vim-snippets/snippets"
    },
    "99692f34-da49-3bff-a519-d8a5afe83542": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      },
      "source": "vscode-react/snippets"
    },
    "996e1770-3aed-3904-9a70-60e9a2abb896": {
      "content": "<button type=\"submit\" [disabled]=\"!${1:form}.form.valid\">\n\tSave\n</button>",
      "doc": "Angular form submit",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormSubmit",
      "matches": {
        "a-form-submit": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "996f8d7a-4dc9-3b80-9af5-1d6cfaa3a6f5": {
      "content": "expect(${1:target})$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect (js)",
      "matches": {
        "ex": true
      },
      "source": "vim-snippets/snippets"
    },
    "99826d53-6556-37c7-9603-048596b45878": {
      "content": "{% codeblock %}\n${0:code_snippet}\n{% endcodeblock %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "codeblock-short": true
      },
      "source": "vim-snippets/snippets"
    },
    "9989b425-91f3-30a4-94f9-0af30e1cb086": {
      "content": "\\begin{trivlist}\n\t${1:TARGET}\n\\end{trivlist}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{trivlist} \\trivlist": true,
        "trivlist": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9992aaee-0898-3515-9cc8-b4d44e08115e": {
      "content": "<c:redirect url=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "credirect": true
      },
      "source": "vim-snippets/snippets"
    },
    "99949672-c542-3876-ba8d-91c04867ef1b": {
      "content": "echo CHtml::ajax(array(${0}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaj": true
      },
      "source": "vim-snippets/snippets"
    },
    "9996665d-3767-3348-aabe-b5964a66163c": {
      "content": "self.${1:var_name} = kwargs.get('$1', ${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kwg": true
      },
      "source": "vim-snippets/snippets"
    },
    "99997282-a4d5-31cb-8f3e-08b7d5461588": {
      "content": "{%- continue -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "continue-": true
      },
      "source": "vim-snippets/snippets"
    },
    "99a47161-da86-3b22-8e0c-f89dac0e3347": {
      "content": "import React from 'react'\nimport renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from 'src/store'\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(\n\t\t<Provider store={store}>\n\t\t <${1:${TM_FILENAME_BASE}} {...defaultProps} />\n\t\t</Provider>,\n\t)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "Create test component",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setupReactComponentTestWithRedux",
      "matches": {
        "srtest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "99aaa29e-d07b-3940-b026-2fdf9653490f": {
      "content": "clear: both;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "99baa560-755b-3136-842b-8627d8c30903": {
      "content": "${1:void }${2:name}(${3}) {\n\t${4://if not void return null;}\n}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "99cae20e-1260-3ddb-98cd-9618cce45f68": {
      "content": "impl ${1:Type/Trait}${2: for $3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct/Trait implementation",
      "matches": {
        "impl": true
      },
      "source": "vim-snippets/snippets"
    },
    "99caf127-5880-3217-9d59-4092b312a011": {
      "content": "expect(${1:target}).toBeLessThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be less than (js)",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "99cda141-4f59-3434-a5d1-be5455aa1f5d": {
      "content": "cursor: help;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      },
      "source": "vim-snippets/snippets"
    },
    "99d94032-ba5e-3b19-a3e2-60311c27ee99": {
      "content": "Open Browser    ${1:${url}}    ${2:${browser=firefox}}    ${3:${alias=None}}    ${4:${remote_url=False}}    ${5:${desired_capabilities=None}}    ${6:${ff_profile_dir=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Open Browser",
      "matches": {
        "ob": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "99dc5098-d1a7-3931-a570-c2f59bcc43f4": {
      "content": "font-emphasize-style: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "99dccf7d-173c-33cb-acbf-7320ed594d57": {
      "content": "head () {\n\treturn {\n\t\ttitle: ${1:'Page Title'},\n\t\tmeta: [\n\t\t\t// hid is used as unique identifier. Do not use `vmid` for it as it will not work\n\t\t\t{ hid: 'description', name: 'description', content: ${2:'My custom description'} }\n\t\t]\n\t}\n},",
      "doc": "Nuxt Head",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Head",
      "matches": {
        "nhead": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "99e355b3-b6e0-32cc-9919-b41a15af6cfc": {
      "content": "Plugin '${0}'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "Vundle.vim Plugin definition",
      "matches": {
        "bun": true
      },
      "source": "vim-snippets/snippets"
    },
    "99e7bd6d-5cf8-37f9-99c6-4e00337fcb70": {
      "content": "margin auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "99e80569-0e27-3b91-8dd1-1b9304fd20c8": {
      "content": "text-justify: distribute",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "99ebceba-c7e4-388f-aafb-e650fce66af3": {
      "content": "case ${1}:\n  ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "99f0f794-7046-3d5e-872a-4a6af7df2553": {
      "content": "@includeIf('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@includeIf directive",
      "matches": {
        "includeIf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "99f6d441-67a0-3ea8-a1a2-a349ec53490e": {
      "content": "<script>\n${1:TARGET}\n</script>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "99fc61ad-621e-3f4a-8d3c-10bf57ff8461": {
      "content": "export const state = () => ({\n\tvalue: 'myvalue'\n})\n\nexport const getters = {\n\tgetterValue: state => {\n\t\treturn state.value\n\t}\n}\n\nexport const mutations = {\n\tupdateValue: (state, payload) => {\n\t\tstate.value = payload\n\t}\n}\n\nexport const actions = {\n\tupdateActionValue({ commit }) {\n\t\tcommit('updateValue', payload)\n\t}\n}",
      "doc": "vuex store 2",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Store 2",
      "matches": {
        "vstore2": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9a1787db-635c-3022-8934-0440f52ecbef": {
      "content": "align-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a191cb0-805e-3ae8-af42-9472a16ac400": {
      "content": "<style type=\"text/css\" media=\"${1:all}\">\n\t${0}\n</style>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "style": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a19f2c1-0463-36fc-9438-6e016ca8d781": {
      "content": "Boolean",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a1b3745-1953-3a30-b509-d000f3247d26": {
      "content": "% if ${1:condition}:\n\t${2:}\n% else:\n\t${3:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9a32d982-9ad4-3f36-b51c-ac31f7550e70": {
      "content": "try {\n}catch(${1}) {\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a41b9dc-937b-3e70-87f2-11cc34538032": {
      "content": "<h6 id=\"${1}\">${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6#": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a4478ac-3bd3-336a-be13-dfa9d27817eb": {
      "content": "internal bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&-": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a4d0128-250c-37c7-8cfb-e28f76a2acbd": {
      "content": "place-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a5e491e-f81d-33ae-94b4-47a2cdf6995c": {
      "content": "show errors;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a5f9800-a583-3abe-b09f-777cbd7c1a49": {
      "content": "_.reduce(${collection}, ${iteratee}, ${accumulator})",
      "doc": "_.reduce([1, 2], function(sum, n) {\n  return sum + n;\n}, 0);\n// => 3\n\n_.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n  return result;\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\nReduces `collection` to a value which is the accumulated result of running\neach element in `collection` thru `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not given, the first element of `collection` is used as the initial\nvalue. The iteratee is invoked with four arguments:\n(accumulator, value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.reduce`, `_.reduceRight`, and `_.transform`.\n\nThe guarded methods are:\n`assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\nand `sortBy`",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reduce",
      "matches": {
        "lodash reduce": true
      },
      "source": "javascript/lodash"
    },
    "9a6d35c9-b669-34f6-ab0f-6166ba056c73": {
      "content": "${1:name} <- function (${2:variables}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a6d8883-42f1-3206-9ed4-2879049b7a38": {
      "content": "after_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mad": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a6db386-7e33-3187-a094-92cd25de1cb3": {
      "content": "${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delay": true
      },
      "source": "snippets/coffee"
    },
    "9a7a2a3f-0502-319f-b55b-f7b9a4c6fa3a": {
      "content": "\\\\item ${1}\n\t${0:]i}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\item (recursive)",
      "matches": {
        "]i": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a7fcb13-18d8-3088-b4b4-44e81dcb92bd": {
      "content": "import { NgModule } from '@angular/core';\n\nimport { ${1:Name}Component } from './${2:name}.component';\n\n@NgModule({\n\timports: [],\n\texports: [],\n\tdeclarations: [${1:Name}Component],\n\tproviders: [],\n})\nexport class ${1:Name}Module { }\n$0",
      "doc": "Angular Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Module",
      "matches": {
        "a-module": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9a805ddf-3fd4-365b-90f9-811d8ebfc2a4": {
      "content": "<input type=\"submit\" value=\"$2\" $3/>$7",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9a90cb32-524a-3165-83a8-7a369d13e32e": {
      "content": "letter-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a94ae82-b622-3494-9c98-14063a0a613e": {
      "content": "<svelte:head>\n\t${1:<!-- head content -->}\n</svelte:head>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-head",
      "matches": {
        "svelte head": true,
        "svh": true
      },
      "source": "javascript/svelte"
    },
    "9a974cb7-148c-3126-ac73-8f7413528319": {
      "content": "livenessProbe:\n  httpGet:\n\tpath: /healthz\n\tport: 8080\n\tscheme: HTTP\n  initialDelaySeconds: 30\n  timeoutSeconds: 5\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "livenessProbe_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "9a995e70-5f63-3697-999f-061182f59170": {
      "content": "border-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-style: style (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9a9f5adf-15ef-362e-9363-dc19f21ae58e": {
      "content": "_.defaults(${object}, ${sources})",
      "doc": "_.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nAssigns own and inherited enumerable string keyed properties of source\nobjects to the destination object for all destination properties that\nresolve to `undefined`. Source objects are applied from left to right.\nOnce a property is set, additional values of the same property are ignored.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaults",
      "matches": {
        "lodash defaults": true
      },
      "source": "javascript/lodash"
    },
    "9aa13b79-ff2c-3d91-9487-ae3ecc1d651d": {
      "content": "| times: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "times": true
      },
      "source": "vim-snippets/snippets"
    },
    "9aa5869c-8196-3552-9d7f-b195b49505d1": {
      "content": "display none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9aa7ef24-e210-3cb1-9d30-db64102168c7": {
      "content": "Long",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lng": true
      },
      "source": "vim-snippets/snippets"
    },
    "9aaa60a2-b437-345d-804e-0055605ed75c": {
      "content": "break",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "break",
      "matches": {
        "br": true
      },
      "source": "gosnippets/snippets"
    },
    "9aad2d06-129e-38a5-8f47-28ad327258e0": {
      "content": "background none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ab7b0ce-219c-3118-9df4-e4df7012b7b1": {
      "content": "font-stretch semi-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9aba3b2b-bacd-3208-9b7d-88c599354f53": {
      "content": "margin: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ac0800d-a683-3de5-abf5-3e71ac1e326f": {
      "content": "align-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ac0e819-4afe-302a-9ff0-c26819da26f5": {
      "content": "fmt.Sprintf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Sprintf",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ac41313-113f-3900-846c-261bed21a001": {
      "content": "fetch(${1:name}) { |${2:key}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fet": true
      },
      "source": "vim-snippets/snippets"
    },
    "9adf562d-2111-3bc0-b930-381cee0d9b4c": {
      "content": "<link rel=\"stylesheet\" href=\"${1:style.css}\" type=\"text/css\" media=\"${2:all}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:css": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ae34bd1-6aac-3d7d-bf5b-cb6db0d57847": {
      "content": "@serialField ${1:#:name} ${2:#:type} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9ae730f9-0d7e-3aa6-944b-d21fc6e95d6e": {
      "content": "{% assign ${1:#:var} = ${2:#:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9aea4645-8fae-339b-9a3b-0c4d849889f8": {
      "content": "{% trans \"${1:string}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9af211c0-5c2a-30f9-8afc-0b23f9521d99": {
      "content": "def create\n\t@${1:model_class_name} = ${2:ModelClassName}.new($1_params)\n\trespond_to do |format|\n\t\tif @$1.save\n\t\t\tflash[:notice] = '$2 was successfully created.'\n\t\t\tformat.html { redirect_to(@$1) }\n\t\t\tformat.json  { render json: @$1, status: :created, location: @$1 }\n\t\telse\n\t\t\tformat.html { render action: 'new' }\n\t\t\tformat.json  { render json: @$1.errors, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defcreate": true
      },
      "source": "vim-snippets/snippets"
    },
    "9af26130-baf4-32be-92ea-13016075718b": {
      "content": "{% elseif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig elseif",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "9af7dbeb-5610-3f64-9901-4d210ff73056": {
      "content": "|${1}|",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      },
      "source": "vim-snippets/snippets"
    },
    "9afd06a2-164b-3511-9388-7c02b8b02ea8": {
      "content": "- (${1:unsigned int})${2:thing};\n- (void)set${2}:($1)new${2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Interface:AccessorsForPrimitiveType",
      "matches": {
        "iacc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b096c65-1b3e-3a77-985d-38ae34ca15ad": {
      "content": "Plug '${1}', { 'tag': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'tag': '' }",
      "matches": {
        "plugtag": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b0d168b-4f1b-3a44-bdb8-00c5a22f5008": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9b1262dc-cf02-3f4a-86b4-03a6173c2b6f": {
      "content": "\\\\${1:x} -> ${0:expression}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b180d21-560e-312c-8252-0bebfe0141f8": {
      "content": "<?xml version=\"1.0\"?>\n",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "XML declaration",
      "matches": {
        "xml": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9b1b55ac-bfd9-3299-8e55-67b6d6399a76": {
      "content": "$.trim('${1:string}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eltrim": true
      },
      "source": "snippets/coffee"
    },
    "9b1c120b-b3fb-3f57-a0a0-7b236df55527": {
      "content": "stopAllSounds();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ss": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b1e727d-eb67-349d-b2d9-792458ee40de": {
      "content": "duplicateMovieClip(${1:#:target}, ${2:#:newName}, ${3:#:depth});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b1eba8a-80f7-3320-97fb-ffadd7ba8615": {
      "content": "margin: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b2b34c8-11df-3e28-bc54-808105e496e2": {
      "content": "times { |${1:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tim": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b3d2a15-8b6b-3620-984c-143e83779164": {
      "content": "display: inline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b3d3a35-1d8b-322a-a8b5-c4abb35e3e89": {
      "content": "border-collapse: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b3deac8-3fbc-365b-b60e-fa0f0ee9a365": {
      "content": "fread(${1:ARRAY}, sizeof(${2:TYPE}), ${3:N_MEMBERS}, ${4:FILE})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fread(......, file)",
      "matches": {
        "fread": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b4044e5-2971-32dc-9363-46f06c669c61": {
      "content": "{\n\t\"type\": \"video_url\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"accept\": [\"youtube\", \"vimeo\"${0}],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${5}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_video": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b41fb46-7472-3745-9f06-8a4f8d0ddf7f": {
      "content": "import ${0:List}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b5c30a8-c041-3465-a174-a49e684592a6": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b6c04d1-90b6-39b4-a71f-6832836f9ba7": {
      "content": "<%= image_submit_tag('${1:agree.png}', id: '${2:id}'${0}) %>",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b75be88-ff65-39e0-9566-932ccdfae2c6": {
      "content": "align-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b788df2-a8b4-3d75-823a-1bb395d7b354": {
      "content": "<input type=\"reset\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:reset": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b7f24af-6d3e-31b9-8b13-3a93337423d8": {
      "content": "<%= render \"${1:index}.html\", ${2:var: @var} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b83d971-e72f-35bd-941e-7107d8924941": {
      "content": "@author ${0:$TM_FULLNAME}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "author": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b87a4c1-c2f4-3767-904c-43282fea1c92": {
      "content": "IO.puts \"${0}\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.puts",
      "matches": {
        "put": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b881510-1860-3179-b7fd-f8dc2c6bf94e": {
      "content": "detect do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detd": true
      },
      "source": "vim-snippets/snippets"
    },
    "9b8d9d9c-31ab-3438-bc9a-b3808456f471": {
      "content": "watch: {\n\t${1:data}(${2:newValue}, ${3:oldValue}) {\n\t\t${0}\n\t}\n},",
      "doc": "vue watcher",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-watchers",
      "matches": {
        "vue watchers": true,
        "vwatcher": true
      },
      "source": "javascript/vue"
    },
    "9b9708fb-c3bd-38a0-ac41-db74ec0f4ef8": {
      "content": "{% set ${1:#:var} = ${2:#:value} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% set ... = ... %}",
      "matches": {
        "set": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9b9e1dc2-f90d-3388-a00d-6e801f174df0": {
      "content": "green(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "green": true
      },
      "source": "vim-snippets/snippets"
    },
    "9babb08f-bd84-36ea-a143-67e1116504a6": {
      "content": "place-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bacbb8f-10de-34b3-b589-be071652b70a": {
      "content": "white-space: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bb1fb73-040f-3878-ba07-fba48580af29": {
      "content": "try\n{\n\t${0:${VISUAL}}\n}\ncatch (${1:System.Exception})\n{\n\tthrow;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bb2619f-4307-3a39-97f8-54a008644d15": {
      "content": "${1:map}.${2:connect} '${0:controller/:action/:id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bb8994f-d15d-39b7-a6ef-7fb473e9e17c": {
      "content": "struct ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "struct ... end",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9bc12b2a-10b4-3afa-8394-3d7b37e35ca6": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-memo-prop-types",
      "matches": {
        "imrmp": true,
        "react import memo proptypes": true
      },
      "source": "javascript/react"
    },
    "9bc394fd-c634-340e-a7fb-37c2a8a3993d": {
      "content": "task ${1} is\n\tentry ${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "task": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9bc3d0d5-73d4-3510-9c4f-0a0e87f765a2": {
      "content": "$.when(${1:deferreds})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dwhen": true
      },
      "source": "snippets/javascript"
    },
    "9bd35f2d-b344-3639-879b-1a1868092b3f": {
      "content": "<div class=\"${1}\">${2:TARGET}</div>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9bd3fc05-5db0-3fa1-9880-2c9d7a0b75d1": {
      "content": "function! ${1:#:func_name}(${2}) abort\n  ${0:TARGET}\nendfunction",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "func endfunc",
      "matches": {
        "func": true,
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9bd4cb87-54f2-33ca-8ec5-88bd9e1a9121": {
      "content": "form_close();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_close": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bd6e11e-0c52-34d3-a359-313dcb8f9942": {
      "content": "====== ${1} ======\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "======": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9bdb5acc-9bb5-3844-87c0-1ed79d71954e": {
      "content": "class ${1:${TM_FILENAME_BASE}} extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with constructor, empty state, proptypes and export in ES6 module system without imports. (Mostly used when React, Proptypes are provided by webpack provide plugin)",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactWithWebpackDefaults",
      "matches": {
        "rwwd": true
      },
      "source": "vscode-react/snippets"
    },
    "9bdbed7d-63c5-3740-b314-9f1cb3807c13": {
      "content": "init${1:#:?}(${2:#:arguments}) {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9be85c8f-9efd-39f6-8d4f-2adaefdb9b51": {
      "content": "def __unicode__(self):\n\t${0:representation}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uni": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bebcf01-3f55-3af4-9e4a-6e81e60e46ad": {
      "content": "expect($1).toBeLessThan($0);",
      "doc": "expects the argument is less than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobelessthan",
      "matches": {
        "jest expect tobelessthan": true,
        "tblt": true
      },
      "source": "javascript/jest"
    },
    "9bf90722-9116-3f7f-8e0a-b1aabbb625c9": {
      "content": "(if-let [${1:result} ${2:test-expr}]\n\t(${3:then-expr} $1)\n\t(${0:else-expr}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if-let": true
      },
      "source": "vim-snippets/snippets"
    },
    "9bf987e2-5c09-3222-88e1-96ff26a65729": {
      "content": "expect($1).toBeUndefined();$0",
      "doc": "expects the argument is undefined",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobeundefined",
      "matches": {
        "jest expect tobeundefined": true,
        "tbu": true
      },
      "source": "javascript/jest"
    },
    "9c02cab1-224a-35f9-9461-10f6b2ac9c2a": {
      "content": "alias ${0:module_name}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ali": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c0403cc-b384-3ade-af69-7d9ba3eaa6af": {
      "content": "{msg desc=\"${1:description}\"}\n\t$0\n{/msg}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "Message",
      "matches": {
        "msg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9c0679ce-7127-3e61-a8a5-ec3132a7e0c4": {
      "content": "<template lang=\"pug\">\n  ${0}\n</template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> with pug",
      "matches": {
        "template_with_pug": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9c0a7515-15ad-373d-8668-642d8f7fe0aa": {
      "content": "const { $1 } = this.state",
      "doc": "Creates and assigns a local variable using state destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructState",
      "matches": {
        "cs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9c0cc532-a9eb-3d74-b9e6-38b29d2881b7": {
      "content": "directive '${1:directiveName}', factory = (${2:injectables}) ->\n\tdirectiveDefinitionObject =\n\t\t${3:directiveAttrs}\n\t\tcompile: compile = (tElement, tAttrs, transclude) ->\n\t\t\t(scope, element, attrs) ->\n\tdirectiveDefinitionObject",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdc": true
      },
      "source": "snippets/coffee"
    },
    "9c1549ba-d02f-34c2-ac64-b28ed76b3de0": {
      "content": "$.parseJSON(${1:data})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsejson": true
      },
      "source": "snippets/coffee"
    },
    "9c1af8b6-6b57-3580-9cb5-791d7bedc5b1": {
      "content": "do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c3c56af-8abe-3ad7-b101-aab1953d0a28": {
      "content": "{${0:}|${1:TARGET}|$0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "string literals {xxx| ... |xxx}",
      "matches": {
        "lit": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9c3dfa76-25fa-301d-9131-2899c9eedeff": {
      "content": "list-style-type: decimal-leading-zero;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c40c4bc-2a9e-3658-a6d1-63e7ca102b41": {
      "content": "if [ ${1:#:condition} ]; then\n\t${0:TARGET}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9c473685-d2f6-3249-935a-178e76034c5f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component",
      "matches": {
        "vbase": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9c47b36e-3a40-3ac6-97a0-9b02640430be": {
      "content": "const ${1:name} = reactive({\n\t${2:count}: ${3:0}\n})",
      "doc": "Vue Composition api - reactive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Reactive",
      "matches": {
        "v3reactive": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9c4f5c41-4e82-3118-9d16-79d73e58d241": {
      "content": "interface ${1:name} {\n\t${2:/* methods */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "full interface ",
      "matches": {
        "inf": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c520639-2fb3-3e0c-a1e9-6cb91123f2a8": {
      "content": "${1:callbacks}.add(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cadd": true
      },
      "source": "snippets/javascript"
    },
    "9c536409-4e43-3bfa-a1aa-6ea4cea85abd": {
      "content": "box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c5b6f0a-8294-38dd-bfb2-39cefc65c780": {
      "content": "word-wrap normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c777eee-90f6-30dc-90c7-4107c639ab3e": {
      "content": "dictsortreversed:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c7d673f-89aa-3368-98d8-27e3680837ff": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9c7e67da-efa6-3416-970d-64ab2ded960d": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor(private httpClient: HttpClient) { }\n\t$0\n}",
      "doc": "Angular service with HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpClient Service",
      "matches": {
        "a-service-httpclient": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9c8408a1-2d25-334b-8fa3-26061283a01d": {
      "content": "${1:args}: ${0:T}*",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c917db7-cfb5-388e-a5ab-5899a1f1b792": {
      "content": "import { css } from 'styled-components';",
      "doc": "import { css } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-css-from-styled-components",
      "matches": {
        "imsccss": true,
        "styled-components import css": true
      },
      "source": "javascript/styled-components"
    },
    "9c9217e5-81cb-3660-be4b-c4ccc6e1b1a6": {
      "content": "call(${1:#:frame});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9c92601c-1b86-341b-8f5e-d13453db198f": {
      "content": "${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "animate": true
      },
      "source": "snippets/coffee"
    },
    "9c937528-1024-3947-912f-0c04be3c9e48": {
      "content": "border-length: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c939b64-3b0b-34b6-a856-27e213b2306c": {
      "content": "printf(\"${1:} = %d\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prd": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c98c979-4358-3746-888a-30106e15372e": {
      "content": "{% render '${1:snippet}', ${2:variable}: ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renderwith": true
      },
      "source": "vim-snippets/snippets"
    },
    "9c9ab1d9-fa24-344f-977d-aa4e82377dd5": {
      "content": "<${1:div} :class=\"[${2:classNameA}, ${3:classNameB}]\"></${1:div}>",
      "doc": "vue class binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Class Binding Object",
      "matches": {
        "vclass-obj": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9ca257e5-57c9-3266-a7b8-1f333b028f91": {
      "content": "<% ${0:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<%": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ca3392e-6b8f-32d1-91fe-56f570728014": {
      "content": "@load \"${1}\"${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "@load",
      "matches": {
        "loa": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ca70f14-2a07-3752-8f83-b5da3cfa27de": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChild, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivateChild {\n\tconstructor() { }\n\n\tcanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivateChild guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanActivateChild Guard",
      "matches": {
        "a-guard-can-activate-child": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9cb136ec-7a60-3041-86b7-610f7d9e1fed": {
      "content": "@article{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tjournaltitle={${4:journal}},\n\tvolume={${5:NN}},\n\tnumber={${6:NN}},\n\tyear={${7:YYYY}},\n\tpages={${8:NN}--${9:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Article reference",
      "matches": {
        "article": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9cc243bd-87f9-3711-b33b-47396a2b3350": {
      "content": "is_dir(${1:path})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "is_dir",
      "matches": {
        "id": true
      },
      "source": "vim-snippets/snippets"
    },
    "9cccc0c1-1295-3842-96d3-02e4ce295171": {
      "content": "#include \"${1}.h\"",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc2, #include2": true,
        "inc2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9cd4e06c-43e6-33b0-a6df-f2e63781f947": {
      "content": "import thunk from 'redux-thunk'",
      "doc": "Import thunk from redux-thunk",
      "filetype": "redux-thunk",
      "grammar": "lsp",
      "label": "redux-thunk-import",
      "matches": {
        "redux-thunk import": true
      },
      "source": "javascript/redux-thunk"
    },
    "9cdc20db-fadf-367b-942b-65932bfbdb01": {
      "content": "((${1:arguments}) => {\n\t${0}\n})(${2});",
      "doc": "immediately-invoked function expression (IIFE)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "immediately-invoked-function-expression-iife-",
      "matches": {
        "base function immediate": true
      },
      "source": "javascript/base"
    },
    "9ce00c84-cefa-3e50-9655-603975fd3aa0": {
      "content": "<meta http-equiv=\"refresh\" content=\"text/html;charset=UTF-8\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:refresh": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ce1f39b-c92b-3eb4-99a5-45c6109d2a72": {
      "content": "<span id=\"${1}\">${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span#": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ceea1c5-0bff-3cc2-85dd-d728034f8bda": {
      "content": "expect($1).toMatch($0);",
      "doc": "returns true if the argument matches the second value",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatch",
      "matches": {
        "jest expect tomatch": true,
        "tm": true
      },
      "source": "javascript/jest"
    },
    "9cf0542a-8c3f-3229-920a-4c682297d460": {
      "content": "${1}:\nwhile ${2} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named while",
      "matches": {
        "named_while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9cf2d68b-b090-35be-be27-bbc4086bc516": {
      "content": "@else if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "9cfad4ad-fa83-3586-a021-ffa1a53ebb88": {
      "content": "this.setState({$0})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9cfbf882-f7be-3494-af62-994053c7a542": {
      "content": "<a href=\"${1:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d041f92-cf70-3e68-b843-27bb00e6db93": {
      "content": "text-shadow: ${1:${2:color} ${3:offset-x} ${4:offset-y} ${5:blur}};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-shadow: color-hex x y blur (text)",
      "matches": {
        "tsh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9d063897-81a9-3c35-9eec-6e8c1cb1cd2a": {
      "content": "<details>${0}</details>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "details": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d067167-3858-326c-bc5d-bd7926c6daa3": {
      "content": "vertical-align text-bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d072fd2-d5d4-3708-8779-e58959887517": {
      "content": "package:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "package (pack)",
      "matches": {
        "pack": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9d092ece-03d2-36f2-bf61-f8c5ab390574": {
      "content": "const ${1:name} = ref(${2:initialValue})",
      "doc": "Vue Ref",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Vue ref",
      "matches": {
        "v3ref": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9d0d894d-3c0c-34d6-b29a-ee0baf7c658b": {
      "content": "| img_tag: '${1:alt}', '${2:class}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_tag_param": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d3cf885-74ea-3f6b-a057-7fec9376ad1f": {
      "content": "it('${1:description}', () => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "it (js)",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9d40ed39-a267-3714-a76e-137b700b49a6": {
      "content": "<sup>${0}</sup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d46bef0-51b6-3823-92a0-cebd57e64939": {
      "content": "belongs_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "belongs_to",
      "matches": {
        "bt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9d46ed21-83ec-3d97-93da-1f92383b2e79": {
      "content": ".. hint:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "hint",
      "matches": {
        "hint": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9d47b502-407d-385b-8ca5-cfbfade5d569": {
      "content": "import { Injectable } from '@angular/core';\nimport { CanLoad, Route } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanLoad {\n\tconstructor() { }\n\n\tcanLoad(route: Route) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanLoad guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanLoad Guard",
      "matches": {
        "a-guard-can-load": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9d4c4e18-673b-302e-8693-4e41c448eb1c": {
      "content": "let ${1:s:V} = vital#${2:#:plugin_name}#new()",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "let s:V = vital#...#new()",
      "matches": {
        "vital_new": true
      },
      "source": "neosnippets/vim"
    },
    "9d4db082-58a4-3c40-b835-7ec700786ae7": {
      "content": "$.hasData('${0:selector expression}');",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasd": true
      },
      "source": "snippets/javascript"
    },
    "9d53f7f7-bf19-3c37-abf6-a6b750b15116": {
      "content": "${1} : out std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ost": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d58d6af-2ddc-3a46-888a-5af2c18791bf": {
      "content": "beforeAll(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "before all (js)",
      "matches": {
        "befa": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9d5ed098-b8b1-38c2-82cb-751b2d95911c": {
      "content": "cursor auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d61ac08-6e66-3323-9a65-c4f22b1090c7": {
      "content": "<s>${0}</s>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d68a01e-6bce-3440-8160-288c5011dd3c": {
      "content": "background(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d7088f5-7132-3a11-b01c-77786465c685": {
      "content": "expect(${1:target}).not.toBeVisible()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be visible (coffee)",
      "matches": {
        "notv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9d721248-9338-3765-b99f-0414a3c46637": {
      "content": "${1:value_key}:\n  readinessProbe:\n\tfailureThreshold: 3\n\tinitialDelaySeconds: 10\n\tperiodSeconds: 10\n\tsuccessThreshold: 1\n\ttimeoutSeconds: 1\n\tport: 10254\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "readinessProbe_values": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d9d4186-3e97-3168-85b4-e399246bfe83": {
      "content": "@type ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "9d9dd1dd-b028-325b-8ff4-4a5028e91ebf": {
      "content": "delegate ${1:void} ${2:#:Delegate}(${3:#:arguments});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delegate": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9d9e5558-9641-33e4-ae0b-c28e35493b98": {
      "content": "import React, { Component } from 'react'\nimport { Text, StyleSheet, View } from 'react-native'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeComponentWithStyles",
      "matches": {
        "rncs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "9da2db38-f5ad-3f47-80c5-ae694fb4d893": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      },
      "source": "vscode-react/snippets"
    },
    "9da935f5-4120-3fbc-9cc9-f955b28ada41": {
      "content": "@Output() ${1:eventName} = new EventEmitter<${2:eventType}>();",
      "doc": "Angular @Output event and emitter",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "output-event",
      "matches": {
        "a-output-event": true,
        "angular output event": true
      },
      "source": "javascript/angular"
    },
    "9dacf4ac-1190-3e5d-9631-a5432cce1545": {
      "content": "if (${1}) then\n\t${2}\nend if",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "if then",
      "matches": {
        "ift": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9db83c4a-c915-330b-91b0-4364013e7b3f": {
      "content": "\\\\citeauthor{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citeauthor",
      "matches": {
        "citea": true
      },
      "source": "vim-snippets/snippets"
    },
    "9db8d40f-c563-3922-992d-df36ac31d4a4": {
      "content": "border-bottom-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9dc92f67-5ed4-3b85-9892-c3953255dbd3": {
      "content": "PropTypes.objectOf(PropTypes.shape($0)).isRequired,",
      "doc": "An object whose keys are known ahead of time required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfShapeRequired",
      "matches": {
        "ptoosr": true
      },
      "source": "vscode-react/snippets"
    },
    "9dd5878d-4208-3445-ae68-768f6e1e27fa": {
      "content": "import { ${1:libName} } from '${1:libName}';",
      "doc": "import a library",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Library",
      "matches": {
        "vimport-lib": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9dd6d504-d536-3a26-9c35-344f27acfa04": {
      "content": "System.out.println(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true,
        "sout": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9dd9a8e3-e436-31c3-aa38-e4fffc612401": {
      "content": "const",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ddcde5e-a13a-3a2b-b3f5-d6f8721a8573": {
      "content": "border-right: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ddd94e7-434c-3ab6-877a-bce04418e3dc": {
      "content": "justify-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "9de0b54d-e850-348f-878d-c7e213fd89cf": {
      "content": "read.table('${1:filename}'${2:, header = ${3:TRUE},  sep = '${4:\t}',  stringsAsFactors = ${5:FALSE}})",
      "doc": "Read From File",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "reat",
      "matches": {
        "read": true
      },
      "source": "vscode-R/snippets"
    },
    "9de2c72c-502c-307b-9a90-07bcad552fea": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst headers = req.headers\n\t\t\t.set('Content-Type', 'application/json');\n\t\tconst authReq = req.clone({ headers });\n\t\treturn next.handle(authReq);\n\t}\n}",
      "doc": "Angular HttpInterceptor for headers HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor for Headers",
      "matches": {
        "a-http-interceptor-headers": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9df0d7fc-290d-3ded-883e-3edf97c3df3d": {
      "content": "else begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e189b6a-3804-3936-a1f6-06fcd6951039": {
      "content": "(when ${1:test} ${0:body})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e23525d-d986-3d26-8f16-e67036b5c869": {
      "content": "<?php\n${1:TARGET}\n/* End of file ${2:filename}.php */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "php": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9e2796c1-89e4-3e2b-8771-3dc9315e2b34": {
      "content": "$${1:variable}: ${0:value}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e298c27-5323-3de1-8d6b-b00eb5651ae2": {
      "content": "<form (ngSubmit)=\"onSubmit()\" #${1:form}=\"ngForm\">\n</form>",
      "doc": "Form with ngSubmit and form attributes",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngForm",
      "matches": {
        "a-form": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "9e2b2bac-7ef9-359d-a7a3-7813d5138022": {
      "content": "if ${1:let} ${2:name} = ${3:expression} else {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "if let/case ... { ... }",
      "matches": {
        "optional": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9e2b55a5-bfe4-3e0c-961f-d4e7fca22da1": {
      "content": "t.datetime :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create datetime column",
      "matches": {
        "tcdt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9e3642cd-dd50-39ea-9695-7bd17069ab60": {
      "content": "\\\\paragraph{${1:paragraph name}}%\n\\\\label{par:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\paragraph",
      "matches": {
        "par": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e3b6fae-89dd-3fac-8e68-59ea764af9a7": {
      "content": "#ifndef $1\n#define ${1:SYMBOL} ${2:value}\n#endif /* ifndef $1 */",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ndef": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e4131ee-522e-3a41-bbe2-67ab03a2e243": {
      "content": "{${1} for ${2} in ${3:${VISUAL}}}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "set comprehension",
      "matches": {
        "scp": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e461428-b69b-3d6f-bb92-86d3f6185bee": {
      "content": "+ (void)initialize\n{\n\t[[NSUserDefaults standardUserDefaults] registerDefaults:[NSDictionary dictionaryWithObjectsAndKeys:\n\t\t${0}@\"value\", @\"key\",\n\t\tnil]];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "MethodInitialize",
      "matches": {
        "mi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9e468967-d736-388e-b858-f266e451b807": {
      "content": "var ${1:name}: ${2:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9e485bc3-d8fe-3ac6-b8f9-30c8be95ed90": {
      "content": "_.isFunction(${value})",
      "doc": "_.isFunction(_);\n// => true\n\n_.isFunction(/abc/);\n// => false\n\nChecks if `value` is classified as a `Function` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isfunction",
      "matches": {
        "lodash isfunction": true
      },
      "source": "javascript/lodash"
    },
    "9e49334f-8328-3932-96a4-85cb51534070": {
      "content": "mixed.validateAt()",
      "doc": "mixed.validateAt(path: string, value: any, options?: object): Promise<any, ValidationError>\n\nValidate a deeply nested path within the schema. Similar to how reach works,\nbut uses the resulting schema as the subject for validation.\nNote! The value here is the root value relative to the starting schema, not the value at the nested path.\nlet schema = object({\n  foo: array().of(\n    object({\n      loose: boolean(),\n      bar: string().when(\"loose\", {\n        is: true,\n        otherwise: s => s.strict()\n      })\n    })\n  )\n});\n\nlet rootValue = {\n  foo: [{ bar: 1 }, { bar: 1, loose: true }]\n};\n\nawait schema.validateAt(\"foo[0].bar\", rootValue); // => ValidationError: must be a string\n\nawait schema.validateAt(\"foo[1].bar\", rootValue); // => '1'\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-at",
      "matches": {
        "yup mixed validateat": true
      },
      "source": "javascript/yup"
    },
    "9e49d8e4-da6d-3617-952a-a9b26d283d28": {
      "content": "namespace ${1:Foo\\Bar\\Baz};\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e506d89-8ba8-311f-8a56-f7e28654cfe7": {
      "content": "size_t ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "size_t (siz)",
      "matches": {
        "siz": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9e515a95-3cf6-38e3-9167-a9af2b797f55": {
      "content": "_.padStart(${string}, ${length}, ${chars})",
      "doc": "_.padStart('abc', 6);\n// => '   abc'\n\n_.padStart('abc', 6, '_-');\n// => '_-_abc'\n\n_.padStart('abc', 3);\n// => 'abc'\n\nPads `string` on the left side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-padstart",
      "matches": {
        "lodash padstart": true
      },
      "source": "javascript/lodash"
    },
    "9e5a760f-cdc1-3fbe-82b3-57b4744d81ae": {
      "content": "fun ${1:function_name}($2)\n\t${3:\" code}\nendf",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9e6b5612-8b23-30ea-8228-09f115f06b59": {
      "content": "console.dir(${1:object});",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoledir",
      "matches": {
        "base console dir": true
      },
      "source": "javascript/base"
    },
    "9e6e16ee-a62a-3cf0-b7c2-79703e570a07": {
      "content": "| split: '${1:,}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e784800-0ac7-33b6-98c0-50a10e6e58d0": {
      "content": "_.zipWith(${arrays}, ${iteratee})",
      "doc": "_.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n  return a + b + c;\n});\n// => [1, 222]\n\nThis method is like `_.zip` except that it accepts `iteratee` to specify\nhow grouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipwith",
      "matches": {
        "lodash zipwith": true
      },
      "source": "javascript/lodash"
    },
    "9e80ee63-cee0-358d-b49f-4c24ad7adc01": {
      "content": "background-repeat: ${1:repeat/repeat-x/repeat-y/no-repeat};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-repeat:  r:r-x:r-y:n-r (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9e85b4b9-3ea9-3742-bf21-5a940ce67f9b": {
      "content": "$.ajaxStop ->\n\t${1:// handler for when all AJAX calls have been completed}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstop": true
      },
      "source": "snippets/coffee"
    },
    "9e889162-3477-3e8e-8e8d-6ac6c4a6389c": {
      "content": "font-effect emboss",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e94e82b-8da4-32f3-9571-f00370cc8668": {
      "content": "{% autoescape ${1:off} %}\n\t$2\n{% endautoescape %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9e979acb-113d-3b85-8273-08001f136d3d": {
      "content": "{% endwith %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endwith",
      "matches": {
        "endwith": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e9a87bf-b834-3c46-b858-824a47cd2bfd": {
      "content": "list-style-type disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e9cbe64-8a78-3107-b851-1708c168aade": {
      "content": "<object width=\"$2\" height=\"$3\" classid=\"clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B\"\ncodebase=\"http://www.apple.com/qtactivex/qtplugin.cab\">\n\t<param name=\"src\" value=\"$1\">\n\t<param name=\"controller\" value=\"$4\">\n\t<param name=\"autoplay\" value=\"$5\">\n\t<embed src=\"${1:movie.mov}\"\n\t\twidth=\"${2:320}\" height=\"${3:240}\"\n\t\tcontroller=\"${4:true}\" autoplay=\"${5:true}\"\n\t\tscale=\"tofit\" cache=\"true\"\n\t\tpluginspage=\"http://www.apple.com/quicktime/download/\">\n</object>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "movie": true
      },
      "source": "vim-snippets/snippets"
    },
    "9e9f05a0-c3d8-335e-b90d-8b381c99a84c": {
      "content": "fix(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "fix conventional commit",
      "matches": {
        "fix": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9ea1a2aa-3a7d-3ace-b8b5-e48839275ca8": {
      "content": "align-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ea59bb7-f51a-393b-b7ac-5e88f1f999be": {
      "content": "overflow: ${1:visible/hidden/scroll/auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "overflow: type (overflow)",
      "matches": {
        "overflow": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9ea93668-2338-376f-8e00-9626ac9ac428": {
      "content": "choice(name: \"${1:CHOICE}\" , choices: [\"${2:Choices}\",] , description: \"${3:Pick something}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramchoice": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ead2c7c-b2dd-336c-9d27-8434b14bb0b4": {
      "content": "entry ${1}(${2}) when ${3} is\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "entry {...} when",
      "matches": {
        "entry": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9eb26261-65fa-33e6-85a8-e9c8152e2cff": {
      "content": "${1:obj}.insertBefore('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insb": true
      },
      "source": "snippets/coffee"
    },
    "9ec35d17-d877-3e44-992e-44eb11c1ca73": {
      "content": "<%= stylesheet_link_tag \"${0}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sslt": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ec9d8e1-3713-3fb2-8698-6044cd489e41": {
      "content": "dbg!(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "dbg! debugging macro",
      "matches": {
        "d": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ec9ff7e-5d65-3c95-bd4f-511ba4251af3": {
      "content": "@enter-cancelled=\"$1\"$0",
      "doc": "@enter-cancelled=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-cancelled",
      "matches": {
        "entercancelledevent": true,
        "vue enter-cancelled": true
      },
      "source": "javascript/vue"
    },
    "9ecba874-199a-3d71-bb66-15d6cf5c7607": {
      "content": "Open Context Menu    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Open Context Menu",
      "matches": {
        "ocm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9ed0c576-8c9c-3ad9-ac77-219913e976a7": {
      "content": "void keyPressed(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyPressed": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ed351ae-5fbc-31ff-a0a2-458fbe52c620": {
      "content": "require('dotenv-safe').config();",
      "doc": "As early as possible in your application, require and configure dotenv-safe. This will load environment variables from .env as usual, but will also read any variables defined in .env.example. If any variables are already defined in the environment before reading from .env, they will not be overwritten. If any variables are missing from the environment, a MissingEnvVarsError will be thrown, which lists the missing variables.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-require",
      "matches": {
        "dotenv-safe require": true
      },
      "source": "javascript/dotenv-safe"
    },
    "9ed47686-c06c-332d-8e11-6db783368862": {
      "content": "margin-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      },
      "source": "vim-snippets/snippets"
    },
    "9edabcd2-3f5e-389a-a682-d22bd1113c3f": {
      "content": "_.lt(${value}, ${other})",
      "doc": "_.lt(1, 3);\n// => true\n\n_.lt(3, 3);\n// => false\n\n_.lt(3, 1);\n// => false\n\nChecks if `value` is less than `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lt",
      "matches": {
        "lodash lt": true
      },
      "source": "javascript/lodash"
    },
    "9ede50ae-edb0-3790-b3aa-dfb9815b41bb": {
      "content": "setInterval(() => {\n\t${0}\n}, ${1:delay});",
      "doc": "setInterval",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setinterval",
      "matches": {
        "base set interval": true
      },
      "source": "javascript/base"
    },
    "9ee41e0a-75f7-389e-b39e-c8a71a50631a": {
      "content": "DO${1: Clauses}:\n\t${0}\nEND.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "9eedc176-a3f6-3a88-806d-c05294b42c97": {
      "content": "alter table ${1:table} add (${2:column} ${0:type});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addcol": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ef042f6-7e1e-3f41-acc6-3c3f5214dc70": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ef3183b-492c-3ddf-8a3b-2a333a09ea94": {
      "content": "bind:${1|clientWidth,clientHeight,offsetWidth,offsetHeight|}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-block-level",
      "matches": {
        "svbind-level": true,
        "svelte bind level": true
      },
      "source": "javascript/svelte"
    },
    "9f01c20f-20d8-3378-b8fe-f37dbdbbb083": {
      "content": "place-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f03a49e-615b-34d5-a468-b672e96ef077": {
      "content": "main : Program ${1:Flags} ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}programWithFlags\n\t\t{ init: ${6:initWithFlags}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "progf mainf": true,
        "programWithFlags": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9f08ae10-4886-3fb1-b7d8-ba5accaf64a7": {
      "content": "border-left-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f13bb4d-62a9-3769-9495-ca30d992842c": {
      "content": "afterEach(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "after each (js)",
      "matches": {
        "aft": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f13c8cb-412e-3d57-a572-abb2dff255a2": {
      "content": "<ul type=\"circle\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ulcircle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9f14f0a9-2ff9-38fc-89e6-7305d62fcd68": {
      "content": "const ref = React.createRef()\n",
      "doc": "Forward ref statement used inside component",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-forwardref",
      "matches": {
        "fref": true,
        "react forwardref": true
      },
      "source": "javascript/react"
    },
    "9f182ed4-7049-327d-ada3-051a2f4a153c": {
      "content": "resize: vertical;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f1c3850-0f52-34d1-acbe-ebbb54aca422": {
      "content": "expect(${1:target}).toBeDefined()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (coffee)",
      "matches": {
        "ed": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9f1c61e9-3440-3cfe-a655-45af82e5b22e": {
      "content": "ambientLight(${1:v1}, ${2:v2}, ${3:v3}${7:, ${4:x}, ${5:y}, ${0:z}});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ambientLight": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f243153-9677-310f-8f77-e4a3abd84274": {
      "content": "outline-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outline-width": true,
        "ow": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9f27474d-f5e4-3571-920d-20118dd9810c": {
      "content": "{% empty %}\n${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f2839a9-dd8e-3581-8ace-cb50572d1f40": {
      "content": "@selector(${1:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f2f5430-63c2-33b5-9669-5c7d8d5dd1e0": {
      "content": "for (${1:#:var}; ${2:#:condition}; ${3:#:effect}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for () {}",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9f4615ba-d0d1-3ff7-be96-b9d3e33b8520": {
      "content": ":last-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9f4a4b45-0908-393c-8db3-cfe77a5f9ef4": {
      "content": "\\textit{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textit": true,
        "textit \\textit{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9f51f012-77a3-3712-8e98-e963823bb473": {
      "content": "margin 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f564a09-6062-3c51-868a-0ce29b1046de": {
      "content": "${1:Title}\n-----${2:-}\n${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f617e46-7380-3848-8bf4-f40b4e4eb0be": {
      "content": "$this->assertNotCount(${1:$count}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotCount($count, $haystack)",
      "matches": {
        "asnco": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f6216b9-55c9-3bc2-8b8b-2a3e92b50eb8": {
      "content": "<h5 class=\"${1}\">${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5.": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f68c872-880e-3452-a46f-3e6b6f474744": {
      "content": "align-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f74a6b4-df98-3d3e-810b-cf1fc63c19a3": {
      "content": "_.chunk(${array}, ${size})",
      "doc": "_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]\n\nCreates an array of elements split into groups the length of `size`.\nIf `array` can't be split evenly, the final chunk will be the remaining\nelements.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-chunk",
      "matches": {
        "lodash chunk": true
      },
      "source": "javascript/lodash"
    },
    "9f764075-c7ac-35cc-bf67-60ab28ab4b23": {
      "content": "?assertExit(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asex": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f8248cd-7199-394c-a28b-08a699b52f89": {
      "content": "constructor(props) {\n\tsuper(props);\n\t$0\n}\n",
      "doc": "Adds a default constructor for the class that contains props as arguments",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "con": true
      },
      "source": "vscode-react/snippets"
    },
    "9f87cb82-3fff-3ef6-8844-4ce68ec11412": {
      "content": "**${1:bold}**",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f888fd0-689c-35f8-a9af-eeb1217c1b69": {
      "content": "while(${1:/* condition */})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f8b0085-0354-362a-9aef-43fe13429f1e": {
      "content": "{% else %}\n\t${1}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f8bd2e8-23b9-31cc-aefa-62e5b0480e4c": {
      "content": "#define",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "9f96904d-0aa9-32d1-961e-a7e7cb97063b": {
      "content": "it.only('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-only",
      "matches": {
        "ito": true,
        "jest it only": true
      },
      "source": "javascript/jest"
    },
    "9f999a7d-314f-36c4-929a-a1d92bd7dd5f": {
      "content": "function ${1}(${2}) return ${3} is\n\t${4}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fabdd1f-1246-315f-bd86-8c8798a18552": {
      "content": "instance ${1:Class} ${2:Type} where\n  ${3:function} ${4:self} = ${0:TARGET}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "instance": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "9fad80dd-687f-3ee1-b24d-90c1a8023e51": {
      "content": "{if ${1:expression}}\n\t$0\n{/if}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "if .. (if)",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "9fb4f5de-6a78-3b3c-a70a-e2eb692c8f06": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.${1:value};\n\t}\n}",
      "doc": "vuex getter",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Getters",
      "matches": {
        "vgetter": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9fbaedd6-7f84-3612-9b7a-00c114829457": {
      "content": "@change=\"${1:foo} = $event\"",
      "doc": "Vue Emit to Parent Component",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Emit to Parent",
      "matches": {
        "vemit-parent": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "9fbd7b1e-070e-3bcf-a14e-5cca4395885e": {
      "content": "render text: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fc3ee20-6fe7-36ad-b0f0-02b8c510bce8": {
      "content": "height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fccd131-f510-335f-ba3a-f6453d684484": {
      "content": "grid-auto-columns: max-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fd04278-ed2c-35a5-bdc1-9e8363b3a3e7": {
      "content": "use Moose;\nuse namespace::autoclean;\n${1:#}BEGIN {extends '${2:ParentClass}'};\n${0}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "moose": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fd6ca11-5546-3514-b428-09d960d07326": {
      "content": "fmt.Println(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println(...)",
      "matches": {
        "fn": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "9fe4c589-4351-3ad8-970d-c0e0c221622b": {
      "content": "border-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fe6efe7-0cd1-38b7-9794-8e7a4ab1c929": {
      "content": "wordwrap:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      },
      "source": "vim-snippets/snippets"
    },
    "9fec5d8b-c9e9-318e-9f5a-4ee7096ab8a3": {
      "content": "$scope.$emit '${1:eventName}', ${2:eventArgs}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$e": true
      },
      "source": "snippets/coffee"
    },
    "9ffd87c4-3368-39a5-b49c-fc91445018a8": {
      "content": "{%- assign ${1:variable} = ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign-": true
      },
      "source": "vim-snippets/snippets"
    },
    "9ffe88b6-83cd-359c-9260-b0531d825139": {
      "content": "for ${1} in ${2} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "forin  {}",
      "matches": {
        "forin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0015737-6204-3009-98fa-a995d1f64660": {
      "content": "% for ${1:i} in ${2:iter}:\n\t${3:}\n% endfor",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a00295ee-7afb-36c3-aef7-189a45767b63": {
      "content": "getattr(${1:#:obj}, ${2:#:attr})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "getattr(..., ...)",
      "matches": {
        "getattr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a00a21ff-3dd0-3fd2-b1a2-af371a7f54de": {
      "content": "background-origin: padding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a01bbe59-3841-39c6-86a9-9cf6a6e265e5": {
      "content": "xhr :delete, :${1:destroy}, id: ${2:1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xdelete": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0256f29-da3e-3398-861d-2aaf00dd9495": {
      "content": "@moduledoc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdocf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a03f3b86-02ef-3c58-9d4a-880b09d6bfb7": {
      "content": "mount { \"${1:destination path}\":\n\tensure\t=> ${2:mounted},\n\tdevice\t=> \"${0:device name or path}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mount": true
      },
      "source": "vim-snippets/snippets"
    },
    "a045a788-22af-30ba-8bb5-44a9648752d0": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdownc": true
      },
      "source": "snippets/javascript"
    },
    "a04d86fd-2ee6-30ab-812f-756bcabc21c9": {
      "content": "for (let ${2:i} = ${1:Things.length} - 1; $2 >= 0; $2--) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "reversed for (...) {...}",
      "matches": {
        "forr": true
      },
      "source": "snippets/javascript"
    },
    "a054e1ad-1fdd-3b37-9f45-e2dd0f745ec8": {
      "content": "max-height: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a059a355-fb05-3a59-885f-d49b175c5c19": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Template",
      "matches": {
        "usetemplate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a05b9fbb-e725-36a0-a450-5320c762e8fc": {
      "content": "expect($1).toBe($0);",
      "doc": "expects the first argument to be equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobe",
      "matches": {
        "jest expect tobe": true,
        "tb": true
      },
      "source": "javascript/jest"
    },
    "a05f4d66-9f69-30ca-9427-f98e973cd7bd": {
      "content": "defer {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defer": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a06c57b9-cbc2-3734-9dc8-8775037d5c1d": {
      "content": "title = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a07745c0-0dcc-3391-b7fe-dfce57e1543f": {
      "content": "white-space-collapse: break-strict",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      },
      "source": "vim-snippets/snippets"
    },
    "a07ef50e-361d-3bc9-9fff-9b6f6bca8267": {
      "content": "inout",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ino": true
      },
      "source": "vim-snippets/snippets"
    },
    "a082f761-7436-3016-a0be-dd059f08a1f3": {
      "content": "NSString ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nss": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0874dcf-e657-3c0b-9e9b-c2a8cf97ce1f": {
      "content": "import { View, Text } from 'react-native'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactNativeFunctionalComponent",
      "matches": {
        "_rnf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a08c9ac0-3c88-3533-9d53-939385406b15": {
      "content": "{% stylesheet %}\n\t${0}\n{% endstylesheet %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet": true
      },
      "source": "vim-snippets/snippets"
    },
    "a098523d-687a-37cb-a528-16859b0dbb78": {
      "content": "static getDerivedStateFromProps(props, state) {\n\t${1}\n}",
      "doc": "Invoked right before calling the render method, both on the initial mount and on subsequent updates.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-getderivedstatefromprops",
      "matches": {
        "gdsfp": true,
        "react getderivedstatefromprops": true
      },
      "source": "javascript/react"
    },
    "a0b41598-5ada-3cb1-91ea-e8fc0d635404": {
      "content": "__import__('ipdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ipdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0b68a8b-e04c-387d-a920-2cb218620ce7": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} else {\n\t${3:#:else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0bb67d3-3d31-3d4d-81e9-2334bab8419c": {
      "content": "${1:ptr} = (${2:type}*) calloc(${3:size}, sizeof($2));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0c35ead-7737-3e45-a0ca-a86fdae5726a": {
      "content": "localparam ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "localparam ... = ...",
      "matches": {
        "localparam": true,
        "lpa": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0c36782-1aea-3905-ab1e-5d9937e05200": {
      "content": "paste(${1:...}, ${2:sep = ${3:\" \"}}, ${3:collapse = ${4:NULL}})",
      "doc": "Paste",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pas",
      "matches": {
        "paste": true
      },
      "source": "vscode-R/snippets"
    },
    "a0c86360-e38c-312f-bb7e-95e6dfc81b30": {
      "content": "delay(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0c921fb-bc6f-3767-8fee-3f883b1c1263": {
      "content": "<Location ${1:location}>\n        ${2:config}\n</Location>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "location": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0cde3e7-97a9-3cf2-a922-a8b7969d3632": {
      "content": "border-bottom-left-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0d00930-c823-37fb-ba8d-e4a4977c29d3": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "Invoked immediately before rendering when new props or state are being received. [DEPRECATION NOTE]: This method is deprecated in React 16.3",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUpdate",
      "matches": {
        "cwup": true
      },
      "source": "vscode-react/snippets"
    },
    "a0d8ef01-f34e-3126-bf5b-544ac135836d": {
      "content": "${1:deferred}.isResolved()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disres": true
      },
      "source": "snippets/coffee"
    },
    "a0e2693a-0818-30a6-907c-de9a9bf3db3e": {
      "content": "func Benchmark${1:Method}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${0:${VISUAL}}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func BenchmarkXYZ(b *testing.B) { ... }",
      "matches": {
        "benchmark": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "a0eb33cf-0608-3030-b9be-cd6ca3344cb4": {
      "content": "content: open-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      },
      "source": "vim-snippets/snippets"
    },
    "a0f2126b-fadc-3b09-9175-28d8c5006325": {
      "content": "max-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true,
        "max-height": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0f3d3f7-400c-32cf-a9f8-87b819b87566": {
      "content": "${1:FIELDNAME} = models.IntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IntegerField",
      "matches": {
        "mint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a0f460a8-17d4-3d5e-9b23-329bffc120ea": {
      "content": "select {\ncase ${1:#:condition}:\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select {}",
      "matches": {
        "select": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a0f7a9fc-8558-3127-9021-29c9c8d64598": {
      "content": "resize vertical",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "a103eaef-b7a1-3452-8a04-09225c41fb1e": {
      "content": "<input type=\"number\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:number": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1080e5b-2a9a-37fc-84bf-1b6519159676": {
      "content": "_.parseInt(${string}, ${radix})",
      "doc": "_.parseInt('08');\n// => 8\n\n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]\n\nConverts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a\nhexadecimal, in which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the\n[ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-parseint",
      "matches": {
        "lodash parseint": true
      },
      "source": "javascript/lodash"
    },
    "a10b4c17-fa6c-365e-b3ca-87ca487e802d": {
      "content": "\"${1:key}\": \"${0:value}\",",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "String",
      "matches": {
        "s": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a10b76d4-1c91-3814-95b6-e643234e9e14": {
      "content": "<meta name=\"generator\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metagenerator": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a110ce7a-092b-3487-9dc3-811ec78a4ac6": {
      "content": "wont_equal ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "we": true
      },
      "source": "vim-snippets/snippets"
    },
    "a11567de-6789-3d55-b1be-cbabe9928b6b": {
      "content": "overflow: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "a11666f2-14cf-3432-b101-19cc35976521": {
      "content": "$_COOKIE['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      },
      "source": "vim-snippets/snippets"
    },
    "a11ccdb5-3606-33ed-be50-d7bd1c2fc1c0": {
      "content": "assert!(${1:predicate});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "assert!",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1250106-3b0e-3838-a47b-12e27c87a35c": {
      "content": "before_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1256463-89cb-3d01-b3c2-c85bbe0edb69": {
      "content": "{% if ${1} %}\n\t${0:TARGET}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% if ... %} ... {% endif %}",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1265d0d-c9fd-356b-9a5a-782f752713c9": {
      "content": "import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\n\ninterface Props {\n\t\n}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "Creates a React Native Arrow Function Component with ES7 module system, TypeScript interface and StyleSheet",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typescriptReactNativeArrowFunctionComponentWithStyles",
      "matches": {
        "tsrnfs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a129ebcc-a1b4-32b0-8263-200b1678274d": {
      "content": "{% if ${1:condition} %}\n\t${0:${VISUAL}}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1338ae8-6e4a-3192-a37f-cfc5ab860cf7": {
      "content": "if (${1:condition}) {\n\t${0}\n}",
      "doc": "if statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if-statement",
      "matches": {
        "base if": true
      },
      "source": "javascript/base"
    },
    "a1361878-644e-37e9-8a7c-0e8f6075a2cd": {
      "content": "async with ${1:expr} as ${2:var}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "awith": true
      },
      "source": "vim-snippets/snippets"
    },
    "a14556d9-7011-3c35-b145-f2ef66deea09": {
      "content": "<%call expr=\"${1:name}\">\n\t${2:}\n</%call>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "call",
      "matches": {
        "call": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a1538122-7afc-3d7d-a8ad-d09e24e77a1e": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Setup Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Setup Composition API",
      "matches": {
        "vbase-3-setup": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "a1590e3b-9a82-313e-b4ef-3c12f64d84ba": {
      "content": "public ${1:int} ${2:MyProperty} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Property with a private setter",
      "matches": {
        "propg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a15c3bb0-52ed-3a24-b685-072e26c18d8b": {
      "content": "alias ${1:/*orig*/} ${2:/*alias*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "alias (al)",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a1657fc4-5e78-314e-9492-a34dfef0a9d9": {
      "content": "display: ${1:none/inline/block/list-item/run-in/compact/marker};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: common-types (display)",
      "matches": {
        "display": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a167b8e0-59c9-3ec1-8858-a0f9ad4a1d9c": {
      "content": "justify-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a16b4886-6721-3cd6-862c-c5521bfa6649": {
      "content": "for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for () {}",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a16ebdd8-9fd6-36fb-b93e-163177ddf44b": {
      "content": "&#x2325;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1713edf-4bae-319c-a9ef-1059ccf75b1d": {
      "content": "_.invoke(${object}, ${path}, ${args})",
      "doc": "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\n_.invoke(object, 'a[0].b.c.slice', 1, 3);\n// => [2, 3]\n\nInvokes the method at `path` of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invoke",
      "matches": {
        "lodash invoke": true
      },
      "source": "javascript/lodash"
    },
    "a1770bb7-3889-398a-b280-11ce6ddb0161": {
      "content": "page-break-after: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "a17a2210-768d-3855-8ad2-b02a23e07ee8": {
      "content": "must_send [ ${1:what}, :${2:method}, ${3:args} ]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msend": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1805260-992e-32a8-bcc3-fa1c48a62817": {
      "content": "\\${4}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4}",
      "matches": {
        "4": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a18543b2-b83c-3428-b766-33f2333b2b60": {
      "content": "func Benchmark${1} (${2:b *testing.B}) {\n  for i := 0; i < ${3:b.N}; i++ {\n    ${4}\n  }\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func Benchmark... (b *testing.B) { ... }",
      "matches": {
        "funcbench": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1a61b50-e415-31c8-a95b-55c17e457fa7": {
      "content": "{% if ${1:#:condition} %}\n  ${0:TARGET}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "if endif",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1aaec35-b758-37dd-ba64-243fe57012ba": {
      "content": "<%= image_tag \"${1}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1b8bfba-0ea8-35aa-80ed-d2ddc0442142": {
      "content": "_.startCase(${string})",
      "doc": "_.startCase('--foo-bar--');\n// => 'Foo Bar'\n\n_.startCase('fooBar');\n// => 'Foo Bar'\n\n_.startCase('__FOO_BAR__');\n// => 'FOO BAR'\n\nConverts `string` to\n[start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-startcase",
      "matches": {
        "lodash startcase": true
      },
      "source": "javascript/lodash"
    },
    "a1c601af-2e39-3329-8047-c2ce99a34b5d": {
      "content": "set xtics ${1:#:start}, ${2:#:incr}, ${3:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set xtics start, incr, end",
      "matches": {
        "xtics": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1c73d15-0126-3258-a315-de22025f8be5": {
      "content": "let rec ${1:TARGET}\nin ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let rec .. in",
      "matches": {
        "letr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1d0621c-99dd-3009-9e74-d00e9d2e8ce5": {
      "content": "align-items: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1d14b28-2880-3c9f-ae10-7a90a11142af": {
      "content": "[TestFixture]\npublic class ${1}Test {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true,
        "testclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a1d9fe18-1e83-36cd-a2ef-26af8bf4cd20": {
      "content": "_.isNumber(${value})",
      "doc": "_.isNumber(3);\n// => true\n\n_.isNumber(Number.MIN_VALUE);\n// => true\n\n_.isNumber(Infinity);\n// => true\n\n_.isNumber('3');\n// => false\n\nChecks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\nclassified as numbers, use the `_.isFinite` method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnumber",
      "matches": {
        "lodash isnumber": true
      },
      "source": "javascript/lodash"
    },
    "a1dfefd3-603f-376f-b424-e355e5d168b4": {
      "content": "$this->assertContainsOnlyInstancesOf(${1:Example}::class, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContainsOnlyInstancesOf(Example::class, $haystack)",
      "matches": {
        "asconoi": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1e093da-1848-3bec-8cbe-181faad6ef06": {
      "content": "_.some(${collection}, ${predicate})",
      "doc": "_.some([null, 0, 'yes', false], Boolean);\n// => true\n\nvar users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred',   'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.some(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.some(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.some(users, 'active');\n// => true\n\nChecks if `predicate` returns truthy for **any** element of `collection`.\nIteration is stopped once `predicate` returns truthy. The predicate is\ninvoked with three arguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-some",
      "matches": {
        "lodash some": true
      },
      "source": "javascript/lodash"
    },
    "a1ebf06d-dd5a-3846-acce-38c7d1c69719": {
      "content": "white-space: pre-wrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1ec706d-1b79-3205-9320-96a06ea75292": {
      "content": "<section id=\"${1}\">\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section#": true
      },
      "source": "vim-snippets/snippets"
    },
    "a1fed18f-f6f5-3001-98a2-e19f1a5aba9d": {
      "content": "defrecord ${1:record_name}, ${0:fields}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      },
      "source": "vim-snippets/snippets"
    },
    "a200880c-d4a0-30ab-abe5-8f06212f15cb": {
      "content": "else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "else () {}",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2054930-50bf-3c48-bd54-3b2bf72cf15a": {
      "content": "border-right none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a22040c1-671e-3732-b32f-f694fba68e9d": {
      "content": "# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cutf8": true
      },
      "source": "vim-snippets/snippets"
    },
    "a22b884c-a14e-30f9-beda-54ce5795183a": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-element-required",
      "matches": {
        "prop-types element required": true,
        "ptelr": true
      },
      "source": "javascript/prop-types"
    },
    "a2412ea7-e5fe-34c5-9716-e195d2e27aa9": {
      "content": "${1:font} = loadFont(\"${0:FFScala-32.vlw}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadFont": true
      },
      "source": "vim-snippets/snippets"
    },
    "a245cc9a-c814-32ad-b6d3-70fbc22ce2ba": {
      "content": "@${1:param/return/private/public}  ${1:parameter}  ${0:description}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2467578-db58-3188-b936-bc5a6cf70101": {
      "content": "quotes: '\\201C' '\\201D' '\\2018' '\\2019';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      },
      "source": "vim-snippets/snippets"
    },
    "a248b288-9ec9-3085-88c0-9f48e33f10b5": {
      "content": "border-style dot-dot-dash",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "a252713a-a535-3a6b-ab7c-e0f9c3be3f17": {
      "content": "[Teardown]    Run Keyword If Test Failed    Run Keywords\n...    Import library    Dialogs    AND\n...    Pause execution",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Teardown Pause - pause test execution only on failure",
      "matches": {
        "tpause": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a25a6093-18a8-313d-8ac7-3f7040076dc0": {
      "content": "content: no-open-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      },
      "source": "vim-snippets/snippets"
    },
    "a25bc0c7-710b-3d9b-8a3f-4394bad5f9c6": {
      "content": "import ${1} (${2})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "import ... (...)",
      "matches": {
        "importOnly": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2608b9b-03e6-32a8-961b-4a9d2eefe7f7": {
      "content": "public string ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+|": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2634117-3dd8-3329-b210-7a1268831dde": {
      "content": "_.isArrayLikeObject(${value})",
      "doc": "_.isArrayLikeObject([1, 2, 3]);\n// => true\n\n_.isArrayLikeObject(document.body.children);\n// => true\n\n_.isArrayLikeObject('abc');\n// => false\n\n_.isArrayLikeObject(_.noop);\n// => false\n\nThis method is like `_.isArrayLike` except that it also checks if `value`\nis an object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraylikeobject",
      "matches": {
        "lodash isarraylikeobject": true
      },
      "source": "javascript/lodash"
    },
    "a264995f-d915-33d2-aac9-6c20c52be58d": {
      "content": "![${1:id}]: ${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:": true
      },
      "source": "vim-snippets/snippets"
    },
    "a26ad51c-7ad6-346f-b269-1901f6cb15b0": {
      "content": "@techreport{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    institution = {${4}},\n    year = {${5}},\n    memo = {type, number, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@techreport": true,
        "techreport": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a27179e0-8e50-31c3-9884-270f2ed2f8a7": {
      "content": "watch([${1:foo}, ${2:bar}], ([new${1}, new${2}], [prev${1}, prev${2}]) => {\n\t${3}\n})",
      "doc": "Requires watching an array, and applies side effects in a separate callback function.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watch-array",
      "matches": {
        "vue v3 watch-array": true
      },
      "source": "javascript/vue"
    },
    "a275a54a-58b0-30c1-9c3b-363b81ed66d5": {
      "content": "publisher = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "publisher": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2861c8b-520c-3c78-87ef-3ea9a6dcbe20": {
      "content": "expression()",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "a28c085f-9be2-3d68-98de-e6bcf8f49b53": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{/each}",
      "doc": "each block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-block",
      "matches": {
        "sveach": true,
        "svelte each": true
      },
      "source": "javascript/svelte"
    },
    "a292ac14-a0cb-3c44-83fd-4727ef2e5ac0": {
      "content": "{% now \"${1:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a29398d1-75de-381f-b011-dd576bd73244": {
      "content": "string.required()",
      "doc": "string.required(message?: string | function): Schema\n\nThe same as the mixed() schema required, except that empty strings are also considered 'missing' values.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-required",
      "matches": {
        "yup string required": true
      },
      "source": "javascript/yup"
    },
    "a2a33b5c-489f-3f82-b6e8-e3eb180bbcc1": {
      "content": "case ${0:TARGET} of\n    ${1}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2aa0d3f-b9b5-3c0f-8ef1-9976f694a38e": {
      "content": "table-layout: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2ae2982-5df7-35bd-aec2-d56374ce2407": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2b0cd93-6d41-3b00-aaa9-e91500688aea": {
      "content": "this.state.$0",
      "doc": "Access component's state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "state": true
      },
      "source": "vscode-react/snippets"
    },
    "a2bae2fc-ac1b-3aa2-b1fe-fb337628ea0b": {
      "content": "list-style-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2c1f23f-7e28-3970-97d8-5736c3fa4fed": {
      "content": "<a id=\"${1}\" href=\"${2:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a#": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2c4771d-68b5-35c6-8db9-66d654f7653d": {
      "content": "<del>${1:TARGET}</del>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2c82c6e-3bb2-36a6-b64e-1db0ddefd9bf": {
      "content": "<button type=\"submit\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2d62db3-3332-3976-8aa1-24a943e623ff": {
      "content": "${1}defined('${2}')${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2ef5cdd-24ac-39e7-8c50-34b4f9d8b2e6": {
      "content": "renderJSON(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renj": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2f8002f-4251-3ef4-95c0-71a4e58f4609": {
      "content": "chan ${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "channel",
      "matches": {
        "ch": true
      },
      "source": "vim-snippets/snippets"
    },
    "a2fde0c6-d3ca-3312-bc2c-d73cf5aaef00": {
      "content": "[NSGraphicsContext saveGraphicsState];\n${0}\n[NSGraphicsContext restoreGraphicsState];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "save": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a2fe515c-87cd-36dd-9f18-aaab42b30cd2": {
      "content": "@(${1:x}) ${0:x*x}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "anonymous function",
      "matches": {
        "@": true
      },
      "source": "vim-snippets/snippets"
    },
    "a30bbd37-ecf8-3ba3-a6dd-bdab5f7da3ca": {
      "content": "fill(${1:range}) { |${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fil": true
      },
      "source": "vim-snippets/snippets"
    },
    "a31234dc-ce81-3c8b-bcd4-d9e3c42c60f6": {
      "content": "${1:#:subtitle}\n-----------------------------------",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtitle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a3196dd6-59ff-3514-8b5f-f42852625b0c": {
      "content": "spyOn(${1:object}, \"${2:method}\")$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on (coffee)",
      "matches": {
        "s": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a31d77d3-9da4-3573-b226-415025e4f35c": {
      "content": "border-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3257453-7fb2-3edb-ac49-fcacc5b6e908": {
      "content": "align-self: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "a32f5e50-5c2e-3727-8a8f-8d3bb299c6ef": {
      "content": "clip ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3349fef-8a35-3b23-aaf6-e6e76112b822": {
      "content": "list-style-type: square;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "a33ad666-197e-3fae-86c9-c76b766d7f62": {
      "content": "camera(${1:eyeX}, ${2:eyeY}, ${3:eyeZ}, ${4:centerX}, ${5:centerY}, ${6:centerZ}, ${7:upX}, ${8:upY}, ${0:upZ});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "camera": true
      },
      "source": "vim-snippets/snippets"
    },
    "a33b5cd9-584f-3823-8633-f79289abb969": {
      "content": "<%= yield ${1::content_symbol} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yield": true
      },
      "source": "vim-snippets/snippets"
    },
    "a33c3ef8-8521-3c95-901c-2676f1cb8f7f": {
      "content": "for (int ${1:i} = 0; $1 < ${2}; $1++) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for (int x;...; x++) {}",
      "matches": {
        "fori": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a33f9a90-dccd-37c3-8472-be18ee8219a3": {
      "content": "grid-column-end: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3432659-ae6d-3f9a-8ceb-3af481bf4dd3": {
      "content": "\\${${3:result}}=    Run Keyword And Return Status    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return Status",
      "matches": {
        "rkars": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a345b49c-7283-30c7-b4d3-efa450f12c98": {
      "content": "_.isBuffer(${value})",
      "doc": "_.isBuffer(new Buffer(2));\n// => true\n\n_.isBuffer(new Uint8Array(2));\n// => false\n\nChecks if `value` is a buffer.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isbuffer",
      "matches": {
        "lodash isbuffer": true
      },
      "source": "javascript/lodash"
    },
    "a3473c1d-3ef4-399d-95a7-4e7751de77fd": {
      "content": "\\\\part{${1:part name}} % (fold)%\n\\\\label{prt:${2:$1}}\n${0}\n% part $2 (end)",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "document \\part",
      "matches": {
        "part": true
      },
      "source": "vim-snippets/snippets"
    },
    "a34a65d4-0f49-3579-b4e4-02d792554ec4": {
      "content": "import ${2:moduleName} from '${1:module}';$0",
      "doc": "Imports entire module statement in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "base import": true
      },
      "source": "javascript/base"
    },
    "a34a85df-c273-3de9-910d-a31e2550f0b3": {
      "content": "try {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a34c4118-55fc-3a94-8541-7b02d8be3fee": {
      "content": "{% ${1:#:tag} ${2:#:name} %}\n\t${0:TARGET}\n{% end$1 %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% ... %} ... {% end... %}",
      "matches": {
        "tagblock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a34c978e-5923-3373-9311-013abaddddc9": {
      "content": "<ng-content select=\"${0:selector}\"></ng-content>",
      "doc": "Angular ng-content",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-content",
      "matches": {
        "a-ng-content": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "a366edf6-1ed4-3f14-a055-4be99fe5af05": {
      "content": "each_char { |${1:chr}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "each_char { |chr| .. }",
      "matches": {
        "eac-": true
      },
      "source": "vim-snippets/snippets"
    },
    "a36c8416-c5d3-35f0-9fd3-3073980c9358": {
      "content": "{% endnav %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endnav",
      "matches": {
        "endnav": true
      },
      "source": "vim-snippets/snippets"
    },
    "a36f997c-b55b-3a1b-a6e5-a913d0fefc55": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      },
      "source": "vscode-react/snippets"
    },
    "a3708411-c275-3ba3-afab-8c5597608f75": {
      "content": "foreach ${1:my $${2:x}} (@${3:array}) {\n\t${4:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "foreach",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a37371d3-e22f-387b-a50a-636028994165": {
      "content": "ENDFILE {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "ENDFILE { ... }",
      "matches": {
        "endf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a382e684-c076-3abe-849c-e42c8e6835d6": {
      "content": "background-image: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-image:  url (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a3840098-7f28-3eb0-aa54-fe1393e3c0c3": {
      "content": "font-smooth: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3930afc-ba9d-34f9-ae16-032bf87d08aa": {
      "content": "subtest '${1: test_name}' => sub {\n\t${2}\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtest": true
      },
      "source": "vim-snippets/snippets"
    },
    "a39ac179-5fbb-3f56-a33f-b949df01bf37": {
      "content": "using (${1:#:resource}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "using () {}",
      "matches": {
        "using resource": true,
        "using_resource": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a39e96ac-87fa-3590-acb7-a773347d880c": {
      "content": "{(${1:a},${2:b}) =>\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{(": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3ad09a9-e869-3a5a-87aa-8eeb1efe1a2f": {
      "content": "setTimeout(() => {\n\t${0}\n}, ${1:delay});",
      "doc": "setTimeout",
      "filetype": "base",
      "grammar": "lsp",
      "label": "settimeout",
      "matches": {
        "base set timeout": true
      },
      "source": "javascript/base"
    },
    "a3c00e7b-8393-32dc-b92c-826a4666c367": {
      "content": "Wait Until Element Is Not Visible    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Not Visible",
      "matches": {
        "wueinv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a3c07f17-6ba7-3150-be0e-0cac779bcd13": {
      "content": "color ${1:c}${2: = color(}${3:value1, }${4:value2, }${0:value3)};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "color": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3c41d9c-e195-3cb8-a5d6-4ded50b49d0d": {
      "content": "import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n\treturn {\n\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\n\t};\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n)(${1:${TM_FILENAME_BASE}});",
      "doc": "Creates a React component class connected to redux with dispatch",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactReduxDispatchComponent",
      "matches": {
        "rrdc": true
      },
      "source": "vscode-react/snippets"
    },
    "a3c53001-7318-316c-a6b9-32388fab017b": {
      "content": "[[${0:TARGET}]]",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a3e99d0e-7244-3d4c-b8ad-15ebf255270c": {
      "content": "add:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3e9fd66-f1aa-331e-80f3-244f061e8be0": {
      "content": "vertical-align top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3ee9195-697b-391c-8692-936a29a2e131": {
      "content": "text-decoration: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3f13a3b-4a48-364f-8704-b4e2745b4b62": {
      "content": "${1:type} ${2:ptr} = ($1*) calloc(${3:size}, sizeof($1));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clcd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a3f7ebff-f768-3b54-aecf-3baa34e90912": {
      "content": "protocol ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "protocol": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a404b0f4-907b-3261-9482-15deae64238e": {
      "content": "expect(${1:target}).toMatch(${2:pattern});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to match (js)",
      "matches": {
        "em": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4062d26-f541-379d-ac47-7584188657a7": {
      "content": "padding: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "a407d257-4b63-3b70-807e-95896238a4aa": {
      "content": "import React, { useRef } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, {useRef}",
      "matches": {
        "imrr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a41b0e86-3e87-3df2-a562-d80acc42239b": {
      "content": "where\n\t${1:fn} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "where": true
      },
      "source": "vim-snippets/snippets"
    },
    "a43b2323-66d2-3f4c-ba96-d75f47db5fb1": {
      "content": "public void set${1:Name}(${2:String} ${3:name}) {\nthis.$3 = $3;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a43bc112-2e4c-30d1-95d8-1deb45714917": {
      "content": "<see cref=\"${1:#:member}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<see cref=\"\"/>",
      "matches": {
        "see": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a4429f26-018e-3c40-866f-483f0c281390": {
      "content": "font-stretch: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4471d35-2013-3664-af67-569465e5547e": {
      "content": "text-emphasis: after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "a47eb77b-a0c3-32a7-a820-9df51accd5ce": {
      "content": "| floor",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floor": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4822595-8188-313e-8ca7-b5d85c42448d": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "Invoked before rendering when new props or state are being received. ",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-shouldcomponentupdate",
      "matches": {
        "react shouldcomponentupdate": true,
        "scu": true
      },
      "source": "javascript/react"
    },
    "a48c96d9-d78b-3781-8fd9-4a70b60b345e": {
      "content": "align-items: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "a49e41a1-57ef-305a-9318-090f57798fe8": {
      "content": "\\begin{verbatimtab}[${1:8}]\n\t${2:TARGET}\n\\end{verbatim}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verbatimtab} \\verbatimtab": true,
        "verbatimtab": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a49f4ddc-45cf-3330-82d2-5ca8e5b222f4": {
      "content": "each_key do |${1:key}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eakd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4a148a0-1173-38c4-bdde-3893b1734bf2": {
      "content": "=>",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4a2e9cc-91c0-35cd-a75e-20b58ca76234": {
      "content": "type ${1} is ${2}\n\twith Default_Value => ${3};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type with default value",
      "matches": {
        "tyd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4aa4dd4-2ac9-3861-9b48-e829af28f999": {
      "content": "divisibleby:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4aba05b-4f3a-3ca1-a97c-af3536ad8490": {
      "content": "charset=\"${1:utf-8}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "charset": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4b254b4-f0d3-3695-8db8-a8a2c1334e19": {
      "content": "align-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4bebcac-8703-34b5-837a-1738bb495e68": {
      "content": "[source,${1:language}]\n----\n${0}\n----",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "source code block --- source ---",
      "matches": {
        "block-source": true,
        "source": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a4c7dc66-c63f-3deb-97aa-91b745042d1f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nimport { ${0|ref,reactive,computed,readonly,watchEffect,watch|} } from '${1|vue,@vue/composition-api|}'\nexport default {\n\tsetup () {\n\t\t${2}\n\n\t\treturn {}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-v3",
      "matches": {
        "vue v3 base": true
      },
      "source": "javascript/vue"
    },
    "a4d3c2bd-7e61-3440-b568-67a5b67cdaad": {
      "content": "{\n\t\"type\": \"radio\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"options\": [\n\t\t{ \"value\": \"${5}\", \"label\": \"${0}\" }\n\t],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_radio": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4d8a36d-1e4b-3440-a9ff-90f2f0e23dc8": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "props": true
      },
      "source": "vscode-react/snippets"
    },
    "a4dd5714-eba6-3e7f-a33c-6e3e477d5702": {
      "content": "# Deploy resource\ndeploy ${1:\"/deploy/dir/\"} do # Path to deploy to\n\t${2:#}deploy_to ${3} # The \"meta root\" for your application.\n\t${4:#}repository ${5} # URI of the repository\n\t${6:#}repo ${7} # alias for repository\n\t${8:#}revision ${9:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${10:#}branch ${11} # alias for revision\n\t${12:#}user ${13:nil} # System user to run the deploy as\n\t${14:#}group ${15:nil} # System group to run the deploy as\n\t${16:#}svn_username ${17} # (Subversion only) Username for Subversion operations}\n\t${18:#}svn_password ${19} # (Subversion only) Password for Subversion operations}\n\t${20:#}svn_arguments ${21} # (Subversion only) Extra arguments passed to the subversion command}\n\t${22:#}shallow_clone ${23:nil} # (Git only) boolean, true sets clone depth to 5\n\t${24:#}enable_submodules ${25:false} # (Git only) performs a submodule init and submodule update\n\t${26:#}remote ${27:\"origin\"} # (Git only) remote repository to use for syncing an existing clone\n\t${28:#}ssh_wrapper ${29} # (Git only) path to a wrapper script for running SSH with git. GIT_SSH environment variable is set to this.\n\t${30:#}git_ssh_wrapper ${31} # alias for ssh_wrapper\n\t${32:#}scm_provider ${33:Chef::Provider::Git} # SCM Provider to use.\n\t${34:#}repository_cache ${35: \"cached-copy\"} # Name of the subdirectory where the pristine copy of your app's source is kept\n\t${36:#}environment ${37} # A hash of the form {\"ENV_VARIABLE\"=>\"VALUE\"}}\n\t${38:#}purge_before_symlink ${39:%w(log tmp/pids public/system)} # An array of paths, relative to app root, to be removed from a checkout before symlinking\n\t${40:#}create_dirs_before_symlink ${41:%w(tmp public config)} # Directories to create before symlinking. Runs after purge_before_symlink\n\t${42:#}symlinks ${43:\"system\" => \"public/system\", \"pids\" => \"tmp/pids\", \"log\" => \"log\"} # A hash that maps files in the shared directory to their paths in the current release\n\t${44:#}symlink_before_migrate ${45:\"config/database.yml\" => \"config/database.yml\"} # A hash that maps files in the shared directory into the current release. Runs before migration\n\t${46:#}migrate ${47:false} # Should the migration command be executed? (true or false)\n\t${48:#}migration_command ${49} # A string containing a shell command to execute to run the migration\n\t${50:#}restart_command ${51:nil} # A code block to evaluate or a string containing a shell command\n\t${52:#}before_migrate ${53:\"deploy/before_migrate.rb\"} # A block or path to a file containing chef code to run before migrating\n\t${54:#}before_symlink ${55:\"deploy/before_symlink.rb\"} # A block or path to a file containing chef code to run before symlinking\n\t${56:#}before_restart ${57:\"deploy/before_restart.rb\"} # A block or path to a file containing chef code to run before restarting\n\t${58:#}after_restart ${59:\"deploy/after_restart.rb\"} # A block or path to a file containing chef code to run after restarting\n\t${60:#}${61::deploy} # Deploy the application (Default)\n\t${62:#}${63::force_deploy} # For the revision deploy strategy, this removes any existing release of the same code version and re-deploys in its place\n\t${64:#}${0::rollback} # Rollback the application to the previous release\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4df881a-c037-38f2-af9c-7326403b5994": {
      "content": "{% elif %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a4eae8b3-fda4-34e5-a8ba-9a66c83f7e09": {
      "content": "validates_length_of :${1:attribute}, within: ${2:3..20}${3:, on: :${4:create}, message: \"${5:must be present}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of (vl)",
      "matches": {
        "vl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a4ee2de4-4b47-379b-a769-78f6b62e8275": {
      "content": "redirect_to controller: \"${1:items}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller)",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a4f6c453-0ee0-302a-83bc-11a9d323e988": {
      "content": "render partial: '${1:item}', locals: { ${2:$1}: ${0:@$1} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a4f71118-dfa4-3865-a714-e324dda3dfc2": {
      "content": "${1:deferred}.reject(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drej": true
      },
      "source": "snippets/javascript"
    },
    "a4fd128f-3e49-3c99-a2a1-c2b524ae80a8": {
      "content": "sub t${1:number}_${2:test_case} :Test(${3:num_of_tests}) {\n\tmy $self = shift;\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsub": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5075dc6-327c-3f22-ba14-0978423af4ac": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a50e948e-4560-3a15-843c-ddefa0a4317b": {
      "content": "function ${1:function_name}(${2:argument}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "func2",
      "matches": {
        "function2": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a50ed206-924c-3c3a-b5fc-ccf46884a03c": {
      "content": "Session::pull(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_pull": true
      },
      "source": "vim-snippets/snippets"
    },
    "a517650b-f5e8-38bd-bd39-585d3f6cd44a": {
      "content": "display table-column-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      },
      "source": "vim-snippets/snippets"
    },
    "a51da342-bf1d-334e-8ad7-17d1aec37bd8": {
      "content": "justify-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5201dcf-328f-3d2c-8955-8704b52e1649": {
      "content": "white-space: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      },
      "source": "vim-snippets/snippets"
    },
    "a523c06a-a019-3c23-bf08-db84c911aacd": {
      "content": "do {\n\t${2}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "a526db5f-bdf4-36cc-9248-fba8d510a780": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-bool-required",
      "matches": {
        "prop-types bool required": true,
        "ptbr": true
      },
      "source": "javascript/prop-types"
    },
    "a5290068-86fa-3ea4-ad8b-84a9ce5bee5a": {
      "content": "border-top-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      },
      "source": "vim-snippets/snippets"
    },
    "a52a6a9d-1fc2-3013-bade-e0633a468691": {
      "content": "(/ ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/": true
      },
      "source": "vim-snippets/snippets"
    },
    "a533e32e-2fdb-3c55-b358-b0b494e106ea": {
      "content": "border-bottom-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5392133-f597-3e2b-8012-86ecbedb8f55": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${0:100} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      },
      "source": "vim-snippets/snippets"
    },
    "a53b77a4-8e30-3ff7-b34b-22ad826f06f4": {
      "content": "<h3 id=\"${1}\">${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3#": true
      },
      "source": "vim-snippets/snippets"
    },
    "a54a0273-042f-38da-8c42-6eea040efdc6": {
      "content": "text-transform: uppercase;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "a54fe396-dca0-388d-94f4-170c900f3142": {
      "content": "border-right-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5528e42-86a0-3e14-bcff-f5cff483ea49": {
      "content": "string.lowercase()",
      "doc": "string.lowercase(message?: string | function): Schema\n\nTransforms the string value to lowercase. If strict() is set it\nwill only validate that the value is lowercase.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-lowercase",
      "matches": {
        "yup string lowercase": true
      },
      "source": "javascript/yup"
    },
    "a55b2a68-fb17-3009-81e4-2c72bfe9c219": {
      "content": "caption-side: bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "a55fb3c1-0bd9-3ed5-8312-e56650024895": {
      "content": "(define (${1:name})\n\t\t(${0:definition}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "a569e8ef-1a84-31fc-a402-8e0fb045d9b1": {
      "content": "foreign import ${1} :: ${2}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      },
      "source": "vim-snippets/snippets"
    },
    "a56fdb5e-44ab-3dda-9a8c-f6ce18cc4c1d": {
      "content": "mixed.default()",
      "doc": "mixed.default(): Any\n\nCalling default with no arguments will return the current default value",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-default",
      "matches": {
        "yup mixed default": true
      },
      "source": "javascript/yup"
    },
    "a58b1267-ec75-3fc8-86d9-4fca893d28c9": {
      "content": "onErrorCaptured(() => {${1}})",
      "doc": "Vue onErrorCaptured Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onErrorCaptured",
      "matches": {
        "v3onerrorcaptured": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "a58e8378-73b6-32ab-a193-9c3c66a56b7d": {
      "content": "@component('${1}')\n    ${2}\n@endcomponent",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@component ... @endcomponent",
      "matches": {
        "compo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a5911ed1-cfbe-3741-abce-2d0d4648c098": {
      "content": "input(v-model.number=\"${1:numData}\" type=\"number\" step=\"1\")",
      "doc": "v-model directive number input",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-model Number Directive",
      "matches": {
        "vmodel-num": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "a5940c61-db05-3a7e-ad5f-d872921c79ac": {
      "content": "const [${1:x}, ${2:cycleX}] = useCycle(${3:0}, ${4:50}, ${5:100})",
      "doc": "useCycle(items): CycleState It works similar to useState in React. It is provided an initial array of possible states, and returns an array of two arguments.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-cycle",
      "matches": {
        "framer-motion use-cycle": true,
        "use-cycle": true
      },
      "source": "javascript/framer-motion"
    },
    "a599d1e8-3d0a-3f60-9a4a-702ee9e5fa41": {
      "content": "validates_numericality_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:is not a number}\"}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of if",
      "matches": {
        "vnif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a5a0bfe1-250c-3e5d-bdf2-9cbc8b588177": {
      "content": "${1:obj}.slideUp '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "supc": true
      },
      "source": "snippets/coffee"
    },
    "a5a6b895-a041-37ed-8f46-8cb8d56738f0": {
      "content": "<tfoot>\n\t${0}\n</tfoot>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tfoot": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5ab4b31-ca25-32fc-8004-47be2de067cb": {
      "content": "assert_response :${1:success}, @response.body$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Test Assert Response (are)",
      "matches": {
        "asre": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a5af1d26-4ddb-386c-9675-c1f1fd2a15ef": {
      "content": "async function ${1:name}() {\n\ttry {\n\t\tconst response = await axios.post('${2:uri}', ${3:post});\n\t\t${4:success}\n\t}\tcatch (error) {\n\t\t${5:error}\n\t}\n}",
      "doc": "Use Axios to make a post request - async-await",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-post-async-await",
      "matches": {
        "axios post async await": true
      },
      "source": "javascript/axios"
    },
    "a5b116e7-6208-3122-99d2-ad87661eb32e": {
      "content": "${1:name} ${2:in} ${3:type} ${0: := null}",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5b22fa9-34c7-3c14-8bb1-289379133396": {
      "content": "echo CHtml::normalizeUrl(array('${0}'));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhnurl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5bca16c-0c48-341a-b044-98e8131f2f01": {
      "content": "$this->input->post(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-post": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5c142a0-b69f-3aa9-8109-041c372ed753": {
      "content": "border-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5cad114-5d65-3327-9f85-12cc9b7c4619": {
      "content": "for (let ${1:prop} of ${2:object}) {\n\t${0:$1}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (let prop of object}) { ... }",
      "matches": {
        "forl": true
      },
      "source": "snippets/javascript"
    },
    "a5ced520-f94a-38ae-8aeb-33267512a4e1": {
      "content": "-webkit-border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5d25acb-6ebe-3bcc-b822-b6a341688014": {
      "content": "@while ($1)\n\t${2:${VISUAL}}\n@endwhile",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@while directive",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a5d46a42-2af9-3d16-8ab5-636303573cc5": {
      "content": "const ${1:function_name} = (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c=>": true
      },
      "source": "snippets/javascript"
    },
    "a5dc4fd8-7954-39a7-9ef0-1e34deb7b1bb": {
      "content": "\\\\citep{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citep",
      "matches": {
        "citep": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5dffb11-b43d-3e7a-89ee-519677b6dccd": {
      "content": "-moz-box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5e1d338-8078-3d60-837c-005a930a2853": {
      "content": "<map name=\"${1}\">\n\t<area shape=\"${2}\" coords=\"${3}\" href=\"${4}\" alt=\"${5}\" />${6}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map+": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5e972f0-f412-3ae1-9b9a-3ca57efafbe9": {
      "content": "grid-template-areas: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5ed554e-3b08-3351-a8f6-809d6fe51d03": {
      "content": "- ${1:#:text}\n-\n-\n-",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nested_list": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a5fa63a6-96d3-3e87-a345-bf885a795407": {
      "content": "it { should have_db_column :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a5fe69e9-2153-38d9-9005-6848746fcc90": {
      "content": "context '${1:message}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cont": true
      },
      "source": "vim-snippets/snippets"
    },
    "a607d691-5562-37a7-88b9-a96a1cfcc490": {
      "content": "{# ${0:comment} #}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/snippets"
    },
    "a611d577-e247-3425-80ba-549727d900cb": {
      "content": "<template>\n  ${0}\n</template>\n<script>\nexport default {\n}\n</script>\n<style>\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> <script> and <style>",
      "matches": {
        "scaffold": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a624b128-6d63-3352-8d16-35abbb5d703c": {
      "content": "[formGroupName]=\"${1:name}\"",
      "doc": "Angular formGroupName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormGroupName",
      "matches": {
        "a-formGroupName": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "a630ca93-e0cb-3cc9-ad25-bef5709a61cd": {
      "content": "exp(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6353631-46bb-3b17-bbda-c6cbdc8c4072": {
      "content": "text-emphasis before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6426513-eac7-3807-8c0b-c90fd8bb8e0a": {
      "content": "background-origin: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a642d38b-0ea1-3ef5-96c5-b03640a5179e": {
      "content": "printf(\"${1:} = %f\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a650c478-c4e5-3594-a293-20be672285cb": {
      "content": "integer, intent(in)  ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer intent(in)",
      "matches": {
        "ini": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a65511c7-f45e-3652-a5c5-e49ca4ec79ae": {
      "content": "${1:#:expression} for @${2:#:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xfor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a656009a-7b82-3733-b21f-09cf576a634e": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "a663ebab-633f-3ad9-ac56-f2b08ced6cda": {
      "content": "font-stretch: semi-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6674c98-9a40-3f5c-86a2-8851449f6155": {
      "content": "typedef struct ${1:#:name} {\n    ${0:TARGET:data}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct_typedef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a66a3885-7011-30ad-ba15-4794880d12b4": {
      "content": "floatformat:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      },
      "source": "vim-snippets/snippets"
    },
    "a66ed13e-c19c-350f-ab26-e37926b91e59": {
      "content": "splitTokens(${1:str}${2:, }${0:tokens});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splitTokens": true
      },
      "source": "vim-snippets/snippets"
    },
    "a687f78a-4a71-3179-9f2a-f09cd9c2620f": {
      "content": "_.endsWith(${string}, ${target}, ${position})",
      "doc": "_.endsWith('abc', 'c');\n// => true\n\n_.endsWith('abc', 'b');\n// => false\n\n_.endsWith('abc', 'b', 2);\n// => true\n\nChecks if `string` ends with the given target string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-endswith",
      "matches": {
        "lodash endswith": true
      },
      "source": "javascript/lodash"
    },
    "a6887e7f-bd24-31d9-9bb0-1c2575716338": {
      "content": "$this->${1:method}()->shouldBeEqualTo(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeEqualTo('value')",
      "matches": {
        "sbequalto": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a6898f21-629a-342b-93a7-065382b55bca": {
      "content": "source(${1:'${2:}'}${3:, chdir = ${4:TRUE}})",
      "doc": "Source",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sou",
      "matches": {
        "source": true
      },
      "source": "vscode-R/snippets"
    },
    "a691e63e-b54a-3b2c-bb09-0d7a8d1dde3e": {
      "content": "{%- section '${1:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section-": true
      },
      "source": "vim-snippets/snippets"
    },
    "a69221f3-1813-333e-ae76-844290675c27": {
      "content": "$.isPlainObject(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isobj": true
      },
      "source": "snippets/coffee"
    },
    "a6a47039-2c77-34df-bdef-c5d819597786": {
      "content": "${1:FIELDNAME} = models.PhoneNumberField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PhoneNumberField",
      "matches": {
        "mphone": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a6a812b8-55f3-3610-b94d-34cd970d968e": {
      "content": "white-space-collapse break-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6ac2725-3cf8-37c8-9901-361132b2b31f": {
      "content": "margin-bottom: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-bottom: length (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a6ad6f00-e08b-3db4-a31d-ad47db4d7caf": {
      "content": "const ${1} = ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      },
      "source": "snippets/javascript"
    },
    "a6b1a5a9-0de8-3624-ad38-8b429fb44048": {
      "content": "$this->shouldBeAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldBeAnInstanceOf('Type')",
      "matches": {
        "sbinstance": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a6b59e1f-d779-3306-aa31-567f7b319aeb": {
      "content": "_.isEqualWith(${value}, ${other}, ${customizer})",
      "doc": "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, othValue) {\n  if (isGreeting(objValue) && isGreeting(othValue)) {\n    return true;\n  }\n}\n\nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n\n_.isEqualWith(array, other, customizer);\n// => true\n\nThis method is like `_.isEqual` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with up to\nsix arguments: (objValue, othValue [, index|key, object, other, stack]).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isequalwith",
      "matches": {
        "lodash isequalwith": true
      },
      "source": "javascript/lodash"
    },
    "a6b6f4ab-4759-3d7a-8dad-e4f414196cc8": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6ba4f32-44a2-3c95-aef3-ffb0ba1df01f": {
      "content": "\\\\left[ ${0:${VISUAL}} \\\\right]",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left[ right]",
      "matches": {
        "lr[": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6bde709-d3e3-3119-8ab8-f0424f9a657c": {
      "content": "&#x2192;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "right": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6be299e-7064-306c-9920-ac8f326bb18f": {
      "content": "/**\n * ${3:undocumented constant}\n */\ndefine(${1}, ${2});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_d": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6bfb792-561e-3735-a8ac-a77d0cd7e404": {
      "content": "error_log(print_r($${1:foo}, true), 3, '${2:/tmp/debug.log}');",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6c7fd54-3ebe-34e7-9f98-ab5eba3eebdc": {
      "content": "write.csv(${1:x}, ${2:file = ${3:\"\"}}, ${4:append = ${5:FALSE}}, ${6:quote = ${7:TRUE}}, ${8:sep = ${9:\" \"}}",
      "doc": "Write csv",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "wric",
      "matches": {
        "write": true
      },
      "source": "vscode-R/snippets"
    },
    "a6d50756-8c1c-37e7-bc7e-09a3cbedacf3": {
      "content": "border-break: close",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6d7ed57-44af-30ed-9530-865ce6c22201": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn ${2:value}${0};\n\t}\n}",
      "doc": "vue filter",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-filter",
      "matches": {
        "vfilter": true,
        "vue filter": true
      },
      "source": "javascript/vue"
    },
    "a6d9ce4c-1ac1-3c13-88ce-f8f8abaa4291": {
      "content": "fmt.Sprintf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Sprintf(...)",
      "matches": {
        "sp": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "a6e0e995-4417-3047-98e8-d6a8a21e84c9": {
      "content": "display: inline-block;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6e25583-c6fc-3e82-8eb5-5d7f0b6e6cb2": {
      "content": "textLeading(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textLeading": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6eb78eb-622e-3787-90a5-300d9f426960": {
      "content": "(:import [${1:package}])\n\t& {:keys [${1:keys}] :or {${0:defaults}}}",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "a6f13d9c-a312-37f6-b528-79e902f2501f": {
      "content": "\\begin{scope}[${1}]\n\t${2:TARGET}\n\\end{scope}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{scope}": true,
        "scope": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a6f97f90-7dce-3c73-8763-06d4e7112e9b": {
      "content": "validates_associated :${0:attribute}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/snippets"
    },
    "a70210d5-0328-3bb5-baea-b6af500557ed": {
      "content": "\\node[${1}](${2:name}) ${3};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\node": true,
        "node": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a7035692-24c2-360d-8288-f85099aeb3db": {
      "content": "#' @description\n#'\n#' ${1:type description}\n#'\n#' ${2:@field ${3:name}::${4:Type} ${5:Description}}\n#'\n#' @examples\n#'\n#' ${10: constructor examples}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "type definition",
      "matches": {
        "doct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a717f85b-5bcf-353f-bf68-96da0cc13b49": {
      "content": "validates :${1:terms}${2:, acceptance: ${3:{ accept: \"${4:1}\"${5:, message: \"${6:You must accept the terms of service}\"}}} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of",
      "matches": {
        "vao": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a71844a4-f355-39fe-bc10-80a4facb1860": {
      "content": "-> { ${1} }.must_output '${0}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      },
      "source": "vim-snippets/snippets"
    },
    "a718dbb3-100b-30c7-9a2c-ffb0c4df76a0": {
      "content": "<%= ${1:f}.collection_select(:${2:method}, ${3:collection}, :${4:value_method}, :${5:text_method}, options = {${0:prompt: true}}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fcs": true
      },
      "source": "vim-snippets/snippets"
    },
    "a730b29f-1cf1-3022-93dd-3249ba0d6692": {
      "content": "grid-template ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7313fe5-e239-369e-be57-9093e5f51a66": {
      "content": "outline-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true,
        "outline-color": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a7392073-fe97-3059-997e-6e2097d8d4b4": {
      "content": "justify-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "a73afeb3-6eba-3fd9-b048-f11572c8af5a": {
      "content": "image:${1:example.jpg}[${2:Description}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Inline image:file[desc]",
      "matches": {
        "imageinline": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a73e57fa-8868-3748-9403-f0809436d3ec": {
      "content": "ldply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      },
      "source": "vim-snippets/snippets"
    },
    "a74677bd-7209-3e35-8b7e-474ec5908ae6": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "a766b4b3-b4a7-3fcc-a89a-69880f309303": {
      "content": "Switch (${1:condition})\nCase ${2:case1}:\n\t${3:; Case 1 code}\nCase Else:\n\t${0:; Else code}\nEndSwitch",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "a77712c6-de42-3e1f-8792-fcb933239803": {
      "content": "if (${1:condition}) then\n\t${0}\nend if",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "a77851c0-269e-38c5-aeeb-e883516e1089": {
      "content": "${1:protected} function ${2:foo}()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7877a7c-a32b-3a4d-b5e2-ef7de9b08b82": {
      "content": "caption-side: top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "a78e51a6-cccd-39fb-a2c3-808ed37194f8": {
      "content": "{elif ${1:expression}}\n\t$0",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "else if .. (eli)",
      "matches": {
        "eli": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a7a00f9e-aa76-35ec-a858-8817f41044f0": {
      "content": "filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7a195a8-1959-37ae-b151-60e69b5fa63e": {
      "content": "${1:FIELDNAME} = models.TextField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TextField",
      "matches": {
        "mtext": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a7a39483-ad91-3ae0-862c-a639dfe8443f": {
      "content": "display: table-cell;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7adc46b-3423-3873-a5ad-6469907b9a74": {
      "content": "${1:obj}.show('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      },
      "source": "snippets/coffee"
    },
    "a7ba3682-094d-3754-ac23-a5e700039124": {
      "content": "fisher.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fis": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7c1ffdb-56f5-3b5d-a953-b1ba62b12318": {
      "content": "unless ${1:#:condition}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "unless ... end",
      "matches": {
        "unless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a7c2c578-0f64-33df-b828-4f7b6c74712e": {
      "content": "http.createServer($1).listen($2);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "http.createServer",
      "matches": {
        "hcs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a7cd9657-937a-30e2-9d46-1a55a5441bcd": {
      "content": "border: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7cda88b-014f-3e4c-95bf-02dbd25f8545": {
      "content": "add_column :${1:table_name}, :${2:column_name}, :${0:data_type}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7cfb29c-a052-31d3-b8cd-ff9fecc1ac76": {
      "content": "${1}.forEach((${2:item}) => {\n\t${0}\n});",
      "doc": "forEach loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "foreach-loop",
      "matches": {
        "base foreach": true
      },
      "source": "javascript/base"
    },
    "a7d0eaf4-e672-36e2-8147-8540a7b58aef": {
      "content": "process (${1:all})\nbegin\n\t${2}\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pra": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7d27811-c9e5-3839-853b-12780b9e19f0": {
      "content": "crossref = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crossref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a7d7e8c2-515a-3bcc-a6b8-eb0b2e3a0657": {
      "content": "catch {${1}} ${2:err} ${0:options}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7e1da6a-4795-3230-8c4d-d12645579cfe": {
      "content": "const dispatch = useDispatch();",
      "doc": "Redux useDispatch() hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-usedispatch-hook",
      "matches": {
        "redux usedispatch": true,
        "rxusdh": true
      },
      "source": "javascript/redux"
    },
    "a7e2b1d9-90a4-36d9-8d98-db462083a212": {
      "content": "<div [ngSwitch]=\"${1:conditionExpression}\">\n\t<div *ngSwitchCase=\"${2:expression}\">${3:output}</div>\n\t<div *ngSwitchDefault>${4:output2}</div>\n</div>",
      "doc": "Angular ngSwitch",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngSwitch",
      "matches": {
        "a-ngSwitch": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "a7e7ac11-33bf-3b46-ad2a-ad7e7acb142c": {
      "content": "<input type=\"password\" name=\"${1:password}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputpassword": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a7ea987b-1faf-329f-be52-b2ebc9a0837d": {
      "content": "it { should set_the_flash('${0}') }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "issf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7f328ec-673f-3865-b552-d4d50c673345": {
      "content": "import { computed } from '@ember/object';",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import { computed } from '@ember/object';",
      "matches": {
        "cproimport": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a7f8bcc6-26f4-30cd-a6ba-e617fb92646b": {
      "content": "module type ${1} = sig\n\t${0}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modty": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7f97477-49fb-37c7-8a49-17c4e55282bb": {
      "content": "wordwrap:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      },
      "source": "vim-snippets/snippets"
    },
    "a7fedd30-9a45-3bac-9ca2-955b326ed003": {
      "content": "src=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "src": true
      },
      "source": "vim-snippets/snippets"
    },
    "a801dc4c-5185-3636-b818-5e00a26a88ad": {
      "content": "font-smooth: never;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a806cbae-312a-3c38-9ce7-f58e683e21ab": {
      "content": "padding-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a808117f-151d-3c36-a031-e08fcbda8620": {
      "content": "display -moz-inline-stack",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      },
      "source": "vim-snippets/snippets"
    },
    "a80fa517-e5c4-39ba-be07-ebc0c4d1785b": {
      "content": "border: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "a817495c-5f16-3469-b4a5-197c1e7fd049": {
      "content": "test('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test",
      "matches": {
        "jest test": true,
        "test": true
      },
      "source": "javascript/jest"
    },
    "a81d8777-dfe2-36a2-bf37-480bf846b7b2": {
      "content": "when {\n\tequals '${1:equals}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenequals": true
      },
      "source": "vim-snippets/snippets"
    },
    "a820df71-28cf-3e1c-9ef0-5e81597ba455": {
      "content": "![${1:alttext}](${2:/images/image.jpg} \"${3:title}\")",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![\"": true
      },
      "source": "vim-snippets/snippets"
    },
    "a829c0d7-e132-3925-9836-360eb5c4f058": {
      "content": "grid-auto-flow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      },
      "source": "vim-snippets/snippets"
    },
    "a82b23ca-739d-33ec-84b9-b5389240cb47": {
      "content": "<%include file=\"${1:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "include",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a83342ff-2149-3fbf-8000-9b5807dc90c4": {
      "content": "text-justify kashida",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8354e91-bd0d-38c2-a613-5f2d12f42d4a": {
      "content": "align-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a835c36d-cdc5-316c-a718-a1c72a86322b": {
      "content": "composed_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "composed_of",
      "matches": {
        "co": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a8371b4b-b980-3673-99b8-87f1b1ba25c2": {
      "content": "printf(\"${1:%s}\\n\"${2});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "a83dd4ae-d879-3066-9032-b5c0bf49f74e": {
      "content": "if ${1:condition}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do: ..",
      "matches": {
        "if:": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8436ce6-b4eb-3b0a-a523-589b5685d038": {
      "content": "<area shape=\"${1:rect}\" coords=\"${2}\" href=\"${3}\" alt=\"${4}\">\narea+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area+": true
      },
      "source": "vim-snippets/snippets"
    },
    "a845a57c-b08a-37c0-a4a5-7e053eb2516a": {
      "content": "text-justify: inter-word;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      },
      "source": "vim-snippets/snippets"
    },
    "a84c4afd-d520-3fb4-a679-295b4ac58483": {
      "content": "${1:obj}.toggle  (${2:e}) ->\n\t${3:// event handler}\n, ($2) ->\n\t${4:// event handler}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tog": true
      },
      "source": "snippets/coffee"
    },
    "a850b52e-fe2c-3d96-bf95-71855721b301": {
      "content": "quote\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "quote ... end",
      "matches": {
        "quote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a852fede-e54e-3400-990a-a38a6699ec1e": {
      "content": "<input class=\"${1}\" type=\"${2:text/submit/hidden/button/image}\" name=\"${3}\" id=\"${4:$3}\" value=\"${5}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input.": true
      },
      "source": "vim-snippets/snippets"
    },
    "a856909b-8ccc-3fcd-962e-42ecbca108dd": {
      "content": "<link rel=\"shortcut icon\" href=\"${1:favicon.ico}\" type=\"image/x-icon\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:favicon": true
      },
      "source": "vim-snippets/snippets"
    },
    "a85afb2a-11ef-3cb9-a841-0f72490d0163": {
      "content": "_.zip(${arrays})",
      "doc": "_.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n\nCreates an array of grouped elements, the first of which contains the\nfirst elements of the given arrays, the second of which contains the\nsecond elements of the given arrays, and so on.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zip",
      "matches": {
        "lodash zip": true
      },
      "source": "javascript/lodash"
    },
    "a8609329-3277-3cd9-be2a-007f80699058": {
      "content": "$display(\"${1}\", ${2});",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "$display(\"...\", ...);",
      "matches": {
        "display": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a86791bf-f8be-3fa9-b997-defd5e83869b": {
      "content": "<video src=\"${1}\" height=\"${2}\" width=\"${3}\" preload=\"${4:none}\" autoplay=\"${5:autoplay}\">${6}</video>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "video": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8694dea-3572-3fae-a25d-6658d205edbf": {
      "content": "$scope.${1:variable} = ${2:variable}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$va": true
      },
      "source": "snippets/coffee"
    },
    "a8697968-0d3c-3682-9b82-bad0bc7ac761": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-required",
      "matches": {
        "prop-types object required": true,
        "ptor": true
      },
      "source": "javascript/prop-types"
    },
    "a873fd69-f9e8-34f7-afea-bd871710e95d": {
      "content": "<template>\n  ${0}\n</template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> with html",
      "matches": {
        "template_with_html": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a874585b-f4f0-35ab-8941-b525e4f9ab4e": {
      "content": "let ${1} = ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "snippets/javascript"
    },
    "a874b693-b038-3487-9905-61cbd23a92b8": {
      "content": "![${1:alttext}](${2:/images/image.jpg})",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![": true
      },
      "source": "vim-snippets/snippets"
    },
    "a875732f-9ec1-3cde-9a09-c0ea4dfa1845": {
      "content": "LOGGER.error(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "le": true
      },
      "source": "vim-snippets/snippets"
    },
    "a87b63cc-b6e3-3a51-a53d-b2919875b676": {
      "content": "expect(${1:target}).not.toHaveAttr('${2:attr}'${3:, '${4:value}'})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to not have attribute (coffee)",
      "matches": {
        "notha": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a87cd1cb-616f-39f4-afbf-4fde2cddb66a": {
      "content": "{@html ${1:expression}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-html",
      "matches": {
        "svelte expression html": true,
        "svexphtml": true
      },
      "source": "javascript/svelte"
    },
    "a881d04a-ab74-304e-aeed-7654f375a09a": {
      "content": "%% TODO: ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      },
      "source": "vim-snippets/snippets"
    },
    "a885f506-1dbe-3c63-979e-66b7f4473a64": {
      "content": "defimpl ${1:protocol_name}, for: ${2:data_type} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defim": true
      },
      "source": "vim-snippets/snippets"
    },
    "a889eae1-686b-3297-a7ef-a559f3b9ebe7": {
      "content": "t.datetime :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.datetime (tcdt)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a88d086e-2866-3d84-aa98-760abde2ea9b": {
      "content": "console.log('${1:object} :>> ', ${1:object});",
      "doc": "Displays an object in the console with its name",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLogObject",
      "matches": {
        "clo": true
      },
      "source": "vscode-javascript/snippets"
    },
    "a88da5d3-1125-3875-ad1c-88217f9e90d6": {
      "content": "(case ${1}\n  ((${2}) ${3})\n  (${0:else}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a8907b8b-e2a0-3dbd-9eaa-f20b6f396214": {
      "content": "import '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importNoModuleName",
      "matches": {
        "imn": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a892956d-8445-34c5-a775-4bd50ce1bb2a": {
      "content": "scope(success) ${1}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scs": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8944c6d-55a5-3e9a-9e84-26a45b6c50a5": {
      "content": "defmodule ${1:AppName}Web.${2:ChannelName}Channel do\n\tuse $1Web, :channel\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chan": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8a01122-0bda-3a25-8454-3d5271a4d270": {
      "content": "try {\n\t${1:TARGET}\n} catch (${2:#:Exception} $e) {\n\t${3:#:code}\n} finally {\n\t${4:#:code}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a8a76098-97d8-3285-8333-fce619b79441": {
      "content": "import ${1:Name} from '@/components/${1:Name}.vue';\n\nexport default {\n\tcomponents: {\n\t\t${1:Name}\n\t},\n};",
      "doc": "import a component and include it in export default",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Export",
      "matches": {
        "vimport-export": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "a8b1e049-97a7-3c93-abfd-68dfb4845b44": {
      "content": "${1:obj}.toggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togsh": true
      },
      "source": "snippets/javascript"
    },
    "a8b4539c-8bf3-31e8-b8c9-fbf3a95f62f3": {
      "content": "<transition$1>\n$2\n</transition>$0",
      "doc": "transition element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition",
      "matches": {
        "transition": true,
        "vue transition": true
      },
      "source": "javascript/vue"
    },
    "a8b4ec94-9ea0-31b2-a156-b08130d9cda5": {
      "content": "function(${1:x}) ${3:{$0\\}}",
      "doc": "Function",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fun",
      "matches": {
        "function": true
      },
      "source": "vscode-R/snippets"
    },
    "a8b4ed2e-1e14-3864-8876-3caa1121e6d7": {
      "content": "assert_redirected_to ${2:action: \"${1:index}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Test Assert Redirected To (art)",
      "matches": {
        "art": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a8b51233-e6d1-322a-8275-d1bb9f4ff92c": {
      "content": "impl AsMut<${1:Ref}> for ${2:Type} {\n\tfn as_mut(&mut self) -> &mut ${3:$1} {\n\t\t&mut self.${0:field}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "AsMut trait implementation",
      "matches": {
        "asmut": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8b56c3e-2059-329f-b251-975023ff1f47": {
      "content": "ignoring ${1:#:application responses}\n\t${0:TARGET}\nend ignoring",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ign": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a8bca3dd-9e06-3dbe-bab6-bfa2a119feef": {
      "content": "{% endset %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endset",
      "matches": {
        "endset": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8cf4cfa-9729-3d2a-9b3e-a446da642e20": {
      "content": "border-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8d1b280-f528-372f-afea-b0969de08f4c": {
      "content": "<?$php foreach ($${1:#:variable} as $${2:#:key}${3: =>}): ?>\n${0:TARGET}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pforeach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a8e5ed26-bdc2-3186-bd55-ed53ca11acf4": {
      "content": "\\\\frac{${1:num}}{${2:denom}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\frac{}{}",
      "matches": {
        "frac": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8ea9ad2-2c47-3971-a955-72bc100a53c6": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      },
      "source": "vscode-react/snippets"
    },
    "a8f06196-1a97-31e8-abf0-30f9a0ec465a": {
      "content": "kruskal.test(${1:formula}, ${2:data}, ${3:subset}, ${4:na.action}, ${5:...})",
      "doc": "Kruskal-Wallis Rank Sum test",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "kr",
      "matches": {
        "kruskal": true
      },
      "source": "vscode-R/snippets"
    },
    "a8f52811-6cf8-33da-baff-204a3086d7e0": {
      "content": "${1:obj}.prevAll('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "preva": true
      },
      "source": "snippets/coffee"
    },
    "a8f659ed-0466-3b7b-8070-632403e170af": {
      "content": "margin-left: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "a8f984b6-349a-3d72-b58b-a86f77bf0564": {
      "content": "appear-to-class=\"$1\"$0",
      "doc": "appear-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-to-class",
      "matches": {
        "appeartoclass": true,
        "vue appear-to-class": true
      },
      "source": "javascript/vue"
    },
    "a908496c-edad-3ace-878e-c22a20d9597d": {
      "content": ".attr(\"${1}\", ${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".attr": true
      },
      "source": "vim-snippets/snippets"
    },
    "a90d1549-c2f4-3f83-89e7-e991ab400292": {
      "content": "margin: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "a90da04c-34ea-304e-890b-7cd8236657b9": {
      "content": "_.findLastKey(${object}, ${predicate})",
      "doc": "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(o) { return o.age < 40; });\n// => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findLastKey(users, 'active');\n// => 'pebbles'\n\nThis method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlastkey",
      "matches": {
        "lodash findlastkey": true
      },
      "source": "javascript/lodash"
    },
    "a9103b1f-3d8e-3584-955d-ffa45a2e3a1c": {
      "content": "while $1 do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a9148436-7c7d-3359-a757-e44210557f1a": {
      "content": "page-break-after: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "a91574f1-fd70-324c-9da7-c72bb266ef09": {
      "content": "\\\\{ ${0} \\\\}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\{ \\}",
      "matches": {
        "\\{": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9161701-7bbb-3af2-94e3-abc5c02ada79": {
      "content": "static getDerivedStateFromProps(props, state) {\n\t${1}\n}",
      "doc": "Invoked right before calling the render method, both on the initial mount and on subsequent updates.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getDerivedStateFromProps",
      "matches": {
        "gdsfp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a9175179-ab14-38bd-9edd-6bd8f4495fb0": {
      "content": "@doc \"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a91a549c-28d1-3c9f-9a03-0073c40f7b57": {
      "content": "func ${1:fname}(${2}) ${3:int }{\n  ${0:TARGET:return }\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func ...() { ... }",
      "matches": {
        "fn": true,
        "func": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a920b6a4-77b8-314a-9bf5-756d62a054c0": {
      "content": "_.has(${object}, ${path})",
      "doc": "var object = { 'a': { 'b': 2 } };\nvar other = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.has(object, 'a');\n// => true\n\n_.has(object, 'a.b');\n// => true\n\n_.has(object, ['a', 'b']);\n// => true\n\n_.has(other, 'a');\n// => false\n\nChecks if `path` is a direct property of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-has",
      "matches": {
        "lodash has": true
      },
      "source": "javascript/lodash"
    },
    "a9211fcc-6185-3cf2-a2c4-5eca79d52e03": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "a926e9f4-1e95-3b8a-8c2f-f5b544da4014": {
      "content": "# SCM Resource, Chef::Provider::Git\ngit ${1:\"/destination/path\"} do # Path to clone/checkout/export the source to\n\t${2:#}repository ${3} # URI of the repository\n\t${4:#}revision ${5:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${6:#}reference ${7} # (Git only) alias for revision\n\t${8:#}user ${9:nil} # System user to own the checked out code\n\t${10:#}group ${11:nil} # System group to own the checked out code\n\t${12:#}depth ${13:nil} # (Git only) Number of past revisions to include in Git shallow clone\n\t${14:#}enable_submodules ${15:\"false\"} # (Git only) performs a submodule init and submodule update\n\t${16:#}remote ${17:\"origin\"} # (Git only) remote repository to use for syncing an existing clone\n\t${18:#}ssh_wrapper ${19} # (Git only) path to a wrapper script for running SSH with git. GIT_SSH environment variable is set to this.\n\t${20:#}${21:action :sync} # Update the source to the specified revision, or get a new clone (Default)\n\t${22:#}${23:action :checkout} # Clone the source. Does nothing if a checkout is available\n\t${24:#}${0:action :export} # Export the source, excluding or removing any version control artifacts\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "git": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9270b78-45a1-3d84-8d88-81954eea7720": {
      "content": "${1:void} ${2:function_name}()\n{\n\t${3}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun0": true
      },
      "source": "vim-snippets/snippets"
    },
    "a92e2a57-29a1-3e08-a569-24fbf30a2c4a": {
      "content": "{% import '${1:#:module}' as ${2:#:namespace} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% import '...' as ... %}",
      "matches": {
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a9348e05-3535-31fc-ae05-82a9ff7c8f78": {
      "content": "xit('${1:}', () => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "xit('should do', () => { ... })",
      "matches": {
        "xit": true
      },
      "source": "vim-snippets/snippets"
    },
    "a945302e-ab3c-3225-ad64-955b896d36bf": {
      "content": "border-fit: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "a94bf04e-94c6-3092-a5cd-acf279b90634": {
      "content": "position: absolute;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "a953a13b-0244-3383-ac0a-818bcc9af658": {
      "content": "font-family: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9579509-666d-3a84-ae4e-b3c986dd3203": {
      "content": "background-color: transparent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "a95c1e9c-fb54-383c-8066-b022f42097da": {
      "content": "<c:forEach items=\"${${1}}\" var=\"${2}\" varStatus=\"${3}\">\n\t${0:<c:out value=\"$2\" />}\n</c:forEach>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfore": true
      },
      "source": "vim-snippets/snippets"
    },
    "a961c500-8e68-39a6-b812-45d9ae9d01b9": {
      "content": "mixed.when()",
      "doc": "mixed.when(keys: string | Array<string>, builder: object | (value, schema)=> Schema): Schema\n\nAdjust the schema based on a sibling or sibling children fields. You can provide an object\nliteral where the key is is value or a matcher function, then provides the true schema and/or\notherwise for the failure condition.is conditions are strictly compared (===) if you want to use a different form of equality you\ncan provide a function like: is: (value) => value == true.Like joi you can also prefix properties with $ to specify a property that is dependent\non context passed in by validate() or isValid. when conditions are additive.let schema = object({\n  isBig: boolean(),\n  count: number()\n    .when(\"isBig\", {\n      is: true, // alternatively: (val) => val == true\n      then: yup.number().min(5),\n      otherwise: yup.number().min(0)\n    })\n    .when(\"$other\", (other, schema) => (other === 4 ? schema.max(6) : schema))\n});\n\nawait schema.validate(value, { context: { other: 4 } });\nYou can also specify more than one dependent key, in which case each value will be spread as an argument.let schema = object({\n  isSpecial: boolean(),\n  isBig: boolean(),\n  count: number().when([\"isBig\", \"isSpecial\"], {\n    is: true, // alternatively: (isBig, isSpecial) => isBig && isSpecial\n    then: yup.number().min(5),\n    otherwise: yup.number().min(0)\n  })\n});\n\nawait schema.validate({\n  isBig: true,\n  isSpecial: true,\n  count: 10\n});\nAlternatively you can provide a function that returns a schema\n(called with the value of the key and the current schema).let schema = yup.object({\n  isBig: yup.boolean(),\n  count: yup.number().when(\"isBig\", (isBig, schema) => {\n    return isBig ? schema.min(5) : schema.min(0);\n  })\n});\n\nawait schema.validate({ isBig: false, count: 4 });\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-when",
      "matches": {
        "yup mixed when": true
      },
      "source": "javascript/yup"
    },
    "a965fcaf-e519-3479-813f-3ad9ca9934f0": {
      "content": "{\n\t\"type\": \"collection\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_collection": true
      },
      "source": "vim-snippets/snippets"
    },
    "a967ccc0-d265-37f0-aadc-ebb7eef5d43d": {
      "content": "bezier(${1:x1}, ${2:y1}, ${3:z1}, ${4:cx1}, ${5:cy1}, ${6:cz1}, ${7:cx2}, ${8:cy2}, ${9:cz2}, ${10:x2}, ${11:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "bezier": true
      },
      "source": "vim-snippets/snippets"
    },
    "a974f132-3949-3507-835e-5814e02a55f1": {
      "content": "version(${1:/*version name*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "version (version)",
      "matches": {
        "version": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a978dc41-3f73-3869-a944-3fe82129639b": {
      "content": "(- ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      },
      "source": "vim-snippets/snippets"
    },
    "a97e06bf-0e2f-34a4-be78-4a8a7573d083": {
      "content": "console.clear();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.clear",
      "matches": {
        "cclear": true
      },
      "source": "snippets/javascript"
    },
    "a98bd3a0-92b6-3061-8785-19f75df3109d": {
      "content": "import React, { Component } from 'react'\nimport { View, Text } from 'react-native'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})\n",
      "doc": "Creates a React Native component class with PropTypes with connected redux and ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeClassComponentRedux",
      "matches": {
        "rncredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "a99d4b06-2767-34d1-97bf-92824a0e8be6": {
      "content": "Mouse Over    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Over",
      "matches": {
        "mover": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a9a14044-12f9-3695-b5a3-426e6b8e5eae": {
      "content": "{% header \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig header",
      "matches": {
        "header": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9a2ccec-c55a-346a-be3b-e45d4557dfd8": {
      "content": "include::${1:example.doc}[]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "include::example.doc",
      "matches": {
        "inc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a9a887f6-7ac5-30ec-a16a-e739f19060cb": {
      "content": "cond do\n\t${1} ->\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9aca2d8-703c-3a85-84ee-0d1261e66ce6": {
      "content": "font-smooth always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9b0f0a4-832b-3a1e-a556-365c517beabd": {
      "content": "validates_presence_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:can't be blank}\"}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of if (vpif) 2",
      "matches": {
        "vpif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a9b16dcd-7111-3781-a225-0e2b29d2e289": {
      "content": "\\\\begin{equation}\n\t\\\\label{eq:${2}}\n${0:${VISUAL}}\n\\\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "Labeled equation environment",
      "matches": {
        "eql": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9b2aa14-df9c-3036-9d3b-9d729911e33a": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9b489d9-480f-310b-bf11-429783a2f8f2": {
      "content": "vertical-align: sub;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9b58d3c-2401-3db8-896b-f35308c2d60e": {
      "content": "#[test]\nfn ${1:function_name}_test() {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Unit test function",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9b9567e-65c6-3ac9-b0c5-3369984cb5b1": {
      "content": "float: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9be46d3-85ac-3be1-9ffc-140514540bae": {
      "content": "proc ${1:name} {${2:args}} \\\n{\n\t$3\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "proc... (proc)",
      "matches": {
        "proc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a9c0c518-7703-379b-bb53-3f99161daa7c": {
      "content": "scope :${1:name}, lambda do |${2:value}|\n\twhere('${3:field = ?}', ${0:value})\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sl": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9c77787-bbd6-325c-9a24-0d596af2dc94": {
      "content": "${1:fn}.call(${2:this}, ${3:arguments})",
      "doc": "function call",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-call",
      "matches": {
        "base function call": true
      },
      "source": "javascript/base"
    },
    "a9daaa1d-36b2-3e14-8dd0-538ac6f34a05": {
      "content": "type ${1} struct {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true,
        "ts": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "a9db3045-d339-3244-953a-58c079bf5dda": {
      "content": "t.text :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create text column",
      "matches": {
        "tct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "a9dbadfc-0446-3e3a-b706-8732eff8438b": {
      "content": "_.isArrayBuffer(${value})",
      "doc": "_.isArrayBuffer(new ArrayBuffer(2));\n// => true\n\n_.isArrayBuffer(new Array(2));\n// => false\n\nChecks if `value` is classified as an `ArrayBuffer` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraybuffer",
      "matches": {
        "lodash isarraybuffer": true
      },
      "source": "javascript/lodash"
    },
    "a9dd05e0-13b0-3361-8e19-0ba4e20244c7": {
      "content": "System.err.println(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "errln": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9e3c3ba-03b0-3171-b19b-0ad341d7cf6e": {
      "content": "static defaultProps = {\n\t${1}: ${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "static defaultProps",
      "matches": {
        "sdp": true
      },
      "source": "snippets/javascript"
    },
    "a9f17d72-4946-31fe-8e4f-256d881ae1c2": {
      "content": "var_dump(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vd": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9f28782-9179-3800-b131-744b3aadb833": {
      "content": "validation_errors();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_validation_errors": true
      },
      "source": "vim-snippets/snippets"
    },
    "a9f2ff9c-a180-3b31-b1d5-72f3f0102237": {
      "content": "Wait Until Element Is Visible    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Visible",
      "matches": {
        "wueiv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "aa02ffbf-14de-32fa-a3f8-0b5f5f55147a": {
      "content": "const ${1:feature}Reducer = createReducer(\n\tinitialState,\n\ton($1Actions.action, state => ({ ...state, ${2:prop}: ${3:updatedValue} })),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n\treturn $1Reducer(state, action);\n}",
      "doc": "Creates an NgRx Reducer",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Reducer",
      "matches": {
        "a-ngrx-create-reducer": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "aa0b4945-6cb6-31b0-8c96-fd2ff8a91d88": {
      "content": "set ytics ${1:#:start}, ${2:#:incr}, ${3:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set ytics start, incr, end",
      "matches": {
        "ytics": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aa0b96e3-2eb5-3b90-8ad2-f76bd94574a5": {
      "content": "<form id=\"${1}\" action=\"${2}\" method=\"${3:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form#": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa1273be-60f5-339f-ab33-21abd6bd285d": {
      "content": "<input type=\"password\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:password": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa19275b-26a5-39e6-bffe-9284237fb943": {
      "content": "#[cfg(test)]\nmod tests {\n\tuse super::${1:*};\n\ttest${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Test module",
      "matches": {
        "testmod": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa2179f8-721d-3929-af1f-1f31ea07a1b2": {
      "content": "after idle ${0:script}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afi": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa21ed7b-7aa2-36fc-b5a7-723d0b8e437f": {
      "content": "if ${1:#:condition} then\n\t${2}\nelse\n\t${3}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "if ... then ... else ...",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aa223f60-2c81-3ffc-857b-672475ba2c00": {
      "content": "\\ref{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\ref": true,
        "ref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aa29353f-55f8-3e5b-b291-ba20ec98f1b1": {
      "content": "${1:obj}.size()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      },
      "source": "snippets/coffee"
    },
    "aa2d78b1-fb67-39ab-bbe2-a54b64beeb6d": {
      "content": "${1:FIELDNAME} = models.USStateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "USStateField",
      "matches": {
        "musstate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "aa312530-4154-3e0a-960b-4f67ec54fd55": {
      "content": "lmObj <- lm(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, na.action = ${6:na.action})\nsummary(lmObj)\nplot(lmObj, which=c(1)) # Plot residuals versus fitted",
      "doc": "Fit a linear model and create a plot",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Linear model with plot",
      "matches": {
        "lmplot": true
      },
      "source": "vscode-R/snippets"
    },
    "aa3a13fd-93d7-3131-b448-7a8d2ec0d80d": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplateUrl: '${2:name}.component.html'\n})\n\nexport class ${3:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }$0\n}",
      "doc": "Angular component",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Component",
      "matches": {
        "a-component": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "aa40a84b-e9e9-3c40-86a7-5e92b7b81b4b": {
      "content": "console.assert(${1:expression}, ${2:object});",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleAssert",
      "matches": {
        "cas": true
      },
      "source": "vscode-javascript/snippets"
    },
    "aa41ed97-20d7-3a41-a58f-85b5943b3540": {
      "content": "align-self first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa44eea3-19d2-39df-b9a3-871842819e2f": {
      "content": "JSON.parse ${0:jstr}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsonp": true
      },
      "source": "snippets/coffee"
    },
    "aa4988ca-7768-34d4-bdad-a87fd5aa8e75": {
      "content": "$.extend(${1:true, }${2:target}, ${3:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extend": true
      },
      "source": "snippets/coffee"
    },
    "aa528acf-b5f2-3f73-b012-14306e11738d": {
      "content": "{% when ${1:condition} %}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa61db28-a8d7-3a20-b7d6-7bcd9877f195": {
      "content": "\\begin{equation*}\n\t${1:TARGET}\n\\end{equation*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{equation*} \\equation*": true,
        "equation*": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aa6830e1-792a-37e0-b529-a0b605deb703": {
      "content": "{% ssi ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa6aa0c6-7e12-3f3e-b4d0-4a7f342a67b5": {
      "content": "quad(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${0:y4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "quad": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa6c2f2e-565b-3ef3-9650-59e697533597": {
      "content": "play();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aa733c6c-f095-3dd5-90f7-e971d06f164f": {
      "content": "public class ${1:MyException} : ${2:Exception}\n{\n\tpublic $1() { }\n\tpublic $1(string message) : base(message) { }\n\tpublic $1(string message, Exception inner) : base(message, inner) { }\n\tprotected $1(\n\t\tSystem.Runtime.Serialization.SerializationInfo info,\n\t\tSystem.Runtime.Serialization.StreamingContext context)\n\t\t\t: base(info, context) { }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exc": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa7fd3fb-fc1b-396a-962e-b7a9b368c2c7": {
      "content": "const ${1:context} = useContext(${2:contextValue})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usecontext",
      "matches": {
        "react usecontext": true,
        "usecontext": true
      },
      "source": "javascript/react"
    },
    "aa81300e-8fb9-3aac-a0e1-6598e3805f96": {
      "content": "_.differenceWith(${array}, ${values}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\n_.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n// => [{ 'x': 2, 'y': 1 }]\n\nThis method is like `_.difference` except that it accepts `comparator`\nwhich is invoked to compare elements of `array` to `values`. The order and\nreferences of result values are determined by the first array. The comparator\nis invoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.pullAllWith`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-differencewith",
      "matches": {
        "lodash differencewith": true
      },
      "source": "javascript/lodash"
    },
    "aa8b9400-7591-30aa-b62d-fd80dae4d6fc": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa8f9bd8-4217-3a99-b4a9-d0b0b9212197": {
      "content": "console.count(${1:label});",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleCount",
      "matches": {
        "cco": true
      },
      "source": "vscode-javascript/snippets"
    },
    "aa8f9dff-a68a-31f5-9242-7901d2851689": {
      "content": "{\n\t\"type\": \"url\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_url": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa92635d-bbc4-308a-b0f4-e3a79d21aea7": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", type: ${2::rjson}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline,type) (rit)",
      "matches": {
        "rit": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "aa93e39f-e1fe-34ff-bd39-095af3250353": {
      "content": "word-break: loose",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa94664d-70e7-3a12-b1af-00a410f6f215": {
      "content": "import React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponent",
      "matches": {
        "rcc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "aa950557-b311-39dc-bfa8-f2e72461a4ed": {
      "content": "-webkit-box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "aa9cb6de-5e39-3222-b5a3-55e4b6e3391c": {
      "content": "%__MODULE__{\n\t${1:key_name}: ${2:value}\n}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%M": true
      },
      "source": "vim-snippets/snippets"
    },
    "aaa944ae-4ecb-325a-b419-2f6e44760018": {
      "content": "enum ${1:#:name} {\n    ${0:TARGET}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aaadd6d6-ed62-3f63-ac2b-cf79bca8472d": {
      "content": "\\begin{abstract}\n\t${1:TARGET}\n\\end{abstract}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{abstract} \\abstract": true,
        "abstract": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aaba115d-df29-398f-8f3f-ef817f0fd882": {
      "content": "@import '${0}';",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "aabfdcb2-d730-39dc-8ff6-9d27b113056a": {
      "content": "min-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      },
      "source": "vim-snippets/snippets"
    },
    "aac18ad5-f11c-3a1f-8007-88039b8be33a": {
      "content": "import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  ${1:Model1}: {},${0}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};",
      "doc": "NgRx Data Entity Metadata",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-entity-metadata",
      "matches": {
        "a-ngrx-data-entity-metadata": true,
        "angular ng rx data entity metadata": true
      },
      "source": "javascript/angular"
    },
    "aac5e266-0c96-37ab-822e-27b3615c21cf": {
      "content": "$.queue(${1:element}${2:, name}${3:, newQueue})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queuee": true
      },
      "source": "snippets/javascript"
    },
    "aac82806-2cc1-3f16-afc4-bae12e73e1ec": {
      "content": "${1:import org.scalatest.Suite}\n${0:import org.scalatest.FunSuite}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scalatest": true
      },
      "source": "vim-snippets/snippets"
    },
    "aac90653-0f97-3172-89bf-952e9f2b9c7a": {
      "content": "doctest ${1:filename}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "aaccdae4-601c-3101-bd47-88d55119ffd0": {
      "content": "${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undele": true
      },
      "source": "snippets/javascript"
    },
    "aacd0706-af92-3d73-9131-be53d69f52d3": {
      "content": "<a class=\"${1}\" href=\"${2:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a.": true
      },
      "source": "vim-snippets/snippets"
    },
    "aad42a98-4e86-34f6-80c5-f757e32b790a": {
      "content": "text-indent: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      },
      "source": "vim-snippets/snippets"
    },
    "aad7129e-24a5-3c8e-83ea-1ec4eaa347bd": {
      "content": "if ${1}err != nil {\n\treturn errors.Wrap(err, \"${2}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error handling with errors.Wrap",
      "matches": {
        "errwr": true
      },
      "source": "vim-snippets/snippets"
    },
    "aadd705b-d6ca-3772-878a-c48292441e46": {
      "content": "public ${1:String} get${2}() {\n\treturn ${0:fieldName};\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/snippets"
    },
    "aae19629-2bd9-3905-9ab7-efdfcf4c3adc": {
      "content": "<?=${0}?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?=": true
      },
      "source": "vim-snippets/snippets"
    },
    "aae523a1-33b4-315c-819d-030ddbdfac18": {
      "content": "padding-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "aaed481a-668c-342b-a157-e37129b8f19b": {
      "content": "import { Link } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router - Link",
      "matches": {
        "imbrl": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "aaf49f31-dae0-32ee-b5ff-d571121e9967": {
      "content": "border-fit: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      },
      "source": "vim-snippets/snippets"
    },
    "aaf8bc5d-24d3-3060-867c-33a3e262960b": {
      "content": "${1:app}.post('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express POST",
      "matches": {
        "epost": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ab0064c6-eab6-36c4-9217-d148ba9c9ac7": {
      "content": "getInitialState: ->\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define getInitialState",
      "matches": {
        "getInitialState": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ab04cde4-b29d-3849-b7e0-2c32c6e57b2f": {
      "content": "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}})\n",
      "doc": "Creates a React component class with connected redux and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-redux",
      "matches": {
        "rcredux": true,
        "react component class redux": true
      },
      "source": "javascript/react"
    },
    "ab14f2b6-0aae-3ad4-8a75-5a35dacd18c5": {
      "content": "@since ${0:#:version}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "since": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ab2c4d81-db32-374f-b300-923c97d3026b": {
      "content": "int opApply(Dg)(Dg dg) if(ParameterTypeTuble!Dg.length == 2) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opApply": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab2d6102-d630-3066-bdbf-e8d341bbde68": {
      "content": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ptpython": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab337681-ea48-39c3-a9b0-fb32250d3cdb": {
      "content": "{% for ${1:item} in ${2} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab3b460b-27f6-3aee-a373-35c3f11c0a1a": {
      "content": "Element Should Be Disabled    \\${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Disabled",
      "matches": {
        "esbd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ab3c709a-2d3a-3466-8569-1d039c6ae7b3": {
      "content": "${1:ModelName}::model()->exists(${2:condition}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yexists": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab438dd7-3423-3b86-93ed-7a34c05f0cc4": {
      "content": "console.assert(${1:expression}, ${0:obj});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.assert",
      "matches": {
        "ca": true
      },
      "source": "snippets/javascript"
    },
    "ab4c6016-c76a-3a85-be86-d1e46c06abe1": {
      "content": "frustrum(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${0:far});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frustrum": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab56ab53-0743-3e83-a707-4a9831b32c3c": {
      "content": "background-repeat ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab5d6d1e-534e-373e-b139-76d238719064": {
      "content": "for (${1} : ${2}) {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true,
        "foreach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ab600cb6-ec3a-3b15-a0d2-2ee12ffa7cd1": {
      "content": "if (${1:true}) {${2}}\nelse{${0}}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab61354c-c017-3fd8-b2f7-cd277801070f": {
      "content": "(map ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab6d06fd-f3b2-3f7e-ac20-c50c17da87b7": {
      "content": "\\${5:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:default}",
      "matches": {
        "5:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ab72f1e0-1c83-3df8-bf4e-f7f3fdc02788": {
      "content": "std::vector<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vector": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab7e7cff-c635-3587-9d80-c68e333b5461": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxs": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab8bd772-5031-384c-9335-0278559d7b47": {
      "content": "import { Route } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router - Route",
      "matches": {
        "imbrr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ab8cf634-d21f-3563-ab19-0703dc7da208": {
      "content": "_.multiply(${multiplier}, ${multiplicand})",
      "doc": "_.multiply(6, 4);\n// => 24\n\nMultiply two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-multiply",
      "matches": {
        "lodash multiply": true
      },
      "source": "javascript/lodash"
    },
    "ab97aec4-d81d-3668-9516-b91b735489ee": {
      "content": "grid-auto-columns: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "ab9dce4e-5019-3035-8b1a-66442c2f47e1": {
      "content": "void main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "aba3688a-1427-3acf-a460-42d152e36cc2": {
      "content": "cursor: text;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "abaa9c75-8283-3800-9788-2ea46ea4ae34": {
      "content": "try\n  ${1:TARGET}\nfinally\n  ${2}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try ... finally ... endtry",
      "matches": {
        "tryf": true,
        "tryfinally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "abab609a-83cd-35a3-acf0-13ef3115d80c": {
      "content": "Yii::app()->clientScript->registerCssFile('${0:file}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregcf": true
      },
      "source": "vim-snippets/snippets"
    },
    "abad661f-255d-3e7e-b888-ff84f70f9847": {
      "content": "setTimeout(function() { ${0} }, ${1:10});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setTimeout-function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "abb1f6a4-6d92-378a-b393-f4afe0f88527": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "abbffdbc-eefc-3bff-8a5b-8e5236176898": {
      "content": "for ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for ... { ... }",
      "matches": {
        "for": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "abc1f7c4-f7e4-39ac-a836-67ccdc247088": {
      "content": "+------------------+------------+-----------------------+------------+\n|${1:#:cel} | | | |\n+==================+============+=======================+============+\n| | | | |\n+------------------+------------+-----------------------+------------+\n| | | | |\n+------------------+------------+-----------------------+------------+",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "grid_table",
      "matches": {
        "table_grid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "abcb18b5-2c20-3b78-bb62-1a2bd1d63906": {
      "content": "cat(${1:file}, ${2:sep = ${3:\"\"}}, ${4:fill = ${5:FALSE}}, ${6:labels = ${7:NULL}}, ${8:append = ${9:FALSE}})",
      "doc": "Cat",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cat",
      "matches": {
        "cat": true
      },
      "source": "vscode-R/snippets"
    },
    "abcc659f-158f-3d95-883e-09154f7ce0b7": {
      "content": "function mapDispatchToProps(dispatch) {\n\treturn {\n\t}\n\n}",
      "doc": "Adds the redux mapDispatchToProps function",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "dispatchRedux",
      "matches": {
        "disp": true
      },
      "source": "vscode-react/snippets"
    },
    "abd1b93b-5cbe-338f-8d29-d8b23124922e": {
      "content": "my $${1:var} = do { local $/; open my $file, '<', \"${2:file}\"; <$file> };\n${0}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slurp": true
      },
      "source": "vim-snippets/snippets"
    },
    "abd5269f-f569-3084-8601-6e27659229e6": {
      "content": "inject(${1:init}) { |${2:mem}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inj": true
      },
      "source": "vim-snippets/snippets"
    },
    "abdb2326-5c74-3dfa-a57f-c99586812d17": {
      "content": "<header id=\"${1}\">\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header#": true
      },
      "source": "vim-snippets/snippets"
    },
    "abe34c89-1c89-3bf7-9a34-838661a69302": {
      "content": "{% raw %}\n\t\t$1\n{% endraw %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "escaped block",
      "matches": {
        "raw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "abe4a41a-5e0d-3caa-a0d6-958279f07b0f": {
      "content": "${1:obj}.prevAll('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "preva": true
      },
      "source": "snippets/javascript"
    },
    "abe5d42f-3afb-3b86-accf-75d0be211c97": {
      "content": "For ${1:n} = ${3:1} to ${2:count}\n\t${0:; code...}\nNext",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "abf73e2f-b873-3126-acfe-d521fecef500": {
      "content": "$.grep(${1:array}, function (item, index) {\n\t${2}\n}${0:, true});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grep": true
      },
      "source": "snippets/javascript"
    },
    "ac00ffb4-9226-3528-86a0-e6a63d9f27c9": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select { case a := <-chan: ... }",
      "matches": {
        "select": true
      },
      "source": "gosnippets/snippets"
    },
    "ac0abf36-8e37-395f-92c2-0fe987910dda": {
      "content": "<style lang=\"scss\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with scss",
      "matches": {
        "style_with_scss": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ac0dda47-a7df-30c3-81ef-90fca8c30a12": {
      "content": "align-items: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac0e3d88-3104-3bdb-9c85-4ec0fb7dc24d": {
      "content": "glm(${1:formula}, ${2:family = {3:gaussian}}, ${4:data})",
      "doc": "Generalized Linear Models",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "glm",
      "matches": {
        "glm": true
      },
      "source": "vscode-R/snippets"
    },
    "ac0f0ca3-9054-3b10-a52e-4cdbaf258f54": {
      "content": "justify-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac2e6e54-05e0-36cb-809f-376be8ad02c7": {
      "content": "<aside id=\"${1}\">\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside#": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac330dd7-c63d-36da-bd5a-dad17c3d36b5": {
      "content": "*args, **kwargs${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "akw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac34c44e-7aa1-33fe-a175-b85620c56645": {
      "content": "background-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac3c08ec-90e2-3b6a-ab84-711c998d19db": {
      "content": "border-fit space",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac488c54-f427-371a-b116-079ed8458bd8": {
      "content": "this.setState((state, props) => { return { $0 }})\n",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ac4ac3e4-534a-3869-b578-32b8d6b05f0d": {
      "content": "{% include \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "include",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ac4f4c35-130b-31b8-9c10-a48e5efecf9c": {
      "content": "return(${0})",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac556e1e-2c60-31b0-a119-eb0c6033010a": {
      "content": "<?php echo htmlentities(${1}, ENT_QUOTES, 'utf-8') ?>${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echoh": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ac5b9bb6-447e-379d-88ef-2bc6502adf41": {
      "content": "class ${0:name} extends Suite {\n\tdef test() {\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "suite": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac5e5d77-381f-3b02-8991-b2b9d8db8d1f": {
      "content": "&#x21E4;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backtab": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac5f9975-ff50-31bd-93d0-49907d31dca6": {
      "content": "\\dv[${1:${VISUAL}}]{${2}}{${3}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Derivative",
      "matches": {
        "dv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ac654c7f-cc3d-363c-89c3-ac0bdbe0eace": {
      "content": "display: block;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac6c16bf-6d0b-3826-a586-71457654c7eb": {
      "content": "font-style: oblique;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac732640-226c-3fa2-8ae1-059e25b8d0a8": {
      "content": "pure @safe nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psn": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac7dc3d1-d522-3865-8055-72ae63f31118": {
      "content": "list-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac81e7b7-2ed7-3d4a-b039-8430e0b45e47": {
      "content": "${1:obj}.delegate('${2:selector expression}', '${3:event name}', function (${4:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dele": true
      },
      "source": "snippets/javascript"
    },
    "ac832994-eacc-3d5c-b8eb-343e05a340f7": {
      "content": "wont_be_instance_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbio": true
      },
      "source": "vim-snippets/snippets"
    },
    "ac852c63-12c7-3fc3-90ba-0d2d3402743e": {
      "content": "if err != nil {\n\t${1}\n\treturn\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error handle and return",
      "matches": {
        "errh": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "ac8a8fa8-1b6c-32c5-bed2-15c0497d08ed": {
      "content": "background-break: each-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      },
      "source": "vim-snippets/snippets"
    },
    "aca4810b-a36f-33b1-a8c8-d7b690fe5454": {
      "content": "package main\nimport (\n  \"fmt\"\n)\nfunc main() {\n  fmt.Printf(\"Hello, world\\n\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package main\\nimport fmt...",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aca55803-60cd-369f-b9f1-677c0b9eafeb": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun1": true
      },
      "source": "vim-snippets/snippets"
    },
    "acad86a2-b729-3e53-86e2-d8c28b03a560": {
      "content": "\\ ${1:x} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "λ",
      "matches": {
        "lambda": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "acb39a6a-135a-3688-a15a-46fa35da4968": {
      "content": "overflow-y hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "acb54263-ff1e-3173-80ea-71992b94a95c": {
      "content": "${1} : out std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "osv": true
      },
      "source": "vim-snippets/snippets"
    },
    "acb94762-3a09-34a7-b4bb-dad2b4e4e78f": {
      "content": "{% autoescape ${0:xhtml_escape | None} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/snippets"
    },
    "acbafd80-a445-3fca-98c5-e60d67970a4e": {
      "content": "each_byte { |${1:byte}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eab": true
      },
      "source": "vim-snippets/snippets"
    },
    "acbc2c47-3a3b-3e87-8505-981921a1e5ae": {
      "content": "?assertException(${1:Class}, ${2:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asexc": true
      },
      "source": "vim-snippets/snippets"
    },
    "acbc83c0-f7a0-33bb-a1c6-d981e36a662a": {
      "content": "= render :partial => \"${0:item}\"",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      },
      "source": "vim-snippets/snippets"
    },
    "acc02fb3-79b4-3682-884c-5e3cd29615bd": {
      "content": "beforeRouteUpdate(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router component guards beforeRouteUpdate",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteUpdate",
      "matches": {
        "vbeforerouteupdate": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "accb4cb2-2cd9-342f-8ada-49331d44bbcd": {
      "content": "$.ajax({\n\turl: '${1:mydomain.com/url}',\n\ttype: '${2:POST}',\n\tdataType: '${3:xml/html/script/json}',\n\tdata: $.param( $('${4:Element or Expression}') ),\n\tcomplete: function (jqXHR, textStatus) {\n\t\t${5:// callback}\n\t},\n\tsuccess: function (data, textStatus, jqXHR) {\n\t\t${6:// success callback}\n\t},\n\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t${0:// error callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajax": true
      },
      "source": "snippets/javascript"
    },
    "accf3076-c7df-3bd5-9906-d52429e44e0c": {
      "content": "net.createServer(function(${1:socket}){\n\t$1.on('data', function(${3:data}){\n\t\t$4\n\t});\n\t$1.on('end', function(){\n\t\t$5\n\t});\n}).listen(${6:8124});",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "net.createServer",
      "matches": {
        "ncs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "acd434a9-dc49-3287-bb47-eeda3d765d3d": {
      "content": "@include ${1:mixin}(${2});",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ace7165e-fcd8-3247-9687-a4243c9c5be7": {
      "content": "redirect_to(${2:${12:parent}_${13:child}_path(${14:@}${15:$12}, ${16:@}${17:$13})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (nested path)",
      "matches": {
        "renp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ace81ccc-e339-3aea-9f8b-3cb6368c29ca": {
      "content": "with ${1:what}${0: with}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "ace91f73-3d35-3a9f-9ffc-0323df06cb14": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} else {\n\t${3:#:code...}\n}\n${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aceb4f02-a8c3-3e6a-8b1a-113370bc96a5": {
      "content": "setInterval(() => {\n\t${2}\n}, ${0:intervalInms})\n",
      "doc": "Executes the given function at specified intervals in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setInterval",
      "matches": {
        "sti": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "acee0cf4-bce2-3147-a2d0-5ac796379532": {
      "content": "echo CHtml::radioButton('${1:name}', ${2:false},array(${3:optionName}=>${0:optionValue} );",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrb": true
      },
      "source": "vim-snippets/snippets"
    },
    "acf2d126-dfcc-3e9e-b696-7f4d4c9b5dd1": {
      "content": "validates_inclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not included in the list}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of if",
      "matches": {
        "viif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "acf646c7-e221-3a6c-bd50-e6feffc40192": {
      "content": ".DEFAULT_GOAL := ${1}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/snippets"
    },
    "acfade10-59c7-3d4c-84ed-d758c8528f03": {
      "content": "defp ${1:name}, do: ${2}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfp": true
      },
      "source": "vim-snippets/snippets"
    },
    "acfaf56f-c916-31be-a178-17416167f38f": {
      "content": "overflow-y visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "acfddb07-debd-3116-938c-7843756b3aed": {
      "content": "let ${1} = ${2}\nin ${3}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad02f611-03f5-3d55-8e02-c5f8ce90063a": {
      "content": "display: table-row-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad0e7410-4eb9-3f39-b659-09d5b4abe59f": {
      "content": "vertical-align: super",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad126129-e0c9-34fa-9c85-385ed2ba6ff1": {
      "content": "place-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad1a46f3-578c-36fe-933b-529ad0b85283": {
      "content": "{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.${1:value_key}.service.annotations | indent 4 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "annotations_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad20bb79-294c-351f-8c26-c2c23a150363": {
      "content": "min-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad24085b-8e81-3d46-9d9c-9fc72d2d4abf": {
      "content": "overflow-x: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad2d4cf4-f301-3964-ae71-622041d8c9be": {
      "content": "directionalLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "diretionalLight": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad318ce2-f5df-3353-9f0a-a328d8481377": {
      "content": "@tag :pending",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad3964a0-a6ac-3d68-933b-3b6a401f21c2": {
      "content": "@Output() ${1:eventName} = new EventEmitter<${2:eventType}>();",
      "doc": "Angular @Output event and emitter",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Output Event",
      "matches": {
        "a-output-event": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "ad44e545-be40-3e5e-9a72-fe4cbed9758b": {
      "content": "#!/usr/bin/env python3",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad48da80-5e91-3787-8bf9-931aad40b91b": {
      "content": "@for ($i = 0; $i < ${1}; $i++)\n    ${2}\n@endfor",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@for ... @endfor",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ad495348-616e-31c0-b734-d2d886920109": {
      "content": "useEffect(() => {\n\t${1}\n});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useEffect",
      "matches": {
        "usee": true
      },
      "source": "snippets/javascript"
    },
    "ad52cc78-77f6-37ef-bbac-e15eecedb53a": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n${0}\n\treturn nil;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "m": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ad5582e9-3287-3820-a0d0-cf7951cdf1b0": {
      "content": "flex-wrap: ${0:nowrap};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad564c16-1e46-3238-aec2-909d4ceb117f": {
      "content": "/**\n * Gets the value of ${1:foo}\n *\n * @return ${2:string}\n */\n${3:public} function get${4:$1}()\n{\n\treturn $this->${5:$1};\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "PHP Class Getter Setter",
      "matches": {
        "gm": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad59c0f2-7687-3bdf-9758-109513be91b9": {
      "content": "public import ${1:/*module*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "public import (pimp)",
      "matches": {
        "pimp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ad67d3b9-9962-3942-af46-992cda5022ee": {
      "content": "font-family: ${0:Capitals,Impact},fantasy",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad6aca8d-1de0-3fe9-b2b7-6f9b063cdb5c": {
      "content": "${1:document}.querySelectorAll('${0:CSS selector}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qsa": true
      },
      "source": "snippets/javascript"
    },
    "ad71d12a-306a-3785-89a7-c21e1ed3675d": {
      "content": "export const ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React 17 Arrow Function Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactArrowFunctionComponent",
      "matches": {
        "_rafc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ad73fc98-9542-331b-ab2c-033d6d9c47b2": {
      "content": "/**\n * @Route(\"$3\", name=\"$4\")\n * @Method({${5:\"POST\"}})\n * @Template()\n */\npublic function $1Action($2)\n{\n\t$6\n}",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 action",
      "matches": {
        "act": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ad748084-de85-35b7-b06b-0fbccfed21b5": {
      "content": "<script src=\"${0}.js\" charset=\"utf-8\"></script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptsrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad751a8b-ce54-327a-829a-d7142f04ca8b": {
      "content": "chisq.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad76144a-c795-30dd-b630-125f07e8bc59": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-of-required",
      "matches": {
        "prop-types objectof required": true,
        "ptoor": true
      },
      "source": "javascript/prop-types"
    },
    "ad776f96-6160-3a76-9270-f91be6cee17d": {
      "content": "<c:if test=\"${${1}}\">\n\t${0}\n</c:if>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cif": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad845859-29ef-3054-9ace-c9353eae9222": {
      "content": "print(${1:#:string}}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "print": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ad92972a-ea03-3ae7-ad8e-82b5303c6311": {
      "content": "_.runInContext(${context})",
      "doc": "_.mixin({ 'foo': _.constant('foo') });\n\nvar lodash = _.runInContext();\nlodash.mixin({ 'bar': lodash.constant('bar') });\n\n_.isFunction(_.foo);\n// => true\n_.isFunction(_.bar);\n// => false\n\nlodash.isFunction(lodash.foo);\n// => false\nlodash.isFunction(lodash.bar);\n// => true\n\n// Create a suped-up `defer` in Node.js.\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\nCreate a new pristine `lodash` function using the `context` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-runincontext",
      "matches": {
        "lodash runincontext": true
      },
      "source": "javascript/lodash"
    },
    "ad949632-8440-3b2c-ad5c-21c5bccdb118": {
      "content": "enum ${1:Name} {\n\t${2},\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "enum definition",
      "matches": {
        "enum": true
      },
      "source": "vim-snippets/snippets"
    },
    "ad9d633c-1fc3-3973-878e-8b3537a3decb": {
      "content": "brightness(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "brightness": true
      },
      "source": "vim-snippets/snippets"
    },
    "adb03093-dfe5-3705-b775-8df385aa5da4": {
      "content": "${1:trackBy}(index: number, ${2:name}: ${3:model}): ${4:number} {\n  return ${2:name}${5:.id};$0\n}",
      "doc": "TrackBy Function",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "TrackBy Function",
      "matches": {
        "a-trackby": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "adba0f70-af10-3567-92b7-efc98767fc4c": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch (error:ErrorType) {\n\t${2}\n} finally {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "adbce1e3-2948-310c-8e30-eb03ad569ca9": {
      "content": "public int ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+&": true
      },
      "source": "vim-snippets/snippets"
    },
    "adbd615b-7b9b-30b3-b402-183eb93a149c": {
      "content": "page-break-inside: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "adc38b1c-2c77-30b4-9f92-82c30f675ed8": {
      "content": "border-bottom-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "adc40386-03b9-3ebb-962c-1e94695b6e71": {
      "content": "function ${1:name}(${2:arguments}) {\n\t${0}\n}",
      "doc": "named function",
      "filetype": "base",
      "grammar": "lsp",
      "label": "named-function",
      "matches": {
        "base function named": true
      },
      "source": "javascript/base"
    },
    "adc64290-f168-3213-b009-d9c6ec2882fa": {
      "content": "writeln(${1:/*args*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "writeln (wr)",
      "matches": {
        "wr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "adc86417-0463-309e-9cd8-789f8dccdf37": {
      "content": "\"${1:key}\": [\n\t${VISUAL}$0\n],",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Named array",
      "matches": {
        "na": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "adcbad27-dc01-3cc6-80f4-ec189a3f8394": {
      "content": "text-justify: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "adcd1f51-2a06-34d7-9abe-7139733980eb": {
      "content": "(if ${1}\n\t(begin\n\t\t${2})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifb": true
      },
      "source": "vim-snippets/snippets"
    },
    "add12140-51a4-3d0b-a211-fc5d948efea2": {
      "content": "while (${1:#:condition}) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "add4e9a4-c3c0-3fea-84ac-b0eaf5a17754": {
      "content": "submethod ${1:submethod_name}(${2:$attr}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smth": true
      },
      "source": "vim-snippets/snippets"
    },
    "add86c79-251f-3f3b-8a83-5956f2f643a4": {
      "content": "display: inline-table;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ade191a1-4ddd-39f2-a2bb-a1c80dfdeadc": {
      "content": "id=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/snippets"
    },
    "ade22db9-d423-3325-aefc-cd6276c9a656": {
      "content": "overflow-x: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "adfcc304-4a14-3a41-a153-81899d1667ff": {
      "content": "before_save $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_save",
      "matches": {
        "befs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ae0f0dd1-aca5-334c-8bae-700258e80831": {
      "content": "mixed.cast()",
      "doc": "mixed.cast(value: any, options = {}): any\n\nAttempts to coerce the passed in value to a value that matches the schema. For example: '5' will\ncast to 5 when using the number() type. Failed casts generally return null, but may also\nreturn results like NaN and unexpected strings.options parameter can be an object containing context. (For more info on context see mixed.validate)",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-cast",
      "matches": {
        "yup mixed cast": true
      },
      "source": "javascript/yup"
    },
    "ae0fbc2c-33c6-3788-9dba-26d65c0fd7cd": {
      "content": "@override",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@override",
      "matches": {
        "@over": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ae1341e1-9fc8-37ed-83a1-74ef12eb4215": {
      "content": "padding: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true,
        "padding": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ae16543b-31a3-3e86-88ad-100181cdc457": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\return ${5:Return parameter description}\n */\n${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun1": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae1817fc-0b06-3f18-8b13-d7d1a3094de0": {
      "content": "<dialog>\n\t${0}\n</dialog>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dialog": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae1a4ea6-41fb-3835-a4fa-7ecb9deed2f7": {
      "content": "= number_to_currency(${1})",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ntc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae2561ff-406b-38a5-a2d0-bf4959cff14a": {
      "content": "buf",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Buffer",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae2d20c4-9458-3b27-bd8a-95489351deae": {
      "content": "norm(${1:value}, ${2:low}, ${0:high});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "norm": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae3fb16d-f790-324d-98d9-9bef6ff6aead": {
      "content": "display: table-row-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae53273b-1ce9-34e0-b730-7305c545a88b": {
      "content": "?assertNotMatch(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnmat": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae5b7261-d5e3-33e6-a3ab-ff5c0af686c0": {
      "content": "<xsl:attribute name=\"${1:name}\">\n\t<xsl:value-of select=\"${2:*}\" />\n</xsl:attribute>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "value-of",
      "matches": {
        "attribute": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae5b9d8e-dcbb-3b96-a6bf-eec699bea658": {
      "content": "font-stretch: ultra-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae5e6834-776b-3fb4-9e7c-6bd120804732": {
      "content": "z-index auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae6c9106-4bd1-347d-ab2e-7830799fd5f0": {
      "content": "widows: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae707fd2-25c4-34cb-9c74-21132682bb4a": {
      "content": "find do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae766a17-fcb5-36af-a4be-7d83a503dbde": {
      "content": "$this->assertNotEquals(${1:$expected}, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotEquals($a, $b)",
      "matches": {
        "asne": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae8894d3-0453-36c3-8fb2-fa207d246f0e": {
      "content": "{% extends \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig extends",
      "matches": {
        "ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae8fc15b-96a5-3685-b7d7-233349666b35": {
      "content": "if $${1:variable} {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae92c252-050f-3d3d-97e4-76e710bcbfc6": {
      "content": "expect($0)",
      "doc": "expect actual value",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect",
      "matches": {
        "exp": true,
        "jest expect": true
      },
      "source": "javascript/jest"
    },
    "ae9d003d-4e0e-3046-be71-fd2781f238ec": {
      "content": "render :update do |${1:page}|\n\t$1.${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "ae9d4ae7-2381-3ef8-9293-450f6e5bb006": {
      "content": "padding: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   all (padding)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ae9f9758-f6f0-392b-9117-5f6c26da2d63": {
      "content": "<figure>${0}</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure": true
      },
      "source": "vim-snippets/snippets"
    },
    "aea1ee8a-6410-323d-9b97-47f4137bcf19": {
      "content": "readinessProbe:\n  httpGet:\n\tpath: /go/api/v1/health\n\tport: 8153\n  initialDelaySeconds: {{ .Values.$1.healthCheck.initialDelaySeconds }}\n  periodSeconds: {{ .Values.$1.healthCheck.periodSeconds }}\n  failureThreshold: {{ .Values.$1.healthCheck.failureThreshold }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "readinessProbe_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "aea56828-4df1-3943-9a42-5c163ba5a34c": {
      "content": "${1:callbacks}.fired()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfired": true
      },
      "source": "snippets/javascript"
    },
    "aea74b5f-90ed-3790-9b67-890e00ccdb8a": {
      "content": "format.${1:html|xml|json|js|any} { $0 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "format (respond_with)",
      "matches": {
        "format": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "aeada55d-c9de-3c79-ac08-87ca91d17e72": {
      "content": "echo CHtml::activeLabel(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhal": true
      },
      "source": "vim-snippets/snippets"
    },
    "aeae0719-d6c1-36d2-a6a7-24ae090e56ff": {
      "content": "line-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true,
        "line-height": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "aeb10b35-75f6-328a-9040-e96711de8aef": {
      "content": "createWriter(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "createWriter": true
      },
      "source": "vim-snippets/snippets"
    },
    "aeb13093-043a-3c8b-bd45-cc1208e815e7": {
      "content": "text-justify: kashida",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "aebbf5b3-a88d-3717-bd6a-8c317f974a85": {
      "content": "border ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      },
      "source": "vim-snippets/snippets"
    },
    "aecd3149-74d7-36ef-bb5a-b16811bb9ada": {
      "content": "module ${1} = struct\n\t${0}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "vim-snippets/snippets"
    },
    "aecde666-46b4-3a37-865d-6c5487a05cc8": {
      "content": "assert_nothing_thrown { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnt": true
      },
      "source": "vim-snippets/snippets"
    },
    "aed4edb2-1339-33be-94ff-fe85b36e5d94": {
      "content": "if err != nil {\n\tlog.Fatal(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { log.Fatal(err) }",
      "matches": {
        "errl": true
      },
      "source": "gosnippets/snippets"
    },
    "aed5e3d0-a4b0-389a-b3a4-17fad620b197": {
      "content": "Yii::app()->session['${0}'];",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yse": true
      },
      "source": "vim-snippets/snippets"
    },
    "aed8e5b7-81c0-369b-a717-ff3f19861528": {
      "content": "{% default %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch default",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/snippets"
    },
    "aeda5f29-6341-3a3e-85c8-96ac14d37a93": {
      "content": "place-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "aedabfc5-9775-3c06-8e82-b6cffd3b0037": {
      "content": "__${1:init}__",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_": true
      },
      "source": "vim-snippets/snippets"
    },
    "aedc8b79-6280-3b84-a558-360428de10ae": {
      "content": "@doc \"\"\"\n${1:doc string}\n\"\"\"\n@spec ${2:name}(${3:arg types}) :: ${4:no_return}\ndef $2(${5:args}) do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defsd": true
      },
      "source": "vim-snippets/snippets"
    },
    "aee34d60-0458-38d0-9ac4-ee843179a08c": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun3": true
      },
      "source": "vim-snippets/snippets"
    },
    "aee54421-62ca-3ea9-87a6-270968b50dc9": {
      "content": "module Test.Main where\nimport Prelude\nimport Test.Unit (suite, test)\nimport Test.Unit.Main (runTest)\nimport Test.Unit.Assert as Assert\nmain = runTest do\n\tsuite \"${1}\" do\n\t\ttest \"${2:the tests run}\" do\n\t\t\tAssert.equal\n\t\t\t\t\"Hello, world!\"\n\t\t\t\t\"Hello, sailor!\"",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testunit": true
      },
      "source": "vim-snippets/snippets"
    },
    "aef7d763-ec35-3782-9d1b-3314261dd1be": {
      "content": "cursor default",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "aefc2a69-3a34-312c-ba23-b1ac99b753d8": {
      "content": "text-wrap: suppress",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "af04c9d0-bdc8-36c1-b5ca-06fb7c241340": {
      "content": "${1:p}\n{\n\tsolver          GAMG;\n\ttolerance       1e-${2:6};\n\trelTol          ${0:0.0};\n\tsmoother        GaussSeidel;\n\tcacheAgglomeration true;\n\tnCellsInCoarsestLevel 10;\n\tagglomerator    faceAreaPair;\n\tmergeLevels     1;\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gamg": true
      },
      "source": "vim-snippets/snippets"
    },
    "af0c41d5-27ca-359f-8bb0-fbe40b270c3e": {
      "content": "border: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      },
      "source": "vim-snippets/snippets"
    },
    "af0f5e46-6723-3123-b3ed-c4409ed2adf2": {
      "content": "align-items baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "af11afd5-e185-3c9f-9bd7-02bd8ca8c464": {
      "content": "Run Keyword If Any Critical Tests Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Any Critical Tests Failed",
      "matches": {
        "rkiactf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "af144813-be96-33a2-b652-b9d1f87d9610": {
      "content": "{% when ${1:#:TARGET} %}\n  ${0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "af19060a-7548-3c04-9225-91a34994ebb3": {
      "content": "improvement(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "improvement conventional commit",
      "matches": {
        "improvement": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "af2d2c1b-9f9b-37e3-a945-99611f7c65ad": {
      "content": "overflow-style: marquee;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      },
      "source": "vim-snippets/snippets"
    },
    "af306d94-a0e5-304a-a52c-d2d26e4c1beb": {
      "content": "${1:FIELDNAME} = forms.NullBooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "NullBooleanField",
      "matches": {
        "fnullbool": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "af36ec66-c137-37c0-9806-41e2c6450f06": {
      "content": "componentWillUnmount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillUnmount",
      "matches": {
        "componentWillUnmount": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "af416cfa-8dc0-3595-8ced-39301521ee9b": {
      "content": "font-stretch expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "af42baf0-aff7-30e8-8775-2c540780b282": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "af42f609-bacb-3b7d-8ad9-f9fe37d4f23c": {
      "content": "${1:Record} { ${2:recFieldA} = ${3:undefined}\n\t\t\t, ${4:recFieldB} = ${0:undefined}\n\t\t\t}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "af44a0f3-6822-30b9-ae25-c8ee411f7fba": {
      "content": "data(${1:name})",
      "doc": "Load Dataset",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "dat",
      "matches": {
        "data": true
      },
      "source": "vscode-R/snippets"
    },
    "af461089-9bd7-3f55-8469-a62c67740d24": {
      "content": "{{http://${1:image_url}}}${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{<image url>}}",
      "matches": {
        "image": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "af47aa0e-271e-3d33-9fb0-40f162f61b0f": {
      "content": "export default {\n\tstate: {\n\t\tvalue: 'my value'\n\t},\n\tgetters: {\n\t\tvalue: state => {\n\t\t\treturn state.value;\n\t\t}\n\t},\n\tmutations: {\n\t\tupdateValue(state, payload) {\n\t\t\tstate.value = payload;\n\t\t}\n\t},\n\tactions: {\n\t\tupdateValue({commit}, payload) {\n\t\t\tcommit('updateValue', payload);\n\t\t}\n\t}\n};",
      "doc": "vuex module",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-module",
      "matches": {
        "vmodule": true,
        "vuex module": true
      },
      "source": "javascript/vuex"
    },
    "af5bcdd2-5a35-3e96-bd5f-5c8735374c27": {
      "content": "<body>\n   ${1:TARGET}\n</body>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "body": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "af5cab30-12ec-30f2-a7e2-349d9641cda4": {
      "content": "package body ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package body",
      "matches": {
        "pacb": true
      },
      "source": "vim-snippets/snippets"
    },
    "af658fb8-2e0c-38e7-8e10-bf903fec8b2e": {
      "content": "@section('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section directive",
      "matches": {
        "section": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "af690c65-b1bb-3fa5-a205-2c362b4298fb": {
      "content": "async fetch ({ store, ${1:params} }) {\n\tlet { data } = await fetch('${2:endpoint}').then(res => res.json())\n\tstore.commit('${3:MUTATION_TYPE}', data)\n},",
      "doc": "Nuxt Fetch",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Fetch",
      "matches": {
        "nfetch": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "af69c089-59c2-3d89-89c0-64a58f246428": {
      "content": "const ${1:memoizedCallback} = useMemo(() => ${2}(${3}), [$3]);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useMemo",
      "matches": {
        "usem": true
      },
      "source": "snippets/javascript"
    },
    "af6c5842-057e-3100-a65a-281b47a836c6": {
      "content": "\\${3:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:default}",
      "matches": {
        "3:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "af732235-1837-3450-b388-41d623b2cade": {
      "content": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component without PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStateless",
      "matches": {
        "rsc": true
      },
      "source": "vscode-react/snippets"
    },
    "af754034-628b-350d-9d59-242cc015d53b": {
      "content": "do{\n\t${0:${VISUAL}}\n}while (${1:/* condition */});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "af7eec3d-8023-3cb8-b8d9-97a92f6b76df": {
      "content": "truncatewords_html:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      },
      "source": "vim-snippets/snippets"
    },
    "af920618-682b-366f-8cbf-3452ba3c6305": {
      "content": "import { Injectable } from '@angular/core';\nimport { CanLoad, Route } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanLoad {\n\tconstructor() { }\n\n\tcanLoad(route: Route) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanLoad guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canload-guard",
      "matches": {
        "a-guard-can-load": true,
        "angular can load guard": true
      },
      "source": "javascript/angular"
    },
    "af98ff09-0373-3b55-85b3-847056699dd6": {
      "content": "text-justify: distribute;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "af99a3d1-0756-328d-b1c2-6107a5132178": {
      "content": "&#x21A9;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      },
      "source": "vim-snippets/snippets"
    },
    "afa5ded6-103a-35a4-946b-df9030ffb579": {
      "content": "test '${1:should do something}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "afab99d7-3012-3708-96c0-bb6f6b34ce60": {
      "content": "$.removeData(${1:element}${2:, 'key name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remdd": true
      },
      "source": "snippets/coffee"
    },
    "afad1719-9c15-3126-9184-fc9c88d10c73": {
      "content": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: '${1:prefix-app}',\n\ttemplate: `\n\t\t<router-outlet></router-outlet>\n\t\t`\n})\nexport class ${2:App}Component { }\n$0",
      "doc": "Angular App root component",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Root Component",
      "matches": {
        "a-component-root": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "afb63ed9-e549-3a0d-be7f-f3053e5bab90": {
      "content": "if ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "afbdba27-5752-3e04-a6fe-2840c4ef4cfd": {
      "content": "test \"${1:test_name}\" do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "test .. do .. end",
      "matches": {
        "test": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "afc83f99-1fa2-3833-8b3b-5fd055db7eb0": {
      "content": "order: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "or": true
      },
      "source": "vim-snippets/snippets"
    },
    "afcf7741-e3ee-3a16-8e72-7302b1a78434": {
      "content": "_.takeRight(${array}, ${n})",
      "doc": "_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.takeRight([1, 2, 3], 0);\n// => []\n\nCreates a slice of `array` with `n` elements taken from the end.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takeright",
      "matches": {
        "lodash takeright": true
      },
      "source": "javascript/lodash"
    },
    "afd10ea9-2b72-3242-b372-8366967f0329": {
      "content": "<colgroup>\n\t${0}\n</colgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colgroup": true
      },
      "source": "vim-snippets/snippets"
    },
    "afd842d4-36fd-386f-9787-f04eadb836d9": {
      "content": "wont_be_kind_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbko": true
      },
      "source": "vim-snippets/snippets"
    },
    "afdafc6c-21be-394f-b666-6e0ae973ba28": {
      "content": "(def ${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "afdb36a3-9127-33e5-836e-df8637617ad8": {
      "content": "Page Should Contain Image    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Image",
      "matches": {
        "psci": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "afdd1214-4dd5-3561-aef9-f8b3d56b9413": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      },
      "source": "vscode-react/snippets"
    },
    "afe2e604-8fbd-3b93-989d-e654a9b652ea": {
      "content": "vertical-align: middle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "afea4ed6-94b6-33f9-8b2f-599e4ec337e4": {
      "content": "while ${1:condition} do\n\t${0:--body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/snippets"
    },
    "aff2f41f-0133-39f2-a4f8-d76c4e35abb8": {
      "content": "script ${1:#:new_object}\n\ton run\n\t\t${2:TARGET}\n\tend run\nend script",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "affd2673-b692-3c0a-81c8-9d84ec7f0dda": {
      "content": "\\\\left| ${0:${VISUAL}} \\\\right|",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left| right|",
      "matches": {
        "lr|": true
      },
      "source": "vim-snippets/snippets"
    },
    "affe7b9f-7e4d-3cf5-8555-4bd98a7859c2": {
      "content": "struct ${1:#:name} {\n    ${0:TARGET:data}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "affee6cb-1663-3c57-9744-ca6c047b853d": {
      "content": "${1:obj}.mousemove(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmove": true
      },
      "source": "snippets/javascript"
    },
    "b0019e50-c726-359d-aea3-aec4ad2c6462": {
      "content": "gl.glClearColor(${1:red}, ${2:green}, ${3:blue}, ${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl clear color",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0028317-c36c-3a51-866a-df8cf25f53f2": {
      "content": "${1:obj}.mousemove (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmove": true
      },
      "source": "snippets/coffee"
    },
    "b011e56a-f5e3-3495-8b55-8e99dc3b9862": {
      "content": "getElementsBy${1:TagName}('${0}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      },
      "source": "snippets/javascript"
    },
    "b0130d04-cf4b-3653-95ef-594ba27204c2": {
      "content": "for {${1:set i 0}} {${2:\\$i < \\$n}} {${3:incr i}} {\n\t$4\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "for... (for)",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b017da39-87eb-3b61-930b-110e2945aadf": {
      "content": "apply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      },
      "source": "vim-snippets/snippets"
    },
    "b01e5987-d4e4-3c18-a3f9-c0a2e05b48a5": {
      "content": "$this->${1:method}()->shouldEqual(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldEqual('value')",
      "matches": {
        "sequal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b01f7fd7-2770-3df7-88f1-67981d5f2b25": {
      "content": "import React, { useState } from 'react'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-usestate",
      "matches": {
        "imrs": true,
        "react import usestate": true
      },
      "source": "javascript/react"
    },
    "b023ca57-6e89-3037-889e-56052fa1d441": {
      "content": "class ${1:name} = object\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "class",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b02410c8-b65d-30cf-a893-fdcd3cd92b15": {
      "content": "desc '${1:Task description}'\ntask ${2:task_name: [:dependent, :tasks]} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tas": true
      },
      "source": "vim-snippets/snippets"
    },
    "b025b64d-4b70-31f6-915c-ca684225baff": {
      "content": "text-indent: -9999px",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      },
      "source": "vim-snippets/snippets"
    },
    "b028131c-0bbe-3031-8580-9222c092c814": {
      "content": "if $1 then\n\t$2\nelseif $3 then\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/elseif/else statement",
      "matches": {
        "eife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0442efd-c65d-38ea-8e74-29e87a2e6838": {
      "content": "public void set${1}(${0:String} new${1}) {\n\t${1:fieldName} = new${1};\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0445d54-7f2c-3365-95d2-160d263dd733": {
      "content": "Console.WriteLine(${1:#:message});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println p": true,
        "writeline": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b048b01a-4ac6-363a-ad70-3ae4a6ea946c": {
      "content": "va_list ${1:ap};\nva_start($1, ${2:LAST_ARG});\n${0}\nva_end($1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "va_start(va_list, last_arg); ... ; va_end()",
      "matches": {
        "va_list": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b049fdca-fb2b-34fe-9ba3-57c731f1a5dc": {
      "content": ".. note:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "note",
      "matches": {
        "note": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b054056e-2c59-3420-9cdd-edc5245e932a": {
      "content": "${1:obj}.parents('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parents": true
      },
      "source": "snippets/javascript"
    },
    "b05527e5-bd40-3570-8256-67f17b64458c": {
      "content": "beforeEach(inject(function($1) {\n\t$0\n}));",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "before each (js, inject)",
      "matches": {
        "befi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b060ce3f-4be3-3742-bcbb-2bc746d738e9": {
      "content": "<button type=\"reset\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "b064e98c-5785-386a-9022-c8865029d848": {
      "content": "ARGF.each_line${1} do |${2:line}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unif": true
      },
      "source": "vim-snippets/snippets"
    },
    "b068116d-b2e0-3fe0-b746-f075d4dcb0f2": {
      "content": "page-break-after: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "b06a3b9b-02eb-35f2-a804-72865e8b5786": {
      "content": "{{ STATIC_URL }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "staticu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0715b3a-b179-356c-8bb5-b01c68e05184": {
      "content": "grid-auto-flow row",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "b076ad92-3b67-39d3-86c5-9ad130ab1280": {
      "content": "echomsg string(${1:TARGET})",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echomsg": true,
        "log": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b0819525-cb6c-3636-9f03-b313d41e4f5a": {
      "content": "${1:#:title}\n====================================",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b08e787d-81ee-3793-b267-689acbce900a": {
      "content": "${1:obj}.empty()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      },
      "source": "snippets/coffee"
    },
    "b08e862d-07c4-3ed8-8772-13372a65f610": {
      "content": "$.isArray(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isarr": true
      },
      "source": "snippets/javascript"
    },
    "b090e90e-e4ed-3b7f-b9ff-af7c3a300102": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0a43a45-cc28-39a0-8746-8d4a0344611d": {
      "content": "${1:obj}.slice(${2:start}${3:, end})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "snippets/javascript"
    },
    "b0a85c7b-b0ef-35eb-8b63-b39b38b9b33d": {
      "content": "Execute Async Javascript    ${1:${code line 1}}    ${2:${code line 2}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Execute Async Javascript",
      "matches": {
        "eaj": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0b86a9e-ab4b-3e42-8341-9860968e38a5": {
      "content": "${1:FIELDNAME} = models.TimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TimeField",
      "matches": {
        "mtime": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0c14a50-0e3b-3f89-aa45-9c6c9000f29d": {
      "content": "${1:void/private/protected/public}${2: static} ${3:name}(${4}) {\n\t${5://if not void return null;}\n}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0ca4c5f-4371-3665-9e55-4333b99ea050": {
      "content": "componentWillMount() {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b0cae85d-b928-3060-ae86-42e7787316fa": {
      "content": "// I don't know how this works. Don't touch it.",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idk": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0cc58d3-bdb2-330b-a5aa-337f344c21e3": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0cd65ac-c0eb-3dba-a3e7-131654da9a68": {
      "content": "const ${1:sequence} = async () => {\n  await ${2:animateControls}.start({ ${5:opacity: 1} })\n}",
      "doc": "sequence for animation controls",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-sequence",
      "matches": {
        "framer-motion sequence": true,
        "sequence": true
      },
      "source": "javascript/framer-motion"
    },
    "b0db54a9-8d5e-3f59-a195-da661caffb6b": {
      "content": "finally {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b0ddca10-ebcc-3fe3-a658-d0efcf2f3bc1": {
      "content": "public static void main (String[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0e07250-38b7-35b7-9d18-fa2638c67175": {
      "content": "<em>${1:TARGET}</em>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "em": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b0e70209-c3c2-315f-8acd-a9791a1be2ef": {
      "content": "${1:FIELDNAME} = forms.FilePathField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FilePathField",
      "matches": {
        "ffilepath": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0efc1da-53f2-3ce0-9b36-0a48d29606aa": {
      "content": "\\\\citet{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citet",
      "matches": {
        "citet": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0efd871-34a2-3c37-a5eb-e49472b8015a": {
      "content": "Page Should Not Contain Checkbox    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Checkbox",
      "matches": {
        "psncc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b0f215a1-6d84-3009-8eea-5b229257a25e": {
      "content": "overflow-y: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      },
      "source": "vim-snippets/snippets"
    },
    "b0fd477d-f985-3b9d-a28b-f3e8e086adbd": {
      "content": "@interface ${1} : ${2:NSObject}\n{${3}\n}\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassInterface",
      "matches": {
        "cli": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b1076261-caf3-3ab6-b65b-edbb55e7b1ef": {
      "content": "\\\\cite[${1}]{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\cite[]{}",
      "matches": {
        "cite": true
      },
      "source": "vim-snippets/snippets"
    },
    "b10a4079-1513-3d66-a208-0cd5182b69ab": {
      "content": "grid-row-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      },
      "source": "vim-snippets/snippets"
    },
    "b10e68d9-7ef0-3d80-81f6-4c75e044e532": {
      "content": "\\begin{exampleblock}{${1:#:title}}\n\t${2:TARGET}\n\\end{exampleblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{exampleblock}": true,
        "exampleblock": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b11280ec-021b-381b-a58a-3da695b19c4f": {
      "content": "vertex(${1:x}, ${2:y}${3:, }${4:u}${5:, }${0:v});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "b114f15f-78f8-3881-92e5-35ede9ab009b": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} close ${4:#:Account}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "close account",
      "matches": {
        "close": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b1175848-1972-3975-ae4a-08f3b05c0c16": {
      "content": "forces\n{\n\ttype\t\t\t\tforces;\n\tfunctionObjectLibs\t(\"libforces.so\");\n\tenabled\t\t\t\ttrue;\n\toutputControl\t\t${1:timeStep};\n\toutputInterval\t\t${2:1};\n\tpatches\t\t\t\t(${3});\n\tlog\t\t\t\t\t${4:true};\n\tCofR\t\t\t\t(${0:0 0 0});\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forces": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1214d78-9a6b-314e-b5fc-b6e103978b96": {
      "content": "<span class=\"${1}\">${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span.": true
      },
      "source": "vim-snippets/snippets"
    },
    "b12c9bfa-e3a9-38f5-bf13-c8fc9339514a": {
      "content": "override ${1:/*function*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "override (over)",
      "matches": {
        "over": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b12fb7ac-214d-3e53-822d-30da9d509d6b": {
      "content": "\\begin{align*}\n\t${1:TARGET}\n\\end{align*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{align*} \\align*": true,
        "align*": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b1439232-a9f0-34d0-8c91-c21c5ed51634": {
      "content": "void main(string[] args)\n{\n\t${VISUAL}${0: /*code*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Main",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b144aeb9-369f-36da-b425-e10385030b61": {
      "content": "justify-content: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b14dacd6-e192-3419-b178-a3d68758e02e": {
      "content": "@each ${1:$item} in ${2:items}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "vim-snippets/snippets"
    },
    "b15611f2-cdf3-3495-af40-3f87484d302f": {
      "content": "lua << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "lua <<EOF | EOF",
      "matches": {
        "lua": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b159a35e-3134-3711-a180-3f2c632f61eb": {
      "content": "quantile(${1:x}, ${2:probs = ${3:seq(0, 1, 0.25)}}, ${4:na.rm = ${5:FALSE}}, ${6:names = ${7:TRUE}}, ${8:type = ${9:7}}, ${10:...})",
      "doc": "Quantile",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "qua",
      "matches": {
        "quantile": true
      },
      "source": "vscode-R/snippets"
    },
    "b15cc007-3c86-398d-a8f0-6526a037be76": {
      "content": "expect { ${1:object} }.to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b15eeb48-b778-32d4-adeb-448f679c2b8c": {
      "content": "expect(${1:target}).not.toBeNull()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be null (coffee)",
      "matches": {
        "notn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b165eeb5-3e49-35e7-8603-2a72e6227336": {
      "content": "background-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1666367-8659-36b2-a42e-b5ec648002bf": {
      "content": "${1:obj}.text(${2:'some text'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      },
      "source": "snippets/javascript"
    },
    "b16fea17-5052-3ec4-b924-3140b552da32": {
      "content": "while ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1861781-510c-377d-a9cb-7aee087a92b3": {
      "content": "mixed.meta()",
      "doc": "mixed.meta(metadata: object): Schema\n\nAdds to a metadata object, useful for storing data with a schema, that doesn't belong\nthe cast object itself.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-meta",
      "matches": {
        "yup mixed meta": true
      },
      "source": "javascript/yup"
    },
    "b186aac6-9f3f-32b9-8b3f-09c7821f0577": {
      "content": "{% elseif ${1} %}\n\t${0:TARGET}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% elseif ... %} ...",
      "matches": {
        "elif": true,
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b18932b1-56a1-359a-be93-8c96871c812e": {
      "content": "${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nextu": true
      },
      "source": "snippets/javascript"
    },
    "b191bf4d-bb03-3c3a-bf2a-5559a1fc41c9": {
      "content": "justify-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1981b0d-273a-37c7-869f-8267eea9ad17": {
      "content": "when {\n\tanyOf '${1:anyOf}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenanyOf": true
      },
      "source": "vim-snippets/snippets"
    },
    "b19abd91-6745-34aa-919f-32c5d1bc28ee": {
      "content": "const {${1:module}} = require('./${1:module}');",
      "doc": "destructuring require assignment local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-require-assignment-local",
      "matches": {
        "base require assignment local destruct": true
      },
      "source": "javascript/base"
    },
    "b1a80702-b466-3566-b1f1-3214a591eecd": {
      "content": "errors.Wrapf(${1:err}, \"${2:message %v}\", ${3:args...})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "errors.Wrapf",
      "matches": {
        "ewf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "b1ae6f14-afce-3895-a2a7-a3ee85b78a09": {
      "content": "background-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1aea3ea-73f7-3dfc-886b-8f325f516429": {
      "content": "[| ${0:TARGET} |]",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "array literal [| |]",
      "matches": {
        "arl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b1b524bb-3695-3b49-9250-6350465647dd": {
      "content": "setContext(${1:key}, ${2:context})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-set-context",
      "matches": {
        "sv-content": true,
        "svelte set content": true
      },
      "source": "javascript/svelte"
    },
    "b1b6545c-a454-346d-bebf-ea12fe058f56": {
      "content": "const ${1:variants} = {\n  ${2:hidden}: {\n    ${3:style}\n  },\n  ${4:visible}: {\n    ${5:style}\n  },\n};",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-variants",
      "matches": {
        "framer-motion variants": true,
        "variants": true
      },
      "source": "javascript/framer-motion"
    },
    "b1b72a9a-dff8-3fc1-83c7-2a8710d0828e": {
      "content": "Wait Until Page Does Not Contain Element    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Does Not Contain Element",
      "matches": {
        "wupdnce": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b1b7f13f-302c-3059-9583-1c21993df0e9": {
      "content": "padding-right: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-right: length (margin)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b1b7f761-8fdd-3e4a-8149-6731fdd043e5": {
      "content": "import { StyleSheet, Text, View } from 'react-native'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nconst styles = StyleSheet.create({})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactNativeFunctionalComponentWithStyles",
      "matches": {
        "_rnfs": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b1d29ce6-eae3-3264-9467-833f9c20ae66": {
      "content": "_.isEmpty(${value})",
      "doc": "_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false\n\nChecks if `value` is an empty object, collection, map, or set.\n\nObjects are considered empty if they have no own enumerable string keyed\nproperties.\n\nArray-like values such as `arguments` objects, arrays, buffers, strings, or\njQuery-like collections are considered empty if they have a `length` of `0`.\nSimilarly, maps and sets are considered empty if they have a `size` of `0`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isempty",
      "matches": {
        "lodash isempty": true
      },
      "source": "javascript/lodash"
    },
    "b1d82b28-d164-30f6-810e-6bdd998df642": {
      "content": "if ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "if ...: ...",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b1dceda9-6158-34af-8344-e665eb6c7f70": {
      "content": "${1:obj}.serializeArray()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serializea": true
      },
      "source": "snippets/coffee"
    },
    "b1e7d684-5f44-33eb-b4d7-8bb86550e375": {
      "content": "expect(${1:target}).toBeVisible()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be visible (coffee)",
      "matches": {
        "ev": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b1e95fe5-45b2-3012-825b-8aa602a21a43": {
      "content": "return ${1:this.num} += ${2:1}",
      "doc": "increment",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-incrementer",
      "matches": {
        "vinc": true,
        "vue incrementer": true
      },
      "source": "javascript/vue"
    },
    "b1ec870e-7c4a-330d-be02-70b6478db411": {
      "content": "console.time(${1:object});",
      "doc": "Sets starting point for execution time measurement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletime",
      "matches": {
        "base console time": true
      },
      "source": "javascript/base"
    },
    "b1ed3fe2-548d-3672-8b42-e47ef2ccf931": {
      "content": "${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stop": true
      },
      "source": "snippets/javascript"
    },
    "b1f0ca08-4bb1-35f1-a579-de0ac60ed9a7": {
      "content": "<transition\n  @before-enter=\"beforeEnter\"\n  @enter=\"enter\"\n  @after-enter=\"afterEnter\"\n  @enter-cancelled=\"enterCancelled\"\n  @before-Leave=\"beforeLeave\"\n  @leave=\"leave\"\n  @after-leave=\"afterLeave\"\n  @leave-cancelled=\"leaveCancelled\"\n  :css=\"false\">\n </transition>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vanim:js:el": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1f14b79-09d7-311c-b39c-99919c4d6c18": {
      "content": "Page Should Not Contain    ${1:${text}}    ${2:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain",
      "matches": {
        "psnc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b1f51793-c910-3783-8607-49be21dbd2b7": {
      "content": "#lang racket",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#r": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1f7ddc9-d54d-3d5d-ae0c-051e0a0abc8f": {
      "content": "form_hidden(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_hidden": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1fdf419-4c1d-3121-9eaa-5ee99503c1d2": {
      "content": "<section>\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section": true
      },
      "source": "vim-snippets/snippets"
    },
    "b1fe6152-60aa-34f8-9123-a61dd1e042d4": {
      "content": "flunk '${1:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b20b06bc-48f3-3ff4-84d9-a627bbe32d0b": {
      "content": "grid-auto-rows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      },
      "source": "vim-snippets/snippets"
    },
    "b20db455-9232-3db5-87a0-f9bb4ad29a39": {
      "content": "export async function getStaticPaths() {\n  return {\n    paths: [\n      { params: { ... } } \n    ],\n    fallback: ${1|true,false|}\n  };\n}",
      "doc": "If a page has dynamic routes (documentation) and uses getStaticProps it needs to define a list of paths that have to be rendered to HTML at build time. If you export an async function called getStaticPaths from a page that uses dynamic routes, Next.js will statically pre-render all the paths specified by getStaticPaths.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-static-paths",
      "matches": {
        "next getstaticpaths": true
      },
      "source": "javascript/next"
    },
    "b2160c6d-a205-37fc-9381-c782bac2e64e": {
      "content": "var tests = []struct {\n    name string\n    expected string\n    given string\n}{\n    {\"${2}\", \"${3}\", \"${4}\",},\n}\nfor _, tt := range tests {\n    tt := tt\n    t.Run(tt.name, func(t *testing.T){\n        actual := ${1:Function}(tt.given)\n        if actual != tt.expected {\n            t.Errorf(\"given(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n        }\n    })\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var test = {...}{...} for {t.Run(){...}}",
      "matches": {
        "testtable": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b216db0a-dda9-3b67-ae9e-f6ea0f1b874c": {
      "content": "const (\n\t${1:NAME1} = iota\n\t${0:NAME2}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "constants with iota",
      "matches": {
        "co": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2191a8f-cef9-30f5-9a89-f33b20767743": {
      "content": "booktitle = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "booktitle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b223f837-696a-343e-a4ad-80b5e7d9d072": {
      "content": "mixed.label()",
      "doc": "mixed.label(label: string): Schema\n\nOverrides the key name which is used in error messages.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-label",
      "matches": {
        "yup mixed label": true
      },
      "source": "javascript/yup"
    },
    "b22e97ad-5076-3c59-93fc-826d4bfcb7c7": {
      "content": "function ${1} return ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function declaration",
      "matches": {
        "function_declare": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b230efda-d4d6-339b-881d-c68cbb8ddf50": {
      "content": "{\n\t\"type\": \"richtext\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"<p>${0}</p>\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_richtext": true
      },
      "source": "vim-snippets/snippets"
    },
    "b233065a-5a5c-306a-9e20-e6531a8cf7f1": {
      "content": "integer :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "b24078b8-bdb6-3378-bbcb-286e1812cd50": {
      "content": "CREATE INDEX ${1:_name} ON ${2:cities} (${3:name});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "CREATE INDEX ... ON ... ( ... )",
      "matches": {
        "CREATE_INDEX": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b2526513-16f6-3e5d-b532-8ce4de851732": {
      "content": "defp ${1:name}(${2:args}) when ${3:guard}, do: ${4}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfpw": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2747dac-f3bd-3f47-a2ac-cc3ac1d58d26": {
      "content": "${1:obj}.clone()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clone": true
      },
      "source": "snippets/coffee"
    },
    "b27c7b78-564b-33e2-9296-2609025c0070": {
      "content": "var_dump(${0:TARGET});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var_dump": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b282c053-1ea2-303c-9838-388e114e78e7": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl:fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "b28517c4-10e9-38f1-9789-69d4f7ab3ebb": {
      "content": "\\begin{column}{${1:#:width}${2:\\\\\\textwidth}}\n\t${0:#:body}\n\\end{column}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{column} \\column": true,
        "column": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b28732a8-1603-31b2-a834-f6e3c7eed746": {
      "content": "test \"${1}\" <| \\_ -> $0",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "b294a0df-c226-32a8-93c1-e703f7c83d48": {
      "content": "tpl",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Tuple",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "b29aa017-b32f-3534-80cd-42d484dd4883": {
      "content": "font ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2a07c02-d5cb-3843-996d-443a9767a4f4": {
      "content": "if ${1:condition} then ${2:value} else ${3:other}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2a42159-2a11-3890-9a7f-723a5ae4012b": {
      "content": "page-break-before left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2a44ed2-5d0a-3dee-bc7a-4258ff8278be": {
      "content": "export const ${1:exportVariable} = ${2:localVariable};\n",
      "doc": "Export named variable in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportnamedvariable",
      "matches": {
        "base export named variable": true
      },
      "source": "javascript/base"
    },
    "b2a4d1cd-55ae-3654-b229-97bd884b6393": {
      "content": "list-style-position outside",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2a731fd-c7b2-3239-a328-4351bec7cb56": {
      "content": "editor = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "editor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b2a80dd9-625c-38e6-a0a6-2b25e4862d5c": {
      "content": "<th class=\"${1}\">${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th.": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2b1db48-ce48-38c2-89bb-addc7be2714e": {
      "content": "t.column ${1:title}, :${2:string}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Create Column (mcc)",
      "matches": {
        "mcol": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b2b404ee-c812-3363-a7aa-87e21a65f24f": {
      "content": "case ${1:${2:var} := }<-${3:channel}:\n  ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select case",
      "matches": {
        "selc": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "b2be2fc2-5fd9-30b5-9845-b2acad2f6973": {
      "content": "{% blockquote ${1:author} ${2:URL} ${3:link_text} %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote-link": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2ca7cc3-3edb-35a8-bad3-8e70936f0413": {
      "content": "<link rel=\"apple-touch-icon\" href=\"${1:favicon.png}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:touch": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2cc664c-ffbc-38da-aab6-c7cfb8723cea": {
      "content": "validates_inclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not included in the list}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of",
      "matches": {
        "vi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b2d307d6-ddbc-3385-b594-b61fb51b7409": {
      "content": "// specify the minimum swap interval for buffer swaps.\ngl.setSwapInterval(${0:interval});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl swap interval",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2d7e1ba-1814-3eee-83be-d7a101518e38": {
      "content": "when {\n\texpression '${1:expression}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenexpression": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2d80db6-0b1f-3dee-b094-a7bfe21c6c6f": {
      "content": "$this->db->delete(${1:table});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_truncate": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2da517d-0132-3464-a1e1-71b459d995d0": {
      "content": "string",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "string",
      "matches": {
        "sr": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2dfccfe-5352-37ac-ad0a-654ea8d00dc1": {
      "content": "scope(exit) ${1:f.close();}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sce": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2dfe903-186f-33e7-88c1-5b63842eb51a": {
      "content": "NO-LOCK",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2e09804-8938-3d2c-9960-d97e4dd436cb": {
      "content": ".. list-table:: ${1:Title}\n\t:header-rows: 1\n\t:stub-columns: 0\n\t* - ${0:R1C1}\n\t  - R1C2\n\t* - R2C1\n\t  - R2C2",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2e9c14d-47d1-3f12-9c53-762085e6eb9b": {
      "content": "${1:obj}.serialize()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serialize": true
      },
      "source": "snippets/coffee"
    },
    "b2ec71c1-de45-3e99-aef4-51cf793bb923": {
      "content": "list-style-type: decimal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2fa3d0e-b20c-3f2c-a0c7-37df33393235": {
      "content": "text-outline none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b2fc987d-8d12-3bad-b19f-70923295a908": {
      "content": "echo CHtml::button('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b301710a-1f3b-3db5-a267-8f3843b9af25": {
      "content": "<!doctype html>\n<html lang=\"${1:en}\">\n    <head>\n        <meta charset=\"${2:utf-8}\">\n        <meta name=\"viewport\" content=\"${3:width=device-width, initial-scale=1}\">\n        <title>${4}</title>\n    </head>\n    <body>\n        ${5}\n    </body>\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html5": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b30274ac-ac84-3b00-8b8d-efee336f425e": {
      "content": "_.pullAllWith(${array}, ${values}, ${comparator})",
      "doc": "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\n_.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\nconsole.log(array);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\nThis method is like `_.pullAll` except that it accepts `comparator` which\nis invoked to compare elements of `array` to `values`. The comparator is\ninvoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.differenceWith`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullallwith",
      "matches": {
        "lodash pullallwith": true
      },
      "source": "javascript/lodash"
    },
    "b30288d6-ab64-3e5b-a495-4f2e19167d95": {
      "content": "const ${1:reducerName} = (state={}, action) => {\n\tswitch(action.type) {\n\t\tcase ${1:action}:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t$2\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rdc": true
      },
      "source": "snippets/javascript"
    },
    "b3143f03-39c1-30ed-835c-d0b0093e2de2": {
      "content": "% if ${1:condition}:\n\t${2:}\n% else:\n\t${0:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "b318be55-94a5-37ee-941d-be331efb81e8": {
      "content": "text-align-last: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "b31a9b15-529f-3b14-be42-53b543429033": {
      "content": "text-align: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "b31c0a6e-21e3-3bf5-82d4-dca6252e5275": {
      "content": "const ${1:state} = useSelector(state => state.${1:state})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useSelector",
      "matches": {
        "useSelector": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b32143c4-77f3-3a91-a891-33f148620d27": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b323cf93-9cb5-382c-9141-51ed111317d9": {
      "content": "(comment\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comm": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3242454-92e9-3a34-b29d-e1d7ccec1116": {
      "content": "(* ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*": true
      },
      "source": "vim-snippets/snippets"
    },
    "b32fbf62-121f-38f8-bddf-26404ec7627f": {
      "content": "$.isWindow(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iswin": true
      },
      "source": "snippets/javascript"
    },
    "b3311ae9-5c88-3c41-a111-900e4bb464dd": {
      "content": "${1:FIELDNAME} = models.BigIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bigint": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3314878-09a8-3da0-a742-7e10a1e6cf1c": {
      "content": "border-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b331bce1-f860-34ce-bef5-5503f24e9c31": {
      "content": "~w(${0})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "word list",
      "matches": {
        "wl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3391cf1-9a07-37e1-844b-27a77cf2507d": {
      "content": "[routerLink]=\"['${1:routePath}', ${2:routeParameterValue}]\"\nrouterLinkActive=\"${3:router-link-active}\"$0",
      "doc": "Angular routerLink with a route parameter",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrouterlinkwithparameter",
      "matches": {
        "a-routerlink-param": true,
        "angular ng router link with parameter": true
      },
      "source": "javascript/angular"
    },
    "b3420431-4993-34f7-8775-989dd6b5c99b": {
      "content": "continue;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "continue (cont)",
      "matches": {
        "cont": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b34463c4-02bd-305b-a236-d6f9def764bc": {
      "content": "shininess(${0:shine});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shininess": true
      },
      "source": "vim-snippets/snippets"
    },
    "b349bd61-ae49-3676-b794-ab034effae64": {
      "content": "[ngStyle]=\"{${1:style}: ${2:expression}}\"",
      "doc": "Angular ngStyle",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngstyle",
      "matches": {
        "a-ngstyle": true,
        "angular ng style": true
      },
      "source": "javascript/angular"
    },
    "b34bbbcc-8b9d-3c25-a71b-ec87e9b4974b": {
      "content": "${1:name}\t${2:type}\t${3:default ''}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      },
      "source": "vim-snippets/snippets"
    },
    "b34e915a-f3cf-39cb-9186-a07f946b600b": {
      "content": "empty-cells: show;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "b34f1ea7-84f9-39b5-9b1b-2b34b53b42ad": {
      "content": "args:\n{{- range $key, $value := .Values.${1:value_key}.extraArgs }}\n  {{- if $value }}\n  - --{{ $key }}={{ $value }}\n  {{- else }}\n  - --{{ $key }}\n  {{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "b35b9efe-47fe-3736-90e6-fb369583590a": {
      "content": "text-transform: capitalize;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b35f4a9c-c7a4-3b7c-95f7-f71fd73901f0": {
      "content": "content: counter(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b37e1c54-1a03-3051-b48f-4cf5e34b644d": {
      "content": "<% ${1:TARGET} -%>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<% -%>",
      "matches": {
        "ruby_code_nonl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b38bc288-d78e-3984-bf30-731655294800": {
      "content": "{% url ${1} as ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "vim-snippets/snippets"
    },
    "b38d527f-67ee-3a21-bedf-71cd7b5fc8d7": {
      "content": "import Link from 'next/link'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-link",
      "matches": {
        "next import link": true
      },
      "source": "javascript/next"
    },
    "b392d2f6-475b-375f-9478-c337c5ccd1a2": {
      "content": "[${1:#:link}][${2:id}]${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link][id]",
      "matches": {
        "linkid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b394b0db-6c5d-3317-b05d-5dc2c3eba496": {
      "content": "_.first(${array})",
      "doc": "_.head([1, 2, 3]);\n// => 1\n\n_.head([]);\n// => undefined\n\nGets the first element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-first",
      "matches": {
        "lodash first": true
      },
      "source": "javascript/lodash"
    },
    "b39bd3f2-7b00-35f8-82fc-8ca409b59569": {
      "content": "\\\\newunicodechar{${1}}{${2:\\\\ensuremath}${3:tex-substitute}}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\newunicodechar",
      "matches": {
        "nuc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b39d399b-d7a2-3c76-8969-24afad3460cc": {
      "content": "try {\n\t${1:TARGET}\n} catch {\n\tcase e${2:: Exception} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "try {} catch { case ... }",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b39fd19a-e30c-3c12-b310-a5f859573c12": {
      "content": "import sbt._\nclass ${1:Name}(info: ProjectInfo) extends DefaultWebProject(info) {\n\tval liftVersion = \"${0:2.3}\"\n\toverride def libraryDependencies = Set(\n\t) ++ super.libraryDependencies\n\tval snapshots = ScalaToolsSnapshots\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "webproject": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3b5ee58-698d-39b6-9d3c-ddc9a4b28255": {
      "content": "real, parameter ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real parameter",
      "matches": {
        "rep": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b3b86878-18ec-3474-8fb0-db0acb7a8596": {
      "content": "_.result(${object}, ${path}, ${defaultValue})",
      "doc": "var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\n_.result(object, 'a[0].b.c1');\n// => 3\n\n_.result(object, 'a[0].b.c2');\n// => 4\n\n_.result(object, 'a[0].b.c3', 'default');\n// => 'default'\n\n_.result(object, 'a[0].b.c3', _.constant('default'));\n// => 'default'\n\nThis method is like `_.get` except that if the resolved value is a\nfunction it's invoked with the `this` binding of its parent object and\nits result is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-result",
      "matches": {
        "lodash result": true
      },
      "source": "javascript/lodash"
    },
    "b3c07c71-c7fc-38ce-9141-66f810f8e257": {
      "content": "if (${1}) {\n\t${2}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3cad01f-3833-3754-b7c0-146272bfcb06": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Else",
      "matches": {
        "trye": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3cef435-b12a-30b8-8179-576f14ac6e60": {
      "content": "_.isElement(${value})",
      "doc": "_.isElement(document.body);\n// => true\n\n_.isElement('<body>');\n// => false\n\nChecks if `value` is likely a DOM element.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iselement",
      "matches": {
        "lodash iselement": true
      },
      "source": "javascript/lodash"
    },
    "b3d30d65-7337-3b3d-adda-ccc7bfca2616": {
      "content": "protected type ${1}(${2}) is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected type",
      "matches": {
        "prot": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3d539cb-7f19-37cd-92fa-3b64a61b7a1c": {
      "content": "func main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main() { ... }",
      "matches": {
        "main": true
      },
      "source": "gosnippets/snippets"
    },
    "b3d7ee42-9812-34e6-9131-5fb55d2ec59a": {
      "content": "[formGroup]=\"${1:form}\"",
      "doc": "Angular formGroup",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformgroup",
      "matches": {
        "a-formgroup": true,
        "angular ng form group": true
      },
      "source": "javascript/angular"
    },
    "b3dd56b5-138b-3c8e-bd52-6bb6e44f124f": {
      "content": "printfn \\$\"${0}\"",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pri": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3e3e5dd-6016-3d5c-abc2-7b6f970642bc": {
      "content": "when {\n\tallOf '${1:allOf}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenallOf": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3ec2e19-35bc-366d-a4f1-a27096177ac7": {
      "content": "(${1:first}:\\${2:name})(${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":\\": true
      },
      "source": "vim-snippets/snippets"
    },
    "b3fce2e5-c5bb-385d-9f1b-d29ee6ee3288": {
      "content": "after info ${0:id}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afin": true
      },
      "source": "vim-snippets/snippets"
    },
    "b400118b-f608-3747-b07d-a39e4f5752a6": {
      "content": "failwith \"${0:TARGET}\"",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "failwith \"...\"",
      "matches": {
        "fail": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b40122e5-bf3d-3c49-9861-ea65b18e7c90": {
      "content": "for ${1:item} <- ${2:items} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "b409a0fd-1048-37ad-bf32-594efea2322e": {
      "content": "vertical-align: text-bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b40df022-a81a-3e25-bab8-524da55992d4": {
      "content": "rgba(${1:255}, ${2:255}, ${3:255}, ${4:0.5})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color rgba",
      "matches": {
        "rgba": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b4134f28-1fff-3729-a0e2-6e7bd1525035": {
      "content": "{# $1 #}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "{#": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b4190f95-89ca-3808-be88-b6bc4b145ceb": {
      "content": "set logscale ${1:#:axis}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set logscale <axis>",
      "matches": {
        "logscale": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b41933e0-f225-38a7-9a8b-9202ea5cd567": {
      "content": "box-sizing: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b41a304f-ec25-3507-896c-62cb1c44ba90": {
      "content": "if ${1:(* condition *)} then\n\t${2:(* A *)}\nelse\n\t${3:(* B *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b41bf761-6761-3462-9729-1ab73a18a8d9": {
      "content": "background-position-x ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      },
      "source": "vim-snippets/snippets"
    },
    "b42570c1-ce43-38c7-bb62-a0d06c015949": {
      "content": "${1:obj}.add('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      },
      "source": "snippets/coffee"
    },
    "b429310b-2432-3393-b270-621bf9fdc885": {
      "content": "${1:obj}.live('${2:events}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "live": true
      },
      "source": "snippets/javascript"
    },
    "b42c274b-6010-3f9d-a81a-e1efd871fefd": {
      "content": "color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b42d25d4-8d00-3745-b456-395b77a99771": {
      "content": "@behaviour ${1:Mix.Task}\n${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beh": true
      },
      "source": "vim-snippets/snippets"
    },
    "b438f03e-e611-33e9-9089-b98bede364e9": {
      "content": "expect(${1:target}).not.toThrowError(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to throw error (js)",
      "matches": {
        "notthe": true
      },
      "source": "vim-snippets/snippets"
    },
    "b43bbceb-d89e-3109-b56b-19da425a347d": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "b443a82f-fc55-31c7-90c4-176149588059": {
      "content": "comment on table ${1:table} is '${0:comment}';",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tblcom": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4457fed-a25c-3726-a7bc-d9d7b631c30d": {
      "content": "overflow-y: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "b446417e-0779-3568-9521-6764f4d3d97d": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "b446d4f9-6a93-31b7-90ea-a818b46166f3": {
      "content": "IO.inspect ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect",
      "matches": {
        "ins": true
      },
      "source": "vim-snippets/snippets"
    },
    "b44ed315-282f-322f-afe0-bfe348511fdc": {
      "content": "flex-wrap: nowrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b454da91-224f-34c9-ae65-7755abe64065": {
      "content": "for(int ${2:i} = 0; $2 < ${1:count}; $2${3:++})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "b458fecd-4fb6-3a97-872e-d5a1b7689e22": {
      "content": "func Benchmark${1:name}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${2}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "benchmark function",
      "matches": {
        "bench": true
      },
      "source": "vim-snippets/snippets"
    },
    "b45e571e-b918-3e0a-8110-f85ccb65fe6e": {
      "content": "render action: \"${1:action}\", layout: \"${2:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (action,layout) (ral)",
      "matches": {
        "ral": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b4638f76-7cb2-313d-aef7-6677aee828f7": {
      "content": "background-attachment ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      },
      "source": "vim-snippets/snippets"
    },
    "b464ed00-c904-35ba-8df1-5f0ee98ea815": {
      "content": "Should Be Equal    \"\\${${1:var}}\"    \"${2:expected value}\"    ${3:\"optional error msg\"}\t${4:ignore_case=True}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Should Be Equal",
      "matches": {
        "sbe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b4666d82-59b1-36e3-a6d3-1e89e33d387e": {
      "content": "[${1:#:link}](mailto:${2:#:email})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](email)",
      "matches": {
        "linkemail": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b469577a-747f-3a26-b331-a85163f7e63c": {
      "content": "<header>\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      },
      "source": "vim-snippets/snippets"
    },
    "b46a4f59-812f-3a5d-b8c5-291a2f5c949e": {
      "content": "border-style solid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "b46b77f8-b4b2-3099-84fd-4c6441d7711f": {
      "content": "\\\\${1:x} -> ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "λ",
      "matches": {
        "lambda": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b46cf593-80de-364d-8f8d-91f70bf891dc": {
      "content": "__ScriptVersion=\"${1:version}\"\n#===  FUNCTION  ================================================================\n#         NAME:  usage\n#  DESCRIPTION:  Display usage information.\n#===============================================================================\nfunction usage ()\n{\n\techo \"Usage :  $${0:0} [options] [--]\n    Options:\n    -h|help       Display this message\n    -v|version    Display script version\"\n}    # ----------  end of function usage  ----------\n#-----------------------------------------------------------------------\n#  Handle command line arguments\n#-----------------------------------------------------------------------\nwhile getopts \":hv\" opt\ndo\n  case $opt in\n\th|help     )  usage; exit 0   ;;\n\tv|version  )  echo \"$${0:0} -- Version $__ScriptVersion\"; exit 0   ;;\n\t* )  echo -e \"\\n  Option does not exist : $OPTARG\\n\"\n\t\t  usage; exit 1   ;;\n  esac    # --- end of case ---\ndone\nshift $(($OPTIND-1))",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      },
      "source": "vim-snippets/snippets"
    },
    "b47a9662-38dc-375f-89b4-f6430b69c8a9": {
      "content": "<c:param name=\"${1}\" value=\"${2}\" />\ncparam+${0}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cparam+": true
      },
      "source": "vim-snippets/snippets"
    },
    "b47ed2bb-623f-356b-bba6-2a365b73ca98": {
      "content": "\\begin{eqnarray}\n\t${1:${VISUAL}} & ${2:${VISUAL}} & ${0:${VISUAL}}\n\\end{eqnarray}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation array",
      "matches": {
        "eqa": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b47ffbd2-876b-35cf-85cf-96de8b5346ea": {
      "content": "**${1:${TM_SELECTED_TEXT}}**$0",
      "doc": "Insert bold text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bold text",
      "matches": {
        "bold": true
      },
      "source": "vscode-R/snippets"
    },
    "b4907c43-0e57-3082-bd8c-e1bd5d872acc": {
      "content": "std::list<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/snippets"
    },
    "b49169e6-1eb8-3c0b-b3b0-45f38ab59c6c": {
      "content": "validates_associated",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated",
      "matches": {
        "va": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b491ed18-a518-3292-998a-5c729001d39c": {
      "content": "${1:key}:${2:value}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Key:value for object",
      "matches": {
        "kv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b497d090-b1a6-30fd-9058-2abe0fb65ce0": {
      "content": "{% with %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig with",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4a0f62b-0549-3edf-ac9e-56ca28b9b001": {
      "content": "# ${1:text}",
      "doc": "Insert heading",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert heading",
      "matches": {
        "heading": true
      },
      "source": "vscode-R/snippets"
    },
    "b4a49b00-ecdb-3a28-a956-19f7fe8d17ed": {
      "content": "text-emphasis: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4af01fe-34fa-3add-a8b3-a6888fd5d379": {
      "content": "Logger.error(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4b86fb2-3ca1-38d6-804c-c9015d7fd179": {
      "content": "__PACKAGE__->${1:package_method}(${0:var})",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgmv": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4c015a8-5714-3e78-bcfa-a22de5369301": {
      "content": "top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4c145f8-adde-3f64-ac17-f9da8bdf92bd": {
      "content": "onUpdated(() => {${1}})",
      "doc": "Vue onUpdated Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onUpdated",
      "matches": {
        "v3onupdated": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "b4c1e102-2257-38be-8976-27d23c053818": {
      "content": "import { useRouter } from 'next/router'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-use-router",
      "matches": {
        "next import userouter": true
      },
      "source": "javascript/next"
    },
    "b4c1f739-4a96-3964-aeff-8b9cf5fcc0f0": {
      "content": "d3.scale.linear()\n  .domain(${1})\n  .range(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scale": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4d12b2a-cc78-3bbd-a972-f3edb2612c76": {
      "content": "_.lastIndexOf(${array}, ${value}, ${fromIndex})",
      "doc": "_.lastIndexOf([1, 2, 1, 2], 2);\n// => 3\n\n// Search from the `fromIndex`.\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\n// => 1\n\nThis method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lastindexof",
      "matches": {
        "lodash lastindexof": true
      },
      "source": "javascript/lodash"
    },
    "b4d4928c-379e-3d5d-a0c7-28ed30fe5931": {
      "content": "expect($1).toStrictEqual($0);",
      "doc": "expects the first argument to be strictly equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tostrictequal",
      "matches": {
        "jest expect tostrictequal": true,
        "tse": true
      },
      "source": "javascript/jest"
    },
    "b4d7e11e-8981-3b2c-aee2-df21ef03f4af": {
      "content": "<footer>\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4dc2fa4-e941-3de0-bdbf-31b97a8b4867": {
      "content": "echo CHtml::submitButton('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhsb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4e1838b-3c5f-3c5f-88b7-b3b5c1e41489": {
      "content": "range ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "range",
      "matches": {
        "rn": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4f1b3fb-a63c-3002-91c0-a00679ed18c1": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>\n\n<style>\n\t${2:/* your styles go here */}\n</style>\n\n${3:<!-- markup (zero or more items) goes here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-format",
      "matches": {
        "svcomponent": true,
        "svelte component template": true
      },
      "source": "javascript/svelte"
    },
    "b4f3465a-22ea-30ab-8021-9055bf5e3264": {
      "content": "cummax(${1:x}",
      "doc": "Cummulative max",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cuma",
      "matches": {
        "cumaax": true
      },
      "source": "vscode-R/snippets"
    },
    "b4f7f75e-34cd-32a5-873a-e702176031cc": {
      "content": "it { should ensure_inclusion_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isei": true
      },
      "source": "vim-snippets/snippets"
    },
    "b4f83bb6-b256-31d8-90be-164243e2fe30": {
      "content": "else {\n    ${1:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b4f89ca5-c4e1-34df-b990-3a62719ceee0": {
      "content": "|> Array.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atap": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5029f23-c97e-3575-b79f-d5ef6a9bef47": {
      "content": "margin-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/snippets"
    },
    "b503ec99-a5ff-34e2-9366-f5fbf63f5d1f": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0:${VISUAL}}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer recover",
      "matches": {
        "dfr": true
      },
      "source": "vim-snippets/snippets"
    },
    "b50c7d36-3997-304b-9f09-7ba0378ad632": {
      "content": ".. _${1:#:NAME}:\n${2:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "label",
      "matches": {
        "label": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b513e3c0-b806-3c4a-abf2-8433ad3c31fa": {
      "content": "\\begin{columns}\n\t\\begin{column}{${1:#:width}${2:\\\\\\textwidth}}\n\t\t${0:#:body}\n\t\\end{column}\n\\end{columns}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{columns} \\columns": true,
        "columns": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b51ae4cf-b765-3824-bb72-3af56ec220d9": {
      "content": "protected ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "po": true
      },
      "source": "vim-snippets/snippets"
    },
    "b51bdb0c-906c-3bf8-9537-5bb79a34b4ad": {
      "content": "componentWillUnmount() {\n\t$0\n}\n",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      },
      "source": "vscode-react/snippets"
    },
    "b520c569-9ece-32c5-b7f1-18945f90e6a1": {
      "content": "for ${1:element} in ${2:container}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      },
      "source": "vim-snippets/snippets"
    },
    "b52a536a-9331-3b5e-b747-ec272fb68042": {
      "content": "append(${1:slice}, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "append(slice, value)",
      "matches": {
        "ap": true
      },
      "source": "gosnippets/snippets"
    },
    "b52ce077-1651-3ac6-85f9-53f1b3baea3e": {
      "content": "render text: \"${1:text to render...}\", status: ${2:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,status) (rts)",
      "matches": {
        "rts": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b534e199-328f-3ba7-beff-0ec087654f80": {
      "content": "for (${1:Class} *${2:some$1} in ${3:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      },
      "source": "vim-snippets/snippets"
    },
    "b53910d7-0afb-357d-8d47-26f5eed9f910": {
      "content": "const [${1:state}, ${2:dispatch}] = useReducer(${3:reducer});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useReducer",
      "matches": {
        "userd": true
      },
      "source": "snippets/javascript"
    },
    "b53d9cb5-3d89-354a-b9fd-0bc9bd1b835a": {
      "content": "time:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      },
      "source": "vim-snippets/snippets"
    },
    "b53efb3c-6a7b-3423-a9ce-7dc00be1a2cf": {
      "content": "@selector(${1:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "@selector",
      "matches": {
        "sel": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b542ef3f-ae0b-3b76-8215-a9a4134c0004": {
      "content": "let ${1:variable} = ${0: value}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "b54ad417-e3ee-31ee-865f-e264c227ac93": {
      "content": "data ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      },
      "source": "vim-snippets/snippets"
    },
    "b54cbedb-6505-3489-b049-8fcc68eeb70f": {
      "content": "export async function getStaticProps(${1:context}) {\n  return {\n    props: {}, \n  }\n}",
      "doc": "If you export an async function called getStaticProps from a page, Next.js will pre-render this page at build time using the props returned by getStaticProps. The context parameter is an object containing the following keys: params, preview, previewData.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-static-props",
      "matches": {
        "next getstaticprops": true
      },
      "source": "javascript/next"
    },
    "b54cbf22-983a-3579-8711-b520f85a1d6a": {
      "content": "t.text :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.text (tct)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b54ddbcd-d406-3054-8e04-5c592e3d06d1": {
      "content": "_.isEqual(${value}, ${other})",
      "doc": "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.isEqual(object, other);\n// => true\n\nobject === other;\n// => false\n\nPerforms a deep comparison between two values to determine if they are\nequivalent.\n\n**Note:** This method supports comparing arrays, array buffers, booleans,\ndate objects, error objects, maps, numbers, `Object` objects, regexes,\nsets, strings, symbols, and typed arrays. `Object` objects are compared\nby their own, not inherited, enumerable properties. Functions and DOM\nnodes are compared by strict equality, i.e. `===`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isequal",
      "matches": {
        "lodash isequal": true
      },
      "source": "javascript/lodash"
    },
    "b5565ceb-4934-3aa2-8561-c43f4ca377d4": {
      "content": "require('svelte/register');\nconst ${1:App} = require('${2:./App.svelte}').default;",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-register",
      "matches": {
        "svelte register": true,
        "svreg": true
      },
      "source": "javascript/svelte"
    },
    "b55ca210-3450-3767-a8b6-204cfa950964": {
      "content": "word-break: break-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      },
      "source": "vim-snippets/snippets"
    },
    "b564a674-275a-3a0d-ac93-c8bc19123df2": {
      "content": "text-replace none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b566c1b1-75b3-36f7-9672-c256103bf552": {
      "content": "border-top-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      },
      "source": "vim-snippets/snippets"
    },
    "b56be635-95dd-31a9-b413-3695b30e2c1b": {
      "content": "-> { throw :${1:error} }.must_throw :${2:error}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mthrow": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5734b85-6a11-3c92-864d-eb2c989fd221": {
      "content": "@before-leave=\"$1\"$0",
      "doc": "@before-leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-leave",
      "matches": {
        "beforeleaveevent": true,
        "vue before-leave": true
      },
      "source": "javascript/vue"
    },
    "b577807c-ff21-3d7e-a369-6bebdb4baeeb": {
      "content": "white-space-collapse keep-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "b57a3e90-312a-3a41-ac8b-b383c486fa07": {
      "content": "border-left: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b57f60ac-1361-31c0-b544-22c2c3d54a5f": {
      "content": "border-left-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blw": true,
        "border-left-width": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b582679c-0df6-3206-aba0-f224b383d378": {
      "content": "border-style: dot-dash",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "b598062d-dd39-3af8-b950-2c654ba1b1c6": {
      "content": "text(name: \"${1:BIOGRAPHY}\" , defaultValue: \"${2:default}\" , description: \"${3:Enter some information about the person}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramtext": true
      },
      "source": "vim-snippets/snippets"
    },
    "b59b1da5-47fd-35c7-97a3-678b1f971dce": {
      "content": "elsif ${1} then\n\t${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "b59f2e3b-f186-3562-8677-641b58b4cabc": {
      "content": "arr",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Array",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5b14e5f-a689-3ec1-93d9-139168c16197": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-bool",
      "matches": {
        "prop-types bool": true,
        "ptb": true
      },
      "source": "javascript/prop-types"
    },
    "b5b68d85-63ad-3059-b6b9-1e9c33517ae8": {
      "content": "type ${1:Type} struct {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "type T struct { ... }",
      "matches": {
        "st": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "b5b84644-8901-30b0-a7d7-c8212a8ec0f0": {
      "content": "package ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package {NAME} is {...} end",
      "matches": {
        "package": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b5baacc1-dd64-377b-8f73-9125a22eef8f": {
      "content": "object ${1:X} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b5bd5724-83b1-39be-b889-fcd05e35ed08": {
      "content": "padding ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5bfd7dc-5d7e-3bc3-98df-aca8b5aa7b7a": {
      "content": "${1:name} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=>": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5c31f07-d100-31ee-844f-34861c38e68f": {
      "content": "__syncthreads();",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Synchonize threads",
      "matches": {
        "sync": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5c44b58-5538-3f0d-b203-1700bc264528": {
      "content": "clip: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5c8d405-4032-34a1-a8d5-bb66b9a59af0": {
      "content": "_.floor(${number}, ${precision})",
      "doc": "_.floor(4.006);\n// => 4\n\n_.floor(0.046, 2);\n// => 0.04\n\n_.floor(4060, -2);\n// => 4000\n\nComputes `number` rounded down to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-floor",
      "matches": {
        "lodash floor": true
      },
      "source": "javascript/lodash"
    },
    "b5cd3789-12a1-3d2d-ad3e-abacf0cc77c2": {
      "content": "${1:callbacks}.fired()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfired": true
      },
      "source": "snippets/coffee"
    },
    "b5cea583-1fd9-375c-9bf9-b50667bcd154": {
      "content": "export default class ${1:className} {\n\t$0\n};\n",
      "doc": "Export default class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportClass",
      "matches": {
        "ecl": true
      },
      "source": "vscode-javascript/snippets"
    },
    "b5d7e308-10a8-3a1a-b63a-200cb050b1ac": {
      "content": "wont_respond_to :${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5dc6006-70dc-39a9-ab07-7b8f36d1986d": {
      "content": "import ReactDOM from 'react-dom';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import ReactDOM",
      "matches": {
        "ird": true
      },
      "source": "snippets/javascript"
    },
    "b5dd054b-88fb-3cfa-89df-e5267cdd2dbe": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "b5eed339-88ef-3090-923a-6e96f82f8b61": {
      "content": "\\section{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\section": true,
        "section \\section{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b5f8f0c4-0ba4-3e65-8fa4-ade8e18f6ec9": {
      "content": "reg${1:#: nbit} ${2:reg}_r, $2_w;${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "reg [] _r, _w;",
      "matches": {
        "rw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b5fa0e57-445f-3a81-a2b0-c2913ad26b38": {
      "content": "getElementBy${1:Id}('${0}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gett": true
      },
      "source": "snippets/javascript"
    },
    "b602437f-4dca-3a6d-a096-563e6e289f57": {
      "content": "border-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      },
      "source": "vim-snippets/snippets"
    },
    "b60c2d04-43df-3fa3-84ee-7481b642b141": {
      "content": "waits($1);",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "waits (js)",
      "matches": {
        "wa": true
      },
      "source": "vim-snippets/snippets"
    },
    "b613b347-0018-34c8-923a-370145f1ca49": {
      "content": "${1:obj}.keypress(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kpress": true
      },
      "source": "snippets/javascript"
    },
    "b61b6fe3-e65d-3789-b226-7952e535ec7e": {
      "content": "<transition></transition>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "transition": true
      },
      "source": "vim-snippets/snippets"
    },
    "b624ee43-35cd-3619-82b1-e640abd02a11": {
      "content": "func ${1:funcName}(${2}) ${3:error} {\n\t${4}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "b62b8ddf-1d82-3b3e-b30b-41fca3386b16": {
      "content": "background-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b63036d6-3246-35f3-88b4-937837130b8f": {
      "content": "when {\n\tnot '${1:not}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whennot": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6381e50-e432-3176-acdb-5d0ba3d95dba": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6387fcb-a38e-3e89-a8ee-921d64b2a869": {
      "content": "matrix(${1:data}, nrow = ${2:rows}, ncol = ${0:cols})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6396dbe-94b0-3764-8739-f365767ff6df": {
      "content": "${1:FIELDNAME} = models.BigIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BigIntegerField",
      "matches": {
        "mbigint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b640d341-94ce-3ad6-a8df-85675bb861ad": {
      "content": "assert_select '${1:path}'${2:, ${3:text}: ${4:'${5:inner_html}'}}${6: do\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_select",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b6435ffa-32ee-382b-b06c-2ef72f3691fa": {
      "content": "this.${1:refName}Ref = React.createRef()\n",
      "doc": "Create ref statement used inside constructor",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "createRef",
      "matches": {
        "cref": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b644304b-bcd2-3b1c-843a-b39de4d5dda0": {
      "content": "import { compose, graphql } from 'react-apollo'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "graphQLForComponent",
      "matches": {
        "graphql": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b644e1b5-0f9c-3cb4-888f-c99b938ead80": {
      "content": "_.stubArray()",
      "doc": "var arrays = _.times(2, _.stubArray);\n\nconsole.log(arrays);\n// => [[], []]\n\nconsole.log(arrays[0] === arrays[1]);\n// => false\n\nThis method returns a new empty array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubarray",
      "matches": {
        "lodash stubarray": true
      },
      "source": "javascript/lodash"
    },
    "b64f8701-5ec2-3106-8ce3-b691fe3b00df": {
      "content": "has_many",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many",
      "matches": {
        "hm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b652fd48-ae0d-3d3b-b997-e72032bd4dac": {
      "content": "fprintf(${1:stderr}, \"${2}\\n\"${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fprintf(..., \"...\\n\", ...);",
      "matches": {
        "fprintf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b65c3c46-fb5f-3f3d-b458-66490eac79f9": {
      "content": "${1:FIELDNAME} = forms.CharField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CharField",
      "matches": {
        "fchar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b662282e-ace7-33b3-85e5-8171320e0e87": {
      "content": "${1:name} <- function(${2:parameters}) {\n   ${3:selected}\n}",
      "doc": "Named function",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "function": true
      },
      "source": "vscode-R/snippets"
    },
    "b66642cc-fad4-3f5b-bf52-f663b58cc3aa": {
      "content": "Main.@bp",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "Debugger breakpoint",
      "matches": {
        "deb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b666ac8f-fdc3-3a43-9982-872aed8353db": {
      "content": "border-right-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b66775ba-c2ac-3538-b244-c25dfd04d44a": {
      "content": "<h2>${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2": true
      },
      "source": "vim-snippets/snippets"
    },
    "b66778eb-03d6-369c-9d3e-50d8227804e5": {
      "content": "require '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "b672c806-c099-3094-a134-32ff1fb8fa64": {
      "content": "font-size-adjust: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      },
      "source": "vim-snippets/snippets"
    },
    "b672d5a4-a258-30e8-9fa0-25c4895ad3e6": {
      "content": "- if ${1:condition}\n\t${2:${VISUAL}}\n- else\n\t${0}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6793282-0625-3bef-b09b-86b928b599d3": {
      "content": "{% with $1 as $2 %}\n\t${VISUAL}\n{% endwith %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b6850b87-1b61-3ec7-b2b7-0b85b8884c4d": {
      "content": "nfp(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfp": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6909208-f9ab-3b53-9865-c6faa4846688": {
      "content": "for (${1:var} in ${2:object}){\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "enumerate names",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "b69546cd-df8f-358e-831b-0c7a0b8f100a": {
      "content": "newtype ${1:Type} =\n\t${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nty": true
      },
      "source": "vim-snippets/snippets"
    },
    "b69f2d23-7bb4-3be2-9a07-ed004fddea50": {
      "content": "place-content: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6a07fea-c516-3f7c-bc27-294a59f96fe7": {
      "content": "${1:obj}.parent('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      },
      "source": "snippets/coffee"
    },
    "b6a1ff0c-e0f1-36ce-bd11-1eb9ec8e36b4": {
      "content": "case ${1:#:condition}:\n  ${2:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b6a43f3c-02b7-36df-bd4e-c917d9b81c7a": {
      "content": "{ |${1:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6a8e80d-1634-3879-bfa9-1ce7df788044": {
      "content": "_.next()",
      "doc": "var wrapped = _([1, 2]);\n\nwrapped.next();\n// => { 'done': false, 'value': 1 }\n\nwrapped.next();\n// => { 'done': false, 'value': 2 }\n\nwrapped.next();\n// => { 'done': true, 'value': undefined }\n\nGets the next value on a wrapped object following the\n[iterator protocol](https://mdn.io/iteration_protocols#iterator).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-next",
      "matches": {
        "lodash next": true
      },
      "source": "javascript/lodash"
    },
    "b6ab140a-f3fd-31ca-a35c-ba043d8e8d2f": {
      "content": "_.isBoolean(${value})",
      "doc": "_.isBoolean(false);\n// => true\n\n_.isBoolean(null);\n// => false\n\nChecks if `value` is classified as a boolean primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isboolean",
      "matches": {
        "lodash isboolean": true
      },
      "source": "javascript/lodash"
    },
    "b6b409ba-670a-35d4-b5c7-546a0ce7f418": {
      "content": "box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6b4dda3-b7ea-303c-a448-a4056f7cf546": {
      "content": "// Typedef is deprecated. Use alias instead.\ntypedef",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6b4e41d-83d2-338c-a576-c7372f618a01": {
      "content": "margin-right: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-right: length (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b6bcf486-861b-3f07-b54d-4b8a9eaa7d57": {
      "content": "${1:void} ${2:/*function name*/}(${3:/*args*/}) ${4:@safe pure nothrow}\n{\n\t${VISUAL}$5\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "function definition (fun)",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b6be1d72-b08f-3c99-a257-791bcad34ecc": {
      "content": "@extend ${0};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6bfd1b2-7af2-37ba-8a5a-cda99524a97f": {
      "content": "must_be ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6c1e9ed-b6cf-3645-b5e2-799d8db3ea6b": {
      "content": "$1:\n  name: ${1:value_key}\n  image:\n\trepository:\n\ttag:\n\tpullPolicy: IfNotPresent\n  hostNetwork: false\n  dnsPolicy: ClusterFirst\n  daemonset:\n\tuseHostPort: false\n  podLabels: {}\n  scope:\n\tenabled: false\n\tnamespace: \"\"   # defaults to .Release.Namespace\n  extraArgs: {}\n  extraEnvs: []\n  kind: Deployment\n  updateStrategy: {}\n  minReadySeconds: 0\n  tolerations: []\n  affinity: {}\n  nodeSelector: {}\n  podAnnotations: {}\n  replicaCount: 1\n  minAvailable: 1\n  resources: {}\n  autoscaling:\n\tenabled: false\n  extraContainers: {}\n  extraVolumeMounts: {}\n  extraVolumes: {}\n  extraInitContainers: []\n  lifecycle: {}\nrevisionHistoryLimit: 10\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_values": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6c7ec43-b1ce-3a3d-9053-a017c5f416b2": {
      "content": "for ${1:#:value} in ${2:#:list}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "for ... in ...: ...",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b6c82b1b-0daa-3ec1-bdad-23afbe680989": {
      "content": "for (${4:size_t} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "for (for)",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b6cab0dd-e5d5-3aa1-aafd-b79b4b11cd76": {
      "content": "package ${1:package_name};\n\t${0}\nendpackage : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkg": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6cad8d4-a822-3073-808c-d1f795cc711b": {
      "content": "debug(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6d13f62-e358-3dc1-8a5f-8a7415f95917": {
      "content": "@keyframes ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyf": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6d51dd9-eecf-3dfa-a414-6277a3a2c409": {
      "content": "white-space-collapse: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6deb6b7-6f03-37c7-82ea-2c6cb6b65345": {
      "content": "{%- elsif ${1:condition} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elsif-": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6df6684-b130-3280-b1d2-8e2208a844c4": {
      "content": "_.flatten(${array})",
      "doc": "_.flatten([1, [2, [3, [4]], 5]]);\n// => [1, 2, [3, [4]], 5]\n\nFlattens `array` a single level deep.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatten",
      "matches": {
        "lodash flatten": true
      },
      "source": "javascript/lodash"
    },
    "b6e44354-660f-3f90-804d-e7ca1397db11": {
      "content": "<map name=\"${1}\">\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6ed9357-e9ea-37e4-ac9e-74128dcf797d": {
      "content": "<command type=\"checkbox\" label=\"${1}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6ef182e-5288-39ad-bd0f-1cc8272ec577": {
      "content": "fail(\"${1:Failure message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fa": true
      },
      "source": "vim-snippets/snippets"
    },
    "b6fa7add-aea7-3bb2-b211-e6fbc76920a4": {
      "content": "@extend .${1}\n${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "b70216c0-7e53-35ed-8d5e-b69ca5b8ec56": {
      "content": "\\begin{figure}[${1}]\n\t\\centering\n\t\\begin{tikzpicture}[${2}]\n\t\t${3:TARGET}\n\t\\end{tikzpicture}\n\t\\caption{${4}}\n\t\\label{${5}}\n\\end{figure}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figuretikz": true,
        "tikzfig": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b70217e7-4d46-3f43-b80e-f2fb630398e5": {
      "content": "this.${1:service}.${2:function}\n\t.subscribe(${3:arg} => this.${4:property} = ${3:arg});\n$0",
      "doc": "Angular observable subscribe",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Subscribe",
      "matches": {
        "a-subscribe": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "b702baae-75c1-3f8f-a298-b7f528263493": {
      "content": "class ${1} {\n\t${2}\n\tconstructor(public ${3}: ${4: any}) {\n\t\t${5}\n\t}\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts class",
      "matches": {
        "tcla": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7076261-9ae5-3658-a528-ca861013ad51": {
      "content": "@inbook{${1:LABEL},\n    author/editor = {${2}},\n    title = {${3}},\n    chapter/pages = {${4}},\n    publisher = {${5}},\n    year = {${6}},\n    memo = {volume, series, address, edition, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@inbook": true,
        "inbook": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b7080d4a-692c-3d75-b8f0-7e565ec6b9f0": {
      "content": "cut:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b7154208-71a1-325d-bb36-eaa127999d87": {
      "content": "package ${1:main}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package",
      "matches": {
        "pa": true
      },
      "source": "vim-snippets/snippets"
    },
    "b71e418c-2adc-3d15-8cfc-0e7a1ca5d213": {
      "content": "${1:obj}.mouseenter(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menter": true
      },
      "source": "snippets/javascript"
    },
    "b7205b8c-e0a1-3f31-a89e-645c8338753b": {
      "content": "print-%: ; @echo $*=$($*)",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7206fd5-cb62-3546-bb08-1d6f38a6e1e1": {
      "content": "if err != nil {\n  t.Errorf(\"${1}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Errorf(...) }",
      "matches": {
        "ter": true
      },
      "source": "gosnippets/snippets"
    },
    "b72343a2-eb0f-3ae0-8ae4-4a45f6290e63": {
      "content": "@isset(${1})\n    ${2}\n@endisset",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@isset ... @endisset",
      "matches": {
        "isset": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b72805dd-bf92-3756-9f02-71f758fbd764": {
      "content": "repeat {\n\t${1}\n} ${2:while|until} ${3};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7396451-8fc2-301c-a5e9-0a657c22f391": {
      "content": "#lang datalog",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#d": true
      },
      "source": "vim-snippets/snippets"
    },
    "b73a2f46-6170-3759-adb9-1ad55f3016d8": {
      "content": "$this->db->or_where(\"${1:key}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-or_where": true
      },
      "source": "vim-snippets/snippets"
    },
    "b743c81b-d86a-3a40-9413-2b9b608e37ec": {
      "content": "${1:obj}.resize(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resize": true
      },
      "source": "snippets/javascript"
    },
    "b7466575-6e15-3c00-9b53-bad76cd24664": {
      "content": "${1:/*condition*/} ? ${2:/*then*/} : ${3:/*else*/}$4",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "ternary operator (?:)",
      "matches": {
        "?:": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b7482d93-6905-372d-bcd3-e94e25d5680b": {
      "content": "border-left-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7573ba4-50e6-3f4e-ae49-6789ffbde49d": {
      "content": "[formGroup]=\"${1:form}\"",
      "doc": "Angular formGroup",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormGroup",
      "matches": {
        "a-formGroup": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "b75a1372-7b27-3d91-ab5e-eee4fa9391b2": {
      "content": "console.dirxml(${1:object});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.dirxml",
      "matches": {
        "cdirx": true
      },
      "source": "snippets/javascript"
    },
    "b7608e8c-d082-38cf-81fe-a871dacefcd6": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "b76cd153-1b0a-3f97-9b4d-f8c3b337486b": {
      "content": "border-left-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      },
      "source": "vim-snippets/snippets"
    },
    "b772839e-c4d9-3f49-bca2-9e3c91208a07": {
      "content": "if(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "b784588d-08ed-3bea-96de-3756824cce52": {
      "content": "data.frame(${1:...}, ${2:row.names = ${3:NULL}}, ${4:check.rows = ${5:FALSE}}, ${6:check.names = ${7:TRUE}}, ${8:stringsAsFactors = ${9:default.stringsAsFactors()}})",
      "doc": "Data Frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "daf",
      "matches": {
        "data.frame": true
      },
      "source": "vscode-R/snippets"
    },
    "b78e55b9-2890-38b9-84ea-74f9bca4fccf": {
      "content": "box-sizing: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "b78fa3ac-7831-34a2-a0ef-8ecc8b1206cf": {
      "content": "type\t\tzeroGradient;",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zg": true
      },
      "source": "vim-snippets/snippets"
    },
    "b791e83a-8d4f-307b-8b18-3724dd479b7c": {
      "content": "&#x2305;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enter": true
      },
      "source": "vim-snippets/snippets"
    },
    "b794f553-1866-3585-8cf6-46ad5dfd7fce": {
      "content": "padding-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7954107-bce9-3317-b079-1b553a1c489e": {
      "content": "<%= link_to '${1:link text...}', action: '${2:edit}', id: ${0:@item} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liai": true
      },
      "source": "vim-snippets/snippets"
    },
    "b79b82fb-6b12-32cf-8a7a-cb99a9424684": {
      "content": "for ${1} (${2:#:expression}){\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b79ce8a7-9a4a-3ea7-a2e5-e93a9ad0b481": {
      "content": "list-style-type lower-roman",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "b79de578-372e-30aa-b8d6-171e1094b75a": {
      "content": "place-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7a073c5-258b-3156-b113-a042af8cb148": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7a68045-6c72-3d39-b4c6-13ea47678506": {
      "content": "echo \"${0:TARGET}\" 1>&2",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b7a9d2ba-c0fa-384e-bcc6-5d01c5f80be4": {
      "content": "import { store } from './store/index';",
      "doc": "import vuex store into main.js",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-import-store",
      "matches": {
        "vstore-import": true,
        "vuex import store": true
      },
      "source": "javascript/vuex"
    },
    "b7ab2f49-575f-3151-bf2f-d162ee5162b9": {
      "content": "foreach ${1:var} ${2:\\$list} {\n\t$3\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "foreach... (foreach)",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b7afb810-e175-30cf-9b1a-291395226963": {
      "content": "border-style groove",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7b5724b-f1f8-3510-891a-0668175c6a04": {
      "content": "font-size: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-size": true,
        "fs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b7baa36c-0c70-3197-bc91-ad75c430aad1": {
      "content": "package ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package",
      "matches": {
        "pac": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7c0a326-7691-3760-884c-bf1cb4cfdb92": {
      "content": "Params:  ${1:param} = ${2:param description}\n///\t\t\t$3",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Params (Par)",
      "matches": {
        "Par": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b7d3d4ce-5ca4-32e2-aa4d-9d00451467e5": {
      "content": "+ (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n${0}\n\treturn nil;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassMethod",
      "matches": {
        "cm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b7dd0cae-71a1-3856-bf61-695569f1aef7": {
      "content": "content: no-close-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7e6c267-f93f-3052-a977-310856ebea51": {
      "content": "${fn:join(${1:collection}, ${0:delims})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7e74d75-b63b-3079-8fbb-64625b592156": {
      "content": "mixed.concat()",
      "doc": "mixed.concat(schema: Schema)\n\nCreates a new instance of the schema by combining two schemas. Only schemas of the same type can be concatenated.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-concat",
      "matches": {
        "yup mixed concat": true
      },
      "source": "javascript/yup"
    },
    "b7e8b99f-8d1a-3231-b7f5-6cbcd505c141": {
      "content": "_.clone(${value})",
      "doc": "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar shallow = _.clone(objects);\nconsole.log(shallow[0] === objects[0]);\n// => true\n\nCreates a shallow clone of `value`.\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\nand supports cloning arrays, array buffers, booleans, date objects, maps,\nnumbers, `Object` objects, regexes, sets, strings, symbols, and typed\narrays. The own enumerable properties of `arguments` objects are cloned\nas plain objects. An empty object is returned for uncloneable values such\nas error objects, functions, DOM nodes, and WeakMaps.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clone",
      "matches": {
        "lodash clone": true
      },
      "source": "javascript/lodash"
    },
    "b7e8f745-652d-3383-8055-855919f943ce": {
      "content": "while (${1:obj}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7ef829f-973e-383d-bd44-178ac644e373": {
      "content": "while ${1:true}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "while ... end",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b7f1bb1c-f2fa-3e6d-a8e7-89ba1bdc1fd3": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "Base for Vuex store",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-store",
      "matches": {
        "vstore": true,
        "vuex store": true
      },
      "source": "javascript/vuex"
    },
    "b7f36fb7-2db6-3097-a92e-04dd646a1f40": {
      "content": "grid-auto-flow column dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7f391cf-deb8-3207-93e2-adbc0b1ec708": {
      "content": "<%= gettext(\"${0:${VISUAL}}\") %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "gettext",
      "matches": {
        "gt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b7f6bf43-f615-395e-9f62-ade4113ef5a5": {
      "content": "void keyReleased(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyReleased": true
      },
      "source": "vim-snippets/snippets"
    },
    "b7fa92ff-24cc-3c8f-b6e7-bf8c9413dc08": {
      "content": "\\\\begin{subfigure}[${1}]{${2:\\\\textwidth}}\n\\\\begin{center}\n\t${3}\n\\\\end{center}\n\\\\caption{${4}}\n\\\\label{fig:${5}}\n\\\\end{subfigure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "subfigure environment",
      "matches": {
        "subfig": true
      },
      "source": "vim-snippets/snippets"
    },
    "b80049da-2615-3b98-a09f-44ff95b3e00f": {
      "content": "text-wrap suppress",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "b801a016-044d-3310-909e-56f9be3ecbe4": {
      "content": "export { ${2:originalName} as ${3:alias} } from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportAs",
      "matches": {
        "exa": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "b804cffb-f7bb-3f65-a758-dccb9e96f571": {
      "content": "_.matchesProperty(${path}, ${srcValue})",
      "doc": "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.find(objects, _.matchesProperty('a', 4));\n// => { 'a': 4, 'b': 5, 'c': 6 }\n\nCreates a function that performs a partial deep comparison between the\nvalue at `path` of a given object to `srcValue`, returning `true` if the\nobject value is equivalent, else `false`.\n\n**Note:** Partial comparisons will match empty array and empty object\n`srcValue` values against any array or object value, respectively. See\n`_.isEqual` for a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-matchesproperty",
      "matches": {
        "lodash matchesproperty": true
      },
      "source": "javascript/lodash"
    },
    "b8128ae0-cac4-386b-8c5d-59520e6773aa": {
      "content": "mounted () {\n\t${0};\n},",
      "doc": "mounted lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-mounted",
      "matches": {
        "vmounted": true,
        "vue lifecycle mounted": true
      },
      "source": "javascript/vue"
    },
    "b813b0da-1c42-303a-a5f8-6925ba37cf44": {
      "content": "height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8233923-f30c-310f-9c28-190fa362cea0": {
      "content": "background-clip ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "b82426c6-4b59-3d55-84db-cf37d2964f2f": {
      "content": "_.spread(${func}, ${start})",
      "doc": "var say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n\nsay(['fred', 'hello']);\n// => 'fred says hello'\n\nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n\nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76\n\nCreates a function that invokes `func` with the `this` binding of the\ncreate function and an array of arguments much like\n[`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\n**Note:** This method is based on the\n[spread operator](https://mdn.io/spread_operator).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-spread",
      "matches": {
        "lodash spread": true
      },
      "source": "javascript/lodash"
    },
    "b82f7794-7e9d-309c-a4d2-2eb4e0e51b96": {
      "content": "list-style-type: ${1:hebrew/armenian/georgian};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: other (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b8392e4e-fd3d-3abf-9f63-657dfac8e3f5": {
      "content": "{% include \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig include",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/snippets"
    },
    "b840ce8f-c703-3a32-b21d-24a0e72e6979": {
      "content": "case ${1} of\n\t${2} ->\n\t\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8415050-1d87-3e55-a36c-05e30ff2e0c6": {
      "content": "{%- for ${1:item} in ${2:collection} -%}\n\t${0}\n{%- endfor -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for-": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8527355-3743-30a1-a95e-7eda6c888ae7": {
      "content": "padding ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "b85af8c3-8861-3f18-b6c7-2b1b5670846d": {
      "content": "padding-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      },
      "source": "vim-snippets/snippets"
    },
    "b85dd315-1872-3c0d-aa68-d2ea00b60025": {
      "content": "<ins>${0}</ins>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ins": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8623542-fbf9-3007-ada6-a5dc72ed60f7": {
      "content": "def destroy\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\t@$1.destroy\n\trespond_to do |format|\n\t\tformat.html { redirect_to($1s_url) }\n\t\tformat.json  { head :ok }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defdestroy": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8630747-4d06-34fe-8c18-f5b4bf7efc5e": {
      "content": "justify-content left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "b86f5e5f-fa40-32e8-899a-c24a20bd98ee": {
      "content": "_.toFinite(${value})",
      "doc": "_.toFinite(3.2);\n// => 3.2\n\n_.toFinite(Number.MIN_VALUE);\n// => 5e-324\n\n_.toFinite(Infinity);\n// => 1.7976931348623157e+308\n\n_.toFinite('3.2');\n// => 3.2\n\nConverts `value` to a finite number.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tofinite",
      "matches": {
        "lodash tofinite": true
      },
      "source": "javascript/lodash"
    },
    "b86fac7c-24f6-3c23-8144-e40c3a97aaa5": {
      "content": "Run Keyword If All Tests Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If All Tests Passed",
      "matches": {
        "rkiatp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b879a20b-c5e0-3437-969e-d4be82c2d77d": {
      "content": "<dt class=\"${1}\">${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt.": true
      },
      "source": "vim-snippets/snippets"
    },
    "b87d7fc3-47d6-336a-8d20-3bd496b74244": {
      "content": "<ol type=\"a\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ola": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b88049cd-158c-30cc-9425-45d08bee02e1": {
      "content": "grid-template-areas: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      },
      "source": "vim-snippets/snippets"
    },
    "b88248d1-f0e3-3a93-b8c9-1b2da58c696c": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypeframeset": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b886cb80-1b51-3c7e-8028-b83092bf5cf6": {
      "content": "dispatch(${1:key},${2:data})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch-event",
      "matches": {
        "svdpe": true,
        "svelte dispatch event": true
      },
      "source": "javascript/svelte"
    },
    "b887fca7-aa3f-3445-9336-e24cc083bdcb": {
      "content": "<%= ${1:f}.password_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffpf": true
      },
      "source": "vim-snippets/snippets"
    },
    "b88969ad-0165-3cc3-a903-1abc35612895": {
      "content": "noremap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "no": true
      },
      "source": "vim-snippets/snippets"
    },
    "b892eaf8-eebb-3abb-a2d8-15cece1c259e": {
      "content": "page-break-inside: avoid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8967b6f-f076-341e-8525-911d4c99c584": {
      "content": "watchEffect(() => {\n\t${1}\n})",
      "doc": "Run a function immediately while reactively tracking its dependencies, and re-run it whenever the dependencies have changed.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watcheffect",
      "matches": {
        "vue v3 watcheffect": true
      },
      "source": "javascript/vue"
    },
    "b8978590-825f-3134-9eda-8672bf0322d9": {
      "content": "expression()",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8a10238-0933-31e5-b319-dac2cb8e7f57": {
      "content": "border-right-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8a6241f-d5b4-3d44-b614-03c7c8362862": {
      "content": "try\n{\n\t${VISUAL}${1:/*code to try*/}\n}\ncatch($2Exception e)\n{\n\t${3:/*handle exception*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "try/catch (try)",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b8aa949c-89cd-31e9-b178-90b1c929bbfd": {
      "content": "before_validation :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbv": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8af763a-3900-3a59-a2bc-320febd9f6f3": {
      "content": "= mail_to ${1:email_address}, ${2:name}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8afe808-8c0c-3210-87ee-1a6a94f18667": {
      "content": "string.ensure()",
      "doc": "string.ensure(): Schema\n\nTransforms undefined and null values to an empty string along with\nsetting the default to an empty string.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-ensure",
      "matches": {
        "yup string ensure": true
      },
      "source": "javascript/yup"
    },
    "b8b0928b-c368-3cd6-a3ce-8255414ede4e": {
      "content": "font-smooth never",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8b5b3ee-de2d-303b-bae8-0290256002ca": {
      "content": "$this->${1:method}()->shouldNotBeEqualTo(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeEqualTo('value')",
      "matches": {
        "snbequalto": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b8b5e57f-a392-32e9-8b6f-0eff6d623155": {
      "content": "form_checkbox(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_checkbox": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8ba595c-abb1-3159-a226-6b1d6d497792": {
      "content": "transition(\n\tmode=\"out-in\"\n\t@before-enter=\"beforeEnter\"\n\t@enter=\"enter\"\n\n\t@before-leave=\"beforeLeave\"\n\t@leave=\"leave\"\n\t:css=\"false\"\n)",
      "doc": "transition component js hooks",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Transition Component with JavaScript Hooks",
      "matches": {
        "vanim": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "b8c226d1-30a3-34a9-925e-2fa3e5218ba8": {
      "content": "align-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8d426be-839a-352f-9168-feecf2447e7c": {
      "content": "Yii::app()->clientScript->registerCss('${1:id}', '${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8db5769-4bcd-3833-817a-e7023a2ac652": {
      "content": "if (${1}) {\n\t${2}\n}${3: else}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b8dbee54-01af-3cd9-83b4-2f03885a0888": {
      "content": "let mut ${1}: ${2} = ${3};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let mut variable declaration with explicit type annotation",
      "matches": {
        "lettm": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8dc077a-06a3-3a3f-8616-b3fced200be3": {
      "content": "<cite>${0}</cite>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cite": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8dd55f6-dc16-351b-9948-ff4e7218dd23": {
      "content": "$.getScript '${1:mydomain.com/url}', (script, textStatus, jqXHR) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getscript": true
      },
      "source": "snippets/coffee"
    },
    "b8e02071-f486-332f-beae-9387af208fcc": {
      "content": "@if ($1)\n\t${2:${VISUAL}}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@if directive",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b8e074c6-b88c-32c5-a72f-807541e5bcee": {
      "content": "overflow-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      },
      "source": "vim-snippets/snippets"
    },
    "b8e980a7-7ae0-3435-8555-98eb1172c806": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-element",
      "matches": {
        "prop-types element": true,
        "ptel": true
      },
      "source": "javascript/prop-types"
    },
    "b8f30799-4e03-30c6-9a43-53a1218bc90f": {
      "content": "|> Enum.reduce(${1:acc}, fn ${2}, ${3:acc} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to reduce",
      "matches": {
        ">r": true
      },
      "source": "vim-snippets/snippets"
    },
    "b904ff9f-9dff-3b7d-bf9e-119dc51271ab": {
      "content": "logger.debug { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logd": true
      },
      "source": "vim-snippets/snippets"
    },
    "b90ec967-4bd1-3e57-a6d5-16f89c6a120f": {
      "content": "(let/cc here (set! ${1} here) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letcc": true
      },
      "source": "vim-snippets/snippets"
    },
    "b90f77a3-c1d1-3d14-a874-bf258cab258b": {
      "content": "border-top-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      },
      "source": "vim-snippets/snippets"
    },
    "b92036d1-1462-3c79-a32d-617839125e6c": {
      "content": "NSMutableDictionary ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsmd": true
      },
      "source": "vim-snippets/snippets"
    },
    "b92fe9a5-14e1-309a-a65c-06eca482417e": {
      "content": ";(function(${1}) {\n\t${0:${VISUAL}}\n}(${2}))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ";fe": true
      },
      "source": "snippets/javascript"
    },
    "b9366393-a53c-3f85-a66b-2cc39690b3ac": {
      "content": "else if ${1:condition}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Else if",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b93866fc-d64e-3b4b-897a-96b490f3f865": {
      "content": "for (const ${1:item} in ${2:object}) {\n\t${0}\n}",
      "doc": "Iterating over property values of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forIn",
      "matches": {
        "fin": true
      },
      "source": "vscode-javascript/snippets"
    },
    "b93f41da-674e-3196-9bd4-dba5dc7f86f4": {
      "content": "_.toSafeInteger(${value})",
      "doc": "_.toSafeInteger(3.2);\n// => 3\n\n_.toSafeInteger(Number.MIN_VALUE);\n// => 0\n\n_.toSafeInteger(Infinity);\n// => 9007199254740991\n\n_.toSafeInteger('3.2');\n// => 3\n\nConverts `value` to a safe integer. A safe integer can be compared and\nrepresented correctly.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tosafeinteger",
      "matches": {
        "lodash tosafeinteger": true
      },
      "source": "javascript/lodash"
    },
    "b941da65-257f-318a-a3c4-0441754ab10f": {
      "content": "<motion.${1:div}\n  initial=\"${2:hidden}\"\n  animate=\"${3:visible}\"\n></motion.${1:div}>",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-motion",
      "matches": {
        "framer-motion motion": true,
        "motion": true
      },
      "source": "javascript/framer-motion"
    },
    "b94497c1-3ab6-3d5c-9bc3-7e1daa26ffe4": {
      "content": "text-outline: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9541c75-215f-33ff-b54c-d04c207c1423": {
      "content": "<hr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hr": true
      },
      "source": "vim-snippets/snippets"
    },
    "b957c1dc-5ab5-3947-b6b0-622d3ab93a21": {
      "content": "process.stdin",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stdin",
      "matches": {
        "stdin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "b9581f39-7838-3307-a3ca-010a3584712f": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-pure-component-prop-types",
      "matches": {
        "imrpcp": true,
        "react import purecomponent proptypes": true
      },
      "source": "javascript/react"
    },
    "b95a8cde-a690-30e4-ae1f-0ce3a78a3489": {
      "content": "border-fit: clip;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9652516-6539-38b5-9185-bc710dcc86fc": {
      "content": "${1:a}: ${2:T}${0:, arg}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arg": true
      },
      "source": "vim-snippets/snippets"
    },
    "b965a8e0-54f1-34c4-8609-92158a26ee91": {
      "content": "if exists('g:loaded_${1}')\n  finish\nendif\n${0}\nlet g:loaded_$1 = 1",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if exists('g:loaded_{plugin-name}')",
      "matches": {
        "g:loaded": true,
        "loaded": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b96a40ac-0d9d-3e14-80e2-192a18564dd6": {
      "content": "import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nexport class PreloadSelectedModulesList implements PreloadingStrategy {\n\tpreload(route: Route, load: Function): Observable<any> {\n\t\treturn route.data && route.data['${1:preload}'] ? load() : of(null);\n\t}\n}\n$0",
      "doc": "Angular opt-in preload strategy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-opt-in-preload-strategy",
      "matches": {
        "a-preload-opt-in-strategy": true,
        "angular opt-in preload strategy": true
      },
      "source": "javascript/angular"
    },
    "b9726f09-d6fd-3aa5-b62e-6d3ef93217b1": {
      "content": "if err != nil {\n\tpanic(${1})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { panic(...) }",
      "matches": {
        "errp": true
      },
      "source": "gosnippets/snippets"
    },
    "b97b9d4b-84b3-387d-8fbb-8a1796551d0e": {
      "content": "@section('${1:section name}')\n    @parent\n    ${2}\n@endsection",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section @parent ... @endsection",
      "matches": {
        "section-parent": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b982f87e-d3d8-30e4-be13-bb8988188127": {
      "content": "getContext(${1:key})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-get-context",
      "matches": {
        "svelte get content": true,
        "svgetc": true
      },
      "source": "javascript/svelte"
    },
    "b998d815-ec39-3724-b4b8-b0ac272b78b7": {
      "content": "{%- when ${1:condition} -%}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when-": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9abbd35-d17a-3735-9569-fa7c1e2ec8c6": {
      "content": "${1:deferred}.resolveWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dresw": true
      },
      "source": "snippets/coffee"
    },
    "b9aeef51-159f-3f4a-8383-b9443e64a6b8": {
      "content": "echo CHtml::textField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhtf": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9c0718e-5126-31dc-8dd6-8bb856c5c18c": {
      "content": "\\begin{bmatrix}\n\t${1:TARGET}\n\\end{bmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{bmatrix} \\bmatrix": true,
        "bmatrix": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "b9cabee5-5f4b-3a06-9e97-57ebb8844b08": {
      "content": "align-items flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9cda748-31f3-3359-ab23-e29111605606": {
      "content": "string.url()",
      "doc": "string.url(message?: string | function): Schema\n\nValidates the value as a valid URL via a regex.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-url",
      "matches": {
        "yup string url": true
      },
      "source": "javascript/yup"
    },
    "b9cfcba4-1206-334e-8487-22d4f1d5f776": {
      "content": "return ${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "rt": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "b9d287db-dc52-3372-8507-6ec74c47fa66": {
      "content": "finally\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "finally statement",
      "matches": {
        "fin": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9d2da4e-8c2d-3ab2-8dcd-ac1a5e37a995": {
      "content": "get ${1:property}() {\n\t${0}\n}\nset ${1:property}(${2:value}) {\n\t\n}",
      "doc": "getter and setter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "getter-and-setter-es6-syntax-",
      "matches": {
        "base getter setter": true
      },
      "source": "javascript/base"
    },
    "b9dcb1fb-ab93-3faf-a333-69c2130ee3e9": {
      "content": "_.keys(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']\n\nCreates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\nfor more details.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keys",
      "matches": {
        "lodash keys": true
      },
      "source": "javascript/lodash"
    },
    "b9e6d1bd-2581-342a-8c2d-43669068123a": {
      "content": "justify-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9f0b67a-1c9c-3b5e-92a1-991f5689bd28": {
      "content": "justify-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9f522e4-514d-39be-a0e4-13e215edb99b": {
      "content": "text-wrap none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "b9f6ae82-7290-3d50-a5b7-91422c6e2fcb": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillUpdate",
      "matches": {
        "cwu": true
      },
      "source": "snippets/javascript"
    },
    "ba088ec6-2a97-3464-a3af-16907579612e": {
      "content": "qr/\n     ${0:regex}\n/xms",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qrx": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba0a08b6-a9a8-3d55-b480-2ef0b8372a83": {
      "content": "(${1:Expand acronym})",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba12f5c9-7144-3d2b-b27d-e0abb44d6b92": {
      "content": "for some ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for some",
      "matches": {
        "for_some": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ba17e498-d603-39eb-b513-49da47da08a9": {
      "content": "RAILS_DEFAULT_LOGGER.${1:debug} ${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log2": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba1a00aa-1100-32a4-9c45-42d548ed5122": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      },
      "source": "snippets/coffee"
    },
    "ba1aae56-be08-3fb0-8f62-4dfcb2d4ef5e": {
      "content": "${1:public} bool ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba1dc865-507f-3956-8e23-5337b6aa8a11": {
      "content": "else if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "snippets/coffee"
    },
    "ba231611-e43e-3e36-851a-1334b3931a0c": {
      "content": "/**\n * ${4:#:undocumented function}\n *\n * @return ${5:void}\n * @author ${6}\n **/\n${1}function ${2}(${3});${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_interface_function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ba24c69b-e3cd-3553-af84-8fd492c7b642": {
      "content": "const initialState = {\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\n\tcase ${1:typeName}:\n\t\treturn { ...state, ...payload }\n\n\tdefault:\n\t\treturn state\n\t}\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reduxReducer",
      "matches": {
        "rxreducer": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ba2d7330-f46c-3628-a003-9188325ec3c4": {
      "content": "text-decoration: overline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba2fd93e-5612-3b9f-b06e-f5acc2b480ec": {
      "content": "before(() => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "before(() => { ... })",
      "matches": {
        "bef": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba30030f-83cb-38c2-95a5-c910390498c7": {
      "content": "{% switch ${1} %}\n\t{% case \"${2}\" %}\n\t\t${0}\n\t{% default %}\n{% endswitch %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba30fba5-20a5-35ca-847a-0b1698c8ba5c": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n}",
      "doc": "try/catch",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-catch",
      "matches": {
        "base try catch": true
      },
      "source": "javascript/base"
    },
    "ba316ee3-d15b-3f78-a853-9849df6cd1d4": {
      "content": "receive\n${1:\t${2:pattern}${3: when ${4:guard}} ->\n\t\t${5:body}}\n${6:after\n\t${7:expression} ->\n\t\t${8:body}}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Receive Expression",
      "matches": {
        "rcv": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba3266c2-4fb3-3bed-9a8a-4f5d2c4cad37": {
      "content": "import type ${0:option.option}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impt": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba4501b9-2576-3dd8-b9b7-648cc1a09f91": {
      "content": "text-decoration: ${1:none/underline/overline/line-through/blink};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-decoration: none:underline:overline:line-through:blink (text)",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ba489fe5-6323-39c5-929e-ce014ad1bddc": {
      "content": "${1:obj}.appendTo('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "appendTo": true
      },
      "source": "snippets/coffee"
    },
    "ba5401c0-8c56-390b-85c5-4c95ab66681f": {
      "content": "message(AUTHOR_WARNING \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(AUTHOR_WARNING \"...\")",
      "matches": {
        "author_warning_message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ba56cc9e-b892-39d9-a2a8-49b2be393551": {
      "content": "validates_length_of :${1:attribute}, within: ${2:3..20}${3:, on: :${4:create}, message: \"${5:must be present}\"}, if: proc { |obj| ${6:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of if",
      "matches": {
        "vlif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ba5a5e1a-b68e-346d-96d2-0534632c7197": {
      "content": "${1:type} ${2:ptr} = ($1*) malloc(sizeof($1));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mlcd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba5ddd44-560b-38f7-af4f-4bbfee3b4972": {
      "content": "<style lang=\"postcss\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with postcss",
      "matches": {
        "style_with_postcss": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ba60351c-083b-373c-b07f-44436ae159d9": {
      "content": "| strip_html",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip_html": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba73dacf-43b9-39dd-8e5f-765494768a34": {
      "content": "font-style: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba7feb1a-f003-3cd0-9f3c-31debf6b87e0": {
      "content": "final switch(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ba7ff357-24a5-342a-80a1-4134c4b83ef9": {
      "content": "${1:methodName}(${2:params}) {\n\t${0}\n}",
      "doc": "Creates a method inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "method",
      "matches": {
        "met": true
      },
      "source": "vscode-javascript/snippets"
    },
    "ba8413f5-d8d1-3bb4-9c93-052206072b1b": {
      "content": "std::cout << ${0:TARGET} << std::endl;",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ba926808-508a-35be-95d9-9f76dd2d2fef": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n} else {\n\t${2}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "if (condition) { ... } else { ... }",
      "matches": {
        "ife": true
      },
      "source": "snippets/javascript"
    },
    "baa4463e-e088-30d5-86d4-6a096a346c5f": {
      "content": "${1:obj}.filter(function (${2:index}) {\n\t${3}\n})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtert": true
      },
      "source": "snippets/javascript"
    },
    "baa6ca74-d589-34e7-a4ec-e908d61a40bb": {
      "content": "${fn:containsIgnoreCase(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "baa8d7b6-21c0-3c46-9dbe-905bb8eb05c9": {
      "content": "\\begin{quotation}\n\t${1:TARGET}\n\\end{quotation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{quotation} \\quotation": true,
        "quotation": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "baad6541-72ad-36e3-8b9b-6af2ac1e3c3a": {
      "content": "text-height: font-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "baadcc7d-d1f1-3654-b6e8-ff15183a9c65": {
      "content": "default_if_none:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      },
      "source": "vim-snippets/snippets"
    },
    "bac185d8-fa4b-314e-b79e-804b2d1b3ebf": {
      "content": "Run Keyword And Continue On Failure    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Continue On Failure",
      "matches": {
        "rkacof": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bac551b6-f68d-3290-a686-07080346ee68": {
      "content": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    environment.production ? [] : StoreDevtoolsModule.instrument()\n  ]\n})\nexport class $1StoreModule {}",
      "doc": "NgRx Store Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Store Module",
      "matches": {
        "a-ngrx-store-module": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "bac87533-0811-3c7c-bf75-2c07435ae707": {
      "content": "<td id=\"${1}\">${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td#": true
      },
      "source": "vim-snippets/snippets"
    },
    "bac91121-368f-3577-9045-f8c4cd0c0c25": {
      "content": "case ${1} is\n\twhen ${2} => ${3};${0}\nend case;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "bac9ac2b-44c0-322b-990c-5b5f91f69d56": {
      "content": "step(${1:2}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ste": true
      },
      "source": "vim-snippets/snippets"
    },
    "bacc362e-0186-36e2-99ee-fa6929226115": {
      "content": "position absolute",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "bacc3cef-a186-30e2-ad87-6d8487ea15b2": {
      "content": "class ${1:name} extends FunSuite {\n\ttest(\"${0:description}\") {\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsuite": true
      },
      "source": "vim-snippets/snippets"
    },
    "bacce5ce-49ed-342d-86a0-c3e3f35cd3d8": {
      "content": "[[NSColor ${0:blackColor}] set];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "color": true
      },
      "source": "vim-snippets/snippets"
    },
    "bada7ba7-b425-3fb5-a381-17a42b540ac5": {
      "content": "${1:#:expression} unless ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "xun",
      "matches": {
        "xunless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bae06396-3d88-39f3-ac76-30d6ec280293": {
      "content": "to!double(${1:str});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tod": true
      },
      "source": "vim-snippets/snippets"
    },
    "bae31cf7-8c56-303d-8415-6ba29a9fede2": {
      "content": "|> Enum.map(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to map",
      "matches": {
        ">m": true
      },
      "source": "vim-snippets/snippets"
    },
    "bae4b4c2-fd21-370a-8784-2b93ad20b3aa": {
      "content": "#lang racket/gui",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#rg": true
      },
      "source": "vim-snippets/snippets"
    },
    "bae5676b-5766-3721-be0b-be48dc2d187c": {
      "content": "font-emphasize-style accent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "bae76308-ec04-36fe-bbbd-3c71164aa412": {
      "content": "loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "loop",
      "matches": {
        "lo": true
      },
      "source": "vim-snippets/snippets"
    },
    "bae95885-b2e0-3a92-a468-24eadd3c6766": {
      "content": "display: table-column-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      },
      "source": "vim-snippets/snippets"
    },
    "bafdcdd0-b29e-396e-97a5-17cb5b476910": {
      "content": "get ${1:propertyName}() {\n\treturn this.${0}\n}\n",
      "doc": "Creates a getter property inside a class in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertyGet",
      "matches": {
        "pge": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "bb107f1c-0807-34d0-b388-29921ca81a9e": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb11701f-78ba-385e-a29f-bea398337002": {
      "content": "slice:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb14b4d9-8077-3d0d-b38f-1b91321b92d0": {
      "content": "@each('$1', $$2, '$3')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@each directive",
      "matches": {
        "each": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bb14c841-32ce-30a5-ac57-93c2d01c94ce": {
      "content": "if ( ${1:condition} )\n{\n\t${2:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb16805f-6314-3c00-9b9e-993f2155483f": {
      "content": "useEffect(() => {\n$0\n},[])",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffectDidMount",
      "matches": {
        "usfd": true
      },
      "source": "vscode-react/snippets"
    },
    "bb2037fe-a626-3cb2-9c9f-65bb268270b9": {
      "content": "switch ${1:#:object}\n  when ${2:#:value}\n    ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bb22856e-8195-3fe1-b924-034ea4f74bb0": {
      "content": "it { should ensure_exclusion_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isee": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb23b7fc-e516-3090-9eab-8fa86aa90820": {
      "content": "[SetUp]\npublic void SetUp() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testsetup": true,
        "tsu": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bb2d4a96-beba-3e99-bd8c-cfd1a6b28bb3": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE}} = memo(function ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Memo Function Component with ES7 module system with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactFunctionMemoComponentWithPropTypes",
      "matches": {
        "rmcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "bb36ef5c-db37-30f1-b32e-490489a98719": {
      "content": "if err != nil {\n\tt.Fatalf(\"${0:message}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatalf(...) }",
      "matches": {
        "terf": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "bb397257-1e26-32be-af69-2f9cb549a9f2": {
      "content": "${1:obj}.focus (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      },
      "source": "snippets/coffee"
    },
    "bb3ef495-8548-3e83-b4ff-ae6b94d7bbc8": {
      "content": "import 'react-native'\nimport renderer from 'react-test-renderer'\n\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n\tconst defaultProps = {}\n\tconst wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n\ttest('render', () => {\n\t\texpect(wrapper).toMatchSnapshot()\n\t})\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_setupReactNativeTest",
      "matches": {
        "_sntest": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "bb41a845-ff13-3820-b73e-e8f174d60468": {
      "content": "grid-auto-columns: min-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb439cdb-668d-38b0-94d6-d00c94f618bc": {
      "content": "caption-side ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb48b266-d7c0-3761-90da-8cdbba811c7d": {
      "content": "must_be_nil",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbn": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb51d414-6214-3439-8220-b7f097626165": {
      "content": "_.isSafeInteger(${value})",
      "doc": "_.isSafeInteger(3);\n// => true\n\n_.isSafeInteger(Number.MIN_VALUE);\n// => false\n\n_.isSafeInteger(Infinity);\n// => false\n\n_.isSafeInteger('3');\n// => false\n\nChecks if `value` is a safe integer. An integer is safe if it's an IEEE-754\ndouble precision number which isn't the result of a rounded unsafe integer.\n\n**Note:** This method is based on\n[`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-issafeinteger",
      "matches": {
        "lodash issafeinteger": true
      },
      "source": "javascript/lodash"
    },
    "bb5c2a04-5252-30fa-8503-b5031795d701": {
      "content": "module.exports = ${1:name};",
      "doc": "module.exports",
      "filetype": "base",
      "grammar": "lsp",
      "label": "module-exports",
      "matches": {
        "base module exports": true
      },
      "source": "javascript/base"
    },
    "bb6cc684-cce7-3e03-8d4e-5459732c79ed": {
      "content": "\\begin{mdseries}\n\t${1:TARGET}\n\\end{mdseries}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{mdseries} \\mdseries": true,
        "mdseries": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bb7da9ee-59c0-3297-8b42-746a25bf0aae": {
      "content": "grid-column-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb83f544-e4eb-3a0a-a9d6-c1dab2a00788": {
      "content": "default:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb8ea456-4e5d-3f8d-b123-5bc8da2836fa": {
      "content": "clear: ${1:left/right/both/none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "clear: value (clear)",
      "matches": {
        "clear": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bb9a5ab9-c2d4-3761-ab02-f6ad8a88e798": {
      "content": "display: table-header-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb9f1d39-f160-3515-9b5b-a3e3d78596f1": {
      "content": "text(${1:stringdata}, ${2:x}, ${3:y}, ${4:width}, ${5:height}${6:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "stringdata",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/snippets"
    },
    "bb9fba7d-676b-3e47-8849-6f2a706e5e0e": {
      "content": "empty-cells: hide",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbb02540-5c96-3152-8978-5dda1223a875": {
      "content": "break;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bbb1de62-64b7-3f47-9c92-2c73db903194": {
      "content": "${1:deferred}.done(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ddone": true
      },
      "source": "snippets/coffee"
    },
    "bbbe32fc-4055-3bc3-93dc-107bdec85d3a": {
      "content": "jasmine.arrayContaining([${1:value1}]);",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "array containing (js)",
      "matches": {
        "arrc": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbc30541-8bd6-349f-9a8b-196f53ec81e7": {
      "content": "display table-footer-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbc31db3-d314-33c4-a7f7-9634e6f68808": {
      "content": "render action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :action",
      "matches": {
        "ra": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bbca3b8d-7214-3293-984d-664e9ce0b923": {
      "content": "protected body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected body",
      "matches": {
        "prob": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbcab3d6-e4d5-39c4-8bb4-e5d01a195a45": {
      "content": "word-wrap: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbcfddb0-6a33-3748-a68e-f7cd0e2679a7": {
      "content": "${1:term}\n  ~  ${2:definition}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd0dca9-32fd-3b3d-ba02-bc6375e0564a": {
      "content": "#ifdef ${1:FOO}\n\t${2:#define }\n#endif",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd104f2-3b86-3379-aa5e-ede793ea6b25": {
      "content": "text-align: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd3e0c9-41e2-3244-bf95-5e433590dcc8": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bang": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd4bf4b-5cd7-3acc-a109-794f5d6f05e6": {
      "content": "xhr :post, :${1:create}, ${2:object}: ${3:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xpost": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd75a56-5865-3391-bcdd-bf1621119a04": {
      "content": "div(ng-if='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbd79d97-b74c-30c4-ac6f-1eb6881d7a98": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t}\n},",
      "doc": "Vue Component Data",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Data",
      "matches": {
        "vdata": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "bbde4664-974e-3b82-8997-cb372e02d4a4": {
      "content": "protected int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi|": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbe4a9cb-052a-3bdb-b2dc-c77166dfec38": {
      "content": "switch (${1:#:variable}) {\ncase '${2:#:value}':\n\t${3:#:code...}\n\tbreak;\n${0}\ndefault:\n\t${4:#:code...}\n\tbreak;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "sw",
      "matches": {
        "switch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bbf58198-b005-37f8-be4b-950229bf67a9": {
      "content": "def ${1:foo}():\n\tdoc = \"${2:The $1 property.}\"\n\tdef fget(self):\n\t\t${3:return self._$1}\n\tdef fset(self, value):\n\t\t${4:self._$1 = value}\n\tdef fdel(self):\n\t\t${0:del self._$1}\n\treturn locals()\n$1 = property(**$1())",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "property": true
      },
      "source": "vim-snippets/snippets"
    },
    "bbf5e2a2-3567-38d1-b04f-d888156e88df": {
      "content": "vital#${1:#:plugin_name}#new()",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "vital#...#new()",
      "matches": {
        "vital_new_without_let": true
      },
      "source": "neosnippets/vim"
    },
    "bbfaf74a-dd1d-3a0d-b85f-16df3b1ff01d": {
      "content": "@booklet{${1:LABEL},\n    title = {${2}},\n    memo = {author, howpublished, address, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@booklet": true,
        "booklet": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bc02a0f4-d8d3-3281-8f46-70d7ea4e5cfc": {
      "content": "${1:name}.flatMap${0:[T]}(a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flatmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc043fdc-a81e-33a6-92bc-24a60a0e0576": {
      "content": "counter-increment: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc04e482-03cc-3804-bdea-ed7d2be381ff": {
      "content": "${1:obj}.parent('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      },
      "source": "snippets/javascript"
    },
    "bc123475-1610-3efc-9ddd-d00b429d9851": {
      "content": "[cols=\"${1}\", options=\"header\"]\n|===\n|${2:row1-col1}\n${0}\n|===",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "table",
      "matches": {
        "table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bc195ac7-1a5a-3b48-b4c2-218bd705cb0c": {
      "content": "<command type=\"command\" label=\"${1}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc1bf465-14b7-3115-a831-651d6d2cffad": {
      "content": "cursor: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc202031-33bd-3969-a1a8-ce0d1c9a035a": {
      "content": "text-shadow none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc208f1c-3e67-32e2-a48a-6869ece3b07a": {
      "content": "border-collapse: collapse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc22c885-b201-310d-9d9e-3cd6396fb35b": {
      "content": "content attr(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc257f42-38d1-30a6-99e5-e80c0e7b5f41": {
      "content": "{{ ${1:#:TARGET} }}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "{{ }}",
      "matches": {
        "output": true,
        "{{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bc267d98-70e1-3c80-be27-e5e259892704": {
      "content": "> ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "quote block",
      "matches": {
        "blockquote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bc2862bb-9547-3f23-9493-74fa3a123c26": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (condition) { ... }",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc2f450a-4abd-3d35-a1d4-d47ccb60ad9a": {
      "content": "io:format(\"${1:~w~n}\"${2:, []})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ioformat": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bc314525-3622-34b7-ae2c-bec158580f18": {
      "content": "text-decoration: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc36272a-95e0-35ab-8b64-3ec1fe8f182a": {
      "content": "resize: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc3a735e-4998-3964-b682-5a268e55a508": {
      "content": "word-wrap: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc454d1b-72c8-35ed-98c4-b23bbf8bf38d": {
      "content": "${1:obj}.change(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "change": true
      },
      "source": "snippets/javascript"
    },
    "bc557c74-f763-3878-ad2c-439d97ad8c2a": {
      "content": "${1:page}~\\\\pageref{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a page",
      "matches": {
        "page": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc5d3073-b9d4-348a-b439-c3345fe22ed2": {
      "content": "assert_redirected_to ${1:parent}_${2:child}_path(${0:@$1})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artnpp": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc5eb8d7-7397-370a-a422-7e8a35405b09": {
      "content": "{% import ${0:module} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc638a41-dea7-3fad-9889-56f661606934": {
      "content": "z-index: $1;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "z-index: index (z)",
      "matches": {
        "z": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bc64bcca-ae9c-3bb5-99e1-328eafda9aa3": {
      "content": "if ${1} do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. end",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc65960e-4496-317f-9871-d6b242f21342": {
      "content": "grid-column-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc6c9da2-95d1-39b1-92b3-c2f4fdd58a2c": {
      "content": "echo CHtml::listBox('${1:name}', '${2:select}',array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlb": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc6fd102-ea88-37df-adf7-45a0fcfb2fe2": {
      "content": "Page Should Contain Radio Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Radio Button",
      "matches": {
        "pscrb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bc734b0f-fb33-351c-894b-815a36f65875": {
      "content": "z-index ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc7dfa75-ae0e-3321-89cf-fca2d133461d": {
      "content": "_.entriesIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairsIn(new Foo);\n// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\nCreates an array of own and inherited enumerable string keyed-value pairs\nfor `object` which can be consumed by `_.fromPairs`. If `object` is a map\nor set, its entries are returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-entriesin",
      "matches": {
        "lodash entriesin": true
      },
      "source": "javascript/lodash"
    },
    "bc84ff8e-74b7-3748-b852-7a07fa598268": {
      "content": "require 'debugger'; debugger",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug19": true
      },
      "source": "vim-snippets/snippets"
    },
    "bc89edc4-74e0-3563-bbe9-dbb29760efe5": {
      "content": "_.method(${path}, ${args})",
      "doc": "var objects = [\n  { 'a': { 'b': _.constant(2) } },\n  { 'a': { 'b': _.constant(1) } }\n];\n\n_.map(objects, _.method('a.b'));\n// => [2, 1]\n\n_.map(objects, _.method(['a', 'b']));\n// => [2, 1]\n\nCreates a function that invokes the method at `path` of a given object.\nAny additional arguments are provided to the invoked method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-method",
      "matches": {
        "lodash method": true
      },
      "source": "javascript/lodash"
    },
    "bc9fdf9d-d8c4-35c8-8f86-c297fda24afa": {
      "content": "renderArgs.put(\"${1}\", ${2});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rena": true
      },
      "source": "vim-snippets/snippets"
    },
    "bca177c0-07cf-36db-a429-1a490bfb8393": {
      "content": "let open ${1} in\n${2:TARGET}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let open .. in",
      "matches": {
        "lopen": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bca5e5b9-fb14-3f17-b9f7-cc582aa40e00": {
      "content": "import { Directive } from '@angular/core';\n\n@Directive({ selector: '[${1:selector-name}]' })\nexport class ${2:Name}Directive {\n\tconstructor() { }\n}",
      "doc": "Angular directive",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Directive",
      "matches": {
        "a-directive": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "bca84730-218e-3329-ba67-16d14d3a0005": {
      "content": "@interface ${1:NSObject} (${2:Category})\n@end\n@implementation ${1} (${2})\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Category",
      "matches": {
        "cat": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bca988ac-7602-3dd2-a449-a034fa896007": {
      "content": "signal ${1} : std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sv": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcaa61d7-d60d-3dec-933a-a107c203684b": {
      "content": "validates_associated :${1:attribute}${2:, on: :${3:create}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated (va)",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bcaef9ec-95d9-39db-967c-9d11b887bf75": {
      "content": "@system",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "system": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcb46e78-66c4-3138-a4d3-adb4e70da19d": {
      "content": "\\\\index{${1:index}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\index",
      "matches": {
        "index": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcb68e48-4f69-38be-b37f-85a41ef32490": {
      "content": "\\begin{enumerate}\n\t\\item ${1:TARGET}\n\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{enumerate} \\enumerate enum": true,
        "enumerate": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bcba1050-6912-3bbe-a4db-9969f13a06d5": {
      "content": "_.iteratee(${func})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n// => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, _.iteratee(['user', 'fred']));\n// => [{ 'user': 'fred', 'age': 40 }]\n\n// The `_.property` iteratee shorthand.\n_.map(users, _.iteratee('user'));\n// => ['barney', 'fred']\n\n// Create custom iteratee shorthands.\n_.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n  return !_.isRegExp(func) ? iteratee(func) : function(string) {\n    return func.test(string);\n  };\n});\n\n_.filter(['abc', 'def'], /ef/);\n// => ['def']\n\nCreates a function that invokes `func` with the arguments of the created\nfunction. If `func` is a property name, the created function returns the\nproperty value for a given element. If `func` is an array or object, the\ncreated function returns `true` for elements that contain the equivalent\nsource properties, otherwise it returns `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iteratee",
      "matches": {
        "lodash iteratee": true
      },
      "source": "javascript/lodash"
    },
    "bcba3d79-ebce-3bf6-8035-dc341b2ff063": {
      "content": "page-break-after ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcc5822e-b301-3d32-8428-a4acbc9dd327": {
      "content": "if ($1) {\n\t${2:# body...}\n}\nelsif ($3) {\n\t${4:# elsif...}\n}\nelse {\n\t${5:# else...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional if..elsif..else (ifee)",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bccc9646-02ca-32f0-a726-711d979fdb38": {
      "content": "|${1|preventDefault,stopPropagation,passive,capture,once|}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-modifiers",
      "matches": {
        "svelte modifier": true,
        "svmodifier": true
      },
      "source": "javascript/svelte"
    },
    "bcccc205-4eb3-3edc-ad5e-bdb98ebd7901": {
      "content": "<fieldset id=\"${1}\">\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset#": true
      },
      "source": "vim-snippets/snippets"
    },
    "bccde00e-74fc-3bb2-9776-9151314ea277": {
      "content": "${1:#:set shell_stdout to }do shell script ${3:\"${2:#script}\"}\n\twithout altering line endings\n${0}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shell": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bcce242c-71b5-32e3-96b2-06f691feae12": {
      "content": "=== ${1} ===\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "===": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bcd41db7-df8e-373e-bdf7-018f417fb31b": {
      "content": "@import '${0:TARGET}';",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@import '...';",
      "matches": {
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bcd5af33-0f83-349e-8094-e74702be78f8": {
      "content": "justify-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "bce1e244-65f1-35e0-aaf7-3b0a992a210c": {
      "content": "case $${1:variable} {\n\tdefault: { ${0} }\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "bce26c0f-9541-3413-aa23-2be4fac4f674": {
      "content": "justify-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "bced5972-e48a-38b2-aff8-6b21c2cdd19f": {
      "content": "${1:_} => ${2:expression}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Case clause of pattern match",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "bced5b95-be26-3310-9c8d-b4950e6483ab": {
      "content": "library(${0:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcf15d95-a988-3673-9ef0-9924d8d55d2b": {
      "content": "(/ $1 /) ${2:,&} ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcf222ed-02f8-303c-957f-f5feac28e6fa": {
      "content": "| replace_first: '${1:target}', '${2:replace}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace_first": true
      },
      "source": "vim-snippets/snippets"
    },
    "bcf65d6f-52d1-37a9-a3dc-b5276246f4c6": {
      "content": "while (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "while () begin ... end",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bd01d1da-3b40-3b8c-8990-e5a58d8171a4": {
      "content": "Yii::log('${1:msg}', '${0:info}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ylog": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd0d0596-d43c-34ec-8cac-5728395a1e54": {
      "content": "{{- if .Values.artifactory.enabled -}}\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n\tname: {{ template \"${2:chartName}.fullname\" . }}-${1:value_key}-config\n\tlabels:\n\t  app: {{ template \"${2}.name\" . }}\n\t  chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\t  heritage: {{ .Release.Service }}\n\t  release: {{ .Release.Name }}\n  data:\n\t${3:nameOfConfigFile}.conf: |\n\t  # data goes here\n{{- end -}}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "configMap_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd0ff3bf-8a8c-34ee-b1e5-22b7da523f77": {
      "content": "if ${1} then\n\t${2}\nend if;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd127537-b30d-36ae-b512-1427277d2c94": {
      "content": "test.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\t${0:expect(double(input)).toBe(expected);}\n\t}\n);",
      "doc": "creates an test block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-each",
      "matches": {
        "jest test each": true,
        "teste": true
      },
      "source": "javascript/jest"
    },
    "bd1d1247-fc12-3c08-93a3-cae56fc9f483": {
      "content": "for {\n\tselect {\n\t\tcase ${2:${1:result} := }<- ${3:channel}:\n\t\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for select",
      "matches": {
        "forsel": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "bd1d7603-fc83-3060-b882-5ebfccc6c0df": {
      "content": "float: ${1:left/right/none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "float: left:right:none (float)",
      "matches": {
        "float": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bd22ea49-4c69-309a-bb9f-ea7896b96be8": {
      "content": "<%= ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "=": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd2771c8-6c1f-3644-ba25-3cd3008b4390": {
      "content": "redirect_to :back",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :back",
      "matches": {
        "reb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bd2b8e31-6c04-3ca4-853b-e1b5111cfc0d": {
      "content": "function let()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function let() { ... }",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bd2ba7e6-c59e-3483-96c9-128741ce2945": {
      "content": "grid-template: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd2bbafe-7e33-3feb-95ab-0563e8eff5ca": {
      "content": "onBeforeMount(() => {${1}})",
      "doc": "Vue onBeforeMount Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeMount",
      "matches": {
        "v3onbeforemount": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "bd32b94d-ac1e-3ba0-8e79-5705286a2d07": {
      "content": "dbms_output.put_line('${0}');",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd36e81b-0404-3b02-aba3-2aff6de3a976": {
      "content": "<colgroup>\n\t<col>\n\tcol+${0}\n</colgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colgroup+": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd4702ef-f628-36cc-97b9-744db19c3460": {
      "content": "if (${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd506b9c-0189-31a4-aa71-3200c6982dcc": {
      "content": "_.over(${iteratees})",
      "doc": "var func = _.over([Math.max, Math.min]);\n\nfunc(1, 2, 3, 4);\n// => [4, 1]\n\nCreates a function that invokes `iteratees` with the arguments it receives\nand returns their results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-over",
      "matches": {
        "lodash over": true
      },
      "source": "javascript/lodash"
    },
    "bd594442-c08d-3a3b-8e7d-aca351edf37d": {
      "content": "atan2(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atan2": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd72bb2a-3b0a-3c58-8e29-d1db3ea4c013": {
      "content": "{# $1 #}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bd744bc3-606f-3774-bf38-7949da17f78c": {
      "content": "<header>\n    ${1}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bd7e2f9d-4856-335e-ab9e-95dbe39df6f8": {
      "content": "=${1:name}(${2})\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd8478e1-158b-33f9-b71e-1810460b24ad": {
      "content": "else\n{\n\t${VISUAL}$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "else (el)",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bd865d54-c20b-3a9f-9c10-1a7ccd5f0571": {
      "content": "\\\\cdot {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "dot product",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd89be5a-6443-38b8-b46a-ed0582293ca9": {
      "content": "| script_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script_tag": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd93cbed-59b3-3b67-8588-2ccfab2cdc07": {
      "content": "<command type=\"radio\" radiogroup=\"${1}\" label=\"${2}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "bd9caad3-7119-3e3a-b998-bcbe6d3c4495": {
      "content": "override ${1:attribute} => sub {\n\t${2:# my $self = shift;};\n\t${0:# my ($self, $args) = @_;};\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "override": true
      },
      "source": "vim-snippets/snippets"
    },
    "bda56fda-2c86-3ea5-aa63-93dfedbf72b7": {
      "content": "${1:expression} while ${2:condition};\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Loop one-line (xwhile)",
      "matches": {
        "xwhile": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bdae97df-618a-3ad4-98d8-b5775ee4a5b1": {
      "content": "macro ${1:#:name}(${2}):${3:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bdb65a46-f639-323d-b289-6271df24ab3f": {
      "content": "word-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdbc191c-13d6-3007-99b0-4c35267d287e": {
      "content": "while (${1:/* condition */}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdc96d0d-a6e9-3e8a-b7a1-18ca42aeea62": {
      "content": "textFont(${1:font}${2:, }${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textFont": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdcbdf0c-4bb7-39fe-bffc-14093dc5f04b": {
      "content": "[class]=\"${1:expression}\"",
      "doc": "Angular [class] binding",
      "filetype": "html",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "a-class": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "bdcd2313-3094-31c5-b8bc-687c3b709841": {
      "content": "hsla(${1:360}, ${2:100}%, ${3:100}%, ${4:0.5})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color hsla",
      "matches": {
        "hsla": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bdd6465c-7a8b-30f5-8318-0a222a5b3286": {
      "content": "justify-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdd76b02-9597-3907-9b3e-6d6153505251": {
      "content": "import ${0:module}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdde121d-632f-3d2e-8962-2e91b43070ad": {
      "content": "echo CHtml::errorSummary(${1:model},'${2:headerHtml}','${0:footerHtml}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yherrs": true
      },
      "source": "vim-snippets/snippets"
    },
    "bde6f85a-6566-3cfb-a6b1-aed1e4329ccf": {
      "content": "outline-offset: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      },
      "source": "vim-snippets/snippets"
    },
    "bde882a9-f70a-3d6a-880f-65cacd4fdc43": {
      "content": "text-indent: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text-indent": true,
        "ti": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bdeedec3-4a39-32f3-a419-f54c2d1409c5": {
      "content": "const ${1:name} = ref(${2:initialValue})",
      "doc": "Takes an inner value and returns a reactive and mutable ref object.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3ref",
      "matches": {
        "vue v3ref": true
      },
      "source": "javascript/vue"
    },
    "bdf2be18-2e39-3b2c-93f9-f47a9d8bd86d": {
      "content": "if (${1}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "if ... else ...",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdf7fcb0-a676-3be4-bed4-365473c50fb7": {
      "content": "class ${1:#:NAME} {\n  constructor(${2:#:Args}) {\n    ${3:#:TARGET}\n  }\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "class NAME {...}",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bdf92be5-8aab-3524-942b-bbea19feea3c": {
      "content": "background-origin border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "bdfa50be-5a70-35fe-9afd-c8d5c74b3827": {
      "content": "do {\n\t${0}\n} while (${1:cond})",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "be0fbc18-c376-3437-85d9-5eeb7445ef33": {
      "content": "_.isInteger(${value})",
      "doc": "_.isInteger(3);\n// => true\n\n_.isInteger(Number.MIN_VALUE);\n// => false\n\n_.isInteger(Infinity);\n// => false\n\n_.isInteger('3');\n// => false\n\nChecks if `value` is an integer.\n\n**Note:** This method is based on\n[`Number.isInteger`](https://mdn.io/Number/isInteger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isinteger",
      "matches": {
        "lodash isinteger": true
      },
      "source": "javascript/lodash"
    },
    "be12bc7c-1194-3260-9f55-f7f5c6fc4c7d": {
      "content": "page-break-inside ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "be21ed3d-69dd-3905-b4b9-88b5e8901317": {
      "content": "background-clip: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "be232327-3cac-3d67-bafb-c0c2d7ee0cad": {
      "content": "background-repeat repeat-y",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      },
      "source": "vim-snippets/snippets"
    },
    "be250689-e547-39ef-9756-d793c116d370": {
      "content": "static int Main(string[] args)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "static int main",
      "matches": {
        "sim": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "be2562b0-d087-3a6b-9e33-334a5e73190b": {
      "content": "<dt>${1:TARGET}</dt>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "be26488f-52e7-31be-813c-f5945d3170c1": {
      "content": "${1: obj} match {\n\tcase ${2:e} => ${3}\n\tcase _ => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/snippets"
    },
    "be27aa4f-1d5d-35e7-8cf7-c1d3b01ee841": {
      "content": "if (${1}) begin\n\t${2}\nend\nelse begin\n\t${3}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "be32a10e-daf0-34ca-92de-4cce61a5969e": {
      "content": "console.info(${1:object})",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleInfo",
      "matches": {
        "cin": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "be3686f0-2475-3a35-b9f8-855d10f06593": {
      "content": "<base href=\"${1}\" target=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "base": true
      },
      "source": "vim-snippets/snippets"
    },
    "be416760-7b00-30d3-a892-173c09a1cd46": {
      "content": "else {\n   ${1:selected}\n}",
      "doc": "Code snippet for 'else' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      },
      "source": "vscode-R/snippets"
    },
    "be42e750-4496-32af-849c-5eb5f9bfdf1b": {
      "content": "_.defaultTo(${value}, ${defaultValue})",
      "doc": "_.defaultTo(1, 10);\n// => 1\n\n_.defaultTo(undefined, 10);\n// => 10\n\nChecks `value` to determine whether a default value should be returned in\nits place. The `defaultValue` is returned if `value` is `NaN`, `null`,\nor `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaultto",
      "matches": {
        "lodash defaultto": true
      },
      "source": "javascript/lodash"
    },
    "be51b6d8-8e91-3fd5-aefe-e210ee13dbe4": {
      "content": "if (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "be585e58-f573-3326-a829-4b5488359f0b": {
      "content": "echo CHtml::activeTextField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhatf": true
      },
      "source": "vim-snippets/snippets"
    },
    "be63ed4a-1e2b-39a0-b7d6-1c72cb0a5fda": {
      "content": "_.tap(${value}, ${interceptor})",
      "doc": "_([1, 2, 3])\n .tap(function(array) {\n   // Mutate input array.\n   array.pop();\n })\n .reverse()\n .value();\n// => [2, 1]\n\nThis method invokes `interceptor` and returns `value`. The interceptor\nis invoked with one argument; (value). The purpose of this method is to\n\"tap into\" a method chain sequence in order to modify intermediate results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tap",
      "matches": {
        "lodash tap": true
      },
      "source": "javascript/lodash"
    },
    "be67b1a6-5bf5-3385-8c34-0600c8d7c458": {
      "content": "apiVersion: v1\nkind: Service\nmetadata:\n{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.$1.service.annotations | indent 4 }}\n{{- end }}\n  labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n# spec\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "be6b1f86-5b8e-38cb-833c-6770a5f80684": {
      "content": "export const ${1:functionName} = (${2:params}) => {\n\t$0\n};\n",
      "doc": "Export named function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportNamedFunction",
      "matches": {
        "enf": true
      },
      "source": "vscode-javascript/snippets"
    },
    "be716638-c7c6-344a-8e74-9464cd24e3ff": {
      "content": "<ul>\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul": true
      },
      "source": "vim-snippets/snippets"
    },
    "be7b7139-d1ae-3a24-a483-b4259534e72a": {
      "content": "\\\\begin{alertblock}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{alertblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "alertblock environment",
      "matches": {
        "alertblock": true
      },
      "source": "vim-snippets/snippets"
    },
    "be90c475-495c-3266-a4a5-b3a9a9288a23": {
      "content": "<a name=\"${1}\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aname": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bea7767f-e77b-32eb-ba12-756cfb46411c": {
      "content": "unset grid",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "unset grid",
      "matches": {
        "grid!": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "beb0093f-ad82-3ae7-ab01-c893d6c48764": {
      "content": "_.after(${n}, ${func})",
      "doc": "var saves = ['profile', 'settings'];\n\nvar done = _.after(saves.length, function() {\n  console.log('done saving!');\n});\n\n_.forEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => Logs 'done saving!' after the two async saves have completed.\n\nThe opposite of `_.before`; this method creates a function that invokes\n`func` once it's called `n` or more times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-after",
      "matches": {
        "lodash after": true
      },
      "source": "javascript/lodash"
    },
    "beb02f61-7c4b-3863-b0df-632b31b3ecf3": {
      "content": "-ifdef(${1:TEST}).\n${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifd": true
      },
      "source": "vim-snippets/snippets"
    },
    "beb05eff-6928-3e23-99f4-c0eea31b12de": {
      "content": "integer, intent(out) ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer intent(out)",
      "matches": {
        "ino": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "beb662a6-d749-38ad-b2f5-167b924c4866": {
      "content": "[${1:foo} retain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "bebac493-dc50-3171-8dbd-568de64d6baa": {
      "content": "else",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "bec1279e-f35c-3432-8f08-170f01b7af0c": {
      "content": "break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bec8958d-b562-3441-8811-49c0f8c696b0": {
      "content": "<${1:component} :${1:propName}=\"${0}\"></${1:component}>",
      "doc": "component element with props",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Component with Props Binding",
      "matches": {
        "vel-props": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "bec9ecb9-230e-3d64-850d-94fd0a50334e": {
      "content": "\\\\begin{columns}\n\t\\\\begin{column}{0.5\\\\textwidth}\n\t\t${1}\n\t\\\\end{column}\n\t\\\\begin{column}{0.5\\\\textwidth}\n\t\t${0}\n\t\\\\end{column}\n\\\\end{columns}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "two-column environment",
      "matches": {
        "col2": true
      },
      "source": "vim-snippets/snippets"
    },
    "becf71f7-56a3-3d7c-b4ab-37dad927b4db": {
      "content": "refute_instance_of ${1:UnexpectedClass}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfio": true
      },
      "source": "vim-snippets/snippets"
    },
    "bed26178-01c4-3417-ac47-12af7d7e563f": {
      "content": "render xml:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :xml",
      "matches": {
        "rx": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bed47e54-89cb-34b4-a810-8ffda630a146": {
      "content": "it { should validate_acceptance_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isva": true
      },
      "source": "vim-snippets/snippets"
    },
    "bed5abd3-24a3-3c56-88fe-2f10fd19f1d0": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare block",
      "matches": {
        "dec": true
      },
      "source": "vim-snippets/snippets"
    },
    "bedab09b-1b9b-3293-80a9-a80b5145629b": {
      "content": "emissive(${1:value1}, ${2:value2}, ${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emissive": true
      },
      "source": "vim-snippets/snippets"
    },
    "bee81faf-5552-391a-8420-9d601d493a33": {
      "content": "(${1:args}) =>\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      },
      "source": "snippets/coffee"
    },
    "beea722a-feaf-3fa1-a536-68a9bff5cad6": {
      "content": "class ${0:ModelName}Inline(admin.StackedInline):\n\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stackedinline": true
      },
      "source": "vim-snippets/snippets"
    },
    "beee82b3-fa99-3fd7-8fdf-03053d92dcdb": {
      "content": "if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "else { ... }",
      "matches": {
        "if": true
      },
      "source": "gosnippets/snippets"
    },
    "beeee8a8-2ff0-3fbf-9cb7-c6f8cb8f126c": {
      "content": "```${1:language}\n$0\n```",
      "doc": "Insert fenced code block",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert fenced code block",
      "matches": {
        "fenced codeblock": true
      },
      "source": "vscode-R/snippets"
    },
    "beef8917-6e1f-3879-8e3e-4bcead8d2838": {
      "content": "<%doc>\n\t${1:}\n</%doc>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "doc",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "befebfe5-8e9a-31f3-bbf7-9c5d389ad0a6": {
      "content": "<<<${1:HTML}\n${2:TARGET:#:content here}\n$1;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "here": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bf009070-b47f-33bd-a81c-96b81c9b502a": {
      "content": "---\ntitle: ${1:title}\nlayout: post\ndate: ${2:date} ${0:hour:minute:second} -05:00\n---",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf051a6e-f541-3d42-ae41-3b7abcf5b086": {
      "content": "dynamic_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "dynamic_cast<>()",
      "matches": {
        "dynamic_cast": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bf0a5bca-6966-3263-9558-f409a75b7ca2": {
      "content": "<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">${0}\n</xsl:stylesheet>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf1d8140-e107-393d-9b5a-85f1e922474c": {
      "content": "padding ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf221d30-0df6-34a8-a6d4-783664285d5b": {
      "content": "_.slice(${array}, ${start}, ${end})",
      "doc": "undefined\n\nCreates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of\n[`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\nreturned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-slice",
      "matches": {
        "lodash slice": true
      },
      "source": "javascript/lodash"
    },
    "bf2c5801-e491-38b9-8093-b01a64ca2d84": {
      "content": "class ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf319c38-6f95-369a-994f-f5cd7acc8f42": {
      "content": "process.stdout",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stdout": true
      },
      "source": "snippets/javascript"
    },
    "bf335c58-112b-32a0-b9bc-e6c1106ff7e2": {
      "content": "${1:obj}.replaceWith(${2:content})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repw": true
      },
      "source": "snippets/coffee"
    },
    "bf35e6a2-67ad-3d42-b34d-229d7b4f96b1": {
      "content": "align-self: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf3657a6-99ce-3cd2-9e1a-4364fad448ea": {
      "content": "func ${1:handler}(w http.ResponseWriter, r *http.Request) {\n  ${0:fmt.Fprintf(w, \"hello world\")}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http.HandlerFunc",
      "matches": {
        "hf": true
      },
      "source": "gosnippets/snippets"
    },
    "bf390679-5b48-3046-abe2-033d080a99ec": {
      "content": "if {${1:condition}} {\n\t$2\n}\n",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "if... (if)",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bf4673af-f7f5-3e45-aaa1-9e75910c2e98": {
      "content": "def __init__(self, ${1:args}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defi": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf5f9025-9ba2-3755-a533-a14680d67efc": {
      "content": "author = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "author": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bf617f57-8139-3c81-bc0e-ba569008b62e": {
      "content": "require 'test/unit'\nrequire 'tc_${1:test_case_file}'\nrequire 'tc_${2:test_case_file}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ts": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf68def0-d7e4-3426-9b37-a0a534963607": {
      "content": "border-top-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-width": true,
        "btw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bf71f483-c3c9-3b89-9d6f-74e810d51dd3": {
      "content": "getter ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf7832e1-2617-3992-b6f3-51b459c191a9": {
      "content": "import { $2 } from '${1:module}';$0",
      "doc": "Imports only a portion of the module in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importDestructing",
      "matches": {
        "imd": true
      },
      "source": "vscode-javascript/snippets"
    },
    "bf8b751c-2cb9-3c19-b77d-a59ae838124f": {
      "content": "${1:FIELDNAME} = forms.IPAddressField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IPAddressField",
      "matches": {
        "fip": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bf8f2e1d-2e8f-3f8a-ab29-bc3b03d66c8f": {
      "content": "has_many :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hm": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf9094b0-faca-3600-ae78-644777713a04": {
      "content": "(:use [${1:namespace} :only [${0}]])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "use": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf98fc62-1c74-3058-8ba5-72141755caa0": {
      "content": "justify-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "bf9b451d-d612-3816-9e4a-d42d249955a9": {
      "content": "urlizetrunc:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bf9d783f-5a2c-3d89-9019-036f695381a2": {
      "content": "list-style-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfa7974a-9108-3dc5-8f24-4c5deb6a294a": {
      "content": "background-position: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfb15cc6-4438-3c3b-87f7-8bb2af789b8d": {
      "content": "{-# INLINE ${0:name} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inline": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfb9b304-1df0-3637-b7e9-e5b384d351fe": {
      "content": "{@link ${1:#:target} ${0:#:label}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{link": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "bfbd5da7-29f6-3754-985c-6e20d8f93cb3": {
      "content": "def __get__(self, instance, owner):\n\t${1:pass}\ndef __set__(self, instance, value):\n\t${2:pass}\ndef __delete__(self, instance):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing descriptors",
      "matches": {
        "desc": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfc172c1-384f-3635-a657-2196c6c42f2d": {
      "content": "text-align: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfc57b83-bcfb-3003-8da2-0f83077527fc": {
      "content": "validates :${1:attribute}, inclusion: { in: %w(${0: mov avi }) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vi": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfc6edd8-286d-382e-989d-e9d72171589c": {
      "content": "_.once(${func})",
      "doc": "var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once\n\nCreates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first invocation. The `func` is\ninvoked with the `this` binding and arguments of the created function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-once",
      "matches": {
        "lodash once": true
      },
      "source": "javascript/lodash"
    },
    "bfc96aa5-e49f-3d1b-a65c-a356b9b127b7": {
      "content": "[\n\t${VISUAL}$0\n],",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Array",
      "matches": {
        "a": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "bfd6dffb-cbe0-34b1-8733-b1b1394073ef": {
      "content": "place-items ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      },
      "source": "vim-snippets/snippets"
    },
    "bfded86c-7558-3eb9-add7-9af5111a0e9f": {
      "content": "const ${1:function_name} = (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caf": true
      },
      "source": "snippets/javascript"
    },
    "bfeb59fb-7d4b-307b-b9f7-da101de3725f": {
      "content": "__import__('wdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wdb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c003e821-de6e-38af-92cd-b56855ac58d1": {
      "content": "${1:name}\tvarchar2(${2:size})\t${3:default ''}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ccol": true
      },
      "source": "vim-snippets/snippets"
    },
    "c00dd566-d442-3cdc-817c-bf016b77c531": {
      "content": "begin\n\t${0}\nrescue ${1:StandardError} => ${2:e}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c010ec1d-8a3c-3dc7-8e11-cea4a389f4cf": {
      "content": "_.negate(${predicate})",
      "doc": "function isEven(n) {\n  return n % 2 == 0;\n}\n\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]\n\nCreates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-negate",
      "matches": {
        "lodash negate": true
      },
      "source": "javascript/lodash"
    },
    "c01226d7-58bb-383e-93c1-70632e3e06c9": {
      "content": "import (\n  \"${1:fmt}\"\n)\n${0:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true,
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c01cb01d-c0ba-36df-a96c-1062b3cdf375": {
      "content": "defmodule ${1:AppName}Web.${2:ViewName}View do\n\tuse $1Web, :view\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "view": true
      },
      "source": "vim-snippets/snippets"
    },
    "c027cb1d-e7ff-392d-8001-e3d386def109": {
      "content": "after_destroy $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_destroy",
      "matches": {
        "aftd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c030853d-87d1-3419-9b43-9b244a6db884": {
      "content": "@enter=\"$1\"$0",
      "doc": "@enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter",
      "matches": {
        "enterevent": true,
        "vue enter": true
      },
      "source": "javascript/vue"
    },
    "c032a89a-a414-3cf2-ad0b-3bea82b3f5eb": {
      "content": "CHARACTER",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0401d48-59a3-3da2-b776-d8f9b6e403bc": {
      "content": "${1:Class}.prototype.${2:method} = function(${3:arguments}) {\n\t${0}\n};",
      "doc": "prototype method",
      "filetype": "base",
      "grammar": "lsp",
      "label": "prototype-method",
      "matches": {
        "base prototype method": true
      },
      "source": "javascript/base"
    },
    "c04533d9-70f8-35da-b938-b4f45793728a": {
      "content": "expect(${1:target}).toBeGreaterThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be greater than (js)",
      "matches": {
        "eg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c045852d-0b3a-3b9f-ab8e-44ad43da2ef9": {
      "content": "\\\\citeyear{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citeyear",
      "matches": {
        "citey": true
      },
      "source": "vim-snippets/snippets"
    },
    "c046451e-6288-32bb-83bf-944118918adc": {
      "content": "const { ${1:scaleX}, ${2:scaleY} } = useInvertedScale()",
      "doc": "useInvertedScale(scale): ScaleMotionValues Returns a MotionValue each for scaleX and scaleY that update with the inverse of their respective parent scales.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-inverted-scale",
      "matches": {
        "framer-motion use-inverted-scale": true,
        "use-inverted-scale": true
      },
      "source": "javascript/framer-motion"
    },
    "c04881c4-3c28-3ac6-a7c0-004bb3c19e47": {
      "content": "<img src=\"${1}\" alt=\"${2}\">${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c0511d43-7f4d-3d5c-b752-49bfa542a6e8": {
      "content": "- (void) dealloc\n{\n\t${0:deallocations}\n\t[super dealloc];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dealloc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c055bddd-4e6c-33cb-a022-ed23a82cb30b": {
      "content": "object.noUnknown()",
      "doc": "object.noUnknown(onlyKnownKeys: boolean = true, message?: string | function): Schema\n\nValidate that the object value only contains keys specified in shape, pass false as the first\nargument to disable the check. Restricting keys to known, also enables stripUnknown option, when not in strict mode.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-no-unknown",
      "matches": {
        "yup object nounknown": true
      },
      "source": "javascript/yup"
    },
    "c0597e5e-a6a6-31ce-a44c-a9ebcc6141c9": {
      "content": "quotes: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      },
      "source": "vim-snippets/snippets"
    },
    "c05a775e-474f-3d63-ae2a-699bd056cc43": {
      "content": "@if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "c05c7d71-112e-3369-86fc-f6a427c065e3": {
      "content": "<datatemplate>\n\t${0}\n</datatemplate>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datatemplate": true
      },
      "source": "vim-snippets/snippets"
    },
    "c05d4c73-8f9d-36ce-9916-ff8816502dad": {
      "content": "display: table-caption",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c05f8570-1895-3f7a-a4fb-8e2594471b37": {
      "content": "until ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0602213-0834-3bea-bc1d-4ebea5493e05": {
      "content": "for (${1:i} = ${2}; $1 < ${3}; ${4:$1 = $1 + 1})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "for () begin ... end",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c0677313-2f57-3265-9b7a-3564b575b632": {
      "content": "<a href=\"${1}\" target=\"_top\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_top": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c069dac3-c5c6-36aa-903a-81ffc40f3833": {
      "content": "println!(${1:\"\\{\\}\"}, ${0:TARGET});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println!",
      "matches": {
        "pln": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c06d7181-55ac-344a-8102-c809af496deb": {
      "content": "chore(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "chore conventional commit",
      "matches": {
        "chore": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c07166b5-50c5-35cd-b67b-0ba09cfb0c60": {
      "content": "list-style-type: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c07630d0-1be5-3762-b3dc-c45dde2b406a": {
      "content": "${1:deferred}.state()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dstate": true
      },
      "source": "snippets/coffee"
    },
    "c0776c3f-1743-37c6-8e57-821f020796db": {
      "content": "afterEach(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "after each (js)",
      "matches": {
        "aft": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c078f317-b0bf-35ba-97e6-c54c435232b4": {
      "content": "try\n{\n\t${VISUAL}${1:/*code to try*/}\n}\ncatch($2Exception e)\n{\n\t${3:/*handle exception*/}\n}\nfinally\n{\n\t${4:/*cleanup*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "try/catch/finally (tryf)",
      "matches": {
        "tryf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c08a9d49-3f51-3e8c-82bc-2ef990d8fa53": {
      "content": "position static",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "c08b598d-39eb-3c86-a398-076701b47c71": {
      "content": "- name: http\n  port: 80\n  protocol: TCP\n  targetPort: {{ .Values.$1.service.targetPorts.http }}\n  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.http))) }}\n  nodePort: {{ .Values.${1:value_key}.service.nodePorts.http }}\n  {{- end }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portHTTP_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "c09933c4-7d0a-3bdc-8b53-9d911c1405d5": {
      "content": "_.xorWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.xorWith(objects, others, _.isEqual);\n// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\nThis method is like `_.xor` except that it accepts `comparator` which is\ninvoked to compare elements of `arrays`. The order of result values is\ndetermined by the order they occur in the arrays. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xorwith",
      "matches": {
        "lodash xorwith": true
      },
      "source": "javascript/lodash"
    },
    "c0a4aa75-489d-3c5c-bae3-6ca374aff70d": {
      "content": "let ${1} =\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0a87277-bd0c-38f5-8033-4e8c5ecadab3": {
      "content": "import ${1:Img} from \"gatsby-image/withIEPolyfill\"",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-import-withiepolyfill",
      "matches": {
        "gatsby-image import withiepolyfill": true
      },
      "source": "javascript/gatsby-image"
    },
    "c0abea71-d863-3aa8-9873-23a8321bcf7b": {
      "content": "public class Application\n{\n\t${1:public} static int Main(string[] args)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "simc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0ad996c-d448-35c8-b558-e47ca246fe94": {
      "content": "<h3>${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0af80eb-fc1b-3237-b083-7ff7bb66200c": {
      "content": "echo CHtml::activeRadioButton(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yharb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0c3cf6a-aace-3a40-a800-efa1c86f1308": {
      "content": "for ${1:key}, ${2:value} of ${3:Object}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Object Comprehension",
      "matches": {
        "foro": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c0d59ca1-28f5-3e11-95cf-f88d75b84024": {
      "content": "inline_template(\"<%= ${1} %>\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inline_template": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0d69cb5-e01b-32ad-bae4-8c36645d2670": {
      "content": "public int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c0fa7fbe-263d-3caf-86a9-ec6982950269": {
      "content": "type ${1:Type} struct {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "type T struct { ... }",
      "matches": {
        "st": true
      },
      "source": "gosnippets/snippets"
    },
    "c0fd1b85-2b03-3c5f-a27a-805db5819a41": {
      "content": "def_delegators :${1:@del_obj}, :${0:del_methods}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defds": true
      },
      "source": "vim-snippets/snippets"
    },
    "c10e419d-8767-39f3-aea5-686bbf9e645e": {
      "content": "grid-auto-flow: row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "c111650e-5204-3b09-8f89-84124c1a5200": {
      "content": "var ${1:name} = ${2:value};",
      "doc": "var assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "var-assignment",
      "matches": {
        "base var": true
      },
      "source": "javascript/base"
    },
    "c11c158b-e86d-3566-9231-d8bcb7db6a58": {
      "content": "\\begin{center}\n\t${1:TARGET}\n\\end{center}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{center} \\center": true,
        "center": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c12777a0-7e53-34e5-b25f-d6e9c2a7bc77": {
      "content": "\\coordinate[${1}](${2:name}) ${3};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\coordinate": true,
        "coordinate": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c1392e57-5e5a-3ef6-80fd-80f024e37a44": {
      "content": "if (${1:condition}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "c14722ef-e14c-3651-bb9c-6747a3750dd6": {
      "content": "max { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "max": true
      },
      "source": "vim-snippets/snippets"
    },
    "c14eb771-b0f5-3856-8bb5-619d06fb0082": {
      "content": "box-sizing: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c150d35a-0951-3b59-9ab7-9fbaf6a5cddb": {
      "content": "grid-template: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1526b8b-1fd3-327f-97e7-e64826c28f12": {
      "content": "display run-in",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1551886-558f-35ee-b386-09d319a5ebb5": {
      "content": ":hover",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      },
      "source": "vim-snippets/snippets"
    },
    "c15afe9e-24f1-3724-89a9-f1cd3f955f2f": {
      "content": "<div id=\"${1}\">${2:TARGET}</div>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c15c193e-f00e-3c20-9a47-3841fb0d5a59": {
      "content": "public int ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+|": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1627f68-b932-398f-bb7e-71e0b834caab": {
      "content": "=head2 ${1:MethodName}\n${0:Summary...}\n=cut",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psubi": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1690baf-7cfc-3ae3-936c-6d32f8d84cc8": {
      "content": "\\subsubsection{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subsubsection": true,
        "subsubsection \\subsubsection{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c188a157-64bb-3d32-957c-688935a7aed9": {
      "content": "<h2 id=\"${1}\">${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2#": true
      },
      "source": "vim-snippets/snippets"
    },
    "c18d0b5e-cd2d-3182-82fe-8996bbcce649": {
      "content": "cursor: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "c196c009-7976-3b04-bc86-7a2fc354434d": {
      "content": "<address>\n\t${0}\n</address>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "address": true
      },
      "source": "vim-snippets/snippets"
    },
    "c19d6cc4-8024-3922-93a4-6daffb7b6f9b": {
      "content": "marker-offset: ${1:10px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "marker-offset: length (marker)",
      "matches": {
        "marker": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c1acf4b3-04e9-302d-bb46-fa35efacb771": {
      "content": "{% call ${1:name}(${2:args}) %}\n\t$3\n{% endcall %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "call",
      "matches": {
        "call": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c1af7120-e0e9-3c4a-9c28-ceff9fcf9b4d": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdownc": true
      },
      "source": "snippets/coffee"
    },
    "c1b324c4-157f-343e-a934-4469a31d314b": {
      "content": "date:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1b65d0d-726a-3f7a-8ab3-c0ab97426211": {
      "content": "<ng-container $0></ng-container>",
      "doc": "Angular ng-container",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-container",
      "matches": {
        "a-ng-container": true,
        "angular ng-container": true
      },
      "source": "javascript/angular"
    },
    "c1c66ab0-641a-37e4-89ae-724f5be452e1": {
      "content": ".. table:: ${1:#:TITLE}\n\t${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_table",
      "matches": {
        "table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c1cb8acf-7c24-32b7-87ee-053dd9eaf645": {
      "content": "| handleize",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "handleize": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1d059fa-f3af-3fc9-ac55-43c1c6db318c": {
      "content": "${1:newdataframe} <- na.omit(${2:dataframe})",
      "doc": "Remove all rows with missing values from data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "remove missings",
      "matches": {
        "naomit": true
      },
      "source": "vscode-R/snippets"
    },
    "c1d1d30a-300f-39af-9ffd-8e3bd30b24b0": {
      "content": "box-shadow: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1d3f6db-0de7-3b49-ba62-0363b8792e01": {
      "content": "map[${1:string}]${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "map",
      "matches": {
        "mp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1e36760-f17d-351e-8805-0c310a5e36be": {
      "content": "saveStrings(${1:filename}, ${0:strings});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveStrings": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1e4d919-8ba8-3e81-99d2-f35f73695c0f": {
      "content": "link(${1:url}${2:, }${0:target});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1e607e4-7254-3f01-a08e-4f6a3ab0aa97": {
      "content": "font-size: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1e6ba2c-0fc0-3b62-9aa6-4308dc7f1782": {
      "content": "<%= link_to \"${1:name}\", ${0:dest} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lt": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1ed05a9-734e-3e27-a2cd-d7e4dc249818": {
      "content": "for each (${1:var} in ${2:object}){\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "enumerate values",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1eee664-03c7-3bc5-a8c2-cf5399879119": {
      "content": "quotes: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1f34101-568f-3f5e-9fe8-6b98f8d3940a": {
      "content": "match(${1:str}, ${0:regexp});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      },
      "source": "vim-snippets/snippets"
    },
    "c1f524e0-e220-32b1-a8ef-9d85e3761f29": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c1fae7ea-e9c0-3309-aad6-c6e090c65a22": {
      "content": "<%= for ${1:item} <- ${2:$1s} ${3:@conn} do %>\n\t$0\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c20044e3-2faa-31df-92dc-6465a0b4600a": {
      "content": "align-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2021b35-bc5a-31f0-9274-d3532a7626d6": {
      "content": "list-style-type: ${1:none/disc/circle/square};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: marker(list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c209ebee-4bcc-3a3e-912e-06487cdeb0a6": {
      "content": "default:\n    ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true,
        "default": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c20ca784-b8d5-3651-933f-e2bc15047a10": {
      "content": "font-emphasize-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2122e8f-3bbc-3176-9d7b-7574e072ea4c": {
      "content": "${1:obj}.reset(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reset": true
      },
      "source": "snippets/javascript"
    },
    "c2203020-8f73-3728-8f9c-ff166148f666": {
      "content": "white-space: nowrap",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      },
      "source": "vim-snippets/snippets"
    },
    "c222071b-6bb1-39f2-984b-30e06974f367": {
      "content": "for ${1:#:var} in ${2:#:list}\n  ${0:TARGET}\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for in endfor",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c22eef3f-fb6d-3fe8-b292-ce12477b2881": {
      "content": "word-break: loose;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2415d41-dab0-38c3-b887-e4706cc01535": {
      "content": "if (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c245b8fa-facc-31cd-ac01-236d91ff76dd": {
      "content": ":- module(${1:name}, [${0:export}]).",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "module": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c24c2c9a-3a38-3aa9-85cc-c2c7619dc5f3": {
      "content": "{% unless ${1:#:TARGET} %}\n  ${0:TARGET}\n{% endunless %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "unless endunless",
      "matches": {
        "unless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c24c6858-ec7f-32d4-bf23-74fc87dd1ec0": {
      "content": "it { expect { ${1:object} }.${2} ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iexpb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c25be909-77af-321f-9d87-bd89a7141959": {
      "content": "${1:obj}.each (index) ->\n\t${0:this.innerHTML = this + \" is the element, \" + index + \" is the position\"}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "snippets/coffee"
    },
    "c265849e-4c5c-3a51-8d67-daf88b253b95": {
      "content": "{\n\t\"type\": \"link_list\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_link_list": true
      },
      "source": "vim-snippets/snippets"
    },
    "c26c381a-026d-397b-8698-48da7eed02dd": {
      "content": "final switch(${1:/*var*/})\n{\n\tcase ${2:/*value*/}:\n\t\t$3\n\t\tbreak;\n\tcase ${4:/*value*/}:\n\t\t$5\n\t\tbreak;\n\t${7:/*more cases*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "final switch (fsw)",
      "matches": {
        "fsw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c2753682-56e3-32df-95ce-9667e25f1846": {
      "content": "emit('${1:event_name}', ${2:args});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emit": true
      },
      "source": "snippets/javascript"
    },
    "c277e392-88f7-3736-bbc7-409b21628971": {
      "content": "import ${1:std.stdio};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "import (imp)",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c279d1db-bd82-36e0-86a2-0898576342a1": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      },
      "source": "vscode-react/snippets"
    },
    "c2807d48-4598-34df-ab9e-65458d04b764": {
      "content": "font-variant: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c285089b-ea4e-332b-a670-a1a747926097": {
      "content": "const { GraphQLClient } = require('graphql-request');",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-require-client",
      "matches": {
        "graphql-request require client": true
      },
      "source": "javascript/graphql-request"
    },
    "c286bcf2-bfc1-33da-b139-de5bf497bdf7": {
      "content": "${1:moduleName} = angular.module('$1', [${2:moduleDeps}], (${3:configDeps}) ->\n\t${4}\n)",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmc": true
      },
      "source": "snippets/coffee"
    },
    "c288475e-7906-39bb-9f1b-e554a0801b9f": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c2908d0c-ae1f-3eec-8c78-8d52a3f7ce2c": {
      "content": "place-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "c29164a2-08ea-39ab-943e-003c1cd81c98": {
      "content": "cursor: move;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "c29421f5-b916-3f62-a59a-dce330bf467d": {
      "content": "static public final ${1:String} ${2:var} = ${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2962b7f-5ce6-33cf-a8bc-a137e3edf3c7": {
      "content": "to!string(${1:x});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tos": true
      },
      "source": "vim-snippets/snippets"
    },
    "c29d16aa-5a0d-358b-9242-7e9b4e9f196b": {
      "content": "t.integer :lock_version, null: false, default: 0\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.lock_version (tcl)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c2a015d6-37de-3f89-8c19-a535ed6f3603": {
      "content": "rect(${1:x}, ${2:y}, ${3:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rect": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2a4b5e1-c513-3916-9f15-80b762e523e8": {
      "content": "list-style-type: lower-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2a5d465-d1e4-3c1f-b31a-be68d6559e3b": {
      "content": "@include('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@include directive",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c2af93d8-ea05-3222-9a5b-bd7b9d39237b": {
      "content": "@for ${1:$i} from ${2:1} through ${3:3}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2b0f351-6136-3a09-a495-768332bc325a": {
      "content": "$this->beConstructedWith($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->beConstructedWith($arg)",
      "matches": {
        "cw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c2b1d2d0-03b1-38b3-ac85-c6f6c57e497f": {
      "content": "if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2bb2b25-6419-3cd8-b9da-d5b1ae339e87": {
      "content": "${1:U}\n{\n\tsolver          PBiCG;\n\tpreconditioner  DILU;\n\ttolerance       1e-${2:6};\n\trelTol          ${0:0.0};\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pbicg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2be4498-2b71-305b-91de-9137133eb6c0": {
      "content": "sub {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asub": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2bf6ffb-4f3c-3796-aea7-f5c48a4bccc0": {
      "content": "interface name {\n\tfunction method(${1}):${0:returntype};\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2cb6472-de4b-36f0-b6a7-cd63079c0dad": {
      "content": "#!/bin/${1:sh}\n${0}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "#!/bin/sh",
      "matches": {
        "#!": true,
        "shebang": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c2cb9a4f-ed01-3298-ad9d-26c23a7bc6f7": {
      "content": "font-emphasize-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2cd25c5-dd8f-329d-9f04-a24566e12f2c": {
      "content": "#[derive(${1:TARGET})]${2}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "derive": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c2d50aa8-4a29-31d0-8be2-ba63b634dec9": {
      "content": "<%= render partial: '${1:item}', status: ${0:500} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rps": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2db1889-02a7-36d3-8eff-e732ceb2716e": {
      "content": "${1:obj}.removeData('${2:key name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remd": true
      },
      "source": "snippets/coffee"
    },
    "c2ea6340-78c3-3d50-9c1e-5e8a8e71e9f1": {
      "content": "|> List.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lmap": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2ea985d-0171-32ea-93a4-b52488288370": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/snippets"
    },
    "c2ed9244-0cc0-33ed-896f-219b66aaf147": {
      "content": "${1}_test() ->\n\t${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3056891-2c64-394e-a9c2-7f324b44b388": {
      "content": "page-break-after left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "c30b834d-1e69-3f46-8a80-2c4999c3473e": {
      "content": "expect($1).toHaveLength($0);",
      "doc": "expects the object to have length",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavelength",
      "matches": {
        "jest expect tohavelength": true,
        "thl": true
      },
      "source": "javascript/jest"
    },
    "c30fa925-44aa-3ac4-bf40-d7f1935f0375": {
      "content": "for (let ${1:i} of ${2:#:Things}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forof": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c3151b42-24a7-3796-8edd-e2c402ad4d4f": {
      "content": "after(() => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "after(() => { ... })",
      "matches": {
        "aft": true
      },
      "source": "vim-snippets/snippets"
    },
    "c31a0eae-f0de-304e-8a88-04680f26251b": {
      "content": "font-style oblique",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "c31d18db-f64f-3327-995b-d2759f66390f": {
      "content": "white-space nowrap",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      },
      "source": "vim-snippets/snippets"
    },
    "c32163cf-2b92-35c6-b0f8-c025818d0d5e": {
      "content": "\\${4:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:default}",
      "matches": {
        "4:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c32d45bc-6ec1-30d0-9b96-c043876e5e62": {
      "content": "overflow hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "c32e3027-2195-3183-b84e-f2a2136187f1": {
      "content": "$.isWindow(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iswin": true
      },
      "source": "snippets/coffee"
    },
    "c32eb81f-1261-33c9-ba1a-1d4009d15953": {
      "content": "| append: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      },
      "source": "vim-snippets/snippets"
    },
    "c32f4f3a-4797-3608-a1e3-3765ee54c7bf": {
      "content": "expect(${1:target}).not.toBeHidden();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be hidden (js)",
      "matches": {
        "noth": true
      },
      "source": "vim-snippets/snippets"
    },
    "c331efa7-fdf6-35fd-974a-c5551271b9f9": {
      "content": "background-position: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c33b9cf0-c936-3cbb-ac4e-5c3ce5104d89": {
      "content": "'use strict';",
      "doc": "insert 'use strict' statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "insert-use-strict-statement",
      "matches": {
        "base use strict": true
      },
      "source": "javascript/base"
    },
    "c3408eb5-cd3c-3045-9461-469376efbb96": {
      "content": "render layout:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :layout",
      "matches": {
        "rl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c3426234-fbfb-3596-8b25-530b1aa62cf8": {
      "content": "grid-gap ${1} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3441f2c-23a0-391c-a8ec-f7e3b8585d3c": {
      "content": "java.beans.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.b": true
      },
      "source": "vim-snippets/snippets"
    },
    "c34d62d3-c9e9-3594-8c81-694622722337": {
      "content": "console.error(${1:object});",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleError",
      "matches": {
        "cer": true
      },
      "source": "vscode-javascript/snippets"
    },
    "c352176c-fb56-3c0c-b7c2-418899f4ac47": {
      "content": "for ${1:name},${2:val} in pairs(${3:table_name}) do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "pair for loop",
      "matches": {
        "forp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c35345db-e2a2-3839-9b9a-4ef3bbe6bc64": {
      "content": "fmt.Errorf(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Errorf(...)",
      "matches": {
        "fe": true
      },
      "source": "gosnippets/snippets"
    },
    "c355948e-87ec-3a62-a879-e3684b7ad7b5": {
      "content": "${1:private/public }${2:Object} ${3:o}${4: = new }$2(${0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3718111-8783-365f-99f9-f8d4149d1705": {
      "content": "<%= collection_select(:${1:object}, :${2:method}, ${3:collection}, :${4:value_method}, :${5:text_method}, options = {${0:prompt: true}}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      },
      "source": "vim-snippets/snippets"
    },
    "c373dbe7-2022-3b85-9f7c-ca2085e7f76e": {
      "content": "redirect_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to",
      "matches": {
        "re": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c377d962-fe3b-37c5-abfc-ec75f9228aa1": {
      "content": "${1} := ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "v := value",
      "matches": {
        ":": true
      },
      "source": "gosnippets/snippets"
    },
    "c38e1cff-5647-3adb-b371-44e6bd9a47b1": {
      "content": "pinMode(${1}, INPUT);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pinin": true
      },
      "source": "vim-snippets/snippets"
    },
    "c392b2d9-1b84-3e26-b7ce-e889675bb40b": {
      "content": "return false;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "retf": true
      },
      "source": "vim-snippets/snippets"
    },
    "c394f616-806e-3da2-a716-17d8c4dbefc9": {
      "content": "${1:obj}.append('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      },
      "source": "snippets/javascript"
    },
    "c395b6f4-ccd0-3a2c-8990-a6fe9464dd19": {
      "content": "| stylesheet_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet_tag": true
      },
      "source": "vim-snippets/snippets"
    },
    "c39ba1f5-b720-30a1-b71f-b6fa888ab3a5": {
      "content": "(+ ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c39f5d2e-ea75-31a4-8e1b-0afde2cfc7ae": {
      "content": "Session::display();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_display": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3a62fd8-c334-3794-93b9-203eb05f827d": {
      "content": "content no-close-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3a7dcb2-9c02-30df-a50f-c5accaff9a13": {
      "content": "let ${1} = ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3ab5c9b-1c8e-3559-9a93-24fed7553a51": {
      "content": "import { ${1:libName} } from '${1:libName}'",
      "doc": "import a library",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-library",
      "matches": {
        "vimport-lib": true,
        "vue import library": true
      },
      "source": "javascript/vue"
    },
    "c3ae88e5-bf94-34bd-b4d4-b5b031688ae2": {
      "content": "$this->markTestSkipped(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->markTestSkipped()",
      "matches": {
        "marks": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3af0afc-be19-3120-ad26-c12ed2f72513": {
      "content": "action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "action:",
      "matches": {
        "action": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c3b51f2d-0d28-361d-8b0e-d12a7cb830bd": {
      "content": "get_digit:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3c1aea8-af1c-3ed0-b88e-601470782eb2": {
      "content": "protected:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "protected (prot)",
      "matches": {
        "prot": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c3c1fa66-e239-393f-94b7-e2c5afbd0a8a": {
      "content": "Console.WriteLine(${1});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cw": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3c4c83f-f5ad-368e-8109-85632a5a5d49": {
      "content": "triggers {\n\tcron('${1:H */4 * * 1-5}')\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "triggers": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3cb527e-bb9f-359b-8d31-254f094645cd": {
      "content": "<blockquote>\n${1}\n</blockquote>\n${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c3d085a8-207e-35a8-9e4c-45472762205c": {
      "content": "config(function($1) {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "angular config",
      "matches": {
        "aconf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c3d91e44-bd41-317e-b24d-6ab2130b537b": {
      "content": "<thead>\n\t${0}\n</thead>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thead": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3f4db77-07ae-311d-826b-9f69e3d9a347": {
      "content": "page-break-before: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3f61f20-de82-313c-bf9f-3c5f1e364725": {
      "content": "list-style-type: lower-roman",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3fb97ea-61a4-3608-bf23-e9ff6c35a52c": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      },
      "source": "vscode-react/snippets"
    },
    "c3fbad88-ee46-3fce-8c10-02ebb4bd2571": {
      "content": "target_link_libraries(${1:bin} ${0:somelib})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      },
      "source": "vim-snippets/snippets"
    },
    "c3fdf9bd-ac93-3d05-8349-ed8799d19e94": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X index (1D)",
      "matches": {
        "ix": true
      },
      "source": "vim-snippets/snippets"
    },
    "c401ad76-e720-3152-82da-d0b53ac7ef0c": {
      "content": "while ${1:(* condition *)} do\n\t${2:(* A *)}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c402d7ca-36b9-3afe-8b49-e6b197573cbc": {
      "content": "_.shuffle(${collection})",
      "doc": "_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]\n\nCreates an array of shuffled values, using a version of the\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-shuffle",
      "matches": {
        "lodash shuffle": true
      },
      "source": "javascript/lodash"
    },
    "c4077892-4b39-3f0f-9f8c-4ce8e99287f7": {
      "content": "${1:fn}.apply(${2:this}, ${3:arguments})",
      "doc": "function apply",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-apply",
      "matches": {
        "base function apply": true
      },
      "source": "javascript/base"
    },
    "c40a2030-fa19-3f4f-8743-2f404c553979": {
      "content": "\\subsection{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subsection": true,
        "subsection \\subsection{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c40a9539-0ea3-3ca8-bec2-c8c911ae2945": {
      "content": "number.max()",
      "doc": "number.max(limit: number | Ref, message?: string | function): Schema\n\nSet the maximum value allowed. The ${max} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-max",
      "matches": {
        "yup number max": true
      },
      "source": "javascript/yup"
    },
    "c40dd067-07aa-3cdd-a0f7-cc0ab784ae22": {
      "content": "import ${1:defaultMember} from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import defaultMember from \"module-name\";",
      "matches": {
        "import-default": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c4146935-f04c-3b53-ab34-0d57fa3a0cbe": {
      "content": "package\n{\n\timport org.flixel.*\n\tpublic class ${1:ClassName} extends ${2:FlxSprite}\n\t{\n\t\tpublic function $1(${3: X:Number, Y:Number}):void\n\t\t{\n\t\t\tsuper(X,Y);\n\t\t\t${4}\n\t\t}\n\t\toverride public function update():void\n\t\t{\n\t\t\tsuper.update();\n\t\t\t${0}\n\t\t}\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FlxSprite": true
      },
      "source": "vim-snippets/snippets"
    },
    "c414bb2b-a1b1-3104-a5e6-5cfb772378ba": {
      "content": "[style.${1:property}]=\"${2:expression}\"",
      "doc": "Angular [style] binding",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "style",
      "matches": {
        "a-style": true,
        "angular style": true
      },
      "source": "javascript/angular"
    },
    "c4185e7d-9a1e-39cf-b91e-2a266191d397": {
      "content": "border-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      },
      "source": "vim-snippets/snippets"
    },
    "c42c02f8-adc9-3a5f-b6b7-53918da7bccc": {
      "content": "grid-auto-rows: min-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4387d9c-1e63-3737-a88b-9e4ce820fb60": {
      "content": "\\\\footcite[${1}]{${2}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\footcite[]{}",
      "matches": {
        "fcite": true
      },
      "source": "vim-snippets/snippets"
    },
    "c43a29ad-2d73-3498-aa06-ceb7adf2f68d": {
      "content": "background-origin: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c43e4e2b-8829-3586-b635-cb5c461746b7": {
      "content": "belongs_to :${1:association}, polymorphic: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "btp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c44589ce-092e-3f68-a12d-a33797a82f1e": {
      "content": "if (${1:#:condition}) {\n  ${2:TARGET}\n} else {\n  ${3}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "ife",
      "matches": {
        "if-else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c44c7e4a-5601-33f1-9ac9-3005dbea8a69": {
      "content": "border-fit: repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "c44d8a93-b3ce-34b9-b49b-0ce2896065ee": {
      "content": "else\n\t${0:TARGET}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c45b183f-9284-389f-ad12-1dc421d5181c": {
      "content": "${1:public} bool ${2}(${3})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      },
      "source": "vim-snippets/snippets"
    },
    "c45caaec-c7e7-31bf-8b98-aad7384e0242": {
      "content": "-record(${1:record}, {${2:field}=${3:value}}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "c45dc5bc-a211-3318-8042-90ecfe8abbcd": {
      "content": "<area shape=\"rect\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "c46020fe-2d3b-3514-bad7-28ffb2219cd7": {
      "content": "${1:FIELDNAME} = models.CommaSeparatedIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CommaSeparatedIntegerField",
      "matches": {
        "mcoseint": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c464b399-2f04-30a2-b5a8-a651b347df8f": {
      "content": "&#x2318;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmd": true
      },
      "source": "vim-snippets/snippets"
    },
    "c488d09e-f990-3d36-bbbe-665a082ac692": {
      "content": "switch ${1:object}\ncase ${2:value}\n\t${3}\ndefault void",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      },
      "source": "vim-snippets/snippets"
    },
    "c489a036-fb7b-3166-9ca2-15ddab77cbc0": {
      "content": "text-outline ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      },
      "source": "vim-snippets/snippets"
    },
    "c48c8a14-7599-330e-a07f-e2bfda2bc7f8": {
      "content": "${1}.defaultProps = {\n\t${2}: ${3}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "defaultProps",
      "matches": {
        "dp": true
      },
      "source": "snippets/javascript"
    },
    "c4ab27d6-8aef-3e7b-948b-209de9051a25": {
      "content": "place-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4b3f19d-76d4-3c23-991d-98bfa1e586f4": {
      "content": ":after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4c9ce68-ef54-37d8-9419-76da577b08af": {
      "content": "import ${1} as ${2}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... as ...",
      "matches": {
        "impa": true,
        "importAs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c4cad3fd-0991-34d9-9ce1-0047ff5151a1": {
      "content": "case ${1} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "case ... of",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c4cf5041-7d90-380c-ae51-a7ae24e80e45": {
      "content": "${1:div}(:style=\"{ fontSize: ${2:data} + 'px' }\")",
      "doc": "vue inline style binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Style Binding",
      "matches": {
        "vstyle": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "c4d2362e-69a8-32dd-8e4a-55272914e949": {
      "content": "_.forOwnRight(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwnRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\nThis method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forownright",
      "matches": {
        "lodash forownright": true
      },
      "source": "javascript/lodash"
    },
    "c4dc5c33-27bc-33be-b0b6-9df8062ed69a": {
      "content": "do\n{\n\t${0:${VISUAL}}\n} while (${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4f52aae-e146-325c-a0ba-a06ca86fdb75": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4f990d5-5d3c-3598-a499-32ffc14def58": {
      "content": "position: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "c4fa8f6d-e417-352c-9381-008c8629e3f3": {
      "content": "~w(${0})a",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "atom list",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/snippets"
    },
    "c501803f-93c2-3b70-8b2e-a5ab05edf1c7": {
      "content": "switch(${1:/*var*/})\n{\n\tcase ${2:/*value*/}:\n\t\t$3\n\t\tbreak;\n\tcase ${4:/*value*/}:\n\t\t$5\n\t\tbreak;\n\t${7:/*more cases*/}\n\tdefault:\n\t\t${6:assert(false);}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "switch (sw)",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c503fa02-870b-370a-8315-a28d54db5759": {
      "content": "import React, { useEffect } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, {useEffect}",
      "matches": {
        "imre": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c503feb8-c816-30ff-92c2-792e58395a15": {
      "content": "@serialField ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5062311-26e0-3285-a75b-735f1e59049f": {
      "content": "for ${1:needle} in ${2:haystack}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "c506df43-3754-3fc0-ba30-6b947e3bb525": {
      "content": "text-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5084f7c-6d18-31ec-b7b0-380c05ccaa46": {
      "content": ".. important::\n\t${0:this is importatnt}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp:": true
      },
      "source": "vim-snippets/snippets"
    },
    "c510fc96-fbf2-3124-81a2-5a22b969ff4b": {
      "content": ":before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      },
      "source": "vim-snippets/snippets"
    },
    "c51c20f4-e7f0-3491-86f1-99ccba37ecdf": {
      "content": "NSLog(@\"${1}\")",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSLog(...)",
      "matches": {
        "log": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c51fa79d-d39d-3a77-a3a0-57e832a3b597": {
      "content": "font-variant: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5201373-0958-3e3b-b7b2-93fe9ef46d95": {
      "content": "create table ${1:table} (\n\t${0:columns}\n);",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c523fec0-1478-3658-8d6a-939c68681947": {
      "content": "function ${1:name}(${2:args})\n  return ${0:type};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfs": true
      },
      "source": "vim-snippets/snippets"
    },
    "c527955b-6c88-3602-897f-bc941b76f992": {
      "content": "import Component from '@ember/component';\n\nexport default Component.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Component from '@ember/component';",
      "matches": {
        "ecomponent": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c52dd7b6-3669-3395-8f78-a582f6b46587": {
      "content": "<#if ${1:true}>\n\t${0:${VISUAL}}\n</#if>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#if condition>...</#if>",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "c52e8df3-95bd-3d91-8072-3e7f885c34ec": {
      "content": "@impl true\ndef ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c52f394a-a729-3362-bf62-3c9823408f2c": {
      "content": "$this->assertNotNull(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotNull($a)",
      "matches": {
        "asnnu": true
      },
      "source": "vim-snippets/snippets"
    },
    "c53283c2-6646-369d-b6dc-eef02ed0c3b1": {
      "content": "_.min(${array})",
      "doc": "_.min([4, 2, 8, 6]);\n// => 2\n\n_.min([]);\n// => undefined\n\nComputes the minimum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-min",
      "matches": {
        "lodash min": true
      },
      "source": "javascript/lodash"
    },
    "c53a34f2-08e1-3bed-848f-151f902847bd": {
      "content": "font: ${1:1em} ${2:Arial},${0:sans-serif}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5402207-4394-3f9f-b026-9222a4f624d1": {
      "content": "grid-auto-flow: column",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5409b88-7f58-3f5d-a698-ab0bbe47799b": {
      "content": "- (${1:unsigned int})${2:#:thing}\n{\n\treturn ${3};\n}\n- (void)set${2}:(${1:unsigned int})new${2}\n{\n\t${3} = new${2};\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "PrimitiveType",
      "matches": {
        "acc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5441a24-3d60-3970-aa54-7209c9a4fb53": {
      "content": "<sup>${1:TARGET}</sup>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5464fa6-e291-3af2-9ece-fedc171f7231": {
      "content": "justify-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "c54e9c8a-fff9-32af-b53a-38854bac1a11": {
      "content": "${1|transition,in,out|}:${2:name}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition",
      "matches": {
        "svelte transition": true,
        "svt": true
      },
      "source": "javascript/svelte"
    },
    "c556d054-d528-32dc-9e9e-7bf8588d6fed": {
      "content": "(** ${0} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c559197c-debe-3e6a-9d1e-dc99a9709a83": {
      "content": "write(${1:*},${2:*}) ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "write",
      "matches": {
        "wr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5677bb7-273f-368d-bb11-b0310e7564bc": {
      "content": "max(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "array",
      "matches": {
        "max": true
      },
      "source": "vim-snippets/snippets"
    },
    "c569b023-2726-31b3-bd75-a42529593029": {
      "content": "import { motion, AnimateSharedLayout } from \"framer-motion\"",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-import-animate-shared-layout",
      "matches": {
        "animate-presence": true,
        "framer-motion import animate-shared-layout": true
      },
      "source": "javascript/framer-motion"
    },
    "c574f284-ee81-3c3e-b2b9-77b8fa2ada8b": {
      "content": "/**\n* @Route(\"/${1:route_name}\", name=\"$1\")\n* @Template()\n*/\npublic function $1Action($2)\n{\n\t$3\n\treturn ${4:[];}$0\n}",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony 2 Controller action",
      "matches": {
        "sfa": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c5786c27-15e8-3cfd-abfb-fc25116a11a9": {
      "content": "<nuxt-child $1/>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-child",
      "matches": {
        "nuxt child": true
      },
      "source": "javascript/nuxt"
    },
    "c57f98ab-548d-31c9-b708-ed19205008f5": {
      "content": "<button type=\"submit\">${1:TARGET}</button>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "buttonsubmit": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c58531a9-f2d3-3d07-a9c4-c4318aa48573": {
      "content": "grid-column-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c585781d-24bf-3ecd-b0e5-f384847203b4": {
      "content": "<figure id=\"${1}\">\n\t${0}\n</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure#": true
      },
      "source": "vim-snippets/snippets"
    },
    "c586cf6d-e80b-39d5-8c05-e3e4024aa1b9": {
      "content": "extlookup(\"${1:variable}\", \"${2:default}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Extlookup with defaults",
      "matches": {
        "extlookup": true
      },
      "source": "vim-snippets/snippets"
    },
    "c58c48e5-45c9-3569-93fd-6dbb810cc785": {
      "content": "import React from 'react';\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component as a named function without PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessFunction",
      "matches": {
        "rsf": true
      },
      "source": "vscode-react/snippets"
    },
    "c599ef2f-7878-3c2d-a41b-813f4fc76341": {
      "content": "ifFrameLoaded (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "il": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5b3cdd0-92e3-3183-930f-f412be34867d": {
      "content": "${1:obj}.mousedown (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdown": true
      },
      "source": "snippets/coffee"
    },
    "c5ba957b-53b0-3961-870b-1c15e31753e7": {
      "content": "right: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5c1e4b1-0ad1-34f6-a4f7-86de93145afd": {
      "content": "grid-auto-columns: min-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5cb1336-e1b7-3c99-859f-5bcbbc56fd3e": {
      "content": "break;",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5cdfd2c-393c-3617-9842-530cee48f3ba": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{/if}",
      "doc": "if block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-block",
      "matches": {
        "svelte if-block": true,
        "svif": true
      },
      "source": "javascript/svelte"
    },
    "c5da15a3-45ae-31e3-9f79-a7a11e252f90": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as ${4}} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5e0af15-e8f7-3640-a229-59d848890f4e": {
      "content": "border-style dashed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5e3cd86-cb4a-3080-b214-edce2f1c0ca6": {
      "content": "const ${1:function_name} = async (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca=>": true
      },
      "source": "snippets/javascript"
    },
    "c5f0416a-b8ed-3e50-88ca-7ec3a6a66512": {
      "content": "| url_escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_escape": true
      },
      "source": "vim-snippets/snippets"
    },
    "c5f42000-2704-33cd-a070-c334eb5c23bd": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-of",
      "matches": {
        "prop-types objectof": true,
        "ptoo": true
      },
      "source": "javascript/prop-types"
    },
    "c5f4af40-724f-3280-a234-c80f302171d9": {
      "content": "const ${1} = require('${2:module_name}');",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      },
      "source": "snippets/javascript"
    },
    "c5f67ab2-109f-3153-bbc3-d90d7bceb7c9": {
      "content": "namespace ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "namespace NAME {...}",
      "matches": {
        "namespace": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c5f7aa88-9c2b-38d4-81f6-836baa2dd27f": {
      "content": "set_target_properties(${1:target}\n\t${2:properties} ${3:compile_flags}\n\t${0:\"-O3 -Wall -pedantic\"}\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "props": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6081cce-6ed7-349b-9a21-87e36aac37e2": {
      "content": "toggleHighQuality();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tq": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c60c0165-ab86-345c-8d77-6f38a9bbfcc8": {
      "content": "<samp>\n\t${0}\n</samp>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "samp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c60eccd5-bcf7-3d7a-82e3-537974b15efd": {
      "content": "func ${1:name}(${2:#:arguments})${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "func name(...) { ... }",
      "matches": {
        "void": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c610c5a4-a563-3ea6-a087-dda6bbd3086e": {
      "content": "@interface ${1:NSObject)} (${2:Category)})\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "CategoryInterface",
      "matches": {
        "cati": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c612707b-70bf-3200-befd-7787de1ff9b9": {
      "content": "outline: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c61f9faa-c9d3-315e-82c5-5be62ba30c74": {
      "content": "exit when ${1};\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "exit when",
      "matches": {
        "exit_when": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c6221b8f-d425-31e9-a43d-972a27675011": {
      "content": "Element Should Be Focused    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Focused",
      "matches": {
        "esbf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c624c9d3-1f58-31e6-a9ae-9e9285efd2e7": {
      "content": "border-bottom-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6278d40-6680-3f2f-a590-2bb3ef886949": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { PureComponent } & PropTypes",
      "matches": {
        "imrpcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c6321335-3763-30f2-adc3-22c9d1850a36": {
      "content": "if err != nil {\n\tlog.${1:Fatal}(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Basic error handling",
      "matches": {
        "err": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c63de738-3430-3820-9306-84ad2c8c0526": {
      "content": "list-style-type ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/snippets"
    },
    "c63f8f7a-2080-3ba8-a6b1-4367caac9a1d": {
      "content": "{% ssi $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c641e5fe-9ba0-31b5-bbb8-56411dc31213": {
      "content": "console.log ${1:\"${2:msg}\"}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Log",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c645cab2-2942-3e95-88a9-ba6677d40064": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "if (condition) { ... }",
      "matches": {
        "if": true
      },
      "source": "snippets/javascript"
    },
    "c6463f19-68bc-3c81-8e21-0dbc8ae0f83e": {
      "content": "left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      },
      "source": "vim-snippets/snippets"
    },
    "c64b9b60-02a5-3a7f-9cb9-36fade1693c0": {
      "content": "// enable or disable writing into the depth buffer\ngl.glDepthMask(${0:flag});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl depth mask",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6528fe9-f62b-342e-98ca-15ef7b48155f": {
      "content": "font-size-adjust none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c660841b-757b-3edb-9c01-7b34283af00a": {
      "content": "sort(${1:x})",
      "doc": "Sort",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sor",
      "matches": {
        "sort": true
      },
      "source": "vscode-R/snippets"
    },
    "c6620d37-235b-3179-87ed-106ac75d1091": {
      "content": "rgb(${1:255}, ${2:255}, ${3:255})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color rgb",
      "matches": {
        "rgb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c667ae79-09fc-352a-b413-6875abca171e": {
      "content": "background-repeat repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "c66c6d06-6123-3629-a8d4-924e1e55a69f": {
      "content": ".. csv-table:: ${1:Title}\n\t:header-rows: 1\n\t:stub-columns: 0\n\t${0:R1C1}, R1C2\n\tR2C1, R2C2",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csv:": true
      },
      "source": "vim-snippets/snippets"
    },
    "c66e3f62-247a-3c70-bb9a-94e82883bc1b": {
      "content": "border-break: close;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "c66f4995-faf3-3672-893c-a125ee08ba32": {
      "content": "validates_format_of :${1:attribute}, with: /${2:^[${3:\\w\\d}]+\\$}/${4:, on: :${5:create}, message: \"${6:is invalid}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of if",
      "matches": {
        "vfif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c6718e1f-911e-34b8-bcea-2dfcf46d9c66": {
      "content": "digitalWrite(${1}, HIGH);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dwHigh": true
      },
      "source": "vim-snippets/snippets"
    },
    "c671bef4-4ba9-332c-8ff3-7f106d1d332d": {
      "content": "\\fill[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\fill": true,
        "fill": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c671d25b-8825-3948-8880-842c5dd6f145": {
      "content": "\\paragraph{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\paragraph": true,
        "paragraph \\paragraph{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c673666c-bf47-3082-8261-e8f1083d032a": {
      "content": "console.timeStamp(\"${1:label}\");",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.timeStamp",
      "matches": {
        "ctimestamp": true
      },
      "source": "snippets/javascript"
    },
    "c68164a4-9053-3abe-8629-d938693ea4ab": {
      "content": "border: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c68829f6-66b1-3bd4-a91a-b895a061687e": {
      "content": ":only-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c68c30c2-2230-37f3-a653-5047422f4aca": {
      "content": "${1:X} <- ${2:List}${3:, gen}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Generator Expression",
      "matches": {
        "gen": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c68cfb82-fd81-3dc6-ad2a-54c0ad5456a7": {
      "content": "validates_exclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not allowed}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of if (veif)",
      "matches": {
        "veif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c68df67c-4066-387e-a323-1aaf9157eb2e": {
      "content": "before :${1:each} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bef": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6954735-8bdb-3bdc-a76c-3b4aed6d0885": {
      "content": "@for ($1)\n\t${2:${VISUAL}}\n@endfor",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@for directive",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c69afb94-cb75-3658-ba24-aee7fd04cb4c": {
      "content": "series = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "series": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c69e8614-ff17-3d27-b098-e56c9faefeb1": {
      "content": "on (${1}) {\n\t${2}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c6ba6cc9-2387-3e85-8e34-e584fb98a05a": {
      "content": "{% elseif ${1:#:condition} %}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c6bfe734-bb63-356f-bf5b-0f3186f349d8": {
      "content": "package ${1:main}\n${0:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true,
        "pk": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c6c083ec-2af3-3237-881d-486cc7c13f70": {
      "content": ":source-highlighter: pygments$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: pygments",
      "matches": {
        "highlight-pygments": true,
        "hipygments": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c6cc0e40-06e1-3302-92cc-1c4fb934d96a": {
      "content": "@Test\npublic void test${1:Name}() throws Exception {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6d1d5b5-eaac-3ab9-aba8-e1c0a06a08e4": {
      "content": "float: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6db7dbf-0507-37e7-a7a4-73365c120e8f": {
      "content": "laply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "la": true
      },
      "source": "vim-snippets/snippets"
    },
    "c6e73bbc-fda1-3eee-9724-ff43d039cd3b": {
      "content": "render text: \"${1:text to render...}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text) (rt)",
      "matches": {
        "rt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c6ff032b-09ee-3888-b7ae-5ec42cb61cfc": {
      "content": "_.nthArg(${n})",
      "doc": "var func = _.nthArg(1);\nfunc('a', 'b', 'c', 'd');\n// => 'b'\n\nvar func = _.nthArg(-2);\nfunc('a', 'b', 'c', 'd');\n// => 'c'\n\nCreates a function that gets the argument at index `n`. If `n` is negative,\nthe nth argument from the end is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ntharg",
      "matches": {
        "lodash ntharg": true
      },
      "source": "javascript/lodash"
    },
    "c707fd89-0a02-3ffe-9335-eaec237dcee6": {
      "content": "$this->${1:method}()->shouldNotMatch(${2:'/wizard/i'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotMatch('/wizard/i')",
      "matches": {
        "snmatch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c7131664-7859-3c61-92af-5ca241139eea": {
      "content": "border-top: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c720e657-4f6c-3641-9031-adc1c89598cd": {
      "content": "| money_with_currency",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_with_currency": true
      },
      "source": "vim-snippets/snippets"
    },
    "c72f1678-6450-30a9-897f-d09a5186b704": {
      "content": "struct ${1:#:Name} ${2::} ${3:Interface} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c73faed7-11bb-3f4c-90a0-d880d3cf8407": {
      "content": "const initialState = {\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\n\tcase ${1:typeName}:\n\t\treturn { ...state, ...payload }\n\n\tdefault:\n\t\treturn state\n\t}\n}\n",
      "doc": "Redux reducer template",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-reducer",
      "matches": {
        "redux reducer": true,
        "rxreducer": true
      },
      "source": "javascript/redux"
    },
    "c744b3f0-48e5-340a-93fc-ae71917c509f": {
      "content": "word-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7481f4a-c2f1-3c69-bdb5-232691b76d53": {
      "content": "number.min()",
      "doc": "number.min(limit: number | Ref, message?: string | function): Schema\n\nSet the minimum value allowed. The ${min} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-min",
      "matches": {
        "yup number min": true
      },
      "source": "javascript/yup"
    },
    "c7637055-c2b5-3a54-92fd-d7b56df63fae": {
      "content": "[ngStyle]=\"{${1:style}: ${2:expression}}\"",
      "doc": "Angular ngStyle",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngStyle",
      "matches": {
        "a-ngStyle": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "c766329f-0dce-3580-bcbd-0bf301f86047": {
      "content": "#if ${1:DEBUG}\n${VISUAL}$0\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "#if #endif",
      "matches": {
        "#if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c76dca96-4a4f-3e55-8139-e2de80a2d6bf": {
      "content": "${1:#:type} ${2:#:var}${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c76f65af-22be-35fc-9503-68150991ddbd": {
      "content": "async ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "async",
      "matches": {
        "as": true
      },
      "source": "snippets/javascript"
    },
    "c77e981f-a17c-3b81-adf2-3bdf3a66b4c6": {
      "content": "real, dimension(${1}), intent(out) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension intent(out)",
      "matches": {
        "redo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c7834008-daff-3eef-9022-625fdb4d462c": {
      "content": "upto(${1:1.0/0.0}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "upt": true
      },
      "source": "vim-snippets/snippets"
    },
    "c78e5a5d-9a98-3756-8858-c562504bb9d9": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API with Typescript",
      "matches": {
        "vbase-3-ts": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "c794b539-0d75-38f1-9cd7-91548b497a29": {
      "content": "(fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lam": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7a03261-d424-3ec9-9489-de48236610fa": {
      "content": "${1:callbacks}.has(${2:callback})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Chas": true
      },
      "source": "snippets/coffee"
    },
    "c7b1b0ec-57a5-3618-bb3a-3b259e6e5bbf": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psss": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7b96731-be36-3a67-a5d1-89dbb2e62cb6": {
      "content": "type = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c7bb0797-8fe8-3dbc-a097-495915813699": {
      "content": "Page Should Contain Textfield    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Textfield",
      "matches": {
        "psct": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c7c4e0f2-276a-3192-86a8-489a26d1d600": {
      "content": "border-collapse: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7cac4d0-e84a-3c02-82f4-e5b1c7c2ba36": {
      "content": "list-style-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7cd6645-d403-3d52-acd5-72e780e8234e": {
      "content": "set key",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set key",
      "matches": {
        "key": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c7d2c68a-150e-32df-bbba-c1a8965094ce": {
      "content": "object (self)\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object",
      "matches": {
        "Obj": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c7d2cf58-7d57-3842-991a-ee084c02fcbb": {
      "content": "map {  ${0: body }    }  ${1: @array } ;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7d60c11-3379-324f-8ef6-99ee540ebe69": {
      "content": "logger.error { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loge": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7dc0d6c-8e04-3c37-a85e-986eed481b74": {
      "content": "place-self: ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7e38c59-9a34-388e-9ace-e47f0940c51d": {
      "content": "clear: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c7e75c0d-a9fa-3dcc-ba2e-a646595e2079": {
      "content": "(defrecord ${1:type} [${2:constructor-args}]\n  ${3:protocol} (${3:method} [${5}] ${6}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deftype": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c7ee5fd3-43e0-39c5-bb6a-6f6459d07779": {
      "content": "$this->input->server(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-server": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8011eb0-ae13-3eb2-886c-01fd67b184f2": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-of-required",
      "matches": {
        "prop-types arrayof required": true,
        "ptaor": true
      },
      "source": "javascript/prop-types"
    },
    "c81342fa-d8cb-3914-a6ec-94f41dfc78b8": {
      "content": "for (${1:identifier} in ${2:collection}) {\n   ${3:selected}\n}",
      "doc": "Code snippet for 'for' loop",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      },
      "source": "vscode-R/snippets"
    },
    "c817c2db-8f74-3afc-8a61-39132ff4d1c1": {
      "content": "assertEquals(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ae": true
      },
      "source": "vim-snippets/snippets"
    },
    "c81f7997-e302-3bfb-81f9-4b3c0ee5e30f": {
      "content": "border-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      },
      "source": "vim-snippets/snippets"
    },
    "c822a07c-7d36-3b95-afe3-1ccf42bbb1ec": {
      "content": "overflow-style: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8246587-12b9-36e6-a6e4-ae18ee473ec5": {
      "content": "console.timeEnd(`${1:object}`)",
      "doc": "Console time end wrapper",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTimeEnd",
      "matches": {
        "cte": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c8250768-a53b-38dc-94f6-bacc5eae77ca": {
      "content": "MsgBox(${0:MsgType}, ${1:\"Title\"}, ${2:\"Message Text\"})",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c82547ff-90f3-302a-8f92-ba805fec6d8d": {
      "content": "each_index {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_index": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c82ab4ca-47ec-39be-83e2-84a0a1d86d93": {
      "content": "<keep-alive>\n\t<component :is=\"\">\n\t\t<p>default</p>\n\t</component>\n</keep-alive>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vkeep": true
      },
      "source": "vim-snippets/snippets"
    },
    "c82c118b-547c-3843-aee7-189c55efa179": {
      "content": "@include ${1:NAME}(${2:#:ARGS});",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@include ...",
      "matches": {
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c82c5597-412e-31eb-908e-7e78b73e164f": {
      "content": "if [ \\$(id -u) -ne 0 ]; then exec sudo \\$0; fi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "root": true
      },
      "source": "vim-snippets/snippets"
    },
    "c82d2e0e-e5e3-37be-97e0-96c0c916890a": {
      "content": "visibility: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "c837f65e-4f7e-3250-b2e2-2048241ea92d": {
      "content": "<sub>${1:TARGET}</sub>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c8550aa3-e62d-3f78-95d3-673897be86bb": {
      "content": "bulk collect into ${0}",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c858916c-d2af-3623-8495-2e8de775cab3": {
      "content": "val ${1:name}${2:: T} = ${0:value}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8607e25-36ae-327d-b468-3feaf11d1361": {
      "content": "<a href=\"${1}\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c860b236-7e92-3ebe-b638-1d8950a36a14": {
      "content": "[@@deriving ${0:TARGET}]",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "[@@deriving ...]",
      "matches": {
        "@@": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c8637c57-5331-3161-9109-1b254b22f141": {
      "content": "when ${1} =>\n\t${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8653429-f677-3637-9880-148497727874": {
      "content": "setup do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8766cd6-1ec7-30df-a4af-9061cfd80c5b": {
      "content": "(condp ${1:pred} ${2:expr}\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "condp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c878e9a2-9e36-3287-bc16-19e3f23aa599": {
      "content": "vertical-align: text-top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8806e6e-dda9-3e8c-97b3-7f2288c75cf0": {
      "content": "${1:key}->${2:val}${0:, keyval}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyval": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8899b68-c0c8-354a-9640-361c8fa21b92": {
      "content": "t.time :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcti": true
      },
      "source": "vim-snippets/snippets"
    },
    "c88b84b3-1818-3c57-afea-6a1437fb3406": {
      "content": "outline-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "c89077a6-fbe9-3b9e-a624-d823c6d367c4": {
      "content": "#!/usr/bin/env node",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "#!/usr/bin/env node",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c896ef8d-888c-33ce-92e1-79e18d5ba822": {
      "content": "find(:first${1:, conditions: ['${2:${3:field} = ?}', ${5:true}]})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(:first)",
      "matches": {
        "finf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c89e1ee0-ee81-3921-b70d-a067116f6d98": {
      "content": "align-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8a31a94-2c6f-3bdc-b193-01d6618a6d4f": {
      "content": "after_save $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_save",
      "matches": {
        "afts": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c8be3b3d-2827-39f0-9527-a527ac265941": {
      "content": "instance ${1:Monoid} ${2:Type} where\n\t${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inst": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8bf8e49-3778-34fb-a396-91c20f369b4d": {
      "content": "require([\"${1:#dependencies1}\"], function (${2:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqjs": true
      },
      "source": "snippets/javascript"
    },
    "c8c3a290-a555-3b96-b9b7-5f1d9c040cba": {
      "content": "if (${1:true}) ${0};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8c46984-d8df-33f4-a015-af7d787b0cb4": {
      "content": "@yield('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@yield directive",
      "matches": {
        "yield": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c8c7c6e7-563a-3610-9255-bcac48d4a507": {
      "content": "echo CHtml::fileField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhff": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8d1e9b2-e684-3dd5-b38a-a3a6c02049fc": {
      "content": "UPDATE ${1:table}\nSET ${2:column} = ${3:value}\nWHERE ${4:condition};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "UPDATE ... SET ... WHERE ...",
      "matches": {
        "UPDATE_DATA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c8d9c818-8c35-3002-8739-ee63f687a7bc": {
      "content": "onMounted(() => {${1}})",
      "doc": "Vue Mounted Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onMounted",
      "matches": {
        "v3onmounted": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "c8e0f57b-7a22-3b89-82ac-eeeff3faca3b": {
      "content": "t.timestamp :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcts": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8ec691c-69f4-39b4-95a0-69e64984152a": {
      "content": "include(ExternalProject)\nExternalProject_Add(${1:googletest}\n  GIT_REPOSITORY    ${2:https://github.com/google/googletest.git}\n  GIT_TAG           ${3:master}\n  SOURCE_DIR        \"${4:${CMAKE_BINARY_DIR}/googletest-src}\"\n  BINARY_DIR        \"${0:${CMAKE_BINARY_DIR}/googletest-build}\"\n  CONFIGURE_COMMAND \"\"\n  BUILD_COMMAND     \"\"\n  INSTALL_COMMAND   \"\"\n  TEST_COMMAND      \"\"\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ext_git": true
      },
      "source": "vim-snippets/snippets"
    },
    "c8f86a97-30fe-33db-913a-557e6000d202": {
      "content": "_.findKey(${object}, ${predicate})",
      "doc": "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findKey(users, function(o) { return o.age < 40; });\n// => 'barney' (iteration order is not guaranteed)\n\n// The `_.matches` iteratee shorthand.\n_.findKey(users, { 'age': 1, 'active': true });\n// => 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findKey(users, 'active');\n// => 'barney'\n\nThis method is like `_.find` except that it returns the key of the first\nelement `predicate` returns truthy for instead of the element itself.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findkey",
      "matches": {
        "lodash findkey": true
      },
      "source": "javascript/lodash"
    },
    "c9065da9-9fa5-3e1d-9140-4b0f0076a2b6": {
      "content": "[${1:link}](mailto:${2:email})${3}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[@": true
      },
      "source": "vim-snippets/snippets"
    },
    "c90f8015-b363-3902-9e8c-8d0371755a08": {
      "content": "add_test(${1:ATestName} ${0:testCommand --options})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "c90f855c-6f0c-3d74-b440-eae9b66fcef7": {
      "content": "for ${1:name} in [${2:start}..${3:finish}] by ${4:step}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrb": true
      },
      "source": "snippets/coffee"
    },
    "c91041db-e9ec-3262-8821-a3cb69d355e1": {
      "content": "background-size: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "c9174791-e2e0-330b-8992-04463a2a140f": {
      "content": "_.partition(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.partition(users, function(o) { return o.active; });\n// => objects for [['fred'], ['barney', 'pebbles']]\n\n// The `_.matches` iteratee shorthand.\n_.partition(users, { 'age': 1, 'active': false });\n// => objects for [['pebbles'], ['barney', 'fred']]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.partition(users, ['active', false]);\n// => objects for [['barney', 'pebbles'], ['fred']]\n\n// The `_.property` iteratee shorthand.\n_.partition(users, 'active');\n// => objects for [['fred'], ['barney', 'pebbles']]\n\nCreates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, the second of which\ncontains elements `predicate` returns falsey for. The predicate is\ninvoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partition",
      "matches": {
        "lodash partition": true
      },
      "source": "javascript/lodash"
    },
    "c9211589-078d-397c-b7da-97014bec406f": {
      "content": "{% include \"${1}\" with ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig include with parameters",
      "matches": {
        "includewith": true
      },
      "source": "vim-snippets/snippets"
    },
    "c922441e-ee40-384d-889f-ab59dc80433f": {
      "content": "function ${1}(${2}) return ${3} is\n\t${4}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c9275b82-2d64-30a5-97c4-6e78440c292f": {
      "content": "quotes ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      },
      "source": "vim-snippets/snippets"
    },
    "c929c336-e2d5-3f8a-89aa-a068f72f43a4": {
      "content": "PImage(${1:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimage": true
      },
      "source": "vim-snippets/snippets"
    },
    "c92ea399-7259-3ef0-ab33-6b4921c78555": {
      "content": "if __FILE__ == $PROGRAM_NAME\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "app": true
      },
      "source": "vim-snippets/snippets"
    },
    "c93146f7-2830-3ce7-ae84-12e9fe212f79": {
      "content": "${1:name}=\"${2:something}\"",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "var-assign",
      "matches": {
        "assign": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c938bcf0-9c14-33c0-b4f0-b3b16d9ee596": {
      "content": "\\${3:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:#optional}",
      "matches": {
        "3#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c93c8940-2c85-3d1a-9239-1841db81843f": {
      "content": "(if ${1}\n\t(let (${2})\n\t\t${3})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c943493f-e251-3260-a204-99936da46970": {
      "content": "public string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms+": true
      },
      "source": "vim-snippets/snippets"
    },
    "c945eb75-8d67-3201-904a-47d8f8bbd84b": {
      "content": "background-color: #${0:fff}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      },
      "source": "vim-snippets/snippets"
    },
    "c947fda2-bea3-3503-a87a-e39d9257df7e": {
      "content": "grid-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      },
      "source": "vim-snippets/snippets"
    },
    "c94d0d83-4200-3f1a-a690-4071213b2bbd": {
      "content": "console.debug(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.debug",
      "matches": {
        "cd": true
      },
      "source": "snippets/javascript"
    },
    "c95227ac-86fc-36cf-a3d0-882577f44c7c": {
      "content": "border-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c952ad87-24ae-30ad-b1b1-e4a4c94fb1fe": {
      "content": "(for/and ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/and",
      "matches": {
        "fora": true
      },
      "source": "vim-snippets/snippets"
    },
    "c954fd25-e24e-3368-9de9-816effaa7006": {
      "content": "yup.reach()",
      "doc": "yup.reach(schema: Schema, path: string, value?: object, context?: object): Schema\n\nFor nested schemas yup.reach will retrieve a nested schema based on the provided path.For nested schemas that need to resolve dynamically, you can provide a value and optionally\na context object.let schema = object().shape({\n  nested: object().shape({\n    arr: array().of(object().shape({ num: number().max(4) }))\n  })\n});\n\nreach(schema, \"nested.arr.num\");\nreach(schema, \"nested.arr[].num\");\nreach(schema, \"nested.arr[1].num\");\nreach(schema, 'nested[\"arr\"][1].num');\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-reach",
      "matches": {
        "yup reach": true
      },
      "source": "javascript/yup"
    },
    "c955fc76-afd0-3475-ab3f-2bf50e3bf779": {
      "content": "expect($1).toBeGreaterThan($0);",
      "doc": "expects the argument is greater than or equal",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobegreaterthan",
      "matches": {
        "jest expect tobegreaterthan": true,
        "tbgt": true
      },
      "source": "javascript/jest"
    },
    "c956286e-9a01-30f1-a0d3-832ae39558e7": {
      "content": "animate:${1:name}={${2:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-animate",
      "matches": {
        "sva": true,
        "svelte animate": true
      },
      "source": "javascript/svelte"
    },
    "c95c685f-ba1b-3353-82e3-2adc677c9a51": {
      "content": "@ManyToMany\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mm": true
      },
      "source": "vim-snippets/snippets"
    },
    "c96118f6-8beb-36bc-96f2-1a74c26c5ab2": {
      "content": "use Doctrine\\ORM\\Mapping as ORM;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Doctrine\\..\\Mapping as ORM",
      "matches": {
        "useorm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c96fc072-2c18-359f-9458-c2ad2139f59c": {
      "content": "import React, { PureComponent } from 'react'\n\ninterface Props {\n\t\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React pure component class with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactClassExportPureComponent",
      "matches": {
        "tsrpce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c975f56a-71b1-34e2-b91f-82e224588562": {
      "content": "import ${1:New} from '@/components/${1:New}.vue';",
      "doc": "Import one component into another",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-file",
      "matches": {
        "vimport": true,
        "vue import file": true
      },
      "source": "javascript/vue"
    },
    "c977851b-a72d-349f-8159-3680bfa4c003": {
      "content": "describe.skip('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-skip",
      "matches": {
        "descs": true,
        "jest describe skip": true
      },
      "source": "javascript/jest"
    },
    "c97cd4f9-279a-30fd-a64f-df10ad87765c": {
      "content": "float: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "c98a6700-ed01-39d7-b794-a9bbd7551698": {
      "content": "method ${1:method_name}(${2:$attr}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mth": true
      },
      "source": "vim-snippets/snippets"
    },
    "c991d272-7f1f-39b5-beba-545fd006a3ab": {
      "content": "${1:FIELDNAME} = forms.DecimalField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DecimalField",
      "matches": {
        "fdecimal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c996baa8-4ca4-3af1-b5ae-a3b60599ec63": {
      "content": "use DDP;\np ${1:variable}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ddp": true
      },
      "source": "vim-snippets/snippets"
    },
    "c997b92d-99ab-35f7-bfab-0e4d88b0b0be": {
      "content": "background-repeat repeat-x",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      },
      "source": "vim-snippets/snippets"
    },
    "c998bcc0-752d-3dff-b798-b9a6d92db132": {
      "content": "<ng-template [ngTemplateOutlet]=\"${1:outlet}\" [ngOutletContext]=\"${2:context}\"></ng-template>",
      "doc": "Angular ng-template",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-template",
      "matches": {
        "a-ng-template": true,
        "angular ng-template": true
      },
      "source": "javascript/angular"
    },
    "c99b2fe9-72ba-389f-b0f9-48011ad5153e": {
      "content": "resize: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "c9a08ad9-66b3-3a79-b86f-a7a449132166": {
      "content": "${1:obj}.fadeOut('slow/400/fast', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeoutc": true
      },
      "source": "snippets/javascript"
    },
    "c9a0f872-7d11-3c12-b93b-625ade9c2c71": {
      "content": "- (NSString${$1: *)})${1:#:thing}\n{\n\treturn ${2};\n}\n- (void)set${1}:(NSString${2: *})${3}\n{\n\t${3} = [${3} copy];\n\t[${2} release];\n\t${2} = ${3};\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c9aa3bb8-0d6c-32c0-a868-3be9c4d34512": {
      "content": "trim(${0:str});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trim": true
      },
      "source": "vim-snippets/snippets"
    },
    "c9b2703e-4cd0-341f-acec-02fdc8379175": {
      "content": "_.union(${arrays})",
      "doc": "_.union([2], [1, 2]);\n// => [2, 1]\n\nCreates an array of unique values, in order, from all given arrays using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-union",
      "matches": {
        "lodash union": true
      },
      "source": "javascript/lodash"
    },
    "c9b76def-2a9c-3f4d-8d31-50c63d0ac750": {
      "content": "render :update do |${2:page}|\n\t$2.$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (update)",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "c9c67f70-b859-313d-9f6f-89060ffff5a0": {
      "content": "set ${1:propertyName}(${2:value}) {\n\t${0}\n}\n",
      "doc": "Creates a setter property inside a class in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertySet",
      "matches": {
        "pse": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "c9d5a7ce-b3ef-3a0b-bf71-d9dd007224aa": {
      "content": "has('patch-${1}')",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-version-check-new",
      "matches": {
        "version_new": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c9f19cd4-55e4-3512-87d0-67bac329b2af": {
      "content": "classify { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "c9f5f4e0-58bf-3163-9192-b84265473c4d": {
      "content": "grid-column-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "c9fced07-e11a-39ed-a16e-993a8ba68f1a": {
      "content": "\\begin{rmfamily}\n\t${1:TARGET}\n\\end{rmfamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{rmfamily} \\rmfamily": true,
        "rmfamily": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "c9fda1e2-9f8f-30a7-858a-4651d75b7a5d": {
      "content": "${1:public} int ${2}(${3})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca0eb5cf-2d34-3b12-9b4f-3fa4e1dbb707": {
      "content": "map { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca105ca4-9d49-3602-8585-1f10ce0ef038": {
      "content": "left auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca1986bd-446e-3b20-8c2f-1670f5fc0cb0": {
      "content": "Digest::SHA1.hexdigest(${0:string})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sha1": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca24e66c-e428-3254-b51f-b850dd6969b8": {
      "content": "echo CHtml::asset('${0:path}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhass": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca255f43-cbd8-3f7d-a833-41c6567db69b": {
      "content": "#!/opt/local/bin/perl\nuse strict;\nuse warnings;\n${1}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "perl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca265e9a-d93a-3c76-b516-4a9a91815209": {
      "content": "overflow-style panner",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca286090-e9dc-3157-8c2d-086243c17bcd": {
      "content": "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cx2}, ${4:cy2}, ${5:x}, ${0:y});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierVertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca3a1647-454a-3a7f-9992-5cb5a85e1aad": {
      "content": "Tuple${1:2}[${2:T},${0:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tpl": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca414c3b-9532-36d1-a26c-54de7f228f57": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}\n\t${3}\ndefault:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "sl": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca50a604-f33b-32ca-9990-1817c1f952fc": {
      "content": "System.out.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sout": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca51a4c4-a62e-3fa7-a08d-d32f529adccd": {
      "content": "\\\\section*{${1:section name}}%\n\\\\label{sec:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\section*",
      "matches": {
        "sec*": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca52af26-5ca6-3cef-9c25-82cbd6f91be0": {
      "content": "int ${1:index} = threadIdx.${2:x} + blockIdx.$2 * blockDim.$2;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current index (1D)",
      "matches": {
        "ii": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca5b6bf7-4fc5-32b7-8632-d89798dd0fb2": {
      "content": "join:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca62ef28-6e4c-3849-9ffc-067d9d120f71": {
      "content": "<%= ${1:f}.text_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fftf": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca7626ba-e6e1-348b-823e-7536ae5dc8ab": {
      "content": "return true;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rett": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca76881d-cb57-3b31-97b0-6f8426c658fe": {
      "content": "NSException *${1:badness};\n$1 = [NSException exceptionWithName:@\"${2:$1Name}\"\n                             reason:@\"${0}\"\n                           userInfo:nil];\n[$1 raise];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "except": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca7d604e-ed90-3e3b-9fc7-16fcb5a327d6": {
      "content": "receive do\n${1} -> ${2}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "receive .. do .. end",
      "matches": {
        "rec": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca7f4a32-f462-3689-b26c-604d6d663778": {
      "content": "public bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb+": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca7fe1c6-1da6-3c06-b709-bf85bfe97160": {
      "content": "align-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca81996a-594d-3556-8d74-ac1e04ddcc6f": {
      "content": "while ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca8533d3-a885-304d-946c-101306135b4b": {
      "content": "until [[ ${1:condition} ]]; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca876d52-38a8-3461-b6f0-febbba9cdefd": {
      "content": "{% flush %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% flush %}",
      "matches": {
        "flush": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca96083f-dbd6-30da-987c-dd56441330ff": {
      "content": "border-bottom-left-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "ca9d251c-45bc-3d7b-989a-fe90d6bf658d": {
      "content": "Ada.Text_IO.New_Line(${1:1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.New_Line",
      "matches": {
        "newline": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ca9d77d6-ba13-35aa-9db5-270dbd18563c": {
      "content": "it { should respond_with ${0:status} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrw": true
      },
      "source": "vim-snippets/snippets"
    },
    "caa10528-3afa-3d42-ab7d-f0e63e891e3b": {
      "content": "$${1:foo} = ${2:true} ? ${3:a} : ${0};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=?:": true
      },
      "source": "vim-snippets/snippets"
    },
    "caa14d78-8ab8-3fbe-8285-9bf04f6761f9": {
      "content": "${1:obj}.map (${2:index}, ${3:element}) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "snippets/coffee"
    },
    "caa874b5-b4cc-3ca1-909a-650245e8af54": {
      "content": "if (${1:#:condition}) {\n    ${2:#:commands}\n} else {\n    ${3:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "if (...) {...} else {...}",
      "matches": {
        "ifelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cab59751-3a2b-3b2e-94e3-16998123a421": {
      "content": "font-style italic",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "cabbfcf7-a3d6-32c5-a137-bfddd2041c38": {
      "content": "console.dir(${1:object});",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleDir",
      "matches": {
        "cdi": true
      },
      "source": "vscode-javascript/snippets"
    },
    "cac15d15-0be4-383d-849c-2cf38765f4fa": {
      "content": "justify-content: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "cac5e9af-602a-306d-8c55-cd33562312b0": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      },
      "source": "vim-snippets/snippets"
    },
    "cac9f9c0-1686-3cf8-a0e9-d07d50ee477d": {
      "content": "caption-side: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      },
      "source": "vim-snippets/snippets"
    },
    "cad0d321-48b2-31a7-a96a-e33809608994": {
      "content": "@while (${1})\n    ${2}\n@endwhile",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@while ... @endwhile",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "caf311ff-7ba9-3acf-a28d-cea6c7563681": {
      "content": "return ${0};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      },
      "source": "vim-snippets/snippets"
    },
    "caf72a7e-1267-3127-84b7-bf287400918e": {
      "content": "for (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "caf8550d-0974-3d03-bb0d-daa6752bcaff": {
      "content": "border-style: solid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "cafa3bbe-9fa6-3b7a-a44f-724309e82080": {
      "content": "<label for=\"${0:$1}\">${1}</label>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label": true
      },
      "source": "vim-snippets/snippets"
    },
    "caffcb0b-984a-3fd1-a05e-373fc486fecf": {
      "content": "${1:fn} := func() {\n\t${2:${VISUAL}}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fn := func() { ... }",
      "matches": {
        "anon": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "cb01f31e-dce7-3926-a6c4-cf06e41096ad": {
      "content": "[#${2:Id}]\n== ${1:Title}\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "== heading on level 2 with anchor",
      "matches": {
        "heading-anchor": true,
        "section-anchor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cb0fd7f7-9fb0-3ee3-8541-3a8df722fae9": {
      "content": "position: static;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb11bb00-9f0b-34fd-9b59-8a1a37297163": {
      "content": "<ng-content select=\"${0:selector}\"></ng-content>",
      "doc": "Angular ng-content",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-content",
      "matches": {
        "a-ng-content": true,
        "angular ng-content": true
      },
      "source": "javascript/angular"
    },
    "cb12a0e3-9e6b-3c98-a689-e74dff2ec9e6": {
      "content": "try\n{\n\t${VISUAL}$0\n}\ncatch (${1:Exception} ${2:e})\n{\n\tthrow;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try catch block",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb16f568-c6c4-395f-be40-6f458f9877db": {
      "content": "border-bottom-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb1790a2-834b-3a7d-8b94-31ece0c106ca": {
      "content": "clip: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb1a263b-6606-37a1-9363-ce5d855107b9": {
      "content": ":last-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb22f4e5-564a-3363-8b59-f372b6c32a46": {
      "content": "render() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Basic render.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentRender",
      "matches": {
        "ren": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "cb28b086-b365-3a77-a271-60dc752c3c3d": {
      "content": "{% elif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb2c3ccc-8034-3595-99e3-fd9099ef532e": {
      "content": "d3.nest()\n  .key(${1})\n  .entries(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nest": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb2ce391-cef9-360d-b753-ae04713e15e6": {
      "content": "module.exports = $1;",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "module.exports",
      "matches": {
        "ex": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb3366d1-eb39-3749-abda-a1649fca626b": {
      "content": "{% unless ${1:condition} %}\n\t${0:${VISUAL}}\n{% endunless %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb38fa0b-4818-3108-8c1a-b97955ab5323": {
      "content": "given ($${1:var}) {\n\t${2:# cases}\n\t${0:# default}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "given": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb4ae1b6-6b3a-3e23-8127-d6d106bd9c10": {
      "content": "&#x2318;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmd": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb54067a-9c10-3630-8e08-940b6950afc6": {
      "content": "justify-content: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb587dee-d10f-306b-9bce-3f26fff712e8": {
      "content": "_.invert(${object})",
      "doc": "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invert(object);\n// => { '1': 'c', '2': 'b' }\n\nCreates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite\nproperty assignments of previous values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invert",
      "matches": {
        "lodash invert": true
      },
      "source": "javascript/lodash"
    },
    "cb589aaf-f475-355f-9790-6817792ec049": {
      "content": "_.keyBy(${collection}, ${iteratee})",
      "doc": "var array = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.keyBy(array, function(o) {\n  return String.fromCharCode(o.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.keyBy(array, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the last element responsible for generating the key. The\niteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keyby",
      "matches": {
        "lodash keyby": true
      },
      "source": "javascript/lodash"
    },
    "cb602bf8-9881-3b29-b311-4591f670d50e": {
      "content": "_.sortedIndexOf(${array}, ${value})",
      "doc": "_.sortedIndexOf([4, 5, 5, 5, 6], 5);\n// => 1\n\nThis method is like `_.indexOf` except that it performs a binary\nsearch on a sorted `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindexof",
      "matches": {
        "lodash sortedindexof": true
      },
      "source": "javascript/lodash"
    },
    "cb6a3c68-fcb8-3772-8c8a-da84bab0e7e7": {
      "content": "import",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb6c3ec9-08a6-3685-a4e3-544d07f63380": {
      "content": "shorten(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shorten": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb6e1e0f-bd5e-3f78-84c6-7a114aa0ac09": {
      "content": "gotoAndStop(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cb70a756-1321-3155-884a-06aa17da7387": {
      "content": "var.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fte": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb77cbcb-c7bc-3299-8007-29641ae015dc": {
      "content": "align-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "cb78613f-71da-3488-9e6a-e8e4c7a05029": {
      "content": "try {\n\t${0}\n} finally {\n\t\n}",
      "doc": "try/finally",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-finally",
      "matches": {
        "base try finally": true
      },
      "source": "javascript/base"
    },
    "cb8129af-2b14-31d4-bb2b-f27582769f40": {
      "content": "$this->${1:method}()->shouldBeLike(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeLike('value')",
      "matches": {
        "sblike": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb837f9c-0764-3a16-acf0-f96cfd5404b9": {
      "content": "font: ${1:normal/italic/oblique} ${2:normal/small-caps} ${3:normal/bold} ${4:1em/1.5em} ${5:Arial}, ${6:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font:   style variant weight size:line-height font -family (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb8558fb-85fd-32bd-9930-cb6c09b7ce00": {
      "content": "sum(attribute=${1:None}, start=${2:0})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sum of sequence of numbers + start",
      "matches": {
        "sum": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb92b2e4-51ae-358b-9297-211527f9283f": {
      "content": ":before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cb940d27-acd4-3ec5-bf89-9865245a7a53": {
      "content": "redirect_to(${2:${10:model}s_path})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (path plural)",
      "matches": {
        "repp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cbb0de1d-1a54-3448-913e-ceb1c609d84b": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "import ( ... )",
      "matches": {
        "import": true
      },
      "source": "gosnippets/snippets"
    },
    "cbb45368-8587-36f9-bb9a-610f72e0733c": {
      "content": "$.getScript('${1:mydomain.com/url}', function (script, textStatus, jqXHR) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getscript": true
      },
      "source": "snippets/javascript"
    },
    "cbc6c517-bfda-3788-a116-ab83113e704a": {
      "content": "<td>${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbc7d33a-3a40-3952-b3a5-ddbbb7ee7004": {
      "content": "class ${1:CLASS_NAME}(TemplateView):\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Template View",
      "matches": {
        "templateview": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cbd4b573-5940-3a46-a65b-f382c350dce0": {
      "content": "${1:root} = exports ? this",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbdcfc43-7a6e-3569-b06c-943c08ff5051": {
      "content": "repeat{\n  ${2:}\n  if(${1:condition}) break\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbdeafe6-0d1c-3fb8-8e86-bc4f06fd3b3f": {
      "content": "grid-auto-flow: column dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbe7d0e6-13aa-38d2-a9df-a62092177d6e": {
      "content": "list-style-position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbee28c4-422d-3b80-8811-56eba708e911": {
      "content": "<br>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbf2e295-444e-32e8-a514-f266dc61ca70": {
      "content": "${1:name}.foldLeft(${0:first}) {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fldl": true
      },
      "source": "vim-snippets/snippets"
    },
    "cbf8bea0-5c1c-3b10-8e37-b835da323d83": {
      "content": "{% redirect \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig redirect",
      "matches": {
        "redirect": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc02e771-50a2-3665-9d75-9e01c7823a2f": {
      "content": "<%= ${1:f}.submit \"${0:submit}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffs": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc08c94a-9b5f-3d54-9d61-afc21e4bc3b0": {
      "content": "for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc0a95ec-7219-35b2-bc17-4673fc07ece0": {
      "content": "overflow-x visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc0ca288-15d5-3f17-9c82-36d4eb692c82": {
      "content": "background-color: #${1:fff};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc112ffc-22c9-318d-a10d-acab785cb9fd": {
      "content": "id:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "id:",
      "matches": {
        "id": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cc11e4ba-e42d-3fac-960b-f03c51abeb71": {
      "content": "render file: \"${1:filepath}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (file) (rf)",
      "matches": {
        "rf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc1829bb-ca7f-30f1-9230-c2900b072283": {
      "content": "_.overArgs(${func}, ${transforms})",
      "doc": "function doubled(n) {\n  return n * 2;\n}\n\nfunction square(n) {\n  return n * n;\n}\n\nvar func = _.overArgs(function(x, y) {\n  return [x, y];\n}, [square, doubled]);\n\nfunc(9, 3);\n// => [81, 6]\n\nfunc(10, 5);\n// => [100, 10]\n\nCreates a function that invokes `func` with its arguments transformed.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-overargs",
      "matches": {
        "lodash overargs": true
      },
      "source": "javascript/lodash"
    },
    "cc195715-9d68-3f77-9f15-66ce73abe8a7": {
      "content": "% for ${1:i} in ${2:iter}:\n\t${0:}\n% endfor",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc1ae00c-aabc-34cd-b305-548d7302d1bf": {
      "content": "println!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println! with format param",
      "matches": {
        "pln,": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc291bc6-9fa4-3d0e-8341-6785d457346d": {
      "content": "switch (${1:statement})\n{\n\tcase ${2:value}:\n\t\tbreak;\n\n\tdefault:\n\t\t$0break;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "switch statement",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc3489db-0813-3118-8894-63ea2058736d": {
      "content": "PropTypes.exact({\n\t$0\n}).isRequired,",
      "doc": "An object with warnings on extra properties required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeExactRequired",
      "matches": {
        "ptexr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "cc370f4d-50a7-3236-90b2-647c724956e4": {
      "content": "_.each(${collection}, ${iteratee})",
      "doc": "_.forEach([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `1` then `2`.\n\n_.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).\n\nIterates over elements of `collection` and invokes `iteratee` for each element.\nThe iteratee is invoked with three arguments: (value, index|key, collection).\nIteratee functions may exit iteration early by explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\"\nproperty are iterated like arrays. To avoid this behavior use `_.forIn`\nor `_.forOwn` for object iteration.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-each",
      "matches": {
        "lodash each": true
      },
      "source": "javascript/lodash"
    },
    "cc47739f-02e9-3a08-86cc-32d0bcb6be70": {
      "content": "{\n\tpath: '${1:path}', \n\tcomponent: ${2:Component},\n\tchildren: [\n\t\t{ path: '${3:childpath}', component: ${4:ChildComponent} }\n\t]\n},$0",
      "doc": "Angular route path with children",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Route Path with Children",
      "matches": {
        "a-route-path-with-children": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "cc482009-e62f-37b5-ab7d-747da3521cc7": {
      "content": "text-wrap: unrestricted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc48934d-95fb-3fe3-aa81-f8c83274168c": {
      "content": "While (${1:condition})\n\t${0:; code...}\nWEnd",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc4930aa-2efb-3562-b37a-d5efbe201663": {
      "content": "mixed.strict()",
      "doc": "mixed.strict(isStrict: boolean = false): Schema\n\nSets the strict option to true. Strict schemas skip coercion and transformation attempts,\nvalidating the value \"as is\".",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-strict",
      "matches": {
        "yup mixed strict": true
      },
      "source": "javascript/yup"
    },
    "cc4c4bf1-86d8-3e0e-8350-5f09eec89770": {
      "content": "$this->assertInstanceOf(${1:Example}::class, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertInstanceOf(Example::class, $actual)",
      "matches": {
        "asi": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc4e121e-de23-3758-b041-70166825c7df": {
      "content": "font-family: ${0:Capitals,Impact},fantasy;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc50ccca-8f66-3712-8d34-344366feb2c5": {
      "content": "static ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc5686ee-4834-3ee6-9b28-b3c318a06b7e": {
      "content": "#!/usr/bin/env lua\n$0",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "#!/usr/bin/env lua",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc57cbb3-d72e-3b57-a95b-eaef87588881": {
      "content": "pub fn new(${2}) -> ${1:Self} {\n\t$1 { ${3} }\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Constructor function",
      "matches": {
        "new": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc5cbeed-e24f-3a7d-ba01-14155a50de45": {
      "content": "Run Keyword Unless    '\\${${1:rc}}' != '${2:abc}'    ${3:${kw}}    ${4:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword Unless",
      "matches": {
        "rku": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc62aee4-1d59-3b61-9888-36f47c7013c8": {
      "content": "if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "if () {}",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cc6aee74-c424-3886-85e6-f85c1e9d5984": {
      "content": "word-wrap none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc6df7e0-de47-394e-897a-09443389bf81": {
      "content": "%% @private",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%p": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc6f2e93-19c1-3a32-aaa5-98d01fde6445": {
      "content": "function ${1:name} {\n\t[CmdletBinding()]\n\tparam (\n\t\t[Parameter(Mandatory = $true)]\n\t\t[string] ${2:Param}\n\t)\n\tbegin {\n\t}\n\tprocess {\n\t}\n\tend {\n\t}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "function": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc713896-bbb0-3186-b7dc-f6b99b1c2b9d": {
      "content": "@setState\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React setState",
      "matches": {
        "setState": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc7b2508-6af1-33d7-a332-f134cd78c033": {
      "content": "${1:name}.isInstanceOf[${2:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc7ff71a-891f-39e7-9eae-5691306d0753": {
      "content": "visibility: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc839c69-516b-3f9b-b358-28a9560c8d24": {
      "content": "ls",
      "doc": "",
      "filetype": "vimshell",
      "grammar": "snu",
      "label": "=> ls?",
      "matches": {
        "sl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cc87fa5b-25d0-3ba1-a5d2-efae99e05382": {
      "content": "import { Routes } from '@angular/router';\n\nexport const routes: Routes = [${0}]",
      "doc": "Route definitions",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "route-definitions",
      "matches": {
        "a-routes": true,
        "angular route definitions": true
      },
      "source": "javascript/angular"
    },
    "cc8f563e-46fb-3c5d-8e92-1edd54b24720": {
      "content": "${1:obj}.load (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      },
      "source": "snippets/coffee"
    },
    "cc90125d-1d31-30c6-b380-dad792078e1d": {
      "content": "do\n{\n\t${VISUAL}$2\n} while(${1:/*condition*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "do while (do)",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cc9128ae-7c2b-3002-90a6-66fd2a7dae38": {
      "content": "clear: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc961526-89be-3779-8b61-bf98f9adcd4b": {
      "content": "\\\\begin{frame}[${1:t}]\n\t\\frametitle{${2:title}}\n\t\\framesubtitle{${3:subtitle}}\n\t${0:${VISUAL}}\n\\\\end{frame}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "frame environment",
      "matches": {
        "frame": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc9d19c5-b4e9-3463-9422-770f20aee732": {
      "content": "overflow: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "cc9d1b13-1cd8-381a-bd3c-59488c4f548b": {
      "content": "namespace {\n\t${0}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ans": true
      },
      "source": "vim-snippets/snippets"
    },
    "cca08ad3-0cd5-3c33-9f7f-c212fc7fa65c": {
      "content": "#lang typed/racket",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "cca28977-aac3-3058-bb89-e93ace4fbda3": {
      "content": "expect(${1:}).to.deep.equal(${0});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...).to.deep.equal(...)",
      "matches": {
        "expd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccac11be-f97f-3a2b-bf12-925164ff5186": {
      "content": "public ${1:int} ${2:MyProperty} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propg": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccb085b7-936b-33b1-b380-fd0d034a9665": {
      "content": "beforeAll(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "before all (js)",
      "matches": {
        "befa": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccb3551e-56b4-3769-ac36-46f3a7a921b8": {
      "content": "watch: {\n\t${1:data}: {\n\t\timmediate: ${2:true},\n\t\tdeep: ${3:true},\n\t\thandler(${4:newValue}, ${5:oldValue}) {\n\t\t\t${0}\n\t\t}\n\t}\n},",
      "doc": "vue watcher with options",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-watchers-with-options",
      "matches": {
        "vue watchers with options": true,
        "vwatcher-options": true
      },
      "source": "javascript/vue"
    },
    "ccbb133d-f86c-3ae9-88b7-3daca20136f5": {
      "content": "textWidth(${0:data});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textWidth": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccc8b16e-3d4e-3721-9018-38a5806320b1": {
      "content": "procedure ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure declaration",
      "matches": {
        "procd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccd781b2-805c-3c77-a268-30bece5eb5a9": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      },
      "source": "vscode-react/snippets"
    },
    "ccdfc1b1-754f-3acd-a769-e020d39eeae9": {
      "content": "import { ${2:originalName} as ${3:alias} } from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importAs",
      "matches": {
        "ima": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "cce203e2-a5c7-3638-bc69-e90c3cfb9940": {
      "content": "assert_send [${1:object}, :${2:message}, ${3:args}]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "assert_send(..)",
      "matches": {
        "asss": true
      },
      "source": "vim-snippets/snippets"
    },
    "cce3108f-5d38-331b-abb5-5ea46466f307": {
      "content": "onMount(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-mount",
      "matches": {
        "svelte lifecycle mount": true,
        "svlfm": true
      },
      "source": "javascript/svelte"
    },
    "cce75b07-5592-3cd4-865c-b61404b69258": {
      "content": "_.eachRight(${collection}, ${iteratee})",
      "doc": "_.forEachRight([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `2` then `1`.\n\nThis method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-eachright",
      "matches": {
        "lodash eachright": true
      },
      "source": "javascript/lodash"
    },
    "ccf26859-8a60-3997-85ba-090e0c7abb61": {
      "content": "Plug '${1}', { 'on': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'on': '' }",
      "matches": {
        "plugon": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccfb50de-f1e2-3b19-afe7-63b4c0f2a3f9": {
      "content": "<input type=\"hidden\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:hidden": true
      },
      "source": "vim-snippets/snippets"
    },
    "ccfb7b94-1971-32fd-8f7c-73f0960272b9": {
      "content": "max-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd1b5681-66c6-3569-b5ad-ed4745fadc9d": {
      "content": "free(${1:ptr});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fre": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd1cf65e-5df8-3c7a-b1c1-b84c16cb8abd": {
      "content": "if {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd238898-5df1-3e61-90ef-0755107f03b4": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.${1:value};\n\t}\n}",
      "doc": "vuex getter",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-getters",
      "matches": {
        "vgetter": true,
        "vuex getters": true
      },
      "source": "javascript/vuex"
    },
    "cd28d815-3a81-34aa-bf31-60328f1787ce": {
      "content": "<xsl:apply-templates select=\"${1:*}\">\n\t<xsl:sort select=\"${2:node}\" order=\"${3:ascending}\" data-type=\"${4:text}\">${5}\n</xsl:apply-templates>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "sort-by",
      "matches": {
        "apply-templates": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd342510-83d3-3ffb-ba03-ad55b024b9b4": {
      "content": "try do\n  ${1:TARGET}\nrescue\n  ${2} -> ${3}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "try .. rescue .. end",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cd347d15-5c78-380d-beb7-1393749435e6": {
      "content": "__shared__ ${1:int} ${2:memo}[${3:SIZE}];${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Shared memory declaration",
      "matches": {
        "share": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd3597c6-6341-370a-a47f-6cfe76be67e3": {
      "content": "_.overEvery(${predicates})",
      "doc": "var func = _.overEvery([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => false\n\nfunc(NaN);\n// => false\n\nCreates a function that checks if **all** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-overevery",
      "matches": {
        "lodash overevery": true
      },
      "source": "javascript/lodash"
    },
    "cd37f8b8-bd34-329d-ae8f-7d107e26465b": {
      "content": "@private",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@private",
      "matches": {
        "@pri": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cd4784e7-19b1-3981-b477-bc88050eee24": {
      "content": "list-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style": true,
        "ls": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cd6ae2f3-5121-3a5b-a39a-72f833e3f3c6": {
      "content": "${1:public} static int Main(string[] args)\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sim": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd7defee-e112-39a3-a809-129c93a9fd68": {
      "content": "form_label(\"${1:label text}\", \"${2:id}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_label": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd89364c-b7dd-3acd-8856-3a72ff4cc876": {
      "content": "(for/list ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/list",
      "matches": {
        "forl": true
      },
      "source": "vim-snippets/snippets"
    },
    "cd90ccfb-ff30-3bfb-b58e-0cb6c5b47724": {
      "content": "import ${1:Html} exposing (${2:..})\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... exposing (..)",
      "matches": {
        "impe": true,
        "importExposing": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cda093d6-8baa-3ad6-8170-0e8742145d30": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "if ... end",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cda5a7cc-e452-3e0a-9fd4-0073d47d79d1": {
      "content": "${1:obj}.dequeue(${2:'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deq": true
      },
      "source": "snippets/javascript"
    },
    "cdab25e8-ab84-38bd-9188-caf38affff76": {
      "content": "${1:obj}.mouseenter (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menter": true
      },
      "source": "snippets/coffee"
    },
    "cdb396f2-b179-3339-b25e-4e8bfbb657b9": {
      "content": "text-align: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      },
      "source": "vim-snippets/snippets"
    },
    "cdc2ddd7-9800-384d-a25d-24136f69410e": {
      "content": "println(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "print line",
      "matches": {
        "prl": true
      },
      "source": "vim-snippets/snippets"
    },
    "cdc30b1c-836f-3197-b1bd-c6444f72fc72": {
      "content": "setup(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "setup(func)",
      "matches": {
        "setup": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cdc35f21-0775-3f76-ab6e-544683a4f6cf": {
      "content": "for ${1:idx},${2:val} in ipairs(${3:table_name}) do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "ipair for foop",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cdc7395e-b1c5-389e-8a26-0e23d79507f9": {
      "content": "if $1 then\n\t$2\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/else statement",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cdc763a6-80a0-36f9-b3dd-ba42d4dfbaaa": {
      "content": "$t('$1')",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      },
      "source": "vim-snippets/snippets"
    },
    "cdcdc8f0-5d43-30d4-a849-2c48a5ee643f": {
      "content": "if (${1:true}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cdd9a4dc-bd74-3aa6-8d7b-7f5511b83f70": {
      "content": "return ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cdee0919-f13d-35d1-a487-9221689b7f98": {
      "content": "${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dpipe": true
      },
      "source": "snippets/coffee"
    },
    "cdf1043c-b494-3f3d-9bed-f834e31fc264": {
      "content": "expect(${1:target}).toEqual(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to equal (coffee)",
      "matches": {
        "ee": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cdfd20cd-687d-367d-81d8-78717595b66b": {
      "content": "NSMutableDictionary *${1:#:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dict": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cdfe0147-5664-3b95-b2be-16370fdb1066": {
      "content": "_.capitalize(${string})",
      "doc": "_.capitalize('FRED');\n// => 'Fred'\n\nConverts the first character of `string` to upper case and the remaining\nto lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-capitalize",
      "matches": {
        "lodash capitalize": true
      },
      "source": "javascript/lodash"
    },
    "cdff61d5-b2a0-33af-85d5-966fee7e2b93": {
      "content": "for \"${1:filename}\".IO.lines -> $line {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfile": true
      },
      "source": "vim-snippets/snippets"
    },
    "cdffa5d9-28b6-3700-85df-ffd103bd4af4": {
      "content": "macro(${1:name} ${2:args})\n\t${3}\nendmacro($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "macro() endmacro()",
      "matches": {
        "macro": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce099364-6610-396e-97d1-e5a65012208e": {
      "content": "background-break: bounding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce15db8b-0d0f-343b-97be-26bd9dca7fb0": {
      "content": "while (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "while () {}",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce186590-18a0-317d-a8c3-73bb30c9f50f": {
      "content": "join:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce1a7e26-fc36-317e-a0b9-3ec20f414510": {
      "content": "if err := ${1:condition}; err != nil {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "If with inline error",
      "matches": {
        "ife": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "ce1c6015-d67c-3fa9-9320-efbe87ddef2c": {
      "content": "beforeAll(() => {\n\t$0\n});",
      "doc": "beforeAll function is called once before all specs",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-beforeall",
      "matches": {
        "ba": true,
        "jest beforeall": true
      },
      "source": "javascript/jest"
    },
    "ce27da54-5db8-3a2c-bf71-443cfa9bfa70": {
      "content": "import 'package:${1}/${2}.dart';\n${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce32d281-50ce-3f3d-b13b-a6d85492b130": {
      "content": "\\\\href{${1}}{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "href": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce348c43-3072-36c8-b7fb-479834d39c6f": {
      "content": "$.ajaxPrefilter(function (${1:options}, ${2:originalOptions}, jqXHR) {\n\t${0: // Modify options, control originalOptions, store jqXHR, etc}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxprefilter": true
      },
      "source": "snippets/javascript"
    },
    "ce3a162a-e615-3300-8a2c-55277382b4d2": {
      "content": "scanf(\"${1}\", ${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "scanf(\"...\", ...);",
      "matches": {
        "scanf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce3b829d-7ec4-308a-b908-26a6fab3e292": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "do { ... } while (condition)",
      "matches": {
        "do": true
      },
      "source": "snippets/javascript"
    },
    "ce4201c8-013b-3c43-9b1e-cd3306bdfae7": {
      "content": "background-clip: no-clip;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce47b50d-ab8f-35db-8943-bf3c25ae0697": {
      "content": "elif [ ${1:#:condition} ]; then\n\t${0:TARGET}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce4ac2ee-78a3-32df-8d19-cac43f26485b": {
      "content": "use JMS\\SecurityExtraBundle\\Annotation\\Secure;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use JMS\\..\\Secure",
      "matches": {
        "usesecure": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ce53d14f-c960-3384-b313-43e9ef65fde0": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce54dda4-a5d4-36f9-8dc9-1a8bcd862fa9": {
      "content": "if (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce559565-68fb-3c79-b82e-9c555da79244": {
      "content": "text-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce583e22-97a8-365f-8678-fe54809022dc": {
      "content": "import PropTypes from 'prop-types'\n\nexport default (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_hocComponent",
      "matches": {
        "_hoc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ce5b5197-2b9a-3d20-ade6-5ee6df4c8a2f": {
      "content": "{%- else -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else-": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce603864-4df9-3703-8b9a-fa71a3110514": {
      "content": "File.foreach(${1:'path/to/file'}) { |${2:line}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.foreach() { |line| .. }",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce606cb6-8988-3e4f-a866-55b8fd5a4bf0": {
      "content": "do ${1}\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "do",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce60cc12-36f0-3540-8ceb-ad1cea8af6f1": {
      "content": "$this->shouldNotBeAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotBeAnInstanceOf('Type')",
      "matches": {
        "snbinstance": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ce6765da-8de8-355a-be71-70dda0dc1d24": {
      "content": "throw new ${1}Exception(${2:\"${3:#:Error Processing Request}\"}${4:});\n${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce6d1a3a-79af-3435-a179-7080247a65b9": {
      "content": "${1}:\nfor ${2} of ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for each",
      "matches": {
        "named_for_each": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce6dddf0-e670-3348-bbe3-ef198f3affff": {
      "content": "xhr :get, :${1:show}${2:, id: ${3:1}}$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr get",
      "matches": {
        "xget": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ce81a6b0-da94-351b-a129-974c09c6f6f0": {
      "content": "call themis#log(${TARGET})",
      "doc": "",
      "filetype": "vimspec",
      "grammar": "snu",
      "label": "p",
      "matches": {
        "themis#log": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ce858ca4-003d-3227-9c67-d6908ad1e590": {
      "content": "grid-column-end ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce860448-e241-3d8b-a4f6-5dce30e7a603": {
      "content": "// Package $1 provides ...\npackage ${1:main}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Package declaration",
      "matches": {
        "/^package/": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ce88cecd-1868-3ed1-82d3-89bdc317b55c": {
      "content": "font-family ${0:Capitals,Impact},fantasy",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce8a18c2-1ed3-3fd1-81a2-c38c1f9bb421": {
      "content": "{% block ${1} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce8f81a4-9f2d-3292-8345-5506f3d7f7de": {
      "content": "let ${1} = (${2}) => {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce90b26d-ca78-368d-bd40-187ab6e1b0be": {
      "content": "${1:array}.forEach(${2:currentItem} => {\n\t${0}\n});",
      "doc": "Creates a forEach statement in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forEach",
      "matches": {
        "fre": true
      },
      "source": "vscode-javascript/snippets"
    },
    "ce930d69-5cf3-3e5f-b07a-2cdcf19b6adc": {
      "content": "list-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      },
      "source": "vim-snippets/snippets"
    },
    "ce9b4dc4-cce6-342c-a348-53a41b18f7a7": {
      "content": "@yield('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@yield",
      "matches": {
        "yl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cea42f5f-964f-36bc-ae04-7e9c0c842307": {
      "content": "// Don't FUCKING touch this.",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idfk": true
      },
      "source": "vim-snippets/snippets"
    },
    "cea61b14-7deb-37f2-9b14-f3949248f56f": {
      "content": "case class ${1}(${2}: ${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "case class ..(..: ..)",
      "matches": {
        "cclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cea7c4c2-a8f7-3878-b4a5-20680ac27054": {
      "content": "int main(int argc, char* argv[])\n{\n\t${0:TARGET}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cea7f391-bc53-34f1-8f58-ee803f8eb93b": {
      "content": "(${1:a}, ${2:b}, ${3:c}, ${0:d})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup3": true
      },
      "source": "vim-snippets/snippets"
    },
    "ceab7839-7c3e-35eb-b379-5d2d81e8f210": {
      "content": ".. sidebar:: ${1:Title}\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sid:": true
      },
      "source": "vim-snippets/snippets"
    },
    "cec37190-0c25-3a86-9da3-37ec21cde4ef": {
      "content": "console.count(${1:label})",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleCount",
      "matches": {
        "cco": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "cecaab5e-3ac8-3775-b071-6d138740501a": {
      "content": "<bdo dir=\"${1:rtl}\">${2:TARGET}</bdo>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ceccab42-3a73-3fe5-8d5e-c86e01b23fa7": {
      "content": "<?php else: ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pelse": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cecd9c60-60b6-3c7b-a54f-fb0cc18f5e27": {
      "content": "justify-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "ced75939-d528-3a5e-b677-e907ebe3b4eb": {
      "content": "import gsap from 'gsap';",
      "doc": "import gsap library",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import GSAP",
      "matches": {
        "vimport-gsap": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "ced85f49-ee15-308f-80fc-d18c9261969d": {
      "content": "${1:controllerName} = (${2:scope}, ${3:injectables}) ->\n\t${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngc": true
      },
      "source": "snippets/coffee"
    },
    "cee09a4a-c970-3e63-93fc-bd9ef849cbe4": {
      "content": "if err != nil {\n\tlog.Fatal(err)\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error with log.Fatal(err)",
      "matches": {
        "errl": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "cee279ef-911e-35ca-9cfa-a4b98cb5104c": {
      "content": "<frameset rows=\"${1}\"\n${2:TARGET}\n</frameset>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "framesetrows": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cee2b792-8b85-3423-90b5-eae181a200ba": {
      "content": "watchQuery (newQuery, oldQuery) {\n\t${1:data}\n},",
      "doc": "Use the watchQuery key to set up a watcher for query strings.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-watch-query",
      "matches": {
        "nuxt watchquery": true
      },
      "source": "javascript/nuxt"
    },
    "cee3147c-372a-37f2-bcf1-ad295d214b94": {
      "content": "@font-face ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      },
      "source": "vim-snippets/snippets"
    },
    "cee57e5b-8b17-314e-ae86-81a72279dc4f": {
      "content": "File.join(File.dirname(__FILE__), *['${1:rel path here}'])",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpath": true
      },
      "source": "vim-snippets/snippets"
    },
    "ceec8ec3-65c1-35f2-8d8e-f269e4140768": {
      "content": "border-bottom-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      },
      "source": "vim-snippets/snippets"
    },
    "cef8949f-a5cf-35e0-9be6-2cbf287fc110": {
      "content": "interface ${1:program_name} ();\n\t// nets\n\t${0}\n\t// clocking\n\t// modports\nendinterface : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intf": true
      },
      "source": "vim-snippets/snippets"
    },
    "cef94ffa-238f-38a0-993b-d411612abb2a": {
      "content": "${1:FIELDNAME} = forms.ModelChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelChoiceField",
      "matches": {
        "fmochoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cefacbc3-87b3-391a-a3ac-8611f4b0bc3d": {
      "content": "pinMode(${1}, OUTPUT);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pinout": true
      },
      "source": "vim-snippets/snippets"
    },
    "cefbe385-f6ae-3c9b-bdf8-bb4a652fa87c": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${5}\nfinally:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Else/Finally",
      "matches": {
        "tryef": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf0a9052-d593-333e-8d8d-bba589992625": {
      "content": "${1:obj}.hide('${2:slow/400/fast}', function () {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hidec": true
      },
      "source": "snippets/javascript"
    },
    "cf16e5f6-e64a-3ed0-8965-58999a515cad": {
      "content": "expect(${1:target}).toBeVisible();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be visible (js)",
      "matches": {
        "ev": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf1a0a91-32ba-3a05-9a23-87a22ce35c80": {
      "content": "{% filter ${1} %}\n\t${0}\n{% endfilter %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf2c9983-d87b-3a22-b3b4-f42a9856b442": {
      "content": "place-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf3240d0-d49f-3439-8a63-6e74cfd35d42": {
      "content": "std::forward_list<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flist": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf3950bf-3592-3988-b5d8-eb6695fa83ad": {
      "content": "while ${1:cond}{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf3da45f-76fb-3ed0-867c-378e616aee52": {
      "content": "white-space-collapse: keep-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf3df440-7a93-32b4-888d-5cbd6b4d5b62": {
      "content": "![${1:#:alt}](${2:#:url} \"${3:#:title}\")${4}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt](url \"title\")",
      "matches": {
        "alturltitle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cf43c435-8b0c-3f14-bee7-a73b78f8cd4f": {
      "content": "font-stretch ultra-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf491097-b65d-3c30-8f55-12af9ce0333d": {
      "content": "caption-side: top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf491813-87ac-3d45-aba7-3ec70790247c": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2}\n\t${0}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try ... catch statement",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf4aa671-64a4-3fdb-a906-2d88c9d4e341": {
      "content": "assert_in_delta ${1:expected_float}, ${2:actual_float}, ${3:2**-20}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asid": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf5051ab-43c2-3c8e-8131-8710c9520254": {
      "content": "{% case \"${1}\" %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch case",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf697e35-6f4e-328b-8643-f5918e989e0a": {
      "content": "for ${1:i} := 0; $1 < ${2:N}; $1++ {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for 0..N-1 { ... }",
      "matches": {
        "fori": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "cf749ede-8c9b-33c6-a409-a9526b774860": {
      "content": "\\textrm{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textrm": true,
        "textrm \\textrm{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cf8edce1-67dc-3369-ad37-343c1673ee21": {
      "content": "<%= for ${1:item} <- ${2:items} ${3:@conn} do %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "cf9163b5-93cd-3fb4-86a4-c838372d1674": {
      "content": "class $1Inline(admin.TabularInline):\n\t'''\n\tTabular Inline View for $1\n\t'''\n\tmodel = ${2:$1}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = ($6,)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Tabular Inline",
      "matches": {
        "tabularinline": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cf9a8d30-80c3-3d8e-93c1-23c2b3397e69": {
      "content": "while ${1} loop\n\t${2}\nend loop;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfa0574b-6d2b-37c7-b7ef-55f66bda68cf": {
      "content": "background-repeat: no-repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfa74408-80a2-3d19-b14c-88aba940957f": {
      "content": "protected string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps|": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfab00af-c517-3829-a72d-2bd6681dbd1d": {
      "content": "module type ${1} = sig\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module signature",
      "matches": {
        "mot": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cfacd50c-de01-3131-80fe-67b201b2c620": {
      "content": "import React, { memo } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, { memo }",
      "matches": {
        "imrm": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "cfae648f-027b-34cb-b4df-b9fc0b1cd15d": {
      "content": "${1:obj}.height(${2:integer})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      },
      "source": "snippets/coffee"
    },
    "cfb651e8-2239-3a3a-9e5d-8ee406a29b94": {
      "content": "class ${1:ExampleCase}(unittest.TestCase):\n\tdef test_${2:description}(self):\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testcase": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfbfe2af-4ff2-3c66-9516-0c8574abbcf4": {
      "content": "case \"$${1:{name\\}}\" in\n\t${2:pattern*})\n\t\t${0}\n\t\t;;\n\t*)\n\t\t${3:echo \"$$1 Didn't match anything\"}\nesac",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "cfc0f16a-42d2-33e4-b8ae-5a113f7a66ad": {
      "content": "text-height: max-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfc3a169-a196-3c58-86a5-f8a1025b8b15": {
      "content": "componentWillReceiveProps: (nextProps) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillReceiveProps",
      "matches": {
        "componentWillReceiveProps": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cfc83f3b-603f-3ca7-80ac-6a7a3dea7e63": {
      "content": "case ${1:word} in\n\t${2:pattern})\n\t\t${0};;\nesac",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfcda77f-477b-32de-8385-af25ed7e04d1": {
      "content": "assert ${1:test} : \"${2:Failure message}\";",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfd31d99-64ca-3f06-a9fa-7dbe66f40e3e": {
      "content": "_.defaultsDeep(${object}, ${sources})",
      "doc": "_.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n// => { 'a': { 'b': 2, 'c': 3 } }\n\nThis method is like `_.defaults` except that it recursively assigns\ndefault properties.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaultsdeep",
      "matches": {
        "lodash defaultsdeep": true
      },
      "source": "javascript/lodash"
    },
    "cfd429fd-b42b-30a9-843b-845392a42bc0": {
      "content": "do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfd6ac16-1739-39e5-b4d1-863955764349": {
      "content": "def test_should_post_${1:action}\n\t${3:@$2 = ${4:$2s}(:${5:fixture_name})\n\t}post :$1${6:, id: @$2.to_param}, ${2:model}: { $0 }\n\tassert_response :redirect\n\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "def post request",
      "matches": {
        "deftp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cfd903b0-bf5a-3dd2-aa34-89e4f0ae3147": {
      "content": "density(${1:x}${2:, bw = ${3:bandwidth}})",
      "doc": "Density",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "den",
      "matches": {
        "density": true
      },
      "source": "vscode-R/snippets"
    },
    "cfe7ae1d-49d6-31d1-a55f-5fe2e9eb3f92": {
      "content": "Option<${1:i32}>",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Option<T>",
      "matches": {
        "opt": true
      },
      "source": "vim-snippets/snippets"
    },
    "cfed990f-c336-3681-9649-ce51d634d4d3": {
      "content": "// TODO: $1",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "TODO (todo)",
      "matches": {
        "todo": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "cfef74d0-b722-3f50-9bcc-9d6e46268774": {
      "content": "border-style hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "cffcb2d9-4e19-30d7-a3ec-b588ceeaa3e6": {
      "content": ".. tip::\n\t${0:my tips}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tip:": true
      },
      "source": "vim-snippets/snippets"
    },
    "cffe822b-19d4-3b4a-80c2-c3c24b8bb7eb": {
      "content": "componentWillUpdate: (nextProps, nextState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillUpdate",
      "matches": {
        "componentWillUpdate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d000ac59-5650-306f-a220-8fd6a0d142cc": {
      "content": "font-size: ${1:100%};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-size: size (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d0020691-b028-35c7-8895-2b19c2f9f94d": {
      "content": "line(${1:x1}, ${2:y1}, ${3:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "line": true
      },
      "source": "vim-snippets/snippets"
    },
    "d00292f7-e4be-36fb-b2c2-0080a4bd4734": {
      "content": "import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  ${1:Model1}: {},${0}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};",
      "doc": "NgRx Data Entity Metadata",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Entity Metadata",
      "matches": {
        "a-ngrx-data-entity-metadata": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "d0062ece-6f5f-3e91-9c80-34d1b2cb5f02": {
      "content": "methods: {\n\t${1:name}() {\n\t\t${0}\n\t}\n},",
      "doc": "vue method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-methods",
      "matches": {
        "vmethod": true,
        "vue methods": true
      },
      "source": "javascript/vue"
    },
    "d00d70be-fb85-3f64-808a-8c6eb6ffe473": {
      "content": "$.get '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxget": true
      },
      "source": "snippets/coffee"
    },
    "d00e7555-82f0-3826-848d-1104201c7be2": {
      "content": "loadMovieNum(${1:url}, ${2:level}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ln": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d019911b-bf03-339a-9529-d9528613a8d8": {
      "content": "let pos_save = getpos('.')\ntry\n  ${0}\nfinally\n  call setpos('.', pos_save)\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use pos save",
      "matches": {
        "save_pos": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d0199296-b2a6-37c5-9f74-35a65afb6944": {
      "content": "expand(${1:array}${2:, }${0:newSize});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expand": true
      },
      "source": "vim-snippets/snippets"
    },
    "d019f0a2-d528-348c-91eb-295f0ea144ab": {
      "content": "import React, { memo } from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = memo(() => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n});\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a memoized stateless React component without PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactMemo",
      "matches": {
        "rscm": true
      },
      "source": "vscode-react/snippets"
    },
    "d025f1c2-052c-3859-89dd-b2cc1197a80f": {
      "content": "assert_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asn": true
      },
      "source": "vim-snippets/snippets"
    },
    "d027bb91-21ee-340b-945f-2e95ffa4ac44": {
      "content": "${1:FIELDNAME} = forms.FileField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FileField",
      "matches": {
        "ffile": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d03ff878-c6e6-34c0-849d-df9675f069f4": {
      "content": "word-wrap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      },
      "source": "vim-snippets/snippets"
    },
    "d046729f-c2a8-3dcf-b0c9-5377c2a97cdf": {
      "content": "import React, { memo } from 'react'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-memo",
      "matches": {
        "imrm": true,
        "react import memo": true
      },
      "source": "javascript/react"
    },
    "d046fe77-1e11-3f03-9cc6-02855e6f1b29": {
      "content": "private ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d04acc0b-ebcd-3d09-b79b-5af14482a667": {
      "content": "selector:\n  app: {{ template \"${2:chartName}.name\" . }}\n  component: \"{{ .Values.${1:value_key}.name }}\"\n  release: {{ .Release.Name }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "selector_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "d04b3dd0-dd8d-3b55-acca-e7129b7ffb08": {
      "content": "t.date :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcda": true
      },
      "source": "vim-snippets/snippets"
    },
    "d05210bc-cb9a-3c4f-944b-de1b36f04565": {
      "content": "{@inheritDoc",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{inheritDoc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d0583f44-7220-349d-8082-1ab2a911e780": {
      "content": "${1:FIELDNAME} = models.FilePathField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FilePathField",
      "matches": {
        "mfilepath": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d05bdbdb-90aa-38b1-92dc-3b8f31155514": {
      "content": "<link rel=\"${1}\" href=\"${2}\" title=\"${3}\" type=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      },
      "source": "vim-snippets/snippets"
    },
    "d067c366-4713-35de-97ac-aff501a6bf5e": {
      "content": "wordwrap:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d0758c49-9829-3c9a-a03a-706f0f4f73c6": {
      "content": "list-style-position: inside",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "d07ac3c1-01a0-34e1-b12d-dd0a7176dcb0": {
      "content": "it.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\t${0:expect(double(input)).toBe(expected);}\n\t}\n);",
      "doc": "creates an it block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-each",
      "matches": {
        "ite": true,
        "jest it each": true
      },
      "source": "javascript/jest"
    },
    "d07c66c7-babc-391d-a03e-7201a8d82e1f": {
      "content": "function! s:suite.${1}()\n  ${2:TARGET}\n  call s:assert.equal(${3:expected}, ${4:actual})\nendfunction",
      "doc": "",
      "filetype": "vimspec",
      "grammar": "snu",
      "label": "",
      "matches": {
        "suite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d08a0359-2a5b-3de2-94fd-2163fa185062": {
      "content": "print 'Hello world!'",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d08e8846-f224-3366-8b1d-f2d4f478c730": {
      "content": "else {\n\t${1}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "d09a091a-12d8-3900-8248-2a398bc88f16": {
      "content": "void setup()\n{\n\tSerial.begin(${1:9600});\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      },
      "source": "vim-snippets/snippets"
    },
    "d09b5951-886d-37c1-9f82-72ee0d539de3": {
      "content": "str_replace(${1:search}, ${2:replace}, ${3:subject})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "str_replace",
      "matches": {
        "sr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0a807db-4956-33b4-8396-98cee7ac0802": {
      "content": "content: close-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0b043b3-ba6e-33b6-ad97-6594e0994a35": {
      "content": "if ($1)\n{\n\t${VISUAL}$0\n}\nelse\n{\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if else statement",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d0b60dd2-6449-34ce-b886-ce64b21485af": {
      "content": "-ifndef(${1:TEST}).\n${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnd": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0bef0cb-64ae-36dd-88b9-c4bbe3a6fb67": {
      "content": "mixed.isValid()",
      "doc": "mixed.isValid(value: any, options?: object): Promise<boolean>\n\nReturns true when the passed in value matches the schema. isValid\nis asynchronous and returns a Promise object.Takes the same options as validate().",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-valid",
      "matches": {
        "yup mixed isvalid": true
      },
      "source": "javascript/yup"
    },
    "d0c21f33-b9e9-3a85-b542-892edbdc873a": {
      "content": "degrees(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "degrees": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0d5b83c-3db4-3c2b-8039-59c0c7e2eee2": {
      "content": "(require ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0d8351a-fa48-3d7a-8e85-e986f304042c": {
      "content": "echo CHtml::checkBoxList('${1:name}', ${2:select}, array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0daadd8-2b80-345d-a9e0-21fd74b4ec99": {
      "content": "created () {\n\t${0};\n},",
      "doc": "created lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-created",
      "matches": {
        "vcreated": true,
        "vue lifecycle created": true
      },
      "source": "javascript/vue"
    },
    "d0e20078-d56e-3bef-aeb2-5c7b07ab3cbc": {
      "content": "__SOURCE_DIRECTORY__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__SOURCE_DIRECTORY__",
      "matches": {
        "sourced": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d0e4a76d-970a-38da-86d6-3d54a84defb2": {
      "content": "expr {${0:#expression here}}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0ecb7ea-ed1d-3e28-a494-d740ed90eddb": {
      "content": "$.trim(${1:str})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$trim": true
      },
      "source": "snippets/javascript"
    },
    "d0f564cb-6536-3967-a383-bf4c3ae93d9e": {
      "content": "each_index { |${1:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eai": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0f9106c-79ff-335e-88dc-42b7f300d7bc": {
      "content": "_.flatMapDepth(${collection}, ${iteratee}, ${depth})",
      "doc": "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDepth([1, 2], duplicate, 2);\n// => [[1, 1], [2, 2]]\n\nThis method is like `_.flatMap` except that it recursively flattens the\nmapped results up to `depth` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmapdepth",
      "matches": {
        "lodash flatmapdepth": true
      },
      "source": "javascript/lodash"
    },
    "d0fc0b26-e9ec-39a8-8e8d-53e0ae560af5": {
      "content": "must_respond_to :${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrt": true
      },
      "source": "vim-snippets/snippets"
    },
    "d0fd9e63-dec0-30c3-84fc-8bc525685e0b": {
      "content": "${1:/*return type*/} opDispatch(string s)()\n{\n\t$2;\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opDispatch (opDis)",
      "matches": {
        "opDis": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d0fe26c0-fd11-3235-bdef-24a82e85d103": {
      "content": "_.isWeakSet(${value})",
      "doc": "_.isWeakSet(new WeakSet);\n// => true\n\n_.isWeakSet(new Set);\n// => false\n\nChecks if `value` is classified as a `WeakSet` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isweakset",
      "matches": {
        "lodash isweakset": true
      },
      "source": "javascript/lodash"
    },
    "d10519fd-b7d9-34a1-b1fe-9ee2ed71128e": {
      "content": "validates_format_of :${1:attribute}, with: /${2:^[${3:\\w\\d}]+\\$}/${4:, on: :${5:create}, message: \"${6:is invalid}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of",
      "matches": {
        "vf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1060164-1e37-3154-a2a9-b2c75089e886": {
      "content": "@component('$1')\n\t${2:${VISUAL}}\n@endcomponent",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@component directive",
      "matches": {
        "component": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d10a73ed-9c11-3035-aa38-d959f9e2dd77": {
      "content": "max-width: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "d110ecc8-4957-31bf-8d8c-a9b992b8d4fc": {
      "content": "{% highlight ${1:#:TARGET} %}\n  ${2:code}\n{% endhighlight %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "highlight": true,
        "hl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1113a2a-d76f-3ec3-8e14-84113b8ff1da": {
      "content": "@book{${1:LABEL},\n    author/editor = {${2}},\n    title = {${3}},\n    publisher = {${4}},\n    year = {${5}},\n    memo = {volume, series, address, edition, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@book": true,
        "book": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d112979b-93d1-34c5-a627-28d74392c5fe": {
      "content": "while ${1} ${2:<=} ${3}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "d119bd49-b3c3-32bf-8095-28f58c66e1c0": {
      "content": "this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctor": true
      },
      "source": "vim-snippets/snippets"
    },
    "d11abf31-96f2-3f79-900a-f50038c59b87": {
      "content": "library IEEE;\nuse IEEE.std_logic_1164.ALL;\nuse IEEE.numeric_std.ALL;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "libs": true
      },
      "source": "vim-snippets/snippets"
    },
    "d12336ae-477b-350a-95af-756627196615": {
      "content": "yup.ref()",
      "doc": "yup.ref(path: string, options: { contextPrefix: string }): Ref\n\nCreates a reference to another sibling or sibling descendant field. Refs are resolved\nat validation/cast time and supported where specified. Refs are evaluated in the proper order so that\nthe ref value is resolved before the field using the ref (be careful of circular dependencies!).let schema = object({\n  baz: ref(\"foo.bar\"),\n  foo: object({\n    bar: string()\n  }),\n  x: ref(\"$x\")\n});\n\nschema.cast({ foo: { bar: \"boom\" } }, { context: { x: 5 } });\n// => { baz: 'boom',  x: 5, foo: { bar: 'boom' } }\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-ref",
      "matches": {
        "yup ref": true
      },
      "source": "javascript/yup"
    },
    "d1264642-4ced-3473-a81a-203d82be17eb": {
      "content": "font-stretch: expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "d12797af-50f3-3e53-8f6b-92243c9f48cb": {
      "content": ":first-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1281404-2d92-3a15-961c-d259f6c597eb": {
      "content": "| money",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1321e0a-bb91-399b-8d8d-719cb2292819": {
      "content": "${1:obj}.toggleClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togclass": true
      },
      "source": "snippets/javascript"
    },
    "d1326a93-e55c-37ac-a9d1-cb150339e338": {
      "content": "position: static",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1432bbf-319e-3d8a-9605-0c15f110ec34": {
      "content": "@push('$1')\n\t${2:${VISUAL}}\n@endpush",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@push directive",
      "matches": {
        "push": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d14bd79f-9a32-3b34-a0ed-f1a523421cdf": {
      "content": "expect($1).toBeNull();$0",
      "doc": "expects the argument is null",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobenull",
      "matches": {
        "jest expect tobenull": true,
        "tbn": true
      },
      "source": "javascript/jest"
    },
    "d152a9a5-6ef3-342d-88f2-62d7a323aca0": {
      "content": "output${1:#: nbit} o_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "output [] o_,",
      "matches": {
        "O": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1557893-0aa0-3d1b-88d0-2c63f7f9c2fa": {
      "content": "IBOutlet ${1:NSSomeClass} *${2:$1};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibo": true
      },
      "source": "vim-snippets/snippets"
    },
    "d15a1062-ff44-3f78-8b3a-a18b73fb8aa5": {
      "content": "(deftest ${1:a}-test\n  (testing \"${2:hello}\"\n    ${0:TARGET:(is (= 0 1))}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deftest": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1648159-351f-3f74-a1f9-52522baceb2c": {
      "content": "renderXml(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renx": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1659759-db71-367c-8bf1-1dac827557eb": {
      "content": "_.flowRight(${funcs})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flowRight([square, _.add]);\naddSquare(1, 2);\n// => 9\n\nThis method is like `_.flow` except that it creates a function that\ninvokes the given functions from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flowright",
      "matches": {
        "lodash flowright": true
      },
      "source": "javascript/lodash"
    },
    "d168866c-c691-3d7d-8360-8ba31b9adfbd": {
      "content": "<%= form_for @${1:model} do |f| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1697593-4667-3e4a-838a-5a1dd4a0b3b8": {
      "content": "{% autoescape ${1:off} %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      },
      "source": "vim-snippets/snippets"
    },
    "d16a919d-51d0-3a2f-893c-a2df8a7cfa38": {
      "content": "import { Routes } from '@angular/router';\n\nexport const routes: Routes = [${0}]",
      "doc": "Route definitions",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Route definitions",
      "matches": {
        "a-routes": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "d175dcfe-6025-3801-a7b7-4dace2474959": {
      "content": "export const Global${1} = createGlobalStyle`\n  ${2}\n`;",
      "doc": "Export createGlobalStyle",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-create-global-style",
      "matches": {
        "exscg": true,
        "styled-components export createglobalstyle": true
      },
      "source": "javascript/styled-components"
    },
    "d17aa5dd-7648-30f5-ab2f-46b834bd8a75": {
      "content": "file(GLOB_RECURSE ${1:#:var} ${2:#:glob_paths})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "file(GLOB_RECURSE ...)",
      "matches": {
        "file_GLOBE_RECURSE": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1865e05-7dd8-3d26-b192-ec0d71f54ecc": {
      "content": "renderBinary(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renb": true
      },
      "source": "vim-snippets/snippets"
    },
    "d18af6ea-1a5d-3e71-bc43-e1d7f9b1b48d": {
      "content": "const ${1:scale} = useMotionValue(${2:1})",
      "doc": "useMotionValue()\nCreates a MotionValue to track the state and velocity of a value.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-motion-value",
      "matches": {
        "framer-motion use-motion-value": true,
        "use-motion-value": true
      },
      "source": "javascript/framer-motion"
    },
    "d19d1c3d-0cdb-3525-ae44-4c333595c296": {
      "content": "text-decoration underline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      },
      "source": "vim-snippets/snippets"
    },
    "d19d5972-5e41-35d4-b34a-83c94a2b6d91": {
      "content": "elseif (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "elseif(condition) { ... }",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1a26dbe-92d0-3783-b8f7-fd887d8dffc5": {
      "content": "import React from 'react'\nimport { View, Text } from 'react-native'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeFunctionalComponent",
      "matches": {
        "rnf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d1a4a203-94e0-3f9c-8ea5-6994983395af": {
      "content": "[Test]\npublic void ${1:#:Name}Test() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1a744a4-1b7e-390c-b76a-89d25cbb2ca4": {
      "content": "<typeparamref name=\"${1:#:name}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<typeparamref name=\"\"/>",
      "matches": {
        "typeparamref": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1a85bf1-b6a2-3898-a0ce-8156a15611cd": {
      "content": "# given: ${1}\n# when: ${2}\n# then: ${3}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tgwt": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1a8eb73-1952-3b76-a972-4244b15ca57a": {
      "content": "throw new (\"${1:Exception()}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1af29a6-32c8-33af-abf1-b3d819ebfd1a": {
      "content": "\\begin{math}\n\t${1:TARGET}\n\\end{math}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{math} \\math": true,
        "math": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1b0ff13-a96c-3f10-8e5e-d5d36c7b385d": {
      "content": "proc ${1:#:name}(${2}) =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procg": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1b1c7a5-ad81-3faf-b596-5597a11355dc": {
      "content": "_.sortedIndexBy(${array}, ${value}, ${iteratee})",
      "doc": "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.sortedIndexBy(objects, { 'x': 4 }, 'x');\n// => 0\n\nThis method is like `_.sortedIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindexby",
      "matches": {
        "lodash sortedindexby": true
      },
      "source": "javascript/lodash"
    },
    "d1b1f6f1-9c76-3932-920a-14c890bb0233": {
      "content": "fmt.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println(...)",
      "matches": {
        "fn": true
      },
      "source": "gosnippets/snippets"
    },
    "d1b487f5-665d-3d41-8d54-8db75752eef3": {
      "content": "assert_redirected_to ${10:${2:model}s_path}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (path plural)",
      "matches": {
        "artpp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1b9faac-6987-3b51-a78d-32be9f935320": {
      "content": "{% static \"${VISUAL}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1bb4674-34a0-3665-9387-22c5388b9181": {
      "content": "_.findIndex(${array}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.findIndex(users, function(o) { return o.user == 'barney'; });\n// => 0\n\n// The `_.matches` iteratee shorthand.\n_.findIndex(users, { 'user': 'fred', 'active': false });\n// => 1\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findIndex(users, ['active', false]);\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.findIndex(users, 'active');\n// => 2\n\nThis method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for instead of the element itself.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findindex",
      "matches": {
        "lodash findindex": true
      },
      "source": "javascript/lodash"
    },
    "d1bcb3bf-c1a1-3866-b7ff-d089c80eebb6": {
      "content": "${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parentsu": true
      },
      "source": "snippets/javascript"
    },
    "d1c1d892-0d77-38cd-b207-e42e42c387c9": {
      "content": "expect(${1:target}).toBeNull()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be null (coffee)",
      "matches": {
        "en": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1c26747-a15b-3fa5-a207-5086c804f638": {
      "content": "if ${1} then\n\t${2}\nelif ${3} then\n\t${4}\nelse\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1c5388a-c9c1-3025-ba51-80db7efdd2e2": {
      "content": "{% url ${1} as ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1d346ce-d39d-31e4-bf79-e34aa26b91e3": {
      "content": "array.of()",
      "doc": "array.of(type: Schema): Schema\n\nSpecify the schema of array elements. of() is optional and when omitted the array schema will\nnot validate its contents.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-of",
      "matches": {
        "yup array of": true
      },
      "source": "javascript/yup"
    },
    "d1d398bb-c8dc-34d3-819f-3108b3c9fd38": {
      "content": "Page Should Not Contain Radio Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Radio Button",
      "matches": {
        "psncrb": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1da6f78-106b-3bcc-b51a-4e335b4a9beb": {
      "content": "\\begin{document}\n\t${1:TARGET}\n\\end{document}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{document} \\document": true,
        "document": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d1eb9734-8459-3aeb-b8db-3325f9edb720": {
      "content": "@media ${1:print} {\n\t${2:${VISUAL}}\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media mediatype { }",
      "matches": {
        "@m": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1ef20d7-b094-3973-9fa7-8c980f981ad6": {
      "content": "border-style: dashed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "d1f326d2-cbe9-3c93-940d-60e1a3e140d0": {
      "content": "@else",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@else directive",
      "matches": {
        "else": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d1f69006-6510-37e0-829a-a33e337a3218": {
      "content": "_.pull(${array}, ${values})",
      "doc": "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pull(array, 'a', 'c');\nconsole.log(array);\n// => ['b', 'b']\n\nRemoves all given values from `array` using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\nto remove elements from an array by predicate.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pull",
      "matches": {
        "lodash pull": true
      },
      "source": "javascript/lodash"
    },
    "d1fd914c-65f4-33de-b307-3d7b3da5043d": {
      "content": "_.lowerCase(${string})",
      "doc": "_.lowerCase('--Foo-Bar--');\n// => 'foo bar'\n\n_.lowerCase('fooBar');\n// => 'foo bar'\n\n_.lowerCase('__FOO_BAR__');\n// => 'foo bar'\n\nConverts `string`, as space separated words, to lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lowercase",
      "matches": {
        "lodash lowercase": true
      },
      "source": "javascript/lodash"
    },
    "d2132d3d-34fd-38dc-9a13-80a8d3ddb368": {
      "content": "my $fh = open \"${1:filename}\", ${2::r|:w|:a};\n${3:# actions};\n$fh.close;",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "open": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2157a6e-ea13-31f8-a5da-8c045b88a9b0": {
      "content": "(define/match (${1})\n  [(${2}) ${3}]\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define/match",
      "matches": {
        "defm": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2184272-eb52-3a79-9d9e-f514b762bff7": {
      "content": "has_one",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_one",
      "matches": {
        "ho": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d21ceed4-8ade-3d11-96b7-56b47d1f3238": {
      "content": "textSize(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textSize": true
      },
      "source": "vim-snippets/snippets"
    },
    "d21cf9cd-43fd-3e26-a858-8340fb8f1a76": {
      "content": "unhex(${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unhex": true
      },
      "source": "vim-snippets/snippets"
    },
    "d21ddf09-d245-30a1-a598-f029e4c72525": {
      "content": "${1:obj}.trigger('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trig": true
      },
      "source": "snippets/coffee"
    },
    "d22154ad-83f9-360c-b939-0cfb7dc42695": {
      "content": "after ${1:ms} ${0:#do something}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "af": true
      },
      "source": "vim-snippets/snippets"
    },
    "d224ea1a-6e51-34b9-8105-ed7ae4206a64": {
      "content": "filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=${1:100});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "d225cbd4-aaaf-3188-9880-af345bb61250": {
      "content": "$routeProvider.when '${1:url}',\n\ttemplateUrl: '${2:templateUrl}'\n\tcontroller: '${3:controller}'\n\tresolve:\n\t\t${4}\n${5}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngrwr": true
      },
      "source": "snippets/coffee"
    },
    "d240cdd1-df9c-392a-a6e0-136ede42d227": {
      "content": "bottom: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d244af75-bb79-3dc4-85fa-816dbc6a2470": {
      "content": "border-left-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bls": true,
        "border-left-style": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d257a2f2-06e9-3a27-98eb-8e2f3758b478": {
      "content": "for ${1} in ${2} do\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "d25a6193-c7f5-3cd2-b4a8-e0b8992fc3c5": {
      "content": "<%= cond do %>\n\t<% ${1} -> %>\n\t\t${2:${VISUAL}}\n\t<% true -> %>\n\t\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2695b47-0b94-3443-9c0f-ff2094105a52": {
      "content": "${1:command} | Where-Object -FilterScript { $PSItem.${2:property} -${3:operator} '${4:expression}' } | Sort-Object -Property ${5:sortproperty}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtersort": true
      },
      "source": "vim-snippets/snippets"
    },
    "d26c0b74-c4d4-3dcb-bd55-32cd77829cb7": {
      "content": "for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "d271d65f-d457-3352-a80b-2e25a2086f9f": {
      "content": "grid-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      },
      "source": "vim-snippets/snippets"
    },
    "d273d28f-3a37-3ba7-b732-600f6d9d2c3b": {
      "content": "_.noConflict()",
      "doc": "var lodash = _.noConflict();\n\nReverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-noconflict",
      "matches": {
        "lodash noconflict": true
      },
      "source": "javascript/lodash"
    },
    "d27aca5c-1c75-3381-8486-9bde07978472": {
      "content": "describe.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\ttest(`returns \\${expected}`, () => {\n\t\t\t${4:expect(double(input)).toBe(expected);}\n\t\t});\n\t}\n);",
      "doc": "creates a describe block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-each",
      "matches": {
        "desce": true,
        "jest describe each": true
      },
      "source": "javascript/jest"
    },
    "d28e3d56-ce9c-3f67-841d-30fa3a54f369": {
      "content": "border-corner-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2929638-7d19-383d-974e-bfa1d9a9c5df": {
      "content": "${1:f} = (${2:args}) ->\n  ${0:TARGET}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d2a93d48-fd2b-348d-8b08-5ed43569f9aa": {
      "content": "${1:obj}.prepend('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      },
      "source": "snippets/javascript"
    },
    "d2ad609b-a09d-3767-8150-deb207c95738": {
      "content": "{{- if and .Values.persistence.enabled .Values.persistence.$1.hostPath (not\n.Values.persistence.$1.existingClaim) -}}\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: {{ template \"${2:chartName}.fullname\" . }}-$1\nspec:\n  accessModes:\n\t- {{ .Values.persistence.$1.accessMode | quote }}\n  capacity:\n\tstorage: {{ .Values.persistence.$1.size | quote }}\n  hostPath:\n\tpath: {{ .Values.persistence.${1:value_key}.hostPath | quote }}\n{{- end -}}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pvc_hostpath_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2b0387e-05a7-3548-98a3-cada3c0084d5": {
      "content": "\"puppet://puppet/${1:module name}/${0:file name}\"",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2ba7f0d-9ca3-3414-8fbf-1d50ecfdecdd": {
      "content": "expect(${1:target}).toBeHidden()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be hidden (coffee)",
      "matches": {
        "eh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d2bc27ed-23f0-3bac-b589-7e961908534c": {
      "content": "<ol type=\"A\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "olA": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d2c312a6-fbe2-3dd6-84c3-202f1941909c": {
      "content": "=begin rdoc\n\t${0}\n=end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=b": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2d7ea0b-6dcb-3887-bb73-35c16d859982": {
      "content": "[${1}](${2}){\n\t${3}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lld": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2d9d48b-4460-3665-83da-4a59b0983cae": {
      "content": "background-image: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backimage": true,
        "bi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d2e4bef5-70c5-3e55-866a-cf42a80bc51d": {
      "content": "byte",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "byte",
      "matches": {
        "bt": true
      },
      "source": "vim-snippets/snippets"
    },
    "d2e534df-8cd3-38c6-947c-ee5e6dfd978b": {
      "content": "{@code ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{code": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d2e88e20-efc3-3f78-a5a4-9feb3969192f": {
      "content": "{| ${0} |}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arec": true
      },
      "source": "vim-snippets/snippets"
    },
    "d302064a-0016-329c-b30c-5e14d11008f0": {
      "content": "border-top-right-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "d303e455-7d35-3199-8d9e-cfb479768bbf": {
      "content": "@safe pure nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@safe pure nothrow (spn)",
      "matches": {
        "spn": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d313fa1d-e7b3-3e7b-8edc-19e553e5d7ad": {
      "content": "module ${1:M} (${2:Arg} : ${3:ARG}) : ${4:SIG} = struct\n\t${5:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "define functor - with signature",
      "matches": {
        "Func": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d31b0b2b-3b9a-31c6-9c27-a678f304a376": {
      "content": "table-layout auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d31fb306-ba79-3778-ac16-766958197b1d": {
      "content": "std.stdio",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "io": true
      },
      "source": "vim-snippets/snippets"
    },
    "d323ebe8-889b-3b7d-9c12-0f5673171a4f": {
      "content": "border-top-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      },
      "source": "vim-snippets/snippets"
    },
    "d329f291-d2ed-3b81-829e-a96582d0b5ec": {
      "content": "Yii::app()->request->cookies['${0}']",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yco": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3370c35-5a84-3a43-9156-2fd25c2f632d": {
      "content": "|${1:title}|${2:title}|\n|---|---|\n|${3:value}|${4:value}${5:TARGET}|",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "table template",
      "matches": {
        "table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d337327b-a40c-375d-b111-d3f6c0ca71fe": {
      "content": "border-top: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "d33c3530-fbf3-3070-9dc8-cb3dd6d27ff7": {
      "content": "state = {\n\t$1\n}\n",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-empty-state",
      "matches": {
        "est": true,
        "react empty state": true
      },
      "source": "javascript/react"
    },
    "d34505e6-8468-3d5a-8a11-51692380d9a6": {
      "content": "assertNotSame(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asns": true
      },
      "source": "vim-snippets/snippets"
    },
    "d34e9392-351d-3cf2-aa9a-419374da7c79": {
      "content": "_.chain()",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// A sequence without explicit chaining.\n_(users).head();\n// => { 'user': 'barney', 'age': 36 }\n\n// A sequence with explicit chaining.\n_(users)\n  .chain()\n  .head()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }\n\nCreates a `lodash` wrapper instance with explicit method chain sequences enabled.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-chain",
      "matches": {
        "lodash chain": true
      },
      "source": "javascript/lodash"
    },
    "d355542a-de93-3af6-b4f7-88fba4905994": {
      "content": "-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      },
      "source": "vim-snippets/snippets"
    },
    "d358db1c-7833-3fa2-a283-752070a3d4e0": {
      "content": "align-content: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "d35dc13b-6dba-3d1d-95ba-3f848d1451e6": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-local",
      "matches": {
        "svelte transition local": true,
        "svtl": true
      },
      "source": "javascript/svelte"
    },
    "d365e92f-20ce-31c7-90df-5ab5e16f32d1": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d3710b16-3e16-3a55-9c02-3f1d9d1d9dfb": {
      "content": "def_delegator :${1:@del_obj}, :${2:del_meth}, :${0:new_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defd": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3727cec-d3d9-3f5f-82e0-3765bd821a41": {
      "content": "printf(\"${1:%s}\\n\"${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3786f8b-e5f1-375e-8e6d-8f0d3941d7ff": {
      "content": "proc ${1:function_name} {${2:args}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pro": true
      },
      "source": "vim-snippets/snippets"
    },
    "d37b047c-e47f-3dc4-8f19-c2828842d73a": {
      "content": ".PHONY: clean, mrproper\nCC = gcc\nCFLAGS = -g -Wall\nall: $1\n%.o: %.c\n\t$(CC) $(CFLAGS) -c -o $@ $<\n${1:out}: $1.o\n\t$(CC) $(CFLAGS) -o $@ $+\nclean:\n\trm -f *.o core.*\nmrproper: clean\n\trm -f $1",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "base": true
      },
      "source": "vim-snippets/snippets"
    },
    "d37fab6d-0fe1-3c41-a9d2-2fb4a08ad214": {
      "content": "<area shape=\"poly\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "d380426f-c9b6-367a-adac-793804ad64ca": {
      "content": "const {${2:propertyName}} = ${1:objectToDestruct};",
      "doc": "Creates and assigns a local variable using object destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingObject",
      "matches": {
        "dob": true
      },
      "source": "vscode-javascript/snippets"
    },
    "d38ad9b8-36db-3b41-88ff-d5dcfa0fc4e0": {
      "content": "font-weight: ${1:normal/bold};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-weight: weight (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d39ffbb5-2226-334d-be2b-74ead1803503": {
      "content": "setTimeout(() => {\n\t${2}\n}, ${1:delayInms})\n",
      "doc": "Executes the given function after the specified delay in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setTimeOut",
      "matches": {
        "sto": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d3a0052e-9306-3fec-8dc5-8f373d18d3c7": {
      "content": "go func(${1}) {\n\t${3:/* TODO */}\n}(${2})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go func(...) { ... }(...)",
      "matches": {
        "gof": true
      },
      "source": "gosnippets/snippets"
    },
    "d3a3fc5c-dde1-3af1-87af-0c0571a53012": {
      "content": "border-style: dot-dot-dash;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3a49577-a0fe-3c42-81dc-60acdc38b398": {
      "content": "${fn:endsWith(${1:string}, ${0:suffix})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "endswith": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3a6197c-ca6b-3423-9142-e5a74f3d8790": {
      "content": "| pluralize: '${1:item}', '${2:items}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3bcee0c-ee12-3518-b7ac-327c86b23efe": {
      "content": "loadImage(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadImage": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3d4dfaf-36b1-399b-8778-cfea951b382c": {
      "content": "${1:Rails.}logger.debug { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.debug",
      "matches": {
        "logd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d3d61cd2-4c6c-3644-81e6-53cd2b4ae912": {
      "content": "def index\n\t@${1:model_class_name} = ${2:ModelClassName}.all\n\trespond_to do |format|\n\t\tformat.html # index.html.erb\n\t\tformat.json  { render json: @$1s }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defindex": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3d8c568-bbe5-32e0-bc84-64e37e57e30e": {
      "content": "@extend ${0:TARGET};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@extend ...;",
      "matches": {
        "extend": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d3dee919-ade0-33cc-9c22-73db6861aece": {
      "content": "$${1:#:retVal} = (${2:#:condition}) ? ${3:#:a} : ${4:#:b};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if?": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d3e61341-5f5d-3af1-8885-cf28a868b6d1": {
      "content": "in {\n\t${1}\n} out {\n\t${2}\n} body {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3ebd076-0831-3baf-bbb9-41ccb03bdc98": {
      "content": "content: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      },
      "source": "vim-snippets/snippets"
    },
    "d3ed0898-8ec9-3e1d-b0b1-05124d49df36": {
      "content": "#if ${1}\n${0}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d3faa19f-b7b7-3a71-a032-24e7b68e7f5b": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n\t\tstage('${3:Test}'){\n\t\t\tsteps {\n\t\t\t\tsh '${4:make check}'\n\t\t\t\tjunit '${5:reports/**/*.xml}'\n\t\t\t}\n\t\t}\n\t\tstage('${6:Deploy}') {\n\t\t\tsteps {\n\t\t\t\tsh '${7:make publish}'\n\t\t\t}\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipeline_sample": true
      },
      "source": "vim-snippets/snippets"
    },
    "d40570a6-25d1-313d-bbb7-e639f2668419": {
      "content": "<%page args=\"${0:}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "page": true
      },
      "source": "vim-snippets/snippets"
    },
    "d410a659-4db8-3c6c-ba30-25cfcb8a7a1e": {
      "content": "let ${1:name} = ${2:value};",
      "doc": "let assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "let-assignment",
      "matches": {
        "base let": true
      },
      "source": "javascript/base"
    },
    "d41aac7c-dd23-3269-9019-8d91b4cf8a44": {
      "content": "visibility visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      },
      "source": "vim-snippets/snippets"
    },
    "d41ca5f6-bd5e-3447-ad53-29693466def1": {
      "content": "cos(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cos": true
      },
      "source": "vim-snippets/snippets"
    },
    "d425534a-b2f2-33b4-a5e3-c2602b3098b3": {
      "content": "elif ${1:condition}\n\t${0}",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "d42c3860-6315-3c89-816f-e7ac77a5a6ea": {
      "content": "v-text=\"${1:msg}\"",
      "doc": "Expects: string. Updates the element’s textContent.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-text",
      "matches": {
        "vtext": true,
        "vue v-text": true
      },
      "source": "javascript/vue"
    },
    "d42ddbcf-032d-3496-90d8-dc18105669b3": {
      "content": ":first-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d43a7f96-2687-32f5-8998-53e02ef450ec": {
      "content": "{% embed '${1:template}' %}\n\t{% block ${2} %}\n\t\t${0:TARGET}\n\t{% endblock %}\n{% endembed %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% embed ... %} ... {% endembed %}",
      "matches": {
        "embed": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d442fb63-84c4-3a75-a73d-83b16ba84c22": {
      "content": "println('${1:#:name}, $1)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "println('name, name)",
      "matches": {
        "pn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d448ce06-974e-3eca-a4ec-81c38c0c3c62": {
      "content": "__${1:bold}__",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "__": true
      },
      "source": "vim-snippets/snippets"
    },
    "d44ec3d4-688d-31ff-a7ad-6de94b8f35ad": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "d454699d-5f44-34b1-99d3-dd6151e1027d": {
      "content": "require('dotenv').config({ debug: ${1|true,false|} })",
      "doc": "You may turn on logging to help debug why certain keys or values are not being set as you expect.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-debug",
      "matches": {
        "dotenv debug": true
      },
      "source": "javascript/dotenv"
    },
    "d4562c6d-69e5-342a-b41a-e16c38c6df75": {
      "content": "\\begin{aligned}\n        ${1:TARGET}\n\\end{aligned}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{aligned} \\aligned": true,
        "aligned": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d456cbc7-8e80-3e5b-b17c-bf305ce12234": {
      "content": "/** @var ${3:string} */\n${1:public} $${2};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "att": true
      },
      "source": "vim-snippets/snippets"
    },
    "d45ecdba-5bad-3b7d-919b-aa86a7ad0b79": {
      "content": "filter!(${1:p})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/snippets"
    },
    "d45f217a-a18a-35fa-93ad-3197e3684b95": {
      "content": "<p>${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "d45fc29c-e43a-383f-bb5f-de9c460b7801": {
      "content": "function ${1} return ${2} is\n\t(${3});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "expression function",
      "matches": {
        "function_expr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d4658ba2-f311-3948-ab61-6d5c69fa96e5": {
      "content": "cy.request({\n\tmethod: '${1:METHOD}',\n\turl: '${2:url}',\n\tbody: ${3:body}\n});",
      "doc": "Make an HTTP request.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-request",
      "matches": {
        "cypress request": true
      },
      "source": "javascript/cypress"
    },
    "d46c2ade-0d82-30ce-82af-1f359ffdacec": {
      "content": "outline-offset ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      },
      "source": "vim-snippets/snippets"
    },
    "d46d733b-c3be-3de4-be51-737f72776807": {
      "content": "const ${1:ref} = useRef(${2:initialValue})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useRef",
      "matches": {
        "useRef": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d47433a1-50bf-33d2-9357-99857fab99b7": {
      "content": "this.${1:methodName} = this.${1:methodName}.bind(this)$0",
      "doc": "Binds this to a method",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-bind-this",
      "matches": {
        "bnd": true,
        "react bind this": true
      },
      "source": "javascript/react"
    },
    "d47d22c6-e649-3454-a29f-ad341303f6ed": {
      "content": "package ${1:package}{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4827272-6cf4-3aa2-b47d-0a907ac2bf85": {
      "content": "assert.equal ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ae": true
      },
      "source": "vim-snippets/snippets"
    },
    "d488642f-e98a-3aec-b01f-6faab46b0894": {
      "content": "<code>${0}</code>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "code": true
      },
      "source": "vim-snippets/snippets"
    },
    "d48aa167-4989-307c-8049-7028cea1e291": {
      "content": "require('./${1:module}');",
      "doc": "require local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-local",
      "matches": {
        "base require local": true
      },
      "source": "javascript/base"
    },
    "d48b04d8-b934-355f-8bc5-68af56b21468": {
      "content": "set xrange [${1:*}:${2:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set xrange [X1:X2]",
      "matches": {
        "xrange": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d491488b-9d5b-3686-a745-d064f7c7eb95": {
      "content": "yup.addMethod()",
      "doc": "yup.addMethod(schemaType: Schema, name: string, method: ()=> Schema): void\n\nAdds a new method to the core schema types. A friendlier convenience method for schemaType.prototype[name] = method.yup.addMethod(yup.date, \"format\", function(formats, parseStrict) {\n  return this.transform(function(value, originalValue) {\n    if (this.isType(value)) return value;\n\n    value = Moment(originalValue, formats, parseStrict);\n\n    return value.isValid() ? value.toDate() : new Date(\"\");\n  });\n});\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-add-method",
      "matches": {
        "yup addmethod": true
      },
      "source": "javascript/yup"
    },
    "d494457c-8f9a-3147-bc4a-2c4d585795e2": {
      "content": "number.positive()",
      "doc": "number.positive(message?: string | function): Schema\n\nValue must be a positive number.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-positive",
      "matches": {
        "yup number positive": true
      },
      "source": "javascript/yup"
    },
    "d49b2db8-9f5c-38e1-8366-40dcf877c1d6": {
      "content": "Url:autolink('${1:string}');",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_autolink": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4a865f6-13a1-3901-8bb3-9e89d440b6af": {
      "content": "# Client App\nFROM johnpapa/angular-cli as client-app\nLABEL authors=\"${1:John Papa}\"\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --silent\nCOPY . .\nRUN ng build --prod\n\n# Node server\nFROM ${2:node:12-alpine} as node-server\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --production --silent && mv node_modules ../\nCOPY ${3:server.js} .\nCOPY ${4:/server} /usr/src/app/server\n\n# Final image\nFROM ${2:node:12-alpine}\nWORKDIR /usr/src/app\nCOPY --from=node-server /usr/src /usr/src\nCOPY --from=client-app /usr/src/app/dist ./\nEXPOSE ${5:3000}\n# CMD [\"node\", \"server.js\"]\nCMD [\"npm\", \"start\"]\n$0",
      "doc": "Multi-stage Node and Angular Dockerfile",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "multi-stage-node-and-angular-dockerfile",
      "matches": {
        "angular multi-stage node and dockerfile": true,
        "docker-angular-node-multi-stage": true
      },
      "source": "javascript/angular"
    },
    "d4acd659-e273-369e-ba77-32cfcda086d1": {
      "content": "order('${0:field} DESC')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "od": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4afd32b-447f-38e2-86c4-0eed83e369b9": {
      "content": "on:${1:eventname}={${2:handler}}",
      "doc": "on event",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event",
      "matches": {
        "svelte on event": true,
        "svon": true
      },
      "source": "javascript/svelte"
    },
    "d4affab4-4f11-337d-a235-7e8bb47a1078": {
      "content": "text-justify: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4b047be-245d-3afb-890d-b416d3756711": {
      "content": "JSON.stringify ${0:object}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsons": true
      },
      "source": "snippets/coffee"
    },
    "d4b1f357-fb30-374f-963c-40bfe00a07ed": {
      "content": "_.defer(${func}, ${args})",
      "doc": "_.defer(function(text) {\n  console.log(text);\n}, 'deferred');\n// => Logs 'deferred' after one millisecond.\n\nDefers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defer",
      "matches": {
        "lodash defer": true
      },
      "source": "javascript/lodash"
    },
    "d4b2bd91-7b8e-3a8f-977c-414cc78923c6": {
      "content": "${1:FIELDNAME} = models.CommaSeparatedIntegerField(max_length=${2}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comma": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4c79e4c-3952-377c-a55d-4a93dfa30467": {
      "content": "Object.assign(${1:dest}, ${2:source})",
      "doc": "Object.assign",
      "filetype": "base",
      "grammar": "lsp",
      "label": "object-assign",
      "matches": {
        "base object assign": true
      },
      "source": "javascript/base"
    },
    "d4d64f87-9b0d-344e-853d-8d09c5495a6e": {
      "content": "render text: \"${1:text to render...}\", layout: ${2:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,layout => true) (rtlt)",
      "matches": {
        "rtlt": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d4d66b3d-e6fd-328a-b8c1-faff011c7b6c": {
      "content": "margin-right: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4d8a0b4-e021-3f73-b194-31ab4e00637e": {
      "content": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\n  return filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "customlist complete function",
      "matches": {
        "customlist": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d4dd1d64-8e49-3e7a-a4e9-594f65a905a9": {
      "content": "updated () {\n\t${0};\n},",
      "doc": "updated lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle updated",
      "matches": {
        "vupdated": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "d4e4ba70-56c3-3583-8ece-f3e0403cd869": {
      "content": "overflow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4edb355-33cf-3815-9244-bc3751e57970": {
      "content": "this.${1:methodName} = this.${1:methodName}.bind(this)$0",
      "doc": "Binds this to a method",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "bindThis",
      "matches": {
        "bnd": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d4f33750-c1ff-3ccd-8014-361b9f236b2a": {
      "content": "foreach_reverse(${1:i}, ${2:elem}; ${3:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "feri": true
      },
      "source": "vim-snippets/snippets"
    },
    "d4f44337-95b8-315d-b451-e141ea8a35e4": {
      "content": "=head1 NAME\n${1:ClassName} - ${2:ShortDesc}\n=head1 SYNOPSIS\n  use $1;\n  ${3:# synopsis...}\n=head1 DESCRIPTION\n${0:# longer description...}\n=head1 INTERFACE\n=head1 DEPENDENCIES\n=head1 SEE ALSO",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppod": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5024c86-a82a-36db-b930-761a585fd142": {
      "content": "if ${1} {\n\t${2}\n}\nelse {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "d503febc-c204-3a27-a3e9-8c280042b411": {
      "content": "dictsortreversed:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      },
      "source": "vim-snippets/snippets"
    },
    "d50af190-ab71-33cd-bfc1-77b69dc5c17a": {
      "content": "_.isSet(${value})",
      "doc": "_.isSet(new Set);\n// => true\n\n_.isSet(new WeakSet);\n// => false\n\nChecks if `value` is classified as a `Set` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isset",
      "matches": {
        "lodash isset": true
      },
      "source": "javascript/lodash"
    },
    "d50e0e37-d9e7-3d3e-9ba0-8f157ef42d3a": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxf": true
      },
      "source": "vim-snippets/snippets"
    },
    "d50fb8c0-8eb2-3e41-9159-b0fb34f52ae3": {
      "content": "text-emphasis: dot",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5124875-d37f-3e83-b0fb-9b4dfb03af88": {
      "content": "foreach ($${1:variable} as $${2:value}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "foreach ($var as $value) { .. }",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/snippets"
    },
    "d51965f0-8ac8-3843-99b0-caaef9ca3d31": {
      "content": "_.sortBy(${collection}, ${iteratees})",
      "doc": "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.sortBy(users, [function(o) { return o.user; }]);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\nCreates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection thru each iteratee. This method\nperforms a stable sort, that is, it preserves the original sort order of\nequal elements. The iteratees are invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortby",
      "matches": {
        "lodash sortby": true
      },
      "source": "javascript/lodash"
    },
    "d523ae8e-30fd-3eb2-9519-798cd5f4b2b6": {
      "content": "componentWillReceiveProps(nextProps) {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d5244129-1aeb-3d0b-9835-fed57d75ec59": {
      "content": "echo '<pre>'; var_dump(${0}); echo '</pre>';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pd": true
      },
      "source": "vim-snippets/snippets"
    },
    "d52f3381-77d6-3e0f-8ba1-47b3aed0f864": {
      "content": "white-space normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5349675-ca36-3758-af35-91ce9411cd9e": {
      "content": "{% codeblock ${1:title} lang:${2:language} ${3:URL} ${4:link_text} %}\n${0:code_snippet}\n{% endcodeblock %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "codeblock-full": true
      },
      "source": "vim-snippets/snippets"
    },
    "d53895cb-c1ae-3eb7-a628-3c1078873bdb": {
      "content": "background-size: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5441ca6-a162-32fd-b979-fff27d6f7239": {
      "content": "while ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "d55ad7fd-793b-372c-a472-c7216de0aaf5": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      },
      "source": "vscode-react/snippets"
    },
    "d5628c25-dd83-3df8-bb78-06b72dafd566": {
      "content": "dist(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "dist": true
      },
      "source": "vim-snippets/snippets"
    },
    "d578c4be-9a46-3e30-aaaa-0965b556a811": {
      "content": "__device__ ${1:int} ${2:foo}(${3:void}) {\n\t${0:// TODO: Implement}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Device function definition",
      "matches": {
        "dev": true
      },
      "source": "vim-snippets/snippets"
    },
    "d57b2c1d-b0de-3ae5-86d9-b6d2b1002cec": {
      "content": "else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if () {}",
      "matches": {
        "elif": true,
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d588287a-260e-3e13-a7f6-9d4825fc0e43": {
      "content": "mean(${1:x}${2:, na.rm=${3:FALSE}})",
      "doc": "Mean",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "mea",
      "matches": {
        "mean": true
      },
      "source": "vscode-R/snippets"
    },
    "d58e1450-bac8-3bc1-af4b-9cdbd33a60dc": {
      "content": "&#x21E7;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shift": true
      },
      "source": "vim-snippets/snippets"
    },
    "d58fdf38-520d-326b-829c-110c1252e9a8": {
      "content": "unsafe\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unsafe",
      "matches": {
        "unsafe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d5948834-aded-3bf5-848e-62b8b433a8ef": {
      "content": "for (let ${1:i} = 0, ${2:len} = ${3:Things.length}; $1 < $2; $1++) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (...) {...}",
      "matches": {
        "for": true
      },
      "source": "snippets/javascript"
    },
    "d594cbb0-32ae-36fe-8db9-ac0a28cace6a": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/snippets"
    },
    "d59a2f65-53c6-38f9-8776-6c6d3dd40b34": {
      "content": "pixels[${0:index}]",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pixels": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5a1c458-3455-3a2a-b354-ca2f89a7dbab": {
      "content": "grid-template-rows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5a7c4a4-7fa0-333d-827f-f0cb750f0130": {
      "content": "/**\n * ${1:${VISUAL}}$0\n */",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "A JSDoc comment",
      "matches": {
        "/*": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d5bd5b03-8324-3264-9758-3e4c436b6f0c": {
      "content": "vertical-align: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5ea01ce-e2d4-3178-bdea-ec5e303571a4": {
      "content": "jasmine.any($1)",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "any (coffee)",
      "matches": {
        "any": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d5ed61b5-2635-3563-993c-3ea231ebb52e": {
      "content": "{# ${0:comment} #}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5f11f0c-7a82-36bc-a681-15c46d28c5da": {
      "content": "require_once '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req1": true
      },
      "source": "vim-snippets/snippets"
    },
    "d5f24975-7f49-3deb-9ae1-dfaa63509bcd": {
      "content": "include Comparable\ndef <=>(other)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Comp": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6011339-c394-3743-9769-c831e2106361": {
      "content": "border-top-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "d601894a-6c98-3eb3-ba3e-875ed6baff6d": {
      "content": "java.util.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.u": true
      },
      "source": "vim-snippets/snippets"
    },
    "d60417dc-ee28-3765-bddc-8f281148c4c3": {
      "content": "if ${1:TARGET} then ${2} else ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "if..then..else - oneline",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d6087edd-209f-35c7-a07e-63e889c1438c": {
      "content": "wont_match /${0:regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wm": true
      },
      "source": "vim-snippets/snippets"
    },
    "d612ceff-0255-35d6-9cca-b21e8fc68c56": {
      "content": "border-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "d61380b1-a2b0-35de-92ad-e6ce656514c0": {
      "content": "<?php if ($${1:var}): ?>\n\t${0:${VISUAL}}\n<?php endif ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?i": true
      },
      "source": "vim-snippets/snippets"
    },
    "d61434e2-3456-3da0-a145-60a690a951e3": {
      "content": "border-right ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6197df1-9ee1-311e-b87c-ccc741a9cfb7": {
      "content": "border-style: ridge",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "d628bbfc-6dc1-392d-9445-0778f0e3991e": {
      "content": "when ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "d63307bb-5359-3d62-af49-ee86067388e6": {
      "content": "import ${1:${2:Data}.${3:Text}} (${4})${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Selective import",
      "matches": {
        "imp2": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d6330f56-8b09-374f-9f4d-7816e882c8bf": {
      "content": "class:${1:name}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class-short",
      "matches": {
        "svcls": true,
        "svelte class short": true
      },
      "source": "javascript/svelte"
    },
    "d63f3f2f-5950-342b-a66c-933d7eeb0c0f": {
      "content": "gl.glClear(${1:GL.GL_COLOR_BUFFER_BIT}${2: | }${0:GL.GL_DEPTH_BUFFER_BIT});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl clear",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "d641ec0a-6532-300d-9c23-93b334bb93f8": {
      "content": "expect(${1:target}).toEqual(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to equal (js)",
      "matches": {
        "ee": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6420865-4a08-32e4-b6a5-e18727b8c9b0": {
      "content": "border-style: dot-dot-dash",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      },
      "source": "vim-snippets/snippets"
    },
    "d644d99e-c692-3672-8c92-ac22e129906b": {
      "content": "{% macro ${1}(${2}) %}\n\t${0}\n{% endmacro %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig macro",
      "matches": {
        "macro": true
      },
      "source": "vim-snippets/snippets"
    },
    "d648e73f-4ab2-3d6a-aaed-90dc20aec809": {
      "content": "```{${1:language}}\n$0\n```",
      "doc": "Insert code chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert code chunk",
      "matches": {
        "code chunk": true
      },
      "source": "vscode-R/snippets"
    },
    "d64eb279-3dd7-3f68-8609-d03e5bad98db": {
      "content": "<pre>{{${1:model} | json}}</pre>$0",
      "doc": "Angular pre debug | json",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "pre-w-json",
      "matches": {
        "a-prej": true,
        "angular pre json": true
      },
      "source": "javascript/angular"
    },
    "d650508e-9a62-30e6-be97-2e2e4351122b": {
      "content": "visibility: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6522358-91fe-355b-bae9-d04e4750b448": {
      "content": "align-items: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "d654d7a4-d060-3966-b6d4-85b9ba4f4a55": {
      "content": "spyOn(${1:object}, \"${2:method}\").andThrow(${3:exception})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and throw (coffee)",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d6583621-c2cf-38d3-b522-bc1e41505d4d": {
      "content": "_.overSome(${predicates})",
      "doc": "var func = _.overSome([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => true\n\nfunc(NaN);\n// => false\n\nCreates a function that checks if **any** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-oversome",
      "matches": {
        "lodash oversome": true
      },
      "source": "javascript/lodash"
    },
    "d660cf93-a832-3383-aab5-b8e2bba29a5b": {
      "content": "System.out.printf(\"${1}\", ${2});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printf": true,
        "souf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d664ddd6-9dd0-3612-85db-55435dedb2b7": {
      "content": "${1:Listing}~\\\\ref{${2:list}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a listing",
      "matches": {
        "listing": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6654310-7e1b-3310-b170-c0035b90d47e": {
      "content": "${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prevu": true
      },
      "source": "snippets/coffee"
    },
    "d66545c0-1891-3e81-ac94-9f8d0e347853": {
      "content": "drop_table :${1:table}${2: [press tab twice to generate create_table]}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Drop Create Table (mdct)",
      "matches": {
        "mtab": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d66823f3-3d8d-37e9-9e8d-c9572f396dbb": {
      "content": "border-fit: overwrite;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6683979-db95-3ad0-a95c-6563f379a221": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t};\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdata": true
      },
      "source": "vim-snippets/snippets"
    },
    "d66c6516-43bb-3d5f-beff-a57d23217087": {
      "content": "(${1:args}) ->\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "snippets/coffee"
    },
    "d677ea45-e708-3f19-89f4-4d20ba16e6bd": {
      "content": "PropTypes.any,",
      "doc": "Any prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeAny",
      "matches": {
        "ptan": true
      },
      "source": "vscode-react/snippets"
    },
    "d68b89b1-2846-3055-90de-7f5b21c5a1e4": {
      "content": "<xsl:when test=\"${1:test}\">${0}\n</xsl:when>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "d69b71c6-b52a-3f61-ba64-3ddfe482dcfd": {
      "content": "margin-left auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6a4c3ed-a614-37b4-8b1f-c478b963e0e4": {
      "content": "[${1:#:link}](${2:#:url} \"${3:#:title}\")${4}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](url \"title\")",
      "matches": {
        "linkurltitle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d6a90ce0-5475-359f-8f6e-18be7ca104b2": {
      "content": "{% embed \"${1}\" %}\n\t${0}\n{% endembed %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig embed",
      "matches": {
        "embed": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6aa55e7-84c2-3330-a32e-b2bea1e82d10": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6ae4d8b-8bd0-305b-b754-e9c976845006": {
      "content": "assert_rjs :${1:replace}, '${0:dom id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrj": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6b3893d-3446-3159-b435-8729635037b7": {
      "content": "grid-auto-flow: dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6bd41e0-983a-3d52-9ecc-d6ae94dc96cc": {
      "content": "[<${0:TARGET}>]",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "attribute [<..>]",
      "matches": {
        "att": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d6bdef86-2ca8-3a12-8ed2-b6ccf90bd43d": {
      "content": "${1:obj}.map(function (${2:index}, ${3:element}) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "snippets/javascript"
    },
    "d6be0ce5-6740-3989-834a-ec113243c84a": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6c52a60-ef9f-389f-bcac-d85a9184af1a": {
      "content": "mixed.test()",
      "doc": "mixed.test(options: object): Schema\n\nAlternative test(..) signature. options is an object containing some of the following options:Options = {\n  // unique name identifying the test\n  name: string;\n  // test function, determines schema validity\n  test: (value: any) => boolean;\n  // the validation error message\n  message: string;\n  // values passed to message for interpolation\n  params: ?object;\n  // mark the test as exclusive, meaning only one of the same can be active at once\n  exclusive: boolean = false;\n}\nIn the case of mixing exclusive and non-exclusive tests the following logic is used.\nIf a non-exclusive test is added to a schema with an exclusive test of the same name\nthe exclusive test is removed and further tests of the same name will be stacked.If an exclusive test is added to a schema with non-exclusive tests of the same name\nthe previous tests are removed and further tests of the same name will replace each other.let max = 64;\nlet schema = yup.mixed().test({\n  name: \"max\",\n  exclusive: true,\n  params: { max },\n  message: \"${path} must be less than ${max} characters\",\n  test: value => value == null || value.length <= max\n});\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-test",
      "matches": {
        "yup mixed test": true
      },
      "source": "javascript/yup"
    },
    "d6d3c8b8-93bd-3ca2-8150-8adf69290272": {
      "content": "import { connect } from 'react-redux'\n",
      "doc": "Import connect from Redux",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-import-connect",
      "matches": {
        "redux import connect": true
      },
      "source": "javascript/redux"
    },
    "d6d43b8a-aaf0-3279-832b-d4d585341b89": {
      "content": "#[${1:inline}]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[..]",
      "matches": {
        "attr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6d6e524-3ed4-346d-9083-8d13609e3c01": {
      "content": "title=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title=": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6da7c54-a591-339f-a502-7d52f7064f8f": {
      "content": "#!/usr/bin/env python3\n${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python3",
      "matches": {
        "#!": true,
        "shebang": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d6e0d1bb-dad2-30e9-9736-ef615312a34f": {
      "content": "align-content last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6e2f496-f36b-37f6-afc7-07c100d9be74": {
      "content": "${1:obj}.css('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      },
      "source": "snippets/javascript"
    },
    "d6ed74f2-c77e-371e-9292-54d8ad9778f9": {
      "content": "switch(${1:/* variable */})\n{\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switchndef": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6edd4e0-a839-3d76-8693-82cae6fa30a8": {
      "content": "_.fromPairs(${pairs})",
      "doc": "_.fromPairs([['a', 1], ['b', 2]]);\n// => { 'a': 1, 'b': 2 }\n\nThe inverse of `_.toPairs`; this method returns an object composed\nfrom key-value `pairs`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-frompairs",
      "matches": {
        "lodash frompairs": true
      },
      "source": "javascript/lodash"
    },
    "d6f3fd8e-0021-3cc1-972d-064499209800": {
      "content": "font-stretch: extra-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6f56d60-cb05-3e2e-bcb4-4454a27458f8": {
      "content": "${1:obj}.mousedown(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdown": true
      },
      "source": "snippets/javascript"
    },
    "d6f5ebbc-9bc1-3d0f-927b-97abaa88b076": {
      "content": "if ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6f8915e-13ce-37f7-9ab7-4e24956d06ae": {
      "content": "${1:public} void set${3:}(${2:String} ${0:}){\n\tthis.$4 = $4;\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "d6f8f0a5-7534-3082-9fa4-308218e1eafc": {
      "content": "import React, { Component } from 'react';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponent",
      "matches": {
        "rcc": true
      },
      "source": "vscode-react/snippets"
    },
    "d7032e88-8f70-3c37-8be5-13c2a5d37590": {
      "content": "render inline: \"${1:<%= 'hello' %>}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline) (ri)",
      "matches": {
        "ri": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d70d20d7-ab97-391c-b5e5-da7c15c96e9e": {
      "content": "NSMutableArray *${1:#:array} = [NSMutableArray array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d7166b0e-a5c3-38c7-a9d5-beb26238468b": {
      "content": "Buffer${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "buf": true
      },
      "source": "vim-snippets/snippets"
    },
    "d71ea790-30d2-36e7-accd-5cbcaa9a5106": {
      "content": "min(${1:value1}, ${2:value2}${3:, }${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      },
      "source": "vim-snippets/snippets"
    },
    "d72a6fd8-c272-3bfc-aec9-8e623e90f42f": {
      "content": "const ${1:name} = reactive({\n\t${2:count}: ${3:0}\n})",
      "doc": "Set reactive property - Vue Composition API",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3reactive",
      "matches": {
        "vue v3 reactive": true
      },
      "source": "javascript/vue"
    },
    "d72bfa83-cd00-32d8-ab10-2334345d6e6b": {
      "content": "unittest {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      },
      "source": "vim-snippets/snippets"
    },
    "d72e9417-f19e-3d28-bb85-b86371a0ba5f": {
      "content": "${1:void} ${2:function_name}(${3});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fund": true
      },
      "source": "vim-snippets/snippets"
    },
    "d72ef1b5-886a-344e-9e0e-55d3305dd7c7": {
      "content": "@property void ${1:/*member_name*/}(${2:/*type*/} rhs) pure nothrow {${3:$1_} = rhs;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "setter property (set)",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d734722e-8e75-33bf-9210-61cbf82726b9": {
      "content": "background-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d735ec59-a43a-3f9b-a68c-8f54e0965961": {
      "content": "onClipEvent (${1}) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d7468335-40c1-3941-973b-15a578e257f2": {
      "content": "overflow-x: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      },
      "source": "vim-snippets/snippets"
    },
    "d751f71d-427f-348f-b96b-879af66017f7": {
      "content": "connect(${1:mapStateToProps}, ${2:mapDispatchToProps})(<${3:VISUAL}/>);",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      },
      "source": "snippets/javascript"
    },
    "d7638812-b89b-3978-af33-9834a4a62177": {
      "content": "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cz1}, ${4:cx2}, ${5:cy2}, ${6:cz2}, ${7:x}, ${8:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "bezierVertex": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7688455-4ffe-3c2a-9e1c-9631b24b8620": {
      "content": "${fn:split(${1:string}, ${0:delims})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      },
      "source": "vim-snippets/snippets"
    },
    "d775b212-2d05-3d55-9f55-522563434c27": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      },
      "source": "vim-snippets/snippets"
    },
    "d778cdc6-8cd9-3e16-8c44-9621027804f9": {
      "content": "always @(${1:/* sensitive list */}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/snippets"
    },
    "d77e35dd-264a-3e94-81c2-6df222c8944c": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7801eef-4834-3498-b55e-da3449321d61": {
      "content": "${1:obj}.mouseover (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mover": true
      },
      "source": "snippets/coffee"
    },
    "d7889877-914f-390e-bee8-2baae15897f3": {
      "content": "font-weight: bold",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "d78dbbee-ccb7-3d3d-ad03-a616bc0767f6": {
      "content": "time:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d78e6432-1639-391f-8f06-b41d827df04d": {
      "content": "red(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "red": true
      },
      "source": "vim-snippets/snippets"
    },
    "d79355de-57c4-33a1-b150-80e588c9e1b9": {
      "content": "_.escape(${string})",
      "doc": "_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'\n\nConverts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\ncorresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional\ncharacters use a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't need escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value. See\n[Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nWhen working with HTML you should always\n[quote attribute values](http://wonko.com/post/html-escaping) to reduce\nXSS vectors.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-escape",
      "matches": {
        "lodash escape": true
      },
      "source": "javascript/lodash"
    },
    "d798ebc0-89c3-30ea-91aa-9b0dbd2cd4e3": {
      "content": "@describetag :${1:describe tag}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "destag": true
      },
      "source": "vim-snippets/snippets"
    },
    "d79cd52b-6a0a-35c6-a63a-7486f2999f58": {
      "content": "@catch (${1:exception}) {\n\t${0:handler}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@catch": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7aa4619-b610-35a0-83a6-c0169f1d306a": {
      "content": "t.references :${0:model}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tref": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7b016e4-bf4d-3001-be18-85a237556adc": {
      "content": "unloadMovie(${1:#:target});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "um": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d7b6193d-eba0-3e2c-8425-790c5094cbb2": {
      "content": "mixed.notOneOf()",
      "doc": "mixed.notOneOf(arrayOfValues: Array<any>, message?: string | function)\n\nBlacklist a set of values. Values added are automatically removed from any whitelist if they are in it.\nThe ${values} interpolation can be used in the message argument.let schema = yup.mixed().notOneOf([\"jimmy\", 42]);\n\nawait schema.isValid(42); // => false\nawait schema.isValid(new Date()); // => true\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-not-one-of",
      "matches": {
        "yup mixed notoneof": true
      },
      "source": "javascript/yup"
    },
    "d7c41ccf-3ee6-3895-9c25-be7c2df9969a": {
      "content": "if defined(${1:Resource}[\"${2:name}\"]) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifd": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7cc0ec6-12e6-35d8-a655-3b72cd1ba523": {
      "content": "protected ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p|-": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7ce16ae-a7d0-3bcd-986d-30d0df2e36a5": {
      "content": "<input type=\"submit\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:submit": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7cec071-4fed-3084-b4c8-ead8ae033058": {
      "content": "const ${1:results} = await request(\n  ${2:url},\n  ${3:query},\n  ${4:variables}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-request-variables",
      "matches": {
        "graphql-request request variables": true
      },
      "source": "javascript/graphql-request"
    },
    "d7d2f26d-b73f-371a-93d7-2e8dbc16f673": {
      "content": "static $${1} = null;\nif (is_null($$1)){\n\t$$1 = ${2};\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static_var": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7d896d2-3abd-3158-8a06-a06f6b121207": {
      "content": "{\n\t block : '${1:name}',\n\t content: '${2:content}'\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "btc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7da28c4-e396-36c3-b584-4e3f0dcee1b3": {
      "content": "attrs : { ${1:attr} : '${2:val}' },",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7e458b3-3f51-31cb-939a-1f1f56b851e0": {
      "content": "($2 *)malloc(${1:N_MEMBERS} * sizeof(${2:TYPE}));\n${0}\nfree(${3:MEM});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "malloc(size)",
      "matches": {
        "malloc": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d7e4d2e6-444c-3e35-9a63-e68e6e4de325": {
      "content": "Set Global Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Global Variable",
      "matches": {
        "sgv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d7ebfdfb-d1ed-3a56-ab1a-9f50eafca98d": {
      "content": "border-collapse separate",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7eefa38-e0c4-30e2-a063-5cd9005d7307": {
      "content": "_.delay(${func}, ${wait}, ${args})",
      "doc": "_.delay(function(text) {\n  console.log(text);\n}, 1000, 'later');\n// => Logs 'later' after one second.\n\nInvokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-delay",
      "matches": {
        "lodash delay": true
      },
      "source": "javascript/lodash"
    },
    "d7f5a498-654e-31c1-8e81-5e35041edde6": {
      "content": "<keep-alive$1>\n$2\n</keep-alive>$0",
      "doc": "keep-alive element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-keep-alive",
      "matches": {
        "keepalive": true,
        "vue keep-alive": true
      },
      "source": "javascript/vue"
    },
    "d7f89201-1718-30a2-b52e-05fb71f972fb": {
      "content": "do\n{\n\t${VISUAL}$0\n} while (${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "do loop",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d7f92ac9-9af9-3b15-8f11-0bb6c62e51b3": {
      "content": "font-stretch: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7fa19c1-a577-33c0-95d0-c2e61d4ba476": {
      "content": "grid-row-start: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      },
      "source": "vim-snippets/snippets"
    },
    "d7fd3cb6-5ecd-3494-85be-e9fc5b1659d4": {
      "content": "version(${1:Posix}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ver": true
      },
      "source": "vim-snippets/snippets"
    },
    "d81115d4-eb62-3307-a9e6-d65755eb06a0": {
      "content": "switch (${1:expr}) {\n\tcase ${2:value}:\n\t\treturn $0;\n\tdefault:\n\t\treturn;\n}",
      "doc": "switch case",
      "filetype": "base",
      "grammar": "lsp",
      "label": "switch-case",
      "matches": {
        "base switch case": true
      },
      "source": "javascript/base"
    },
    "d81790a7-5243-3cf8-a03b-14fcaebe1f41": {
      "content": "source('${0:file}')",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source": true
      },
      "source": "vim-snippets/snippets"
    },
    "d81f14fb-1e6f-3ac5-a2b4-0a63fed60457": {
      "content": "break",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "break",
      "matches": {
        "br": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8255c84-7473-3494-8a1a-ceec44021b1d": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State) => state.${3:property}\n);",
      "doc": "Creates an NgRx Selector",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Selector",
      "matches": {
        "a-ngrx-create-selector": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "d83c9cc5-bce7-31a3-86c1-b4e9fbfd75c0": {
      "content": "if err != nil {\n\treturn ${1:nil}, err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { return [...], err }",
      "matches": {
        "errn,": true
      },
      "source": "gosnippets/snippets"
    },
    "d841a1a7-88fb-316b-a1ea-dd52c23e8980": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "rt": true
      },
      "source": "vim-snippets/snippets"
    },
    "d84d3672-6e4b-3bcf-ad79-defff39f68c9": {
      "content": "methods: {\n\tbeforeEnter(el) {\n\t\tconsole.log('beforeEnter');\n\t},\n\tenter(el, done) {\n\t\tconsole.log('enter');\n\t\tdone();\n\t},\n\tafterEnter(el) {\n\t\tconsole.log('afterEnter');\n\t},\n\tenterCancelled(el, done) {\n\t\tconsole.log('enterCancelled');\n\t},\n\tbeforeLeave(el) {\n\t\tconsole.log('beforeLeave');\n\t},\n\tleave(el, done) {\n\t\tconsole.log('leave');\n\t\tdone();\n\t},\n\tafterLeave(el) {\n\t\tconsole.log('afterLeave');\n\t},\n\tleaveCancelled(el, done) {\n\t\tconsole.log('leaveCancelled');\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vanim:js:method": true
      },
      "source": "vim-snippets/snippets"
    },
    "d84e076c-b746-3777-8245-28b5efa9a7d2": {
      "content": "vertical-align: bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "d85d5bac-0482-3260-8694-3b00d281f802": {
      "content": "wont_be_within_delta ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbwd": true
      },
      "source": "vim-snippets/snippets"
    },
    "d85daa1d-eca2-327d-918a-2c321eb4cff8": {
      "content": "[${1:link}](http://${2:url} \"${3:title}\")${4}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8614da7-e8ab-3e78-b116-ff1464e8712e": {
      "content": "componentWillUnmount() {\n\t$0\n}\n",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d86a2121-4cb4-3f3a-ac0a-4ee0290d6b93": {
      "content": "format!(\"${1:\\{\\}}\", ${0:TARGET});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "format!",
      "matches": {
        "fm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d86c46bc-7880-3ca8-aaf3-cbf523fed49b": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d875ae64-e4c1-3782-8189-3f2e22a74ceb": {
      "content": "background-color: #${1:DDD};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-hex (background)",
      "matches": {
        "background": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d8762d0a-4ec8-352d-b9e4-1441a774f8a6": {
      "content": "split(\"${1:str}\"${2: , }${0:delimiter});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      },
      "source": "vim-snippets/snippets"
    },
    "d87aee81-c0e2-3077-97c6-5952ded15b73": {
      "content": "@trusted",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trusted": true
      },
      "source": "vim-snippets/snippets"
    },
    "d87d960d-ab7a-3451-835e-31bcb6919a8a": {
      "content": "<%= ${1:f}.text_area :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffta": true
      },
      "source": "vim-snippets/snippets"
    },
    "d886b2a0-e928-39d3-8712-f23835ba8670": {
      "content": "this.setState((state, props) => { return { $0 }})\n",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-set-state-func",
      "matches": {
        "react component setstate func": true,
        "ssf": true
      },
      "source": "javascript/react"
    },
    "d8876759-87fc-385d-834e-2e0357954649": {
      "content": "crossTable <- xtabs(~${1:varNames}, data= ${2:dataName}, exclude = c(${3:exclude}), subset = ${4:subset})\nftable(crossTable)  # print crosstabs\nsummary(crossTable) # chi-square tests",
      "doc": "Crosstabulations for variables in a data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Crosstabs",
      "matches": {
        "xtabs": true
      },
      "source": "vscode-R/snippets"
    },
    "d8891fa9-ac22-30db-bc05-54ac54303b9d": {
      "content": "-ifdef(TEST).\n${1}_test() ->\n\t${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itest": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8901213-2c7f-3984-8fad-1a8f71366715": {
      "content": "@return ${0:param}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@re": true
      },
      "source": "vim-snippets/snippets"
    },
    "d89216e1-a7a1-3bf9-aca3-7dde8a102649": {
      "content": "clear both",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "d894375d-4ce6-3dd0-92b8-008dd3af9fb5": {
      "content": "-webkit-border-image ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      },
      "source": "vim-snippets/snippets"
    },
    "d899ec6f-6ef6-30c8-91fd-fb606278bdf0": {
      "content": "$${1:#:arrayName} = array('${2}' => ${3} ${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d89aa90b-9cdf-3172-94d8-90dc2062b40c": {
      "content": "while (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "while () {}",
      "matches": {
        "while": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d8a1e9f3-6ec2-339a-a664-286d76c497a2": {
      "content": "if (!${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifn": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8ae1f68-8fcf-3516-b4cc-8350d25befb7": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig block",
      "matches": {
        "bl": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8b012d3-9c29-3e2d-aaf7-cfa70f1325b0": {
      "content": "console.group(\"${1:label}\");\n${0:${VISUAL}}\nconsole.groupEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.group",
      "matches": {
        "cgroup": true
      },
      "source": "snippets/javascript"
    },
    "d8b6e076-ebc5-3341-8eb0-e8def4b82f5a": {
      "content": "newtype ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "newtype": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8c2f913-9b90-3b7c-93ea-e49ec9f0c2f1": {
      "content": "componentDidMount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      },
      "source": "snippets/javascript"
    },
    "d8c763d9-498c-3dfd-ad4f-845d1effc5b5": {
      "content": "list-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8c7d462-ccf3-3e7d-89d6-c661707daaba": {
      "content": "${1:outFactor} <- factor(x = ${2:dataVec}, levels = ${3:levels}, exclude = ${4:exclude})",
      "doc": "Create a factor (categorical variable) from a vector",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Categorical variable",
      "matches": {
        "factor": true
      },
      "source": "vscode-R/snippets"
    },
    "d8ccef02-ab4d-3910-adbb-bfe0aa9c1f91": {
      "content": "require 'byebug'; byebug",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8d05c5b-f939-31fb-b9e3-821e8fd2315b": {
      "content": "display inline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8db6976-7951-3df9-9b13-3f5ec6fe51c6": {
      "content": "lapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8de5207-70ce-3a6a-93d4-1f3d35db00c3": {
      "content": "System.out.printf(\"${1:Message}\", ${0:args});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printf": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8e354eb-bc3e-32d3-85fc-03cd70288541": {
      "content": "subtype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "subtype",
      "matches": {
        "subty": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8e662e8-1662-3366-b1b0-78a8e03e2ccd": {
      "content": "if ${1:condition} then ${2:value} else ${3:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Ternary if",
      "matches": {
        "ifte": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d8ecb02f-8f13-3153-aedb-6972ff0b7344": {
      "content": "bitflags! {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "bitflags!",
      "matches": {
        "bfl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d8edd159-aad1-3d07-8eb3-a20448eda871": {
      "content": "type ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d8f855bf-a33f-3359-80c3-93dd045f7d86": {
      "content": "${1:obj}.fadeIn 'slow/400/fast', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeinc": true
      },
      "source": "snippets/coffee"
    },
    "d8fb46b8-b871-33da-92f2-f77d57430316": {
      "content": "font-emphasize-style: accent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "d8fbda86-79b6-3137-89e1-3613867e2d3a": {
      "content": "computed: {\n\t${1:name}() {\n\t\treturn this.${2:data} ${0}\n\t}\n},",
      "doc": "computed value",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-computed",
      "matches": {
        "vcomputed": true,
        "vue computed": true
      },
      "source": "javascript/vue"
    },
    "d90545b1-aaa9-31e0-8864-ada60847a502": {
      "content": "\\${2:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:#optional}",
      "matches": {
        "2#": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d90735f4-7d04-331e-8cdb-bdbe2da043d8": {
      "content": "empty-cells: hide;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "d90e65ba-ed4c-3adb-a1be-a5ffc0faf9f7": {
      "content": "<div id=\"${1}\">\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div#": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9133f88-b9bb-35e5-8405-2a81e2ef36db": {
      "content": "[${1}]",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "d913f526-f401-3624-a09d-07f96ae7149d": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d9140ced-77b1-32be-8b69-fa035f6cc9e9": {
      "content": "${1:ModelName}::model()->findBySql(${2:sql}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9158170-5b7c-36d7-b52e-e9fc80365e56": {
      "content": "print_r(${0}, 1);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prs": true
      },
      "source": "vim-snippets/snippets"
    },
    "d91f321b-7bab-37bd-ad55-994caaecf07b": {
      "content": "<style lang=\"sass\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with sass scoped",
      "matches": {
        "style_with_sass_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d929cc12-9bd2-374f-87bc-8a8b958d6a33": {
      "content": "margin-top: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d92cb350-dabc-3542-b6cd-572c4f1fabe2": {
      "content": "outline: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      },
      "source": "vim-snippets/snippets"
    },
    "d93657ad-e280-3119-b811-54fb21136e21": {
      "content": "ceil(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ceil": true
      },
      "source": "vim-snippets/snippets"
    },
    "d93c358a-f8e0-3144-827d-252438b672b4": {
      "content": "![${1:#:alt}](${2:#:url})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt](url)",
      "matches": {
        "alturl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d93c8b44-b9df-3bde-ae36-19b6a5fd4aeb": {
      "content": "[[${1:foo} alloc] init${2}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      },
      "source": "vim-snippets/snippets"
    },
    "d93d5909-f0d2-3388-b58c-1febd222d4d3": {
      "content": "include_once '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inco": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d946bedb-4645-3599-8b2d-7d560c10af79": {
      "content": "redirect_to action: \"${1:show}\", id: ${0:@item}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (action, id)",
      "matches": {
        "reai": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d94ff624-f951-39fb-9eda-ba71b256d620": {
      "content": "margin: ${1:20px} ${2:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin: V H (margin)",
      "matches": {
        "margin": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d960aace-68cc-3fc5-9311-4db7cbfdcfce": {
      "content": "min-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true,
        "min-height": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d963a68b-9dbd-396c-b1fd-ec110836abaf": {
      "content": "proc ${1:#:name}(${2}):\ndiscard \"\"\"${3:#:function documentation}\"\"\"\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d971648c-1712-3fd8-98a7-b9b2e3a1d633": {
      "content": "defmodule ${1:AppName}Web.${2:ControllerName}Controller do\n\tuse $1Web, :controller\n\t${3}\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cont": true
      },
      "source": "vim-snippets/snippets"
    },
    "d97d4591-cce7-351f-afa7-3a58082a5a53": {
      "content": "align-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "d97fb24c-6766-3dd2-835f-11846498b718": {
      "content": "<a href=\"${1}\" target=\"_blank\" rel=\"noopener\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_blank": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d9818acc-93b4-3c4d-974f-c1161001933f": {
      "content": "<?php echo $this->${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pethis": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d98a4bf0-3f30-3c24-b168-d632e7179cdc": {
      "content": "propTypes: ->\n\t${1:myVar}: React.PropTypes.${2:type}${3:.isRequired}",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define propTypes",
      "matches": {
        "PropTypes": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d98e3b4a-0a57-3b08-90ef-b30cf5cc980b": {
      "content": "std::unordered_set<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uset": true
      },
      "source": "vim-snippets/snippets"
    },
    "d98f401c-6676-318e-beb7-9b86fb0a5914": {
      "content": ".. warning::\n\t${0:attention!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "war:": true
      },
      "source": "vim-snippets/snippets"
    },
    "d998d350-54fe-35e0-9bde-7ae277fd4096": {
      "content": ".. |${1:alias}| image:: ${0:img}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img:": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9aa60ec-f08f-387d-8c9d-5c9200e3a9a6": {
      "content": "import { View, Text } from 'react-native'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<View>\n\t\t\t<Text>$0</Text>\n\t\t</View>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactNativeFunctionalExportComponent",
      "matches": {
        "_rnfe": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "d9b18ab5-83a8-3bb0-ad78-7446a0f699c0": {
      "content": "Url:redirect('${1:path}');",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_redirect": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9bac325-8f91-3192-b301-d662c3b5e0ad": {
      "content": "font: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true,
        "font": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "d9c2fbc4-8fd7-3e8d-a006-7d6af10d42c1": {
      "content": "t.float :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create float column",
      "matches": {
        "tcf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d9c6eed7-e2ab-3d61-b65d-8d8cb2d808be": {
      "content": "text-replace: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9ce0ea6-67f3-3b30-a07a-ea03955459ce": {
      "content": "border-top-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9ce0f97-23b9-3731-9198-ed1a8f701c18": {
      "content": "while (${1:condition}) {\n\t${2:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9d00944-45aa-3d71-9bf5-364853baaca1": {
      "content": "redirect_to controller: \"${1:items}\", action: \"${2:show}\", id: ${0:@item}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller, action, id)",
      "matches": {
        "recai": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d9d1c471-7287-34c2-835d-7b07b3f8ae8b": {
      "content": "<${1:div} :class=\"{ ${2:className}: ${3:data} }\"></${1:div}>",
      "doc": "vue class binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Class Binding",
      "matches": {
        "vclass": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "d9dd9357-cc51-3243-83da-b42e41646014": {
      "content": "${2:$1} = require '${1}'${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9df1cda-7c4a-3827-877b-c6fe5d792ff8": {
      "content": "[[NSUserDefaults standardUserDefaults] setObject:${1:object} forKey:${2:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Write to defaults (setprefs)",
      "matches": {
        "setprefs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d9e0a684-e5b1-32a2-be14-4313e446a03b": {
      "content": "formArrayName=\"${1:control}\"",
      "doc": "Angular formArrayName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformarrayname",
      "matches": {
        "a-formarrayname": true,
        "angular ng form array name": true
      },
      "source": "javascript/angular"
    },
    "d9e262ae-2661-3ccc-b1d8-c178cea61744": {
      "content": "list-style-position: ${1:inside/outside};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-position: pos (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "d9e56481-e6b4-3329-a686-f329492221a8": {
      "content": "scope :${1:name}, -> { where(${2:field}: ${0:value}) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9e9428b-9d83-326d-a63e-2d514b9a99c7": {
      "content": "else\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "d9f8f265-9181-353c-bb1a-b72fa28737fd": {
      "content": "(function(${1}) {\n  'use strict';\n  ${0:TARGET}\n})(${2});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "da01474b-cc61-3e03-ad55-eadaf51a0408": {
      "content": "margin ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "da08d3a1-66cf-37ba-b610-7ec47c647167": {
      "content": "\\${.version}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "${.version}",
      "matches": {
        "ver": true
      },
      "source": "vim-snippets/snippets"
    },
    "da1006e9-4927-3e2f-b17a-ae16715d42d4": {
      "content": "if ${1} then ${2} else ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if expression",
      "matches": {
        "ifex": true
      },
      "source": "vim-snippets/snippets"
    },
    "da13b14f-5b10-3c8b-a457-470d3338ee4b": {
      "content": "media=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "media": true
      },
      "source": "vim-snippets/snippets"
    },
    "da18cf30-a70d-3c28-b84d-22725a1b3ce4": {
      "content": "font: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/snippets"
    },
    "da194666-460a-37d0-b680-cae37f86d1d0": {
      "content": "\\\\begin[${1:author}]{${2:thm}}\n\t${0:${VISUAL}}\n\\\\end{$2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "thm (or arbitrary) environment with optional argument",
      "matches": {
        "thm": true
      },
      "source": "vim-snippets/snippets"
    },
    "da20963c-8326-33ce-81ed-9a0e440edf97": {
      "content": "<link rel=\"stylesheet\" href=\"${1:style.css}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "da25751a-ecfa-3063-b11e-bec4d8cb13df": {
      "content": "delegate (${1:int x}) => ${2}${3:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      },
      "source": "vim-snippets/snippets"
    },
    "da2caca6-33f0-39d7-8de9-72136ddbb165": {
      "content": "justify-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "da2f6dbc-994b-37ec-91ee-8fcd328f5808": {
      "content": "${1:FIELDNAME} = forms.DateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateTimeField",
      "matches": {
        "fdatetime": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "da3dc29f-db5d-31b1-a3e7-f82f025fad9f": {
      "content": "console.groupEnd();",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolegroupend",
      "matches": {
        "base console group end": true
      },
      "source": "javascript/base"
    },
    "da5289dd-feeb-3ea3-9cc7-2989e1e08440": {
      "content": "{% schema %}\n\t{\n\t\t${0}\n\t}\n{% endschema %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "schema": true
      },
      "source": "vim-snippets/snippets"
    },
    "da5b62fb-5248-3aa8-93cc-36b8fec64c8b": {
      "content": "**${1:Strong emphasis}** ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**": true
      },
      "source": "vim-snippets/snippets"
    },
    "da62a5b9-865a-3356-998e-08d801371774": {
      "content": "fn ${1:#:func_name}(${2:#:args}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "fn () {}",
      "matches": {
        "fn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "da659d91-6476-335d-aa5d-fcb827b67d5f": {
      "content": "type ${1} = { ${0} }",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      },
      "source": "vim-snippets/snippets"
    },
    "da6c09ca-87a8-38c1-9855-78e2d9451d32": {
      "content": "$this->assertTrue(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertTrue($a)",
      "matches": {
        "ast": true
      },
      "source": "vim-snippets/snippets"
    },
    "da74cfc7-c6e6-3059-8291-f51efb556d43": {
      "content": "test.only('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block  that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-only",
      "matches": {
        "jest test only": true,
        "testo": true
      },
      "source": "javascript/jest"
    },
    "da80f059-00db-3425-b81d-2dc5acaaf6ff": {
      "content": "sort {|${1:x}, ${2:y}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "da831d5b-ffb7-3209-bec9-02f93cabb9bc": {
      "content": "for ${1:i},${2:v} in ipairs(${3:table_name}) do\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "da85773c-21d4-3249-935f-0e8e3cffbfcc": {
      "content": "$.Callbacks()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      },
      "source": "snippets/javascript"
    },
    "da8b7738-b70a-37d1-889b-dae153f79c48": {
      "content": "form_password(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_password": true
      },
      "source": "vim-snippets/snippets"
    },
    "da8d7b9b-f215-376e-abce-efd4b21ed097": {
      "content": "grid-gap: ${1} ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      },
      "source": "vim-snippets/snippets"
    },
    "daa8cb22-5978-39a2-b9d6-022aca8a7c3c": {
      "content": "enum struct ${1:#:name} { ${2:#:TARGET} };",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "enum struct {};",
      "matches": {
        "enum_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "daa9a0d0-32b9-3c2d-8710-e8ecacfed4a3": {
      "content": "border-corner-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "dabcca10-24c8-352e-8d6a-91c427cfbb37": {
      "content": "page-break-before: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "dabf14b2-647c-3802-b7ac-360007f73ff4": {
      "content": "v-show=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-show",
      "matches": {
        "vshow": true,
        "vue v-show": true
      },
      "source": "javascript/vue"
    },
    "dac84b4c-33db-345b-a438-830137b0f672": {
      "content": "$this->assertClassHasAttribute(${1:$attributeName}, ${2:Example}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertClassHasAttribute($name, Example::class)",
      "matches": {
        "ascha": true
      },
      "source": "vim-snippets/snippets"
    },
    "dac87508-75ec-3138-8039-ac72a6385390": {
      "content": "test(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "test conventional commit",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dad727c1-804e-3d67-9b93-4178588eb254": {
      "content": "for ${1:name} from ${2:start} til ${3:finish} by ${4:step}\n\t${5}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrexb": true
      },
      "source": "vim-snippets/snippets"
    },
    "dae54eb9-31b7-37c9-89f8-8a26a2ed1966": {
      "content": "[formGroupName]=\"${1:name}\"",
      "doc": "Angular formGroupName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformgroupname",
      "matches": {
        "a-formgroupname": true,
        "angular ng form group name": true
      },
      "source": "javascript/angular"
    },
    "daf93fab-a7d4-351e-bca5-faee4ff20c82": {
      "content": "do begin\n\t${0}\nend while (${1});",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      },
      "source": "vim-snippets/snippets"
    },
    "dafa85e5-daad-3269-abb4-99155a3e3a70": {
      "content": "[(ngModel)]=\"${1:binding}\"",
      "doc": "Angular ngModel",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngModel",
      "matches": {
        "a-ngModel": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "dafca340-4b8e-3913-8506-c54cb1aa9c46": {
      "content": "[${1:id}]: https://${2:url}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:": true
      },
      "source": "vim-snippets/snippets"
    },
    "dafe444e-e21e-3a6f-9d7e-60387323b638": {
      "content": "t.string :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create string column",
      "matches": {
        "tcs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dafe73f3-b614-3773-b6d7-c6a15813749f": {
      "content": "Console.Write(${1:#:message});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true,
        "write": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "db00dae2-a6d2-32c1-9b94-a7710ea86439": {
      "content": "sub prep${1:number}_${2:test_case} :Test(startup) {\n\tmy $self = shift;\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tprep": true
      },
      "source": "vim-snippets/snippets"
    },
    "db03678f-21b7-327f-9f1b-52c8b106fa34": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} * \"${5:Payee}\" \"${6:Narration}\"\n\t${9:Account} ${10:Amount} ${11:Commodity}\n\t${14:Account} ${15:#:Amount} ${16:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "transaction",
      "matches": {
        "transaction": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "db0ccffc-49f8-3e54-9a0c-dab4f4ded385": {
      "content": "# -*- coding: ascii -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cascii": true
      },
      "source": "vim-snippets/snippets"
    },
    "db0e25f2-f723-3feb-bd3b-775de172eb66": {
      "content": "switch(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "db137a2e-93a2-33a4-876c-179d55248386": {
      "content": "border-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      },
      "source": "vim-snippets/snippets"
    },
    "db19b9f3-8b2b-3a39-8bf6-e2e1afca03b8": {
      "content": "import React from 'react'\n\ninterface Props {\n\t\n}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactArrowFunctionExportComponent",
      "matches": {
        "tsrafce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "db210a22-80a7-39e3-bf75-57106064a639": {
      "content": "import styled from 'styled-components/native';",
      "doc": "import styled from 'styled-components/native'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-styled-from-styled-components-native",
      "matches": {
        "imscn": true,
        "styled-components import styled native'": true
      },
      "source": "javascript/styled-components"
    },
    "db25e05b-7640-3624-93ae-bc503449d57f": {
      "content": "for ${2:i} := 0; $2 < ${1:count}; $2${3:++} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for int loop",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "db299dfc-2f34-3609-b48c-bc0140171efe": {
      "content": "align-self flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "db33a905-b96a-32f4-8584-54767a49788c": {
      "content": "text-justify: inter-ideograph",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      },
      "source": "vim-snippets/snippets"
    },
    "db4976a6-80ef-3a1a-84fd-8d90320132e6": {
      "content": "Element Should Not Contain    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Not Contain",
      "matches": {
        "esnc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db4bc256-1475-3713-a419-fb8e8700cdf2": {
      "content": "refactor(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "refactor conventional commit",
      "matches": {
        "refactor": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db528698-d2ee-3942-9611-c1d5a52cf10d": {
      "content": "$this->input->is_ajax_request();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-is_ajax_request": true
      },
      "source": "vim-snippets/snippets"
    },
    "db58dbeb-ff8a-3390-962e-cc191c527ded": {
      "content": "\\\\begin{${1:env}}\n\t${0:${VISUAL}}\n\\\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\begin{} ... \\end{} block",
      "matches": {
        "begin": true
      },
      "source": "vim-snippets/snippets"
    },
    "db592215-0c7b-32af-9921-49df12150a88": {
      "content": "function ${1}(${2})\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function ... end",
      "matches": {
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "db5a7bd3-917d-3c67-93ae-be8ecfee1e61": {
      "content": "(\\\\${1:_} => ${0})",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "Lambda function (\\x => ...)",
      "matches": {
        "\\": true
      },
      "source": "vim-snippets/snippets"
    },
    "db611e1b-3af5-33e1-af2a-63278379e211": {
      "content": "{% for ${1:item} in ${2:collection} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "db632e0e-e743-3748-afa0-53a872d65514": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as $4} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db6a9cd0-e51e-3fbd-aa83-645fdad0a20f": {
      "content": "render layout: \"${1:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (layout) (rl)",
      "matches": {
        "rl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db6c5c7c-d27e-3ddf-ab2e-d58007352a3f": {
      "content": "{% else %}$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ielse": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db6c9a5e-acc8-35fe-a442-f21b2d93143c": {
      "content": "throw new $1Exception(\"$2\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "throw",
      "matches": {
        "throw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db6d8060-0d3c-3153-a7fd-5a858694ded4": {
      "content": "@online{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tdate={${4:date}},\n\turl={${5:url}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Online resource",
      "matches": {
        "online": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db6dca58-d3d1-3355-9965-634e87fe637a": {
      "content": "(dotimes [_ 10]\n\t(time\n\t\t(dotimes [_ ${1:times}]\n\t\t\t${0:code})))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dotimes": true
      },
      "source": "vim-snippets/snippets"
    },
    "db787afe-f9dd-3fa4-a43a-212c5cf7de40": {
      "content": "align-content first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      },
      "source": "vim-snippets/snippets"
    },
    "db8e8b72-08eb-33a9-83b5-10f432d5d552": {
      "content": "Return From Keyword If    '\\${${1:rc}}' != '${2:abc}'    ${3:${optional return value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Return From Keyword If",
      "matches": {
        "rfki": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db911d9e-e3f0-37ad-82a2-6381a7e9add7": {
      "content": "beforeUpdate () {\n\t${0};\n},",
      "doc": "beforeUpdate lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforeupdate",
      "matches": {
        "vbeforeupdate": true,
        "vue lifecycle beforeupdate": true
      },
      "source": "javascript/vue"
    },
    "db95afb3-bb47-3a52-8c36-51e2ef52f3fa": {
      "content": "class ${1:ClassName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t${2}\n\t\t\t</>\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rcla": true
      },
      "source": "snippets/javascript"
    },
    "db9803f7-0b8d-3991-8b6f-f4d983ef965b": {
      "content": "internal ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&": true
      },
      "source": "vim-snippets/snippets"
    },
    "db9a69e0-b96b-34bd-9bf0-92ecf568f107": {
      "content": "$this->${1:method}()->shouldNotEqual(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotEqual('value')",
      "matches": {
        "snequal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "db9aef16-d439-3a6f-99bb-78a31fe039f3": {
      "content": "grid-auto-flow: row dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      },
      "source": "vim-snippets/snippets"
    },
    "dba6db63-cb43-3952-8c4c-b5e1f52afed1": {
      "content": "<p class=\"${1}\">${2:TARGET}</p>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pclass": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dba8c4f5-2878-3611-952a-1678d8bbc853": {
      "content": "System.Collections.Generic",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.c.g": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dbb5e9e0-9732-365f-8e78-81e5516948cf": {
      "content": "log.Printf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log printf",
      "matches": {
        "lf": true
      },
      "source": "vim-snippets/snippets"
    },
    "dbc47c7b-5fad-3f42-ac5e-17a34e3a45b9": {
      "content": "require('dotenv').config()",
      "doc": "As early as possible in your application, require and configure dotenv.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-require",
      "matches": {
        "dotenv require": true
      },
      "source": "javascript/dotenv"
    },
    "dbccd16c-a49d-3beb-8bb9-d0dd6901be89": {
      "content": "<link rel=\"alternate\" href=\"${1:atom.xml}\" title=\"Atom\" type=\"application/atom+xml\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:atom": true
      },
      "source": "vim-snippets/snippets"
    },
    "dbd6ae45-1c8f-37bb-a619-318c4e1ed604": {
      "content": "@safe",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "safe": true
      },
      "source": "vim-snippets/snippets"
    },
    "dbd73a95-e9b6-3568-94f5-01191f850ddb": {
      "content": "text-justify: inter-word",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      },
      "source": "vim-snippets/snippets"
    },
    "dbe28389-bb19-3e07-bdfe-fe07dfe6342a": {
      "content": "echo CHtml::closeTag('${0:tag}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhct": true
      },
      "source": "vim-snippets/snippets"
    },
    "dbe70f73-6d07-31f0-867e-3e42a326f3e8": {
      "content": "useLayoutEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t};\n}, [${3:input}])",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useLayoutEffect",
      "matches": {
        "useLayoutEffect": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "dbffaa7c-1ed6-3c1f-a411-d029b7f8f4a2": {
      "content": "_.snakeCase(${string})",
      "doc": "_.snakeCase('Foo Bar');\n// => 'foo_bar'\n\n_.snakeCase('fooBar');\n// => 'foo_bar'\n\n_.snakeCase('--FOO-BAR--');\n// => 'foo_bar'\n\nConverts `string` to\n[snake case](https://en.wikipedia.org/wiki/Snake_case).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-snakecase",
      "matches": {
        "lodash snakecase": true
      },
      "source": "javascript/lodash"
    },
    "dc05f8a8-3178-3e5f-91c7-ae8b98c40faa": {
      "content": "else if (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc0b4cc8-c235-3e0f-b99b-8c8df7ca8675": {
      "content": "float ${1:f}${2: = }${0:0.0f};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "float": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc0cc3f5-0aa9-3500-ac89-0630899e9266": {
      "content": "fmt.Sprintf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Sprintf(...)",
      "matches": {
        "sp": true
      },
      "source": "gosnippets/snippets"
    },
    "dc0f4201-07a6-36b5-a1e4-718d381bf297": {
      "content": "${1:name}\tnumber\t${3:default 0}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ncol": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc1421f4-0abe-3a20-8700-ce38c9b76211": {
      "content": "if (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc19ec58-5385-39ee-9e71-95173e9c0572": {
      "content": "clear: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc1cac02-86ac-358a-be84-fc1bba405f48": {
      "content": "print(${0:#:TARGET})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc25dbab-f414-3498-a091-9a7db0b19810": {
      "content": "{% cache %}\n\t${0}\n{% endcache %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig cache",
      "matches": {
        "cache": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc2b59a5-c9f6-3736-83ef-f2afe31e94e4": {
      "content": "ReactDOM.createPortal(${1:child}, ${2:container});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.createPortal",
      "matches": {
        "rdcp": true
      },
      "source": "snippets/javascript"
    },
    "dc30b53e-be37-381b-a946-a97f1c060bd5": {
      "content": "\\addbibresource{${1:resource}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\addbibresource": true,
        "addbibresource": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc37223d-a0cd-308a-9699-ced464dca696": {
      "content": "{\n\telem : '${1:name}',\n\tcontent : [\n\t\t'${2:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "e": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc3a3efa-80a2-37d8-b8f1-b251329122ca": {
      "content": "public static void Main(string[] args) {\n    ${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc4fd946-73d4-3e59-b67f-a2da54c46d3e": {
      "content": "font-family: ${0:Monaco,'Courier New'},monospace",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "dc50696b-a7d4-3130-86ad-48ea3a2a5aea": {
      "content": "padding-right: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-right": true,
        "pr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc53d2d0-e71e-3a59-8642-57bfafe64c61": {
      "content": "module ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "module NAME {...}",
      "matches": {
        "module": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc5d189f-bc03-320e-be3a-b973b4a76e5b": {
      "content": "$.getJSON('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getjson": true
      },
      "source": "snippets/javascript"
    },
    "dc64be47-bfae-343a-96e7-41f3a4359bad": {
      "content": "return false;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "retf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dc78f48c-b432-3c4f-99af-38833bf0e78a": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}})",
      "doc": "Grep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grep",
      "matches": {
        "grep": true
      },
      "source": "vscode-R/snippets"
    },
    "dc93e4d9-ad67-3b2f-b72b-5aaebf7e1599": {
      "content": "$.ajax\n  url: \"${1:mydomain.com/url}\"\n  type: \"${2:POST}\"\n  dataType: \"${3:xml/html/script/json}\"\n  data: ${4:data}\n  complete: (jqXHR, textStatus) ->\n\t${5:// callback}\n  success: (data, textStatus, jqXHR) ->\n\t${6:// success callback}\n  error: (jqXHR, textStatus, errorThrown) ->\n\t${0:// error callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajax": true
      },
      "source": "snippets/coffee"
    },
    "dc9a53db-5e2b-3483-b271-b0ba7d525460": {
      "content": "set ${1:propertyName}(${2:value}) {\n\t${0};\n}",
      "doc": "Creates a setter property inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertyset",
      "matches": {
        "pse": true
      },
      "source": "vscode-javascript/snippets"
    },
    "dc9c4be2-b34f-39c8-bc10-3209439d1183": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      },
      "source": "vim-snippets/snippets"
    },
    "dca40a80-f17f-36c6-bf0b-851b9fc6610e": {
      "content": "font-stretch: semi-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "dca40e91-ad97-37e8-9509-1cea68926ddb": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}');",
      "doc": "Creates an NgRx Action",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Action",
      "matches": {
        "a-ngrx-create-action": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "dca79211-ad16-3021-be67-4f1c7a2482a2": {
      "content": "\\\\DeclareMathOperator{${1}}{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\DeclareMathOperator",
      "matches": {
        "dmo": true
      },
      "source": "vim-snippets/snippets"
    },
    "dcb267f7-b242-3e43-a9f4-606bfad50cc1": {
      "content": "const [state, dispatch] = useReducer(${1:reducer}, ${2:initialState}, ${3:init})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useReducer",
      "matches": {
        "useReducer": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "dcb31ce3-a709-32c8-9bfc-2f1cf1c33f48": {
      "content": "middleware ({ store, redirect }) {\n\t${1:data}\n},",
      "doc": "Set the middleware for a specific page of the application.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-middleware",
      "matches": {
        "nuxt middleware": true
      },
      "source": "javascript/nuxt"
    },
    "dcb57778-be78-343f-a4f0-088902566368": {
      "content": "require 'pry'; binding.pry",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      },
      "source": "vim-snippets/snippets"
    },
    "dcb7610d-c82c-39c9-b877-63b371e04ee4": {
      "content": "align-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      },
      "source": "vim-snippets/snippets"
    },
    "dcbe39e4-bb0c-345d-9521-f7c9ba9a08cc": {
      "content": "border-collapse: collapse",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "dcc17c92-6511-30e0-89a1-d520f75fdd2f": {
      "content": "sub ${1:function_name} {\n\t${2:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Function (sub)",
      "matches": {
        "sub": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dcc72dda-89ec-364d-b0b8-6af5fed1f661": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport Vue from 'vue'\n\n\texport default Vue.extend({\n\t\t${0}\n\t})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Typescript",
      "matches": {
        "vbase-ts": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "dccecde3-734e-373e-a75f-020d86f995d2": {
      "content": "{% highlight ${1:#:TARGET} linenos %}\n  ${2:code}\n{% endhighlight %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "Line number",
      "matches": {
        "highlight_line": true,
        "hl_l": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dcd0056c-a854-3559-8afd-ce22a88b4a75": {
      "content": "console.timeEnd(${1:object});",
      "doc": "Sets end point for execution time measurement",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTimeEnd",
      "matches": {
        "cte": true
      },
      "source": "vscode-javascript/snippets"
    },
    "dcd27648-5168-31eb-b206-d044cd5f15a4": {
      "content": "for ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "for ... end",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dcdc53ed-9edc-36ef-966e-2294ed7b22e5": {
      "content": "_.zipObject(${props}, ${values})",
      "doc": "_.zipObject(['a', 'b'], [1, 2]);\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.fromPairs` except that it accepts two arrays,\none of property identifiers and one of corresponding values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipobject",
      "matches": {
        "lodash zipobject": true
      },
      "source": "javascript/lodash"
    },
    "dce43655-d199-3642-ad67-367f9811ddcd": {
      "content": "\\draw[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\draw": true,
        "draw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dcea6901-fd40-34f8-b63d-ccdfb549ef55": {
      "content": "validates_uniqueness_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of",
      "matches": {
        "vu": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dcebeb54-b80d-3b35-a688-6daef7b8ca48": {
      "content": "#error ${0:#:message}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true,
        "error": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dcec343f-7847-396c-a3e2-fc61edca0d8d": {
      "content": "filter progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}')",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "dced0014-6d72-33c1-a148-58b4cf4fd98c": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-shape",
      "matches": {
        "prop-types shape": true,
        "ptsh": true
      },
      "source": "javascript/prop-types"
    },
    "dcfc3ab4-df9a-34d4-9b97-62eb4710d25d": {
      "content": "else if ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "eli": true
      },
      "source": "vim-snippets/snippets"
    },
    "dcfd88fb-ecc7-36fc-be8b-865ce2257d6c": {
      "content": "_.countBy(${collection}, ${iteratee})",
      "doc": "_.countBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': 1, '6': 2 }\n\n// The `_.property` iteratee shorthand.\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the number of times the key was returned by `iteratee`. The\niteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-countby",
      "matches": {
        "lodash countby": true
      },
      "source": "javascript/lodash"
    },
    "dd0596bf-d1bc-3a85-8de9-3510ba4fc99b": {
      "content": "<%= ${1:f}.hidden_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffhf": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd06820d-6078-3f11-a16e-d241cf3e40f1": {
      "content": "\\begin{frame}{${1:#:frametitle}}\n\t${2:TARGET}\n\\end{frame}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{frame} \\frame": true,
        "frame": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dd108b6a-785f-36c0-8b89-4d9329dd5d66": {
      "content": "\\\\begin{split}\n\t${0:${VISUAL}}\n\\\\end{split}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "split environment",
      "matches": {
        "spl": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd11e24d-fa98-3057-9b33-ea996c38e655": {
      "content": "digitalRead(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dr": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd14f148-6ce1-37f7-8ab4-862d729ecdc8": {
      "content": "printfn \"${1}\" ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd212458-40ce-350e-8c3f-639508116afc": {
      "content": "set {${1:TARGET}}${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "set {}",
      "matches": {
        "set": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dd228a09-0e70-33f7-a013-56f1a8395004": {
      "content": "repeat\n\t${1:--body}\nuntil ${0:condition}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd30f63b-1294-36c5-b302-35610f8e33f9": {
      "content": "frameRate(${1:30});\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frameRate": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd35d48a-18cf-3fe0-ad67-9e34f2cd7e69": {
      "content": "margin-bottom: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-bottom": true,
        "mb": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dd3a3566-575d-34f4-b0d1-a612cf718e0f": {
      "content": "protected function setUp()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "protected function setUp() { ... }",
      "matches": {
        "setup": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd41125c-41d7-3075-b1f6-0f3df87716bf": {
      "content": "border-top-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-color: color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dd46aba4-e44a-3142-bcf1-db4bf0420637": {
      "content": "@doc ~S\"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docs": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd477299-aea1-3c4a-b109-5ecabf7703ec": {
      "content": "| remove: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remove": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd4efb81-8eb5-3c11-bf6a-c3f5f2259cf5": {
      "content": "fn(${1:args}) -> ${2:TARGET} end",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "fn(..) -> .. end",
      "matches": {
        "fn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dd50d2e4-6569-3dbc-af24-6f8f512ba15a": {
      "content": "align-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd561711-f66d-333d-b69e-38fd040fb1ff": {
      "content": "mixins: [${1:mixinName}],",
      "doc": "vue use mixin",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Use Mixin",
      "matches": {
        "vmixin-use": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "dd5a6235-9752-3cd6-9be8-ed14cbec93e8": {
      "content": "const [${2:propertyName}] = ${1:arrayToDestruct}",
      "doc": "Creates and assigns a local variable using array destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingArray",
      "matches": {
        "dar": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "dd617dad-96e4-3ea0-aa0d-e74720b97690": {
      "content": "cut:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd6d0f90-bb78-37a6-aa40-be3c3b8d1fd6": {
      "content": "constructor( @Optional() @SkipSelf() parentModule: ${1:ModuleName} {\n\tif (parentModule) {\n\t\tconst msg = `${1:ModuleName} has already been loaded. \n\t\t\tImport ${1:ModuleName} once, only, in the root AppModule.`;\n\t\tthrow new Error(msg);\n\t}\n}",
      "doc": "Angular Module SkipSelf constructor",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Module SkipSelf Constructor",
      "matches": {
        "a-ctor-skip-self": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "dd6e0e57-159c-3c03-90f3-5363503ddb2f": {
      "content": "class ${1:Model}Controller < ApplicationController\n\tbefore_action :find_${2:model}\n\n\t$0\n\n\tprivate\n\tdef find_$2\n\t\t@$2 = ${3:$1}.find(params[:id]) if params[:id]\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create controller class",
      "matches": {
        "clac": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dd76c255-e0b7-3b47-a300-24991cf1c03e": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd88e49b-5a24-359b-bebe-f98c6cc96e6e": {
      "content": "alias ${1:value} this;\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alth": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd90545b-fbdf-3091-938f-a681b167f537": {
      "content": "<Helmet>\n${1:example}\n</Helmet>",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-component",
      "matches": {
        "react-helmet component": true
      },
      "source": "javascript/react-helmet"
    },
    "dd91c150-d60e-30eb-bd8a-591a92573fda": {
      "content": "height=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd932cd0-81da-3b42-b236-d8819564bfeb": {
      "content": "<tbody>\n\t${0}\n</tbody>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbody": true
      },
      "source": "vim-snippets/snippets"
    },
    "dd9deecf-da31-3c66-841c-8afc2ee577c8": {
      "content": "{% with %}\n\t$1\n{% endwith %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "with",
      "matches": {
        "with": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "dda7a880-5218-30e4-97b0-5c4f1eceb31c": {
      "content": "it { should respond_to(:${1}).with(${0}).arguments }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isresw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddb06332-947a-33da-86ad-5f12a7a5c63b": {
      "content": "Double",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddb6dbe2-0f54-3708-9558-21e9d054082e": {
      "content": "overflow-style: panner;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddbf4804-4e43-37c6-adc2-9edb45acad43": {
      "content": "border-bottom-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddc2b15f-b1fc-3033-bed1-89f4c779d192": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddc851e5-4d2b-3906-9dcb-e35e815840f9": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddc954c0-07ab-3588-8714-a8bea2e32dd7": {
      "content": "class ${1} extends ${2} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clax": true
      },
      "source": "snippets/javascript"
    },
    "ddd7fe7d-8aaf-3141-8dee-cc1e0cf3297e": {
      "content": "message(STATUS \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(STATUS \"...\")",
      "matches": {
        "status_message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dddad2de-cb5e-3c85-85a4-eec5a4911878": {
      "content": "notify { \"${1:message}\": }",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "notify": true
      },
      "source": "vim-snippets/snippets"
    },
    "dddb7cca-9d1e-3b8f-bd0f-33fa9eab4064": {
      "content": "${1:obj}.scrollTop(${2:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrollt": true
      },
      "source": "snippets/coffee"
    },
    "dddebd3a-b48a-3234-8ceb-d8a14533f998": {
      "content": "time:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      },
      "source": "vim-snippets/snippets"
    },
    "dde0a7c9-a9e1-3f8b-a47f-c7b7c5d258b4": {
      "content": "<meta http-equiv=\"X-UA-Compatible\" content=\"IE=${1:7,8,edge}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:compat": true
      },
      "source": "vim-snippets/snippets"
    },
    "dde2f0f3-2f56-3679-9740-eb2fb2a1b98a": {
      "content": "<Link href=\"${1:/path/[id]}\" as=\"${2:/path/${id}}\">\n  <a>${3:content}</a>\n</Link>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link-dynamic-route",
      "matches": {
        "next link dynamic route": true
      },
      "source": "javascript/next"
    },
    "dde84aff-248a-3607-a3c8-b7cb24c4d716": {
      "content": "@foreach (${1} as ${2})\n    ${3}\n@endforeach",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@foreach ... @endforeach",
      "matches": {
        "foreach": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ddec4eba-0111-371f-9394-9dc483760233": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", type: ${0::rxml}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rit": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddeeed22-2ec8-3340-818f-eaa559afd00e": {
      "content": "add_library(${1:lib} ${${0:srcs}})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      },
      "source": "vim-snippets/snippets"
    },
    "ddfe16eb-1135-330d-a077-429d3af6716b": {
      "content": "<ul>\n\t<li>${1}</li>\n\tli+${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul+": true
      },
      "source": "vim-snippets/snippets"
    },
    "de11d801-7bef-3b1b-9fc7-af068a3bfd7f": {
      "content": "class {\n\t[string] ${1:FirstName}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/snippets"
    },
    "de2410d2-2ff3-3ff1-9bd1-187e67b738b2": {
      "content": "_.takeWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.takeWhile(users, function(o) { return !o.active; });\n// => objects for ['barney', 'fred']\n\n// The `_.matches` iteratee shorthand.\n_.takeWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeWhile(users, ['active', false]);\n// => objects for ['barney', 'fred']\n\n// The `_.property` iteratee shorthand.\n_.takeWhile(users, 'active');\n// => []\n\nCreates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takewhile",
      "matches": {
        "lodash takewhile": true
      },
      "source": "javascript/lodash"
    },
    "de30f112-9ade-31bc-b26d-853f8c1aa914": {
      "content": "private bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb-": true
      },
      "source": "vim-snippets/snippets"
    },
    "de32d40b-ee74-3ca8-ba31-4a58c012cf83": {
      "content": "include ${0:filetype}.snip",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "include *.snip",
      "matches": {
        "inc": true,
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "de3601e1-63ed-37f3-bd65-1bf05e0233cb": {
      "content": "urlizetrunc:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      },
      "source": "vim-snippets/snippets"
    },
    "de39edf4-4166-3b49-9125-238aec1af4b0": {
      "content": "I18n.t('${1:type.key}')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i18": true
      },
      "source": "vim-snippets/snippets"
    },
    "de3ad92b-d762-378a-a3a4-65716c16ce37": {
      "content": "_.bindAll(${object}, ${methodNames})",
      "doc": "var view = {\n  'label': 'docs',\n  'click': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n\n_.bindAll(view, ['click']);\njQuery(element).on('click', view.click);\n// => Logs 'clicked docs' when clicked.\n\nBinds methods of an object to the object itself, overwriting the existing\nmethod.\n\n**Note:** This method doesn't set the \"length\" property of bound functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bindall",
      "matches": {
        "lodash bindall": true
      },
      "source": "javascript/lodash"
    },
    "de435956-ea3b-323b-8166-8e193e0fe0f2": {
      "content": "$this->${1:method}()->shouldNotEndWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotEndWith('string')",
      "matches": {
        "snend": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "de467fef-2261-34b2-aa89-dd4d95f147e3": {
      "content": "watchEffect(() => {\n\t${1}\n})",
      "doc": "Vue Composition api - watchEffect",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watchEffect",
      "matches": {
        "v3watcheffect": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "de46dfff-18e5-369f-be17-28fca98acfd2": {
      "content": "(if (${1:predicate})\n\t(${2:true-action})\n\t(${0:false-action}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "de48bbed-8cfa-34a2-bdda-35293afabd05": {
      "content": "\\texttt{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\texttt": true,
        "texttt \\texttt{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "de4bcad1-4dc7-31d0-a1df-221c4f9941cb": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport const mapStateToProps = state => ({\n\n})\n\nexport const mapDispatchToProps = {\n \n}\n\nexport const ${1:hocComponentName} = (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}\n\nexport default WrapperComponent => connect(mapStateToProps, mapDispatchToProps)(${1:hocComponentName}(WrapperComponent))\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "hocComponentWithRedux",
      "matches": {
        "hocredux": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "de4d946b-55fb-3835-8bc9-1590ee5df4bf": {
      "content": "if (${1:condition}) {\n   ${2:selected}\n}",
      "doc": "Code snippet for 'if' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      },
      "source": "vscode-R/snippets"
    },
    "de5439a6-ee3a-3e8f-b424-505f5d814d9c": {
      "content": "table-layout: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      },
      "source": "vim-snippets/snippets"
    },
    "de5b7e33-b91e-3cbf-bc9f-5ddd5507b70a": {
      "content": "points(${1:x}, ${2:y = ${3:NULL}}, ${4:type = ${5:\"p\"}}, ${6:...})",
      "doc": "Points",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "poi",
      "matches": {
        "point": true
      },
      "source": "vscode-R/snippets"
    },
    "de64ae59-12a5-3b8f-8a68-355df2318a85": {
      "content": "mod ${1:#:mod_name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "de6a1bcc-c13a-3d85-8bfd-637484402616": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-number",
      "matches": {
        "prop-types number": true,
        "ptn": true
      },
      "source": "javascript/prop-types"
    },
    "de6b59f5-63ea-3951-8486-47ff880d4c49": {
      "content": "border-left-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      },
      "source": "vim-snippets/snippets"
    },
    "de6e381c-bcc7-3f62-8d7e-21ecb42f01bf": {
      "content": "page-break-before: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "de79a5c2-55c3-3177-9932-dba30389f54c": {
      "content": "vertical-align: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      },
      "source": "vim-snippets/snippets"
    },
    "de7d85cf-6302-3d6d-8f21-23811144391c": {
      "content": "@function ${1:name}(${2:args})\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "de829208-5ab8-3a2e-ad8d-579de3240410": {
      "content": "std::multiset<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mset": true
      },
      "source": "vim-snippets/snippets"
    },
    "de8b7a68-ca47-3d7c-a04c-83de8f13d149": {
      "content": "import Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nVue.use(VueRouter);\n\nexport const router = new VueRouter({\n\tbase: '/',\n\tmode: 'history',\n\troutes: [\n\t\t{ path: '/path', component: component }\n\t]\n});",
      "doc": "Base for Vue Router",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router",
      "matches": {
        "vrouter": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "de967cb5-4eb7-34b1-9c0a-9005fa1c9d2e": {
      "content": "$this->assertArraySubset(${1:$subset}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArraySubset($subset, $array)",
      "matches": {
        "assub": true
      },
      "source": "vim-snippets/snippets"
    },
    "de98a953-0f4c-364f-a491-cfc05184cce1": {
      "content": "${1:method}(${2:arguments}) {\n\t${0}\n}",
      "doc": "method (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "method-es6-syntax-",
      "matches": {
        "base method": true
      },
      "source": "javascript/base"
    },
    "de98bd8f-b474-3a75-98ba-52d0c3be9be2": {
      "content": "CJSON::encode(${0:text});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yjec": true
      },
      "source": "vim-snippets/snippets"
    },
    "de9a072f-7c06-3ad4-8e0e-3ae1a1629868": {
      "content": "@testset \"${1}\" begin\n\t${2}\n\t@test ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "@testset with @test",
      "matches": {
        "@t": true
      },
      "source": "vim-snippets/snippets"
    },
    "de9d35d5-a354-3867-883d-8bc5708d08d6": {
      "content": "id=\"$1\"$2",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "id": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "de9d6309-5536-3c58-87e9-7226e95091f1": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport Vue from 'vue'\n\n\texport default Vue.extend({\n\t\t${0}\n\t})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-typescript",
      "matches": {
        "vue base ts": true
      },
      "source": "javascript/vue"
    },
    "de9e0c60-8771-31ab-8dae-573c6be5fc2f": {
      "content": "{% trans \"${0:string}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      },
      "source": "vim-snippets/snippets"
    },
    "dea456c9-d26c-3e48-9228-8b584f593fb4": {
      "content": "{ path: '${1:path}', component: ${2:Name}Component },",
      "doc": "Angular eager route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-eager-route-path",
      "matches": {
        "a-route-path-eager": true,
        "angular eager route path": true
      },
      "source": "javascript/angular"
    },
    "dea827b6-3f59-3bf2-9dca-93f2426581db": {
      "content": "alply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      },
      "source": "vim-snippets/snippets"
    },
    "dead4550-77bb-321b-b1d2-2b55f3216bf5": {
      "content": "map!(${1:f})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "deb220cd-0972-36da-ace2-b2fbccd57bd9": {
      "content": "this.setState($0);",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      },
      "source": "vscode-react/snippets"
    },
    "deb98864-e85b-3fc9-8148-40706a60678d": {
      "content": "logical :: ${1:fileExsit}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "logical",
      "matches": {
        "lo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "debce039-01a4-3843-8e33-0b4f96d753b9": {
      "content": "&nbsp;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "deccc3d1-0cfc-3f76-b56a-8d084c77712e": {
      "content": "public void set${1:Name}(${2:String} ${3:name}) {\nthis.$3 = $3;\n}\npublic $2 get$1() {\nreturn $1;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setget": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "decf82ba-b709-3fea-9007-2fcb032d6504": {
      "content": "width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      },
      "source": "vim-snippets/snippets"
    },
    "ded1074c-84f2-347e-893f-f2fbe68d0cf8": {
      "content": "${1:obj}.die(${2:event}, ${3:handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "die": true
      },
      "source": "snippets/javascript"
    },
    "ded34d53-2e87-3633-a4f5-a95137af5cf3": {
      "content": "create or replace package body ${1:name}\nas\n\t${0:-- body}\nend; -- end of package body $1;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "dee5eb75-32cf-3043-98e9-a53dcec5d376": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n\n",
      "doc": "Creates a React Functional Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-component-with-proptypes",
      "matches": {
        "react component functional proptypes": true,
        "rfcp": true
      },
      "source": "javascript/react"
    },
    "deeaeb4b-adfd-31c1-9ab9-cd905a3962e2": {
      "content": "tell ${1:#:app}\n\t${0:TARGET}\nend tell",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tell": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "def83970-262c-33b6-bf09-62ce3a7ce379": {
      "content": "@php\n    ${1}\n@endphp",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@php ... @endphp",
      "matches": {
        "php": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "df01bac8-f7a6-36f0-a0dc-43bb3cb94c12": {
      "content": "for(int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "df02845b-47ce-3625-a8e1-7e798760df6c": {
      "content": "list(${0:items})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      },
      "source": "vim-snippets/snippets"
    },
    "df14319c-a944-3918-b4db-1cf6e54bb1a5": {
      "content": "::after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "df19c637-deca-3f21-b00f-90fb51bcca15": {
      "content": "for (${1:item} <- ${2:obj}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "df1d9eed-d466-3553-8ad9-6982f40885d7": {
      "content": "alpha(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alpha": true
      },
      "source": "vim-snippets/snippets"
    },
    "df1efed5-59d2-3225-96cc-0a4c2c21d41b": {
      "content": "border-bottom-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "df20cbc6-6e83-3f8e-a71b-1e4f0a0503b7": {
      "content": "continue",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "continue",
      "matches": {
        "cn": true
      },
      "source": "vim-snippets/snippets"
    },
    "df35e717-4e4d-3af3-a6d5-0c62bf233704": {
      "content": "${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n ${2:property}: ${3:PropTypes.node.isRequired},\n}",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-init",
      "matches": {
        "prop-types init": true
      },
      "source": "javascript/prop-types"
    },
    "df3e4450-4013-3b19-abda-16087e2c3980": {
      "content": "_.values(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n\n_.values('hi');\n// => ['h', 'i']\n\nCreates an array of the own enumerable string keyed property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-values",
      "matches": {
        "lodash values": true
      },
      "source": "javascript/lodash"
    },
    "df3f2077-6d95-3358-9b8e-9c1f6b4658a9": {
      "content": "@mixin ${1:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@mixin(...){...}",
      "matches": {
        "mixin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "df411fe3-ca0d-36ff-bc18-402be2ad4d5a": {
      "content": "word-wrap: suppress;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "df42a6b5-1e38-3607-a5aa-cca5fa294eb2": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{:else}\n\t${4: <!-- empty list -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-else-block",
      "matches": {
        "sveach-else": true,
        "svelte each else": true
      },
      "source": "javascript/svelte"
    },
    "df472440-6d04-30e5-8643-3600c01b8eb6": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:model}_path(${0:@$2}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lip": true
      },
      "source": "vim-snippets/snippets"
    },
    "df4ffb6a-8377-31a4-ab63-f498f0b8ec38": {
      "content": "expect(${1:})${0};",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...)",
      "matches": {
        "exp": true
      },
      "source": "vim-snippets/snippets"
    },
    "df52a292-ae53-3a71-8fdd-e1fbc3964dfa": {
      "content": "on('${1:event_name}', function(${2:stream}) {\n  ${3}\n});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      },
      "source": "snippets/javascript"
    },
    "df5741ca-8143-380e-a6f6-972d2973768a": {
      "content": "assert_not_same ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asns": true
      },
      "source": "vim-snippets/snippets"
    },
    "df5c785a-307f-3b01-a198-ffe86f8a7033": {
      "content": "MessageBox.Show(\"${1:message}\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Message box",
      "matches": {
        "mbox": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "df5e5c91-b3f3-3974-a83f-89376964db8d": {
      "content": "${1:map}.resources :${2:resource}${10: do |${11:$2}|\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.resources",
      "matches": {
        "maprs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "df6367a5-88e8-34e5-9c14-5313fa4d9af3": {
      "content": "text-align right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "df674324-0828-32f2-86cd-dc39f2fb8b21": {
      "content": "border-left-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "df6857c8-5a56-3830-a5aa-8fe1f1dddfcc": {
      "content": "page-break-before right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "df7ca9cc-a0a9-3f44-aa91-8ef8a8c4e845": {
      "content": "logger.warn { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.warn",
      "matches": {
        "logw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "df83a1d8-9e17-3dce-90df-154e3bb74a55": {
      "content": "set the_result to display dialog \"${1:#:text}\"\n\tdefault answer \"${2:#:type here}\"\n\t${3:#:with icon}\n\tbuttons {\"${4:Cancel}\", \"${5:OK}\"}\n\tdefault button \"${5}\"\nset button_pressed to button returned of the_result\nset text_typed to text returned of the_result\nif button_pressed is \"${5}\" then\n\t${6:#:TARGET}\nelse\n\t-- action for cancel button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_TextFierld": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "df85d2b0-a78f-3c93-aefd-26009581a5b4": {
      "content": "for ${1:rec} in (${2: select}) loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fors": true
      },
      "source": "vim-snippets/snippets"
    },
    "df876619-6e1c-3c13-be78-ea4477dbedb4": {
      "content": "${1:obj}.children('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "children": true
      },
      "source": "snippets/javascript"
    },
    "df8df18f-32a1-327a-af67-02502776b49b": {
      "content": "main = do\n  ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "main = do",
      "matches": {
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "df8ebb80-ca3b-361c-ac07-042aa11a1930": {
      "content": "\\\\frac{\\\\partial {$1}}{\\\\partial {$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "partial derivation",
      "matches": {
        "pdv": true
      },
      "source": "vim-snippets/snippets"
    },
    "df8f6292-3d7a-33a6-8e44-d002268688e2": {
      "content": "plot(${1:x}, ${2:y}, ${3:...})",
      "doc": "Plot",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "plot",
      "matches": {
        "plot": true
      },
      "source": "vscode-R/snippets"
    },
    "df99d09f-42fe-3089-b47a-8f65e0666622": {
      "content": "list-style-type: ${1:cjk-ideographic/hiragana/katakana/hiragana-iroha/katakana-iroha};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: asian (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "df9af0bb-635a-39c5-9ef7-4963a040aa5b": {
      "content": "interface ${1}{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dfad0f75-ff4d-343c-8e29-a6bd78381d8f": {
      "content": "var ${1:function_name} = function(${2}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vaf": true
      },
      "source": "snippets/javascript"
    },
    "dfb7db99-2980-3f98-86e9-3e4fe3cefdec": {
      "content": "<fieldset>\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      },
      "source": "vim-snippets/snippets"
    },
    "dfbad327-657c-377c-954c-ad8500ab094c": {
      "content": "${1:FIELDNAME} = models.FloatField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "float": true
      },
      "source": "vim-snippets/snippets"
    },
    "dfbc836e-b96c-3ef7-9c79-444afdbdedf6": {
      "content": "foreach ($${1:#:variable} as $${2:#:x}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true,
        "foreach-list": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "dfd28c84-921b-36a0-affd-a99c0a049946": {
      "content": "![${1:id}]: ${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:\"": true
      },
      "source": "vim-snippets/snippets"
    },
    "dfdbf103-23e4-339a-bfca-81d93b7f12e7": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0:${VISUAL}}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "dfded39d-7803-3ba2-85c1-2f6df06545de": {
      "content": "_.identity(${value})",
      "doc": "var object = { 'a': 1 };\n\nconsole.log(_.identity(object) === object);\n// => true\n\nThis method returns the first argument it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-identity",
      "matches": {
        "lodash identity": true
      },
      "source": "javascript/lodash"
    },
    "dfdf7db9-01ef-3e52-bd05-f76b9a616882": {
      "content": "Yii::app()->cache->set('${1:key}', ${2:value}, ${3:expire}, new C${4:}CacheDependency(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycas": true
      },
      "source": "vim-snippets/snippets"
    },
    "dfe0055f-3add-3965-a51a-c694547eb41c": {
      "content": "paste(${1:...}, ${2:collapse = ${3:NULL}})",
      "doc": "Paste0",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pas0",
      "matches": {
        "pas0": true
      },
      "source": "vscode-R/snippets"
    },
    "dfe42cfc-122b-3e8c-9641-4bfc752b7716": {
      "content": "border-top none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "dfeda0c9-ef03-32b9-bbd3-2b522ff1bba8": {
      "content": "offset: ${1:0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      },
      "source": "vim-snippets/snippets"
    },
    "dff46c5d-e4ef-3aaa-a1b6-458ddb00f690": {
      "content": "font-stretch: expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "dff47046-2722-31ed-8572-d1e09e315478": {
      "content": "align-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "dff4ec10-d94d-309e-9eae-53e303638fba": {
      "content": "mapply(${1:function}, ${0:...})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapply": true
      },
      "source": "vim-snippets/snippets"
    },
    "dff9ded9-e621-3484-8f49-769a50a3b16e": {
      "content": "${1:deferred}.resolve(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dres": true
      },
      "source": "snippets/javascript"
    },
    "dffab25b-3fb7-36cf-868f-1f19795c059d": {
      "content": "console.warn(${1:object})",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleWarn",
      "matches": {
        "cwa": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e00d9be3-f353-35ae-af25-327948ba4f0d": {
      "content": "moon.p ${0}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e01226da-829d-3a02-afdc-7ea1a3ba872f": {
      "content": "record\n\t${0}\nend record;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "record": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e016c3ff-6200-352b-9a7d-38be459498c8": {
      "content": "has ${1:attribute} => (\n\tis\t    => '${2:ro|rw}',\n\tisa \t=> '${3:Str|Int|HashRef|ArrayRef|etc}',\n\tdefault => sub {\n\t\t${4:defaultvalue}\n\t},\n\t${0:# other attributes}\n);",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      },
      "source": "vim-snippets/snippets"
    },
    "e01c1bf4-125b-3f25-8554-8e4b24985b80": {
      "content": "case ${1:/*value*/}:\n\t$2\n\tbreak;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "case (case)",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e01dd1ec-4e7d-3ace-9e1d-259d9c099fd6": {
      "content": "cursor crosshair",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "e02c8f09-bba2-3702-82d5-3c9dd0c12aa5": {
      "content": "this.route.paramMap\n\t.pipe(switchMap(params => params.get('id')), tap(id => (this.id = +id)))\n\t.subscribe(id => {$1});\n$0",
      "doc": "Angular - subscribe to routing parameters",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "routing-params-subscribe",
      "matches": {
        "a-route-params-subscribe": true,
        "angular routing params subscribe": true
      },
      "source": "javascript/angular"
    },
    "e03c1f02-a385-3538-a97c-74a038d173b1": {
      "content": "stringformat:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e03dcd9b-e267-3483-846a-64280e0b8e32": {
      "content": "(${1: a > b}) ? ${2:a} : ${3:b};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      },
      "source": "vim-snippets/snippets"
    },
    "e042225d-e817-33e2-bc5a-ad7671ef5478": {
      "content": "place-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "e043b4a7-5503-3b22-bbaf-8820acc12122": {
      "content": "align-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0486dab-3ef8-321a-8e36-d8cac19f225d": {
      "content": "pages = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pages": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e04b4aed-f079-379b-bdfb-7734a24a0bab": {
      "content": "clip: rect(${1:0} ${2:0} ${3:0} ${4:0});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0509d9f-22f0-387f-93a9-7f09fc04056b": {
      "content": "visibility ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0544848-7dbe-30c4-8274-4a0d47885f5f": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn ${2:value}${0};\n\t}\n}",
      "doc": "vue filter",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Filter",
      "matches": {
        "vfilter": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "e0591d90-33c1-3119-a346-a74901c89148": {
      "content": "id=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "id": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e05a7ef3-a4ca-34e9-a820-0e2ef2cb129a": {
      "content": "while let ${1:Some($2)} = $3 {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "while let (...)",
      "matches": {
        "whl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e05c5c33-7791-3fcf-9163-a4a40fae0a6d": {
      "content": "content: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e06913c9-7906-3a5b-92f3-a977b8818484": {
      "content": "padding-left: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-left: length (margin)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e06e68d2-f7e7-3d51-8c2e-8e0eb38f9bff": {
      "content": "${1:promise}.then((${2:value}) => {\n\t${0}\n})",
      "doc": "Promise.then",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-then",
      "matches": {
        "base promise then": true
      },
      "source": "javascript/base"
    },
    "e0706808-f9e7-3e66-be33-01115fa3e6f3": {
      "content": "grid-auto-rows: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      },
      "source": "vim-snippets/snippets"
    },
    "e072b5f3-3aa0-32b7-90d9-b8a8cc4bb9c6": {
      "content": "class ${1:ModelClassName}Sweeper < ActionController::Caching::Sweeper\n\tobserve $1\n\tdef after_save(${0:model_class_name})\n\t\texpire_cache($2)\n\tend\n\tdef after_destroy($2)\n\t\texpire_cache($2)\n\tend\n\tdef expire_cache($2)\n\t\texpire_page\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sweeper": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0740d58-99bf-33af-9713-3bd2c3e3cd89": {
      "content": "module ${1}\n${0}\nend#module",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "module ... end",
      "matches": {
        "module": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e07811ce-ce28-3dd6-856b-f2a73f7b5467": {
      "content": "constructor(props, context) {\n\tsuper(props, context);\n\t$0\n}\n",
      "doc": "Adds a default constructor for the class that contains props and context as arguments",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "classConstructorContext",
      "matches": {
        "conc": true
      },
      "source": "vscode-react/snippets"
    },
    "e0816576-b7a1-3930-af1c-4f6e9217a74e": {
      "content": "@import url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0869c45-a20e-3a8f-b6a0-c32bbb85ae6e": {
      "content": "throws ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ths": true
      },
      "source": "vim-snippets/snippets"
    },
    "e08d94b6-db3c-3d31-a7a8-febfd321de27": {
      "content": "when {\n\tchangelog '${1:changelog}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangelog": true
      },
      "source": "vim-snippets/snippets"
    },
    "e091ca42-bede-3951-83ae-8a97601fd24e": {
      "content": "$this->${1:method}()->shouldNotHaveCount(${2:7});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveCount(7)",
      "matches": {
        "sncount": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e0950da0-37fb-31a9-a271-14cff95d7474": {
      "content": "gem '${1:name}'${2:${3:, \"${4:1.0}\"}${5:${6:, require: ${7:\"${8:$1}\"}}${9:, group: :${10:test}}}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "gem",
      "matches": {
        "gem": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e0993f79-7ba4-3e60-849a-b7f1384bdb1b": {
      "content": "${1:var} = lambda ${2:vars} : ${0:action}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      },
      "source": "vim-snippets/snippets"
    },
    "e09ac906-e147-3f7e-b140-f9b799d78e63": {
      "content": "List<${1:Object}> ${2:list} = new ArrayList<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.al": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0a2262d-a357-3e2f-b46b-f6a832f24875": {
      "content": "${1:callbacks}.has(${2:callback})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Chas": true
      },
      "source": "snippets/javascript"
    },
    "e0a9a230-4a23-33e3-8bd9-81a4ea81af03": {
      "content": "do {\n    ${0:TARGET}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "do {} while() {}",
      "matches": {
        "do_while": true,
        "dowhile": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e0ad2593-48aa-3e1c-b3a8-7139d09999f5": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      },
      "source": "gosnippets/snippets"
    },
    "e0b02d3c-8643-3781-a4cf-e80ccf129359": {
      "content": "${1:obj}.outerWidth()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerw": true
      },
      "source": "snippets/javascript"
    },
    "e0b419d9-f9ec-39ab-b4c7-d7e8417ff64f": {
      "content": "border-top-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-width: size (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e0d0d11f-5b82-31a1-b2bd-33bdf4f9e76a": {
      "content": "[${1:text}](https://${2:address} \"${3:title}\")",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[\"": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0d60baa-8271-3a2f-8206-ccac1c4a2f7d": {
      "content": "<fieldset>${1:TARGET}</fieldset>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e0dae05d-2fd4-3abc-a728-4b095c1d8928": {
      "content": "_.assignWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.assign` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-assignwith",
      "matches": {
        "lodash assignwith": true
      },
      "source": "javascript/lodash"
    },
    "e0e3b515-94e7-30f0-b974-c1fbd8c33736": {
      "content": "always_latch begin ${1:: statement_label}\n\t${0}\nend $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0e5c88a-efff-31e2-aa4b-0c63dc60a88b": {
      "content": "sizeof(${0:TARGET})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true,
        "sizeof": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e0f0e5bd-15e3-3e8b-87af-568ca5ffe9fa": {
      "content": "componentWillMount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      },
      "source": "snippets/javascript"
    },
    "e0f3808a-62ff-36fa-af3c-b2194310dac9": {
      "content": "switch ( ${1:test} ){\n\t${2:condition1} { ${3:action} }\n\t${4:condition2} { ${5:action} }\n\tdefault { ${6:action} }",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0f3af57-a757-3667-b055-74342588b993": {
      "content": "python << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "python <<EOF | EOF",
      "matches": {
        "py": true,
        "python": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e0f7bac2-2c45-3d7f-bf2a-c42d8587e68e": {
      "content": "-moz-border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "e0fd3c93-5dcb-3554-877b-cd6e7560605c": {
      "content": "<%= form_tag(${1:\"${2:/users}\"}, method: ${3::post}) %>\n\t$0\n</form>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_tag",
      "matches": {
        "ft": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e100543e-0fde-302e-9b4c-69918385d7d3": {
      "content": "setattr(${1:#:obj}, ${2:#:attr}, ${3:#:value})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "setattr(..., ...)",
      "matches": {
        "setattr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e1106a92-271f-3b92-8995-f40891ad9b04": {
      "content": "border-bottom-left-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      },
      "source": "vim-snippets/snippets"
    },
    "e11df403-5210-34e7-be65-a87f42a8a879": {
      "content": "justify-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e12197e6-ec38-384c-bf46-1a13bb99a2b9": {
      "content": "{% debug %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      },
      "source": "vim-snippets/snippets"
    },
    "e12633fe-97b2-3894-a359-ba8d2505758e": {
      "content": "$this->assertCount(${1:$expectedCount}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertCount($count, $haystack)",
      "matches": {
        "asco": true
      },
      "source": "vim-snippets/snippets"
    },
    "e127801a-b66c-3e91-b19e-37eff3aefd1d": {
      "content": "justify-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "e12a3c8a-57ff-39fc-980b-fd5a52e8fcd6": {
      "content": "expect(${1:}).to.equal(${0});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...).to.equal(...)",
      "matches": {
        "expe": true
      },
      "source": "vim-snippets/snippets"
    },
    "e12c6836-9076-3a57-bf5d-c78e3b67910f": {
      "content": "import { Route, Switch, NavLink, Link } from 'react-router-dom'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React Browser Router - Route Combo",
      "matches": {
        "imbrc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e12f46c7-af67-32b4-81d7-d554422e5fce": {
      "content": "else:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "else: ...",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e12ffaad-2b68-3612-9100-622c8fff857b": {
      "content": "tag=\"$1\"$0",
      "doc": "tag=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-tag",
      "matches": {
        "tag": true,
        "vue tag": true
      },
      "source": "javascript/vue"
    },
    "e131ace5-488e-3360-bd86-2d312aa19ff3": {
      "content": "$.map(${1:arrayOrObject}, function (${2:value}, ${3:indexOrKey}) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapp": true
      },
      "source": "snippets/javascript"
    },
    "e1367e54-e7ec-332d-986a-138fd1ee01a9": {
      "content": "font-family: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      },
      "source": "vim-snippets/snippets"
    },
    "e14177ce-a27a-3236-8cfd-a1b6b59f89e0": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      },
      "source": "vim-snippets/snippets"
    },
    "e146db5b-8a08-3d4c-857f-5d6a2c85439c": {
      "content": "| rstrip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rstrip": true
      },
      "source": "vim-snippets/snippets"
    },
    "e14c77c8-6481-3526-99e1-ea0050bd7c31": {
      "content": "NSLog(@\"${1:%@}\"${2});",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "e14e65a0-1a73-3794-a602-f50e310859f1": {
      "content": "(ns ${1:example}\n  (:require [clojure.core.match :as m]))\n; vim: set lispwords+=m/match :",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require-core-match": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e150c0f8-029c-3769-9ef3-104fcc4f3e70": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1529a44-a187-3215-a90e-b87263c39e9a": {
      "content": "stringformat:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      },
      "source": "vim-snippets/snippets"
    },
    "e154809d-3e42-3570-8440-57c758c4ae6f": {
      "content": "margin: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      },
      "source": "vim-snippets/snippets"
    },
    "e160b0c2-8276-3fa1-86c7-00c08470781c": {
      "content": "\\label{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\label": true,
        "label": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e1614ec5-2937-3ba9-82d4-bf9ee2eda3d5": {
      "content": "from ${1:package} import ${0:module}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "from": true
      },
      "source": "vim-snippets/snippets"
    },
    "e16421d1-da2e-38e9-a32d-4694f8c29635": {
      "content": "validate({ params, query, store }) {\n\t${1:data}\n},",
      "doc": "Validate is called every time before navigating to a new route.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-validate",
      "matches": {
        "nuxt validate": true
      },
      "source": "javascript/nuxt"
    },
    "e1675211-3aa5-30dd-b6c1-e9185e2d1393": {
      "content": "if ${1:true} do\n  ${2:ok}\nelse\n  ${3:ok}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. else .. end",
      "matches": {
        "ife": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e1703783-d26e-3794-9424-b2931ca167ae": {
      "content": "text-align-last center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "e174e6f8-85cd-3144-8059-fc9921d322d2": {
      "content": "[Category(\"${0:#:category}\")]",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "category": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e175f51e-42b0-381e-bf83-83bc28a73a4f": {
      "content": "\\\\lim_{{$1}} {{$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "limit",
      "matches": {
        "lim": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1782c1f-503a-36e1-a061-aa72f3a2e64c": {
      "content": "align-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "e17e3065-a7da-3915-917c-7eabddad8210": {
      "content": "border-fit: overwrite",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      },
      "source": "vim-snippets/snippets"
    },
    "e18893ea-dd8c-3bc1-b1b2-570534fedade": {
      "content": "$this->input->is_cli_request();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-is_cli_request": true
      },
      "source": "vim-snippets/snippets"
    },
    "e18f6d39-0569-385e-b4a3-e61c3351a6f6": {
      "content": "def ${1:#:name}(self, ${2}):\n\t\"\"\"${3:#:method documentation}\"\"\"\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def method(self, ...): \"...\"",
      "matches": {
        "defmd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e194a29e-83ff-3fdc-95b4-4d303f102b85": {
      "content": "$this->assertFalse(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFalse($a)",
      "matches": {
        "asf": true
      },
      "source": "vim-snippets/snippets"
    },
    "e19ea47e-b391-3c61-9e37-1d8c5e2b0840": {
      "content": "MESSAGE \"${1:MessageContent}\" ${2:Data} VIEW-AS ALERT-BOX.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1a0af92-6877-3dac-bdc4-297e1ab7c535": {
      "content": "display: inline-block",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1a28b66-3899-344d-9174-c5adb19970c5": {
      "content": "import '${1:module}';$0",
      "doc": "Imports entire module in ES6 syntax without module name",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importNoModuleName",
      "matches": {
        "imn": true
      },
      "source": "vscode-javascript/snippets"
    },
    "e1a657b9-04c3-395f-b0aa-8928381c6f9b": {
      "content": "{\n\t/* $1 */\n\t$0\n",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "properties { } ( } )",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e1ab4954-1ac0-3670-b08a-f4938670e070": {
      "content": "{\n\t\"type\": \"page\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_page": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1af4a1e-8572-3473-b843-ebee9b41a14a": {
      "content": "<?php echo ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?e": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1b6553e-9798-3bbf-9d5e-74dc0bb8db6c": {
      "content": "<${1:div} :style=\"{ fontSize: ${2:data} + 'px' }\"></${1:div}>",
      "doc": "vue inline style binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Style Binding",
      "matches": {
        "vstyle": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "e1c121c4-d58e-3d4f-b9ae-7c5ce8aeef84": {
      "content": "<%= options_for_select ${1:collection}, ${2:value_method} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ofs": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1c32f94-9817-3e5e-8e5a-46474ae3b4fe": {
      "content": "assertSame(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1c3ab6d-f0c0-344e-9325-acf5b432873b": {
      "content": "_.forIn(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\nIterates over own and inherited enumerable string keyed properties of an\nobject and invokes `iteratee` for each property. The iteratee is invoked\nwith three arguments: (value, key, object). Iteratee functions may exit\niteration early by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forin",
      "matches": {
        "lodash forin": true
      },
      "source": "javascript/lodash"
    },
    "e1d1f38d-3a9d-318a-8b21-acfad2fbd28e": {
      "content": "background-position-y ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1d92fa8-6b94-3130-ace0-eb39df603fcc": {
      "content": "stop();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e1e285b7-75fd-30b5-8315-e372a2180120": {
      "content": "\\\\begin{multicols}{2}\n\t${1}\n\t\\columnbreak\n\t${0}\n\\\\end{multicols}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "two-column environment with multicol",
      "matches": {
        "multicol2": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1ee1e29-a912-3cdb-a842-178f3066785e": {
      "content": "data ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1eff4d0-051c-34c6-a493-ff18e510626b": {
      "content": "${1:obj}.blur(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blur": true
      },
      "source": "snippets/javascript"
    },
    "e1f02c7f-01e8-30d5-b247-318a9559c827": {
      "content": "respond_to do |wants|\n\twants.${1:html}${2: { $0 }}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "respond_to",
      "matches": {
        "rest": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e1f7e05e-5b34-3938-90b6-30815aac4e95": {
      "content": "cursor: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e1fc030e-1fad-3344-ac98-d15e5e869317": {
      "content": "text-wrap: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e20baee1-4f39-371e-9be9-1dac16c6561b": {
      "content": "spyOn(${1:object}, \"${2:method}\").andReturn(${3:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and return (coffee)",
      "matches": {
        "sr": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e210c947-70dd-3976-8beb-eecced0c7b81": {
      "content": "return ${1:this.num} -= ${2:1}",
      "doc": "decrement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-decrementer",
      "matches": {
        "vdec": true,
        "vue decrementer": true
      },
      "source": "javascript/vue"
    },
    "e2143426-c988-32b2-8fe2-dc49360780b1": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}');",
      "doc": "Creates an NgRx Action",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-action",
      "matches": {
        "a-ngrx-create-action": true,
        "angular ng rx create action": true
      },
      "source": "javascript/angular"
    },
    "e21825b3-cf70-3a34-8f87-43c7169c2983": {
      "content": "background-repeat: repeat-y",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2200ce0-8e18-31ef-8188-29d54acbaef1": {
      "content": "link:${1:/example.pdf}[${2:Text}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Relative link",
      "matches": {
        "linkrel": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e2241bf5-1c5a-317e-b7f0-0d71aaa8dcad": {
      "content": "leave-active-class=\"$1\"$0",
      "doc": "leave-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-active-class",
      "matches": {
        "leaveactiveclass": true,
        "vue leave-active-class": true
      },
      "source": "javascript/vue"
    },
    "e225b1bc-2931-3795-a58c-b01cce420138": {
      "content": ":only-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e2287ba0-8f07-3899-9c49-f8563f918b08": {
      "content": "case(${1})\n\t${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e235b815-c3af-3314-9ad9-4164f43cfb9f": {
      "content": "for ${1:key}, ${2:value} of ${3:object}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      },
      "source": "snippets/coffee"
    },
    "e23edc6e-290a-3439-ab55-fc420b503707": {
      "content": "it { should validate_uniqueness_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvu": true
      },
      "source": "vim-snippets/snippets"
    },
    "e23f86ee-656f-3fbd-8c39-5db783d62d69": {
      "content": "grid-column-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      },
      "source": "vim-snippets/snippets"
    },
    "e24467c2-9d0f-3c95-acc5-81ec27ad87a9": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n{\n\t${7}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun2": true
      },
      "source": "vim-snippets/snippets"
    },
    "e250260b-165f-3c46-bc6c-3e014b2ea6fb": {
      "content": "sig\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "anonymous signature",
      "matches": {
        "sig": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e25f6f9c-e503-34a7-b0a3-36310a118ccf": {
      "content": "grid-column-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2641323-cfbf-396f-94c1-b8bde93a7896": {
      "content": "[routerLink]=\"['${1:routePath}', ${2:routeParameterValue}]\"\nrouterLinkActive=\"${3:router-link-active}\"$0",
      "doc": "Angular routerLink with a route parameter",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngRouterLinkWithParameter",
      "matches": {
        "a-routerLink-param": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "e268dc32-3bc5-37fa-bbd9-8d1d30a4ad2f": {
      "content": "always_ff @(posedge ${1:clk}) begin ${2:: statement_label}\n\t${0}\nend $2",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alff": true
      },
      "source": "vim-snippets/snippets"
    },
    "e270b458-28b5-3b56-890e-94b927500b9f": {
      "content": "page-break-before: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      },
      "source": "vim-snippets/snippets"
    },
    "e273e5da-7b2b-352b-987c-28b59b2904bd": {
      "content": "file(name: \"${1:FILE}\" , description: \"${2:Choose a file to upload}\")${0}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramfile": true
      },
      "source": "vim-snippets/snippets"
    },
    "e27553b8-834f-37fc-974f-eb7128504998": {
      "content": "private def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "e27980e5-c940-323f-a4c3-4d0a5bdf0f4e": {
      "content": "{ ${1:try} } always { ${0:always} }",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "always": true
      },
      "source": "vim-snippets/snippets"
    },
    "e282cc77-3dbf-379e-b494-264290e84a2b": {
      "content": "${1:FIELDNAME} = models.BooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BooleanField",
      "matches": {
        "mbool": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e28a2aae-2f02-35be-9db4-6d2c9eb35cf5": {
      "content": "validates_confirmation_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:should match confirmation}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of (vc)",
      "matches": {
        "vc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e28a5813-03b1-3483-bda6-507f11aef29a": {
      "content": "content: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true,
        "content": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e28eee8c-ae89-3eed-a266-9597dc2a4668": {
      "content": "@impl true",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2924651-fd01-3163-b9ac-8bb367505dab": {
      "content": "assertFalse(\"${1:Failure message}\", ${2:condition});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "af": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2a0b4c9-4ac6-3793-8c1b-f8905c28e443": {
      "content": "_.valuesIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)\n\nCreates an array of the own and inherited enumerable string keyed property\nvalues of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-valuesin",
      "matches": {
        "lodash valuesin": true
      },
      "source": "javascript/lodash"
    },
    "e2a50cab-6080-3d39-addf-1714b123f67a": {
      "content": "axios.interceptors.request.use(function (config) {\n\t${1:do something}\nreturn config;\n}, function (error) {\n\t${2:do something}\n$return Promise.reject(error);\n});",
      "doc": "You can intercept requests before they are handled by then or catch.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-interceptors-request",
      "matches": {
        "axios interceptors request": true
      },
      "source": "javascript/axios"
    },
    "e2a69d50-c8c2-3190-ae2c-4804b38911c2": {
      "content": "Debug.Assert(${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Debug.Assert",
      "matches": {
        "da": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e2a79afa-0b06-3fb7-9026-c71fbb134a6e": {
      "content": "font-smooth: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2ac435d-737b-3d78-a81a-0cba8527c06e": {
      "content": "getter! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r!": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2c0ee77-9146-3c3c-853e-9be8bfa09f60": {
      "content": "test('should $1', async () => {\n\t$0\n})\n",
      "doc": "Testing `asynchronous test` block",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "testAsyncBlock",
      "matches": {
        "testa": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e2c4574d-1ee0-322d-a9a0-fa1f7fa49068": {
      "content": "<p id=\"${1}\">${2:TARGET}</p>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e2d3f39a-22a3-3fd8-815e-fe6ee9a0a982": {
      "content": "border-bottom-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2d4e695-f961-3b0e-9119-83246e27b549": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      },
      "source": "vscode-react/snippets"
    },
    "e2d59d0e-c1a0-3830-9a2d-8e3ee814ee9f": {
      "content": "perf(${1:scope}): ${2:title}\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "perf conventional commit",
      "matches": {
        "perf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e2dac8d1-d7f6-31d8-8090-f64a88324887": {
      "content": "-> { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2e9b141-573a-3736-9b6d-59240dd08036": {
      "content": "assert(${1:false}, \"${2:TODO}\");\n",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "assert (ass)",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e2e9d674-965d-3d99-9812-1f1059235a8c": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "props": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e2ea10af-10c0-3b3f-9c83-0c3ef531fc66": {
      "content": "_.replace(${string}, ${pattern}, ${replacement})",
      "doc": "_.replace('Hi Fred', 'Fred', 'Barney');\n// => 'Hi Barney'\n\nReplaces matches for `pattern` in `string` with `replacement`.\n\n**Note:** This method is based on\n[`String#replace`](https://mdn.io/String/replace).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-replace",
      "matches": {
        "lodash replace": true
      },
      "source": "javascript/lodash"
    },
    "e2f4652b-ad3b-3460-bdd7-ae5c8a812765": {
      "content": "console.profile(\"${1:label}\");\n${0:${VISUAL}}\nconsole.profileEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.profile",
      "matches": {
        "cprof": true
      },
      "source": "snippets/javascript"
    },
    "e2f75ac4-6898-3826-a2c0-168595b57092": {
      "content": "it { should have_many :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishm": true
      },
      "source": "vim-snippets/snippets"
    },
    "e2fc7a84-a260-34b2-825b-5761df40c9c4": {
      "content": "${1:public} string ${2}(${3})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms": true
      },
      "source": "vim-snippets/snippets"
    },
    "e300c577-9ea8-32f7-b068-f1f09b8a560c": {
      "content": "/**\n * ${1}\n */\nclass ${2:#:ClassName}${3:#:extends}\n{\n\t$5\n\tfunction ${4:__construct}(${5:#:argument})\n\t{\n\t\t${0:# code...}\n\t}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class_with_constructor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e3014c65-50ce-3d3e-a705-11d5ecb5f28f": {
      "content": "${1:#:method_name}: function(${2:#:attribute}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":f": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e302378b-b244-3290-8820-2d2358f1aba0": {
      "content": "=over 2\n=item\nArguments\n=over 3\n=item\nC<${1:DataStructure}>\n  ${2:Sample}\n=back\n=item\nReturn\n=over 3\n=item\nC<${0:...return data}>\n=back\n=back",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parg": true
      },
      "source": "vim-snippets/snippets"
    },
    "e304de7f-4284-368d-bf7d-9732ba1fe7eb": {
      "content": "<c:otherwise>\n\t${0}\n</c:otherwise>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cother": true
      },
      "source": "vim-snippets/snippets"
    },
    "e309ff28-12a8-342d-8123-f4d85aeea435": {
      "content": "box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      },
      "source": "vim-snippets/snippets"
    },
    "e30a4aae-1700-3f49-a328-02a248156f6b": {
      "content": "false",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "false",
      "matches": {
        "f": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3162bb0-7470-308a-be85-45d971c92247": {
      "content": "#![crate_name=${1:#:crate_name}]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crate": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e31bf39a-f6a6-384a-a5d2-c280b6d2b585": {
      "content": "if(${1:/*condition*/})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "if .. (if)",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e3203e8f-3e17-3aaf-b849-efa8ce964164": {
      "content": "# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "# -*- coding ...",
      "matches": {
        "coding": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e32272c3-ec1d-31ec-9f97-1445e22fa80c": {
      "content": "<% if ${1} %>\n\t${2}\n<% else %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3242916-1fd0-38cf-ac8a-55ca32edeeba": {
      "content": "cron { \"${1:name}\":\n\tcommand => \"${2}\",\n\tuser    => \"${3:root}\",\n\t${4}    => ${0},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cron": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3270166-2f98-37e8-9453-bb572878490a": {
      "content": "<p class=\"${1}\">${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p.": true
      },
      "source": "vim-snippets/snippets"
    },
    "e32a5960-e8eb-3ac7-929f-e595e5aa29d0": {
      "content": "list-style-position: inside;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "e32c4ce4-07ad-3ede-a80a-04cf3ddf6123": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplate: `$0`\n})\n\nexport class ${2:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }\n}",
      "doc": "Angular component with an inline template",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-component-with-inline-template",
      "matches": {
        "a-component-inline": true,
        "angular component inline template": true
      },
      "source": "javascript/angular"
    },
    "e32d1ad7-739c-39d6-8512-b903b2bc81a1": {
      "content": "?assertNotEqual(${1}, ${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asneq": true
      },
      "source": "vim-snippets/snippets"
    },
    "e33a2257-81cb-35ac-8eed-16b965fa0a31": {
      "content": "text-emphasis disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "e344cde9-b0fc-39ab-9372-accec8304eb3": {
      "content": "font: ${1:75%} ${2:\"Lucida Grande\", \"Trebuchet MS\", Verdana,} ${3:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font: size font (font)",
      "matches": {
        "font": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e34821ff-c4e9-3c61-9879-3f2f4979641b": {
      "content": "internal ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&-": true
      },
      "source": "vim-snippets/snippets"
    },
    "e34ba9cf-79bb-3a5d-bcf9-55c4156fe594": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e34e5d9d-d655-342b-9b51-065b53583386": {
      "content": "// spush and pop the current matrix stack\ngl.glPushMatrix();\n${0}\ngl.glPopMatrix();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl push matrix",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e356a2da-8ab1-3fb2-9b26-6ecc59d742d2": {
      "content": "def ${1:name}(${2:arg})(${3:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "e358aa1a-0c8c-3080-b139-2209cf795417": {
      "content": "it { should allow_mass_assignment_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isama": true
      },
      "source": "vim-snippets/snippets"
    },
    "e35c37eb-307d-3f63-b9cf-25ac314dcd9b": {
      "content": "until ${1:condition}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3639010-25d0-3ffe-8966-c0820e2eea01": {
      "content": "trait ${1:Name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Trait definition",
      "matches": {
        "trait": true
      },
      "source": "vim-snippets/snippets"
    },
    "e36c5cea-99c9-338d-be87-dd014bc14816": {
      "content": "align-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3702096-223e-3ab2-8ab1-522bc1f1cf95": {
      "content": "func (${1:self} ${2:Type}) ${3:Do}(${4}) ${5:error }{\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func (self Type) Method(...) [error] { ... }",
      "matches": {
        "meth": true
      },
      "source": "gosnippets/snippets"
    },
    "e370987e-7959-337d-9246-2362d2d3ef67": {
      "content": "const styles = StyleSheet.create({\n\t${1:style}\n})\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeStyles",
      "matches": {
        "rnstyle": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e3740d93-f597-32b9-8ad9-72a4e16501bc": {
      "content": "\\${0:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:TARGET}",
      "matches": {
        "0T": true,
        "0t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e3757d16-df5c-3416-b69d-337f28d45c33": {
      "content": "(:members (clojure.reflect/refrect ${1}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "java-methods": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e375c660-7e97-3f96-9d80-437664c4f57b": {
      "content": "import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<Text> ${2:textInComponent} </Text>\n\t\t\t</View>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactNativeComponentExport",
      "matches": {
        "rnce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e376062a-5572-314b-a450-962a0ee38d84": {
      "content": "console.log(${1:object})",
      "doc": "Displays a message in the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLog",
      "matches": {
        "clg": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e37ba736-158a-3aff-8efb-2021ad94bcc2": {
      "content": "{% for ${1} in ${2} %}\n\t${3}\n{% else %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig for else",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "e37e9c47-c0a0-3665-8b1e-da62cad7bf88": {
      "content": "flex-shrink: ${0:1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxs": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3838c71-40be-3f5a-b960-08f221a2bd4a": {
      "content": "border-fit: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "e386345e-806d-36ec-92b6-5c77c4de15ca": {
      "content": "it { should accept_nested_attributes_for :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isana": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3932c82-1534-34f9-8c14-bf5ed5940b6f": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Cache;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Cache",
      "matches": {
        "usecache": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e394ab04-31ae-38b6-835f-cb6b1c124490": {
      "content": "padding: ${1:0} ${2:0} ${3:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "e396b521-401d-35bf-a976-0422a3a05607": {
      "content": "enter-to-class=\"$1\"$0",
      "doc": "enter-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-to-class",
      "matches": {
        "entertoclass": true,
        "vue enter-to-class": true
      },
      "source": "javascript/vue"
    },
    "e397c468-21ea-31da-a586-dac328d7d784": {
      "content": "${1:deferred}.isRejected()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disrej": true
      },
      "source": "snippets/coffee"
    },
    "e39d3ac1-a22e-3770-85ea-dcda4578dcc5": {
      "content": "list-style-type: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3af2d9a-3c64-3019-9542-0f912fa986e1": {
      "content": "for ${1:@array} -> ${2:$variable} {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3b90113-2d6e-3cff-b485-5db987ce76ef": {
      "content": "- name: https\n  port: 443\n  protocol: TCP\n  targetPort: {{ .Values.$1.service.targetPorts.https }}\n  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.https))) }}\n  nodePort: {{ .Values.${1:value_key}.service.nodePorts.https }}\n  {{- end }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portHTTPS_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3b99404-35a0-334b-b2b5-d71da38d2c27": {
      "content": "main : Program Never ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}program\n\t\t{ init: ${6:( model, Cmd.none )}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "main": true,
        "prog": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e3bc9578-fa2a-3739-86c7-7a7e0d29952f": {
      "content": "place-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3cb8055-76e2-3269-88af-7575d80bda6d": {
      "content": "<code>$0</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML code comment",
      "matches": {
        "<c": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e3d241f4-ce03-3b93-be57-e6be3a37246b": {
      "content": "_.cloneWith(${value}, ${customizer})",
      "doc": "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(false);\n  }\n}\n\nvar el = _.cloneWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 0\n\nThis method is like `_.clone` except that it accepts `customizer` which\nis invoked to produce the cloned value. If `customizer` returns `undefined`,\ncloning is handled by the method instead. The `customizer` is invoked with\nup to four arguments; (value [, index|key, object, stack]).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonewith",
      "matches": {
        "lodash clonewith": true
      },
      "source": "javascript/lodash"
    },
    "e3ddbfe9-ea8f-3f14-b8e2-56d18a1bd16c": {
      "content": "panic(\"${0:msg}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic",
      "matches": {
        "pn": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3e35454-7ecf-3fc9-b307-14cb0aaf67cd": {
      "content": "import React, { PureComponent } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:$TM_FILENAME_BASE}\n",
      "doc": "Creates a React pure component class with ES7 module system export",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassExportPureComponent",
      "matches": {
        "rpce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e3e67921-640f-39cc-8ba8-4cc04dc9a025": {
      "content": "class ${1:#:name} {\n    ${2}\npublic:\n    $1(${3});\n};\n$1::$1($3) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e3ea4557-0ad7-383b-9225-5535663375e1": {
      "content": "integer ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer",
      "matches": {
        "in": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e3eafb0b-56a5-3f5f-8268-e15f54180dd2": {
      "content": "place-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3f0a4fb-c043-336d-a9c6-63953848e425": {
      "content": "margin ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3f26f83-b371-3fb8-bec8-27e2c5b5122f": {
      "content": "it_behaves_like ${0:'shared examples name'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3f354c5-3fd6-3486-ac0d-0afd969692b1": {
      "content": "bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "vim-snippets/snippets"
    },
    "e3f5a97f-f0ca-37b3-959f-af547c1c5046": {
      "content": "while (${1:/* condition */}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "e40305ec-f221-35d1-b030-44cdef58f1ff": {
      "content": "use Doctrine\\Common\\Collections\\ArrayCollection;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Doctrine\\..\\ArrayCollection",
      "matches": {
        "usearray": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e40ad1df-3f90-312a-b0f7-c58d58ce2608": {
      "content": "<input type=\"checkbox\" name=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputcheckbox": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e421bcd1-52a0-3c81-a5d1-1cbf86de8cfa": {
      "content": "interface ${1} ${2:#:extends}{\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e422cdfb-a3a5-3eee-ba73-190149c81141": {
      "content": "assert_throws :${1:expected}, -> { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ast": true
      },
      "source": "vim-snippets/snippets"
    },
    "e42923ed-db75-34a0-b6ce-f2e36954f597": {
      "content": "{% include \"$1\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e42a61c9-686b-36f6-b47a-69cb4ac6d9ae": {
      "content": "list-style-type: square",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "e42d7756-8344-3d02-977d-f2659b8bc208": {
      "content": "align-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "e42e05ce-e8f3-3f83-9638-d0482184f38f": {
      "content": "<left>{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e42e8123-a4ac-3691-b92a-9dda87a0814f": {
      "content": "echo CHtml::passwordField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhpf": true
      },
      "source": "vim-snippets/snippets"
    },
    "e430f0f4-de9e-37cf-a513-84662d1fdffc": {
      "content": "[style.${1:property}]=\"${2:expression}\"",
      "doc": "Angular [style] binding",
      "filetype": "html",
      "grammar": "lsp",
      "label": "style",
      "matches": {
        "a-style": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "e4518912-9cd2-3984-8938-9c2b9dc5be99": {
      "content": "blockIdx.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Block Index",
      "matches": {
        "bid": true
      },
      "source": "vim-snippets/snippets"
    },
    "e45214ef-91e6-3462-ab61-76c4b3f2d431": {
      "content": "align-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "e45439de-d6df-3eb9-9ddf-72badcb889ae": {
      "content": "${1:private/public }${2:static }${3:String} ${4:str}${5: =}${0:value};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "e45cb2a9-25bd-301f-aeef-4273259dc6ba": {
      "content": "<img id=\"${1}\" src=\"${2}\" alt=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img#": true
      },
      "source": "vim-snippets/snippets"
    },
    "e460d8d9-55b7-3d93-8c61-83bdf72c7d4c": {
      "content": "grid-auto-rows max-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      },
      "source": "vim-snippets/snippets"
    },
    "e465198a-04cc-3ffe-bd39-18f25e442988": {
      "content": "'''${1}'''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "'''": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e4652432-5553-3d28-9a24-9d9cb1375605": {
      "content": "text-transform: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text-transform": true,
        "tt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e4655dfa-a030-32c7-a942-2d96660c76fb": {
      "content": "@article{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    journal = {${4}},\n    year = {${5}},\n    memo = {volume, number, pages, month, note}\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@article": true,
        "article": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e46652f0-8461-3439-a18c-083e9f82c6b3": {
      "content": "try {\n  ${1:TARGET}\n} catch (${2:e}) {\n  ${3}\n} finally {\n  ${4}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e46653f7-ceb5-386d-ac6a-4a0284f9b78c": {
      "content": "render partial: '${1:item}', collection: ${0:@$1s}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4720db2-5690-357b-adb3-833e24ca332d": {
      "content": "isset($${1:array}[${2:key}])$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "isset array",
      "matches": {
        "isa": true
      },
      "source": "vim-snippets/snippets"
    },
    "e47821ff-be99-3308-b5f0-a8cba8cbb608": {
      "content": "align-self: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "e481792a-9733-3952-8c9c-e366b45bcfcf": {
      "content": "d3.svg.axis()\n  .orient(${1})\n  .scale(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "axis": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4893ca3-b2cc-38b0-9a1d-cb82d9828924": {
      "content": "let ${1} = ${2} in\n${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "e48bd81c-8a1e-3b7a-a95d-18f2513f8878": {
      "content": "export default (req, res) => {\n  if (req.method === 'POST') {\n    $1\n  } else {\n    $2\n  }\n};",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-api-method",
      "matches": {
        "next api method": true
      },
      "source": "javascript/next"
    },
    "e4923b92-1d23-3e03-b05f-b2745e5fc76f": {
      "content": "comment on column ${1:table}.${2:column} is '${0:comment}';",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colcom": true
      },
      "source": "vim-snippets/snippets"
    },
    "e49cd922-8a13-3088-9848-c696804b31e6": {
      "content": "else if(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "e49dbdc2-d161-3ebf-ae9d-5f6748e5c123": {
      "content": "t.Run(\"${0}\", func(t *testing.T){\n\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "t.Run(XYZ, func(t *testing.T){ ... })",
      "matches": {
        "tr": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "e4aba9d9-f5cb-332b-bec6-db2a0d9d9b94": {
      "content": "try\n\t$1\ncatch ${2:error}\n\t$3",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Try .. Catch",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e4aea1f2-00b5-36c0-a236-e5d13469ebb2": {
      "content": "text-height auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4b0591f-c4dd-3b8a-8ce2-ceb4ea9f8361": {
      "content": "filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4b297d8-6004-330b-9ea0-715d7d07a2b7": {
      "content": "grid-row-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4b782bd-eba0-37bc-9c3e-ee1d2c3613dd": {
      "content": "protected",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "po": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4c114fb-b8ff-3fc1-8bbb-d70bb464b806": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport { Component, Vue } from 'vue-property-decorator';\n\n\t@Component\n\texport default class ${0} extends Vue {\n\t\t\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Class based Typescript format",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Class based Typescript format",
      "matches": {
        "vbase-ts-class": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "e4c15f73-2848-30f6-a80e-954f1c825405": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      },
      "source": "vscode-react/snippets"
    },
    "e4c3757e-a168-36cc-b4f4-29d02fe143dd": {
      "content": "align-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4c79e54-ece4-3114-8397-bee3aeeeb10c": {
      "content": "zoom: 1",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4d7f89c-8f94-3753-8bc9-8b0d75d4b1e2": {
      "content": "const ${1:refContainer} = useRef(${2:initialValue});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useRef",
      "matches": {
        "userf": true
      },
      "source": "snippets/javascript"
    },
    "e4dca556-ab44-3753-96fb-d028b3bd2fa6": {
      "content": "log.Printf(\"${1} = %+v\\n\", $1)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Printf(...)",
      "matches": {
        "lf": true
      },
      "source": "gosnippets/snippets"
    },
    "e4e9133b-b8d6-3d80-bd76-e1957af85006": {
      "content": "<<\"${0:TARGET}\">>",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "<<\"...\">>",
      "matches": {
        "bs": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e4e9ecb8-7a74-3581-9ab4-e46be1a9e902": {
      "content": "background-clip: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4f1433e-a70e-3355-b553-d3f9fe5787a7": {
      "content": "${1:obj}.scroll(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scroll": true
      },
      "source": "snippets/javascript"
    },
    "e4f5535d-54e1-36ee-b4ea-455ccd1db86c": {
      "content": "align-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "e4f9ad37-21f6-3bad-90c5-4743f4541af3": {
      "content": "| round: ${1:0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "round": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5020a00-8756-3949-9b03-a9d54ec5dca1": {
      "content": "align-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "e50e263c-6943-34d3-b793-23700d381a57": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "e51223bd-0eaa-3781-aea5-ae5ea670c33b": {
      "content": "Map<${1:Object}, ${2:Object}> ${3:map} = new HashMap<$1, $2>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.hm": true
      },
      "source": "vim-snippets/snippets"
    },
    "e51ff679-c57b-3243-91d8-fc6441d61476": {
      "content": "empty-cells: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      },
      "source": "vim-snippets/snippets"
    },
    "e521ebbf-4137-3953-a840-077054547282": {
      "content": "border-bottom-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5263b02-28b2-320c-8b15-e06abf7ea600": {
      "content": "must_equal ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "me": true
      },
      "source": "vim-snippets/snippets"
    },
    "e52a533e-43fd-334b-9e6a-d6d59e0b3f18": {
      "content": "pub fn main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Main function",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "e52d7e82-3031-3503-b00c-dda599985b6f": {
      "content": "for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5310b7c-1764-3369-aae7-cd1f3872102f": {
      "content": "break ${1:label};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5443f33-7ac4-3e5f-90d5-caad095e0d16": {
      "content": "${1:obj}.unload(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unload": true
      },
      "source": "snippets/javascript"
    },
    "e54589dc-4098-3502-ac94-974c6fb754ee": {
      "content": "<svelte:body />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-body",
      "matches": {
        "svb": true,
        "svelte body": true
      },
      "source": "javascript/svelte"
    },
    "e5495e5d-8f47-3e18-b649-da5bea987b51": {
      "content": "number.round()",
      "doc": "number.round(type: 'floor' | 'ceil' | 'trunc' | 'round' = 'round'): Schema\n\nAdjusts the value via the specified method of Math (defaults to 'round').booleanDefine a boolean schema. Supports all the same methods as mixed.let schema = yup.boolean();\n\nawait schema.isValid(true); // => true\ndateDefine a Date schema. By default ISO date strings will parse correctly,\nfor more robust parsing options see the extending schema types at the end of the readme.\nSupports all the same methods as mixed.let schema = yup.date();\n\nawait schema.isValid(new Date()); // => true\nThe default cast logic of date is pass the value to the Date constructor, failing that, it will attempt\nto parse the date as an ISO date string.Failed casts return an invalid Date.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-round",
      "matches": {
        "yup number round": true
      },
      "source": "javascript/yup"
    },
    "e54e53cd-ec3d-3e1a-91a9-b72fcc1c6443": {
      "content": "console.dir(${0:obj});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.dir",
      "matches": {
        "cdir": true
      },
      "source": "snippets/javascript"
    },
    "e5521fab-1155-3be9-ae41-39b3546a7506": {
      "content": "_.set(${object}, ${path}, ${value})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n\n_.set(object, ['x', '0', 'y', 'z'], 5);\nconsole.log(object.x[0].y.z);\n// => 5\n\nSets the value at `path` of `object`. If a portion of `path` doesn't exist,\nit's created. Arrays are created for missing index properties while objects\nare created for all other missing properties. Use `_.setWith` to customize\n`path` creation.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-set",
      "matches": {
        "lodash set": true
      },
      "source": "javascript/lodash"
    },
    "e553eb91-65de-3b5d-bca3-7923eb0e4d57": {
      "content": "if ${1:#:condition} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e5557dbd-dd69-33d3-8c3f-8240a12f6a9c": {
      "content": "console.clear()",
      "doc": "Clears the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleClear",
      "matches": {
        "ccl": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e565f3b9-c02e-3640-8d15-94fc8dd791e4": {
      "content": "[${1:#:id}]: mailto:${2:#:url} \"${3:#:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[id]: email \"title\"",
      "matches": {
        "idemail": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e56be025-975b-36e6-9a6a-a413aeae8037": {
      "content": "it { should ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      },
      "source": "vim-snippets/snippets"
    },
    "e56e9af5-c06e-3dbf-b798-df34a244ec78": {
      "content": "type ${1:Interface} interface {\n\t${2:/* TODO: add methods */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "interface I { ... }",
      "matches": {
        "interface": true
      },
      "source": "gosnippets/snippets"
    },
    "e5756530-0cdf-305a-a55c-00791932cc68": {
      "content": "${1:expression} unless ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xunless": true
      },
      "source": "vim-snippets/snippets"
    },
    "e58080f6-a8be-361d-a88c-29e58522bd10": {
      "content": "def self.${1:class_method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      },
      "source": "vim-snippets/snippets"
    },
    "e58213e8-ca4d-3ccf-83a8-9d68bfeae9bd": {
      "content": "background-repeat: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5854732-436b-34ef-9b85-c72aff9391d5": {
      "content": "module type ${1} = {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modty": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5877f45-59e5-381e-a925-76e4d5f24fa3": {
      "content": "clear ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5895d19-d417-30bd-9994-62ab7d6f3e0a": {
      "content": "justify-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      },
      "source": "vim-snippets/snippets"
    },
    "e590bfca-295f-378d-aa12-864532a37b67": {
      "content": "curve(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:x4}, ${11:y4}, ${0:z4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "curve": true
      },
      "source": "vim-snippets/snippets"
    },
    "e59228fd-ffd5-33d3-9ed6-399fc4543386": {
      "content": "export default class ${1:className} extends ${2:baseclassName} {\n\t$0\n};\n",
      "doc": "Export default class which extends a base one in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportclassextends",
      "matches": {
        "base export class extends": true
      },
      "source": "javascript/base"
    },
    "e5977844-1a66-3d0b-bcbe-4130e52b12e4": {
      "content": "if isMainModule:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "if isMainModule: ...",
      "matches": {
        "ifmain": true,
        "main": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e59cc79f-87e6-36fb-a638-8609bdb482f1": {
      "content": "removeMovieClip(${1:#:target});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e5a12cb0-8293-3a8a-ab24-cf176c654b90": {
      "content": "${1:name}.asInstanceOf[${2:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5aad9e2-5084-3856-b522-a691e8fd1c3f": {
      "content": "border-style: inset;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5b91218-3931-3e61-869c-f2fd64a09933": {
      "content": "@isset\n\t${1:${VISUAL}}\n@endisset",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@isset directive",
      "matches": {
        "isset": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e5c53060-f65c-3936-bd24-63f1f9dd2ad7": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "supc": true
      },
      "source": "snippets/javascript"
    },
    "e5c92eba-b908-36ae-91db-da0a92274180": {
      "content": "<LocationMatch \"${1:regex}\">\n        ${2:config}\n</LocationMatch>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "locationmatch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e5cf6a4e-261b-351c-a9b4-f2e7076c506a": {
      "content": "border-bottom ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5d66195-84c1-3f64-b698-08b3df321e16": {
      "content": "\\begin{flushright}\n\t${1:TARGET}\n\\end{flushright}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{flushright} \\flushright": true,
        "flushright": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e5e6dc46-89d5-3dc9-8f79-41ae3cd4f0f9": {
      "content": "cy.scrollTo('${1:position}');",
      "doc": "Scroll to a specified position. Valid positions are topLeft, top, topRight, left, center, right, bottomLeft, bottom, and bottomRight.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-scroll-to-position",
      "matches": {
        "cypress scroll to position": true
      },
      "source": "javascript/cypress"
    },
    "e5e7a37d-b337-3569-bdce-8faf8e840d7e": {
      "content": "$this->${1:method}()->shouldNotHaveKeyWithValue(${2:'key'}, ${3:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveKeyWithValue('key', 'value')",
      "matches": {
        "snkeyvalue": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e5efae50-2c55-36c7-b567-b76539d72610": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-func-required",
      "matches": {
        "prop-types func required": true,
        "ptfr": true
      },
      "source": "javascript/prop-types"
    },
    "e5f2a0dd-f842-34e5-bffe-8c1a96ff1af4": {
      "content": "get ${1:propertyName}() {\n\treturn this.${0};\n}",
      "doc": "Creates a getter property inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertyGet",
      "matches": {
        "pge": true
      },
      "source": "vscode-javascript/snippets"
    },
    "e5f30f94-ef26-31fa-8f04-557ff31c78ed": {
      "content": ".. code-block:: ${1:#:filetype}\n${2:#:content}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "code",
      "matches": {
        "code_block": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e5fc119e-fdcc-37cf-b903-ba524599c95d": {
      "content": "let ${1} = ${2:${VISUAL}} in\n${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "e5fdba66-19f6-3c0a-abe9-c997e77f328a": {
      "content": "#!/usr/bin/env python\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python",
      "matches": {
        "#!": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e603e069-9899-3239-a765-06c43a86f067": {
      "content": "border-right-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-color: color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e6109355-8545-3e27-aafd-a415e0f88cf0": {
      "content": "border-bottom-left-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e61d0216-8885-38f0-ad73-43f7d10ff25c": {
      "content": "module type ${1:(* Name *)} = sig\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "Declare module signature",
      "matches": {
        "mot": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e62c00ca-cc96-371c-8f9f-839d3485f85e": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n{\n\t${7}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun2": true
      },
      "source": "vim-snippets/snippets"
    },
    "e630041b-2267-3d9e-9e31-610cb4ce9223": {
      "content": "if (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "e63025d7-f061-319e-b616-0a6660f9fefd": {
      "content": "ReactDOM.hydrate(${1:element}, ${2:container}[, ${3:callback}]);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.hydrate",
      "matches": {
        "rdh": true
      },
      "source": "snippets/javascript"
    },
    "e63c9658-60dd-3b7f-a50a-f0fa59e522b7": {
      "content": "_.tail(${array})",
      "doc": "_.tail([1, 2, 3]);\n// => [2, 3]\n\nGets all but the first element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tail",
      "matches": {
        "lodash tail": true
      },
      "source": "javascript/lodash"
    },
    "e63f10a9-b9a6-35fc-88dc-8efac4e373b3": {
      "content": "type ${1} = ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6423cb4-eb2c-37a5-b2ca-b025873814dd": {
      "content": "${1:trackBy}(index: number, ${2:name}: ${3:model}): ${4:number} {\n  return ${2:name}${5:.id};$0\n}",
      "doc": "TrackBy Function",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "trackby-function",
      "matches": {
        "a-trackby": true,
        "angular track by function": true
      },
      "source": "javascript/angular"
    },
    "e64d9d5a-5aac-3bd1-b168-45c4693fd54b": {
      "content": "list-style-type decimal-leading-zero",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6540081-f90b-39ad-aacd-daf19d4e057c": {
      "content": "@testset \"${1}\" begin\n\t${2}\n\t@test_throws ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "@testset with @test_throws",
      "matches": {
        "@tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "e666ee08-f5b3-3884-93ed-5f3861a971ac": {
      "content": "cursor: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "cursor: url (cursor)",
      "matches": {
        "cursor": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e6674cc9-54d7-3437-98c7-adc1260d9022": {
      "content": "export default function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n",
      "doc": "Creates a React 17 Functional Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactFunctionalComponent",
      "matches": {
        "_rfc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e67870b2-f53f-32d1-a200-6ffaebcf99b0": {
      "content": "$this->db->update(\"${1:table}\", $${2:set}, $${3:where});${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-update": true
      },
      "source": "vim-snippets/snippets"
    },
    "e67ba18a-94d6-3774-aaec-b09e9b052ead": {
      "content": "render",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render",
      "matches": {
        "rr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e681bc28-ca68-35e7-9b01-bfe6623c959b": {
      "content": "Mouse Down On Image    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down On Image",
      "matches": {
        "mdoi": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e68cd0b1-e49d-3d9c-9054-21086805c317": {
      "content": "| slice: ${1:0}, ${2:5}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      },
      "source": "vim-snippets/snippets"
    },
    "e68dacaa-a6ae-363e-8b52-aa0ad6d4acff": {
      "content": "echo CHtml::listOptions('${1:selection}', array(${2}), array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlo": true
      },
      "source": "vim-snippets/snippets"
    },
    "e696297e-ec8a-3706-882b-cba14db9b8d4": {
      "content": "<c:remove var=\"${1}\" scope=\"${0:page}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cremove": true
      },
      "source": "vim-snippets/snippets"
    },
    "e69afce0-4587-3b93-8776-6bbf1c641aaf": {
      "content": "border-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e69c2a02-151d-3c4b-ac80-65d05f7984ae": {
      "content": "\\${3}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3}",
      "matches": {
        "3": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e6a53044-d9eb-3728-b96a-8577a16bdc54": {
      "content": "file_put_contents(${1:file}, ${2:content}${3:, FILE_APPEND});$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "file_put_contents",
      "matches": {
        "fpc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6ae7271-9a09-3355-877b-1592511e8dda": {
      "content": "<style>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with CSS",
      "matches": {
        "style_with_CSS": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e6b018d9-16fc-3ae7-a3cf-30954b9fb17b": {
      "content": "- (${1:#:id})${2:#:thing}\n{\n\treturn ${2};\n}\n- (void)set${2}:(${1})aValue\n{\n\t${0}${1}old${2} = ${2};\n\t${2} = [aValue retain];\n\t[old${2} release];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e6b571f4-fefd-38be-8e9b-6323dd982f4c": {
      "content": "template ${2:/*name*/}(${1:/*args*/})\n{\n\t$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "template (temp)",
      "matches": {
        "temp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e6b8a449-b817-3a99-a5c0-1cd578595a70": {
      "content": "${1:array}.forEach(${2:currentItem} => {\n\t${0}\n})\n",
      "doc": "Creates a forEach statement in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forEach",
      "matches": {
        "fre": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e6bba4b6-b433-3b17-a7e6-3db1118fd73a": {
      "content": "{{- range $key, $value := .Values.tcp }}\n  - name: \"{{ $key }}-tcp\"\n\tport: {{ $key }}\n\tprotocol: TCP\n\ttargetPort: \"{{ $key }}-tcp\"\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portTCP_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6bdeb7f-d707-3295-9c7a-8c6f4f232ff1": {
      "content": "@extend ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6c2fce8-af3e-3e23-bb27-7b62878b4e34": {
      "content": "resize: horizontal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6c60877-21fa-3c4b-b0aa-246a5a74e516": {
      "content": "margin-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6c8556e-088a-364b-b3f8-d59fb1432533": {
      "content": "font-stretch: ultra-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6d1b028-6f64-32f7-b2a2-3fb9cfe8e580": {
      "content": "$.contains(${1:container}, ${0:contents})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      },
      "source": "snippets/coffee"
    },
    "e6db1cfe-9e92-341c-88e0-69930c846070": {
      "content": "else if ($1)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e6de9a9f-98ce-362b-b42a-b68e98598c10": {
      "content": "private ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m-": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6e9fb98-c9c4-37d5-b56f-cd3b93b4c8ee": {
      "content": "use Test::More;\nuse Test::Deep; # (); # uncomment to stop prototype errors\nuse Test::Exception;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tuse": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6ea994f-82a1-3665-a466-1967fddfb574": {
      "content": "Yii::app()->params['${0}']",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ypar": true
      },
      "source": "vim-snippets/snippets"
    },
    "e6fe5f92-dac6-334b-ae8c-f23e4e95ed01": {
      "content": "background-origin padding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "e702f40c-81f4-37df-a4ea-c3c441944973": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-string-required",
      "matches": {
        "prop-types string required": true,
        "ptsr": true
      },
      "source": "javascript/prop-types"
    },
    "e70e1f30-4928-3ca3-a308-15beb0648df3": {
      "content": "${fn:substringAfter(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e70e2ae0-bc1d-3af1-8ea1-0716fdd5f4b9": {
      "content": "${1:FIELDNAME} = forms.TypedMultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TypedMultipleChoiceField",
      "matches": {
        "ftmuchoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e71181e1-c45c-3c82-907c-57c68cb064ff": {
      "content": "<footer class=\"${1}\">\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer.": true
      },
      "source": "vim-snippets/snippets"
    },
    "e712bf1f-5d07-35bc-8fe1-365b1d522793": {
      "content": "${1:public }function ${2:#:FunctionName}(${3})\n{\n\t${4:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "public function () {}",
      "matches": {
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e72210ec-6de4-31a9-9494-17693daf18dd": {
      "content": "else {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e723cd9b-27cc-385a-9150-324ccdb93ff6": {
      "content": "begin\n\tfail 'A test exception.'\nrescue StandardError => e\n\tputs e.message\n\tputs e.backtrace.inspect\nelse\n\t# other exception\nensure\n\t# always executed\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      },
      "source": "vim-snippets/snippets"
    },
    "e726eaa9-5445-3f37-b7e5-31530dae3a08": {
      "content": "# frozen_string_literal: true",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frozen": true
      },
      "source": "vim-snippets/snippets"
    },
    "e731de3d-1220-327a-8236-2e5d1a45f970": {
      "content": "![${1:#:alt}][${2:#:id}]${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt][id]",
      "matches": {
        "altid": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e7323027-e268-361f-9bcc-df7c47ba82ba": {
      "content": "box-shadow: ${1:${2:offset-x} ${3:offset-y} ${4:blur} ${5:spread} ${6:color}};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "box-shadow: color-hex x y blur (text)",
      "matches": {
        "bxsh": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e7399b73-7714-34af-bb38-d912dd3f0557": {
      "content": "for ${1:i}=${2:1},${3:10} do\n\t${0:print(i)}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "e73b55a2-5e21-358c-8e02-f976a5e0810c": {
      "content": "${1:true} ? ${2:a} : ${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?:": true
      },
      "source": "vim-snippets/snippets"
    },
    "e740ee42-c87d-3376-9e95-2720d83d4ceb": {
      "content": "-moz-border-image: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "e746f92e-31a1-3d41-9fbb-1427f899fecf": {
      "content": "right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7470d90-5423-34de-ac45-2b549a4c8b78": {
      "content": "_.isMatch(${object}, ${source})",
      "doc": "var object = { 'a': 1, 'b': 2 };\n\n_.isMatch(object, { 'b': 2 });\n// => true\n\n_.isMatch(object, { 'b': 1 });\n// => false\n\nPerforms a partial deep comparison between `object` and `source` to\ndetermine if `object` contains equivalent property values.\n\n**Note:** This method is equivalent to `_.matches` when `source` is\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismatch",
      "matches": {
        "lodash ismatch": true
      },
      "source": "javascript/lodash"
    },
    "e74fc3dd-8294-31f9-b682-c24a2f8c774a": {
      "content": "<xsl:apply-templates select=\"${1:*}\">\n\t<xsl:with-param name=\"${2:param}\">${3}</xsl:with-param>${4}\n</xsl:apply-templates>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "with-param",
      "matches": {
        "apply-templates": true
      },
      "source": "vim-snippets/snippets"
    },
    "e75d3dcb-b042-3f35-9822-42c9f2169f4b": {
      "content": "catch ($1) {\n\t$2\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "ch",
      "matches": {
        "catch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e760079c-81f9-3d64-99f3-937a3d20e900": {
      "content": "border-bottom-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e765202a-045e-33b2-bc3d-91e35971ec0d": {
      "content": "@class ${1:Foo};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e76a67a0-fb09-3e16-b7a9-8ea13b3e547c": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7798c22-ac17-3a5a-abf7-87bd466e806c": {
      "content": "this.state = {\n\t$1\n};",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "emptyState",
      "matches": {
        "est": true
      },
      "source": "vscode-react/snippets"
    },
    "e77d1292-1d68-317b-95a1-ac0ab5759b36": {
      "content": "${1:public|internal} class ${2:name} ${0:extends } {\n\tpublic function $2 (\t) {\n\t\t(\"start\");\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/snippets"
    },
    "e78b6904-33d0-3385-83ca-dc695ce5935f": {
      "content": "var ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts var",
      "matches": {
        "tvar": true
      },
      "source": "vim-snippets/snippets"
    },
    "e799ced8-32db-3221-9aaf-1d137e0838cc": {
      "content": "unless ${1} do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do .. end",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "e79a5d64-e18a-3c59-bdb8-386e3e651bc0": {
      "content": "text-align-last: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "e79e1f7e-91d8-3f52-a51c-88ae15599aa0": {
      "content": "<%text>\n\t${0:}\n</%text>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7a485c1-fdb8-392e-b7d8-4510e59c149e": {
      "content": "for all ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for all",
      "matches": {
        "for_all": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e7a4c80b-97e5-30c5-a058-dc2a864945d3": {
      "content": "when others => ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when others",
      "matches": {
        "wheo": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7a754df-0384-30ec-8604-6e6536b7aa7c": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdown": true
      },
      "source": "snippets/javascript"
    },
    "e7a90c24-e8d2-3b38-8228-b595b0e87ada": {
      "content": "for (const ${1:prop} of ${2:object}) {\n\t${0:$1}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (const prop of object}) { ... }",
      "matches": {
        "foro": true
      },
      "source": "snippets/javascript"
    },
    "e7a9a9de-4009-3d71-bfb0-984c25c33acc": {
      "content": "align-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7ad24ca-bf94-3496-979a-3d6ed9b1647a": {
      "content": "{:then ${1:value}}\n\t${2: <!-- content when promise was fulfilled -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-then-block",
      "matches": {
        "svelte then": true,
        "svthen": true
      },
      "source": "javascript/svelte"
    },
    "e7bb08f1-1cf3-3352-942a-adbf5f24f6bc": {
      "content": "{% endmacro %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endmacro",
      "matches": {
        "endmacro": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7bf20dc-2a09-34a1-963a-96317797e50e": {
      "content": "<pre>\n\t{{ dump(${1}) }}\n</pre>",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig dump",
      "matches": {
        "dump": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7c28a86-85fc-3623-849d-81aeb8b27f2b": {
      "content": "background-repeat: repeat-y;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7ca01cd-ccfd-3893-af68-a56b6a367230": {
      "content": "list-style-image: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-image: url (list)",
      "matches": {
        "list": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e7cf8e7c-8bc6-3894-9a1f-0a82e77946be": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "M": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e7d12afa-9ecf-358a-a585-70c6237e1836": {
      "content": "grid-row-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7d2f3bf-6efc-3a9b-b887-ebc4b1ce70e7": {
      "content": "<c:set var=\"${1}\" value=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cset": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7d6b48b-874c-3fb2-93bc-b2c7144a0f3d": {
      "content": "<% content_for :${1:head} do %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conf": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7d6e06d-77b8-32f9-a376-bf3a257cf9de": {
      "content": "import { NgModule } from '@angular/core';\n\nimport { ${1:Name}Component } from './${2:name}.component';\n\n@NgModule({\n\timports: [],\n\texports: [],\n\tdeclarations: [${1:Name}Component],\n\tproviders: [],\n})\nexport class ${1:Name}Module { }\n$0",
      "doc": "Angular Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-module",
      "matches": {
        "a-module": true,
        "angular module": true
      },
      "source": "javascript/angular"
    },
    "e7e6e8ea-4ff1-3839-94b5-dc4f961c9326": {
      "content": "public override bool Equals(object obj)\n{\n\tif (obj == null || GetType() != obj.GetType())\n\t{\n\t\treturn false;\n\t}\n\t${0:throw new NotImplementedException();}\n\treturn base.Equals(obj);\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7ef22cc-934d-3dc2-a677-b668ea24e703": {
      "content": "t.integer :lock_version, null: false, default: 0\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7f062c6-5e85-3e4e-92a9-9cc30c2acecc": {
      "content": "pluralize:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      },
      "source": "vim-snippets/snippets"
    },
    "e7f1c171-87a0-3b63-ad8b-39cc7a6d05ca": {
      "content": "${1:obj}.removeAttr('${2:attribute name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rema": true
      },
      "source": "snippets/javascript"
    },
    "e80d2fa0-4ffb-3c44-9524-d3c2367161fc": {
      "content": "CREATE TABLE ${1:cities} (\n  ${0:name varchar(80), country_name text}\n);",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "CREATE TABLE { ... }",
      "matches": {
        "CREATE_TABLE": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e80e972a-bb90-3845-8a0c-047aee879926": {
      "content": "case ${1:word} in\n\t${2:pattern})\n\t\t${0};;\nesac",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8183926-a105-311e-9d58-af1d3d7dfe9a": {
      "content": "| url_param_escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_param_escape": true
      },
      "source": "vim-snippets/snippets"
    },
    "e818f2eb-5f6a-3b86-8e4a-2b1872116cc8": {
      "content": "padding-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      },
      "source": "vim-snippets/snippets"
    },
    "e81cea43-1476-3240-9372-a9b5dddbaaa0": {
      "content": "reverse(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reverse": true
      },
      "source": "vim-snippets/snippets"
    },
    "e820dfe2-4924-30ea-899c-3aabd07df218": {
      "content": ":after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e82755dd-2308-35da-902a-ff4587594450": {
      "content": "error_log(var_export(${1}, true));",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "error_log(var_export($var, true));",
      "matches": {
        "log": true
      },
      "source": "vim-snippets/snippets"
    },
    "e82a45ea-53df-3b62-8862-b660749a2233": {
      "content": "const ${1:module} = require('./${1:module}');",
      "doc": "require assignment local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-assignment-local",
      "matches": {
        "base require assignment local": true
      },
      "source": "javascript/base"
    },
    "e8349a3e-9012-326e-8bbc-efd5b78d5010": {
      "content": "text-height: text-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "e84095f3-161b-3394-a2ff-0b1e64b927da": {
      "content": "height: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8410b5d-789c-369c-8ed5-8bc0da2985a6": {
      "content": "validates :${0:attribute}, presence: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vp": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8411ad0-a056-3190-ad0c-dcd2ca03dbe9": {
      "content": "<%= link \"${1:Submit}\", to: ${2:\"/users\"}, method: ${3::delete} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "link",
      "matches": {
        "lin": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8459d4f-5284-3c55-834f-ccea0d2bc243": {
      "content": "1. ${1:first}\n2. ${2:second}\n3. ${3:third}\n$0",
      "doc": "Insert ordered list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert ordered list",
      "matches": {
        "ordered list": true
      },
      "source": "vscode-R/snippets"
    },
    "e845cd07-5dbe-393b-8321-fd07ef14a164": {
      "content": "grid-auto-columns: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      },
      "source": "vim-snippets/snippets"
    },
    "e84b6b73-e970-3099-a0c3-7b80b1cdd091": {
      "content": "bind:${1:property}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-property",
      "matches": {
        "svbind-property": true,
        "svelte bind property": true
      },
      "source": "javascript/svelte"
    },
    "e84c2c1d-e804-3c99-8715-6f0d303c161e": {
      "content": "for (var ${1} in ${2}){\n\t${3:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "fi",
      "matches": {
        "fori": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e857d2c9-a116-3d45-92ae-e7eb68196a7a": {
      "content": "PStore.new('${1:file_name.pstore}')",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Pn-": true
      },
      "source": "vim-snippets/snippets"
    },
    "e85a4ade-0cdb-3608-9b84-6a02f3713719": {
      "content": "mixed.nullable()",
      "doc": "mixed.nullable(isNullable: boolean = true): Schema\n\nIndicates that null is a valid value for the schema. Without nullable()\nnull is treated as a different type and will fail isType() checks.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-nullable",
      "matches": {
        "yup mixed nullable": true
      },
      "source": "javascript/yup"
    },
    "e85fcaa3-911c-3f55-9f28-43fbd7853519": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e860311e-79f7-38ef-b17b-a918782cb03f": {
      "content": "t.references :${1:taggable}, polymorphic: { default: '${2:Photo}' }\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcr": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8685d3a-48c5-39ae-9ca3-744a5c5ffd56": {
      "content": "load(${1:file}, ${2:envir = ${3:parent.frame()}}, ${4:verbose = ${5:FALSE}})",
      "doc": "Load RData",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "loa",
      "matches": {
        "load": true
      },
      "source": "vscode-R/snippets"
    },
    "e8869146-0cca-3c6e-97e5-8744f8e5f22f": {
      "content": "-moz-box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "e88ca2a9-2415-3a43-aafe-111be5f391b0": {
      "content": "background-repeat: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backrepeat": true,
        "br": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e89385e3-0715-379c-a808-d5d301bd4f2c": {
      "content": "@return ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e89fe58d-71bd-3fb1-9c99-352db411f25b": {
      "content": "${1:void} ${2:#:func_name}(${3:void}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "func() {}",
      "matches": {
        "func": true,
        "function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e89feebc-a3a4-37f6-85b7-ff5c39c49e34": {
      "content": "border: ${1:1px} ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border:   size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e8a65029-c2d9-38eb-ae34-20cd29b57e5e": {
      "content": "t.decimal :${1:title}${2:${3:, precision: ${4:10}}${5:, scale: ${6:2}}}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create decimal column",
      "matches": {
        "tcd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e8b8e6ff-c250-3e48-873e-e5c248edc147": {
      "content": "@online{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    url = {${4}},\n    note = {year/date},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@online": true,
        "online": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e8ca7f0d-d5a7-3d9f-a874-29196428d165": {
      "content": "notFound(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rnf": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8cb0ae6-2550-3b63-be6e-a6560e525eab": {
      "content": "<nuxt-link :to=\"{\t${1|name,path|}: '${2:value}', ${3|params,query|}: {\t${4:key}: '${5:value}'\t}\t}\">$6</nuxt-link>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-namedlinkto",
      "matches": {
        "nuxt namedlinkto": true
      },
      "source": "javascript/nuxt"
    },
    "e8cbf5cc-691c-3d42-ab1b-b738200c955e": {
      "content": "void mouseMoved(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseMoved": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8db1371-b0a0-35c2-a0cf-905643c781b1": {
      "content": "setTimeout(function () {${0}}${2}, ${1:10});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "timeout": true
      },
      "source": "snippets/javascript"
    },
    "e8de50d4-e585-3c11-9a0e-48e12f4db97a": {
      "content": "printNum(${1:#:level}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e8e8925a-da41-363b-a2cf-7970bbc1ff8f": {
      "content": "word-break keep-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "e8e9bdb9-fc35-3137-ab4a-01de8e50b34f": {
      "content": "import PropTypes from 'prop-types'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import PropTypes",
      "matches": {
        "impt": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e8f81c95-a4de-3e0e-bd6e-8180586ec14e": {
      "content": "with ${1:open}(${2:#:filename, mode}) as ${3:f}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "with {func}({file}) as :",
      "matches": {
        "with": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e8fe390e-4e99-3714-8251-a059c1ee1136": {
      "content": "assert_nothing_raised(${1:StandardError}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnr": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9028f88-7be7-340a-98e9-fab4f7ab5c61": {
      "content": "padding: ${1:20px} ${2:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   V H (padding)",
      "matches": {
        "padding": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e9036460-4338-36d5-a9bb-044ef009f37e": {
      "content": "${1:obj}.toggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togsh": true
      },
      "source": "snippets/coffee"
    },
    "e9172818-ddd5-3ece-a166-2781c3c91657": {
      "content": "its(:${1:method}) { should ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "its": true
      },
      "source": "vim-snippets/snippets"
    },
    "e91f713d-d0c1-3296-9840-94a1d948fd85": {
      "content": "Serial.write();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9247f68-c19e-371c-b439-f0312d36fe7f": {
      "content": "file(glob ${1:srcs} *.${0:cpp})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glob": true
      },
      "source": "vim-snippets/snippets"
    },
    "e924872d-0807-3b69-8105-96a77f30d279": {
      "content": "padding: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "e927af1c-9a9c-37e2-8954-fe66fc66dab0": {
      "content": "margin-bottom auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9338b60-956d-36e3-b9c6-53e649028032": {
      "content": "v-model=\"${1:something}\"",
      "doc": "Expects: varies based on value of form inputs element or output of components",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-model",
      "matches": {
        "vmodel": true,
        "vue v-model": true
      },
      "source": "javascript/vue"
    },
    "e9364af3-42f5-3ec6-90e9-05930807b6f2": {
      "content": "elseif ${1:condition} then\n\t${0:--body}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      },
      "source": "vim-snippets/snippets"
    },
    "e937061b-191b-3eba-9f16-6416c69731a2": {
      "content": "${1:#:set the_application to }choose application with prompt \"${2:#:Choose an application:}\"${3:#:with multiple selections allowed}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Applications": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e93e3bce-f3a9-3d7a-82e8-6e4ad600f2c6": {
      "content": "$t('$1', { $2: $3 })",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "transc": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9422add-32e6-3be0-8d40-c431a285ff55": {
      "content": "_.stubFalse()",
      "doc": "_.times(2, _.stubFalse);\n// => [false, false]\n\nThis method returns `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubfalse",
      "matches": {
        "lodash stubfalse": true
      },
      "source": "javascript/lodash"
    },
    "e947d8b8-7fb3-3356-ad6e-40a00c232536": {
      "content": "<param name=\"${1}\">${2}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML pramameter comment",
      "matches": {
        "<p": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e948923e-464a-31df-899d-2628fca7cbf0": {
      "content": "mix : [ { ${1:block} : '${2:block}' } ],",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      },
      "source": "vim-snippets/snippets"
    },
    "e948de63-0666-3b03-bac4-d4a2a067b28e": {
      "content": "unchecked\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unchecked block",
      "matches": {
        "unchecked": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e9495588-44ff-3a86-997d-74b3c5fdf562": {
      "content": "border-top-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      },
      "source": "vim-snippets/snippets"
    },
    "e94dd669-b2ee-3de4-9382-1dd322333c11": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      },
      "source": "vim-snippets/snippets"
    },
    "e952b05d-96bb-336d-bb69-7c061978a7f6": {
      "content": "function ${1:name}($2) result($3)\n\t${0}\nend function $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "func": true
      },
      "source": "vim-snippets/snippets"
    },
    "e955caf4-f343-3729-ba58-c03e3151e928": {
      "content": "\\begin{sffamily}\n\t${1:TARGET}\n\\end{sffamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{sffamily} \\sffamily": true,
        "sffamily": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e95747b6-45d3-3c53-94b1-63f82993e148": {
      "content": "const ${1:cx} = ${2:classNames}.bind(styles);",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-bind-usage",
      "matches": {
        "classnames bind usage": true
      },
      "source": "javascript/classnames"
    },
    "e95d4b12-7fed-3f94-9b88-94f3eba935ed": {
      "content": "+ (void)initialize\n{\n\t[[NSUserDefaults standardUserDefaults] registerDefaults:[NSDictionary dictionaryWithObjectsAndKeys:\n\t\t$0@\"value\", @\"key\",\n\t\tnil]];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Initialize Implementation (I)",
      "matches": {
        "I": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e95f36d8-2e2c-304f-896f-35a08a827372": {
      "content": "<table id=\"${1}\">\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table#": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9646043-766a-36ab-ba48-de0361e9c194": {
      "content": "const ${1:results} = await request(\n  ${2:url},\n  ${3:query}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-request",
      "matches": {
        "graphql-request request": true
      },
      "source": "javascript/graphql-request"
    },
    "e968af70-2b9c-3b95-92fb-e144491a0262": {
      "content": "grid-row-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "e96bb333-b981-3d2c-9cdb-812899b63d21": {
      "content": "&#x2325;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9783eef-fc1a-3f0c-994e-b6b05d28ad57": {
      "content": "[$1 for ${1:x} in ${2:#:list} if ${3:#:condition}]",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "[x for x in {list} if {condition}]",
      "matches": {
        "filter": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e97cf868-e396-3d16-81ca-1fae8c8a72d1": {
      "content": "-behaviour(${1:behaviour}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beh": true
      },
      "source": "vim-snippets/snippets"
    },
    "e98cccdb-3664-3533-8d78-fc4715c8d591": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "e997180c-3f37-3461-8e48-51cf60357d1a": {
      "content": "vertical-align text-top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9a39ed0-2a07-36bb-a2b8-3fbeb7d55927": {
      "content": "max-width: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9ac322d-c57a-3bdc-b88a-f80b7eb0be1c": {
      "content": "<param name=\"${1}\" value=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9af5bca-8c2f-38f3-a46d-a3ca52b10472": {
      "content": "add_dependencies(${1:target}\n\t${0:dep}\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dep": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9b712c3-e678-3bdb-836c-d6ec0034baf4": {
      "content": "<b>${1:TARGET}</b>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e9b78861-6d42-37d2-9c5a-ff4d08fef16c": {
      "content": "let ${1} = ${2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let variable declaration with type inference",
      "matches": {
        "let": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9b9ccc6-172b-385d-a781-be1517f8ee69": {
      "content": "float: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9bad520-01fe-3c95-8245-039542d4310a": {
      "content": "@unless (${1:condition})\n    ${2}\n@endunless",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@unless ... @endunless",
      "matches": {
        "unless": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e9bb37a3-518f-368d-8072-b26699e0cc1c": {
      "content": "int ${1:y} = threadIdx.y + blockIdx.y * blockDim.y;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Y index (1D)",
      "matches": {
        "iy": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9c419d7-a673-3558-9a24-d569c0214774": {
      "content": "host { \"${1:hostname}\":\n\tip => ${0:127.0.0.1},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "host": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9ca9369-c536-3f47-98d4-059c52a20522": {
      "content": "@brief ${0:Description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@br": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9d03727-ab44-34bc-ab16-84e792567d31": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9d0c96e-73f1-320e-b2d2-52c59805d26e": {
      "content": "<%def name=\"${1:name}\">\n\t${0:}\n</%def>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9d7806f-d9c4-3330-a967-c0102d820190": {
      "content": "\\\\subsubsection{${1:subsubsection name}}%\n\\\\label{ssub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsubsection",
      "matches": {
        "ssub": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9da438d-ec09-35fb-adff-935bb97efe10": {
      "content": "<nav class=\"${1}\">\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav.": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9db12f5-da72-35ec-8ed8-f6ca843d7d9d": {
      "content": "table-layout: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9de3936-160d-3fc8-baf4-5bcfaf81d61e": {
      "content": "[Conditional(\"${1:#:SYMBOL}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true,
        "conditional": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e9dfc0e9-c1fb-3727-a1e7-f6df955bca5c": {
      "content": "t.decimal :${1:title}${2:${3:, precision: ${4:10}}${5:, scale: ${6:2}}}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.decimal (tcd)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "e9e118aa-680b-35b0-bffa-8fc95567c7f8": {
      "content": "function (${1})${2: use } {\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "function () {}",
      "matches": {
        "function_literal": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "e9f3aa1b-78da-36b0-8e03-4a7532efd2f3": {
      "content": "margin-left: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9f85e00-63c9-3a8d-9085-900af15a20e9": {
      "content": "REXML::Document.new(File.read('${1:path/to/file}'))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml-": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9fb32f3-7c1d-3f7f-9d1f-421504c09a87": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "else { ... }",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "e9fce86a-38a7-329a-b74a-2c5a9e214301": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:parent}_${3:child}_path(${4:@$2}, ${0:@$3}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "linp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea093597-6416-3527-a3a3-ecdfea88871a": {
      "content": "if(${1}) {\n\t${2}\n} else if(${3}) {\n\t${4}\n} else {\n\t${5}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea25e624-cb7f-3401-a7d5-13bff5a6fe5d": {
      "content": "volume = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "volume": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ea293ee6-5706-350c-956b-b7f2b89fb0f1": {
      "content": "DEFINE VARIABLE ${1:VariableName} AS ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defvar": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea2a5fa7-acaf-3ca2-8e71-e8732d3b111a": {
      "content": "quotes: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea2aacde-f403-3138-a499-342afe5be261": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}\n",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      },
      "source": "vscode-react/snippets"
    },
    "ea2bb68c-52be-321b-a3a3-88d873f5a86b": {
      "content": "validates_presence_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of",
      "matches": {
        "vp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ea2f4fd0-8c22-3c22-bef4-5b10c86a8d26": {
      "content": "${1:obj}.is('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      },
      "source": "snippets/javascript"
    },
    "ea45c1bb-6c07-3dfa-be6d-ff6540c091ab": {
      "content": "<blockquote>${1}</blockquote>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ea4d9072-d3ec-3678-b3dc-1e357d395f28": {
      "content": "static ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea58e6d6-9425-3943-915f-4093669bab87": {
      "content": "(function(${1}) {\n\t${0:${VISUAL}}\n}(${2}));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(f": true
      },
      "source": "snippets/javascript"
    },
    "ea5aef1f-c074-3170-a7b6-377f6b0fb034": {
      "content": "console.log(JSON.stringify(${0}, null, 2));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.log stringified",
      "matches": {
        "clstr": true
      },
      "source": "snippets/javascript"
    },
    "ea5c1b4e-2311-3143-94f4-d249a0ed49d6": {
      "content": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "() ? a : b",
      "matches": {
        "ter": true,
        "ternary": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ea63b9cf-fcd6-337c-9fe0-3e97908accb6": {
      "content": "map {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ea66d97b-04b7-3514-9412-24fb3b473b72": {
      "content": "mixed.transform()",
      "doc": "mixed.transform((currentValue: any, originalValue: any) => any): Schema\n\nAdds a transformation to the transform chain. Transformations are central to the casting process,\ndefault transforms for each type coerce values to the specific type (as verified by isType()).\ntransforms are run before validations and only applied when strict is true. Some types have built in transformations.Transformations are useful for arbitrarily altering how the object is cast, however, you should take care\nnot to mutate the passed in value. Transforms are run sequentially so each value represents the\ncurrent state of the cast, you can use the originalValue param if you need to work on the raw initial value.let schema = string().transform(function(value, originalvalue) {\n  return this.isType(value) && value !== null ? value.toUpperCase() : value;\n});\n\nschema.cast(\"jimmy\"); // => 'JIMMY'\nEach types will handle basic coercion of values to the proper type for you, but occasionally\nyou may want to adjust or refine the default behavior. For example, if you wanted to use a different\ndate parsing strategy than the default one you could do that with a transform.module.exports = function(formats = \"MMM dd, yyyy\") {\n  return date().transform(function(value, originalvalue) {\n    // check to see if the previous transform already parsed the date\n    if (this.isType(value)) return value;\n\n    // the default coercion failed so lets try it with Moment.js instead\n    value = Moment(originalValue, formats);\n\n    // if its valid return the date object, otherwise return an `InvalidDate`\n    return value.isValid() ? value.toDate() : new Date(\"\");\n  });\n};\nstringDefine a string schema. Supports all the same methods as mixed.let schema = yup.string();\n\nawait schema.isValid(\"hello\"); // => true\nBy default, the cast logic of string is to call toString on the value if it exists.\nempty values are not coerced (use ensure() to coerce empty values to empty strings).Failed casts return the input value.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-transform",
      "matches": {
        "yup mixed transform": true
      },
      "source": "javascript/yup"
    },
    "ea6c73df-befd-394f-b045-6985a9368b88": {
      "content": "outline: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea6f83a9-3a79-3668-bf4c-104b527f8994": {
      "content": "{% layout '${1:layout}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layout": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea6fc1de-e49d-3ba7-be9d-cce3a7827581": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}', props<{${4:key}: ${5:type}}>());",
      "doc": "Creates an NgRx Action with Props",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-action-w-props",
      "matches": {
        "a-ngrx-create-action-props": true,
        "angular ng rx create action props": true
      },
      "source": "javascript/angular"
    },
    "ea75f7eb-7ff3-3de3-a562-d055d0d542d7": {
      "content": "select ${1:answer} in ${2:choices}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea7ae10b-5ecc-3bbd-8ea2-43813882f895": {
      "content": "background-position-y: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea83d4e3-1b13-38fc-8657-e4b3e9c263a8": {
      "content": "$this->widget('CLinkPager', array('pages'=>$pages,'header'=>'${0}'}))",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ylinkpager": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea86fc92-fa15-3666-9a53-1cf7510d2ca3": {
      "content": "grid-template-columns ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea8708fb-1c99-3ffd-a22b-6f1bbd41027c": {
      "content": "position: relative",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea8d0a12-52e1-393b-98ee-b52d0d7c467b": {
      "content": "{% endif %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endif",
      "matches": {
        "endif": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea90b22c-25bd-3a06-a157-b433b053702f": {
      "content": "font-weight: bold;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea90e214-11c1-3008-aa04-e39f09b6f8d7": {
      "content": "import ${1:Html} exposing (${0:..})",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impe": true
      },
      "source": "vim-snippets/snippets"
    },
    "ea974d63-5201-340b-aaa2-ff930f211955": {
      "content": "_.property(${path})",
      "doc": "var objects = [\n  { 'a': { 'b': 2 } },\n  { 'a': { 'b': 1 } }\n];\n\n_.map(objects, _.property('a.b'));\n// => [2, 1]\n\n_.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n// => [1, 2]\n\nCreates a function that returns the value at `path` of a given object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-property",
      "matches": {
        "lodash property": true
      },
      "source": "javascript/lodash"
    },
    "eaa993af-e94d-3fea-b200-3fa515a8d48f": {
      "content": "==== ${1} ====\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "====": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eaaf91b9-92eb-33f2-8dbf-9d779e06fd27": {
      "content": "<wbr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "eab40571-8441-3f86-a2f8-b7ee1741801f": {
      "content": "use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Controller",
      "matches": {
        "usecontroller": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eab7fbff-e86b-3d11-808d-3b87fdf722cc": {
      "content": "if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if () {}",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eac0b9d9-edb9-3f48-84d9-4131cd79fc46": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "eada348d-03e4-3e66-964a-180f847a146c": {
      "content": "\\\\citen{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citen",
      "matches": {
        "citen": true
      },
      "source": "vim-snippets/snippets"
    },
    "eadb5277-a7d5-3f35-b13e-54d70bea22c5": {
      "content": "type tr_${1:name} is record (${0:/* columns */});",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "eadccfc3-f58e-3e91-96de-e8f3d010e9bc": {
      "content": "module ${1:Mod} = ${2:Functor}(${3:Arg})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module instantiantion with functor",
      "matches": {
        "ml": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eadda9c0-5a04-3fb7-9e1e-fe25dfb7f8a8": {
      "content": "final ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      },
      "source": "vim-snippets/snippets"
    },
    "eae1a815-3548-37ea-9ff1-d718fd4b6d9f": {
      "content": "<${1:div} v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\">\n\t{{ ${2:item} }}\n</${1:div}>",
      "doc": "vfor statement",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-for",
      "matches": {
        "vfor": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "eae3e2cc-e45e-3174-9c1b-cb54500924fc": {
      "content": "<!--\nvim: filetype=mediawiki\n-->",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ft": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eae68af6-a5be-3e9c-ab9c-14e271e82398": {
      "content": "append(${1:slice}, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "append(slice, value)",
      "matches": {
        "ap": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "eae6b348-7013-38c6-8d4d-52b3e77c544b": {
      "content": "for (let ${1:i} in ${2:#:Things}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eaef78c8-b33b-3da0-9a11-9e2aea3a47a2": {
      "content": "<area shape=\"default\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "eaf2502d-f410-3303-be67-393931a247cd": {
      "content": "str(\"${0:str}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb0473d5-0b29-3b64-bcd0-c2bb6031c35d": {
      "content": "assert(${1:condition});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asr": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb0684ff-b0cd-3368-b662-6d2cd069ebd1": {
      "content": "final",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fin": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb0e07c9-bb8f-3602-82e4-a16c12fe15ac": {
      "content": "${1:FIELDNAME} = forms.ChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ChoiceField",
      "matches": {
        "fchoice": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eb0f1c86-9b73-3ec2-8406-5837936b8350": {
      "content": ":last-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb154cf4-4980-3eb3-8151-eb3edaeb34a6": {
      "content": "value=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "value": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb16ebe1-e991-3f97-b852-744b722caf9b": {
      "content": "_.flatMap(${collection}, ${iteratee})",
      "doc": "function duplicate(n) {\n  return [n, n];\n}\n\n_.flatMap([1, 2], duplicate);\n// => [1, 1, 2, 2]\n\nCreates a flattened array of values by running each element in `collection`\nthru `iteratee` and flattening the mapped results. The iteratee is invoked\nwith three arguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmap",
      "matches": {
        "lodash flatmap": true
      },
      "source": "javascript/lodash"
    },
    "eb1c2c5d-0e2c-3feb-a32c-f178572e65f4": {
      "content": "_.sampleSize(${collection}, ${n})",
      "doc": "_.sampleSize([1, 2, 3], 2);\n// => [3, 1]\n\n_.sampleSize([1, 2, 3], 4);\n// => [2, 3, 1]\n\nGets `n` random elements at unique keys from `collection` up to the\nsize of `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-samplesize",
      "matches": {
        "lodash samplesize": true
      },
      "source": "javascript/lodash"
    },
    "eb207718-b9e5-3957-8507-8c97b8c0b73a": {
      "content": "stages {\n\tstage('${1:Build}') {\n\t\tsteps {\n\t\t\tsh '${2:make}'\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sss": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb2d14ea-8d0d-3416-b145-a9b51aca3b69": {
      "content": "for ${1:name} in ${2:array}\n\tdo ($1) ->\n\t\t${0:// body}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forindo": true
      },
      "source": "snippets/coffee"
    },
    "eb2d5e57-e959-36c6-bc1b-3fc32110edaf": {
      "content": "internal string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb36aa75-6022-3f25-935e-f61ca44d7d34": {
      "content": "expect(${1:list}).toContainEqual($0);",
      "doc": "expects the list contains the item (equals)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tocontainequal",
      "matches": {
        "jest expect tocontainequal": true,
        "tce": true
      },
      "source": "javascript/jest"
    },
    "eb37a735-8e84-3237-9878-2621ccb4d5e2": {
      "content": "type(${1:name})\n\t${0}\nend type",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb3e88e3-2376-37eb-aa16-801502712cd3": {
      "content": "text-decoration: overline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb484a49-fd4b-3aac-b554-f11a9629d22d": {
      "content": "$.queue(${1:element}${2:, name}${3:, newQueue})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queuee": true
      },
      "source": "snippets/coffee"
    },
    "eb496659-1dc7-3fd3-8e6d-7e36af7320d3": {
      "content": "${1:type}, intent(inout) :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intent": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb4c9f15-1f29-3e91-8f8a-a228a1568ba3": {
      "content": "place-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb4eaf5a-d0dd-32f5-898e-a6b079a3aac0": {
      "content": "for ${1:key}, ${2:value} of ${3:object}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb5ed27b-fb92-3065-8b87-d2ae1531d400": {
      "content": "margin-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb63e4a7-dbca-3f33-b0f1-ea66f805f2e0": {
      "content": "_.toPlainObject(${value})",
      "doc": "function Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }\n\nConverts `value` to a plain object flattening inherited enumerable string\nkeyed properties of `value` to own properties of the plain object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toplainobject",
      "matches": {
        "lodash toplainobject": true
      },
      "source": "javascript/lodash"
    },
    "eb65f164-f68a-3d4b-9033-1611c725b532": {
      "content": "${1:obj}.remove()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rem": true
      },
      "source": "snippets/coffee"
    },
    "eb68b263-a094-3ebf-9405-f3aa4559a29f": {
      "content": "(for/or ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/or",
      "matches": {
        "foro": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb69c08f-27d7-377e-a342-f932a1259fa4": {
      "content": "{% cycle ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eb6af9ea-f7a3-391d-9a7e-2dc856598637": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}\n",
      "doc": "Creates a React Memo Function Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-function-memo-component-proptypes",
      "matches": {
        "react component function memo proptypes": true,
        "rmcp": true
      },
      "source": "javascript/react"
    },
    "eb6b49e4-becb-3b4c-80f3-6fd3865d2f97": {
      "content": "while [[ ${1:condition} ]]; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb6e54ec-3ee7-3851-a868-36b8e11b0264": {
      "content": "${1} ? ${2} : ${3:nothing}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "ternary operator",
      "matches": {
        "tern": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb6fd334-99e9-3a4b-b860-1dd118cf1a75": {
      "content": "<nuxt>$1</nuxt>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-view",
      "matches": {
        "nuxt view": true
      },
      "source": "javascript/nuxt"
    },
    "eb8746f4-f79b-346b-83ba-4f212357d64a": {
      "content": "@include('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@include",
      "matches": {
        "include": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eb891f77-6daf-3f82-b64e-649e8dac01f6": {
      "content": "_.plant(${value})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar wrapped = _([1, 2]).map(square);\nvar other = wrapped.plant([3, 4]);\n\nother.value();\n// => [9, 16]\n\nwrapped.value();\n// => [1, 4]\n\nCreates a clone of the chain sequence planting `value` as the wrapped value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-plant",
      "matches": {
        "lodash plant": true
      },
      "source": "javascript/lodash"
    },
    "eb90bed3-0601-3944-a455-3b5b1f0faff5": {
      "content": "font-emphasize-style: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "eb9524ac-19e5-3aee-bbfd-225f06737e7a": {
      "content": "${1:fn}.bind(${2:this}, ${3:arguments})",
      "doc": "function bind",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-bind",
      "matches": {
        "base function bind": true
      },
      "source": "javascript/base"
    },
    "eba62f2c-5eeb-3b01-8aee-de0a785c50a1": {
      "content": "<remarks>${0:#:description}</remarks>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<remarks></remarks>",
      "matches": {
        "remarks": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eba8592f-f2d0-30ee-b40c-b597d8eb264e": {
      "content": "outline-offset: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebb121cf-9fb8-3b79-bfa4-9f5ffabdbb4b": {
      "content": "import React, { useState, useEffect } from 'react'\n",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-usestate-useeffect",
      "matches": {
        "imrse": true,
        "react import usestate useeffect": true
      },
      "source": "javascript/react"
    },
    "ebb33cc0-b6a6-3d26-ab97-71f4c92d45fc": {
      "content": "snippet ${1:trigger} \"${2:description}\"\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "snip": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebb60aff-ed74-3729-9ef5-97fa120887c2": {
      "content": "Filename.dirname(__FILE__)",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebbcdc95-f0fb-33be-8ac8-23123a901f32": {
      "content": "afterAll(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "after all (js)",
      "matches": {
        "afta": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ebc01a49-9e57-34d9-b731-2db9edfb9ba2": {
      "content": "| capitalize",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capitalize": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebd515d2-328e-3a6a-a76f-46b9f7389e39": {
      "content": "justify-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebd8af2b-0954-3642-b7a4-d78e22a47c8b": {
      "content": "@else if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebf0fa4b-6f53-31dc-81c8-ae2c8e233486": {
      "content": "import { mapGetters } from 'vuex'\n\nexport default {\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t${1:'nameOfGetter'},\n\t\t])\n\t},\n}",
      "doc": "mapgetters inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapgetters",
      "matches": {
        "vmapgetters": true,
        "vue mapgetters": true
      },
      "source": "javascript/vue"
    },
    "ebf14455-e64e-338b-a4a9-8cf16917c363": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-typescript-v3",
      "matches": {
        "vue v3 base ts": true
      },
      "source": "javascript/vue"
    },
    "ebf2424a-fce8-3437-9c4a-5fdcb8573e28": {
      "content": "<meta http-equiv=\"${1}\" content=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebf714ef-fe96-3689-b8e2-0925b97f59d6": {
      "content": "quotes: '\\201C' '\\201D' '\\2018' '\\2019'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebf85a19-64f9-3723-b669-4490e10f8cc4": {
      "content": "#ifndef $1\n#define ${1:SYMBOL} ${2:value}\n#endif /* ifndef $1 */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ndef": true
      },
      "source": "vim-snippets/snippets"
    },
    "ebff1103-b0cd-33c6-a1db-76b89f2bfee1": {
      "content": "console.log(`${1:object}`, JSON.stringify(${1:object}, null, 2))",
      "doc": "Logs stringified JSON property with name.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLogJson",
      "matches": {
        "clj": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ec02d163-79fb-35f4-a543-eab69250d71c": {
      "content": "import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\n\n// avoid typing issues for now\nexport declare var navigator;\n\n@Injectable({ providedIn: 'root' })\nexport class NetworkAwarePreloadStrategy implements PreloadingStrategy {\n\tpreload(route: Route, load: () => Observable<any>): Observable<any> {\n\t\treturn this.hasGoodConnection() ? load() : EMPTY;\n\t}\n\n\thasGoodConnection(): boolean {\n\t\tconst conn = navigator.connection;\n\t\tif (conn) {\n\t\t\tif (conn.saveData) {\n\t\t\t\treturn false; // save data mode is enabled, so dont preload\n\t\t\t}\n\t\t\tconst avoidTheseConnections = ['slow-2g', '2g' /* , '3g', '4g' */];\n\t\t\tconst effectiveType = conn.effectiveType || '';\n\t\t\tif (avoidTheseConnections.includes(effectiveType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}",
      "doc": "Angular network aware preload strategy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-network-aware-preload-strategy",
      "matches": {
        "a-preload-network-strategy": true,
        "angular network-aware preload strategy": true
      },
      "source": "javascript/angular"
    },
    "ec058377-1614-3dc8-8b42-9ff353a8c9f8": {
      "content": "<%= link_to '${1:link text...}', controller: '${2:items}', action: '${0:index}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lica": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec08b2e9-d769-320b-94f3-4941e251215e": {
      "content": "<svelte:self ${1:prop}={${2:value}} />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self-prop",
      "matches": {
        "svelte self prop": true,
        "svsep": true
      },
      "source": "javascript/svelte"
    },
    "ec08badd-f4b6-39bc-acea-bd9fb824c62b": {
      "content": "throw new Error('${1:error message}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "terr": true
      },
      "source": "snippets/javascript"
    },
    "ec19486d-2641-327c-b48b-429cb4f8bac4": {
      "content": "padding-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec25519a-7520-3f6f-86aa-f96a0fc17ad4": {
      "content": "${${1:0}:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${X:default}",
      "matches": {
        "$:": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ec28bd46-6f95-30da-bac7-3d51cd68c64e": {
      "content": "<input type=\"search\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:search": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec2b4fbe-0545-3a56-8190-29df9d1930d6": {
      "content": "border-corner-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec2cc906-33da-33a6-8dd1-dbe40e6dd6a6": {
      "content": "public static void ${1:index}(${2:args}) { ${0} }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "action": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec2de845-b89a-3ef2-9432-ca79c6def653": {
      "content": "{% if ${1:condition} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec316d90-53be-3d00-baf9-cc29a24da8db": {
      "content": "case ${1:object}\nwhen ${2:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec31d200-942b-331a-8f49-88d60be82be5": {
      "content": "console.info(${1:object});",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleinfo",
      "matches": {
        "base console info": true
      },
      "source": "javascript/base"
    },
    "ec3ec91c-4f41-33a7-85be-c7769f460893": {
      "content": "align-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec42126f-83ba-356a-b41d-22850ba04596": {
      "content": "\\\\usepackage[${1:options}]{${2:package}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\usepackage",
      "matches": {
        "up": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec5a70dc-0654-3685-b95b-f6dc0c872397": {
      "content": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n  ${0}\nfinally\n  let &$1 = $1_save\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use option save",
      "matches": {
        "save_option": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ec6e04c4-f676-3427-8be2-0d28e3e49e83": {
      "content": "display: compact;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec6f3488-1789-38f0-a89c-243645ce68eb": {
      "content": "project(${1:project_name})\nset(${2:PROJECT}_VERSION_MAJOR 0)\nset($2_VERSION_MINOR 0)\nset($2_VERSION_TEENY 1)\nset(PACKAGE_VERSION \"${$2_VERSION_MAJOR}.${$2_VERSION_MINOR}.${$2_VERSION_TEENY}\")\ncmake_minimum_required(VERSION ${3:2.8})\n${0}",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "new_project": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ec79b8cf-5758-321e-ae83-d69fd8329e96": {
      "content": "group { \"${1:group}\":\n\tensure => ${0:present},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "group": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec7a8587-c380-30ac-95da-9a3eded00442": {
      "content": "float: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      },
      "source": "vim-snippets/snippets"
    },
    "ec8afb18-583d-3e6d-867a-0e204029bf11": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      },
      "source": "vscode-react/snippets"
    },
    "eca11166-a5bc-379a-92e2-ccdbfa8851fd": {
      "content": "- (${1:id})${2:thing}\n{\n\treturn $2;\n}\n- (void)set$2:($1)${3:new$2}\n{\n\t[$3 retain];\n\t[$2 release];\n\t$2 = $3;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "objacc": true
      },
      "source": "vim-snippets/snippets"
    },
    "eca702c4-b2fd-3b19-9224-d492c8986eb2": {
      "content": "object\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object",
      "matches": {
        "obj": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ecad0fc3-221e-3bd2-9d7d-cc069c7ab40e": {
      "content": "{# ${1:comment} #}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{# ... #}",
      "matches": {
        "#": true,
        "comment": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ecb78e10-99bd-3f3b-b282-8d5f5bfdcc2d": {
      "content": "{\n\tpath: '${1:path}', \n\tcomponent: ${2:Component},\n\tchildren: [\n\t\t{ path: '${3:childpath}', component: ${4:ChildComponent} }\n\t]\n}$0",
      "doc": "Angular route path with children",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-route-path-with-children",
      "matches": {
        "a-route-path-with-children": true,
        "angular route path children": true
      },
      "source": "javascript/angular"
    },
    "ecbc1723-7e08-353e-86f6-a9d71da34d58": {
      "content": "${1} : in std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isv": true
      },
      "source": "vim-snippets/snippets"
    },
    "ecbf895b-8efd-35ab-94ed-f6d5a1c2d150": {
      "content": "beforeMount () {\n\t${0};\n},",
      "doc": "beforeMount lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforemount",
      "matches": {
        "vbeforemount": true,
        "vue lifecycle beforemount": true
      },
      "source": "javascript/vue"
    },
    "ecc286c5-c167-3bd5-a3b8-4fca9de398b2": {
      "content": "Maximize Browser Window",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Maximize Browser Window",
      "matches": {
        "mbw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eccbaae1-68f1-334e-bd71-c1e95a6863d0": {
      "content": "import React from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React",
      "matches": {
        "imr": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ece13d6e-f056-3eb4-940d-4a2327fc25de": {
      "content": "assert_select '${1:path}', ${2:text}: '${3:inner_html}' ${4:do}\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_select(..)",
      "matches": {
        "ass": true
      },
      "source": "vim-snippets/snippets"
    },
    "ece49be7-b496-362a-b332-14bcc777288a": {
      "content": "@for ${1:$i} from ${2:1} through ${3:3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "ece5b146-2792-3c85-8f37-dded2f8b0855": {
      "content": "${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeto": true
      },
      "source": "snippets/javascript"
    },
    "ece8f05d-088f-3266-b0c2-7c368ba026b7": {
      "content": "${1:deferred}.resolve(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dres": true
      },
      "source": "snippets/coffee"
    },
    "eceb8d39-59a0-312e-a8e7-99823bde688a": {
      "content": "export default compose(\n\tgraphql(${1:queryOrMutation}, { name: ${2:name} }),\n)(${1:${TM_FILENAME_BASE}})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportGraphQL",
      "matches": {
        "expgql": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "eced81c0-2e41-30cc-b265-75ae0b0ed131": {
      "content": "unsigned int\t${1:object}Count = [${2:array} count];\n\nfor(unsigned int index = 0; index < $1Count; index += 1)\n{\n\t${3:id}\t$1 = [$2 objectAtIndex:index];\n\t$0\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "for NSArray loop (forarray)",
      "matches": {
        "forarray": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ecee2cb8-ca39-3716-8fe1-b3fb9438f4f8": {
      "content": "<td class=\"${1}\">${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td.": true
      },
      "source": "vim-snippets/snippets"
    },
    "ecee9658-fd25-3295-a289-87fb075009d6": {
      "content": "try {\n  ${1:TARGET}\n} catch (${2:e}) {\n  ${3}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ecf07e90-4f9b-3086-bec0-118fb52392c7": {
      "content": "elif ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "elif ...: ...",
      "matches": {
        "elif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed09d773-de1b-3335-a7e6-0367a399b940": {
      "content": "|> Seq.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stap": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed0a0f11-123f-344e-b797-485c22795285": {
      "content": "font-effect: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed0ecac1-8e6d-3990-8a9c-195ff80c131c": {
      "content": "${1:callbacks}.lock()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clock": true
      },
      "source": "snippets/coffee"
    },
    "ed13b05b-57d5-34f7-9d13-6afb91d64efd": {
      "content": "${1:obj}.prependTo('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prependto": true
      },
      "source": "snippets/coffee"
    },
    "ed1b4c77-0945-3c1b-af41-c927e6f0c01c": {
      "content": ".. seealso:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "seealso",
      "matches": {
        "seealso": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed1c140d-a11e-3675-bcd8-d9b3d95c83cb": {
      "content": "test('${1:should }', async () => {\n\t$0\n});",
      "doc": "creates an test block with async callback function",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-async",
      "matches": {
        "jest test async": true,
        "testa": true
      },
      "source": "javascript/jest"
    },
    "ed1cd6cc-03b9-3e65-8e34-cb419281a6ac": {
      "content": "[SerializableAttribute]",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serial": true,
        "serializable": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed1f954b-2100-32f3-adec-2cf411d70178": {
      "content": "after_validation $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation",
      "matches": {
        "aftv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ed30c68b-e17e-3d41-9e7d-471e6c081141": {
      "content": "<xsl:for-each select=\"${1:*}\">${2}\n</xsl:for-each>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for-each": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed394bdb-156a-3da7-aefb-bdfc12e7e95f": {
      "content": "import React, { FC } from \"react\"\n\ninterface ${1:function_name}Props {${4:props_types}}\n\nexport const ${1:function_name}: FC<${1:function_name}Props> = (${2:props}) => ${3:function_body}",
      "doc": "",
      "filetype": "typescript_react",
      "grammar": "snu",
      "label": "react functional component",
      "matches": {
        "rfc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ed39fc0b-d385-3c03-a55b-7d1595f60157": {
      "content": "<button>${1:TARGET}</button>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed3a7118-4dd2-3c4c-bb1a-dbe191263748": {
      "content": "set multiplot\n${1:#:plot code}\nunset multiplot",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set multiplot ... unset multiplot",
      "matches": {
        "multiplot": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed3b78ef-a336-3f56-ba75-f2389e52ca5c": {
      "content": "#ifdef ${1:FOO}\n\t${2:#define }\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed3f7756-4c50-32ea-b840-030135d5e235": {
      "content": "text-align=\"left\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed552569-4a06-3ba4-8396-23a3d0bfb549": {
      "content": "assert_raises(${1:StandardError}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asr": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed5bf44c-425e-3452-816d-8512212e80d0": {
      "content": "text-wrap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed5c2162-9325-3ee5-83dc-55ecf2100b40": {
      "content": "$1::-moz-selection,\n$1::selection {\n\tcolor: ${2:inherit};\n\tbackground: ${3:inherit};\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "selection",
      "matches": {
        "selection": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ed600227-ff87-3e93-a278-01a2bbc402ae": {
      "content": "using ${1:Name} = ${2:Type};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typedef": true,
        "using_typedef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ed60428c-cee7-37d7-ae55-05b513dabaa8": {
      "content": "isSomeString!${1:S}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isstr": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed6b3126-2339-3b6d-99f0-b52af653e91d": {
      "content": "border-corner-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed6cedeb-9e6e-3693-8111-179eb2c28521": {
      "content": "package {\n\timport flash.display.*;\n\timport flash.Events.*;\n\tpublic class Main extends Sprite {\n\t\tpublic function Main (\t) {\n\t\t\ttrace(\"start\");\n\t\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\n\t\t\tstage.addEventListener(Event.RESIZE, resizeListener);\n\t\t}\n\t\tprivate function resizeListener (e:Event):void {\n\t\t\ttrace(\"The application window changed size!\");\n\t\t\ttrace(\"New width:  \" + stage.stageWidth);\n\t\t\ttrace(\"New height: \" + stage.stageHeight);\n\t\t}\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed723d9a-38ab-37b5-9585-b52f44cb1ff6": {
      "content": "margin-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed78a332-0ba0-3912-abbf-d1e961e5a7f8": {
      "content": "border-length auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed7a305e-a36c-323b-acb0-6e8897781b98": {
      "content": "Box::new(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Box::new()",
      "matches": {
        "boxp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed7e2850-8a46-30a9-aa8f-b99f1e3ade1f": {
      "content": "page-break-before: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed8c0d4a-47f1-3b59-bcca-7d6b1312d927": {
      "content": "| img_url: '${1:medium}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_url": true
      },
      "source": "vim-snippets/snippets"
    },
    "ed916d5b-f800-3bc2-8b97-269dde5ed496": {
      "content": "${1:mutationName}() {\n\tthis.\\$store.commit('${1:mutationName}', ${2:payload});\n}",
      "doc": "commit to vuex store in methods for mutation",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Commit Vuex Store in Methods",
      "matches": {
        "vcommit": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "ed9bd2bb-e09a-3d5c-b423-09038a5653c3": {
      "content": "require 'optparse'\noptions = { ${0:default: 'args'} }\nARGV.options do |opts|\n\topts.banner = \"Usage: #{File.basename($PROGRAM_NAME)}\"\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optp": true
      },
      "source": "vim-snippets/snippets"
    },
    "eda94c49-a49d-385b-be82-381fc1d19dac": {
      "content": "private\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "priv": true
      },
      "source": "vim-snippets/snippets"
    },
    "edac7828-876e-3988-af86-11c33086e54a": {
      "content": "router.beforeResolve((to, from, next) => {\n\t${1:next();}\n});",
      "doc": "Vue Router global guards beforeResolve",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeResolve",
      "matches": {
        "vbeforeresolve": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "edbf7222-08ce-3f31-8d66-ba7127ec89dd": {
      "content": "__import__('pudb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pudb": true
      },
      "source": "vim-snippets/snippets"
    },
    "edc764c3-e910-3923-969b-e7e1229b27b0": {
      "content": "border-bottom-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-style: size style color (border)",
      "matches": {
        "border": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "edca2b55-f216-398e-b498-c8e3fe939cd1": {
      "content": "if (${1:true}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "edcb3322-5b4a-382f-b2e5-2df688ccd9c5": {
      "content": "Plug '${0}'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition",
      "matches": {
        "plug": true
      },
      "source": "vim-snippets/snippets"
    },
    "edd4e190-ef2d-3790-a31e-2f0b92c87587": {
      "content": "useDebugValue(${1:value})",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useDebugValue",
      "matches": {
        "useDebugValue": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ede4b9fe-f254-3976-ae11-fdaf2fc6eeb9": {
      "content": "enum ${1:#:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "edec6240-a34b-310b-b346-c7c8e672b6eb": {
      "content": "text-wrap: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      },
      "source": "vim-snippets/snippets"
    },
    "edf176d0-c573-34c9-bc2d-1f5daa5c2ccf": {
      "content": "map(${1:value}, ${2:low1}, ${4:high1}, ${5:low2}, ${0:high2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "edf250b6-104c-3656-b6b2-6bb7b9080f2d": {
      "content": "word-break normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "edf4147b-0dc9-37d8-aa0b-1e3a9252c2c4": {
      "content": "expect($1).rejects$0",
      "doc": "expect promise rejects to",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-rejects",
      "matches": {
        "exprj": true,
        "jest expect rejects": true
      },
      "source": "javascript/jest"
    },
    "edf9581d-70a1-3a52-8e83-c4a4c7b40d91": {
      "content": "font-family ${0:Georgia,'Times New Roman'},serif",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "edf9d1c5-50b6-3b1b-bd43-1496c113dd2c": {
      "content": "initial begin\n    ${0:TARGET}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "initial begin ... end",
      "matches": {
        "init": true,
        "initial": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ee00a9c4-28b5-31f6-bcdf-a49fcc7326e6": {
      "content": "border-top-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee01c877-63fe-3ebd-8f32-bbfcac5e942b": {
      "content": "${1:document}.getElementsByClassName('${0:class}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "by.": true
      },
      "source": "snippets/javascript"
    },
    "ee024986-c12f-3d49-b2aa-82ae38c3ab98": {
      "content": "assert_no_match(/${1:unexpected_pattern}/, ${2:actual_string})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnm": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee02fdfe-d4ab-3ffe-b77f-ef79fa4b4eff": {
      "content": "if ${1:condition} then ${2:value} else ${0:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      },
      "source": "snippets/coffee"
    },
    "ee0a0c81-052b-3ec2-8142-57a76be5ca26": {
      "content": "assign ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "assign ... = ...",
      "matches": {
        "as": true,
        "assign": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ee0d85a8-c1cc-3f66-893d-0be073f1ed8f": {
      "content": "truncatewords:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee133437-f85a-3648-9555-c958b36a566b": {
      "content": "function letgo()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function letgo() { ... }",
      "matches": {
        "letgo": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ee14cda0-4eca-3996-a538-4945bf322cc6": {
      "content": "Element Should Contain    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Contain",
      "matches": {
        "esc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ee19c5f5-c463-39de-b934-25f64cf21e69": {
      "content": "font-weight normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee19fde4-d6d9-3a2a-a63e-c94688abbc50": {
      "content": "order(${1:...}, ${2:na.last = ${3:TRUE}}, ${4:decreasing = ${5:FALSE}})",
      "doc": "Order",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "ord",
      "matches": {
        "order": true
      },
      "source": "vscode-R/snippets"
    },
    "ee1bbca4-188b-3d93-b9df-21df0335aaad": {
      "content": "justify-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee1cd666-0715-3823-a8f4-28e8efd1b2b4": {
      "content": "new(${0:type})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "new",
      "matches": {
        "nw": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee1f1c9e-088a-3976-bed5-7809c5d6adfb": {
      "content": ".. error::\n\t${0:Error occur}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err:": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee1f286b-8cbd-3e5a-9097-6fed94c07cd4": {
      "content": "console.trace();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "console-trace": true,
        "ct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ee2b5a28-8694-3e8c-8ecb-781906775582": {
      "content": "int main(void)\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mainn": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee2de1c0-2c61-37bd-9111-0a32613ed82f": {
      "content": "font ${1:1em} ${2:Arial},${0:sans-serif}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee414247-3062-3691-b818-5f868958e3a0": {
      "content": "$this->shouldHaveType($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldHaveType('Type')",
      "matches": {
        "stype": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ee4981f8-5f57-3db0-affa-86f09db2991f": {
      "content": "useEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t};\n}, [${3:input}])",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useeffect",
      "matches": {
        "react useeffect": true,
        "useeffect": true
      },
      "source": "javascript/react"
    },
    "ee4a675a-c5b7-3bd8-9479-33c6170a9989": {
      "content": "sphereDetail(${0:n});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sphereDetails": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee4b13e5-42fd-3161-8f4a-e57d367e141d": {
      "content": "<ThemeProvider theme={${1}}>\n  ${2}\n</ThemeProvider>",
      "doc": "ThemeProvider",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-theme-provider",
      "matches": {
        "styled-components themeprovider": true,
        "themeprovider": true
      },
      "source": "javascript/styled-components"
    },
    "ee4cafe1-5603-3fff-8338-6536100db11b": {
      "content": "border-corner-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee4d3f48-9018-32d8-b82b-4442b62c16e0": {
      "content": "require('dotenv').config({ encoding: '${1:latin1}' })",
      "doc": "You may specify the encoding of your file containing environment variables.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-encoding",
      "matches": {
        "dotenv encoding": true
      },
      "source": "javascript/dotenv"
    },
    "ee53e6c6-6840-3e73-a6d7-95af27d2cb24": {
      "content": "factory '${1:factoryName}', (${2:dependencies}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmfa": true
      },
      "source": "snippets/coffee"
    },
    "ee60820a-4204-3136-a15c-f0d4252110b6": {
      "content": "for {\n\t${1}\n} yield ${2}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ee6368d7-59f5-3c3d-bf68-52dda427e238": {
      "content": "print(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "pr": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee64ddac-2cc9-3c03-a04b-fad6a203f195": {
      "content": "if err != nil {\n\tt.Fatal(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatal(err) }",
      "matches": {
        "errt": true
      },
      "source": "gosnippets/snippets"
    },
    "ee778f95-f929-3eb6-b585-44d6cd43cab7": {
      "content": "while (${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee7ec4ed-1823-3cfc-9042-cbac8a4eac4e": {
      "content": "align-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee84dcdb-a571-3217-82af-2b42865e6485": {
      "content": "NO-ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ne": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee85f2ee-9e82-3008-a180-93b67a0c159a": {
      "content": "<dd>${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee8ca9e8-ef2b-3ab9-8bc6-5906d345466b": {
      "content": "trait ${1:name}${2: extends }${3: with} {\n\t${0:}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trait": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee8dc179-4954-37db-b4d1-0b18cb9d1c3d": {
      "content": "scope(${1:exit})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "scope (scope)",
      "matches": {
        "scope": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ee9ad9d9-1abc-340e-ba1c-1c1205cab93a": {
      "content": "text-justify distribute",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "ee9ff89b-a811-3e7a-88fa-fe4a4a565be4": {
      "content": "library ${1};\n${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      },
      "source": "vim-snippets/snippets"
    },
    "eea0bd14-0f8c-31d6-bff0-1f61a42fc812": {
      "content": "for (int ${1:i} = ${2:length}; $1 >= 0; $1--)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      },
      "source": "vim-snippets/snippets"
    },
    "eea1d8b7-9687-39ec-9677-bf4e447d0c45": {
      "content": "pub async fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Async function definition",
      "matches": {
        "pafn": true
      },
      "source": "vim-snippets/snippets"
    },
    "eea5c2b1-a598-3735-b510-25c1b46a9323": {
      "content": "on:${1:eventname}|${2|preventDefault,stopPropagation,passive,capture,once|}={${3:handler}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-modifiers",
      "matches": {
        "svelte on event modifiers": true,
        "svon-modifiers": true
      },
      "source": "javascript/svelte"
    },
    "eeaea93c-e879-3998-bfda-417423301f58": {
      "content": "| strip_newlines",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip_newlines": true
      },
      "source": "vim-snippets/snippets"
    },
    "eeb01dce-31c5-38b2-b4cc-834bf5097b48": {
      "content": "<${1:div} :class=\"[${2:classNameA}, {${3:classNameB} : ${4:condition}}]\"></${1:div}>",
      "doc": "vue multiple conditional class bindings",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Multiple Conditional Class Bindings",
      "matches": {
        "vclass-obj-mult": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "eec6e617-9704-3923-b405-a975acb728c0": {
      "content": "expect(${1:target}).not$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not (js)",
      "matches": {
        "notx": true
      },
      "source": "vim-snippets/snippets"
    },
    "eec756d4-f8fa-307d-b1a6-35a61d08bc11": {
      "content": "multi ${1:function_name}(${2:Str $var}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mul": true
      },
      "source": "vim-snippets/snippets"
    },
    "eecb0cd8-204a-312c-bab1-d0c3d827d670": {
      "content": "Set Suite Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Suite Variable",
      "matches": {
        "ssv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eece2efe-305a-34d3-ad7a-89045ecffba0": {
      "content": "box-sizing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      },
      "source": "vim-snippets/snippets"
    },
    "eed47249-2466-3acb-ba61-3f8bd9cc3619": {
      "content": "${1:expr}? ${2:true} : ${0:false}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      },
      "source": "vim-snippets/snippets"
    },
    "eed652f9-ff9e-3ad2-84df-960d1fa7fa32": {
      "content": "${1:deferred}.isResolved()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disres": true
      },
      "source": "snippets/javascript"
    },
    "eeda4fdd-4e5b-39c9-a5f5-073c576473d7": {
      "content": "chr",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Char",
      "matches": {
        "T": true
      },
      "source": "vim-snippets/snippets"
    },
    "eedca986-2618-326a-9fb5-0509a9699eae": {
      "content": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addarg": true
      },
      "source": "vim-snippets/snippets"
    },
    "eede7433-58bc-3cb1-98c9-87ab13ab928e": {
      "content": "for ${1:e} in ${2:c}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "eedfd68d-f512-3090-ae31-43f24083c280": {
      "content": "position: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "eee19a06-d9cc-3723-a845-51ccc83f980e": {
      "content": "__import__('nose').tools.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nosetrace": true
      },
      "source": "vim-snippets/snippets"
    },
    "eee6d2c2-3ec1-368d-a27c-e6b761787d06": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypetransitional": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eee7c783-b4e8-3312-920e-be23f332fae6": {
      "content": "align-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "eeea14fe-1352-386c-ae26-63a0ffb1325f": {
      "content": "switch (${1}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "eeed120c-6079-3b9d-b0d3-eb1ae977fd0a": {
      "content": "static public final ${1:#:type} ${2:#:var} = ${3};${4}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "eef75bf9-5f07-34d1-a81c-8e95f8e64d4e": {
      "content": "{% verbatim %}\n\t${VISUAL}\n{% endverbatim %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "verbatim": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "eef8199f-6267-306a-a2e6-023d562a6047": {
      "content": "describe('${1:}', () => {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "describe('thing', () => { ... })",
      "matches": {
        "des": true
      },
      "source": "vim-snippets/snippets"
    },
    "eef8b45e-a7ce-3636-940a-42c9cd6eb747": {
      "content": "$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$retVal = (condition) ? a : b",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "eef9260b-a2e2-3549-9ffc-e904579be01f": {
      "content": "(unless=${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "eefc479a-bf5f-3461-b4d1-a8ada336d6c4": {
      "content": "logger.info { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef0282c3-4287-30eb-8a8b-6f0eae9d9c9d": {
      "content": "?assertNot(${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asn": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef07753a-2b5a-349e-8dfa-ffbfe9ede966": {
      "content": "_.mean(${array})",
      "doc": "_.mean([4, 2, 8, 6]);\n// => 5\n\nComputes the mean of the values in `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mean",
      "matches": {
        "lodash mean": true
      },
      "source": "javascript/lodash"
    },
    "ef0a00e1-427e-3d3c-b4f0-eaf97ac3bcb4": {
      "content": "<xsl:call-template name=\"${1:template}\">\n\t<xsl:with-param name=\"${2:param}\">${3}</xsl:with-param>${4}\n</xsl:call-template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "with-param",
      "matches": {
        "call-template": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef0a645a-cbdd-3a58-b8c8-b7e1f51b590e": {
      "content": "loadBytes(\"${0:filename}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadBytes": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef0bb9ff-dad8-37e3-958c-a28dd2912b97": {
      "content": ".. contents::\n\t:depth: ${1:2}\n\t${2::local:}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_content",
      "matches": {
        "content": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ef114b97-c145-37e3-a16c-ef12f51000bf": {
      "content": "blue(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blue": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef1919d2-5a2f-32bb-9e1f-9029a8fd0a3c": {
      "content": "has_many :${1:object}s${2:, class_name: \"$1\", foreign_key: \"${4:reference}_id\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many (hm)",
      "matches": {
        "hm": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ef1dd782-9623-361e-9ac2-0bfc5bb9441a": {
      "content": "place-content: ${1} ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef22d10d-9982-3b71-a497-749b72b67ebf": {
      "content": "expect(${1:target}).not.toBeFalsy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be falsy (coffee)",
      "matches": {
        "notf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ef33ef14-99f3-32de-ac56-3346669eb650": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch {\n\tcase e: FileNotFoundException => ${2}\n\tcase e: IOException => ${3}\n} finally {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef3aa908-3c6d-3f0d-8a26-1fa170bb32d4": {
      "content": "t.rename(:${1:old_column_name}, :${2:new_column_name})\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.rename (tre)",
      "matches": {
        "t.": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ef4505e4-382c-37ee-a663-78991e37f4b2": {
      "content": "${1:name}[${2:rows}, ${0:cols}]",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef48359a-ad5c-3900-8481-bac6dd1719b4": {
      "content": "it('should $1', () => {\n\t$0\n})\n",
      "doc": "Testing `it` block",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "itBlock",
      "matches": {
        "tit": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ef547fcf-e805-3926-8ace-87a2e417bc59": {
      "content": "elif ${1:condition}; then\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef5c76c8-2d4c-3806-9cf3-c55cb512178c": {
      "content": "#!/usr/bin/env ruby -wKU",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rb": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef5e7863-c68e-3348-9936-880a9c8654b7": {
      "content": "_.isArguments(${value})",
      "doc": "_.isArguments(function() { return arguments; }());\n// => true\n\n_.isArguments([1, 2, 3]);\n// => false\n\nChecks if `value` is likely an `arguments` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarguments",
      "matches": {
        "lodash isarguments": true
      },
      "source": "javascript/lodash"
    },
    "ef61ec7b-44a5-3a5d-90bf-8e7b9347153e": {
      "content": "must_be_within_delta ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbwd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef621d79-c99d-33f7-b025-83b643619251": {
      "content": "grid-auto-columns min-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef705bef-95b6-3a5e-b9e5-a32cd8624e85": {
      "content": "function object(o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      },
      "source": "snippets/javascript"
    },
    "ef74dba3-9e01-3d9c-a096-fafd8e2274d9": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ef78f8f8-4cbf-3854-ac37-c4ba1f0ede7e": {
      "content": "import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n\n}\n\nconst ${1:${TM_FILENAME_BASE}} = createSlice({\n\tname: ${2:sliceName},\n\tinitialState,\n\treducers: {\n\t\n\t}\n});\n\nexport const {\n\n} = ${1:${TM_FILENAME_BASE}}.actions\nexport default ${1:${TM_FILENAME_BASE}}.reducer",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reduxSlice",
      "matches": {
        "rxslice": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ef91f21c-a964-3479-9d56-d664ce6547bd": {
      "content": "gotoAndPlay(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gp": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ef92bc1e-6e79-3f34-848c-ebfbb3662275": {
      "content": "watch: {\n\t${1:data}: {\n\t\timmediate: ${2:true},\n\t\tdeep: ${3:true},\n\t\thandler(${4:newValue}, ${5:oldValue}) {\n\t\t\t${0}\n\t\t}\n\t}\n},",
      "doc": "vue watcher with options",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Watchers with Options",
      "matches": {
        "vwatcher-options": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "ef982f05-4677-3c04-9a9e-c88136391a98": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef9859b0-af42-3e36-b3a8-789d6068de64": {
      "content": "_.indexOf(${array}, ${value}, ${fromIndex})",
      "doc": "_.indexOf([1, 2, 1, 2], 2);\n// => 1\n\n// Search from the `fromIndex`.\n_.indexOf([1, 2, 1, 2], 2, 2);\n// => 3\n\nGets the index at which the first occurrence of `value` is found in `array`\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. If `fromIndex` is negative, it's used as the\noffset from the end of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-indexof",
      "matches": {
        "lodash indexof": true
      },
      "source": "javascript/lodash"
    },
    "ef98d4fc-0b1c-3749-910c-38db5833c116": {
      "content": "{%- capture ${1:variable} -%}${0}{%- endcapture -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture-": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef9b1455-58a1-3163-ba6c-f640bb056c49": {
      "content": "where\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "ef9de409-c51e-3c3d-8e0f-a0b26f2c69ac": {
      "content": "mixin Signal!(${1:/*args*/}) ${2:/*name*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "signal (signal)",
      "matches": {
        "signal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "efac1ecb-d74b-3e10-b6f3-9077ce7f4e80": {
      "content": "message(SEND_ERROR \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(SEND_ERROR \"...\")",
      "matches": {
        "send_error_message": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "efb29c66-831e-3726-89e2-80ca7a461cc9": {
      "content": "lerpColor(${1:c1}, ${2:c2}, ${0:amt});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lerpColor": true
      },
      "source": "vim-snippets/snippets"
    },
    "efb981fb-c878-34ad-a831-f38f0a3a0899": {
      "content": "![${1:alt}](${2:url} \"${3:title}\")${4}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![": true
      },
      "source": "vim-snippets/snippets"
    },
    "efbe4c97-349e-39c0-a66d-4c032a2c9388": {
      "content": "list-style-type: decimal-leading-zero",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      },
      "source": "vim-snippets/snippets"
    },
    "efc1c717-eaf6-3dca-9b64-8db994a03346": {
      "content": "def ${1:method_name}${2:(${3:*args})}\n\t$0\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "def <name>...",
      "matches": {
        "\"\\b(de)?f\"": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "efcc3428-bb8d-3e89-93f6-1e478000413a": {
      "content": "_.pick(${object}, ${paths})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pick(object, ['a', 'c']);\n// => { 'a': 1, 'c': 3 }\n\nCreates an object composed of the picked `object` properties.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pick",
      "matches": {
        "lodash pick": true
      },
      "source": "javascript/lodash"
    },
    "efcfb3ef-16a9-30de-876d-86c5c5c861da": {
      "content": "border-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-width": true,
        "bw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "efd0381c-b4f3-32e1-80e3-b8c70f5a1e14": {
      "content": "console.time(`${1:object}`)",
      "doc": "Console time wrapper",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTime",
      "matches": {
        "ctm": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "efd80fa5-b447-399a-bbdc-b5c227c0c1cd": {
      "content": "border-top: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "efdcd63e-9f3f-33cd-834e-9b36babac2b0": {
      "content": "if ${1:#:condition} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if {}",
      "matches": {
        "if": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "efe57134-c1eb-3f66-8f31-a003afe71aac": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} elsif (${3}) {\n\t${4:#:elsif...}\n} else {\n\t${5:#:else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "efff6406-649a-3ef7-9a3f-3c4420c3819c": {
      "content": "place-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      },
      "source": "vim-snippets/snippets"
    },
    "f00378cb-ff27-3ad4-946f-106eb0d41bc2": {
      "content": "pub struct ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub struct",
      "matches": {
        "pubstruct": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f00a822a-1a3f-32b8-93d6-728cf7ff7b49": {
      "content": "<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:utf": true
      },
      "source": "vim-snippets/snippets"
    },
    "f00ae56e-2e10-3895-8410-2ccbcd061aea": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/snippets"
    },
    "f01343f2-b433-3564-813d-291e722ba310": {
      "content": "beforeDestroy () {\n\t${0};\n},",
      "doc": "beforeDestroy lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeDestroy",
      "matches": {
        "vbeforedestroy": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "f01aab2d-f298-3cae-861b-b37cf259efe7": {
      "content": "componentWillReceiveProps(nextProps) {\n\t$0\n}\n",
      "doc": "Invoked when a component is receiving new props. This method is not called for the initial render. [DEPRECATION NOTE]: This method is deprecated in React 16.3",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      },
      "source": "vscode-react/snippets"
    },
    "f0241972-fd6d-3a72-94c9-4de8e2522a44": {
      "content": "<style lang=\"stylus\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with stylus scoped",
      "matches": {
        "style_with_stylus_scoped": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f02e7710-10f5-3e74-8e50-12fe0f42668e": {
      "content": "${1:FIELDNAME} = models.IntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "f034a5de-9851-323e-a269-539154f06c08": {
      "content": "ref=\"${1:reference}\"$0",
      "doc": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-ref",
      "matches": {
        "ref": true,
        "vue ref": true
      },
      "source": "javascript/vue"
    },
    "f037e396-2f0b-38c4-84fd-d50bfa682a5e": {
      "content": "|> Enum.each(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to each",
      "matches": {
        ">e": true
      },
      "source": "vim-snippets/snippets"
    },
    "f044642f-e234-3221-8dd6-7c4f8e8653a6": {
      "content": "t.timestamps\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tctss": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0472a44-d90d-35f1-a79b-1d0957ff2653": {
      "content": "<form class=\"${1}\" action=\"${2}\" method=\"${3:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form.": true
      },
      "source": "vim-snippets/snippets"
    },
    "f04a884d-5ea5-3232-a123-66074350957e": {
      "content": "word-break: keep-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      },
      "source": "vim-snippets/snippets"
    },
    "f050e6a9-0d3c-3683-8276-ac078206153a": {
      "content": "overflow-x auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "f05f6955-eb73-350f-b668-7981c6ceb6d5": {
      "content": "_.functionsIn(${object})",
      "doc": "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functionsIn(new Foo);\n// => ['a', 'b', 'c']\n\nCreates an array of function property names from own and inherited\nenumerable properties of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-functionsin",
      "matches": {
        "lodash functionsin": true
      },
      "source": "javascript/lodash"
    },
    "f0610a01-aac6-3ca9-916a-4247ad081f2e": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      },
      "source": "snippets/javascript"
    },
    "f066bd7f-e406-357c-b94f-7e823901ad56": {
      "content": "unauthorized(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ru": true
      },
      "source": "vim-snippets/snippets"
    },
    "f066fdc5-7b70-3787-8b1f-dbdded813ca7": {
      "content": "interface ${1:name}\n\t${0}\nend interface $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iface": true
      },
      "source": "vim-snippets/snippets"
    },
    "f06fb8fa-2c3d-3df8-b566-76d73be4fc2b": {
      "content": "font-effect: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0745512-a662-3700-80e5-0062406cf494": {
      "content": "cmake_minimum_required(VERSION ${0:2.8.2})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      },
      "source": "vim-snippets/snippets"
    },
    "f079e504-c62c-3a08-91a9-fa451f2f5615": {
      "content": "when ${1:condition}\n\t${0}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0861f31-7702-3e09-85de-1b6f3f73a726": {
      "content": "import Html exposing (Html)\ntype alias Model =\n\t{}\ntype Msg\n\t= Noop\nmain : Program Never Model Msg\nmain =\n\tHtml.program\n\t\t{ init = init\n\t\t, view = view\n\t\t, update = update\n\t\t, subscriptions = subscriptions\n\t\t}\ninit : ( Model, Cmd Msg )\ninit =\n\t{} ! []\nupdate : Msg -> Model -> ( Model, Cmd Msg )\nupdate msg model =\n\tcase msg of\n\t\tNoop ->\n\t\t\tmodel ! []\nsubscriptions : Model -> Sub Msg\nsubscriptions model =\n\tSub.none\nview : Model -> Html Msg\nview model =\n\tHtml.text \"Hello, sailor!\"",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "Elm 0.18 program",
      "matches": {
        "program": true
      },
      "source": "vim-snippets/snippets"
    },
    "f08b6ef2-9f74-3e4a-9c20-817756749d1d": {
      "content": "text-transform capitalize",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "f08d54a5-4961-3a6b-b694-57231db68a4d": {
      "content": "$_FILES['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "F": true
      },
      "source": "vim-snippets/snippets"
    },
    "f092d4b1-f426-3b71-a068-39201c6b7f7f": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\param $5 ${6:Parameter description}\n * \\return ${7:Return parameter description}\n */\n${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n{\n\t${12}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun2": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0ab6630-1a32-3317-8fbf-492625e1a4c4": {
      "content": "text-wrap: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0b08ab8-c92f-3205-b47b-d88decf5c903": {
      "content": "{% extends \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig extends",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0b54eae-bf9d-3425-8eb5-46f625f2d671": {
      "content": "useEffect(() => {\n$0 return () => {\n$0\n\t}\n})",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffectUnMount",
      "matches": {
        "usfu": true
      },
      "source": "vscode-react/snippets"
    },
    "f0b725fa-290f-3913-b9a4-27905a13882f": {
      "content": "$.type(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$type": true
      },
      "source": "snippets/javascript"
    },
    "f0b8064e-0aa9-3d5e-8a07-b623b72ff233": {
      "content": "kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: {{ template \"${2}.$1.fullname\" . }}\n  labels:\n\tapp: {{ template \"${2:chartName}.name\" . }}\n\tchart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n\trelease: \"{{ .Release.Name }}\"\n\theritage: \"{{ .Release.Service }}\"\nspec:\n  accessModes:\n\t- {{ .Values.$1.persistence.accessMode | quote }}\n  resources:\n\trequests:\n\t  storage: {{ .Values.$1.persistence.size | quote }}\n{{- if .Values.$1.persistence.storageClass }}\n{{- if (eq \"-\" .Values.$1.persistence.storageClass) }}\n  storageClassName: \"\"\n{{- else }}\n  storageClassName: \"{{ .Values.${1:value_key}.persistence.storageClass }}\"\n{{- end }}\n{{- end }}\n{{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "PersistentVolumeClaim_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0c5faf1-9d53-3341-9bf1-ac7acc900a22": {
      "content": "if ${1}\n\t${2}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0d7a5d2-0818-3862-bff4-4e766db81069": {
      "content": "echo CHtml::activeCheckBox(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhacb": true
      },
      "source": "vim-snippets/snippets"
    },
    "f0dae22b-378e-34a6-94a3-b38e0a72f94d": {
      "content": "Run Keyword And Ignore Error    ${1:${kw}}    ${2:${args}}\n\\${${3:result}}    \\${${4:return_value}}=    Run Keyword And Ignore Error    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Ignore Error",
      "matches": {
        "rkaie": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f0db0a63-3aac-36fc-8365-b0ae4d3e0e52": {
      "content": "$this->shouldNotReturnAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotReturnAnInstanceOf('Type')",
      "matches": {
        "snrinstance": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f0f4777f-00ca-336a-a528-c76c25f9b40a": {
      "content": "_.mergeWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n}\n\nvar object = { 'a': [1], 'b': [2] };\nvar other = { 'a': [3], 'b': [4] };\n\n_.mergeWith(object, other, customizer);\n// => { 'a': [1, 3], 'b': [2, 4] }\n\nThis method is like `_.merge` except that it accepts `customizer` which\nis invoked to produce the merged values of the destination and source\nproperties. If `customizer` returns `undefined`, merging is handled by the\nmethod instead. The `customizer` is invoked with six arguments:\n(objValue, srcValue, key, object, source, stack).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mergewith",
      "matches": {
        "lodash mergewith": true
      },
      "source": "javascript/lodash"
    },
    "f0fde531-d9d5-352a-86e2-15e295250e79": {
      "content": "(fun ${1:x} -> ${2:x})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "(fun x -> ..)",
      "matches": {
        "fun": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f10f22cb-8253-3715-93cf-b4567026efe7": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f10fb1f1-41b4-3817-a559-e64f89b1b5d4": {
      "content": "-webkit-box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1156a85-eccf-3d85-a8af-4ae1eadf8406": {
      "content": "setInterval(() => {\n\t${2}\n}, ${0:intervalInms});",
      "doc": "Executes the given function at specified intervals in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setInterval",
      "matches": {
        "sti": true
      },
      "source": "vscode-javascript/snippets"
    },
    "f12030c3-65ed-3735-8815-5f3d1d6829c0": {
      "content": "_.castArray(${value})",
      "doc": "_.castArray(1);\n// => [1]\n\n_.castArray({ 'a': 1 });\n// => [{ 'a': 1 }]\n\n_.castArray('abc');\n// => ['abc']\n\n_.castArray(null);\n// => [null]\n\n_.castArray(undefined);\n// => [undefined]\n\n_.castArray();\n// => []\n\nvar array = [1, 2, 3];\nconsole.log(_.castArray(array) === array);\n// => true\n\nCasts `value` as an array if it's not one.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-castarray",
      "matches": {
        "lodash castarray": true
      },
      "source": "javascript/lodash"
    },
    "f1285442-b416-3a7a-abea-7ff3a7e3cd4d": {
      "content": "<Link href=\"${1:#}\">\n  <a>${2:content}</a>\n</Link>",
      "doc": "Link accepts the following props: href, as, passHref, prefetch, replace, scroll, shallow",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link",
      "matches": {
        "next link": true
      },
      "source": "javascript/next"
    },
    "f12e0643-afc8-387e-bd56-034269bf0f4b": {
      "content": "require_once '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqo": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f140f7b9-c8fd-37e0-8dfa-0175c5adb403": {
      "content": "${1:obj}.click(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "click": true
      },
      "source": "snippets/javascript"
    },
    "f145483a-6da8-353b-90bf-7fae3bd8945f": {
      "content": "assertTrue(\"${1:Failure message}\", ${2:condition});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "at": true
      },
      "source": "vim-snippets/snippets"
    },
    "f149bd36-7fb1-3858-b051-d77c4005dcaa": {
      "content": "$.makeArray(${0:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "makearray": true
      },
      "source": "snippets/coffee"
    },
    "f1626f90-15cf-3c24-960d-59e7971c2c06": {
      "content": "${1:obj}.queue(${2:name}${3:, newQueue})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      },
      "source": "snippets/javascript"
    },
    "f1664660-31bf-3654-abf6-42e8bbcaf7f5": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}\n",
      "doc": "DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUpdate",
      "matches": {
        "cwup": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f1695946-da4a-3eda-94bc-a0e086f34652": {
      "content": "private ${1:int} ${2:myVar};\npublic $1 ${3:MyProperty}\n{\n\tget { return $2; }\n\tset { $2 = value; }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propf": true
      },
      "source": "vim-snippets/snippets"
    },
    "f171889f-20a2-343c-abff-42cdd7cbea86": {
      "content": "System.out.print(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1749186-d50c-368e-a74d-7991a1b76087": {
      "content": "array.required()",
      "doc": "array.required(message?: string | function): Schema\n\nThe same as the mixed() schema required, except that empty arrays are also considered 'missing' values.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-required",
      "matches": {
        "yup array required": true
      },
      "source": "javascript/yup"
    },
    "f175bf37-00f4-347f-8dde-fdeafe6f2cff": {
      "content": "${1:FIELDNAME} = forms.DateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateField",
      "matches": {
        "fdate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f17cd6ee-7c3e-3241-84c6-acb0c0e7096d": {
      "content": "NSAutoreleasePool *${1:pool} = [[NSAutoreleasePool alloc] init];\n${0}\n[$1 drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pool": true
      },
      "source": "vim-snippets/snippets"
    },
    "f17d4911-696a-3586-be8b-8192715af6c6": {
      "content": "NO-LOCK NO-ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nle": true
      },
      "source": "vim-snippets/snippets"
    },
    "f17ea59f-c521-3220-8288-c897e61e8fd0": {
      "content": "${1:obj}.mouseout(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      },
      "source": "snippets/javascript"
    },
    "f17ef677-737b-37cc-bd7d-17021863f92b": {
      "content": "import ${1|onBeforeMount,onMounted,onBeforeUpdate,onUpdated,onBeforeUnmount,onUnmounted,,onActivated,onDeactivated,onErrorCaptured,onRenderTracked,onRenderTriggered|} from '${2|vue,@vue/composition-api|}'",
      "doc": "Import Lifecycle hooks to use in file",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3lifecyclehook-import",
      "matches": {
        "vue v3 importlifecyclehook ": true
      },
      "source": "javascript/vue"
    },
    "f1888626-bde1-3fa3-9bd9-4995ce068a93": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-props",
      "matches": {
        "props": true,
        "react component props": true
      },
      "source": "javascript/react"
    },
    "f18a2c6f-546b-39be-b4b3-fdb580fb3abd": {
      "content": "=>",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "f18afce8-24ce-3166-a3f0-0421f6a24e3e": {
      "content": "${1:move }|$2| { $3 }",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Closure, anonymous function (inline)",
      "matches": {
        "||": true
      },
      "source": "vim-snippets/snippets"
    },
    "f18b7bdb-45fc-39c8-aa7e-9e5432f7f987": {
      "content": "cor.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      },
      "source": "vim-snippets/snippets"
    },
    "f18c03e6-60a7-3154-8c64-ffc5b496a645": {
      "content": "#if\n\t${0}\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      },
      "source": "vim-snippets/snippets"
    },
    "f18cc612-3feb-36e2-9061-732cf12a279e": {
      "content": "foreach(${1:mixed} ${2:ele} in ${3:arr})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "f19745db-d676-3c95-baed-5f44272d6dee": {
      "content": "${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stop": true
      },
      "source": "snippets/coffee"
    },
    "f19751ba-d196-36a8-812e-eb599cec1831": {
      "content": "named_scope :name${1:, joins: :${2:table}}, conditions: ${3:['${4:${5:field} = ?}', ${6:true}]}\n",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "named_scope",
      "matches": {
        "nc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f1a01e88-e1c7-38f8-96aa-69d17f07a983": {
      "content": "overflow: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1a11090-4a50-33d0-8b97-9b50a70cff16": {
      "content": "arc(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:start}, ${0:stop});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arc": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1a3d70f-363d-32f9-9597-8b588102ace2": {
      "content": "\\begin{titlepage}\n\t${1:TARGET}\n\\end{titlepage}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{titlepage} \\titlepage": true,
        "titlepage": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f1abdc5a-6b59-335a-ad71-0e2ce816d39c": {
      "content": "\\begin{array}{${1}}\n\t${2:TARGET}\n\\end{array}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{array} \\array": true,
        "array": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f1af73e4-416e-3f5d-b2f8-12471842542c": {
      "content": "border-bottom-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbs": true,
        "border-bottom-style": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f1b06f13-3119-3073-b454-f1f6b7130580": {
      "content": "if !defined(${1:Resource}[\"${2:name}\"]) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnd": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1b4e703-5c08-39eb-bd36-a637397f2b0a": {
      "content": "|  ${0:factors}      |    ${1:a}       |  ${2:b}   \t|\n| ------------- |-------------  | ------- |\n|    ${3:f1}    |    Y          | N       |\n|    ${4:f2}    |    Y          | N       |",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tb": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1b6e36c-88b3-3d34-a31f-9812b0bd0b49": {
      "content": "#define ${0:#:SYMBOL}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true,
        "define": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f1c2ca96-c58f-3c43-abde-677b56973e1e": {
      "content": "$this->shouldNotHaveType($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotHaveType('Type')",
      "matches": {
        "sntype": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f1c3a83d-9646-3700-a0ce-67bede4ffc53": {
      "content": "$scope.${1:variable} = ${2:value}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$v": true
      },
      "source": "snippets/coffee"
    },
    "f1c5bf36-c422-37cc-a96d-f7322b29a165": {
      "content": "<% if ${1} %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1cb4794-ced3-34ab-910d-cf23f8d0a617": {
      "content": "interface ${1:#:IName} ${2::} ${3:Parent} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "interface {}",
      "matches": {
        "interface": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f1de9756-9d47-3d8c-8240-6c37984848df": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1f70a79-64b5-3ece-a4ee-0a1305b68d8a": {
      "content": "unless ${1:condition}\n\t$2\nelsif ${3:condition}\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unlesee": true
      },
      "source": "vim-snippets/snippets"
    },
    "f1ff5982-df2a-3f6a-bb1b-1cdb5706d9cf": {
      "content": "margin: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true,
        "margin": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f2065b5f-5ecc-3703-a471-493abbd651df": {
      "content": "t.rename(:${1:old_column_name}, :${2:new_column_name})\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Table column(s) rename",
      "matches": {
        "tre": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f20c383f-f5de-356e-8c3e-d39b87e120dd": {
      "content": "${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cssm": true
      },
      "source": "snippets/javascript"
    },
    "f20d1e90-f359-321a-8cd2-3f8f36c68fdf": {
      "content": "<button type=\"${1:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button": true
      },
      "source": "vim-snippets/snippets"
    },
    "f20f2627-07cb-313c-90bf-1ed3cc2d9a5d": {
      "content": "function it_$1()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function it_does_something() { ... }",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f21da0e9-ac8c-349a-b18a-7977edeb0f25": {
      "content": "switch ${1:object}\n\twhen ${2:value}\n\t\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      },
      "source": "snippets/coffee"
    },
    "f21e6d71-45fc-38af-997f-da379dacd561": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n\t${1} res = [super ${2:#:method}]\n\treturn res;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "SubMethod",
      "matches": {
        "sm": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f2240c6b-236a-3e7a-b743-70ef34712546": {
      "content": "/**\n * ${1:undocumented class variable}\n *\n * @var ${2:string}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_vp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f229333c-4835-3f59-944e-63fe37e0ce3f": {
      "content": "static ${1}: ${2:usize} = ${0};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "static item declaration",
      "matches": {
        "stat": true
      },
      "source": "vim-snippets/snippets"
    },
    "f23bc79c-9a4f-3f78-9d91-8a2cc29a67c9": {
      "content": "class ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f241d8f7-0abd-3cee-8428-87554e98b1ea": {
      "content": "$.ajaxStart(function () {\n\t${1:// handler for when an AJAX call is started and no other AJAX calls are in progress};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstart": true
      },
      "source": "snippets/javascript"
    },
    "f2431c1b-2605-3260-a3bb-d4e9c7cfc1a1": {
      "content": "(doseq [${1:elem} ${2:coll}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doseq": true
      },
      "source": "vim-snippets/snippets"
    },
    "f244732a-83ab-34dc-a742-f3146f9c4a6c": {
      "content": "create sequence ${1:name} start with ${2:1} increment by ${3:1} minvalue ${0:1};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seq": true
      },
      "source": "vim-snippets/snippets"
    },
    "f247ea72-8ce2-392e-9d1c-fefd016f9ae4": {
      "content": "\\textsc{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsc": true,
        "textsc \\textsc{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f2495e10-aabe-3e5d-b92a-7502334f4d6f": {
      "content": "_.sortedUniq(${array})",
      "doc": "_.sortedUniq([1, 1, 2]);\n// => [1, 2]\n\nThis method is like `_.uniq` except that it's designed and optimized\nfor sorted arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sorteduniq",
      "matches": {
        "lodash sorteduniq": true
      },
      "source": "javascript/lodash"
    },
    "f24968f4-27bc-3ccc-8d5b-4c649e438c2c": {
      "content": "versioncmp(\"${1:version}\", \"${2:version}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "versioncmp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f253ae6e-60de-3111-9489-548d436ff323": {
      "content": "main() {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "f25ddcc1-2ce3-3dc9-8444-990a300c3602": {
      "content": "font-smooth: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "f25e375d-ab4d-3437-ad35-b190db4193df": {
      "content": "subject.${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.": true
      },
      "source": "vim-snippets/snippets"
    },
    "f26c69f9-fc83-3acf-b5bc-fd45048393a8": {
      "content": "<xsl:variable name=\"${1:name}\">${0}\n</xsl:variable>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "blank",
      "matches": {
        "variable": true
      },
      "source": "vim-snippets/snippets"
    },
    "f27ebf19-0489-305d-a93e-1dbf5003277e": {
      "content": "~~${1}~~${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "~~scratch~~",
      "matches": {
        "scratch": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f2840557-acf1-3597-bbdc-e839c4c8aa25": {
      "content": "display: flex",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2898bfa-12b7-39b1-8650-91e467e2dc09": {
      "content": "{% do ${1} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig do",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "f28b3c32-39a4-3421-abac-6cbc19fdb8e7": {
      "content": "_.isString(${value})",
      "doc": "_.isString('abc');\n// => true\n\n_.isString(1);\n// => false\n\nChecks if `value` is classified as a `String` primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isstring",
      "matches": {
        "lodash isstring": true
      },
      "source": "javascript/lodash"
    },
    "f294ebf8-844e-35f3-8a17-911348a06c5b": {
      "content": "line-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2a6cb95-9b7e-387f-b075-40bea795463a": {
      "content": "scope=\"${1:this api replaced by slot-scope in 2.5.0+}\"$0",
      "doc": "Used to denote a <template> element as a scoped slot, which is replaced by `slot-scope` in 2.5.0+.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-scope",
      "matches": {
        "scope": true,
        "vue scope": true
      },
      "source": "javascript/vue"
    },
    "f2ac4f2f-0a94-338f-aa0d-ee45529d7118": {
      "content": "-moz-border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2adc593-911f-3760-a602-85c639a7828d": {
      "content": "ambient(${1:value1}, ${2:value2}, ${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ambient": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2bf4a23-3366-320c-b7fa-3f620810fca7": {
      "content": "font-stretch ultra-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2c37b09-3f67-3cff-ac91-d67d79cd1551": {
      "content": "class ${1:name} {\n\tconstructor(${2:arguments}) {\n\t\t${0}\n\t}\n}",
      "doc": "class (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "class-es6-",
      "matches": {
        "base class": true
      },
      "source": "javascript/base"
    },
    "f2c7ae4a-ad2e-3bc6-b9d8-e850425ae3f9": {
      "content": "@inject('$1', '$2')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@inject directive",
      "matches": {
        "inject": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f2ca545d-07c8-3526-b864-c0c6bc63eaa9": {
      "content": "list-style-type: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2d96df7-968d-39c0-8eae-83107a157633": {
      "content": "${1:callbacks}.empty()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cempty": true
      },
      "source": "snippets/javascript"
    },
    "f2dadacb-4918-3a9d-a8e1-36aaf8e4bd69": {
      "content": "- (${1:#:id})${2:#:attribute}\n{\n\t[self willAccessValueForKey:@\"$2\"];\n\t$1 value = [self primitiveValueForKey:@\"$2\"];\n\t[self didAccessValueForKey:@\"$2\"];\n\treturn value;\n}\n- (void)set$2:($1)aValue\n{\n\t[self willChangeValueForKey:@\"$2\"];\n\t[self setPrimitiveValue:aValue forKey:@\"$2\"];\n\t[self didChangeValueForKey:@\"$2\"];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "CoreData",
      "matches": {
        "cd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f2e876e6-7c99-33df-ac03-3e62ccdb3ea0": {
      "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponentPropTypes",
      "matches": {
        "rccp": true
      },
      "source": "vscode-react/snippets"
    },
    "f2ecf2db-6fbd-328f-bc62-87470f80c194": {
      "content": "before_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_update",
      "matches": {
        "befu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f2f03e63-3574-3a0f-8b3a-48ccad1c8cde": {
      "content": "it('${1:should }', async () => {\n\t$0\n});",
      "doc": "creates an it block with async callback function",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-async",
      "matches": {
        "ita": true,
        "jest it async": true
      },
      "source": "javascript/jest"
    },
    "f2f09e8f-e5d1-37dc-8b6e-48e61ebe47af": {
      "content": "{% load $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f2fb2984-fd34-38f9-bc13-c9ee5405e553": {
      "content": "library ${1}\nuse $1.${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      },
      "source": "vim-snippets/snippets"
    },
    "f2fd4528-01d3-3473-98b5-84838cda9adb": {
      "content": "${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dthen": true
      },
      "source": "snippets/javascript"
    },
    "f2fefcba-30f5-32e6-871b-4a9ac197ee3a": {
      "content": "enum ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f30a0bdf-79f6-3b06-b321-9da325c513f6": {
      "content": "&#x2192;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "right": true
      },
      "source": "vim-snippets/snippets"
    },
    "f312fa6f-810b-3c3f-881f-a5689e69de01": {
      "content": "border-bottom-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      },
      "source": "vim-snippets/snippets"
    },
    "f317a07f-3f9a-3c59-b93f-56bdc76f9330": {
      "content": "${1:int} ${2:#:Name} { get${3:;} ${4:#:private }set${5:;} }${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true,
        "property": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f326e0b2-b640-3f65-b439-85b0845d5536": {
      "content": "let ${1}: ${2} = ${3};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let variable declaration with explicit type annotation",
      "matches": {
        "lett": true
      },
      "source": "vim-snippets/snippets"
    },
    "f32ba93d-70ef-3288-8673-bf6408859808": {
      "content": "const {${1:name}} = ${2:value};",
      "doc": "Object destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-const-assignment",
      "matches": {
        "base const destruct object": true
      },
      "source": "javascript/base"
    },
    "f32bc204-d6e2-3aaa-a5fe-da377a7a0ec4": {
      "content": "has_many :${1:other}s, class_name: '${2:$1}', foreign_key: '${3:$1}_id', dependent: :destroy",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmd": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3388d70-976b-32c5-8723-c99f33722ceb": {
      "content": "import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\n\n// avoid typing issues for now\nexport declare var navigator;\n\n@Injectable({ providedIn: 'root' })\nexport class NetworkAwarePreloadStrategy implements PreloadingStrategy {\n\tpreload(route: Route, load: () => Observable<any>): Observable<any> {\n\t\treturn this.hasGoodConnection() ? load() : EMPTY;\n\t}\n\n\thasGoodConnection(): boolean {\n\t\tconst conn = navigator.connection;\n\t\tif (conn) {\n\t\t\tif (conn.saveData) {\n\t\t\t\treturn false; // save data mode is enabled, so dont preload\n\t\t\t}\n\t\t\tconst avoidTheseConnections = ['slow-2g', '2g' /* , '3g', '4g' */];\n\t\t\tconst effectiveType = conn.effectiveType || '';\n\t\t\tif (avoidTheseConnections.includes(effectiveType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}",
      "doc": "Angular network aware preload strategy",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Network-Aware Preload Strategy",
      "matches": {
        "a-preload-network-strategy": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "f3394d22-6663-306a-be3c-892aa6c890c4": {
      "content": "<footer>\n    ${1}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f33a293f-1a82-392d-b33f-ec05afea6c6e": {
      "content": "orphans: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f349b825-f118-3a9c-a11c-c649a21311a9": {
      "content": "import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LogInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst started = Date.now();\n\t\treturn next.handle(req).pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tconst elapsed = Date.now() - started;\n\t\t\t\t\tconsole.log(`Request for \\${req.urlWithParams} took \\${elapsed} ms.`);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}",
      "doc": "Angular HttpInterceptor for Logging HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-for-logging",
      "matches": {
        "a-http-interceptor-logging": true,
        "angular http interceptor logging": true
      },
      "source": "javascript/angular"
    },
    "f3501d04-b551-3148-823d-2445eb8a0bd5": {
      "content": "CFLAGS=-Wall -g ${0: -llua -lzeromq}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CFLAGS": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f3521397-cca0-33ac-90fd-303ec1c3c826": {
      "content": "display list-item",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3589e64-6888-3128-9e5b-90bdff641725": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f360200b-f8be-35b1-9c04-61cb60ad7fec": {
      "content": "<option value=\"${1}\">${0:$1}</option>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3689a32-2602-3679-bb1b-3e35fa9c8370": {
      "content": "_ = println(${1})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "p in for",
      "matches": {
        "pf": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f376a371-0032-363b-8f3f-31f4ca5c84cc": {
      "content": "it { should serialize :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iss": true
      },
      "source": "vim-snippets/snippets"
    },
    "f37c7172-a96c-3b5b-8601-d41175ee86f7": {
      "content": "archive { \"${1:filename}\":\n\tensure     => ${2:present},\n\turl        => \"http://${3:url}\",\n\textension  => \"${4:tgz}\",\n\ttarget     => \"${5:target}\",\n\tchecksum   => ${6:false},\n\tsrc_target => \"${7:/tmp}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "archive": true
      },
      "source": "vim-snippets/snippets"
    },
    "f38186d2-766b-3351-9385-d2e991dcaca1": {
      "content": "componentWillReceiveProps(nextProps) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      },
      "source": "snippets/javascript"
    },
    "f3836a65-d5c0-3519-b278-4ded7ce95d92": {
      "content": "@disable ${1:/*method*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@disable (dis)",
      "matches": {
        "dis": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f38e0ca4-ee07-3908-ac81-ee3b059ceb05": {
      "content": "{% url $1 as $2 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f39d11cb-ff68-3e4e-bf0c-4d84eaf2701b": {
      "content": "while (${1:true})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f3a7d42f-62aa-3029-b083-b6827615ebc3": {
      "content": "<#list ${1:sequence} as ${2:element}>\n\t${0:${VISUAL}}\n</#list>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#list sequence as element>...</#list>",
      "matches": {
        "lis": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3ae8c85-b35d-31e7-a2ca-8cb0db07b98b": {
      "content": "import logging\nLOGGER = logging.getLogger(${0:__name__})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glog": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3b45a52-0372-3ba3-afcf-f7709e768429": {
      "content": "overflow-style marquee",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3b6c505-8c4a-331d-8ab8-3ed980250734": {
      "content": "var ${1} ${2} = ${3}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variable declaration",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3b9f7b1-13aa-3ee7-8338-8df602f28344": {
      "content": "Sleep    ${1:2 minutes 10 seconds}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Sleep",
      "matches": {
        "sleep": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f3c399de-1fc9-374c-b196-bee703770df6": {
      "content": "<table border=\"${1}\">\n${2:TARGET}\n</table>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f3c7280e-2e65-35d8-b4cc-9ccee21c7d5d": {
      "content": "\"net.liftweb\" %% \"${0:lib}\" % liftVersion % \"compile->default\",",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liftjar": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3ccb686-2aa5-3d89-9675-8291fe6730b6": {
      "content": "/**\n * ${4:#:undocumented function}\n *\n * @return ${5:void}\n * @author ${6}\n **/\n${1}function ${2}(${3})\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_function": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f3d3f32c-3477-32af-8c12-9bd35b25a13e": {
      "content": "place-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3d68669-b13c-35d5-b174-412e0743cf28": {
      "content": "const ${1:name} = (${2:params}) => {\n\t${3}\n}",
      "doc": "Creates a named function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "namedFunction",
      "matches": {
        "nfn": true
      },
      "source": "vscode-javascript/snippets"
    },
    "f3e2b1b4-e287-3277-a75c-0fda3ea59363": {
      "content": "var_export(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "var_export($var)",
      "matches": {
        "var": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3f7b585-b010-3338-8dd0-e94a2cd6dd45": {
      "content": ".. todo::\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tod:": true
      },
      "source": "vim-snippets/snippets"
    },
    "f3f96178-a4c7-35e0-8a39-109b0ff501d7": {
      "content": "@debug \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@d": true
      },
      "source": "vim-snippets/snippets"
    },
    "f40aaab3-320c-3f0b-914b-14ecb2bebcb3": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-parameters",
      "matches": {
        "svactionp": true,
        "svelte action parameters": true
      },
      "source": "javascript/svelte"
    },
    "f40e5858-7412-38a2-b9a7-a576785c3399": {
      "content": "clear right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "f41dd339-abad-3d85-ac6d-3a23980a8570": {
      "content": "truncatewords:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f4240669-80e2-3fc6-b5c8-d8232de8d14d": {
      "content": "foreach my $${1:x} (@${2:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "f42e84bf-4b34-3735-a0a6-c5a993dc66fd": {
      "content": "display: table-column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4389ca0-afac-3ea3-ae3f-420a05305e31": {
      "content": "while ($1) {\n\t${2:# body...}\n}\n",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "while": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f43e0e07-216a-30a1-beeb-985b032f5fa2": {
      "content": "border-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      },
      "source": "vim-snippets/snippets"
    },
    "f444a130-424b-3fa7-852f-3eda8f4f5425": {
      "content": "align-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "f452dc7e-ac60-3acf-b83d-2ad66dcfb587": {
      "content": "[NSString stringWithFormat:@\"${1}\", ${2}]${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f4577c86-dc2a-3195-b769-0afe3071f467": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "do { ... } while (condition)",
      "matches": {
        "do": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4684ddf-25f3-3a3d-b5ee-34f0cb100435": {
      "content": "try {\n    ${0:TARGET}\n} finally {\n    ${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} finally {}",
      "matches": {
        "try_f": true,
        "try_finally": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f46a6c72-771b-314b-8848-dcfe1e58b806": {
      "content": "<%= if ${1} do %>\n\t${2:${VISUAL}}\n<% else %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4799aa9-779b-3578-bee1-58c2286ff41e": {
      "content": "fallthrough",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fallthrough",
      "matches": {
        "ft": true
      },
      "source": "vim-snippets/snippets"
    },
    "f488f5ab-edd7-3951-aaa7-dcb02320c5fb": {
      "content": "<label for=\"${2:$1}\">${1}</label>\n<select name=\"${3:$2}\" id=\"${4:$2}\">\n\t<option value=\"${5}\">${0:$5}</option>\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4901aab-fafe-3873-baa6-6d8ff34bf0b5": {
      "content": "if {${1}} {\n\t${2}\n} elseif {${3}} {\n\t${4:# elsif...}\n} else {\n\t${0:# else...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      },
      "source": "vim-snippets/snippets"
    },
    "f490ac2b-fffe-30d8-8cd9-1a8aaed22dad": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun1": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4a7faac-e35e-392c-b28a-f60e15bfbfe3": {
      "content": "public final ${1:#:type} ${2:#:var} = ${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "final": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f4a84da2-f5a0-3724-836a-96d103ad0278": {
      "content": "defer ${1:func}(${2})\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer someFunction()",
      "matches": {
        "df": true
      },
      "source": "gosnippets/snippets"
    },
    "f4a932a6-7a07-35eb-83b0-d663702a68d1": {
      "content": "{% csrf_token %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csrf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f4ac614a-2ac2-34f3-b799-5f3e4c335c66": {
      "content": "protected int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi|": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4aee95e-ace3-3458-a6bf-15025db0f960": {
      "content": "@property ${1:/*type*/} ${2:/*member_name*/}() const pure nothrow {return ${3:$2_};}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "getter property (get)",
      "matches": {
        "get": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f4bc37e1-6455-37da-a5c6-0a3fe75050cc": {
      "content": "ALTER TABLE ${1:table}\nMODIFY ${2:column} ${3:new_column_desc};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "ALTER TABLE ... MODIFY ...",
      "matches": {
        "ALTER_TABLE": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f4bdff38-40e4-3530-8d5e-01f6071d64c1": {
      "content": "<#attempt>\n\t${0:${VISUAL}}\n<#recover>\n</#attempt>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#attempt>...<#recover></#attempt>",
      "matches": {
        "att": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4c0de0a-8b47-3a03-af5a-169937e02ad8": {
      "content": "expect(${1:target}).not.toBeTruthy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be truthy (js)",
      "matches": {
        "nott": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4c38d1c-e72b-355f-8c80-6e5ba2f1dece": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!')\n\t},\n}\nconst ${2:Component} = Vue.extend({\n\tmixins: [$1]\n})",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmixin": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4cdf8c1-19c2-3cb3-a306-7c3fe89d6c79": {
      "content": "type ${1:parentType}Alias $1\nfunc (p *$1) MarshalJSON() ([]byte, error) {\n\treturn json.Marshal(&struct{ *$1Alias }{(*$1Alias)(p)})\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Marshalable json alias",
      "matches": {
        "ja": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4d4892d-a506-3cec-94c4-9bf6788dc3ce": {
      "content": "PropTypes.any,",
      "doc": "Any prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeAny",
      "matches": {
        "ptany": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f4d7903f-e2c0-3c28-a2b2-bab01a2a3b88": {
      "content": "page-break-before: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4d8ba34-8f9c-3289-8e32-460a60235358": {
      "content": "blockDim.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Block Dimension",
      "matches": {
        "bdim": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4d9fc06-2a17-3817-8dff-592e73d9cf34": {
      "content": "display: run-in",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4e47128-5d39-339d-9c2d-7233b7052481": {
      "content": "_.isRegExp(${value})",
      "doc": "_.isRegExp(/abc/);\n// => true\n\n_.isRegExp('/abc/');\n// => false\n\nChecks if `value` is classified as a `RegExp` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isregexp",
      "matches": {
        "lodash isregexp": true
      },
      "source": "javascript/lodash"
    },
    "f4e836b6-8732-37be-ba41-c28507f235e7": {
      "content": "v:version > ${1} || (v:version == $1 && has('patch${2}'))",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-version-check",
      "matches": {
        "version": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f4ee5750-c991-3636-acce-6451a66eba6b": {
      "content": "{% apply ${1:function} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4f67e79-02cf-3b56-9c89-503727c0f702": {
      "content": "<meta ${0}>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4fdb6de-7336-35ec-8015-5c3a843ce3d3": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\nclass ${1:ClassName_model} extends CI_Model\n{\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${2:// code...}\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_model": true
      },
      "source": "vim-snippets/snippets"
    },
    "f4fde96e-10ee-38f5-871c-c10cdd3e87ef": {
      "content": "@inproceedings{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    booktitle = {${4}},\n    year = {${5}},\n    memo = {editor, volume, number, series, pages, address, month,\n        organization, publisher, note}\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@inproceedings @conference conference": true,
        "inproceedings": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f50651a9-9574-3d3a-9c65-11f8329a79d3": {
      "content": "const ${1:NAME} ${2:Type} = ${0:0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const XXX Type = ...",
      "matches": {
        "con": true
      },
      "source": "gosnippets/snippets"
    },
    "f5070565-b6fd-36d8-96d2-0dac4f341958": {
      "content": "console.log(`${1:object}`, ${1:object})",
      "doc": "Logs property with name.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLogObject",
      "matches": {
        "clo": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f50fbf4a-78bd-30fb-971f-c974dba4462c": {
      "content": "axios.defaults.${1:key} = '${2:value}';",
      "doc": "Define global axios defaults, eg. baseURL, headers etc.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-defaults",
      "matches": {
        "axios defaults": true
      },
      "source": "javascript/axios"
    },
    "f514b6ed-aa4e-3692-a768-00c30220d443": {
      "content": "grid-row: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5153697-7465-366e-b955-81cc47a94ec6": {
      "content": "${1:obj}.detach('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detach": true
      },
      "source": "snippets/coffee"
    },
    "f51db9ba-74a0-3c9d-a8dd-68b512bc9518": {
      "content": "Scanner",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "f51de047-6fc2-33d4-90c5-d3b2421e8271": {
      "content": "[${1:ref number}] ${0}\nfn$1. ${2:footnote}",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      },
      "source": "vim-snippets/snippets"
    },
    "f52070fd-caee-3f53-9324-a902a6948d0d": {
      "content": "round(${0:value}};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "round": true
      },
      "source": "vim-snippets/snippets"
    },
    "f525818b-a7e9-389f-8f1e-f70b2581a501": {
      "content": "std::unordered_map<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "umap": true
      },
      "source": "vim-snippets/snippets"
    },
    "f52a64ab-3de1-3dca-a0f3-604822661e9a": {
      "content": "float32",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float32",
      "matches": {
        "f3": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5322ce7-74ed-320f-9c29-2587f9c70b59": {
      "content": "{\n\t:f${0}\n}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eventsmap": true
      },
      "source": "snippets/javascript"
    },
    "f536add3-0087-3645-8442-4eb3d27f7c81": {
      "content": "Wait Until Page Does Not Contain    ${1:${text}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Does Not Contain",
      "matches": {
        "wupdnc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f5371ebc-87bc-3153-b8b4-3e41ece69fe8": {
      "content": "${1:callbacks}.fireWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfirew": true
      },
      "source": "snippets/javascript"
    },
    "f5373a74-4dca-361c-a973-eef06b8b130a": {
      "content": "flex-flow: ${1:row} ${0:nowrap};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxf": true
      },
      "source": "vim-snippets/snippets"
    },
    "f54f9cb2-8f35-3697-9652-0626c4c3a37d": {
      "content": "// Empties buffers. Call this when all previous issues commands completed\ngl.glFlush();\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl flush",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "f555086c-0823-3362-868e-7512b26c8cec": {
      "content": "align-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "f55e4837-c252-3c74-85e3-99c3b2956d8e": {
      "content": "|> Seq.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smap": true
      },
      "source": "vim-snippets/snippets"
    },
    "f55e6c43-482e-3e24-88da-305a96dbd496": {
      "content": "(define-syntax (${1})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define-syntax",
      "matches": {
        "defs": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5604b5d-11df-3757-8c87-8e341a4c2e30": {
      "content": "border-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      },
      "source": "vim-snippets/snippets"
    },
    "f560e80b-afaa-3887-97be-39def002d7fe": {
      "content": "text-justify auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "f56cc3ae-0f1b-3781-8b88-e3e95ec53139": {
      "content": "const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t${1:propName}: () => {\n\t\t\tdispatch(${2:actionName}());\n\t\t},\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdtp": true
      },
      "source": "snippets/javascript"
    },
    "f56e8587-0f97-3913-8b9a-55cfc9896367": {
      "content": "border-bottom-left-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "f56ecaf2-1b6d-323d-94ec-f7e3066e73b3": {
      "content": "<xsl:param name=\"${1:name}\">${2}\n</xsl:param>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      },
      "source": "vim-snippets/snippets"
    },
    "f575844d-e84e-322c-8c42-34ec85046dab": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      },
      "source": "vscode-react/snippets"
    },
    "f578b773-4d22-3632-8e29-266f6d4fac9a": {
      "content": "new $1($2);",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "new (new)",
      "matches": {
        "new": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f578b7c8-d273-39ae-8112-94a2a1971590": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Import declaration",
      "matches": {
        "/^import/": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f585d02e-a3c0-34dd-8d1e-c540486cd4bc": {
      "content": "import { $2 } from '${1:module}'$0",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importDestructing",
      "matches": {
        "imd": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f5905319-1abf-341d-bb5e-f6a5f240cd59": {
      "content": "get_digit:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      },
      "source": "vim-snippets/snippets"
    },
    "f591eac1-dce9-3534-ab00-c1f5cc0b7a19": {
      "content": "$${1:#:expression}$${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "$ expression $",
      "matches": {
        "$": true,
        "mathexpression": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f592e14d-82a7-3a19-bc72-183e5ab9f097": {
      "content": "expect(${1:target}).not.toMatch(${2:pattern});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to match (js)",
      "matches": {
        "notm": true
      },
      "source": "vim-snippets/snippets"
    },
    "f59d7e40-1699-37ae-ba18-0716b4e2636d": {
      "content": "render json:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :json",
      "matches": {
        "rj": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f5a06a7b-388f-3435-aba1-04a8b5ab2f75": {
      "content": "unless (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5a78f70-3611-311d-87e4-6414e2b6755b": {
      "content": "<template v-slot:${0:name}>${1:defaultcontent}</template>",
      "doc": "named slot",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Slot",
      "matches": {
        "vslot-named": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "f5aca77c-8763-3a39-9941-cbfc30989c85": {
      "content": "func Benchmark${1:Method}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "benchmark": true
      },
      "source": "gosnippets/snippets"
    },
    "f5b78dd2-ae14-37e3-a459-52901b6e8488": {
      "content": "checked (${1:#:var}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "checked () {}",
      "matches": {
        "checked": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f5c2ed21-2df9-330f-ba16-189ea62d1c09": {
      "content": "read(${1:*},${2:*}) ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "read",
      "matches": {
        "read": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f5c339a6-b3eb-3376-973e-7feb55106eac": {
      "content": "switch (${1:switch_on})\n{\n\t${0}\n\tdefault:\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5db51c7-c674-3359-bce2-6b79cf2e336c": {
      "content": "getSnapshotBeforeUpdate(prevProps, prevState) {\n\t$0\n}\n",
      "doc": "Invoked right before the most recently rendered output is committed to e.g. the DOM. It enables your component to capture current values",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getSnapshotBeforeUpdate",
      "matches": {
        "gsbu": true
      },
      "source": "vscode-react/snippets"
    },
    "f5e45e43-d44e-381e-b90f-d139c32a0e38": {
      "content": "<h5 id=\"${1}\">${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5#": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5e8e732-9dfe-34f2-b0bf-df3a76a91c8f": {
      "content": "text-replace: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5ec43da-ea21-3f97-b2ce-cac2a30d858f": {
      "content": "text-emphasis: accent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5ed0232-2dd3-389d-9184-cdae833269b4": {
      "content": "class $1 extends StatefulWidget {\n\t@override\n\t_$1State createState() => _$1State();\n}\nclass _$1State extends State<$1>\n\t\twith SingleTickerProviderStateMixin {\n\tAnimationController _controller;\n\t@override\n\tvoid initState() {\n\t\tsuper.initState();\n\t\t_controller = AnimationController(vsync: this);\n\t}\n\t@override\n\tvoid dispose() {\n\t\tsuper.dispose();\n\t\t_controller.dispose();\n\t}\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stanim": true
      },
      "source": "vim-snippets/snippets"
    },
    "f5f45653-642a-30d2-8863-a256d2435d43": {
      "content": "loadVariables(${1:url}, ${2:level}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vn": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f60741a5-05ff-3fdd-9164-f13f1483a7e2": {
      "content": "} else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f6094061-00eb-3437-9df2-0e36de823e75": {
      "content": "import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n\treturn {\n\n\t};\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n)(${1:${TM_FILENAME_BASE}});",
      "doc": "Creates a React component class connected to redux",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactReduxComponent",
      "matches": {
        "rrc": true
      },
      "source": "vscode-react/snippets"
    },
    "f6117b65-9f0d-3b57-8c2f-1bf2e4c9b961": {
      "content": "def ${1:__init__}(self, *args, **kwargs):\n    super(${0:ClassName}, self).$1(*args, **kwargs)",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dol": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6192ac6-a464-3bc7-94f1-8bceae175c61": {
      "content": "${1:app}.get('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eget": true
      },
      "source": "snippets/javascript"
    },
    "f61d9d31-0aab-361e-94aa-9201d0cf1998": {
      "content": "BEGINFILE {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "BEGINFILE { ... }",
      "matches": {
        "begf": true
      },
      "source": "vim-snippets/snippets"
    },
    "f61f9e54-f0e7-3f19-947d-2d5812c4a2f2": {
      "content": "grid-auto-flow: dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6260aaa-5a51-3823-98f0-411fa1a7aa68": {
      "content": "it { should have_db_index :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishi": true
      },
      "source": "vim-snippets/snippets"
    },
    "f63d55e7-9efa-30e2-963c-504702275c63": {
      "content": "&#x2191;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "up": true
      },
      "source": "vim-snippets/snippets"
    },
    "f64cc0e7-eaf1-3bb1-b95c-af5c640b0f78": {
      "content": "\\\\left( ${0:${VISUAL}} \\\\right)",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left( right)",
      "matches": {
        "lr(": true
      },
      "source": "vim-snippets/snippets"
    },
    "f65a6971-297b-35f2-a675-9f02e587a9fe": {
      "content": "${1:FIELDNAME} = models.FileField(upload_to=${2:path/for/upload}${0:, max_length=100})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      },
      "source": "vim-snippets/snippets"
    },
    "f65daa2d-124f-3abf-ad90-71d149be3ddf": {
      "content": "border-style: dashed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      },
      "source": "vim-snippets/snippets"
    },
    "f666cfd9-87d4-3dc4-a499-969ea2896563": {
      "content": "main :: IO ()\nmain = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      },
      "source": "vim-snippets/snippets"
    },
    "f669a2f5-11b2-3f0a-965d-907bea4e83a9": {
      "content": "find(${1:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(id)",
      "matches": {
        "fini": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f66aba77-9e7c-3558-a3dc-3dacc7baa777": {
      "content": "@section('${1:section name}')\n    ${2}\n@endsection",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section ... @endsection",
      "matches": {
        "section": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f6700811-2a02-347d-8477-b3437fe75aeb": {
      "content": "| sort: '${1:key}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      },
      "source": "vim-snippets/snippets"
    },
    "f67b970c-cb7f-3401-99c7-b9db10a127e6": {
      "content": "assert_redirected_to ${1:parent}_${2:child}_path(${3:@$1}, ${0:@$2})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artnp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f67d4d1d-18e5-3bea-8fb0-b7327a7cbfda": {
      "content": "align-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      },
      "source": "vim-snippets/snippets"
    },
    "f67d5481-4e09-3b3b-a6aa-f4faff9ee006": {
      "content": "echo CHtml::error(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yherr": true
      },
      "source": "vim-snippets/snippets"
    },
    "f67e0e45-3a0f-3824-9d99-0d312adc7617": {
      "content": "_.pickBy(${object}, ${predicate})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pickBy(object, _.isNumber);\n// => { 'a': 1, 'c': 3 }\n\nCreates an object composed of the `object` properties `predicate` returns\ntruthy for. The predicate is invoked with two arguments: (value, key).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pickby",
      "matches": {
        "lodash pickby": true
      },
      "source": "javascript/lodash"
    },
    "f6893da9-f7a7-3748-94c6-423d00aaa261": {
      "content": "hasattr(${1:#:obj}, ${2:#:attr})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "hasattr(..., ...)",
      "matches": {
        "hasattr": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f6921add-28ef-30bb-8721-dc3650770f84": {
      "content": "_.conformsTo(${object}, ${source})",
      "doc": "var object = { 'a': 1, 'b': 2 };\n\n_.conformsTo(object, { 'b': function(n) { return n > 1; } });\n// => true\n\n_.conformsTo(object, { 'b': function(n) { return n > 2; } });\n// => false\n\nChecks if `object` conforms to `source` by invoking the predicate\nproperties of `source` with the corresponding property values of `object`.\n\n**Note:** This method is equivalent to `_.conforms` when `source` is\npartially applied.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-conformsto",
      "matches": {
        "lodash conformsto": true
      },
      "source": "javascript/lodash"
    },
    "f6928a50-9743-3d2a-8d8e-2f119be5fc12": {
      "content": "bind:@\"${2:#:binding}\" toObject:${3:observableController} withKeyPath:@\"${4:keyPath}\" options:${5:nil}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f69370dc-4f70-3c3f-be92-c11e56e78495": {
      "content": "{{ \"${1}\"|t }}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig translate",
      "matches": {
        "translate": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6959a64-240d-3d4c-b007-c274067f7f13": {
      "content": "extern crate ${0:TARGET};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate",
      "matches": {
        "ec": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f6a1bfd8-3739-3cbc-a1f7-c782c098fbf2": {
      "content": "${1:value_key}:\n  livenessProbe:\n\tfailureThreshold: 3\n\tinitialDelaySeconds: 10\n\tperiodSeconds: 10\n\tsuccessThreshold: 1\n\ttimeoutSeconds: 1\n\tport: 10254\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "livenessProbe_values": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6a1f369-e480-30ec-9f86-e9cc5c8d0ff6": {
      "content": "{#await ${1:promise}}\n\t${2: <!-- content when promise is pending -->}\n{:then ${3:value}}\n\t${4: <!-- content when promise was fulfilled -->}\n{:catch error}\n\t${5: <!-- content when promise was rejected -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-catch-block",
      "matches": {
        "svawait-catch": true,
        "svelte await catch": true
      },
      "source": "javascript/svelte"
    },
    "f6b032d3-57f7-300e-a1b7-d754868e554c": {
      "content": "refute ${1:test}, '${2:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6b9691d-0c48-3a69-98a8-15a1e76339a6": {
      "content": "<?php\n\tnamespace Models;\n\tuse Core\\Model;\n\tclass ${1:class_name} extends Model\n\t{\n\t\tprivate $${2:table};\n\t\tfunction __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\t\tpublic function getRow($where)\n\t\t{\n\t\t\treturn $this->db->select('SELECT * FROM '.$table.' WHERE ${3:where}', $data);\n\t\t}\n\t\tpublic function getRows($where)\n\t\t{\n\t\t\treturn $this->db->select('SELECT * FROM '.$table.');\n\t\t}\n\t\tpublic function insert($data)\n\t\t{\n\t\t\t$this->db->insert($table, $data);\n\t\t}\n\t\tpublic function update($data, $where)\n\t\t{\n\t\t\t$this->db->update($table ,$data, $where);\n\t\t}\n\t\tpublic function delete($where)\n\t\t{\n\t\t\t$this->db->delete($table, $where);\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_model_crud": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6c29207-4cfb-3123-97d4-b243c8f0ac8e": {
      "content": "background-origin: padding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6c876ce-6261-3bbd-9801-2369c07f26a6": {
      "content": "resize none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6eca6a2-3310-3d9b-a2f3-b2e7fe1f3341": {
      "content": "{foreach $${1:var} in ${2:ref}}\n\t$0\n{/foreach}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "foreach command",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f6f3622f-7119-3248-a58d-3a1c25804831": {
      "content": "'''''${1}'''''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "'''''": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f6f53be2-e26d-33fc-86a9-3f37ca63355d": {
      "content": "func Test${1:Function}(t *testing.T) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func TestXYZ(t *testing.T) { ... }",
      "matches": {
        "test": true
      },
      "source": "gosnippets/UltiSnips"
    },
    "f6f7c852-dc14-3163-98c3-2607178b203d": {
      "content": "border-collapse ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6f7f93d-9dee-3203-a2e3-14e719c18045": {
      "content": "vertical-align: top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "f6fa0e24-6eaf-3479-8367-070734a7e437": {
      "content": "${1:obj}.size()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      },
      "source": "snippets/javascript"
    },
    "f6fe03c6-52fe-3657-b6bf-4a625fb7eb01": {
      "content": "input(v-model=\"${1:data}\" type=\"text\")",
      "doc": "v-model directive",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-model Directive",
      "matches": {
        "vmodel": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "f702888f-07f3-3d5c-a528-e722cb778a6c": {
      "content": "font-weight: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-weight": true,
        "fw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f71a9a84-ac71-33eb-b596-15cc06dd1f98": {
      "content": "\\\\begin{eqnarray}\n\t${0:${VISUAL}}\n\\\\end{eqnarray}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "eqnarray environment",
      "matches": {
        "eqnarray": true
      },
      "source": "vim-snippets/snippets"
    },
    "f71d1194-151b-3857-82ec-656731174b53": {
      "content": "require('dotenv-safe').config({ encoding: '${1:latin1}' })",
      "doc": "You may specify the encoding of your file containing environment variables.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-encoding",
      "matches": {
        "dotenv-safe encoding": true
      },
      "source": "javascript/dotenv-safe"
    },
    "f72ed15c-59d4-39ed-ac43-4eecbdd27ab3": {
      "content": "${1:expression} unless ${2:condition};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xunless": true
      },
      "source": "vim-snippets/snippets"
    },
    "f73c4ccc-ade2-30c0-adbc-2da620a0176d": {
      "content": "for ${1:item} in ${2:items}:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      },
      "source": "vim-snippets/snippets"
    },
    "f73e8788-01ac-38a7-b73d-ecea0bef69f9": {
      "content": "test \"${1:something interesting}\" do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "test do..end",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f73f5b9d-bbe4-36ad-878b-bfc7812ac25d": {
      "content": "vertical-align: middle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      },
      "source": "vim-snippets/snippets"
    },
    "f740a0d8-0757-39e2-af24-d027bd028d02": {
      "content": "pipe(${1:stream})$2",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "pipe",
      "matches": {
        "pipe": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f74282e5-82f7-3785-943a-ac1d63e53b52": {
      "content": "${1:obj}.scrollLeft(${2:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrolll": true
      },
      "source": "snippets/javascript"
    },
    "f7447d07-0fb6-3333-9740-ce3d0909e63b": {
      "content": "to!int(${1:str});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toi": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7477e34-41e3-362f-a414-2c2a5098fef8": {
      "content": "(is (= ${1} ${0}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      },
      "source": "vim-snippets/snippets"
    },
    "f75578a3-bac9-371e-a582-db06b586cb6e": {
      "content": "return render_to_response('${1:template.html}', {\n\t\t${2}\n\t}${0:, context_instance=RequestContext(request)}\n)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r2r": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7593d22-6dbc-3666-b5d4-72ebd302ecaf": {
      "content": "${1:component}.$on(${2:eventname}, ${3:handler});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-on",
      "matches": {
        "svcomon": true,
        "svelte component on": true
      },
      "source": "javascript/svelte"
    },
    "f7597422-29fd-3e66-9f96-dbc0db9b802c": {
      "content": "$routeProvider.when '${1:url}',\n\ttemplateUrl: '${2:templateUrl}'\n\tcontroller: '${3:controller}'\n${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngrw": true
      },
      "source": "snippets/coffee"
    },
    "f75d1489-7047-317c-aa55-2e6774c6d2d8": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7603484-f2f0-3a5d-8c6a-7894ebc9a63c": {
      "content": "border-bottom-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7604ab0-260a-3b69-b3a1-ac0c6b9b3236": {
      "content": "reg [${1}:${2:0}] ${3:name} [${4:0}:${5}];${6:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "reg [] name []",
      "matches": {
        "regm": true,
        "regmemory": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f76730dc-50fd-34a1-a1f1-936b377b81a7": {
      "content": "${1:fn} : ${2:a}\n$1 =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      },
      "source": "vim-snippets/snippets"
    },
    "f768f498-b85e-367f-b103-95b053872b3d": {
      "content": "$this->input->user_agent();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-user_agent": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7768bfa-b3be-3ee9-9b64-72d1ee5ac595": {
      "content": "{ ${0:#statements} }",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      },
      "source": "vim-snippets/snippets"
    },
    "f77d84c9-6ece-3619-890b-fa9b74f5364c": {
      "content": "grid-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      },
      "source": "vim-snippets/snippets"
    },
    "f77eb13c-2e75-347b-987a-124814705b3d": {
      "content": "${${0:0}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${..}",
      "matches": {
        "$": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f784d9cb-9a7d-3eb9-b398-6312f5d61dcf": {
      "content": "sd(${1:x}${2:, na.rm=${3:FALSE}})",
      "doc": "Standard deviation",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sd",
      "matches": {
        "sd": true
      },
      "source": "vscode-R/snippets"
    },
    "f7891808-1f08-3d55-b596-8839dc545098": {
      "content": "const { head, html, css } = ${1:App}.render({\n\tprops: ${3:props},\n})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-render-component",
      "matches": {
        "svelte render component": true,
        "svrcom": true
      },
      "source": "javascript/svelte"
    },
    "f792e7b8-e41b-3895-8ed2-0ce6cba3250b": {
      "content": "font-style normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f797cbf4-579d-396e-8385-7f1f732a40cb": {
      "content": "${1:FIELDNAME} = models.DateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateField",
      "matches": {
        "mdate": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f79ca31b-1a58-32db-a3cb-b9e3b0297f45": {
      "content": "assert_includes ${1:collection}, ${2:object}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asi": true
      },
      "source": "vim-snippets/snippets"
    },
    "f79d7cd0-51b2-3479-9771-bb570ebe529f": {
      "content": "const ${1:store} = writable(${2:initialValue});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable",
      "matches": {
        "svelte writeable": true,
        "svw": true
      },
      "source": "javascript/svelte"
    },
    "f7a77519-e12b-3e13-a606-75e9c59eaa67": {
      "content": "<c:catch var=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ccatch": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7b00b00-c5dd-34fa-bbe3-d45c5b064355": {
      "content": "throw new ${1:Exception}(\"${2:Error Processing Request}\");",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "throw new Exception()",
      "matches": {
        "te": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7b61c37-e541-3e6e-90f6-b66ef720d73a": {
      "content": "{% while ${1:condition} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7c0ce8f-091e-376d-b693-8064463c25b4": {
      "content": "padding-left: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-left": true,
        "pl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f7c6b2b9-18fc-37b4-bd76-3c0b3ff434f7": {
      "content": "module ${1:(* Name *)} : ${2:(* SIG *)} = struct\n\t${3:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module with signature",
      "matches": {
        "Mod": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f7e61645-334e-3afe-b57c-aeeaea22bb00": {
      "content": "local ${1:x} = ${0:1}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "local": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7e8c4be-1bb6-37ba-b835-d80ea8b0b597": {
      "content": "${1:obj}.prepend('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      },
      "source": "snippets/coffee"
    },
    "f7f0e511-9f93-357d-bb1e-70705bfc5949": {
      "content": "grid-auto-rows auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7f20882-0dc2-366c-816c-20b63c249a23": {
      "content": "it \"${1}\" $ property $\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f7fdbf99-1dd6-3515-b94d-d8aa559125e0": {
      "content": "caption-side top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8018de2-dc76-3b85-93bd-5b23a3a472bd": {
      "content": "property? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw?": true
      },
      "source": "vim-snippets/snippets"
    },
    "f802eccb-b968-346b-a3c2-243e229101c9": {
      "content": "<article>\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8084a60-8efd-320f-b799-ab6ac212f208": {
      "content": "${1:expression} for @${2:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xfor": true
      },
      "source": "vim-snippets/snippets"
    },
    "f810db84-2bd8-3b39-8853-f65a4414ecd9": {
      "content": "expect(() => {\n\t$0\n}).toThrowErrorMatchingSnapshot();",
      "doc": "expects that the method will throw an error mathing the snapshpot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerrormatchingsnapshot",
      "matches": {
        "jest expect tothrowerrormatchingsnapshot": true,
        "ttems": true
      },
      "source": "javascript/jest"
    },
    "f810fabd-3212-3473-bd3e-171b14cb4f0c": {
      "content": "#ifdef ${1:#:SYMBOL}\n${0}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifdef ... #endif",
      "matches": {
        "#ifdef": true,
        "ifdef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f81494ae-bbfa-3543-8dde-f6a04f8ccb62": {
      "content": "checkEvents() {\n\tthis.router.events.subscribe(event => {\n\t\tswitch (true) {\n\t\t\tcase event instanceof ${1:eventName}:\n\t\t\t\t$0\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n}",
      "doc": "Angular Router Events",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-router-events",
      "matches": {
        "a-router-events": true,
        "angular router events": true
      },
      "source": "javascript/angular"
    },
    "f81a3f0c-8187-38b6-9c65-fa45184090e6": {
      "content": "import React, { Component } from 'react'\n\ninterface Props {\n\t\n}\ninterface State {\n\t\n}\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n\tstate = {}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with ES7 module system and TypeScript interfaces",
      "filetype": "ts-snippets",
      "grammar": "lsp",
      "label": "typeScriptReactClassComponent",
      "matches": {
        "tsrcc": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f81b584a-9e22-3fbb-8b81-0b6986eb80b5": {
      "content": "set ${1:property}(${2:value}) {\n\t${0}\n}",
      "doc": "setter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setter-es6-syntax-",
      "matches": {
        "base setter": true
      },
      "source": "javascript/base"
    },
    "f825eb75-d8d2-382d-891c-f811345c733c": {
      "content": "{% ${1} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8284b7b-a3aa-3062-a198-73b9cd22bc2f": {
      "content": "<meta name=\"viewport\" content=\"${1:width=device-width, initial-scale=1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaviewport": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f82e4920-9c49-32a0-964b-7054a14f721b": {
      "content": "_.isSymbol(${value})",
      "doc": "_.isSymbol(Symbol.iterator);\n// => true\n\n_.isSymbol('abc');\n// => false\n\nChecks if `value` is classified as a `Symbol` primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-issymbol",
      "matches": {
        "lodash issymbol": true
      },
      "source": "javascript/lodash"
    },
    "f831aff1-2f7d-346a-9cc3-df0d659f7d58": {
      "content": "attr_reader :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8388661-0aab-3d80-b4f5-0567f062a7da": {
      "content": "{\n\t\"type\": \"npm\",\n\t\"script\": \"${1:start}\",\n\t\"isBackground\": true,\n\t\"presentation\": {\n\t\t\"focus\": true,\n\t\t\"panel\": \"dedicated\"\n\t},\n\t\"group\": {\n\t\t\"kind\": \"build\",\n\t\t\"isDefault\": true\n\t},\n\t\"problemMatcher\": {\n\t\t\"owner\": \"typescript\",\n\t\t\"source\": \"ts\",\n\t\t\"applyTo\": \"closedDocuments\",\n\t\t\"fileLocation\": [\"relative\", \"\\${cwd\\}\"],\n\t\t\"pattern\": \"\\$tsc\",\n\t\t\"background\": {\n\t\t\t\"activeOnStart\": true,\n\t\t\t\"beginsPattern\": {\n\t\t\t\t\"regexp\": \"(.*?)\"\n\t\t\t},\n\t\t\t\"endsPattern\": {\n\t\t\t\t\"regexp\": \"Compiled |Failed to compile.\"\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create task to start Angular",
      "matches": {
        "a-task-start": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "f8390b58-77e2-3c1b-a409-30e2383598b2": {
      "content": "${1}.filter(${2:item} => {\n\t${0}\n});",
      "doc": "filter",
      "filetype": "base",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "base filter": true
      },
      "source": "javascript/base"
    },
    "f83b1974-f0aa-3ae7-aec1-e4a50f9083f5": {
      "content": "NSMutableArray *${1:array} = [NSMutableArray array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSArray (array)",
      "matches": {
        "array": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f847f093-1335-355c-a0e3-acbc3986d4c0": {
      "content": "integer, dimension(${1}), intent(in)  :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension intent(in)",
      "matches": {
        "indi": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f8598766-2da8-36a1-acc7-12fc96132673": {
      "content": "refute_includes ${1:collection}, ${2:object}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfi": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8757b75-aeaf-3765-9b20-5538101ebbea": {
      "content": "cattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "cattr_accessor",
      "matches": {
        "crw": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f87c8b6d-552c-34ab-9b36-84459eaac7bd": {
      "content": "grid-column: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      },
      "source": "vim-snippets/snippets"
    },
    "f887a4a7-d3be-3b98-b543-e3cd1f6179f4": {
      "content": "function(d) { ${1} }",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fd": true
      },
      "source": "vim-snippets/snippets"
    },
    "f88ced16-121d-3805-960c-7f8af07152a9": {
      "content": "// TODO: $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "TODO comment",
      "matches": {
        "todo": true
      },
      "source": "vim-snippets/snippets"
    },
    "f88e9a9f-09b7-3b6a-92c5-4e605c30ed57": {
      "content": "<%= link_to \"${1:Link text...}\", ${0:model}s_path %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lipp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f890f310-d91c-3a93-a9ae-cf7d7293e852": {
      "content": "@media ${1:condition} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media ...",
      "matches": {
        "media": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f89258e0-edee-3b65-8898-b214cb0d3130": {
      "content": "grid-template-columns: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8927d85-f374-39c1-b5dc-efec7cd0ab6b": {
      "content": "{% try %}\n  ${1:${VISUAL}}\n{% except %}\n  ${2}\n{% finallly %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8ac5120-987e-3042-9e59-215bfa401ac1": {
      "content": "<nav>\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8b040a5-011c-36f1-aca1-63d07d16417f": {
      "content": "do {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f8ba1014-1c9b-3859-b215-052ffb9ca58d": {
      "content": "-module(${0:module}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-module": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f8bc96f6-3f15-35d6-8964-5b3d719ce2fd": {
      "content": "<iframe src=\"${1}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8bd9665-8e86-309e-8b82-fbbc9926ae1d": {
      "content": "_.sortedLastIndex(${array}, ${value})",
      "doc": "_.sortedLastIndex([4, 5, 5, 5, 6], 5);\n// => 4\n\nThis method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindex",
      "matches": {
        "lodash sortedlastindex": true
      },
      "source": "javascript/lodash"
    },
    "f8c57b56-df95-3a82-9c04-f7aba3d4235c": {
      "content": "overflow-x: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8c9df3f-8248-30dd-8d53-87c8ade2f053": {
      "content": "SynthDef(\\\\${1:synthName}, {${2}\n\t${0}\n}).add;",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdef": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8caee0c-5871-370b-9be5-fc89c15a3e3b": {
      "content": "\\\\item ${1:${VISUAL}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\item",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8cc3bde-e4b1-3f79-a415-5d8ecd095be5": {
      "content": "v-else",
      "doc": "Does not expect expression. previous sibling element must have v-if or v-else-if.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-else",
      "matches": {
        "velse": true,
        "vue v-else": true
      },
      "source": "javascript/vue"
    },
    "f8d4f2e2-a57e-3133-a161-97c9e186ae86": {
      "content": "export const ${1:functionName} = (${2:params}) => {\n\t$0\n}\n",
      "doc": "Export named function in ES7 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportNamedFunction",
      "matches": {
        "enf": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "f8d71062-48e6-36e6-94e7-3b8822f4b1f1": {
      "content": "wont_be_nil",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbn": true
      },
      "source": "vim-snippets/snippets"
    },
    "f8ecf85c-f79d-3a3c-9ba7-c46de4c2f59a": {
      "content": "\\${2:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:TARGET}",
      "matches": {
        "2T": true,
        "2t": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f8f96e47-34eb-3153-b5a2-69374b40efe0": {
      "content": "_.cond(${pairs})",
      "doc": "var func = _.cond([\n  [_.matches({ 'a': 1 }),           _.constant('matches A')],\n  [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n  [_.stubTrue,                      _.constant('no match')]\n]);\n\nfunc({ 'a': 1, 'b': 2 });\n// => 'matches A'\n\nfunc({ 'a': 0, 'b': 1 });\n// => 'matches B'\n\nfunc({ 'a': '1', 'b': '2' });\n// => 'no match'\n\nCreates a function that iterates over `pairs` and invokes the corresponding\nfunction of the first predicate to return truthy. The predicate-function\npairs are invoked with the `this` binding and arguments of the created\nfunction.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-cond",
      "matches": {
        "lodash cond": true
      },
      "source": "javascript/lodash"
    },
    "f8fafd76-6938-32a5-b99c-8ae05de2765f": {
      "content": "import akka.actor.{ActorSystem, Actor, ActorLogging, Props}\nobject ${1:X} {\n\tdef props(${2}) = Props(new X($2))\n}\nclass $1($2) extends Actor with ActorLogging {\n\tdef receive = {\n\t\tcase e =>\n\t\t\t${0:TARGET:println(e)}\n\t}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "akka-actor": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f906a524-14a8-354f-b080-1f06b6b21b92": {
      "content": "_.invertBy(${object}, ${iteratee})",
      "doc": "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invertBy(object);\n// => { '1': ['a', 'c'], '2': ['b'] }\n\n_.invertBy(object, function(value) {\n  return 'group' + value;\n});\n// => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\nThis method is like `_.invert` except that the inverted object is generated\nfrom the results of running each element of `object` thru `iteratee`. The\ncorresponding inverted value of each inverted key is an array of keys\nresponsible for generating the inverted value. The iteratee is invoked\nwith one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invertby",
      "matches": {
        "lodash invertby": true
      },
      "source": "javascript/lodash"
    },
    "f90f28ba-3184-383e-9c7c-f59dc32ef99e": {
      "content": "outer(${1:X}, ${2:Y}, ${3:FUN = ${4:\"*\"}}, ${5:...})",
      "doc": "Outer",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "out",
      "matches": {
        "outer": true
      },
      "source": "vscode-R/snippets"
    },
    "f90fd168-50bf-3121-9d05-ae01b1f7cbe7": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:e}) {\n\t${2:/* handle error */}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "try { ... } catch(e) { ... }",
      "matches": {
        "try": true
      },
      "source": "snippets/javascript"
    },
    "f91ca732-bf88-3a97-bc2e-53dfe7a16c2f": {
      "content": "#warning ${0:#:message}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true,
        "warning": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f926213b-821c-3103-a5ef-3083baeeccfa": {
      "content": "it { should validate_presence_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvp": true
      },
      "source": "vim-snippets/snippets"
    },
    "f932780e-258c-38c0-a0de-1d2579bed172": {
      "content": "http.createServer(${1:handler}).listen(${2:port_number});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "http": true
      },
      "source": "snippets/javascript"
    },
    "f93313c3-8c2f-396e-a9d2-e3f035c9de56": {
      "content": "after_validation_on_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation_on_update",
      "matches": {
        "aftvou": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f93c8e9f-4de2-37bf-99ab-67b920fdd21d": {
      "content": "text-align-last ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      },
      "source": "vim-snippets/snippets"
    },
    "f954acc4-c0f5-3b54-ad6e-e74a85564f1c": {
      "content": "text-decoration: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9552534-cb19-389c-b29c-941e0fcc5f01": {
      "content": "${1:ModelName}::model()->findAll(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfinda": true
      },
      "source": "vim-snippets/snippets"
    },
    "f95a7007-6a60-3f66-837e-d3ce74e8283f": {
      "content": "private def ${1:method_name}${2:(${3:*args})}\n\t$0\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "private def <name>...",
      "matches": {
        "\"\\b(pde)?f\"": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f95aee90-0980-3022-a01f-0df5d744a2e4": {
      "content": "{@linkplain ${1:#:target} ${0:#:label}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{linkplain": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f95cb542-baa0-33c9-a1c3-379ae17e29ae": {
      "content": "expect(${1:target}).toBeTruthy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be truthy (coffee)",
      "matches": {
        "et": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f95e438e-8ed7-3376-b2cb-2bb721d5e90f": {
      "content": "hsl(${1:360}, ${2:100}%, ${3:100}%)$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color hsl",
      "matches": {
        "hsl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f9655f3d-b9dc-3d50-8ff4-8005ecb2f935": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "snippets/coffee"
    },
    "f9745b74-aacf-3265-9004-dd555611fc54": {
      "content": "type ${1:NewName} = $2;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Type alias",
      "matches": {
        "ty": true
      },
      "source": "vim-snippets/snippets"
    },
    "f975dee9-bddc-33c9-ba45-151ca8c75839": {
      "content": "case ${1:value}:\n\t${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case ...:",
      "matches": {
        "case": true
      },
      "source": "gosnippets/snippets"
    },
    "f9784224-8b01-3641-a7e7-b8d66c5fd115": {
      "content": "text-justify: inter-cluster",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9799ab0-7fa7-33d9-9a0f-d5b7e57e52c9": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      },
      "source": "vim-snippets/snippets"
    },
    "f97bfc30-ccae-337c-bb06-6cd1eeb3d4e6": {
      "content": "String",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      },
      "source": "vim-snippets/snippets"
    },
    "f985ea79-84d0-3af9-9ade-be5bc947aceb": {
      "content": "&#x21E5;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tab": true
      },
      "source": "vim-snippets/snippets"
    },
    "f98dd74a-594c-3299-9d9e-594fcf3a8453": {
      "content": "_.omitBy(${object}, ${predicate})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omitBy(object, _.isNumber);\n// => { 'b': '2' }\n\nThe opposite of `_.pickBy`; this method creates an object composed of\nthe own and inherited enumerable string keyed properties of `object` that\n`predicate` doesn't return truthy for. The predicate is invoked with two\narguments: (value, key).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-omitby",
      "matches": {
        "lodash omitby": true
      },
      "source": "javascript/lodash"
    },
    "f996f38f-4919-39cb-b32f-acf5813c680f": {
      "content": "import { mapState } from 'vuex';\n\nexport default {\n\tcomputed: {\n\t\t...mapState([\n\t\t\t${1:'nameOfState'},\n\t\t])\n\t},\n};",
      "doc": "map getters inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapState",
      "matches": {
        "vmapstate": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "f9976287-9fc4-312e-a8f0-00b6580ac091": {
      "content": "kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: {{ template \"$2.fullname\" . }}\n  labels:\n\tchart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n\trelease: \"{{ .Release.Name }}\"\n\theritage: \"{{ .Release.Service }}\"\n\tapp: {{ template \"${2:chartName}.fullname\" . }}\nspec:\n  accessModes:\n\t- {{ .Values.persistence.accessMode | quote }}\n  resources:\n\trequests:\n\t  storage: {{ .Values.persistence.size | quote }}\n{{- if .Values.persistence.storageClass }}\n{{- if (eq \"-\" .Values.persistence.storageClass) }}\n  storageClassName: \"\"\n{{- else }}\n  storageClassName: \"{{ .Values.persistence.storageClass }}\"\n{{- end }}\n{{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pvc_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "f99afdea-9b16-3b55-aa3c-5693e81b6734": {
      "content": "{% endembed %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endembed",
      "matches": {
        "endembed": true
      },
      "source": "vim-snippets/snippets"
    },
    "f99b0213-d1d9-3489-9f85-69a0ed35699a": {
      "content": "do |${1:v}|\n\t${2}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dov": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9a2ac45-238c-3f6d-8043-1a6a50bd4114": {
      "content": "cattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crw": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9a7580e-f81a-35f1-9d70-19f9744f9e45": {
      "content": "import ${1:Img} from 'gatsby-image';",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-import",
      "matches": {
        "gatsby-image import": true
      },
      "source": "javascript/gatsby-image"
    },
    "f9a8fee5-1ca2-3b88-bcea-4ee87b917f70": {
      "content": "| map: '${1:key}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9abe767-d785-3a2b-912a-281a0205cb10": {
      "content": "else if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "else if ...",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9ae6612-823e-305e-b738-54a1a805b1a2": {
      "content": "subscript(${1:index: Int}) -> ${2:Int} {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subscript": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f9b54943-50e8-304f-b4f6-49467076c23d": {
      "content": "| uniq",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9c45bdb-f7c9-3f51-a625-b845da88793c": {
      "content": "background-break: continuous",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9caad9f-842a-3b45-b686-5e64eaf02867": {
      "content": "assert_response :${1:success}, @response.body",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asre": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9ccb5bd-a1cb-34cf-a754-3b2519c5902a": {
      "content": "gem '${1:paperclip}', git: \"${2:git://github.com/thoughtbot/paperclip.git}\"${3:, branch: \"${4:rails3}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "gem :git",
      "matches": {
        "gemg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "f9d015aa-27e1-3d37-9e32-70489b64996c": {
      "content": "#if ${1:SYMBOL}\n    ${0:TARGET}\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f9d2fccc-5b9b-3dbf-922d-647ac3102c11": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f9d43c4c-b003-3b53-9ac7-154ac8182121": {
      "content": ".. attention::\n\t${0:hey!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "att:": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9d59d6b-d2c7-3cc3-b3e9-afbdacffa8ee": {
      "content": "{% endswitch %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endswitch",
      "matches": {
        "endswitch": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9d71eab-9a94-3c60-906e-b72648b69847": {
      "content": "justify-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9d8ebde-4abc-3fd5-9d12-1b061b43d2ed": {
      "content": "\\frac{${1}}{${2}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\frac": true,
        "frac \\frac{": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "f9df7309-ca70-3910-93f5-81102049e5b4": {
      "content": "if (${1:true}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9e4de55-5ac2-34d1-88dd-807bd319a9f7": {
      "content": "imagePullPolicy: ${1:imagePullPolicy}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imagePullPolicy_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9e9fa31-2e32-3bfa-a7a8-572aa9f874fb": {
      "content": "${1:obj}.serialize()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serialize": true
      },
      "source": "snippets/javascript"
    },
    "f9ec6f0b-1a97-3a71-9745-fd7ca86e35e4": {
      "content": "<th>${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9ef67d6-9c0b-3f8d-8961-0b92b49a2f9f": {
      "content": "limit: ${1:5}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "limit": true
      },
      "source": "vim-snippets/snippets"
    },
    "f9f46df5-175f-3937-946a-8f2ed383875e": {
      "content": "Element Should Be Visible    ${${1:locator}}    ${2:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Visible",
      "matches": {
        "esbv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa13e636-4792-35c5-ab52-a171bc2cbfa6": {
      "content": "{% block ${1:name} %}\n\t\t$2\n{% endblock $1 %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "block",
      "matches": {
        "block": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa1564c3-5ed2-3848-a091-83bc6d1d9b3d": {
      "content": "Mouse Up    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Up",
      "matches": {
        "mu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa1c72a5-b0d7-3ab7-9a15-78a2591e99aa": {
      "content": "if $1 then\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa1d0aab-ceb4-3239-bc07-13d033ff25c1": {
      "content": "${0:name}.map (a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapf": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa23a1b0-7c39-3b08-9112-80933d9947dc": {
      "content": "border-fit: clip",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa259ef0-c5cd-32b8-8f11-1cbabee288a0": {
      "content": "_.startsWith(${string}, ${target}, ${position})",
      "doc": "_.startsWith('abc', 'a');\n// => true\n\n_.startsWith('abc', 'b');\n// => false\n\n_.startsWith('abc', 'b', 1);\n// => true\n\nChecks if `string` starts with the given target string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-startswith",
      "matches": {
        "lodash startswith": true
      },
      "source": "javascript/lodash"
    },
    "fa26783d-7171-34ae-a76a-95a12a2f19aa": {
      "content": "[(ngModel)]=\"${1:binding}\"",
      "doc": "Angular ngModel",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngmodel",
      "matches": {
        "a-ngmodel": true,
        "angular ng model": true
      },
      "source": "javascript/angular"
    },
    "fa286945-065e-3588-aab3-3c36a65bb64a": {
      "content": "{% now \"${0:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa2bea2b-e8f4-3319-ba74-71404bb1e9c4": {
      "content": "\\$\\{VISUAL${1:${2:default}${3:/transform/}}\\}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "${VISUAL}",
      "matches": {
        "vis": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa2c12cb-6b8b-3470-b6a9-170c97973241": {
      "content": "${1} Send ${2} to ${1}, if ${1} supports it}${3}\nif ([${1:self} respondsToSelector:@selector(${2:someSelector:})])\n{\n    [${1} ${3}];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "res": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fa2fe5bd-dcab-3ff8-811f-e0edb6a962ad": {
      "content": "{% filter ${1:filter} %}\n\t$2\n{% endfilter %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "filter",
      "matches": {
        "filter": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa3718f7-11ad-3fb4-8e69-7da2027925ba": {
      "content": "\\supercite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\supercite": true,
        "supercite": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fa37fffa-9072-349e-8db1-4ab18cdccfc7": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-pure-component-proptypes",
      "matches": {
        "react component class pure with proptypes": true,
        "rpcp": true
      },
      "source": "javascript/react"
    },
    "fa4c4751-0abf-3af1-ae93-7f95715a590d": {
      "content": "render partial: '${0:item}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa5a523f-c1ab-31ca-b3a0-877e484ca5ba": {
      "content": "TESTS = ${1:10_000}\nBenchmark.bmbm do |results|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bm-": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa647d74-9d30-3897-9325-e1429d38a5a3": {
      "content": "elements.each('${1://Xpath}') do |${2:node}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xpa": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa68ae93-c3e8-33d0-a7f0-8ddde1ff29bc": {
      "content": "display alert \"${1:#:alert text}\"\n\t${2:#:message} \"${3:#:message text}\"\n\t${4:#:as warning}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fa691bd2-60cb-33ea-9edf-d903414bf966": {
      "content": "_.extend(${object}, ${sources})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assignIn({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\nThis method is like `_.assign` except that it iterates over own and\ninherited source properties.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-extend",
      "matches": {
        "lodash extend": true
      },
      "source": "javascript/lodash"
    },
    "fa6bc904-c6e8-3e7a-a3f8-ea643252cfeb": {
      "content": "<pre>\n\t${0}\n</pre>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa6e71ef-20e7-3915-954a-fe5952c0cb4b": {
      "content": "spyOn(${1:object}, \"${2:method}\").andCallFake(${3:function})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and call fake (coffee)",
      "matches": {
        "scf": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fa807b3d-7b8c-3626-9638-0836de1f9948": {
      "content": "font-size-adjust ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      },
      "source": "vim-snippets/snippets"
    },
    "fa875555-6e6f-39ab-958e-a0a719d36a4d": {
      "content": "subject { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subj": true
      },
      "source": "vim-snippets/snippets"
    },
    "faa4483e-0dba-361b-a40d-6c6a34a468cc": {
      "content": "do for ${1:#:iter} {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "do for <iter> {...}",
      "matches": {
        "do": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "faa68bf9-bb65-3009-8e20-56f80a9d1fe6": {
      "content": "ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      },
      "source": "vim-snippets/snippets"
    },
    "faa76ab5-8c00-31df-a0cf-116ceedee677": {
      "content": "{% import \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "import": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "faa882f6-090a-3e16-80e7-2fa6071a0261": {
      "content": "map(&:${0:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mp": true
      },
      "source": "vim-snippets/snippets"
    },
    "faac04c4-fd52-3bae-a020-bbd22abfce28": {
      "content": "ports:\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ports_spec": true
      },
      "source": "vim-snippets/snippets"
    },
    "fab56a54-d067-3cbb-9e3d-8e13bc867a24": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassPureComponentWithPropTypes",
      "matches": {
        "rpcp": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "fab8e5a7-33d8-30d3-9847-af8287602354": {
      "content": "console.info(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci": true,
        "console-info": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fabb1d56-de3a-30db-a38d-4aff196fb273": {
      "content": "\\filldraw[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\filldraw": true,
        "filldraw": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fac4d392-694c-3f5a-b8de-7bf80104fade": {
      "content": "import { createStore } from 'redux';",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      },
      "source": "snippets/javascript"
    },
    "fad614cc-0d38-3c6c-8dbb-eac5f1d9eb57": {
      "content": "nf(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nf": true
      },
      "source": "vim-snippets/snippets"
    },
    "fae2dd57-24ed-3120-b1a3-78c09c83c7c9": {
      "content": "write(unit = ${1:fp}, file = ${2:filename}, iostat = ${3:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "write": true
      },
      "source": "vim-snippets/snippets"
    },
    "faec49c0-ed31-38d4-b51b-92bb31acb143": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      },
      "source": "vim-snippets/snippets"
    },
    "faf50efd-e9a6-31bf-9b33-24b40b7360e3": {
      "content": "border-top ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      },
      "source": "vim-snippets/snippets"
    },
    "fafe6f19-72fc-333e-9452-3dbd2a7ae61e": {
      "content": "it { should_not ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isn": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb044fdc-15a0-308f-8ae5-20a73db043ad": {
      "content": "case ${1} do\n  ${2} -> ${3}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "case .. end",
      "matches": {
        "case": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fb0483e3-29ee-3e7d-be8e-d0e62d42dc60": {
      "content": "<code>${0:#:content}</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<code></code>",
      "matches": {
        "code": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fb054b40-7252-339c-9df4-f341599f21a0": {
      "content": "margin-top: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb0d9283-d294-32cc-a869-7d90ff1a5f36": {
      "content": "flex-direction: row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:r": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb188be4-07fa-3f15-8456-7522d4b67130": {
      "content": "_.noop()",
      "doc": "_.times(2, _.noop);\n// => [undefined, undefined]\n\nThis method returns `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-noop",
      "matches": {
        "lodash noop": true
      },
      "source": "javascript/lodash"
    },
    "fb1e6ce0-399d-3e2a-b8f1-d0757a0cfc41": {
      "content": "font-weight: lighter;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb1f6565-3d6e-3d33-92fe-c4c6528ab2c9": {
      "content": "foreach (${3:var} ${2:item} in ${1:items})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "foreach loop",
      "matches": {
        "foreach": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fb2b7ba2-434f-311c-a54b-11b56cf5ddc4": {
      "content": "border-left: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb2f6741-7cfc-39ce-9d4c-6998c9c2b764": {
      "content": "{\n\t\"type\": \"color\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_color": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb370c6f-90cd-3f77-9909-2c489ae99836": {
      "content": "synchronized ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb461261-91a2-3031-bd10-3425f9b3128e": {
      "content": "${1:obj}.hide('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      },
      "source": "snippets/coffee"
    },
    "fb491f6a-a84d-38cb-a422-7c14809979b2": {
      "content": "_.findLast(${collection}, ${predicate}, ${fromIndex})",
      "doc": "_.findLast([1, 2, 3, 4], function(n) {\n  return n % 2 == 1;\n});\n// => 3\n\nThis method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlast",
      "matches": {
        "lodash findlast": true
      },
      "source": "javascript/lodash"
    },
    "fb527047-8408-3fad-a669-409f9f60f489": {
      "content": "for ${1:item} in ${2:list}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb57d0ce-0064-30df-a696-d410dcda3261": {
      "content": "$.isFunction(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfunc": true
      },
      "source": "snippets/javascript"
    },
    "fb58691d-b0f1-3fde-8c2c-914a085bb99b": {
      "content": "white-space-collapse loose",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb5daa5d-256f-33a5-bf41-230e36c59f36": {
      "content": "class ${1:Class} a where\n\t${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb5f2288-d7f7-3f28-a45b-fe976f21eed2": {
      "content": "#!/usr/bin/env python2\n# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!2": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb67df98-7c94-340a-9011-b0b86df99045": {
      "content": "import { ${1:MEMBERS} } from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import { member, ... } from \"module-name\";",
      "matches": {
        "import": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fb6eab92-47e5-32a8-b230-a6827b816179": {
      "content": "object\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "obj",
      "matches": {
        "obj": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fb8a7b96-19f9-36ab-9850-cf97f9c2e5b4": {
      "content": "border-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb94e37b-1ff6-35c3-a942-1697c779d660": {
      "content": "while ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      },
      "source": "vim-snippets/snippets"
    },
    "fb97d7d8-cb90-300e-b917-433696d490e1": {
      "content": "{ path: '**', component: ${1:PathNotFoundComponent} },$0",
      "doc": "Angular 404 route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular 404 Route Path",
      "matches": {
        "a-route-path-404": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "fb9dc53c-3dab-3114-aa7a-4ae8abb7488e": {
      "content": "apply(${1:X}, ${2:MARGIN}, ${3:FUN}, ${4:...})",
      "doc": "Apply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "app",
      "matches": {
        "apply": true
      },
      "source": "vscode-R/snippets"
    },
    "fba765ed-dc98-34e1-99b5-3218ebbb91c1": {
      "content": "expect(${1:target}).not.toHaveAttr('${2:attr}'${3:, '${4:value}'});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not have attribute (js)",
      "matches": {
        "notha": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbadfae7-76ad-3d5d-9bca-3eaecf9161c6": {
      "content": "font-stretch ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbb41310-7396-3b90-bf82-0bd1856ef7d1": {
      "content": "if (${1})\n\t${2:${VISUAL}}\nelse if (${3})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelif": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbc8ab8d-424f-3a9d-82f7-356d12d532d9": {
      "content": "${1:FIELDNAME} = models.BinaryField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binary": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbc90555-8f02-33a0-b0b9-5b43ccc4dae6": {
      "content": "<exception cref=\"${1:#:class}\">${2:#:description}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<exception cref=\"\"></exception>",
      "matches": {
        "exception": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fbd101b6-8d96-3bc1-b573-f295171b1bb7": {
      "content": "include '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbe492a1-441a-381b-844f-4782704da6bb": {
      "content": "execute ${1}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exe": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbf0cab3-858c-3fc5-a16f-c762d8bff410": {
      "content": "let ${1:TARGET} in ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let..in",
      "matches": {
        "let": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fbf46008-f56f-3c84-81d4-9fab1e0f7d65": {
      "content": "yup.lazy()",
      "doc": "yup.lazy((value: any) => Schema): Lazy\n\nCreates a schema that is evaluated at validation/cast time. Useful for creating\nrecursive schema like Trees, for polymorphic fields and arrays.CAUTION! When defining parent-child recursive object schema, you want to reset the default()\nto undefined on the child otherwise the object will infinitely nest itself when you cast it!.let node = object({\n  id: number(),\n  child: yup.lazy(() => node.default(undefined))\n});\n\nlet renderable = yup.lazy(value => {\n  switch (typeof value) {\n    case \"number\":\n      return number();\n    case \"string\":\n      return string();\n    default:\n      return mixed();\n  }\n});\n\nlet renderables = array().of(renderable);\n",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-lazy",
      "matches": {
        "yup lazy": true
      },
      "source": "javascript/yup"
    },
    "fbf56de2-93c9-321e-abff-72b80bd9eddc": {
      "content": "list-style-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "fbf6e7de-2845-323f-bbf4-1fbc9f4d3341": {
      "content": "Options ${1:#:All} ${2:#:ExecCGI} ${3:#:FollowSymLinks} ${4:#:Includes} ${5:#:IncludesNOEXEC} ${6:#:Indexes} ${7:#:MultiViews} ${8:#:SymLinksIfOwnerMatch}",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fbf8ed23-fdca-3f2a-a596-3fc15e806c9a": {
      "content": "NO-UNDO",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nu": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc077262-5f85-339b-8f64-fd31457685b5": {
      "content": "${1:#:class_name}.prototype.${2:#:method_name} = function(${3:#:first_argument}) {\n  ${0:TARGET}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proto": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fc0f0e75-d2dc-386b-9a06-30c609e97f30": {
      "content": ":${1:tag}:${3}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": ":tag1:tag2:",
      "matches": {
        "tag": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fc11fdbf-4d69-3852-9388-da9060aa941b": {
      "content": "$this->db->get(\"${1:table}\", ${2:limit}, ${3:offset});${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-get": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc14a26c-ee42-3fa1-aa83-e446f5cef596": {
      "content": "@appear-cancelled=\"$1\"$0",
      "doc": "@appear-cancelled=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-cancelled",
      "matches": {
        "appearcancelledevent": true,
        "vue appear-cancelled": true
      },
      "source": "javascript/vue"
    },
    "fc15014f-4bce-30a0-81f4-00f0beca226a": {
      "content": "#include <${1:iostream}>",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "incc": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc1880c1-d937-37d4-9674-b54f72da95f4": {
      "content": "padding-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc1c2659-abf6-3862-8be0-4d21e919002e": {
      "content": "logger.fatal { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logf": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc260144-e819-312b-bd72-f1b62de869e6": {
      "content": "${1:attribute}=\"${0:property}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc2781ea-9407-36dd-9ae6-a5743996af78": {
      "content": "${1:obj}.slideToggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stoggle": true
      },
      "source": "snippets/coffee"
    },
    "fc2aa5b0-d1c1-3798-a8a4-abff66d6d7ef": {
      "content": "{%- if ${1:condition} -%}\n\t${0:${VISUAL}}\n{%- endif -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if-": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc303b25-fc80-3d1d-932c-063565ac5d42": {
      "content": "render xml: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rxml": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc3244c4-0e56-3a63-8e05-ba3003afedfd": {
      "content": "text-justify inter-word",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc33c05a-b80e-3ddd-9ab2-addb6dc8a97e": {
      "content": "${1:FIELDNAME} = models.CharField($2, max_length=${3:50})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CharField",
      "matches": {
        "mchar": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fc34710e-83f1-3a9b-958f-38473df88ecc": {
      "content": "@show",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@show directive",
      "matches": {
        "show": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fc35923f-1eb1-3b1f-8694-fdaa5b4bcd85": {
      "content": "notice(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "notice": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc44c64e-89c0-37b2-b539-ad68fa1e0435": {
      "content": "sort_by { rand }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ran": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc4c81aa-c50d-30d7-a05b-4483264392b3": {
      "content": "import { mapMutations } from 'vuex'\n\nexport default {\n\tmethods: {\n\t\t...mapMutations([\n\t\t\t${1:'nameOfMutation'}, //also supports payload `this.nameOfMutation(amount)` \n\t\t])\n\t},\n}",
      "doc": "mapmutations inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapmutations",
      "matches": {
        "vmapmutations": true,
        "vue mapmutations": true
      },
      "source": "javascript/vue"
    },
    "fc4cb86b-ee1c-326d-95bc-7db113ab8e7a": {
      "content": "template<typename ${1:T}> ${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "template <T>",
      "matches": {
        "template": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fc50f00d-ce4c-3325-8ce7-555dad064c11": {
      "content": "radians(${0:deg});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "radians": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc532aac-5bcb-3db7-8aeb-f90901dcb12f": {
      "content": "grid-column-start ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc5505cc-4c19-35ee-b551-4aeb9aa829e0": {
      "content": "create or replace package ${1:name}\nas\n\t${0:-- spec}\nend; -- end of package spec $1",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc5dedd8-c2ef-39bf-8dd8-a822a4b1676f": {
      "content": "has_one :${1:object}, dependent: :${0:destroy}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hod": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc63358c-a413-3a35-a907-500f44293d25": {
      "content": "Run Keyword    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword",
      "matches": {
        "rk": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fc86986f-f22d-3cfd-82d9-e4cd465f70fe": {
      "content": "grid ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc86d98d-9d27-306d-b258-23a273d89833": {
      "content": "int choice = NSRunAlertPanel(@\"${1:Something important!}\", @\"${2:Something important just happend, and now I need to ask you, do you want to continue?}\", @\"${3:Continue}\", @\"${4:Cancel}\", nil);\nif(choice == NSAlertDefaultReturn) // \"${3:Continue}\"\n{\n\t${0};\n}\nelse if(choice == NSAlertAlternateReturn) // \"${4:Cancel}\"\n{\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fc8f1214-ad95-3486-a461-2cf46844cf1b": {
      "content": "extends ${0:what}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc94afbb-fa14-3d51-a4ed-57f36b65cd65": {
      "content": "float32",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float",
      "matches": {
        "fl": true
      },
      "source": "vim-snippets/snippets"
    },
    "fc981986-03c7-3f67-baef-b787d1af24b3": {
      "content": "_.kebabCase(${string})",
      "doc": "_.kebabCase('Foo Bar');\n// => 'foo-bar'\n\n_.kebabCase('fooBar');\n// => 'foo-bar'\n\n_.kebabCase('__FOO_BAR__');\n// => 'foo-bar'\n\nConverts `string` to\n[kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-kebabcase",
      "matches": {
        "lodash kebabcase": true
      },
      "source": "javascript/lodash"
    },
    "fca57d78-e7f2-34fd-82c7-f5ac480ae9c9": {
      "content": "[| ${0:TARGET} |]",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "array literal [| |]",
      "matches": {
        "arl": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fcb2332b-85ad-3d92-b294-0f49c4df8292": {
      "content": "v-pre",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-pre",
      "matches": {
        "vpre": true,
        "vue v-pre": true
      },
      "source": "javascript/vue"
    },
    "fcbce524-6e9f-3634-b490-6cdff542ffda": {
      "content": "${1:obj}.each(function (index) {\n\t${0:this.innerHTML = this + \" is the element, \" + index + \" is the position\";}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      },
      "source": "snippets/javascript"
    },
    "fcc1ddcc-9db3-3725-8d0a-69e8bf68a120": {
      "content": "#[ignore]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[ignore]",
      "matches": {
        "ig": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcc41901-9f21-3520-a9d5-c02377e9a075": {
      "content": "display table-row-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcc7675a-465a-3931-b74e-c1deea486f88": {
      "content": "if(${1:/*condition*/})\n{\n\t$2\n}\nelse\n{\n\t${3:/*else*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "if .. else (ife)",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fccf4f3e-ddea-3fac-90ff-a1fb7bcad4e2": {
      "content": "length_is:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcd20a0c-2c2b-3dff-9fe9-22aed5f54b04": {
      "content": "{call ${1:tmpl}}\n\t$0\n{/call}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "template call",
      "matches": {
        "call": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fcd5390b-7fb0-3b3d-a408-51e3fbd39a79": {
      "content": "<h6>${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcd55139-d9bf-32d9-8912-a4530cbb201e": {
      "content": "{% ifchanged %}${1}{% endifchanged %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcda17ee-3793-3c75-aea2-d6b5d7d62b3b": {
      "content": "- (${1:id})${2:method};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md": true
      },
      "source": "vim-snippets/snippets"
    },
    "fcdd3211-7581-3c96-ade3-f123700915de": {
      "content": "\\left${1:(} ${3:#:body} \\right${2:)}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\left \\right",
      "matches": {
        "\\left": true,
        "left": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fce0e050-c305-3e0f-b3f0-133ba810cf7a": {
      "content": "const [${1:isPresent}, ${2:safeToRemove}] = usePresence()",
      "doc": "usePresence()\nIf isPresent is false, it means that a component has been removed the tree, but AnimatePresence won't really remove it until safeToRemove has been called.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-presence",
      "matches": {
        "framer-motion use-presence": true,
        "use-presence": true
      },
      "source": "javascript/framer-motion"
    },
    "fcf33dec-06c7-37ab-b658-9047ead6d778": {
      "content": "Run Keyword And Expect Error    ${1:My error}    ${2:${kw}}    ${3:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Expect Error",
      "matches": {
        "rkaee": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fcfe2c6d-f830-3383-84d5-2d54a7abe538": {
      "content": "System.out.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd02a2d2-883b-3bba-b177-5899780abff4": {
      "content": "@empty(${1})\n    ${2}\n@endempty",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@empty ... @endempty",
      "matches": {
        "empty": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fd031432-dab0-398a-a76f-67cbfa1196e7": {
      "content": "clear: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd09d9b0-d195-363c-a2e4-18bdd20e32ce": {
      "content": "page-break-inside: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd0e75ee-ab73-3fc3-be30-5274e5baa799": {
      "content": "def get_context_data(self, **kwargs):\n\tkwargs['extra_context'] = ${1:'New Value'}\n\treturn super(${2:CLASS_NAME}, self).get_context_data(**kwargs)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "get_context_data view method",
      "matches": {
        "context": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd12996a-0d73-3060-88f8-ff60013c2f81": {
      "content": "${1:obj}.css('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      },
      "source": "snippets/coffee"
    },
    "fd185543-c124-3238-9de0-259551e74380": {
      "content": "border-top-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd1a678f-afaf-3cf8-9563-e369982f8a90": {
      "content": "assertNull(\"${1:Failure message}\", ${2:object});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "an": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd1e5452-17d3-3dfe-b68b-14d82a979184": {
      "content": "t.Run(\"${0}\", func(t *testing.T){\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "t.Run(\"test name\", func(t *testing.T){ ... })",
      "matches": {
        "tr": true
      },
      "source": "gosnippets/snippets"
    },
    "fd1f9b8b-7607-3f7c-9669-10078aecace5": {
      "content": ".. code-block:: ${1:python}\n\t${1:#:TERGET}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "syntax",
      "matches": {
        "syntax": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fd244d8a-79d8-3a45-9bde-10c71535d4cd": {
      "content": "${1:FIELDNAME} = forms.ImageField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ImageField",
      "matches": {
        "fimg": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd2c7e82-09f4-33f7-9ba2-c27d8e5d7070": {
      "content": "{% set ${1:x} = ${0:y} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd2f44fc-2238-38ee-98a8-c8de809ee21e": {
      "content": "resize: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd3bac27-07d8-3d03-9c1d-f8643f3cc5a6": {
      "content": "$_SESSION['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "session",
      "matches": {
        "session": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd3f840e-e7e4-3cb8-a94a-c5c4d8b7516a": {
      "content": "${1:obj}.outerHeight()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerh": true
      },
      "source": "snippets/javascript"
    },
    "fd459d55-3c3b-384f-83f3-762881b80910": {
      "content": "after_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_update",
      "matches": {
        "aftu": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd48dc48-4a1c-30fb-be53-37acb37873a0": {
      "content": "protected",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pro": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd4e9baf-a749-32e1-a923-d4593ef7538d": {
      "content": "from pudb.remote import set_trace\nset_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pudbr": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd539bd0-40b5-353c-8c4e-e90ac93aff3f": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd541d8d-19c3-3dd1-ab6f-47f9d8508e63": {
      "content": "/*! \\enum $2\n *\n *  ${4:Detailed description}\n */\ntypedef enum {\n\t${1:Data} /*!< ${3:Description} */\n} ${2:foo};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tde": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd568905-a048-38e0-baf7-05d5ccc871ce": {
      "content": "t.integer :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tci": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd5cebca-2590-3069-ab27-5103efc8a33f": {
      "content": "list-style-position: outside",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd5fca19-5968-38eb-8b8e-7a0a8e7f1957": {
      "content": "declare(strict_types=${1:1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "declare(strict_types=1)",
      "matches": {
        "dst": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd66b80e-e8bd-3bc9-a19d-c7281e04134c": {
      "content": "{% ifnotequal $1 $2 %}\n\t$3\n{% endifnotequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd66dc83-0a34-3b51-8874-cfef2908aec2": {
      "content": "<body>\n\t${0}\n</body>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "body": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd6ba9c2-031c-34b5-a11e-14b758110b74": {
      "content": "logger.debug",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.debug",
      "matches": {
        "logd": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fd75bcb6-7842-33ce-9532-6504e8fca134": {
      "content": "private ${1:int} ${2:_myProperty};\n\npublic $1 ${3:MyProperty}\n{\n\tget { return $2; }\n\tset { $2 = value; }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Full property declaration",
      "matches": {
        "propfull": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd8192d6-3970-34fc-9b34-1d90e14c1be6": {
      "content": "<script context=\"module\">\n\t${1:// your script goes here}\n</script>",
      "doc": "add a script with context=\"module\" to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-context",
      "matches": {
        "svelte script context": true,
        "svscriptc": true
      },
      "source": "javascript/svelte"
    },
    "fd829ba6-2aa3-3179-9348-c5562fd2b758": {
      "content": "${1:promise}.catch((${2:err}) => {\n\t${0}\n})",
      "doc": "Promise.catch",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-catch",
      "matches": {
        "base promise catch": true
      },
      "source": "javascript/base"
    },
    "fd8908c7-94a8-3c3e-8541-070b4018fc4a": {
      "content": "else\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "fd8a5d0b-c31b-3e48-b546-de64ebac88c4": {
      "content": "map(&:${1:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map(&:sym_proc)",
      "matches": {
        "mp": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fd8e361f-bcb3-38a3-a555-3ac4f73091e1": {
      "content": "if ${1:TARGET}\nthen ${2}\nelse ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "if..then..else",
      "matches": {
        "If": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fd94f57c-17ad-3513-9427-c754bc77fd81": {
      "content": "function (${1:arguments}) {\n\t${0}\n}",
      "doc": "anonymous function",
      "filetype": "base",
      "grammar": "lsp",
      "label": "anonymous-function",
      "matches": {
        "base function anonymous": true
      },
      "source": "javascript/base"
    },
    "fd9541ce-a9f0-33cd-b0c7-ab5349b683ce": {
      "content": "function ${1:${TM_FILENAME_BASE}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React 17 Functional Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactFunctionalExportComponent",
      "matches": {
        "_rfce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "fd95c900-74ec-3b76-8cbc-fecf5e72a747": {
      "content": "do |${1:#:var}|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "do |var| ... end",
      "matches": {
        "dovar": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fd98fb90-12d1-3860-830f-8b26fae7ec0b": {
      "content": "${1:FIELDNAME} = models.FilePathField(path=${2:\"/abs/path/to/dir\"}${3:, max_length=100}${4:, match=\"*.ext\"}${5:, recursive=True}${0:, blank=True, })",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filepath": true
      },
      "source": "vim-snippets/snippets"
    },
    "fda6e243-673a-3cfa-9a9a-3cdbcdf920b1": {
      "content": "display: inline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdb8058d-e8e0-3977-b02b-33f3993d430e": {
      "content": "else if ${1}\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "else if part of if statement",
      "matches": {
        "eif": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdb9971c-0236-3518-89cd-815348614fb6": {
      "content": "it('${1:description}', function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "it (js)",
      "matches": {
        "it": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdbe975d-1be6-3473-8b40-befd00b9e441": {
      "content": "each_value { |${1:val}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eav": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdbff224-7537-3297-bee1-d9d9500e6b4c": {
      "content": "font-size: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdc1dea2-995d-3a98-b17b-6a4e496a8c57": {
      "content": "if ${1} then\n\t${2}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdd09168-ac0a-3199-856b-caf93b19d915": {
      "content": "divisibleby:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fdd5a8ca-6897-3dbc-a846-bca750875630": {
      "content": "test \"${1}\" =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdd992d4-10d2-39bc-b17d-bfc836fc8922": {
      "content": "echo CHtml::dropDownList('${1:name}', '${2:select}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhddl": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdd9a16c-57be-361c-9555-4799fc01d25c": {
      "content": "try ${1:TARGET}\nwith ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "try..with",
      "matches": {
        "try": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fddbc209-ece7-368e-ad57-90e3b2ef2d33": {
      "content": "<meta name=\"keywords\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keywords": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fde55acd-6d2a-376c-935f-f7159368a700": {
      "content": "protected type ${1}(${2}) is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected type",
      "matches": {
        "protected_type": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fde8809f-b818-3ba9-9878-3bb7395df0a6": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nexport default {\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API",
      "matches": {
        "vbase-3": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "fdebd90f-7347-3d8f-a56c-bf155cfaab8d": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t${2:# TODO: Define fields here}\n\n\tclass Meta:\n\t\tverbose_name = \"$1\"\n\t\tverbose_name_plural = \"$1s\"\n\n\tdef __str__(self):\n\t\treturn super($1, self).__str__()\n\n\tdef save(self):\n\t\treturn super($1, self).save()\n\n\tdef get_absolute_url(self):\n\t\treturn ('')\n\n\t${3:# TODO: Define custom methods here}\n",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model",
      "matches": {
        "modelfull": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fdeccb63-b173-3501-8d08-81178ba05726": {
      "content": "implicit none\n\t${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdef97f5-5345-3cbd-8276-c66085ffd952": {
      "content": "switch (${1}) {\n| ${2} => ${0}\n}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdf45ae6-cbc7-374c-8a40-f5c0ad40888b": {
      "content": "LOGGER.info(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      },
      "source": "vim-snippets/snippets"
    },
    "fdfef2ba-f24a-3685-8cc9-1fa76296eeff": {
      "content": "font-emphasize-style: dot",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe058331-4795-3559-b25b-f1d5b10925ea": {
      "content": "overflow-y ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe05f93f-2701-3428-bc95-abec6821a428": {
      "content": "&#x2193;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "down": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe15217f-8a04-3f1b-ae74-177bb88e5afd": {
      "content": "border-fit scale",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe17f6e0-0f78-3cc9-aed3-6bcd6d138b5c": {
      "content": "def __getattr__(self, name):\n\t${1:pass}\ndef __setattr__(self, name, value):\n\t${2:pass}\ndef __delattr__(self, name):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for customizing attribute access",
      "matches": {
        "attr": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe1fe665-0b2a-3dea-b7e9-543051fd9955": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe226cdf-c26c-331f-96e4-77a8a6a4f080": {
      "content": "| downcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "downcase": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe2870f6-e73b-312b-97af-5d737bcf00c4": {
      "content": "<tr>\n\t${0}\n</tr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe2bc0b3-eb6f-34a6-9b58-fb3172b234cd": {
      "content": "augroup ${1:AU_NAME}\n\tautocmd!\n\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroup ... autocmd block",
      "matches": {
        "au": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe2f992b-bdb2-32e7-9236-200e53f29a29": {
      "content": "_.now()",
      "doc": "_.defer(function(stamp) {\n  console.log(_.now() - stamp);\n}, _.now());\n// => Logs the number of milliseconds it took for the deferred invocation.\n\nGets the timestamp of the number of milliseconds that have elapsed since\nthe Unix epoch (1 January 1970 00:00:00 UTC).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-now",
      "matches": {
        "lodash now": true
      },
      "source": "javascript/lodash"
    },
    "fe36bcb9-677b-382c-9f5b-6f68039f3c21": {
      "content": "Yii::app()->cache->add('${1:key}', ${2:value}, ${3:expire}, new C${4}CacheDependency(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycad": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe379d99-1b2d-37b8-b339-7b06e564e20c": {
      "content": "[[NSUserDefaults standardUserDefaults] objectForKey:${1:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Read from defaults (getprefs)",
      "matches": {
        "getprefs": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fe416d5a-3ebd-3437-82e5-b0594da314cf": {
      "content": "<?php $this->${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pthis": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fe43dc54-2331-3655-9c7b-3a66cda4b521": {
      "content": "border-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe44d156-97c2-374e-8603-fb513b19b694": {
      "content": "else\n{\n\t${1:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe4a3db8-f620-3c88-9ad9-d37e642335d7": {
      "content": "@enforce_keys [:${1:key_name}]",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enfk": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe4ea986-4e72-3783-bb2f-98af17a895d5": {
      "content": "gl.glColor3f(${1:red}, ${2:green}, ${0:blue});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl color 3f",
      "matches": {
        "gl": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe5b89ef-c303-30ae-894a-01a0c0799ba6": {
      "content": "<%namespace file=\"${1:name}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "namespace": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fe715eb7-622b-3c3a-8c43-0173974b1c15": {
      "content": "cy.getCookies();",
      "doc": "Get all of the browser cookies.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-cookies-get-all",
      "matches": {
        "cypress cookies get all": true
      },
      "source": "javascript/cypress"
    },
    "fe9057b4-76b0-3466-a158-9a0983720a9d": {
      "content": "(for/product ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/product",
      "matches": {
        "forp": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe953ebb-52ef-3da9-acbe-0ce65ba1f7e3": {
      "content": "for ${1:#:name} in ${2:#:array}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fe96b9e2-4334-388a-97f0-168761ed920e": {
      "content": "repeat while ${1:#:condition}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "repwh": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fe975459-5aac-3941-b3f3-c9dd9e7f8ddc": {
      "content": "$this->input->cookie(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-cookie": true
      },
      "source": "vim-snippets/snippets"
    },
    "fe9c5341-453c-3896-84e0-1b433e08c695": {
      "content": "import React from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactArrowFunctionExportComponent",
      "matches": {
        "rafce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "fea3c952-82e2-31b4-aad1-075b4a84c5f6": {
      "content": "<input type=\"month\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:month": true
      },
      "source": "vim-snippets/snippets"
    },
    "feaa6117-a793-3716-ae78-46b986ebe7ed": {
      "content": "${1:obj}.attr('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      },
      "source": "snippets/javascript"
    },
    "feb07977-a9ca-3db9-b2e8-44ca7df2edf5": {
      "content": "Wait Until Element Does Not Contain    ${1:${locator}}    ${2:${text}}    ${3:${timeout=None}}    ${4:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Does Not Contain",
      "matches": {
        "wuednc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "feb146b1-ac62-379f-b16a-88f09329f09a": {
      "content": "\\${${0:interpolation${VISUAL}}\\}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "${interpolation}",
      "matches": {
        "int": true
      },
      "source": "vim-snippets/snippets"
    },
    "feb33925-dc42-355d-b6f0-f0ee1075e892": {
      "content": "import EmberObject from '@ember/object';\n\nexport default EmberObject.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import EmberObject from '@ember/object';",
      "matches": {
        "eobj": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "febe447a-7639-38ca-9a35-1322a02352ea": {
      "content": "require 'ruby-debug'; debugger",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug18": true
      },
      "source": "vim-snippets/snippets"
    },
    "fec127f7-6037-3644-ace2-2a1cecef3dff": {
      "content": "console.error(${1:object})",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleError",
      "matches": {
        "cer": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "fec291fb-3111-3159-97f6-4ce39332a5a8": {
      "content": "- (IBAction)${1:method}:(${2:id})sender\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iba": true
      },
      "source": "vim-snippets/snippets"
    },
    "fec41c10-b52d-3cb4-88fe-bf82903b423c": {
      "content": "static_assert(${1:#:condition}, ${2:#:message});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static_assert": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fec67c11-e294-3822-a581-8aff55d580bd": {
      "content": "list-style-position inside",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      },
      "source": "vim-snippets/snippets"
    },
    "fec89892-084e-3a3d-a9bc-d24405a1cd7e": {
      "content": "border-right-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      },
      "source": "vim-snippets/snippets"
    },
    "fecb888f-13b6-399f-9be1-f20d21432a01": {
      "content": "if ${1}\n\t${2}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "full if-else statement",
      "matches": {
        "ife": true
      },
      "source": "vim-snippets/snippets"
    },
    "fed5bb30-b567-3261-99b2-1c2e835518f9": {
      "content": "render text: \"${1:text to render...}\", layout: \"${2:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,layout) (rtl)",
      "matches": {
        "rtl": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fed700dc-047c-3970-9753-ad086d0995aa": {
      "content": "{|class=\"wikitable\"\n|+ ${1}\n! ${2}\n! ${3}\n|-\n| ${4}\n| ${5}\n|-\n| ${6}\n| ${7}\n|-\n|\n|\n|}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{|": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "feda5da8-666d-31fc-aa1f-a1019aae80b6": {
      "content": "\\\\noindent\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\noindent",
      "matches": {
        "ni": true
      },
      "source": "vim-snippets/snippets"
    },
    "fedf05d0-7a77-30aa-9658-6b6776b49f0a": {
      "content": "setter? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w?": true
      },
      "source": "vim-snippets/snippets"
    },
    "fee1df91-885f-3829-940b-a5e2bd46d28c": {
      "content": "[${1}]",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      },
      "source": "vim-snippets/snippets"
    },
    "feecaa3c-4305-3fdb-9c6b-30e5212dc70a": {
      "content": "cy.get('${1:selector}');",
      "doc": "Get one or more DOM elements by selector or alias",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-get",
      "matches": {
        "cypress get": true
      },
      "source": "javascript/cypress"
    },
    "fef285f3-0bc3-3cbc-8905-e771d4719cc0": {
      "content": "border-bottom-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      },
      "source": "vim-snippets/snippets"
    },
    "fef287ae-6208-3d4c-8a5a-c73419314d4a": {
      "content": "${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "off": true
      },
      "source": "snippets/javascript"
    },
    "fefefc3e-7a66-3deb-a3a6-f1590a6ae801": {
      "content": "import React, { useState, useEffect } from 'react'\n",
      "doc": "",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import React, {useState, useEffect}",
      "matches": {
        "imrse": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ff010837-ceda-3391-9547-ce479d56b907": {
      "content": "widows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff04c1c6-c3dd-329a-a9be-ff688aac086e": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      },
      "source": "vscode-react/snippets"
    },
    "ff05527e-0e1e-3249-bdb4-66aca549adab": {
      "content": "assert_raises ${1:StandardError} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrd": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff0704e0-06c6-380e-ad16-0f9440637566": {
      "content": "class ${1:X()} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ff0cd3ad-c037-3849-855f-edc59ec19aac": {
      "content": "border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff0d595b-3548-3e5e-b85e-6acad60f9431": {
      "content": "<exception cref=\"${1:System.Exception}\">${2}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML exception comment",
      "matches": {
        "<ex": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ff14bee3-863a-3f6d-99f3-f4e53ed930f6": {
      "content": "const ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n",
      "doc": "Creates a React 17 Arrow Function Component with ES7 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "_reactArrowFunctionExportComponent",
      "matches": {
        "_rafce": true
      },
      "source": "vscode-es7-javascript-react-snippets/snippets"
    },
    "ff158b00-e977-39c9-8b20-cf9c61b73947": {
      "content": "<input type=\"datetime-local\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:datetime-local": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff192098-00c2-3659-bae1-349b4daa674b": {
      "content": "beforeCreate () {\n\t${0};\n},",
      "doc": "beforeCreate lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeCreate",
      "matches": {
        "vbeforecreate": true
      },
      "source": "vue-vscode-snippets/snippets"
    },
    "ff1bfee6-d4ad-30ac-b82d-a7a71f0c6792": {
      "content": "<% ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "ruby_code": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ff2a3d71-141c-3805-a0ca-dc9ec5cc2b23": {
      "content": "border-top-right-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff2d6fb4-495f-3d2b-9cc9-7b58bcfc8189": {
      "content": "place-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff3489e2-3a30-3e7e-b311-f4bb8f64d0c4": {
      "content": "$.dequeue('${1:selector expression}'${2:, 'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deqq": true
      },
      "source": "snippets/coffee"
    },
    "ff36409b-105b-3899-b2ca-0059abdddf7c": {
      "content": "assert_difference \"${1:Model}.${2:count}\", ${3:1} do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_difference",
      "matches": {
        "asd": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ff3af5da-b673-3e78-b315-ba1242a658b1": {
      "content": "| money_without_trailing_zeros",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_without_trailing_zeros": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff5a0f65-a26d-3dab-9763-34a578b44ad8": {
      "content": "_.gt(${value}, ${other})",
      "doc": "_.gt(3, 1);\n// => true\n\n_.gt(3, 3);\n// => false\n\n_.gt(1, 3);\n// => false\n\nChecks if `value` is greater than `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-gt",
      "matches": {
        "lodash gt": true
      },
      "source": "javascript/lodash"
    },
    "ff5a2da0-4efe-3668-a660-4baa727cff4d": {
      "content": "[class]=\"${1:expression}\"",
      "doc": "Angular [class] binding",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "a-class": true,
        "angular class": true
      },
      "source": "javascript/angular"
    },
    "ff5c3ae1-1b75-3d14-a1c9-ad4d5ef957be": {
      "content": "array.compact()",
      "doc": "array.compact(rejector: (value) => boolean): Schema\n\nRemoves falsey values from the array. Providing a rejecter function lets you specify the rejection criteria yourself.array()\n  .compact()\n  .cast([\"\", 1, 0, 4, false, null]); // => [1, 4]\n\narray()\n  .compact(function(v) {\n    return v == null;\n  })\n  .cast([\"\", 1, 0, 4, false, null]); // => ['', 1, 0, 4, false]\nobjectDefine an object schema. Options passed into isValid are also passed to child schemas.\nSupports all the same methods as mixed.yup.object().shape({\n  name: string().required(),\n  age: number()\n    .required()\n    .positive()\n    .integer(),\n  email: string().email(),\n  website: string().url()\n});\nYou can also pass a shape to the object constructor as a convenience.object().shape({\n  num: number()\n});\n// or\nobject({\n  num: number()\n});\nThe default cast behavior for object is: JSON.parseFailed casts return: null;",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-compact",
      "matches": {
        "yup array compact": true
      },
      "source": "javascript/yup"
    },
    "ff69589d-3b7d-3d43-8788-e99bd26fe895": {
      "content": "page-break-inside auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff6ba70a-0b72-38fb-acbf-1d0c47c272b8": {
      "content": "Page Should Contain    ${1:${text}}    ${2:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain",
      "matches": {
        "psc": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ff83768a-3bc7-3bc3-9adc-accaeaf8e105": {
      "content": "Element Should Not Be Visible    ${${1:locator}}    ${2:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Not Be Visible",
      "matches": {
        "esnbv": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ff856ed2-29ba-34da-b548-e09b1da1ce76": {
      "content": "$this->renderPartial('${1:view}',array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrp": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff91264c-7cc8-3d8a-a69f-701974436381": {
      "content": "text-align-last: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      },
      "source": "vim-snippets/snippets"
    },
    "ff9ef1a7-7577-39af-a561-c0aee5ab24a3": {
      "content": "catch($1Exception e)\n{\n\t${2:/*handle exception*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "catch (catch)",
      "matches": {
        "catch": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "ffa09cbc-3329-3c79-9c26-046d2fae3e54": {
      "content": "var ${1:t} ${0:string}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variable initialization",
      "matches": {
        "vr": true
      },
      "source": "vim-snippets/snippets"
    },
    "ffa14b45-14fe-3ee1-8b2a-b96a65b284e1": {
      "content": "font: ${1:1em} ${2:Arial},${3:sans-serif};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      },
      "source": "vim-snippets/snippets"
    },
    "ffa5b1e8-9fda-390b-8411-8922df92fccf": {
      "content": "_.cloneDeepWith(${value}, ${customizer})",
      "doc": "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n}\n\nvar el = _.cloneDeepWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 20\n\nThis method is like `_.cloneWith` except that it recursively clones `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonedeepwith",
      "matches": {
        "lodash clonedeepwith": true
      },
      "source": "javascript/lodash"
    },
    "ffae18aa-401b-38fb-9090-89fc027a781c": {
      "content": "for ${1:i} := 0; $1 < ${2:N}; $1++ {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for 0..N-1 { ... }",
      "matches": {
        "fori": true
      },
      "source": "gosnippets/snippets"
    },
    "ffc8d49b-cd4f-35b0-bcbb-9bdf4ab06d12": {
      "content": "scale(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scale": true
      },
      "source": "vim-snippets/snippets"
    },
    "ffd185f2-80f1-3d68-8258-d170024d6674": {
      "content": "<ng-container $0></ng-container>",
      "doc": "Angular ng-container",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-container",
      "matches": {
        "a-ng-container": true
      },
      "source": "vscode-angular-snippets/snippets"
    },
    "ffd7aa4a-cff5-3c85-abd5-a9d48403e93f": {
      "content": "z-index: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      },
      "source": "vim-snippets/snippets"
    },
    "ffeb169a-2436-3956-af1f-681582504c05": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} pad ${4:BalanceAccount} ${5:PadAccount}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "pad",
      "matches": {
        "pad": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "ffed3d24-4599-3bb7-86a1-eaa4f4ec7895": {
      "content": "${1:/* condition */} ? ${2:a} : ${3:b}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      },
      "source": "vim-snippets/snippets"
    },
    "ffee666c-b05d-38cf-8085-6ff28709dcec": {
      "content": "resources :${1:posts}${2: do\n\t$3\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "resources",
      "matches": {
        "res": true
      },
      "source": "vim-snippets/UltiSnips"
    },
    "fff14ae6-19f2-350f-82df-008c4a50ab78": {
      "content": "box-sizing content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      },
      "source": "vim-snippets/snippets"
    },
    "fff47d12-43aa-3680-9a29-e09797965b01": {
      "content": "srand(time(NULL));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seed_rand": true
      },
      "source": "neosnippet-snippets/neosnippets"
    },
    "fffde4b6-2a94-3911-a122-1a8a781de201": {
      "content": "assert_no_difference \"${1:Model}.${2:count}\" do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_no_difference",
      "matches": {
        "asnd": true
      },
      "source": "vim-snippets/UltiSnips"
    }
  }
}