{
  "exts": {
    "Gemfile": {},
    "_": {},
    "actionscript": {},
    "ada": {},
    "admin": {},
    "all": {},
    "alpaca": {},
    "angular": {},
    "angular_coffee": {},
    "apache": {},
    "applescript": {},
    "arduino": {},
    "asciidoc": {},
    "asciidoctor": {
      "asciidoc": true
    },
    "asm": {},
    "autoit": {},
    "awk": {},
    "axios": {},
    "base": {},
    "beancount": {},
    "bib": {},
    "bindzone": {},
    "blade": {
      "html": true
    },
    "c": {},
    "chef": {},
    "classnames": {},
    "clojure": {},
    "cmake": {},
    "codeigniter": {},
    "coffee": {},
    "coffee-jasmine": {
      "coffee": true
    },
    "coffee-react": {
      "coffee": true
    },
    "comprehension": {},
    "cpp": {
      "c": true
    },
    "crystal": {},
    "cs": {},
    "csharp": {},
    "css": {},
    "cuda": {
      "cpp": true
    },
    "cypress": {},
    "d": {
      "c": true
    },
    "dart": {},
    "dart-flutter": {},
    "debug": {},
    "diff": {},
    "django": {},
    "djangohtml": {},
    "dockerfile": {},
    "dosini": {},
    "dotenv": {},
    "dotenv-safe": {},
    "eelixir": {
      "html": true
    },
    "ejs": {},
    "elixir": {},
    "elm": {},
    "erb": {},
    "erlang": {},
    "eruby": {
      "html": true
    },
    "falcon": {},
    "fennel": {},
    "flutter": {},
    "forms": {},
    "fortran": {},
    "framer-motion": {},
    "freemarker": {
      "html": true
    },
    "fsharp": {},
    "gatsby": {},
    "gatsby-image": {},
    "gdscript": {},
    "generated": {},
    "gitcommit": {},
    "global": {},
    "glsl": {},
    "gnuplot": {},
    "go": {},
    "graphql-request": {},
    "groovy": {},
    "haml": {},
    "handlebars": {},
    "haskell": {},
    "helm": {},
    "help": {},
    "html": {},
    "html_minimal": {},
    "htmldjango": {
      "html": true
    },
    "htmljinja": {
      "html": true,
      "jinja2": true
    },
    "htmltornado": {},
    "idris": {},
    "ignore": {},
    "jade": {},
    "java": {},
    "javascript": {},
    "javascript-angular": {},
    "javascript-bemjson": {},
    "javascript-d3": {},
    "javascript-ember": {},
    "javascript-jasmine": {},
    "javascript-jasmine-arrow": {},
    "javascript-jquery": {},
    "javascript-jsdoc": {},
    "javascript-mocha": {},
    "javascript-node": {},
    "javascript-openui5": {},
    "javascript-react": {},
    "javascript-redux": {},
    "javascript-requirejs": {},
    "javascript.node": {},
    "javascript_react": {},
    "jekyll": {},
    "jenkins": {},
    "jest": {},
    "jinja": {
      "html": true
    },
    "jinja2": {},
    "jquery_coffee": {},
    "json": {},
    "jsonc": {},
    "jsp": {},
    "julia": {},
    "kotlin": {},
    "kp19pp": {},
    "kubernetes": {},
    "laravel": {},
    "latex": {},
    "latex-snippets": {},
    "ledger": {},
    "lfe": {},
    "lhaskell": {
      "haskell": true
    },
    "liquid": {},
    "lodash": {},
    "lpc": {},
    "ls": {},
    "lua": {},
    "make": {},
    "mako": {},
    "markdown": {},
    "matlab": {},
    "mediawiki": {},
    "mint": {},
    "mkd": {
      "markdown": true
    },
    "models": {},
    "moon": {},
    "mustache": {},
    "neosnippet": {},
    "next": {},
    "nim": {},
    "norg": {},
    "nuxt": {},
    "nuxt-config": {},
    "nuxt-script": {},
    "objc": {},
    "ocaml": {},
    "octave": {
      "matlab": true
    },
    "openfoam": {},
    "org": {},
    "pandoc": {
      "markdown": true
    },
    "perl": {},
    "perl6": {},
    "phoenix": {},
    "php": {},
    "php-laravel": {},
    "php-phpspec": {},
    "php-symfony2": {},
    "plantuml": {},
    "plsql": {},
    "po": {},
    "processing": {},
    "progress": {},
    "prolog": {},
    "prop-types": {},
    "proto": {},
    "ps1": {},
    "pug": {},
    "puppet": {},
    "purescript": {},
    "python": {},
    "r": {},
    "r-snippets": {},
    "racket": {},
    "rails": {},
    "react": {},
    "react-helmet": {},
    "react-intersection-observer": {},
    "react-modal": {},
    "react-native": {},
    "react-native-ts": {},
    "react-ts": {},
    "reason": {},
    "redux": {},
    "redux-thunk": {},
    "requirejs_coffee": {},
    "rescript": {},
    "rmarkdown": {},
    "rmd": {},
    "rnoweb": {
      "r": true,
      "tex": true
    },
    "robot": {},
    "rst": {},
    "ruby": {},
    "rust": {},
    "sass": {},
    "scala": {},
    "scheme": {},
    "scss": {
      "css": true
    },
    "serializers": {},
    "sh": {},
    "shell": {},
    "simplemvcf": {},
    "slim": {},
    "snippets": {},
    "snippets-ts": {},
    "solidity": {},
    "soy": {
      "html": true
    },
    "sql": {},
    "sshconfig": {},
    "styled-components": {},
    "stylus": {},
    "supercollider": {},
    "svelte": {
      "css": true,
      "html": true,
      "javascript": true
    },
    "swift": {},
    "systemverilog": {
      "verilog": true
    },
    "tags": {},
    "tcl": {},
    "tex": {},
    "texmath": {},
    "textile": {},
    "toml": {},
    "twig": {},
    "typescript": {
      "javascript": true
    },
    "typescript_react": {
      "javascript_react": true,
      "typescript": true
    },
    "typescriptreact": {
      "typescript": true
    },
    "unittest": {},
    "urls": {},
    "verilog": {},
    "vhdl": {},
    "views": {},
    "vim": {},
    "vimshell": {},
    "vimspec": {
      "vim": true
    },
    "vimwiki": {},
    "vital": {},
    "vscode-latex-snippets": {},
    "vscode_cobol": {},
    "vscode_cobol-compound": {},
    "vscode_cobol_dir": {},
    "vscode_cobol_jcl": {},
    "vue": {
      "css": true,
      "html": true,
      "javascript": true
    },
    "vue-pug": {},
    "vue-script": {},
    "vue-script-router": {},
    "vue-script-vuex": {},
    "vue-template": {},
    "vuex": {},
    "xhtml": {
      "html": true
    },
    "xml": {},
    "xslt": {},
    "yii": {},
    "yii-chtml": {},
    "yup": {},
    "zsh": {
      "sh": true
    }
  },
  "snippets": {
    "0002ff49-f60a-3bdc-92f7-ed1fd2c03f75": {
      "content": "padding: ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      }
    },
    "0003486c-9325-33f8-887b-13d8922794d1": {
      "content": "<?= ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?=": true
      }
    },
    "00067724-1278-361d-b064-fb6420814c40": {
      "content": "if(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "000c965a-747c-3d81-9188-5af1dafa4d83": {
      "content": "#include \"$0\"",
      "doc": "Code snippet for #include \" \"",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#inc",
      "matches": {
        "#inc": true
      }
    },
    "001e6740-a829-3a2b-9d86-9c8ac6358b7d": {
      "content": "map",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Map",
      "matches": {
        "T": true
      }
    },
    "0027c4de-4215-35f4-9416-45bf59060668": {
      "content": "@doc ~S\"\"\"\n$0\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "doc s",
      "matches": {
        "docs": true
      }
    },
    "002a2a36-9d21-3352-8f7b-24d3989d9999": {
      "content": "font-family ${0:Helvetica,Arial},sans-serif",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      }
    },
    "002afb80-4da2-349f-b156-8532e7025c96": {
      "content": "${fn:escapeXml(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "escape": true
      }
    },
    "0030bcad-f3de-3ffd-aa44-2e9cb91f7d53": {
      "content": "borderBottomWidth: ${1},",
      "doc": "borderBottomWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderBottomWidth",
      "matches": {
        "bor": true
      }
    },
    "003305d7-31f5-3009-8c79-d03408a4c015": {
      "content": "_.flattenDepth(${array}, ${depth})",
      "doc": "var array = [1, [2, [3, [4]], 5]];\n\n_.flattenDepth(array, 1);\n// => [1, 2, [3, [4]], 5]\n\n_.flattenDepth(array, 2);\n// => [1, 2, 3, [4], 5]\n\nRecursively flatten `array` up to `depth` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flattendepth",
      "matches": {
        "lodash flattendepth": true
      }
    },
    "003bb37f-95c2-3a1a-a5af-f27a3eb36000": {
      "content": "page-break-after: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      }
    },
    "003c8514-85a1-3711-819e-13479189b53d": {
      "content": "@include ${1:NAME}(${2:#:ARGS});",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@include ...",
      "matches": {
        "include": true
      }
    },
    "0043a3c5-cc52-34a6-b77c-f3a50b4d696e": {
      "content": "else\n{\n\t$0\n}",
      "doc": "Code snippet for else statement",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "0054e1e1-35a9-3a83-a7de-3cda4f1d4b7f": {
      "content": "{% capture ${1:variable} %}${0}{% endcapture %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture": true
      }
    },
    "005c12b1-fb23-3e30-ae3e-9f4db3b2af4d": {
      "content": "margin: ${1:0} ${2:0} ${3:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      }
    },
    "005c8618-732e-3865-ac61-41c18fa395c8": {
      "content": "if err != nil {\n\treturn ${1:nil}, ${2:err}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return with two return values",
      "matches": {
        "errn,": true
      }
    },
    "005caae0-c069-3df2-9731-8e74063a736d": {
      "content": "<!doctype html>\n<html lang=\"${1:en}\">\n    <head>\n        <meta charset=\"${2:utf-8}\">\n        <meta name=\"viewport\" content=\"${3:width=device-width, initial-scale=1}\">\n        <title>${4}</title>\n    </head>\n    <body>\n        ${5}\n    </body>\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html5": true
      }
    },
    "0061f2a2-5112-3da3-8676-f01500d079da": {
      "content": "import ${1} as ${2}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... as ...",
      "matches": {
        "impa": true,
        "importAs": true
      }
    },
    "00636cfc-ba73-3125-8b49-cd0224db1d83": {
      "content": "${1:el}.classList.toggle('${2:class}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "classList.toggle",
      "matches": {
        "hect": true
      }
    },
    "00682455-4ec4-3989-a57c-a5091b5ffd59": {
      "content": "{% for $1 in  %}\n  \n{% empty %}\n  \n{% endfor %}",
      "doc": "foreach with empty tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "fore",
      "matches": {
        "fore": true
      }
    },
    "00729f53-a764-348e-8f3e-e6021c6ec9cf": {
      "content": "${1:map}.resources :${2:resource}${10: do |${11:$2}|\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.resources",
      "matches": {
        "maprs": true
      }
    },
    "007e2cd4-e604-3802-8253-ac89da9a95df": {
      "content": "${1|this,vm|}.\\$slots$2",
      "doc": "Type: Object. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$slots",
      "matches": {
        "vmSlots": true
      }
    },
    "00856d82-b674-3e2c-99eb-622a27b2821c": {
      "content": "{% endset %}$0",
      "doc": "endset",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endset",
      "matches": {
        "endset": true
      }
    },
    "00856ec9-0777-3f69-acb1-24326e6d3833": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      }
    },
    "0085f3f6-d1d9-3f21-9c7d-83bbac247db4": {
      "content": "import { ${2:originalName} as ${3:alias} } from '${1:module}';$0",
      "doc": "Imports a specific portion of the module by assigning a local alias in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importas",
      "matches": {
        "base import as": true
      }
    },
    "008838e3-6489-3222-9a70-9e2501547d9f": {
      "content": "#![crate_name=${1:#:crate_name}]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crate": true
      }
    },
    "008b1274-19f2-3ba5-8cc3-e30ff844d245": {
      "content": "roundEven($2)",
      "doc": "find the nearest even integer to the parameter - The fractional part of 0.5 will round toward the nearest even integer. For example, both 3.5 and 4.5 will round to 4.0.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "roundEven",
      "matches": {
        "roundEven": true
      }
    },
    "008d10e6-a494-3c98-ba40-9b7545509c72": {
      "content": "DEFINE INPUT PARAMETER ${1:ParamName} AS ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      }
    },
    "00970c47-9c18-3692-8f5d-5e439b47a838": {
      "content": "\\begin{equation}\n\t${1:TARGET}\n\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{equation} \\equation": true,
        "equation": true
      }
    },
    "009c5526-0969-334d-a2b6-62dcaacc157e": {
      "content": "@slot('${1}')\n    ${2}\n@endslot",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@slot ... @endslot",
      "matches": {
        "slot": true
      }
    },
    "00a3f2b2-ccfe-3853-a1b1-31709aee0fc5": {
      "content": "@@warning(\"${1:-27}\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "@@warning",
      "matches": {
        "@w": true
      }
    },
    "00a6d12e-610d-3705-88e0-09f527282aad": {
      "content": "key = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "key": true
      }
    },
    "00a93fe9-a75f-3368-bc68-731aec943126": {
      "content": "| split: '${1:,}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      }
    },
    "00a9af79-48cf-3ced-b854-cb12a09f51fe": {
      "content": "if err != nil {\n\t${1}\n\treturn\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { ... return }",
      "matches": {
        "errh": true
      }
    },
    "00a9ed65-b177-354f-afaa-730663ebe955": {
      "content": "text-indent: ${0:2em};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-indent",
      "matches": {
        "ti": true
      }
    },
    "00aefe50-3269-3c8a-a802-a286255a8b4f": {
      "content": "position: ${1},",
      "doc": "position",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "position",
      "matches": {
        "pos": true
      }
    },
    "00b88436-fb5c-3294-a5b6-1f677275573a": {
      "content": "console.groupEnd();",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolegroupend",
      "matches": {
        "base console group end": true
      }
    },
    "00bcb815-0a4a-32a6-ac79-eb2af6b74fc7": {
      "content": "content open-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      }
    },
    "00cd0cd2-2136-3228-8b8b-614ea3ee308a": {
      "content": "text-transform: ${1:capitalize/uppercase/lowercase};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-transform: capitalize:upper:lower (text)",
      "matches": {
        "text": true
      }
    },
    "00d75a4b-991f-3ba8-a3a9-e9471223ebbd": {
      "content": "getSnapshotBeforeUpdate = (prevProps, prevState) => {\n\t$0\n}",
      "doc": "Called right before mutations are made (e.g. before the DOM is updated)",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-getsnapshotbeforeupdate",
      "matches": {
        "gsbu": true,
        "react getsnapshotbeforeupdate": true
      }
    },
    "00d97d02-eafe-3fa8-900b-c747ee50ff29": {
      "content": ".. table:: ${1:#:TITLE}\n\t${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_table",
      "matches": {
        "table": true
      }
    },
    "00de3481-df9c-36d6-a35f-5ce4df62a90a": {
      "content": "slice:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "00def97d-8ee5-3d18-b010-82cfcc9ab1ea": {
      "content": "PropTypes.oneOfType([\n  $0\n]).isRequired",
      "doc": "An object that could be one of many types required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      }
    },
    "00e0d90c-2103-34c3-8b58-88f310e2c505": {
      "content": "text-transform: lowercase",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      }
    },
    "00e0f74c-0c7d-3267-9935-62f1b8796ff0": {
      "content": "= render :partial => \"${1:item}\", :collection => ${0:@$1s}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      }
    },
    "00e426d1-511e-3123-9d5d-5c3d189aeee1": {
      "content": "${1:FIELDNAME} = forms.FileField($2,${3: max_length=$4,} required=${5:False})",
      "doc": "FileField (ffile)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ffile",
      "matches": {
        "ffile": true
      }
    },
    "00e51632-e3d9-38eb-bfb0-81b6da12f92b": {
      "content": "for (${2:i} = 0; i < ${1:n}; ${3:++i}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "00e887b0-4626-364b-94ee-7af97b179b88": {
      "content": "void ${1:/*function name*/}(${2:/*args*/}) ${3:@safe pure nothrow}\n{\n\t${VISUAL}$4\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "void function definition (void)",
      "matches": {
        "void": true
      }
    },
    "00ec1720-a75e-3330-a61c-e3d807321864": {
      "content": "@media ${1:all} and (max-width: ${2:SIZE}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media all and (max-width) {...}",
      "matches": {
        "media-max-width": true
      }
    },
    "00ee7fe3-6bf2-3dc7-9777-4b399c8b409b": {
      "content": "it { should validate_presence_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvp": true
      }
    },
    "00fcca00-2190-39e5-b1e5-44bfb4242651": {
      "content": "{%- tablerow ${1:item} in ${2:collection} cols: ${3:2} -%}\n\t${0}\n{%- endtablerow -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tablerow-": true
      }
    },
    "00ff3395-1ccd-3a18-b75b-8e7074d737e0": {
      "content": "WORKING-STORAGE SECTION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "WORKING-STORAGE SECTION",
      "matches": {
        "WORKING-STORAGE": true,
        "WS": true
      }
    },
    "0109ce88-6818-3d8d-97e8-d61bc5179198": {
      "content": "option_env!(\"${1}\")",
      "doc": "option_env!(\"…\")",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "option_env",
      "matches": {
        "option_env": true
      }
    },
    "0110b290-8ff0-3620-8790-912981d6055a": {
      "content": "to!(${1:/*type*/})(${2:/*arg*/})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "to (to)",
      "matches": {
        "to": true
      }
    },
    "011f10a8-d82b-328e-ae38-dce62c4cf001": {
      "content": "page-break-before auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      }
    },
    "01253958-b7d5-3dfc-a827-7f61976078d3": {
      "content": "v-bind$1='${2}'",
      "doc": "Expects: any (with argument) | Object (without argument)",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-bind",
      "matches": {
        "vBind": true
      }
    },
    "0125be56-e03c-3715-926c-aa9b2b6ca46b": {
      "content": "function(${1:name} ${2:args})\n\t${3}\nendfunction($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "function() endfunction()",
      "matches": {
        "function": true
      }
    },
    "012b763d-9de2-308a-833d-3d232800e36f": {
      "content": "grid-row-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      }
    },
    "012dee5f-87c2-33bf-bfd0-786d3eae0a1e": {
      "content": "page-break-before: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      }
    },
    "012df20b-a220-321a-b8b7-07615a35d5c0": {
      "content": "real ::",
      "doc": "Quick Real",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "r",
      "matches": {
        "r": true
      }
    },
    "013718e2-bd0c-3438-ad8c-6cdea087ae1b": {
      "content": "select case (${1})\n${2}\nend select",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "select case",
      "matches": {
        "se": true
      }
    },
    "013b031a-ae7d-3ce3-9243-507b2d2bc224": {
      "content": "list-style-type: square;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: square",
      "matches": {
        "lists": true
      }
    },
    "013bb104-601e-3bd3-85e0-48b4727b9c50": {
      "content": "grid-gap: ${1} ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      }
    },
    "0146f658-8db3-31ed-8c0b-e2d0225201c4": {
      "content": "$.ajaxStop ->\n\t${1:// handler for when all AJAX calls have been completed}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstop": true
      }
    },
    "0154c297-20fc-3967-9265-ea4aac5da4d2": {
      "content": "const ${1:variants} = {\n  ${2:hidden}: {\n    ${3:style}\n  },\n  ${4:visible}: {\n    ${5:style}\n  },\n};",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-variants",
      "matches": {
        "framer-motion variants": true,
        "variants": true
      }
    },
    "01576d59-aa38-3b3a-a7a8-57e88a6bd607": {
      "content": "&#x21E5;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tab": true
      }
    },
    "01688456-8030-3103-9cac-ffe86ed1338b": {
      "content": "class $1Mixin(models.Model):\n\t${2:# TODO}\r\n\n\tclass Meta:\n\t\tabstract = True",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "modelmixin",
      "matches": {
        "modelmixin": true
      }
    },
    "016c7739-2102-34a1-978a-208f4cdb64bf": {
      "content": "\\\\begin{${1:env}}\n\t${0:${VISUAL}}\n\\\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\begin{} ... \\end{} block",
      "matches": {
        "begin": true
      }
    },
    "017212b1-d449-3b63-81bb-44e744b91f25": {
      "content": "import React, { PureComponent } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React pure component class with ES7 module system export",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassExportPureComponent",
      "matches": {
        "rpce": true
      }
    },
    "0173224f-5e29-3ead-96d9-a0215657b906": {
      "content": "overflow: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      }
    },
    "017e7860-ddb8-3542-b7f0-08e2c0a6de98": {
      "content": "function(d) { ${1} }",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fd": true
      }
    },
    "01852735-5562-3ed5-9c83-6187a0eeeb31": {
      "content": "${1|#!/bin/bash,#!/usr/bin/env bash,#!/bin/sh,#!/usr/bin/env sh|}",
      "doc": "Option 1:\n\n#!/bin/bash\n\nDescription: Shebang Bash executor.\n\nOption 2:\n\n#!/usr/bin/env bash\n\nDescription: Shell searchs for the first match of bash in the $PATH environment variable.\n\nIt can be useful if you aren't aware of the absolute path or don't want to search for it.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "bash",
      "matches": {
        "#!": true,
        "bash": true,
        "shebang": true
      }
    },
    "018c6e0d-a5a3-3413-95e0-5a5644bddc0a": {
      "content": "auto ${1} = std::make_shared<${2:T}>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amsp": true
      }
    },
    "0195bdc0-c50d-3edb-8388-f67078769568": {
      "content": "${1:FIELDNAME} = HStoreField()",
      "doc": "HStoreField (fhstore).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fhstore",
      "matches": {
        "fhstore": true
      }
    },
    "01981db5-bfb1-3d22-ae73-98b5c6f7aa1b": {
      "content": "load(${1:file}, ${2:envir = ${3:parent.frame()}}, ${4:verbose = ${5:FALSE}})",
      "doc": "Load RData",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "loa",
      "matches": {
        "load": true
      }
    },
    "01a332a6-33ef-354f-a4f1-23e6c26b4544": {
      "content": "grid-row-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      }
    },
    "01a6e60e-5bc8-3e7e-9e71-d21c65816d49": {
      "content": "pragma(${1})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prag": true
      }
    },
    "01aad6f0-5aa2-3463-b1b3-2626c480ac19": {
      "content": "import { Directive } from '@angular/core';\n\n@Directive({ selector: '[${1:selector-name}]' })\nexport class ${2:Name}Directive {\n\tconstructor() { }\n}",
      "doc": "Angular directive",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-directive",
      "matches": {
        "a-directive": true,
        "angular directive": true
      }
    },
    "01aba968-9238-3b8b-8850-e556e7d0e2cb": {
      "content": "build(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "build conventional commit",
      "matches": {
        "build": true
      }
    },
    "01b5a6b9-a486-3189-9f98-22a2c2901ede": {
      "content": "module type ${1} = sig\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module signature",
      "matches": {
        "mot": true
      }
    },
    "01bb0b34-0c04-3dec-95e0-2da5362af876": {
      "content": "call ${1:s:V}.load('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "call s:V.load('...')",
      "matches": {
        "vital_load": true
      }
    },
    "01bb9168-d9b0-3f99-a36e-fbe3ef6f5e6d": {
      "content": "backgroundColor: ${1},",
      "doc": "backgroundColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "backgroundColor",
      "matches": {
        "bac": true
      }
    },
    "01c27c67-5e92-3f80-a3d5-9ccce4be3eb8": {
      "content": "defimpl ${1:protocol_name}, for: ${2:data_type} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defim": true
      }
    },
    "01c4ca2d-3472-3640-9e47-763d91a5855c": {
      "content": "${1:obj}.keypress(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kpress": true
      }
    },
    "01c924bb-8c73-3839-a8d6-7b5be3e3676d": {
      "content": "<%= stylesheet_link_tag ${1::all}, cache: ${0:true} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slt": true
      }
    },
    "01ca06dd-98ab-3f99-92fe-cdfd129a83b0": {
      "content": "_.bindKey(${object}, ${key}, ${partials})",
      "doc": "var object = {\n  'user': 'fred',\n  'greet': function(greeting, punctuation) {\n    return greeting + ' ' + this.user + punctuation;\n  }\n};\n\nvar bound = _.bindKey(object, 'greet', 'hi');\nbound('!');\n// => 'hi fred!'\n\nobject.greet = function(greeting, punctuation) {\n  return greeting + 'ya ' + this.user + punctuation;\n};\n\nbound('!');\n// => 'hiya fred!'\n\n// Bound with placeholders.\nvar bound = _.bindKey(object, 'greet', _, '!');\nbound('hi');\n// => 'hiya fred!'\n\nCreates a function that invokes the method at `object[key]` with `partials`\nprepended to the arguments it receives.\n\nThis method differs from `_.bind` by allowing bound functions to reference\nmethods that may be redefined or don't yet exist. See\n[Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\nfor more details.\n\nThe `_.bindKey.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bindkey",
      "matches": {
        "lodash bindkey": true
      }
    },
    "01da72ab-20e9-364c-94eb-03221dd0fd03": {
      "content": "min-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      }
    },
    "01db38db-ca48-3927-b8b2-e6a5ee6d8dcd": {
      "content": "$this->input->server(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-server": true
      }
    },
    "01dbfa33-6b52-33c2-aef3-876022d982ff": {
      "content": "[TestFixture]\npublic class ${1}Test {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true,
        "testclass": true
      }
    },
    "01e22b6b-3d4a-3fb1-9b67-9bb85d96f8b5": {
      "content": "vertical-align sub",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      }
    },
    "01e242af-9659-3ffb-a6b6-d02f545febb5": {
      "content": "select { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      }
    },
    "01e72dca-f062-3eb9-a6c8-3412d74a66af": {
      "content": "// https://eips.ethereum.org/EIPS/eip-1996\r\n// https://github.com/IoBuilders/holdable-token (example)\r\n// SPDX-License-Identifier: MIT\r\n/*\r\nAn extension to the ERC-20 standard token that allows tokens to be put on hold.\r\nThis guarantees a future transfer and makes the held tokens unavailable for transfer in the mean time.\r\nHolds are similar to escrows in that are firm and lead to final settlement.\r\n*/\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface IHoldable /* is ERC-20 */ {\r\n    enum HoldStatusCode {\r\n        Nonexistent,\r\n        Ordered,\r\n        Executed,\r\n        ReleasedByNotary,\r\n        ReleasedByPayee,\r\n        ReleasedOnExpiration\r\n    }\r\n\r\n    function hold(string calldata operationId, address to, address notary, uint256 value, uint256 timeToExpiration) external returns (bool);\r\n    function holdFrom(string calldata operationId, address from, address to, address notary,\r\n                                                     uint256 value, uint256 timeToExpiration) external returns (bool);\r\n    function releaseHold(string calldata operationId) external returns (bool);\r\n    function executeHold(string calldata operationId, uint256 value) external returns (bool);\r\n    function renewHold(string calldata operationId, uint256 timeToExpiration) external returns (bool);\r\n    function retrieveHoldData(string calldata operationId) external view returns (address from, address to, address notary,\r\n                                                                                uint256 value, uint256 expiration, HoldStatusCode status);\r\n\r\n    function balanceOnHold(address account) external view returns (uint256);\r\n    function netBalanceOf(address account) external view returns (uint256);\r\n    function totalSupplyOnHold() external view returns (uint256);\r\n\r\n    function authorizeHoldOperator(address operator) external returns (bool);\r\n    function revokeHoldOperator(address operator) external returns (bool);\r\n    function isHoldOperatorFor(address operator, address from) external view returns (bool);\r\n\r\n    event HoldCreated(address indexed holdIssuer, string  operationId, address from,\r\n                                address to, address indexed notary, uint256 value, uint256 expiration);\r\n    event HoldExecuted(address indexed holdIssuer, string operationId, address indexed notary, uint256 heldValue, uint256 transferredValue);\r\n    event HoldReleased(address indexed holdIssuer, string operationId, HoldStatusCode status);\r\n    event HoldRenewed(address indexed holdIssuer, string operationId, uint256 oldExpiration, uint256 newExpiration);\r\n    event AuthorizedHoldOperator(address indexed operator, address indexed account);\r\n    event RevokedHoldOperator(address indexed operator, address indexed account);\r\n}",
      "doc": "Draft: EIP-1996: Holdable Token, An extension to the ERC-20 standard token that allows tokens to be put on hold. This guarantees a future transfer and makes the held tokens unavailable for transfer in the mean time. Holds are similar to escrows in that are firm and lead to final settlement.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc1996i",
      "matches": {
        "erc1996i-draft": true
      }
    },
    "01ef3209-122d-33f3-80d7-fc7dfa9af698": {
      "content": "text-transform: capitalize;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      }
    },
    "01f80996-79c6-3407-b96d-b66a36c47b8b": {
      "content": "include(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "include source code",
      "matches": {
        "incl": true
      }
    },
    "01fb1d95-9cb0-31c6-8ce2-797466724570": {
      "content": "01 ${2:_prop} ${3:binary-long} private.\nmethod-id. get property #${1:Prop}.\nprocedure division returning ret as ${3:binary-long}.\n    set ret to ${2:_prop}\nend method.\nmethod-id. set property #${1:Prop}.\nprocedure division using by value val as ${3:binary-long}.\n    set ${2:_prop} to 0\nend method.",
      "doc": "set/get property",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "property",
      "matches": {
        "property": true
      }
    },
    "01fc2d44-b810-3158-ba82-214d829b2236": {
      "content": "<meta name=\"$1\" content=\"$2\">$3",
      "doc": "HTML - Defines meta information",
      "filetype": "html",
      "grammar": "lsp",
      "label": "meta",
      "matches": {
        "meta": true
      }
    },
    "01fc6c0c-a33a-3ef9-b495-4918f6b4beb9": {
      "content": "console.time(\"${1:label}\");\n${0:${VISUAL}}\nconsole.timeEnd(\"$1\");",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.time ... console.timeEnd",
      "matches": {
        "ctime": true
      }
    },
    "01fe86ec-445c-30d2-b263-c8990b4a00ac": {
      "content": "log2($2)",
      "doc": "float log2(float x)\nvec2 log2(vec2 x)\nvec3 log2(vec3 x)\nvec4 log2(vec4 x)\n\nThe log2 function returns the power to which 2 has to be raised to produce x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "log2",
      "matches": {
        "log2": true
      }
    },
    "020140d7-ea3c-3672-b513-8cdd8e2eab0a": {
      "content": "class $1Inline(admin.TabularInline):\n\t'''\n\tTabular Inline View for $1\n\t'''\n\tmodel = ${2:$1}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = ($6,)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Tabular Inline",
      "matches": {
        "tabularinline": true
      }
    },
    "020185a5-a6b9-3bd0-b153-b3693d5198f3": {
      "content": "font-emphasize-position: after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      }
    },
    "020885d7-e185-356c-9012-92f11c38fc8a": {
      "content": "echo \"${0:TARGET}\" 1>&2",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      }
    },
    "020962cd-ba6a-3e95-9154-fea796b98441": {
      "content": "page-break-inside auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      }
    },
    "020abea4-5723-33b2-8c8e-01b5f795db05": {
      "content": "const ${1:value} = get(${2:store});",
      "doc": "svelte get value from store",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-store-get",
      "matches": {
        "s-store-get-value": true
      }
    },
    "020c452d-e6b3-3363-b4fa-4c15a88a961f": {
      "content": "alter table ${1:table} add (${2:column} ${0:type});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addcol": true
      }
    },
    "020ed1ad-fc9f-3361-9424-3cb5a62a8e86": {
      "content": "orphans: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      }
    },
    "0213ecd8-62ee-32ad-a6f7-cb9fd01d0384": {
      "content": "FUNCTION ORD(${1:char},${2:...})$0",
      "doc": "ordinal position in the program character set corresponding to char",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ORD",
      "matches": {
        "FUNCTION ORD": true
      }
    },
    "021ba797-dc12-3859-8a10-8c3282497111": {
      "content": "v-model='${1:something}'",
      "doc": "Expects: varies based on value of form inputs element or output of components",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-model",
      "matches": {
        "vModel": true
      }
    },
    "021cc67f-ea7b-3fb5-a2e7-6202a5e8caf8": {
      "content": "border-top-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      }
    },
    "022701ab-a0be-372b-a3ce-3383399cec66": {
      "content": "assertFalse(\"${1:Failure message}\", ${2:condition});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "af": true
      }
    },
    "022bfb45-387d-3d20-8e1e-cba1a5bad184": {
      "content": "FUNCTION MONETARY-THOUSANDS-SEPARATOR()$0",
      "doc": "character used to separate the thousands digit groupings in a monetary currency value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MONETARY-THOUSANDS-SEPARATOR",
      "matches": {
        "FUNCTION MONETARY-THOUSANDS-SEPARATOR": true
      }
    },
    "022c55d1-ec17-3407-8f53-a0fc56eb3de5": {
      "content": "const",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      }
    },
    "022f1319-eaaa-39b7-88f0-da86fdca3e23": {
      "content": "function currency-symbol()$0",
      "doc": "function currency symbol character currently in effect for the locale under which the program is running",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-currency-symbol",
      "matches": {
        "function currency-symbol": true
      }
    },
    "0237fddf-86a3-3e47-8568-071846bea995": {
      "content": "| ${1:Column1}   | ${2:Column2}    |\n|--------------- | --------------- |\n| ${3:Item1.1}   | ${4:Item2.1}   |\n| ${5:Item1.2}   | ${6:Item2.2}   |\n${0}",
      "doc": "Insert table with 3 rows and 2 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 3x2 table",
      "matches": {
        "3x2table": true
      }
    },
    "023bbf31-db9e-32ed-85de-dcc0d14b05e4": {
      "content": "${1:FIELDNAME} = forms.GenericIPAddressField($2)",
      "doc": "IPAddressField (fgenericip)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fgenericip",
      "matches": {
        "fip": true
      }
    },
    "023dbcbc-e03f-3749-904b-2247dfce3614": {
      "content": "\\begin{note}\n\t${1:TARGET}\n\\end{note}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{note} \\note": true,
        "note": true
      }
    },
    "0240a8bc-d698-3226-b634-1b4aed09c9b8": {
      "content": "align-content: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      }
    },
    "02573e46-2b52-3a7a-8379-cb7920304b2c": {
      "content": "institution = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "institution": true
      }
    },
    "0257ffb2-da41-321b-a34f-6cf58dc0b9e2": {
      "content": "include '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "025827c1-5124-3779-bac7-46032bad69f0": {
      "content": "class $1 {\n$2\n}",
      "doc": "Class Object where fields are defined: \npublic (+)\nprivate (-)\nprotected (#) \npackage (~).\nFunctions can also be named here ex: +funcName()",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Class",
      "matches": {
        "cla": true
      }
    },
    "025e8d23-decf-3937-b0a5-2bddc4932c1a": {
      "content": "Run Keyword And Return    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return",
      "matches": {
        "rkar": true
      }
    },
    "0261258e-2124-37c9-8c56-8a5b6b6c2771": {
      "content": "fontSize: ${1},",
      "doc": "fontSize",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "fontSize",
      "matches": {
        "fo": true
      }
    },
    "0262ad12-e680-3ce8-9555-bae3c4fb06f1": {
      "content": "interface ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface NAME {...}",
      "matches": {
        "interface": true
      }
    },
    "0262ebf1-da49-3653-b02d-8ca29ba78fc9": {
      "content": "- (${1:id})${2:thing}\n{\n\treturn $2;\n}\n\n- (void)set$2:($1)${3:new$2}\n{\n\t[$3 retain];\n\t[$2 release];\n\t$2 = $3;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "objacc": true
      }
    },
    "0268b4a4-433f-3d92-92c4-843d4a01280c": {
      "content": "${1:function_name}() {\n\t${0:#function_body}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun-sh": true
      }
    },
    "026bf5c7-7976-32d8-8c3d-3eae348d9553": {
      "content": "<button type=\"submit\" [disabled]=\"!${1:form}.form.valid\">\n\tSave\n</button>",
      "doc": "Angular form submit",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformsubmit",
      "matches": {
        "a-form-submit": true,
        "angular ng form submit": true
      }
    },
    "026c0216-0a0c-3188-9ff9-8e229da85e01": {
      "content": "proc ${1:#:name}(${2}):\ndiscard \"\"\"${3:#:function documentation}\"\"\"\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procd": true
      }
    },
    "02727539-545f-3c6e-9cd8-362181d211ee": {
      "content": "border-style wave",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      }
    },
    "027a8300-3948-3d8d-a8c0-82455f68a2f1": {
      "content": "classify { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "027ab32f-75bd-33c5-99f8-7fc4620f36cc": {
      "content": "echo CHtml::button('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhb": true
      }
    },
    "027cc70c-621f-3c1a-88b9-fdd86b22db70": {
      "content": "<${1:component} :${1:propName}=\"${0}\"></${1:component}>",
      "doc": "component element with props",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Component with Props Binding",
      "matches": {
        "vel-props": true
      }
    },
    "027dfd84-4693-396a-9be2-ffe7dcc2f37f": {
      "content": "overflow-y ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      }
    },
    "02842933-1741-3601-999c-13580e1c4ccb": {
      "content": "padding: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      }
    },
    "02850035-6cbd-300b-9f85-10892ed4fe55": {
      "content": "$.get('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxget": true
      }
    },
    "028547d1-aa86-35d4-b841-09fed07f9548": {
      "content": "digitalRead(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dr": true
      }
    },
    "02854d2a-febd-34d3-8977-5303b156c75b": {
      "content": "LayoutBuilder(\n  builder: (BuildContext context, BoxConstraints constraints) {\n    return ${0:};\n  },\n),",
      "doc": "Similar to the Builder widget except that the framework calls the builder function at layout time and provides the parent widget's constraints.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Layout Builder",
      "matches": {
        "layoutBldr": true
      }
    },
    "028636b7-64bf-3c54-9943-8006538b6547": {
      "content": "library(${1:package}, ${2:help}, ${3:pos = ${4:2}}, ${5:lib.loc = ${6:NULL}})",
      "doc": "Library",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lib",
      "matches": {
        "library": true
      }
    },
    "029cba84-a678-38bd-a60c-d8cfecd4447a": {
      "content": "border-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      }
    },
    "029fc637-09f0-38af-9404-b900bf3cd99d": {
      "content": "elseif ${1:condition} then\n\t${0:--body}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "02a3ad95-b25f-3b04-a9ff-eb91440cf0ae": {
      "content": "dictsort:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      }
    },
    "02a72b86-640a-3338-8e91-5c50a506a24f": {
      "content": "assert ${1:test} : \"${2:Failure message}\";",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "02a77f60-10b3-38f0-8ced-21367a6c1efd": {
      "content": "align-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      }
    },
    "02ae5033-6f09-36f8-adac-ed6b3da02073": {
      "content": "package ${1:main}\n${0:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true,
        "pk": true
      }
    },
    "02ae9b6e-5632-3c6f-bcd9-10fe522d3e2e": {
      "content": "text-transform: capitalize",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      }
    },
    "02bc547b-387e-3a6c-ac67-c97e599071a5": {
      "content": "#ifndef ${1:DEBUG}\n$0\n#endif /* !$1 */",
      "doc": "Code snippet for #ifndef",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#ifndef",
      "matches": {
        "#ifndef": true
      }
    },
    "02c0a095-c2e9-39d6-956f-c8b8685dd380": {
      "content": "const component = new ${1:App}({\n\ttarget: ${2|target,document.body|},\n\tprops: ${3:props},\n\tanchor: ${4:anchor},\n\thydrate: ${5|false,true|},\n\tintro: ${5|false,true|}\n})",
      "doc": "svelte create component",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-create-component",
      "matches": {
        "s-create-component": true
      }
    },
    "02d48ddb-9084-323e-80f1-23053c60408c": {
      "content": "<option value=\"$1\">$2</option>$3",
      "doc": "HTML - Defines an option in a drop-down list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "option",
      "matches": {
        "option": true
      }
    },
    "02e2af24-ab09-392f-be08-398dfb312253": {
      "content": "display flex",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      }
    },
    "02e87db5-17f0-34dc-8d54-fa6908018e73": {
      "content": "public bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb+": true
      }
    },
    "02f59390-77f3-3d58-b5ad-a0779f916290": {
      "content": "white-space: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      }
    },
    "02f873d9-d05b-3a40-b095-c6b02400531b": {
      "content": "in {\n\t${1}\n} out {\n\t${2}\n} body {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contr": true
      }
    },
    "02fe167d-2da6-3b40-823f-d789fb1087fc": {
      "content": "when {\n\tchangeRequest '${1:changeRequest}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangeRequest": true
      }
    },
    "030107d7-9cc1-3cd5-895c-3353fe1ef665": {
      "content": "<% $1 %>",
      "doc": "erb exec block",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "exec",
      "matches": {
        "%": true,
        "er": true
      }
    },
    "03016077-63e5-313c-87f3-743e2c6370cd": {
      "content": "public ${1:String} get${2}() {\n\treturn ${0:fieldName};\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "0302cb99-927d-3d9e-a0f1-85b9c0bcfe5c": {
      "content": "| capitalize",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capitalize": true
      }
    },
    "0302fd6b-cc3a-331b-bba7-e4f9ae598088": {
      "content": "@constructor",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@constructor",
      "matches": {
        "@constr": true
      }
    },
    "03059402-e9c7-32c4-a79a-2af248d5c3b6": {
      "content": "# frozen_string_literal: true",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frozen": true
      }
    },
    "030b9627-a601-3eb7-bc8c-bae82b58c875": {
      "content": "${1:deferred}.resolveWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dresw": true
      }
    },
    "03113038-df81-3812-96c5-6cac8e857ae4": {
      "content": "place-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      }
    },
    "0316b2eb-9fd4-34c4-ac5c-9a88e7d742a7": {
      "content": "switch (\\$${1:variable}) {\n\tcase '${2:value}':\n\t\t${3:# code...}\n\t\tbreak;\n\t$0\n\tdefault:\n\t\t${4:# code...}\n\t\tbreak;\n}",
      "doc": "Switch block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "switch …",
      "matches": {
        "switch": true
      }
    },
    "031891a7-ad10-30e9-ab9a-4167c71778bd": {
      "content": "function sqrt(${1:number})$0",
      "doc": "aproximation of the square root of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-sqrt",
      "matches": {
        "function sqrt": true
      }
    },
    "031e8b48-e72d-34dd-b344-db689802e56e": {
      "content": "let [])",
      "doc": "Create a variable",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "let",
      "matches": {
        "let": true
      }
    },
    "0326ebd7-2310-3b02-a320-00a40987a014": {
      "content": "fun ${1} => ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "032cec84-1b95-317d-be8a-c2b9a1fe742a": {
      "content": "if ${1}err != nil {\n\treturn fmt.Errorf(\"${2} %w\", err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error handling with fmt.Errorf",
      "matches": {
        "errwr": true
      }
    },
    "032d9cbb-a82a-3782-b807-82e2ba5df79c": {
      "content": "${1:type}(${2:scope}): ${3:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "conventional commit",
      "matches": {
        "cc": true
      }
    },
    "032ea219-a3f8-3096-9477-2cc6b3466188": {
      "content": "${1}:\ndeclare\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare named block",
      "matches": {
        "decn": true
      }
    },
    "0334c5be-c5ab-39f5-9214-f011c54b9f02": {
      "content": "background-size auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      }
    },
    "0334e2d5-3ffe-367b-8515-70cef15da4d3": {
      "content": "erlang:display(${0}),",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      }
    },
    "0337fb4f-2276-3127-be5a-53151c3b879a": {
      "content": "divisibleby:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      }
    },
    "033c2146-e15b-371d-9d2e-0056fefcd16c": {
      "content": "v:version > ${1} || (v:version == $1 && has('patch${2}'))",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-version-check",
      "matches": {
        "version": true
      }
    },
    "033fcc9b-3a66-34aa-9ee7-57d3ad0f3185": {
      "content": "${fn:toLowerCase(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lc": true
      }
    },
    "033fd266-a16f-3909-8752-1000a0a8830a": {
      "content": "text-justify kashida",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      }
    },
    "03402d26-09f5-3f00-9b2b-37731302e2ee": {
      "content": "spyOn(${1:object}, \"${2:method}\").andCallFake(${3:function})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and call fake (coffee)",
      "matches": {
        "scf": true
      }
    },
    "0340b39e-fcc5-3287-9528-3e667c992d13": {
      "content": "@interface ${1:NSObject} (${2:MyCategory})\n@end\n\n@implementation $1 ($2)\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cat": true
      }
    },
    "0347ab21-0fb5-3661-9b22-48ffac2cbe04": {
      "content": "${1:public} ${2:int} ${3} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "0348be47-68d5-3385-a010-22c21d4a734c": {
      "content": "list-style-type: square",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      }
    },
    "03501854-a359-3155-9869-fb8160142b33": {
      "content": "${1:obj}.prev('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prev": true
      }
    },
    "03565788-184d-33f1-8633-6603569ace94": {
      "content": "def test_${1:case_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deft": true
      }
    },
    "03577fa6-4361-3a8f-be0b-d1ee80d32ec6": {
      "content": "@moduledoc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdocf": true
      }
    },
    "0358f554-640f-3c52-835b-c3ad7dab2e0e": {
      "content": "emit('${1:event_name}', ${2:args});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emit": true
      }
    },
    "03643843-fb1b-3b3e-b272-61f3d3271a66": {
      "content": "border-collapse: collapse",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      }
    },
    "036e62d2-96b4-3851-9772-f78ab68569eb": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport Vue from 'vue'\n\n\texport default Vue.extend({\n\t\t${0}\n\t})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Typescript",
      "matches": {
        "vbase-ts": true
      }
    },
    "03713787-b946-31f9-a8ec-5bbd9cb714d6": {
      "content": "_.matchesProperty(${path}, ${srcValue})",
      "doc": "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.find(objects, _.matchesProperty('a', 4));\n// => { 'a': 4, 'b': 5, 'c': 6 }\n\nCreates a function that performs a partial deep comparison between the\nvalue at `path` of a given object to `srcValue`, returning `true` if the\nobject value is equivalent, else `false`.\n\n**Note:** Partial comparisons will match empty array and empty object\n`srcValue` values against any array or object value, respectively. See\n`_.isEqual` for a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-matchesproperty",
      "matches": {
        "lodash matchesproperty": true
      }
    },
    "0376d996-9bd3-3e6f-ac00-641a60662e57": {
      "content": "padding-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      }
    },
    "037b224e-610f-3308-9740-09928fe70e7c": {
      "content": "empty-cells: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "037fcc1d-a19f-3b5a-a8a8-094e112c2a53": {
      "content": "any(${1:mask}${2:, dim=${3:1}})",
      "doc": "any",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "any",
      "matches": {
        "any": true
      }
    },
    "03817c66-4d02-359e-999a-fd56e4032485": {
      "content": "while let ${1:Some(pat)} = ${2:expr} {\n    ${0:unimplemented!();}\n}",
      "doc": "while let … = … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "while-let",
      "matches": {
        "while-let": true
      }
    },
    "03831936-2b31-3665-841f-f33bd8670024": {
      "content": "try\n\t${1}\nwith ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "03878abb-38b1-3f2b-9363-629b46363a6e": {
      "content": "_.nthArg(${n})",
      "doc": "var func = _.nthArg(1);\nfunc('a', 'b', 'c', 'd');\n// => 'b'\n\nvar func = _.nthArg(-2);\nfunc('a', 'b', 'c', 'd');\n// => 'c'\n\nCreates a function that gets the argument at index `n`. If `n` is negative,\nthe nth argument from the end is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ntharg",
      "matches": {
        "lodash ntharg": true
      }
    },
    "03885393-7791-3564-8810-86b1ef3feabe": {
      "content": "write(*,*) '$1 = ', $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dpr": true
      }
    },
    "0388d7a6-9bf6-3e58-83c5-1546eb8296d2": {
      "content": "SELECT ${1:attribute(s)} FROM ${2:tableName};",
      "doc": "Regular select",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "select",
      "matches": {
        "select": true
      }
    },
    "038b8726-6b05-34bf-b474-51d45fa3b403": {
      "content": "array.required()",
      "doc": "array.required(message?: string | function): Schema\n\nThe same as the mixed() schema required, except that empty arrays are also considered 'missing' values.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-required",
      "matches": {
        "yup array required": true
      }
    },
    "038ba708-4cf7-3539-9218-9e40178ae4e6": {
      "content": "when {\n\tchangelog '${1:changelog}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangelog": true
      }
    },
    "039ee399-852a-35e5-a02d-a00a0111157b": {
      "content": "${1:callbacks}.fired()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfired": true
      }
    },
    "03a1a972-364c-367e-9549-95e3a7b957b0": {
      "content": "assert_nothing_thrown do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asntd": true
      }
    },
    "03a22ac2-c4d6-3398-9ad4-1e8bc912807e": {
      "content": "(for/and ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/and",
      "matches": {
        "fora": true
      }
    },
    "03a3a2bc-db3b-316f-bda7-5361aab997e4": {
      "content": "left: ${1},",
      "doc": "left",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "left",
      "matches": {
        "l": true
      }
    },
    "03a6f5de-2349-372d-a658-623be05e4b18": {
      "content": "<see cref=\"${1}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<s": true
      }
    },
    "03ac3dfe-ef80-3721-a442-12d81689b2c3": {
      "content": "setTimeout(() => {\n\t$0\n}, ${1:timeout});",
      "doc": "Set Timeout Function",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Set Timeout Function",
      "matches": {
        "settimeout": true
      }
    },
    "03b1eaea-c97e-3f1b-b442-816239beed84": {
      "content": "{{ $1 }}",
      "doc": "Variable autocomplete",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "var",
      "matches": {
        "var": true
      }
    },
    "03b5b5c8-7b13-3b06-956f-c255745d2b6d": {
      "content": "IF ${1:CONDITION}\n   $0\nELSE\n   \nEND-IF",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "IF ELSE",
      "matches": {
        "IEE": true,
        "IF": true
      }
    },
    "03b60698-b549-32e5-bfd6-ba5044c2064d": {
      "content": "for (${1:i} in ${2:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "fore": true
      }
    },
    "03ba45a7-814e-3d85-87a1-eb7bfd7491d6": {
      "content": "match '${1:${2::controller}${3:/${4::action}${5:/${6::id}${7:(.:format)}}}}'${8: '${9:$2}#${10:$4}'${11:, as: :${12:$10}}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "03bdb3d9-eca1-39e2-be84-93138999bdb7": {
      "content": "format!(\"${1:\\{\\}}\", ${0:TARGET});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "format!",
      "matches": {
        "fm": true
      }
    },
    "03c1d17d-f09b-339d-87df-5317a127693a": {
      "content": "saveStrings(${1:filename}, ${0:strings});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveStrings": true
      }
    },
    "03c348da-606e-3de8-8702-b8c000e4853e": {
      "content": ".. _${1:#:NAME}:\n${2:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "label",
      "matches": {
        "label": true
      }
    },
    "03cb2dbb-fbcb-3a2e-a6ad-96a1de6fc1f4": {
      "content": "border-style: wave;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      }
    },
    "03cba343-5fab-3a60-9a74-4d75d226d3d9": {
      "content": "{${1:expression}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression",
      "matches": {
        "svelte expression": true,
        "svexp": true
      }
    },
    "03cc7223-2d37-337a-a01f-b32567ccd605": {
      "content": "if ${1:test}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "03cdaa55-a902-37cc-a414-2218131320fe": {
      "content": "$this->db->delete(${1:table}, ${2:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_delete": true
      }
    },
    "03d4be34-ac26-389d-b0a6-64b2e25b05bd": {
      "content": "@moduledoc ~S\"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdocs": true
      }
    },
    "03d91b2d-7c0d-3ec8-b1f5-61cd132f0a4e": {
      "content": "font-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      }
    },
    "03dc81e9-9c55-30bd-b54d-1649cef1c4b8": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else}\n\t${3: <!-- else content here -->}\n{/if}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-block",
      "matches": {
        "svelte if else": true,
        "svif-else": true
      }
    },
    "03df6193-b49d-3d2e-b5de-5179f67d3f9e": {
      "content": "typeof ${1:source} === '${2:undefined}'",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "typeof",
      "matches": {
        "to": true
      }
    },
    "03e547b9-455d-369d-b6dc-527d3717c8c9": {
      "content": "const { ${1:name} } = await ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const destructuring assignment awaited",
      "matches": {
        "cda": true
      }
    },
    "03f8c82b-d640-3e0f-a060-ff5ae5925979": {
      "content": "default:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "03fa07f4-231c-3f3d-b3da-ba2cd8944840": {
      "content": "${1:FIELDNAME} = models.TimeField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      }
    },
    "03fe251b-4c27-3fe7-a031-e9b005fcb9c0": {
      "content": "watch(() => ${1:foo}, (newValue, oldValue) => {\n\t${2}\n})",
      "doc": "Vue Composition api - watcher single source",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watch - single source",
      "matches": {
        "v3watch": true
      }
    },
    "04030926-bdee-322c-8c24-e7ea0723de1e": {
      "content": "text-emphasis: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      }
    },
    "04076867-095d-308e-a864-aa95c49b9a58": {
      "content": "background-repeat: repeat-y;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-repeat: repeat-y",
      "matches": {
        "bgry": true
      }
    },
    "040efd6f-294c-3af7-a09e-16ab187aa0db": {
      "content": "function ${1:function_name}() {\n\t${0:# function_body}\n}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffun": true
      }
    },
    "0411fcb8-1413-3ab8-99d0-4afb40b9a93c": {
      "content": "${1:#:value_name}: ${0:#:value},",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": ":,",
      "matches": {
        "key-value": true
      }
    },
    "041cce5d-5df3-3cd5-adeb-447aa7253d8e": {
      "content": "require IEx; IEx.pry\n${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      }
    },
    "042191c3-d58e-3c3d-80ef-48ea9f0189b2": {
      "content": "FUNCTION SIGN(${1:number})$0",
      "doc": "sign representation of number as -1, 0, 1",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-SIGN",
      "matches": {
        "FUNCTION SIGN": true
      }
    },
    "04237080-aa0b-352b-b2d2-717b44dac122": {
      "content": "(define-values (${1}) (${0}))",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define-values",
      "matches": {
        "defv": true
      }
    },
    "0427f430-d680-37ca-a90e-55e3c8d6284b": {
      "content": "@moduledoc \"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdoc": true
      }
    },
    "042a3527-94cc-3b6a-8f9f-18319575146d": {
      "content": "%% @spec ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%s": true
      }
    },
    "042a4f84-4fd8-3600-97cb-d109731587e6": {
      "content": "procedure ${1:name}\n\t${0}\nend procedure $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      }
    },
    "042a7f66-f918-395f-b2f6-cc4dfe725b4a": {
      "content": "align-self: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      }
    },
    "04395cc4-dd11-3e6a-9038-485792588eda": {
      "content": "@online{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    url = {${4}},\n    note = {year/date},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@online": true,
        "online": true
      }
    },
    "0439ada2-d047-31b2-949d-80bc33f313e0": {
      "content": "useEffect(() => {\n$0 return () => {\n$0\n\t}\n})",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffectUnMount",
      "matches": {
        "usfu": true
      }
    },
    "04402a5a-586c-335e-8cfb-54a6a519166d": {
      "content": "test \"${1}\" <| \\_ -> $0",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "0445b7a3-a358-35b5-a4fb-a6f9631b64f2": {
      "content": "{% import \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "import": true
      }
    },
    "044973b7-afff-32fe-b41f-3870ee18a757": {
      "content": "\\${5:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:default}",
      "matches": {
        "5:": true
      }
    },
    "0449aa61-dda4-3cfc-a034-3f01e076c6d1": {
      "content": "if (${1:condition}) {\n\t${2:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "044ba6c4-2e83-3098-a0e4-19b107c2e58a": {
      "content": "Js.timeEnd(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.timeEnd",
      "matches": {
        "cte": true
      }
    },
    "04522280-fa01-306a-838b-dab66be9c2e6": {
      "content": "-moz-border-image: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      }
    },
    "04603d37-bb3f-377c-af77-d09c4a154371": {
      "content": "{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.${1:value_key}.service.annotations | indent 4 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "annotations_spec": true
      }
    },
    "04651a01-7484-3356-a342-49bb3c1d85d4": {
      "content": "Set Suite Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Suite Variable",
      "matches": {
        "ssv": true
      }
    },
    "04742dc7-a83e-3e95-8880-f3fbf41a5107": {
      "content": "\\begin{align*}\n\t${0:${VISUAL}}\n\\end{align*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Align without a number",
      "matches": {
        "alnn": true
      }
    },
    "0479124e-323a-398e-9086-b2bdf38a5343": {
      "content": "defer func() {\n\t${0:${VISUAL}}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer func() { ... }",
      "matches": {
        "def": true
      }
    },
    "047aa3ad-d706-34d2-8654-aadd1358e03e": {
      "content": "if (${1:true}) ${0};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      }
    },
    "048e7c4a-ea2d-39e8-91b3-0e7e2a4e27ca": {
      "content": "overflow-style: marquee;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      }
    },
    "049a8f5c-7a29-382d-9e7d-efb037c9388e": {
      "content": "#+BEGIN_LATEX\n$0\n#+END_LATEX",
      "doc": "latex",
      "filetype": "org",
      "grammar": "lsp",
      "label": "latex",
      "matches": {
        "latex": true
      }
    },
    "049b4e85-96b4-3bf5-8508-04eafc055a5b": {
      "content": "_.sortedLastIndexBy(${array}, ${value}, ${iteratee})",
      "doc": "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 1\n\n// The `_.property` iteratee shorthand.\n_.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n// => 1\n\nThis method is like `_.sortedLastIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindexby",
      "matches": {
        "lodash sortedlastindexby": true
      }
    },
    "049c5b43-55fd-3bac-90ab-18a72d4073be": {
      "content": "using terms from ${1:#:app}\n\t${0:TARGET}\nend using terms from",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "terms": true
      }
    },
    "049cb16c-547c-3ec4-af17-5711efb3584f": {
      "content": "- (${1:unsigned int})${2:thing};\n- (void)set${2}:($1)new${2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Interface:AccessorsForPrimitiveType",
      "matches": {
        "iacc": true
      }
    },
    "049fc2f2-159b-3bd3-bcfd-f82b0acd58a9": {
      "content": "Main.@infiltrate",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "Infiltrator breakpoint",
      "matches": {
        "inf": true
      }
    },
    "04a27b3e-b4ba-3d1c-8e6d-213f25b55d49": {
      "content": "$this->${1:method}()->shouldBe${2:String|Array|Bool}();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeString|Array|Bool()",
      "matches": {
        "sbscalar": true
      }
    },
    "04a42f62-3800-38be-97eb-a803f830dd8f": {
      "content": "hasattr(${1:#:obj}, ${2:#:attr})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "hasattr(..., ...)",
      "matches": {
        "hasattr": true
      }
    },
    "04acc712-bee8-31c8-9ac9-278544deff8a": {
      "content": "${1:#:object} = require('$1')",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "04b59e80-f67a-3593-a823-f51e48604bd2": {
      "content": "if let ${1:value} = ${2:optional} {\n\t$0\n}",
      "doc": "if statement with optional binding",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "if let",
      "matches": {
        "iflet": true
      }
    },
    "04b6c40e-246b-3a12-b4ce-1259f7b8260b": {
      "content": "expect(${1:target}).not.toBeTruthy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be truthy (js)",
      "matches": {
        "nott": true
      }
    },
    "04b74cc4-5b5e-33e0-a6c2-f62704584bae": {
      "content": "v-if='${1:condition}'",
      "doc": "Expects: any",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-if",
      "matches": {
        "vIf": true
      }
    },
    "04be88d8-e3ea-342f-9108-05d8b9e0931f": {
      "content": "private ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts private method",
      "matches": {
        "tprmet": true
      }
    },
    "04c86dd4-87ae-33f1-832c-407c0e6815cf": {
      "content": "error ${1:name}(${2:type} ${3:name} $0);",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "error declaration",
      "matches": {
        "error": true
      }
    },
    "04c89619-dec3-3962-8c6e-d3fca00b7d9a": {
      "content": "-moz-box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      }
    },
    "04c8cf8d-2b57-35b2-8b7a-03848a8efb39": {
      "content": "resize: vertical;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      }
    },
    "04d04545-0de8-3b63-ac9c-9e8ab7ff6aed": {
      "content": "{% nav ${1:item} in ${2:items} %}\n\t$3\n{% endnav %}\n$0",
      "doc": "nav",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "nav",
      "matches": {
        "nav": true
      }
    },
    "04d16d1f-64e2-36e9-9497-0120b0cb7c33": {
      "content": "user { \"${1:user}\":\n\tensure      => present,\n\tcomment     => \"${2:$1}\",\n\tmanagehome  => true,\n\thome        => \"${0:/home/$1}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "user": true
      }
    },
    "04d22b20-73f1-33fc-8780-b93c3bc90166": {
      "content": "gl.glVertex3f(${1:0.0f}, ${2:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl vertex 3f",
      "matches": {
        "gl": true
      }
    },
    "04d25043-3043-39f5-921f-e112c63ab8c8": {
      "content": "logger.error { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.error",
      "matches": {
        "loge": true
      }
    },
    "04db1e10-6420-3fb2-a5b2-88fa6e095656": {
      "content": "@keyframes ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyf": true
      }
    },
    "04de7ad7-182e-33df-9163-a2402133a11f": {
      "content": "delimiters",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "delimiters",
      "matches": {
        "delimiters": true
      }
    },
    "04ebf54b-5b7b-3313-8acc-6e38e91da001": {
      "content": "debug_assert_eq!(${1}, ${2});",
      "doc": "debug_assert_eq!(…, …)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "debug_assert_eq",
      "matches": {
        "debug_assert_eq": true
      }
    },
    "04f18572-8559-3111-8045-a3686ae14549": {
      "content": "assert_no_difference \"${1:Model}.${2:count}\" do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_no_difference",
      "matches": {
        "asnd": true
      }
    },
    "04f2d33c-3e85-3ee9-8058-05148571798c": {
      "content": "startDrag(${1:#:target}, ${2:#:lockcenter}, ${3:#:l}, ${4:#:t}, ${5:#:r}, ${6:#:b} );",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dr": true
      }
    },
    "04f5c021-859f-3ae0-ae07-960b946f67c4": {
      "content": "@property\ndef ${1:foo}(self):\n    \"\"\"${2:The $1 property.}\"\"\"\n    ${3:return self._$1}\n@${4:$1}.setter\ndef ${5:$1}(self, value):\n    ${6:self._$1} = value",
      "doc": "New property: get and set via decorator",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New property",
      "matches": {
        "property": true
      }
    },
    "04fdb087-ba15-3af6-baa6-e75c722d12a8": {
      "content": "margin-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      }
    },
    "0512a8ff-71c7-3511-afb9-db647fecefc9": {
      "content": "border-bottom none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      }
    },
    "0522f2ff-52db-379e-ac92-e54cc0c7389d": {
      "content": "beforeRouteLeave (to, from, next) {\n\t${1:// ...}\n}",
      "doc": "beforeRouteLeave (to, from, next) { }",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeRouteLeave",
      "matches": {
        "beforeRouteLeave": true
      }
    },
    "052e689a-f2dd-305d-9639-a683c9920f20": {
      "content": "border: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      }
    },
    "05362171-1299-38fc-8029-d10cebe9372b": {
      "content": "float ${1:f}${2: = }${0:0.0f};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "float": true
      }
    },
    "053bd8b7-d062-3ef1-a879-68e04629fc47": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      }
    },
    "0541d133-6177-34ca-8bb1-b2e307350515": {
      "content": "grid-auto-flow: ${1:row};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      }
    },
    "0546564d-7fed-37f4-bc98-a908a3a9b2a1": {
      "content": "switch (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "054904d6-c828-3cb7-8b7f-a75fca24fd2d": {
      "content": "const ${1:name} = yield ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const assignment yielded",
      "matches": {
        "cy": true
      }
    },
    "054b3d43-189a-38e8-a192-37b3341d5f50": {
      "content": "<LocationMatch \"${1:regex}\">\n        ${2:config}\n</LocationMatch>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "locationmatch": true
      }
    },
    "054c0c75-e904-306d-a7a5-38d17f6f7b3e": {
      "content": "color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      }
    },
    "055a6a25-9c07-3743-ab89-589a046021c1": {
      "content": "const ${1} = require('${2:module_name}');",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      }
    },
    "055a6c89-fba2-3e57-89ac-67f682dc2e2b": {
      "content": "annote = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "annote": true
      }
    },
    "055e3583-11ad-3145-9f65-87be929065e9": {
      "content": "| url_encode }}",
      "doc": "String filter: url encode",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter url encode",
      "matches": {
        "url_encode": true
      }
    },
    "05662821-5681-3934-a3ee-c46aeb8c5eab": {
      "content": "${1:name}.foldRight(${0:first}) {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fldr": true
      }
    },
    "056b3cb7-ee33-3692-a975-12f06373cc8b": {
      "content": "<code>$0</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML code comment",
      "matches": {
        "<c": true
      }
    },
    "0575151d-ab37-3f38-9995-815f7ef8ab31": {
      "content": "immutable",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imm": true
      }
    },
    "0577d820-3225-3f28-bd4c-1c9145fd3d67": {
      "content": "scope(failure) ${1}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scf": true
      }
    },
    "057db740-ef25-398f-9939-e0b9ffd633f0": {
      "content": "flexDirection: '${1:column}',",
      "doc": "flexDirection",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flexDirection",
      "matches": {
        "flex": true
      }
    },
    "058252ed-5926-370a-a9b9-d7359e176b8b": {
      "content": "content close-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      }
    },
    "05873eee-74cb-3513-849a-e7f399104be0": {
      "content": "counter-reset: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      }
    },
    "05967e94-6915-357e-bd66-3b609ea804dc": {
      "content": "float: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "float: right",
      "matches": {
        "flr": true
      }
    },
    "05972e29-7445-3512-b1e5-7752fe2e9dce": {
      "content": "once('${1:event_name}', function(${2:stream}) {\n  ${3}\n});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "once": true
      }
    },
    "0598d6e9-d65b-366c-bba6-497b1fb3de96": {
      "content": "<nav>\n    ${1}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav": true
      }
    },
    "059f75a5-e05f-34b2-9df3-1ef1084556ff": {
      "content": "#include \"${1}\"",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "05a002b7-05ee-3380-85f5-b5b977f9536f": {
      "content": "import DS from 'ember-data';\n\nexport default DS.Model.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import DS from 'ember-data';",
      "matches": {
        "emod": true
      }
    },
    "05a01b01-12c8-3e3b-859d-cd2ce8ea1f24": {
      "content": "border-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      }
    },
    "05a7871e-167c-3e03-a461-a649df4f3f34": {
      "content": "| url_param_escape",
      "doc": "String filter: url param escape",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter url param escape",
      "matches": {
        "url_param_escape": true
      }
    },
    "05aa2ae4-0ebd-3a1a-a5fb-781072eef493": {
      "content": "${1:public} function __construct(${2:${3:Type} \\$${4:var}${5: = ${6:null}}}) {\n\t\\$this->${4:var} = \\$${4:var};$0\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "lsp",
      "label": "function __construct",
      "matches": {
        "con": true
      }
    },
    "05ac8707-3a60-3468-9f7b-a0f72e0b6f38": {
      "content": "render nothing: ${1:true}, status: ${0:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rns": true
      }
    },
    "05b7357a-aef4-37ab-bc06-fd80799e79f9": {
      "content": "guard let ${1:value} = ${2:optional} else {\n\t$0\n}",
      "doc": "guard statement with optional binding",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "guard let",
      "matches": {
        "guardlet": true
      }
    },
    "05b74f01-d1c8-34b2-ae31-4d67cb302567": {
      "content": "${1:obj}.die(${2:event}, ${3:handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "die": true
      }
    },
    "05bb3d97-f1ec-3094-af7d-495c15e99454": {
      "content": "@property (${1:retain}) ${2:NSSomeClass} ${3:*$2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      }
    },
    "05bb48ab-c0f0-3a2d-ad25-744ab36157ff": {
      "content": "grid-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      }
    },
    "05bed7cf-7e30-3d37-8dce-b9a9747d818c": {
      "content": "getter! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r!": true
      }
    },
    "05bfd93d-ce13-30f9-b400-a721b4247aa3": {
      "content": "static ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      }
    },
    "05c49057-221e-3ff3-ae5c-917faef49856": {
      "content": "file(name: \"${1:FILE}\" , description: \"${2:Choose a file to upload}\")${0}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramfile": true
      }
    },
    "05ce963f-8af0-391b-959c-d34bcd6eabd4": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-shape-required",
      "matches": {
        "prop-types shape required": true,
        "ptshr": true
      }
    },
    "05de0b76-24a1-3dd4-8623-ffd67a6b61dc": {
      "content": "def method_missing(meth, *args, &blk)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defmm": true
      }
    },
    "05de9e65-269c-3851-be31-bb892d1d7269": {
      "content": "t.date :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcda": true
      }
    },
    "05dfb2b6-b35f-3d26-a855-f571a810583b": {
      "content": "padding-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "05dfd5fc-2c59-305a-8c37-023f540c6e73": {
      "content": "{%- tablerow ${1:item} in ${2:collection} cols: ${3:2} -%}\n\t$4\n{%- endtablerow -%}",
      "doc": "Iteration tag: tablerow, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag tablerow, whitespaced",
      "matches": {
        "tablerow-": true
      }
    },
    "05e22aa3-98f8-3648-97a9-04e5283f04dd": {
      "content": "{% css %}\n\t${0}\n{% endcss %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig css",
      "matches": {
        "css": true
      }
    },
    "05e868f3-8acc-3c4b-b2c3-732f359ec8c7": {
      "content": "<ol id=\"${1}\">\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol#": true
      }
    },
    "05f44e06-2527-3a5f-a600-041423cdfb11": {
      "content": "asm {\n\t${1}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      }
    },
    "05f4de51-fb18-3815-a589-58b68fde098a": {
      "content": "(for/or ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/or",
      "matches": {
        "foro": true
      }
    },
    "05f7d183-5d7c-3e05-92e9-2e3ea4233e5c": {
      "content": "{% raw %}\n\t\t$1\n{% endraw %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "escaped block",
      "matches": {
        "raw": true
      }
    },
    "05fbd60e-109b-3505-b32a-44c03375691d": {
      "content": "<figcaption>${0}</figcaption>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figcaption": true
      }
    },
    "0611be52-908a-35a2-8dac-73775f389d32": {
      "content": "it { should allow_value(${1}).for :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isav": true
      }
    },
    "06139d92-402d-398c-8fc3-13927e46b238": {
      "content": "expect(${1:target}).not.toBeGreaterThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not be greater than (js)",
      "matches": {
        "notg": true
      }
    },
    "06150a44-9c8e-387d-9bd5-5edd40156a41": {
      "content": "expect(${1:target}).toEqual(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to equal (coffee)",
      "matches": {
        "ee": true
      }
    },
    "061b4c84-4b2e-3090-95f5-06363b7f7a15": {
      "content": "public import ${1:/*module*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "public import (pimp)",
      "matches": {
        "pimp": true
      }
    },
    "061e5b98-dfaa-3db8-9a2a-4d3b21bdc651": {
      "content": "${1:callbacks}.empty()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cempty": true
      }
    },
    "0622500f-4c39-3915-8caa-9fd447b035d3": {
      "content": "font-weight lighter",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      }
    },
    "062257e9-2148-3d7a-a566-9cd2c1fd464e": {
      "content": "grid-auto-rows min-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      }
    },
    "0623cbdd-f576-3ff9-aab4-34e4fd27e222": {
      "content": "${1:el}.setAttribute('${2:attr}', ${3:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "setAttribute",
      "matches": {
        "hesa": true
      }
    },
    "0626a62b-e55c-3ab9-bde8-c2b9194ce98b": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{:else}\n\t${4: <!-- empty list -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-else-block",
      "matches": {
        "sveach-else": true,
        "svelte each else": true
      }
    },
    "062eef2e-f905-31e6-993b-0c3c61336715": {
      "content": "function monetary-decimal-point()$0",
      "doc": "character used to separate the integer portion from the fractional part of a monetary currency value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-monetary-decimal-point",
      "matches": {
        "function monetary-decimal-point": true
      }
    },
    "062f2182-81df-3ba2-b750-e2456dfc782e": {
      "content": "float: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      }
    },
    "06331f03-440a-3ef7-8141-ebd329398e9f": {
      "content": "module ${1:Name} = {\n\t${2:// Module contents}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Module",
      "matches": {
        "module": true
      }
    },
    "063935fc-d911-38a8-b7a0-ffa7c2707222": {
      "content": "given ${1:$var} {\n  when ${2:condition} {\n\t  ${3:# code block ...}\n  }\n  ${4}\n  default {\n\t  ${5}\n  }\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "0647e502-b268-3277-a2c9-4b2f55517ea9": {
      "content": "grep(${1:/pattern/}) { |${2:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      }
    },
    "064b0840-36f7-30f4-88e7-8ac102afa13c": {
      "content": "@override\nvoid reassemble(){\n  super.reassemble();\n  ${0:}\n}",
      "doc": "Called whenever the application is reassembled during debugging, for example during hot reload.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Reassemble",
      "matches": {
        "reassemble": true
      }
    },
    "064d2010-7219-316e-8975-081e9dd40e9e": {
      "content": "import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nexport class PreloadSelectedModulesList implements PreloadingStrategy {\n\tpreload(route: Route, load: Function): Observable<any> {\n\t\treturn route.data && route.data['${1:preload}'] ? load() : of(null);\n\t}\n}\n$0",
      "doc": "Angular opt-in preload strategy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-opt-in-preload-strategy",
      "matches": {
        "a-preload-opt-in-strategy": true,
        "angular opt-in preload strategy": true
      }
    },
    "0651cbbe-84a8-32a2-8245-0949e3492a6e": {
      "content": "background-clip padding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      }
    },
    "065ee77d-74cc-34e6-93e5-9763ca9c35d8": {
      "content": "%% @doc ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%d": true
      }
    },
    "06621b93-829a-3d54-8ac6-b44857f46b3b": {
      "content": "{ path: '', pathMatch: 'full', redirectTo: '${1:path}' },$0",
      "doc": "Angular default route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Default Route Path",
      "matches": {
        "a-route-path-default": true
      }
    },
    "067813a1-5b1e-3834-9653-394779e7c0cc": {
      "content": "from django.db.models.signals import ${1|pre_init,post_init,pre_save,post_save,pre_delete,post_delete,m2m_changed,class_prepared,Management signals,pre_migrate,post_migrate|}",
      "doc": "Signals for Django Model",
      "filetype": "models",
      "grammar": "lsp",
      "label": "isignals",
      "matches": {
        "isignals": true
      }
    },
    "06791441-d159-38fd-8d2b-b84b8d631796": {
      "content": "<rt>${0}</rt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      }
    },
    "067abe8d-3ae8-3999-a81e-794ed0a01e41": {
      "content": "def create\n\t@${1:model_class_name} = ${2:ModelClassName}.new($1_params)\n\n\trespond_to do |format|\n\t\tif @$1.save\n\t\t\tflash[:notice] = '$2 was successfully created.'\n\t\t\tformat.html { redirect_to(@$1) }\n\t\t\tformat.json  { render json: @$1, status: :created, location: @$1 }\n\t\telse\n\t\t\tformat.html { render action: 'new' }\n\t\t\tformat.json  { render json: @$1.errors, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defcreate": true
      }
    },
    "067cdaf3-59f4-348d-92a4-e8f5901827a7": {
      "content": "% if ${1:condition}:\n\t${2:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if ",
      "matches": {
        "if": true
      }
    },
    "06822b19-9263-3e31-be14-8d34a4c083e0": {
      "content": "{%- cycle '${1:group name}': '${2:odd}', '${3:even}' -%}",
      "doc": "Iteration tag: cycle group, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag cycle group, whitespaced",
      "matches": {
        "cyclegroup-": true
      }
    },
    "06823467-5a63-3fdb-a777-4520ad6c6d04": {
      "content": "tuple(${1:/*args*/})",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "tuple (tup)",
      "matches": {
        "tup": true
      }
    },
    "0684fa05-7695-30f8-8d3c-0e1ba361aae9": {
      "content": "<%= javascript_include_tag ${0::all} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jit": true
      }
    },
    "0696c26b-d211-3da6-9839-4429edce3641": {
      "content": "const ${1:router} = new VueRouter({\n\t$2\n})$0",
      "doc": "const router = newVueRouter({ })",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "newVueRouter",
      "matches": {
        "newVueRouter": true
      }
    },
    "069d50d5-cdfb-3119-84d4-197885b41518": {
      "content": "else if(${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "069eb4c1-5636-357a-8dc6-a0e6d4618c0b": {
      "content": "elif ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      }
    },
    "06a1884b-5d32-32a5-aa65-c23325515d5f": {
      "content": "content normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      }
    },
    "06a60a11-f014-3d8d-b428-1c348e8a7e4c": {
      "content": "if ${1:value}, ok := ${2:map}[${3:key}]; ok == true {\n\t$4\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "lsp",
      "label": "if key in a map",
      "matches": {
        "om": true
      }
    },
    "06aa1cd4-f4a0-31b8-a1ac-e8c8efcc779e": {
      "content": "@moduledoc ~S\"\"\"\n$0\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "moduledoc s",
      "matches": {
        "mdocs": true
      }
    },
    "06aec937-b1b9-312b-9fd3-6d1ba9094e21": {
      "content": ".eq.",
      "doc": "Equal",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "eq",
      "matches": {
        "eq": true
      }
    },
    "06b723d7-9c17-30c1-a21a-1f286ad3bfd2": {
      "content": "do {\n\t$1\n} catch ${2:Http}.Error => error {\n\t$3\n}",
      "doc": "do expressions are for two things: handling asynchronous computations that might fail, for example when loading something with a request, or executing asynchronous expressions sequentially.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Do",
      "matches": {
        "do": true
      }
    },
    "06be18b4-36f6-3acc-87ba-4faa8a898316": {
      "content": "<label>${1}: <input type=\"${2:TARGET}\" /></label>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label": true
      }
    },
    "06c8a113-c45e-33f2-ade3-1fd362afc7dd": {
      "content": "<.. $1",
      "doc": "Extend, Include",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Extend Arrow (Right)",
      "matches": {
        "extend": true
      }
    },
    "06c901cc-ecd4-366a-b2b6-28d25d907953": {
      "content": "empty-cells: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "06cadb06-8e9c-3661-8469-43366cf2970d": {
      "content": "Ada.Text_IO.Get_Line(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get_Line",
      "matches": {
        "get_line": true
      }
    },
    "06cbcb16-16ee-38b4-8dfb-d283c013ba5b": {
      "content": "<c:out value=\"${1}\" default=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cout": true
      }
    },
    "06cedc3e-e564-35e0-bd31-4a0036530e39": {
      "content": "<iframe src=\"$1\">$2</iframe>$3",
      "doc": "HTML - Defines an inline sub window",
      "filetype": "html",
      "grammar": "lsp",
      "label": "iframe",
      "matches": {
        "iframe": true
      }
    },
    "06d94d4a-2ab9-376e-a79f-1687027aee71": {
      "content": "wordwrap:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      }
    },
    "06dc4038-d388-3b3e-a9ce-ff611cd2bff3": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-local",
      "matches": {
        "svelte transition local": true,
        "svtl": true
      }
    },
    "06e413cb-71c8-3e10-9b58-d36ebd593150": {
      "content": "${1:firstFunction}\n\t->${2:secondFunction}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "pipe functions",
      "matches": {
        "fnpp": true,
        "funcpp": true,
        "pipe": true
      }
    },
    "06e8fc16-899f-337f-b044-e6c89dd3c26a": {
      "content": "${1:a} ? ${2:b} : ${3:c}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Ternary operator",
      "matches": {
        "to": true
      }
    },
    "06ec2f6f-edcb-3720-ad5a-1bc52c88c1e6": {
      "content": "@include ${0:mixin};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "@include",
      "matches": {
        "inc": true
      }
    },
    "06ed93fc-7d6a-3290-a192-d23c913fbea9": {
      "content": "grid-template ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      }
    },
    "06f06b3b-0288-33c2-b141-5e3e86da3ee7": {
      "content": "if err != nil {\n\tlog.Fatal(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { log.Fatal(err) }",
      "matches": {
        "errl": true
      }
    },
    "06f79f8f-88cc-3451-8b88-62277a3f824b": {
      "content": "<head>\n    <meta charset=\"${1:utf-8}\">\n    <title>${2}</title>\n<style>\n    ${3}\n</style>\n    ${4}\n</head>${5}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "head": true
      }
    },
    "06fb22e3-ac30-3b24-9109-079e4ccc8729": {
      "content": "opacity: ${1},",
      "doc": "opacity",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "opacity",
      "matches": {
        "op": true
      }
    },
    "06ff6f27-6185-3e17-845a-7aa550b15f9b": {
      "content": "place-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      }
    },
    "0707bcf0-a478-34f6-9a8e-829dfe65ad0c": {
      "content": "_.tail(${array})",
      "doc": "_.tail([1, 2, 3]);\n// => [2, 3]\n\nGets all but the first element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tail",
      "matches": {
        "lodash tail": true
      }
    },
    "070e0622-8923-3cd5-9a15-100374118538": {
      "content": "v-for=\"${1:item} in ${2:items}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-for-without-key",
      "matches": {
        "vForWithoutKey": true
      }
    },
    "070f252c-b19a-3c96-b1b9-554abec36c14": {
      "content": "fontSize: ${1},",
      "doc": "fontSize",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "fontSize",
      "matches": {
        "fo": true
      }
    },
    "0716d835-216c-3f97-87aa-6b48077a5b5a": {
      "content": "[NSThread detachNewThreadSelector:@selector(${1:method}:) toTarget:${2:aTarget} withObject:${3:anArgument}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Detach New NSThread",
      "matches": {
        "thread": true
      }
    },
    "071dc6ce-c566-35a9-8828-d3940d75d61a": {
      "content": "<%= number_to_currency(${1}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ntc": true
      }
    },
    "071e622e-ba6c-384d-8fb1-ed0b034ab9a1": {
      "content": "def __str__(self):\n\treturn self${1: # TODO}",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "__str__",
      "matches": {
        "str": true
      }
    },
    "071edad5-ae52-3aa2-87f6-f613edc19d54": {
      "content": "<%= link_to '${1:link text...}', controller: '${2:items}', action: '${3:edit}', id: ${0:@item} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "licai": true
      }
    },
    "0731c4f1-2b26-3594-afe8-936d08525af7": {
      "content": "${1:obj}.is('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      }
    },
    "07375c53-866e-3f4a-a709-9f5129f896fa": {
      "content": "${1:map}.${2:connect} '${0:controller/:action/:id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapc": true
      }
    },
    "073a8625-dee1-3128-b6ab-5bab2e72d206": {
      "content": "+${1:mixin}(${2})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "073c39f6-f3a5-3ef0-9178-b38e638d1f69": {
      "content": "list-style-type: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: none",
      "matches": {
        "listn": true
      }
    },
    "073c8556-b599-3be6-a0d7-e1cc6a5d2ab0": {
      "content": "class ${1:name} {\n\tconstructor(${2:parameters}) {\n\t\t$0\n\t}\n}",
      "doc": "Class Definition",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Class Definition",
      "matches": {
        "class": true
      }
    },
    "073edc37-2307-332e-8840-3c64c149e208": {
      "content": "{% unless ${1:#:TARGET} %}\n  ${0:TARGET}\n{% endunless %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "unless endunless",
      "matches": {
        "unless": true
      }
    },
    "073f4b90-da5f-3bff-a7e7-4276ee35866a": {
      "content": "xhr :get, :${1:show}, id: ${2:1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xget": true
      }
    },
    "07453d46-e9d2-39d2-8b4d-8d8c0cc9ec1e": {
      "content": "{{ \"${1}\"|t }}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig translate",
      "matches": {
        "translate": true
      }
    },
    "07471201-7cf9-39ff-b181-b09f528973f8": {
      "content": "background-position-x ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      }
    },
    "0751022c-937b-3ad2-8501-3acf97d55d28": {
      "content": "display: run-in",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      }
    },
    "075111f6-bec9-36cb-8659-d931f367d6ca": {
      "content": "import * as ${2:alias} from '${1:module}';$0",
      "doc": "Imports everything as alias from the module in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importEverything",
      "matches": {
        "ime": true
      }
    },
    "07523462-e495-302b-a04b-c79a7e177d97": {
      "content": "background-size contain",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      }
    },
    "07545f78-e0c2-3110-8ea1-97e0115d1205": {
      "content": "std::stack<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stack": true
      }
    },
    "07551f3d-92b9-3870-9e11-036b17e19a13": {
      "content": "float: ${1|left,right,none|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "float",
      "matches": {
        "fl": true
      }
    },
    "0756e015-8ca3-328f-802d-44ff47091c5f": {
      "content": "set ${1:propertyName}(${2:value}) {\n\t${0};\n}",
      "doc": "Creates a setter property inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertyset",
      "matches": {
        "pse": true
      }
    },
    "075955c7-a92d-3893-a27a-f04211220910": {
      "content": "while ${1:cond}{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "075a978f-a94a-3681-a13b-fef4fd7fca62": {
      "content": "Page Should Not Contain Checkbox    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Checkbox",
      "matches": {
        "psncc": true
      }
    },
    "0763d555-907f-373b-87fc-bbcde3088147": {
      "content": "DISP=${2|NEW,CATLG,DELETE|}",
      "doc": "DISP Parameter, NEW = New data set, CATLG = Create a new catalog entry, DELETE = delete data set on abnormal termination",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/DISP",
      "matches": {
        "DISP": true
      }
    },
    "0765a08e-b2b5-3b75-87b0-87762bfd61ce": {
      "content": "{% firstof %}",
      "doc": "firstof tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "firstof",
      "matches": {
        "firstof": true
      }
    },
    "07673fd5-4523-358b-9365-9eb2b213ff93": {
      "content": "${1}(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      }
    },
    "0773e286-838f-33d9-be9d-72c1f4c5c318": {
      "content": "v-for='${1:item} in ${2:items}'",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-for-without-key",
      "matches": {
        "vForWithoutKey": true
      }
    },
    "0776a77f-2df4-328e-8eca-ba4a7c8421c2": {
      "content": "test \"${1:test_name}\", ctx do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testc": true
      }
    },
    "07790785-8969-34be-a3dc-8b5dde9211a1": {
      "content": "${1:app}.post('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express POST",
      "matches": {
        "epost": true
      }
    },
    "077907f9-f344-37e0-8466-7ae4beb678a1": {
      "content": "@leave=\"$1\"$0",
      "doc": "@leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave",
      "matches": {
        "leaveevent": true,
        "vue leave": true
      }
    },
    "0779b725-baa6-3504-a178-a2df824d2fa4": {
      "content": "text-align: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      }
    },
    "077b3c85-7a46-3832-9ab1-5b6ad67299ee": {
      "content": "message(STATUS \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(STATUS \"...\")",
      "matches": {
        "status_message": true
      }
    },
    "077e9315-44bf-3ad4-9a24-fe592925e134": {
      "content": "<tr>\n\t${0}\n</tr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "07846189-cf79-3c44-b9d9-5c5e108fe0a3": {
      "content": "white-space-collapse: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      }
    },
    "0785a064-3dca-312e-94f6-b65d01ba2187": {
      "content": "{#each ${1:items} as ${2:item},i (${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "each index key block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-key-block",
      "matches": {
        "s-each-index-key-block": true
      }
    },
    "07941f1e-3329-35be-8591-d9a91d66a852": {
      "content": "<b>${0}</b>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "0795da7a-2bb0-3c42-9ef2-ed635cf70057": {
      "content": "sphere(${0:radius});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sphere": true
      }
    },
    "07985440-3bf2-352b-9acc-827094bd2267": {
      "content": "volume = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "volume": true
      }
    },
    "07994ffa-9dbd-3073-97d5-b179e8933f9c": {
      "content": "dunction integer-of-boolean(${1:boolean-item})$0",
      "doc": "numeric value of boolean-item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer-of-boolean",
      "matches": {
        "function integer-of-boolean": true
      }
    },
    "079a349b-0582-3bd3-9445-7dd3ca3f6999": {
      "content": "<script>\n\t${0}\n</script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      }
    },
    "079ce6b0-cbc7-3b8f-9719-e49bfef37b79": {
      "content": "<param name=\"${1}\">${2:$1}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<p": true
      }
    },
    "079d3eb4-2068-3d0c-869a-7edd99c2b8ac": {
      "content": "func ${1:fname}(${2}) ${3:int }{\n  ${0:TARGET:return }\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func ...() { ... }",
      "matches": {
        "fn": true,
        "func": true
      }
    },
    "079d7c25-7de4-32cd-8efe-6a9f21bdd44d": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      }
    },
    "07ab1aa7-3739-35fc-9749-c70d917a8460": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Else",
      "matches": {
        "trye": true
      }
    },
    "07b0453c-5b87-3b3c-9886-e2ef534aa19a": {
      "content": "if ${1:condition} do\n  $2\nelse\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "if .. do .. else .. end",
      "matches": {
        "ife": true
      }
    },
    "07b13e9c-da37-3f6c-8313-78f20e3db9a1": {
      "content": "pub async fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Async function definition",
      "matches": {
        "pafn": true
      }
    },
    "07b90387-457e-3e1f-9068-9fdbf7df7f40": {
      "content": "real ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real",
      "matches": {
        "re": true
      }
    },
    "07c94b2c-1bbf-36cc-b843-164e62497eb7": {
      "content": "implements ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "07cad92c-360e-381c-98d4-341c4e215a97": {
      "content": "for ${1:name} in [${2:start}...${3:finish}] by ${4:step}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrexb": true
      }
    },
    "07cccef6-a5e5-3b12-8ce3-1cf3eb6cdb95": {
      "content": "font-effect: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      }
    },
    "07d5dc85-d0bb-34ce-883c-6e39cfcfd75f": {
      "content": "guard ${1:condition} else {\n\t$0\n}",
      "doc": "guard statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "guard",
      "matches": {
        "guard": true
      }
    },
    "07d6b6b8-7617-3aa7-b12a-14c1dc7b7284": {
      "content": "slot=\"$1\"$0",
      "doc": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slota",
      "matches": {
        "slota": true,
        "vue slota": true
      }
    },
    "07df51d7-e494-3282-aeec-d95ae8d7e366": {
      "content": "${1:obj}.toggle  (${2:e}) ->\n\t${3:// event handler}\n, ($2) ->\n\t${4:// event handler}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tog": true
      }
    },
    "07e12249-7e15-3187-bded-4995eed60b67": {
      "content": "static $${1} = null;\nif (is_null($$1)){\n\t$$1 = ${2};\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static_var": true
      }
    },
    "07e3ff3b-52f0-3f19-9733-94806f316c85": {
      "content": "tapply(${1:vector}, ${2:index}, ${3:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "tapply",
      "matches": {
        "tapply": true
      }
    },
    "07ec072d-24ca-3f65-a07c-7676f109c847": {
      "content": "synchronized ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      }
    },
    "07ec423a-d91c-3e14-a4f9-c97ae5875efe": {
      "content": "public class ${1:MyException} : ${2:Exception}\n{\n\tpublic $1() { }\n\tpublic $1(string message) : base(message) { }\n\tpublic $1(string message, Exception inner) : base(message, inner) { }\n\tprotected $1(\n\t\tSystem.Runtime.Serialization.SerializationInfo info,\n\t\tSystem.Runtime.Serialization.StreamingContext context)\n\t\t\t: base(info, context) { }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exc": true
      }
    },
    "07ede79a-e562-358f-a7ce-32c3baa5fc74": {
      "content": "grid-auto-rows: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      }
    },
    "07f1db9b-a934-3b7e-bba4-43a830fda678": {
      "content": "mat2 rotate(float angle){\n\treturn mat2(cos(angle), -sin(angle), sin(angle), cos(angle));\n}",
      "doc": "rotate",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "rotate",
      "matches": {
        "rotate": true
      }
    },
    "07f24594-ffcb-3d3c-a7c2-f6d921b821c3": {
      "content": "visibility visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      }
    },
    "07f36835-6fbf-3aff-9814-43d4c61e03b3": {
      "content": "let open ${1} in\n${2:TARGET}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let open .. in",
      "matches": {
        "lopen": true
      }
    },
    "07f7be97-af30-3eab-a353-1b1d2366e597": {
      "content": "case ${1} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "case .. => ..",
      "matches": {
        "case": true
      }
    },
    "07fc1084-ae99-3c69-a875-415d508caf8a": {
      "content": "${1:public} static int Main(string[] args)\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sim": true
      }
    },
    "0802c44a-a020-3431-8afa-5cd32e8f1d00": {
      "content": "{#each ${1:items} as ${2:item}, ${3:i}}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-block",
      "matches": {
        "sveach-index": true,
        "svelte each index": true
      }
    },
    "0804e876-ebe7-3c5a-a127-ce7179021e6b": {
      "content": "(if-let [${1:result} ${2:test-expr}]\n\t(${3:then-expr} $1)\n\t(${0:else-expr}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if-let": true
      }
    },
    "0805d320-91da-36e3-9c80-ed44ed577e61": {
      "content": "$$${1:#:expression}$$${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "$$ expression $$",
      "matches": {
        "$$": true,
        "mathenva": true
      }
    },
    "08061ad9-c91f-3692-beee-5351c8cd8f91": {
      "content": "${1:FIELDNAME} = serializers.TimeField(${2})",
      "doc": "Django-rest Serializers ``TimeField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF TimeField",
      "matches": {
        "stime": true
      }
    },
    "08070a60-b43f-33e1-8853-090b6e46e1bc": {
      "content": "box-sizing: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      }
    },
    "081352d9-8b6d-3669-ab41-b1e2015da545": {
      "content": "PropTypes.oneOfType([\n  $0\n])",
      "doc": "An object that could be one of many types",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      }
    },
    "08161184-f26f-3b30-a3bd-422b02016467": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "if ... end",
      "matches": {
        "if": true
      }
    },
    "0819fb78-92d2-3f87-9333-251136005bdc": {
      "content": "<a name=\"${1}\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aname": true
      }
    },
    "0823cf3a-7a87-3308-a31a-a34e9eecd27c": {
      "content": "\\\\begin{alertblock}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{alertblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "alertblock environment",
      "matches": {
        "alertblock": true
      }
    },
    "08275c15-c9fc-30c3-92e3-e455673e0f7c": {
      "content": "if ${1:(* condition *)} then\n\t${2:(* A *)}\nelse\n\t${3:(* B *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "082b2b56-82f3-324f-928b-3271b5e971a5": {
      "content": "until ${1:test}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "until loop",
      "matches": {
        "until": true
      }
    },
    "0842fda8-c8eb-3977-97ce-6baa14c57600": {
      "content": "typedef struct {\n\t$0\n} ${1:MyStruct};",
      "doc": "Code snippet to define a type with struct",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "typedef struct",
      "matches": {
        "structt": true
      }
    },
    "0845a7ca-6c4e-32fc-b4c1-0a436f2ed232": {
      "content": "----------",
      "doc": "Insert horizontal rule",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert horizontal rule",
      "matches": {
        "horizontal rule": true
      }
    },
    "08466c67-4380-3af8-b870-73176a3c5ff5": {
      "content": "{# ${1:comment} #}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{# ... #}",
      "matches": {
        "#": true,
        "comment": true
      }
    },
    "084976ac-f43b-3582-980f-3c770689a5ae": {
      "content": "\\\\footcite[${1}]{${2}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\footcite[]{}",
      "matches": {
        "fcite": true
      }
    },
    "084b2e7d-1961-35fd-85d3-6369163dd287": {
      "content": "func (${1:self} ${2:Type}) ${3:Do}(${4}) ${5:error }{\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func (self Type) Method(...) [error] { ... }",
      "matches": {
        "meth": true
      }
    },
    "085262d6-d2ba-3973-9806-fb1696e13e93": {
      "content": "Filename.dirname(__FILE__)",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      }
    },
    "085f796d-dbf7-3a2f-a1f0-4418e76b36a9": {
      "content": "jvmgen\"${2|sub|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "jvmgen",
      "matches": {
        "jvmgen": true
      }
    },
    "085fc491-7c9e-3902-8b95-0099acd20d69": {
      "content": "[[${1:id}]]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "[[id]] text",
      "matches": {
        "anchor": true
      }
    },
    "08606334-a94c-321f-8797-09bdf75ef09b": {
      "content": "assertArrayEquals(\"${1:Failure message}\", ${2:expecteds}, ${3:actuals});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aae": true
      }
    },
    "08612858-dfcb-3ce2-a0c3-082dab52c5b9": {
      "content": "(${1:first}/:${2:name})(${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/:": true
      }
    },
    "08681642-2c78-3ff2-90a9-6ea0ffc8417e": {
      "content": "@interface ${1:NSObject} (${2:Category})\n@end\n\n@implementation ${1} (${2})\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Category",
      "matches": {
        "cat": true
      }
    },
    "086873f6-0606-32b2-b0b0-10547f9e1246": {
      "content": "Page Should Not Contain Textfield    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Textfield",
      "matches": {
        "psnct": true
      }
    },
    "086d44fe-dca6-30e9-975f-798a62c4c50b": {
      "content": "print(${0:#:TARGET})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "086e3e7f-85a3-3083-b18f-89b13af5f5dd": {
      "content": "grid-auto-flow row dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      }
    },
    "08752db9-c3d8-3fb9-a7f1-8f0375ecad92": {
      "content": "white-space: nowrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "white-space: nowrap",
      "matches": {
        "wsn": true
      }
    },
    "08762cea-4cfc-3789-a5ba-9d81f0f60f97": {
      "content": "_.difference(${array}, ${values})",
      "doc": "_.difference([2, 1], [2, 3]);\n// => [1]\n\nCreates an array of `array` values not included in the other given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.\n\n**Note:** Unlike `_.pullAll`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-difference",
      "matches": {
        "lodash difference": true
      }
    },
    "08820d7c-a11c-3af3-a930-1bf53d8a81e7": {
      "content": "while (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "0882852f-3080-364e-983a-973814418403": {
      "content": "${1:move }|$2| { $3 }",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Closure, anonymous function (inline)",
      "matches": {
        "||": true
      }
    },
    "0887ccc5-9835-3716-88d4-dcb0c6841169": {
      "content": "const ${1} = new ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "constn": true
      }
    },
    "088a7578-5767-37e5-a44f-9436db93b845": {
      "content": "Yii::app()->cache->delete('${0:key}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydelcache": true
      }
    },
    "088b97a6-ed72-3e74-afba-0a7b3ad9ad22": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "088bed46-6823-3e6a-ad0e-d5a61a3d97ef": {
      "content": "<param name=\"${1}\" value=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "088f6744-010b-3a52-a98c-293d12021da0": {
      "content": "{% raw %}${1:#:TARGET}{% endraw %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      }
    },
    "089ab76c-8a05-3a64-bbb3-413995b6fc8e": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t\"\"\"${2:Model definition for $1}.\"\"\"\n\n\t${3:# TODO: Define fields here}\n\n\tclass Meta:\n\t\t\"\"\"Meta definition for $1.\"\"\"\n\n\t\tverbose_name = '$1'\n\t\tverbose_name_plural = '$1s'\n\n\tdef ${4|__str__,__unicode__|}(self):\n\t\t\"\"\"Unicode representation of $1.\"\"\"\n\t\t${5|pass,return '{}'.format(self. ) # TODO,return f'{self. }' # TODO|}",
      "doc": "Model",
      "filetype": "models",
      "grammar": "lsp",
      "label": "Model",
      "matches": {
        "Model": true
      }
    },
    "089c4544-6351-3bc0-ae98-699748f7ee8e": {
      "content": "public class ${1:Hello} {\n    public static void Main(string[] args) {\n        System.Console.WriteLine(\"Hello, world!\");\n    }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "08a52a1f-6997-3c88-8091-6357dccb63b2": {
      "content": "getSnapshotBeforeUpdate(prevProps, prevState) {\n\t$0\n}",
      "doc": "Invoked right before the most recently rendered output is committed to e.g. the DOM. It enables your component to capture current values",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getSnapshotBeforeUpdate",
      "matches": {
        "gsbu": true
      }
    },
    "08a9eb99-a889-3e33-9073-8fc661c1154c": {
      "content": "unless ($1) {\n\t${2:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "unless",
      "matches": {
        "unless": true
      }
    },
    "08b59955-c7dc-30a4-bd2c-63f9e2fae903": {
      "content": "background-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      }
    },
    "08ba05e9-bd97-364b-84b8-6bf6e74c3373": {
      "content": "pow(${1:num}, ${0:exponent});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pow": true
      }
    },
    "08bbcdfd-66a3-3417-a677-fe941db0d9f9": {
      "content": "${1:component}.$set(${2: params});",
      "doc": "svelte component api $set",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-set",
      "matches": {
        "s-component-set": true
      }
    },
    "08bc4b39-6bf8-34cb-ad51-fccda4903c07": {
      "content": "\"blocks\": [\n\t{\n\t\t\"type\": \"${1}\",\n\t\t\"name\": \"${2}\",\n\t\t\"settings\": [\n\t\t\t${0}\n\t\t]\n\t}\n]",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_blocks": true
      }
    },
    "08c1fdf3-2182-3b6a-970c-7d1c7004869a": {
      "content": "class ${1:#:NAME} {\n  constructor(${2:#:ARGS}) {\n    ${0:TARGET}\n  }\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "class {...}",
      "matches": {
        "class": true
      }
    },
    "08c39b2e-f0f6-356b-ae86-83531f1074bd": {
      "content": "_.toString(${value})",
      "doc": "_.toString(null);\n// => ''\n\n_.toString(-0);\n// => '-0'\n\n_.toString([1, 2, 3]);\n// => '1,2,3'\n\nConverts `value` to a string. An empty string is returned for `null`\nand `undefined` values. The sign of `-0` is preserved.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tostring",
      "matches": {
        "lodash tostring": true
      }
    },
    "08c45144-eb80-3362-8480-931b47f8aabf": {
      "content": "${1:this}.get('${2:property}');",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "this.get('property');",
      "matches": {
        "eget": true
      }
    },
    "08c6d144-fc29-3ac5-a570-7492b2f190db": {
      "content": "expect(${1:target}).not.toBeVisible();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be visible (js)",
      "matches": {
        "notv": true
      }
    },
    "08c6de6c-5bf4-3bf0-ab19-ffa23ee55416": {
      "content": "${1:document}.addEventListener('${2:event}', ${3:ev} => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "addEventListener",
      "matches": {
        "ae": true
      }
    },
    "08d1cba7-6e80-333b-9edb-2cebbf072c07": {
      "content": "{% set ${1} = ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig set",
      "matches": {
        "set": true
      }
    },
    "08d6097b-ec26-35fd-8fa9-c1549fe523bf": {
      "content": "// https://eips.ethereum.org/EIPS/eip-1155\r\n// Example implementation https://github.com/enjin/erc-1155/blob/master/contracts/ERC1155.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/**\r\n    @title ERC-1155 Multi Token Standard\r\n    @dev See https://eips.ethereum.org/EIPS/eip-1155\r\n    Note: The ERC-165 identifier for this interface is 0xd9b67a26.\r\n */\r\ninterface ERC1155 /* is ERC165 */ {\r\n    /**\r\n        @dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\r\n        The `_operator` argument MUST be the address of an account/contract that is approved to make the transfer (SHOULD be msg.sender).\r\n        The `_from` argument MUST be the address of the holder whose balance is decreased.\r\n        The `_to` argument MUST be the address of the recipient whose balance is increased.\r\n        The `_id` argument MUST be the token type being transferred.\r\n        The `_value` argument MUST be the number of tokens the holder balance is decreased by and match what the recipient balance is increased by.\r\n        When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\r\n        When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\r\n    */\r\n    event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _value);\r\n\r\n    /**\r\n        @dev Either `TransferSingle` or `TransferBatch` MUST emit when tokens are transferred, including zero value transfers as well as minting or burning (see \"Safe Transfer Rules\" section of the standard).\r\n        The `_operator` argument MUST be the address of an account/contract that is approved to make the transfer (SHOULD be msg.sender).\r\n        The `_from` argument MUST be the address of the holder whose balance is decreased.\r\n        The `_to` argument MUST be the address of the recipient whose balance is increased.\r\n        The `_ids` argument MUST be the list of tokens being transferred.\r\n        The `_values` argument MUST be the list of number of tokens (matching the list and order of tokens specified in _ids) the holder balance is decreased by and match what the recipient balance is increased by.\r\n        When minting/creating tokens, the `_from` argument MUST be set to `0x0` (i.e. zero address).\r\n        When burning/destroying tokens, the `_to` argument MUST be set to `0x0` (i.e. zero address).\r\n    */\r\n    event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _values);\r\n\r\n    /**\r\n        @dev MUST emit when approval for a second party/operator address to manage all tokens for an owner address is enabled or disabled (absence of an event assumes disabled).\r\n    */\r\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n    /**\r\n        @dev MUST emit when the URI is updated for a token ID.\r\n        URIs are defined in RFC 3986.\r\n        The URI MUST point to a JSON file that conforms to the \"ERC-1155 Metadata URI JSON Schema\".\r\n    */\r\n    event URI(string _value, uint256 indexed _id);\r\n\r\n    /**\r\n        @notice Transfers `_value` amount of an `_id` from the `_from` address to the `_to` address specified (with safety call).\r\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\r\n        MUST revert if `_to` is the zero address.\r\n        MUST revert if balance of holder for token `_id` is lower than the `_value` sent.\r\n        MUST revert on any other error.\r\n        MUST emit the `TransferSingle` event to reflect the balance change (see \"Safe Transfer Rules\" section of the standard).\r\n        After the above conditions are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call `onERC1155Received` on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\r\n        @param _from    Source address\r\n        @param _to      Target address\r\n        @param _id      ID of the token type\r\n        @param _value   Transfer amount\r\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to `onERC1155Received` on `_to`\r\n    */\r\n    function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _value, bytes calldata _data) external;\r\n\r\n    /**\r\n        @notice Transfers `_values` amount(s) of `_ids` from the `_from` address to the `_to` address specified (with safety call).\r\n        @dev Caller must be approved to manage the tokens being transferred out of the `_from` account (see \"Approval\" section of the standard).\r\n        MUST revert if `_to` is the zero address.\r\n        MUST revert if length of `_ids` is not the same as length of `_values`.\r\n        MUST revert if any of the balance(s) of the holder(s) for token(s) in `_ids` is lower than the respective amount(s) in `_values` sent to the recipient.\r\n        MUST revert on any other error.\r\n        MUST emit `TransferSingle` or `TransferBatch` event(s) such that all the balance changes are reflected (see \"Safe Transfer Rules\" section of the standard).\r\n        Balance changes and events MUST follow the ordering of the arrays (_ids[0]/_values[0] before _ids[1]/_values[1], etc).\r\n        After the above conditions for the transfer(s) in the batch are met, this function MUST check if `_to` is a smart contract (e.g. code size > 0). If so, it MUST call the relevant `ERC1155TokenReceiver` hook(s) on `_to` and act appropriately (see \"Safe Transfer Rules\" section of the standard).\r\n        @param _from    Source address\r\n        @param _to      Target address\r\n        @param _ids     IDs of each token type (order and length must match _values array)\r\n        @param _values  Transfer amounts per token type (order and length must match _ids array)\r\n        @param _data    Additional data with no specified format, MUST be sent unaltered in call to the `ERC1155TokenReceiver` hook(s) on `_to`\r\n    */\r\n    function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids,\r\n                                    uint256[] calldata _values, bytes calldata _data) external;\r\n\r\n    /**\r\n        @notice Get the balance of an account's tokens.\r\n        @param _owner  The address of the token holder\r\n        @param _id     ID of the token\r\n        @return        The _owner's balance of the token type requested\r\n     */\r\n    function balanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n\r\n    /**\r\n        @notice Get the balance of multiple account/token pairs\r\n        @param _owners The addresses of the token holders\r\n        @param _ids    ID of the tokens\r\n        @return        The _owner's balance of the token types requested (i.e. balance for each (owner, id) pair)\r\n     */\r\n    function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n\r\n    /**\r\n        @notice Enable or disable approval for a third party (\"operator\") to manage all of the caller's tokens.\r\n        @dev MUST emit the ApprovalForAll event on success.\r\n        @param _operator  Address to add to the set of authorized operators\r\n        @param _approved  True if the operator is approved, false to revoke approval\r\n    */\r\n    function setApprovalForAll(address _operator, bool _approved) external;\r\n\r\n    /**\r\n        @notice Queries the approval status of an operator for a given owner.\r\n        @param _owner     The owner of the tokens\r\n        @param _operator  Address of authorized operator\r\n        @return           True if the operator is approved, false if not\r\n    */\r\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\r\n}\r\n\r\n/* ERC-1155 Token Receiver\r\nSmart contracts MUST implement all of the functions in the ERC1155TokenReceiver interface to accept transfers. See “Safe Transfer Rules” for further detail.\r\n\r\nSmart contracts MUST implement the ERC-165 supportsInterface function and signify support for the ERC1155TokenReceiver interface to accept transfers. See “ERC1155TokenReceiver ERC-165 rules” for further detail.\r\n\r\n/**\r\n    Note: The ERC-165 identifier for this interface is 0x4e2312e0.\r\n*/\r\ninterface ERC1155TokenReceiver {\r\n    /**\r\n        @notice Handle the receipt of a single ERC1155 token type.\r\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated.\r\n        This function MUST return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61) if it accepts the transfer.\r\n        This function MUST revert if it rejects the transfer.\r\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\r\n        @param _operator  The address which initiated the transfer (i.e. msg.sender)\r\n        @param _from      The address which previously owned the token\r\n        @param _id        The ID of the token being transferred\r\n        @param _value     The amount of tokens being transferred\r\n        @param _data      Additional data with no specified format\r\n        @return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n    */\r\n    function onERC1155Received(address _operator, address _from, uint256 _id, uint256 _value, bytes calldata _data) external returns(bytes4);\r\n\r\n    /**\r\n        @notice Handle the receipt of multiple ERC1155 token types.\r\n        @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated.\r\n        This function MUST return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81) if it accepts the transfer(s).\r\n        This function MUST revert if it rejects the transfer(s).\r\n        Return of any other value than the prescribed keccak256 generated value MUST result in the transaction being reverted by the caller.\r\n        @param _operator  The address which initiated the batch transfer (i.e. msg.sender)\r\n        @param _from      The address which previously owned the token\r\n        @param _ids       An array containing ids of each token being transferred (order and length must match _values array)\r\n        @param _values    An array containing amounts of each token being transferred (order and length must match _ids array)\r\n        @param _data      Additional data with no specified format\r\n        @return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n    */\r\n    function onERC1155BatchReceived(address _operator, address _from, uint256[] calldata _ids,\r\n                                        uint256[] calldata _values, bytes calldata _data) external returns(bytes4);\r\n}",
      "doc": "EIP-1155: ERC-1155 Multi Token Standard, A standard interface for contracts that manage multiple token types. A single deployed contract may include any combination of fungible tokens, non-fungible tokens or other configurations (e.g. semi-fungible tokens).",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc1155 interface",
      "matches": {
        "erc1155i": true
      }
    },
    "08d90f8c-80f2-30b2-8546-7e7edae8470d": {
      "content": "gl_MaxDrawBuffers",
      "doc": "const mediump int gl_MaxDrawBuffers = 1\n\nThe built-in constant gl_MaxDrawBuffers provides the maximum number of the available draw buffers. The value of this variable is 1 for all OpenGL ES 2.0 implementations.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_MaxDrawBuffers",
      "matches": {
        "gl_MaxDrawBuffers": true
      }
    },
    "08e19d8d-378d-3574-a7d9-8702c0396567": {
      "content": "import React from 'react'\n\nexport const ${TM_FILENAME_BASE} = (props : {}) => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Creates a React functional component without PropTypes",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactFunctionComponent",
      "matches": {
        "rfc": true
      }
    },
    "08ed4a31-f040-3f51-9933-fd6f1add540f": {
      "content": "text-decoration: line-through",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      }
    },
    "08ef0e14-c585-3e64-88c2-4574cdcea778": {
      "content": "componentDidUpdate(prevProps, prevState) { ${1:first}}",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      }
    },
    "08f3c2cb-a88d-3e0b-8194-9f85dcdc298a": {
      "content": "func _process(delta):\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_process method of Node",
      "matches": {
        "process": true
      }
    },
    "08fb2957-7113-3d0d-bd0b-218ff7c6e8ba": {
      "content": "<xsl:call-template name=\"${1:template}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "call-template": true
      }
    },
    "08fe36ba-0881-3bfb-9ffa-6827c7b2a141": {
      "content": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    environment.production ? [] : StoreDevtoolsModule.instrument()\n  ]\n})\nexport class $1StoreModule {}",
      "doc": "NgRx Store Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-store-module",
      "matches": {
        "a-ngrx-store-module": true,
        "angular ng rx store module": true
      }
    },
    "09060a38-42a5-3283-9aba-98750e767aba": {
      "content": "size_t ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "size_t (siz)",
      "matches": {
        "siz": true
      }
    },
    "0908953a-5f13-3a3b-8e47-4fa1371e394a": {
      "content": "{% stylesheet %}\n\t$1\n{% endstylesheet %}",
      "doc": "Stylesheet tag: stylesheet",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag stylesheet",
      "matches": {
        "stylesheet": true
      }
    },
    "090efcdd-00f8-3f4a-89fa-dbbeadebc9c0": {
      "content": "pass",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "pass statement",
      "matches": {
        "pass": true
      }
    },
    "09165465-98de-36e7-9af8-720d9b42f411": {
      "content": "${1:trackBy}(index: number, ${2:name}: ${3:model}): ${4:number} {\n  return ${2:name}${5:.id};$0\n}",
      "doc": "TrackBy Function",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "TrackBy Function",
      "matches": {
        "a-trackby": true
      }
    },
    "0921ee52-df76-39c9-84e7-2e201acffb19": {
      "content": "@selector(${1:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      }
    },
    "0924672d-c4d8-3371-87ec-017bb44f056e": {
      "content": "if ($1 != null)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if not null",
      "matches": {
        "ifnn": true
      }
    },
    "09247a05-af28-301f-927a-66115ce3b882": {
      "content": "background-size: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      }
    },
    "0927244a-cfb2-380d-84d7-576925d2b37c": {
      "content": "type ${1:Type} = ${0:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      }
    },
    "092ccf37-ab48-381e-b5bd-3e4f0e68ec71": {
      "content": "cursor: hand",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      }
    },
    "092d3253-8e47-36fe-889e-d6e823382892": {
      "content": "_.at(${object}, ${paths})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\n_.at(object, ['a[0].b.c', 'a[1]']);\n// => [3, 4]\n\nCreates an array of values corresponding to `paths` of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-at",
      "matches": {
        "lodash at": true
      }
    },
    "0939e465-7e37-32df-9045-e177f4ac767c": {
      "content": "{% do view.registerJsFile(\"${1:/resources/js/global.js}\") %}\n$0",
      "doc": "registerJsFile",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "js1",
      "matches": {
        "js": true
      }
    },
    "0939e5a0-14d1-3e77-99e6-4095b9370a8e": {
      "content": "<html>\n${1}\n</html>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      }
    },
    "093cb97c-5321-3126-8dc2-3aecb86a61a6": {
      "content": "align-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      }
    },
    "093d154b-a0a3-3197-bc47-5fff464c641a": {
      "content": "class $1Manager(models.Manager):\n\tdef get_queryset(self):\n\t\treturn super ($1Manager, self).get_queryset().${2|filter,exclude,order_by,distinct,reverse|}($3)",
      "doc": "Add extra Manager methods",
      "filetype": "models",
      "grammar": "lsp",
      "label": "manager",
      "matches": {
        "mngr": true
      }
    },
    "093f4e83-009b-339e-8fd9-6b6142a47c97": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "rt": true
      }
    },
    "09596624-a007-367b-b24f-6519fa3fe327": {
      "content": "_.gt(${value}, ${other})",
      "doc": "_.gt(3, 1);\n// => true\n\n_.gt(3, 3);\n// => false\n\n_.gt(1, 3);\n// => false\n\nChecks if `value` is greater than `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-gt",
      "matches": {
        "lodash gt": true
      }
    },
    "095b0051-1d9b-327a-84be-f1006efc607f": {
      "content": "type ${1:x} = ${2:int}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "type",
      "matches": {
        "t": true,
        "tp": true,
        "type": true
      }
    },
    "095b1bc3-8d0f-31d9-8023-435d37f25bf2": {
      "content": "type ${1:x}<'${2:a}> = ${3:int}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "type with generic",
      "matches": {
        "tpg": true,
        "typeg": true
      }
    },
    "095e3ff1-4141-39bd-aa9d-19981fa8bbf2": {
      "content": "gl.glColor3f(${1:red}, ${2:green}, ${0:blue});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl color 3f",
      "matches": {
        "gl": true
      }
    },
    "0964d566-4d00-3389-aef6-75c294df8639": {
      "content": "${1:out}: $1.o\n\t$(CC) $(CFLAGS) -o $@ $+",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "09686c39-420b-371b-8355-b9d4b3555ea9": {
      "content": "let ${1:x} = ref(${2:\"hello\"})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "mutable variable",
      "matches": {
        "letm": true,
        "lm": true,
        "mvar": true
      }
    },
    "096aeb2c-5169-3e18-9330-0faf07cc9c15": {
      "content": "mixin Signal!(${1:/*args*/}) ${2:/*name*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "signal (signal)",
      "matches": {
        "signal": true
      }
    },
    "096bb099-f5c2-3e7b-951c-3fa8e8520717": {
      "content": "flexShrink: '${1}',",
      "doc": "flexShrink",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flexShrink",
      "matches": {
        "flex": true
      }
    },
    "09713e3a-6614-32f7-b633-80a2c28e851a": {
      "content": "{% decrement ${0:variable} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "decrement": true
      }
    },
    "0973e6b2-95ac-37ab-91a7-b01c1da0e3af": {
      "content": "{% requirePermission \"${1:spendTheNight}\" %}\n$0",
      "doc": "requirePermission",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "requirepermission",
      "matches": {
        "requirepermission": true
      }
    },
    "09752cc6-9fda-3e90-8cd0-2bf02635d558": {
      "content": "{%- if ${1:condition} -%}\n\t$2\n{%- else -%}\n\t$3\n{%- endif -%}",
      "doc": "Control flow tag: if else, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag if else, whitespaced",
      "matches": {
        "ifelse-": true
      }
    },
    "097595f6-113c-300c-afe9-d20f655daa92": {
      "content": "<link rel=\"apple-touch-icon\" href=\"${1:favicon.png}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:touch": true
      }
    },
    "097b113f-8ece-37b6-8825-6c2c04dbb3ea": {
      "content": "\\begin{minipage}{${1:0.45}\\linewidth}\n\t${2:TARGET}\n\\end{minipage}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{minipage} \\minipage": true,
        "minipage": true
      }
    },
    "097f4751-3313-3db4-85d6-5c63b22ebf78": {
      "content": "public function test${1}()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "public function testXYZ() { ... }",
      "matches": {
        "test": true
      }
    },
    "097f703c-c588-338b-822d-12805b00c01d": {
      "content": "for (${1:size_t} ${2:i} = ${3:length} - 1; $2 >= ${4:0}; $2--) {\n\t$0\n}",
      "doc": "Code snippet for reverse 'for' loop",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "forr",
      "matches": {
        "forr": true
      }
    },
    "0980336d-0757-36fe-93c5-d2712155b9c2": {
      "content": "library(shiny)\n\nui <- fluidPage(\n    titlePanel(\"${1:title}\"),\n    sidebarLayout(\n        sidebarPanel(),\n        mainPanel()\n    )\n)\n\nserver <- function(input, output, session) {\n\n}\n\nshinyApp(ui, server)$0",
      "doc": "Shiny sidebar page",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Shiny sidebar page",
      "matches": {
        "shiny sidebar page": true
      }
    },
    "0986e9ae-88a9-3d83-8b44-e98ef3f2994c": {
      "content": "_.escape(${string})",
      "doc": "_.escape('fred, barney, & pebbles');\n// => 'fred, barney, &amp; pebbles'\n\nConverts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\ncorresponding HTML entities.\n\n**Note:** No other characters are escaped. To escape additional\ncharacters use a third-party library like [_he_](https://mths.be/he).\n\nThough the \">\" character is escaped for symmetry, characters like\n\">\" and \"/\" don't need escaping in HTML and have no special meaning\nunless they're part of a tag or unquoted attribute value. See\n[Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n(under \"semi-related fun fact\") for more details.\n\nWhen working with HTML you should always\n[quote attribute values](http://wonko.com/post/html-escaping) to reduce\nXSS vectors.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-escape",
      "matches": {
        "lodash escape": true
      }
    },
    "09871b45-e9cc-33b7-abfe-ef5c4e4b778b": {
      "content": "for (${1:std::vector}<${2:type}>::${3:const_iterator} ${4:i} = ${5:container}.begin(); $4 != $5.end(); ++$4) {\n\t${6}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iter": true
      }
    },
    "098ba661-a611-39bc-8c83-72d25018d110": {
      "content": "<frameset cols=\"${1}\">\n${2:TARGET}\n</frameset>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "framesetcols": true
      }
    },
    "099181e3-d8b3-3616-adf2-92c262f52530": {
      "content": "switch (${1:#:var}) {\n\tcase ${2:#:val}:\n\t\t${0:TARGET}\n\t\tbreak;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "switch () {}",
      "matches": {
        "switch": true
      }
    },
    "0996bb16-56ad-3a03-953e-57b3afc7a555": {
      "content": "play();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      }
    },
    "09970a5f-0b4c-31f3-a4c2-ed43afc0fbec": {
      "content": "NSAutoreleasePool${TM_C_POINTER: *}pool = [NSAutoreleasePool new];\n${0}\n[pool drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pool": true
      }
    },
    "099da11d-1663-3211-aef7-5bd6d66a32b2": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit('${1:updateValue}', ${2:payload});\n\t}\n}",
      "doc": "vuex action",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Action",
      "matches": {
        "vaction": true
      }
    },
    "09a00eec-983f-323b-adf2-0337a6555858": {
      "content": "{${disabled}}",
      "doc": "Attributes are either strings or expressions.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Attributes",
      "matches": {
        "att": true
      }
    },
    "09a18eda-a8e3-38d3-9f34-8c9df260989d": {
      "content": "_.cloneWith(${value}, ${customizer})",
      "doc": "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(false);\n  }\n}\n\nvar el = _.cloneWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 0\n\nThis method is like `_.clone` except that it accepts `customizer` which\nis invoked to produce the cloned value. If `customizer` returns `undefined`,\ncloning is handled by the method instead. The `customizer` is invoked with\nup to four arguments; (value [, index|key, object, stack]).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonewith",
      "matches": {
        "lodash clonewith": true
      }
    },
    "09a31132-bb7c-3588-bb1c-4887c6ebeeaf": {
      "content": "${1:ModelName}::model()->countBySql(${2:sql},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycountbs": true
      }
    },
    "09a4510c-066e-396b-9608-78b0dc4f3aee": {
      "content": "override",
      "doc": "Snippet for override keyword",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "override keyword",
      "matches": {
        "override": true
      }
    },
    "09a69d6e-701d-3124-bd1e-2fd74f3dc029": {
      "content": ".. code-block:: ${1:python}\n\n\t${1:#:TERGET}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "syntax",
      "matches": {
        "syntax": true
      }
    },
    "09af788d-da3c-35c9-b3fd-3ea5fda122c6": {
      "content": "border-corner-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      }
    },
    "09b72100-4054-34a7-9063-b97dc6495a16": {
      "content": "(${1:arguments}) => ${2:statement}",
      "doc": "arrow function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "arrow-function-es6-",
      "matches": {
        "base function arrow": true
      }
    },
    "09b88b29-eccd-3d3a-9b28-24167ca3886c": {
      "content": "case ${1:something} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "09ba8caf-c47e-3b17-a664-8261dac7fd26": {
      "content": "{% macro ${1:name}(${2:params}) %}\n\t$0\n{% endmacro %}",
      "doc": "macro",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "macro",
      "matches": {
        "macro": true
      }
    },
    "09c1d9f2-c3eb-371f-b2c9-3567bb4dbe59": {
      "content": "import React, { Component } from 'react'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-component",
      "matches": {
        "imrc": true,
        "react import component": true
      }
    },
    "09c379eb-1d15-3307-b944-95c00f50aa3d": {
      "content": "function(d, i) { ${1} }",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fdi": true
      }
    },
    "09c3cddf-4449-3e07-9dc2-9b52f80adb3e": {
      "content": "sapply(${1:list}, ${2:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "sapply",
      "matches": {
        "sapply": true
      }
    },
    "09c4f04d-f7f5-3974-bc0e-243d6732c801": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      }
    },
    "09c63690-2068-3756-b0dc-946be2a1a990": {
      "content": "before_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_create",
      "matches": {
        "befc": true
      }
    },
    "09c6e2fb-4bbe-3e5e-abb0-05c162cfaf40": {
      "content": "let(:${1:object}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "09cf718f-b653-37c7-a6ca-695cdf5ccc47": {
      "content": "text-emphasis none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      }
    },
    "09d1451d-d432-3f07-8bbd-7ba5ef5b9cd9": {
      "content": "with ${1}\ndo\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "with .. do .. end",
      "matches": {
        "with": true
      }
    },
    "09d91e91-cc7b-378e-b282-b501b9eef9a0": {
      "content": "page-break-after auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      }
    },
    "09e06a18-f746-3125-9817-6459dc42d78c": {
      "content": "border-left-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      }
    },
    "09e9ee73-3420-3efe-a181-a6cd6f7c79f9": {
      "content": "int main(int argc, char *argv[])\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "09ec2ea7-5c06-3e68-9654-e3316b522c2e": {
      "content": "std::unique_ptr<${1:T}> ${2} = std::make_unique<$1>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      }
    },
    "09ecc1a3-1866-35e2-a31a-1663a771f27d": {
      "content": "default_if_none:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      }
    },
    "09ecd86f-89dc-3cd6-bd89-cab59db8f1f1": {
      "content": "{\n\t\"type\": \"text\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_text": true
      }
    },
    "09f205f0-9930-3017-a155-25015ac3eb1c": {
      "content": "\\begin{${1:#:type}}\n\t${2:TARGET}\n\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin": true,
        "begin": true
      }
    },
    "09fd612b-d3a2-3fb5-9190-e53422a4980e": {
      "content": "_.omitBy(${object}, ${predicate})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omitBy(object, _.isNumber);\n// => { 'b': '2' }\n\nThe opposite of `_.pickBy`; this method creates an object composed of\nthe own and inherited enumerable string keyed properties of `object` that\n`predicate` doesn't return truthy for. The predicate is invoked with two\narguments: (value, key).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-omitby",
      "matches": {
        "lodash omitby": true
      }
    },
    "0a040f46-8afa-396f-abfa-dfb965da91ae": {
      "content": "spyOn(${1:object}, '${2:method}').and.callFake(${3:function});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and call fake (js)",
      "matches": {
        "scf": true
      }
    },
    "0a086a8a-be5a-39ab-b809-049090b72c6a": {
      "content": "{% for ${1:item} in ${2:items} %}\n\t$0\n{% endfor %}",
      "doc": "for",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "0a13fecf-a306-326d-85c9-7a1bd408c143": {
      "content": "else:\n\t${1:pass}",
      "doc": "Code snippet for an else",
      "filetype": "base",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "0a1be228-4a33-3ad3-bf82-174165269d67": {
      "content": "getElementsBy${1:TagName}('${0}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "0a21c149-a4cd-3d94-b0f3-1d3d8b1d8a55": {
      "content": "def destroy\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\t@$1.destroy\n\n\trespond_to do |format|\n\t\tformat.html { redirect_to($1s_url) }\n\t\tformat.json  { head :ok }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defdestroy": true
      }
    },
    "0a245ce1-ccd0-3c5e-b3d9-13af4c553817": {
      "content": "\\$set sourceformat\"${2|free,variable,fixed|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "sourceformat",
      "matches": {
        "$set": true
      }
    },
    "0a29f743-8794-3ff3-895b-ff05eaf83189": {
      "content": "outline: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      }
    },
    "0a2cdc3e-2465-3f2a-a5e7-c0223d22c184": {
      "content": "chr",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Char",
      "matches": {
        "T": true
      }
    },
    "0a34160f-c7a3-31e9-9442-311848cc5d91": {
      "content": "text-decoration: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      }
    },
    "0a415279-fe5e-396f-933e-d4064ea0c03b": {
      "content": "class ${1:name} {\n\tconstructor (${2:arguments}) {\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "cs": true
      }
    },
    "0a4954f1-17a1-3a6c-8f25-ff33c1f67f02": {
      "content": "echo CHtml::label('${1:label}', '${2:for}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlabel": true
      }
    },
    "0a5eade8-4119-3f06-8bb4-2a0dea36bf00": {
      "content": "border-fit: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      }
    },
    "0a63d35b-3afb-390f-bd2b-1a84b5c28963": {
      "content": "Wait Until Page Contains Element    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Contains Element",
      "matches": {
        "wupce": true
      }
    },
    "0a6a181f-1b74-3e8d-80c9-0f1c2ae68f3c": {
      "content": "(reduce ${1:(fn [p n] ${3})} ${2})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reduce": true
      }
    },
    "0a6c1364-8511-3868-8532-74739cdd30fb": {
      "content": "$.trim('${1:string}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eltrim": true
      }
    },
    "0a6d848e-f807-3519-9c32-d04b5b83cc9c": {
      "content": "{% endswitch %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endswitch",
      "matches": {
        "endswitch": true
      }
    },
    "0a6e32e1-b69d-33f0-bca8-6b7fb0559e37": {
      "content": "v-cloak",
      "doc": "Does not expect expression",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-cloak",
      "matches": {
        "vCloak": true
      }
    },
    "0a76358e-ff67-3070-bd20-56fbeb64dc97": {
      "content": "| map: '${1:key}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "0a777366-3255-3f49-aae1-5a07e4b555e9": {
      "content": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard starter template for a C program with stdlib included",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Stdlib Variant Starter Template",
      "matches": {
        "libsst": true
      }
    },
    "0a85c10e-2635-3d50-b74f-36c0c8938f24": {
      "content": "${1:deferred}.always(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dalways": true
      }
    },
    "0a86c5d3-a2dd-37e6-96d6-760ab20d33db": {
      "content": "when others => ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when others",
      "matches": {
        "wheo": true
      }
    },
    "0a891818-efdc-350a-872e-2bf18cdd1e9b": {
      "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessProps",
      "matches": {
        "rscp": true
      }
    },
    "0a89513e-1627-39fc-8de6-e9fb8a8b0acd": {
      "content": "print(${1:x}, ${2:...})",
      "doc": "Print",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pri",
      "matches": {
        "print": true
      }
    },
    "0a9395e7-8a4d-30f9-a71a-15d5f7363e76": {
      "content": "overflow: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "overflow: scroll",
      "matches": {
        "ovs": true
      }
    },
    "0a966af0-160c-3b5d-99e9-43ac0e4a7071": {
      "content": "console.log($1);\n$0",
      "doc": "Log to the console",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Log to the console",
      "matches": {
        "log": true
      }
    },
    "0a970d9b-74b3-3992-b540-6fb7cd39afb2": {
      "content": "{% include \"${1:template}\" %}$0",
      "doc": "inc",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "inc",
      "matches": {
        "inc": true
      }
    },
    "0a9899c6-d37a-3d4f-8ab4-38dfc7d1c358": {
      "content": "func Benchmark$1(b *testing.B) {\n\tfor ${2:i} := 0; ${2:i} < b.N; ${2:i}++ {\n\t\t$0\n\t}\n}",
      "doc": "Snippet for Benchmark function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "benchmark function",
      "matches": {
        "bf": true
      }
    },
    "0a993bc2-a506-3f08-80a2-1b5b69f17521": {
      "content": "getSnapshotBeforeUpdate = (prevProps, prevState) => {${1:first}}",
      "doc": "Called right before mutations are made (e.g. before the DOM is updated)",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "getSnapshotBeforeUpdate",
      "matches": {
        "gsbu": true
      }
    },
    "0a9a7be3-72bb-3e13-8cd7-a8167f57e084": {
      "content": "zIndex: ${1},",
      "doc": "zIndex",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "zIndex",
      "matches": {
        "z": true
      }
    },
    "0a9e73f4-b931-3c72-9436-0cb8f5167954": {
      "content": "isNumeric!${1:N}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      }
    },
    "0a9f7238-a30b-3956-b2b5-96f7513d4115": {
      "content": "/*\n * ${0}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      }
    },
    "0aaeaf06-2765-3978-bcbd-192a46f24405": {
      "content": "padding 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      }
    },
    "0ab388e8-6a4a-3608-a5dc-b856d1ee4d0a": {
      "content": "dispatch",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "dispatch",
      "matches": {
        "dispatch": true
      }
    },
    "0ab4a4c6-11f9-3ff8-95c3-6309c1d958ac": {
      "content": "case ${1:value}:\n\t$2\n\tbreak;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "0abcc471-e1b1-3755-9ba3-efd69ce4280c": {
      "content": "| last",
      "doc": "Array filter: last",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter last",
      "matches": {
        "last": true
      }
    },
    "0ac050a3-33d6-321c-bc44-ef919a06c412": {
      "content": "#define ${1}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "0ac28ab8-1162-3cec-901b-9b392a1f954a": {
      "content": "border-fit: overwrite",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      }
    },
    "0ac3d3bc-c8b0-38dc-8126-e4656f3a36aa": {
      "content": "while (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "while () {}",
      "matches": {
        "while": true
      }
    },
    "0ac5423a-fce4-371b-a1ca-e552f3cf1bc5": {
      "content": "<figcaption>$1</figcaption>$2",
      "doc": "HTML - Defines a caption for a figure",
      "filetype": "html",
      "grammar": "lsp",
      "label": "figcaption",
      "matches": {
        "figcaption": true
      }
    },
    "0ac998b6-cd55-373a-9239-f5343bc80e7f": {
      "content": "<link rel=\"shortcut icon\" href=\"${1:favicon.ico}\" type=\"image/x-icon\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:favicon": true
      }
    },
    "0acf5ec8-48af-3e04-b83d-120839b492ee": {
      "content": "process.stdin",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stdin": true
      }
    },
    "0ad99207-6954-3433-9796-5fabff177a7a": {
      "content": "border-left-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      }
    },
    "0adafe1c-90cc-3fb3-be1d-676c2255586b": {
      "content": "list-style-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      }
    },
    "0adf02b5-952c-3e2c-b733-4e49ca729d08": {
      "content": "<slot>${1:<!-- optional fallback -->}</slot>",
      "doc": "slot",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot",
      "matches": {
        "s-slot": true
      }
    },
    "0ae79825-fae2-3d59-9cf6-faa52d704e3a": {
      "content": "selector:\n  app: {{ template \"${2:chartName}.name\" . }}\n  component: \"{{ .Values.${1:value_key}.name }}\"\n  release: {{ .Release.Name }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "selector_spec": true
      }
    },
    "0aea96c7-21d8-3589-96cd-71971fc1d26e": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      }
    },
    "0aeb5d1f-d344-35da-b063-93740c88f6b5": {
      "content": "<%= form_for @changeset, ${1:\"/users\"}, fn f -> %>\n\t\t${0}\n\n\t<%= submit \"Submit\" %>\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_for",
      "matches": {
        "ff": true
      }
    },
    "0aedd3f9-51dc-366b-b213-72e040d0e2b5": {
      "content": "${1}:\ndeclare\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare named block",
      "matches": {
        "declare_named": true
      }
    },
    "0af4fbd4-4a0f-3836-85f4-e9677fe968af": {
      "content": "integer, parameter ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer parameter",
      "matches": {
        "inp": true
      }
    },
    "0af505da-8862-3328-a2bb-71da1c2c450d": {
      "content": "state = {\n\t$1\n}",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-empty-state",
      "matches": {
        "est": true,
        "react empty state": true
      }
    },
    "0af928ca-d5b7-3d09-8fe3-ae7216016adc": {
      "content": "border-corner-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      }
    },
    "0b143aa1-6fb1-3d6c-b440-ee2c934f6fb9": {
      "content": "v-for=\"(${1:item}, ${2:index}) in ${3:items}\" :key=\"${4:index}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-for",
      "matches": {
        "vFor": true
      }
    },
    "0b153b4e-0cc7-3962-8624-e9cd82b288d6": {
      "content": "echo CHtml::listData(array(${1}),'${2:valueField}', '${3:textField}','${0:groupField}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhld": true
      }
    },
    "0b1545fa-3d50-3666-9fa1-a66c38a39dc8": {
      "content": "useImperativeHandle(\n\t${1:ref},\n\t() => {\n\t\t${2:handler}\n\t},\n\t[${3:input}],\n)",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useimperativehandle",
      "matches": {
        "react useimperativehandle": true,
        "useimperativehandle": true
      }
    },
    "0b1ab3e3-be18-35dd-9fe9-97ae0e230845": {
      "content": "require('dotenv-safe').config({ encoding: '${1:latin1}' })",
      "doc": "You may specify the encoding of your file containing environment variables.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-encoding",
      "matches": {
        "dotenv-safe encoding": true
      }
    },
    "0b1bb7c9-ef67-302c-bd5e-4ecb0fef803d": {
      "content": "${1:name}\tvarchar2(${2:size})\t${3:default ''}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ccol": true
      }
    },
    "0b20d828-08c8-36fd-b81a-bedd4d2a2cae": {
      "content": "${1:${VISUAL}} match {\n\tcase ${2} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      }
    },
    "0b32b83a-2d55-3ef7-b8e8-059740a35b40": {
      "content": "list-style-type: ${1:decimal/decimal-leading-zero/zero};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: numeric (list)",
      "matches": {
        "list": true
      }
    },
    "0b3a4f7f-023a-3ee4-8155-8b80a1fc49ed": {
      "content": "list(${0:items})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      }
    },
    "0b40ef2d-310e-3486-9a07-735c1fb2b9b2": {
      "content": "{% blockquote %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      }
    },
    "0b4331cd-2226-3034-bc1f-a4e9e0bf64f2": {
      "content": "<%= ${1:f}.submit \"${0:submit}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffs": true
      }
    },
    "0b4335e3-c9d5-3ee6-91eb-4321fa8cf587": {
      "content": "{% cycle '${1:group name}': '${2:odd}', '${3:even}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cyclegroup": true
      }
    },
    "0b62092b-3e46-39d0-9b80-d1b94304b021": {
      "content": "{% from ${1:x} import ${0:y} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "from": true
      }
    },
    "0b621cef-07ae-368f-b104-b10920a27e4c": {
      "content": "justify-content: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      }
    },
    "0b671bef-a3f6-37be-b117-516b83e270f0": {
      "content": "{%- break -%}",
      "doc": "Iteration tag: break",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag break",
      "matches": {
        "break": true
      }
    },
    "0b6b3394-45fd-3c3b-a3ae-0b0a60ce4bc4": {
      "content": "*.. $1",
      "doc": "Model an object composition",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Dotted composition",
      "matches": {
        "dcom": true
      }
    },
    "0b7511d3-2983-3a26-8171-2f338099d1e0": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      }
    },
    "0b75ad18-f577-319a-8ea6-0648df400b67": {
      "content": "_.defaults(${object}, ${sources})",
      "doc": "_.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nAssigns own and inherited enumerable string keyed properties of source\nobjects to the destination object for all destination properties that\nresolve to `undefined`. Source objects are applied from left to right.\nOnce a property is set, additional values of the same property are ignored.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaults",
      "matches": {
        "lodash defaults": true
      }
    },
    "0b75e97b-c2e6-3df1-9078-322cf37a07e8": {
      "content": "counter-increment ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      }
    },
    "0b7bf0cc-33dd-35a0-98cf-59ea462b6cea": {
      "content": "${1:public} ${2:object} this[${3:int} index]\n{\n    get { $4 }\n    set { $0 }\n}",
      "doc": "Indexer",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Indexer",
      "matches": {
        "indexer": true
      }
    },
    "0b7e7603-5554-322c-ba11-6eb7f251b7a4": {
      "content": "let!(:${1:object}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let!": true
      }
    },
    "0b803ea1-626a-33f6-ba8c-4bccd69e2c36": {
      "content": "<%= label ${1:f}, :${2:field}, \"${3:Label}\" %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "label",
      "matches": {
        "la": true
      }
    },
    "0b805d1a-460d-3cca-b868-b9286d8bee31": {
      "content": "<ul>\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul": true
      }
    },
    "0b8837dc-cf85-31f7-a94e-435b8d28bad7": {
      "content": "case ${1:#:val}:\n    ${0:TARGET}\n    break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "0b886f96-01b6-3799-8e1e-cee44afe1f96": {
      "content": "before_validation_on_update",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation_on_update",
      "matches": {
        "befvou": true
      }
    },
    "0b916b53-462a-3fe8-a64d-fd928467e32d": {
      "content": "console.info(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci": true,
        "console-info": true
      }
    },
    "0b986060-10dd-386f-99df-348172ac12fb": {
      "content": "quotes '\\201C' '\\201D' '\\2018' '\\2019'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      }
    },
    "0ba86988-94c8-322d-952d-64ad7e940123": {
      "content": "counter-reset: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      }
    },
    "0bab1b9f-3155-3d66-a254-b59176107b73": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdownc": true
      }
    },
    "0bab7567-65ef-3a04-832e-c6b06acac959": {
      "content": "margin-left: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      }
    },
    "0bac883a-2194-3e45-b7d9-600582bedec4": {
      "content": "// @flow \nimport * as React from 'react';\ntype Props = {\n\t$0\n};\nexport const ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};",
      "doc": "Creates a stateless React component with FlowTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowStatelessComponent",
      "matches": {
        "fsc": true
      }
    },
    "0bb26e7a-3ab8-39fd-b682-35f597979519": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      }
    },
    "0bb46a4a-be6e-311b-b68b-b471881eaad8": {
      "content": "width: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      }
    },
    "0bbe82d8-888c-3a88-ad49-73450dff1fed": {
      "content": "font-family: ${0:Monaco,'Courier New'},monospace",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      }
    },
    "0bc3e9eb-4fa8-3008-8f4b-d1230325bd22": {
      "content": "| replace_first: '${1:target}', '${2:replace}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace_first": true
      }
    },
    "0bc40a10-8130-35d0-826e-e12d6829c323": {
      "content": "if ${1:condition}:\n\t${3:pass}\nelif ${2:condition}:\n\t${4:pass}\nelse:\n\t${5:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "if elif else",
      "matches": {
        "if": true
      }
    },
    "0bc689e3-5dca-3ecb-9156-dd9a3a29dfc6": {
      "content": "${1:name} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      }
    },
    "0bd339fe-4c61-30e6-bee8-96af56ead87b": {
      "content": "<button>${1:TARGET}</button>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button": true
      }
    },
    "0bd7f912-1544-31df-b769-dff5a0685140": {
      "content": "list-style-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      }
    },
    "0be902b4-40a3-3c33-96ba-5111ef5fda74": {
      "content": "grid-template-rows: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      }
    },
    "0beaaa6c-0bf2-341d-8b36-46f0a9ae2e29": {
      "content": "<xsl:attribute name=\"${1:name}\">\n\t<xsl:value-of select=\"${2:*}\" />\n</xsl:attribute>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "value-of",
      "matches": {
        "attribute": true
      }
    },
    "0bf855f3-5ca6-3a00-9701-3297e430c2bd": {
      "content": "background-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      }
    },
    "0bfb2cc7-e560-3fb0-b322-060ffaa7a1f3": {
      "content": "${1:EventHandler} temp = ${2:MyEvent};\nif (temp != null)\n{\n    temp($0);\n}",
      "doc": "Safely invoking an event",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Safely invoking an event",
      "matches": {
        "invoke": true
      }
    },
    "0c0118b6-e796-3243-bf8d-cb596b50ae1e": {
      "content": "function median(${1:number},${2:...})$0",
      "doc": "statistical median value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-median",
      "matches": {
        "function median": true
      }
    },
    "0c091474-ee17-326e-9997-6958d76ac059": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psss": true
      }
    },
    "0c0f4544-dd03-3486-b463-8a6415037a90": {
      "content": "| round: ${1:0}",
      "doc": "Math filter: round",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter round",
      "matches": {
        "round": true
      }
    },
    "0c188c9f-dc5a-3070-8726-318f78c024c6": {
      "content": "<transition\n\tmode=\"out-in\"\n\t@before-enter=\"beforeEnter\"\n\t@enter=\"enter\"\n\n\t@before-leave=\"beforeLeave\"\n\t@leave=\"leave\"\n\t:css=\"false\">\n\n</transition>",
      "doc": "transition component js hooks",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Transition Component with JavaScript Hooks",
      "matches": {
        "vanim": true
      }
    },
    "0c18d8c5-426f-3306-9f10-62e49e5836cc": {
      "content": "static propTypes = {\n\t${1}: PropTypes.${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "static propTypes",
      "matches": {
        "spt": true
      }
    },
    "0c1a0afb-45ab-3370-944a-cab87007b277": {
      "content": "background-origin content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      }
    },
    "0c1af61f-a296-32f8-8e42-a8adcd38e20d": {
      "content": "it.todo('${1:should }');",
      "doc": "creates a test placeholder",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-todo",
      "matches": {
        "itt": true,
        "jest it todo": true
      }
    },
    "0c2669dd-90e0-36e4-8f87-5c6210f0e660": {
      "content": "text-shadow: ${1:${2:offset-x} ${3:offset-y} ${4:blur} ${5:color}};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-shadow: color-hex x y blur (text)",
      "matches": {
        "tsh": true
      }
    },
    "0c26b2c0-0540-3fb0-999f-10a8f32bf766": {
      "content": "{%- else -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else-": true
      }
    },
    "0c2b6527-f591-382b-8f29-4fd1051be3e8": {
      "content": "@if ${1:condition}\n\t${2:${VISUAL}}\n@else\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "0c2d1c40-6f8a-3abd-bf96-46d6a5ed0ad8": {
      "content": "1. ${1:first}\n2. ${2:second}\n3. ${3:third}\n$0",
      "doc": "Insert ordered list",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert ordered list",
      "matches": {
        "ordered list": true
      }
    },
    "0c2f2261-0254-3714-9a0c-10289cc20ac1": {
      "content": "class ${1:X()} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "0c2f680e-31f6-35b9-b9ec-d8659486a9f5": {
      "content": "File.open(${1:#:filename}, '${2:#:mode}') do |${3:io}|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.open(filename) do ... end",
      "matches": {
        "fileopen": true,
        "open": true
      }
    },
    "0c2fee80-0f70-3b16-9857-979917453143": {
      "content": "import { mapActions } from 'vuex'\n\nexport default {\n\tmethods: {\n\t\t...mapActions([\n\t\t\t${1:'nameOfAction'}, //also supports payload `this.nameOfAction(amount)` \n\t\t])\n\t},\n}",
      "doc": "mapactions inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapactions",
      "matches": {
        "vmapactions": true,
        "vue mapactions": true
      }
    },
    "0c31bb7c-59ff-3c1b-9ac5-ec05f00a2583": {
      "content": "place-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      }
    },
    "0c32586f-8b26-3ae3-9baa-4470efab2026": {
      "content": "it { should route(:${1:method}, '${0:path}') }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isr": true
      }
    },
    "0c33630f-c9fc-35e3-893b-7d7055f0cdee": {
      "content": "$.data('${1:selector expression}', '${2:key}'${3:, 'value'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dataa": true
      }
    },
    "0c388e49-697c-31f1-b4c4-3a5516834184": {
      "content": "Rc::new(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Rc::new()",
      "matches": {
        "rc": true
      }
    },
    "0c462f4e-358a-3236-a2e1-3f6f126ac0fd": {
      "content": "if ${1:condition} {\n\t$0\n}",
      "doc": "Snippet for if statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "0c52fc7c-aa3e-350d-a068-4354aa261a7a": {
      "content": "{% js %}\n\t$1\n{% endjs %}\n$0",
      "doc": "js",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "js",
      "matches": {
        "js": true
      }
    },
    "0c538891-bc4f-3c5b-956a-8f21b893b87e": {
      "content": "- [x] ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert checked item",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert checked item",
      "matches": {
        "checked item": true
      }
    },
    "0c5725a6-3666-315d-b5a7-501a463391fe": {
      "content": "minWidth: ${1},",
      "doc": "minWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "minWidth",
      "matches": {
        "min": true
      }
    },
    "0c5740e5-7c42-3a56-aab3-87cdf912e88d": {
      "content": "padding-right: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "padding-right",
      "matches": {
        "padr": true
      }
    },
    "0c5a277d-1071-3785-9e65-7f1baae6f85c": {
      "content": "enum ${1:MyEnum} {\n\t$0\n};",
      "doc": "Code snippet for enum",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "0c5e2720-9ae5-37bf-9e2c-20d5b2375dbe": {
      "content": "scopedSlots",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "scopedSlots",
      "matches": {
        "scopedSlots": true
      }
    },
    "0c5e9104-e6fd-365b-b7ab-efe0f1d50d60": {
      "content": "plot(${1:x}, ${2:y}, ${3:...})",
      "doc": "Plot",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "plot",
      "matches": {
        "plot": true
      }
    },
    "0c5ee9b9-ca62-329c-b88d-1d4751154ea8": {
      "content": "self.assertEqual(${1:expected}, ${2:actual}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert equal",
      "matches": {
        "ase": true
      }
    },
    "0c5f10f8-701e-3d33-b0be-2268e3d6b8e4": {
      "content": "@else if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "0c60ba03-0a93-3c1c-bf3a-35087d9668db": {
      "content": "list-style-position: ${1:inside/outside};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-position: pos (list)",
      "matches": {
        "list": true
      }
    },
    "0c625b85-0d00-3bac-af9d-b4fef5bbbff1": {
      "content": "import 'package:flutter/cupertino.dart';",
      "doc": "Import Flutter Cupertino package",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Cupertino Package",
      "matches": {
        "importC": true
      }
    },
    "0c6720bd-8b58-3e4b-acf0-1c234d90a595": {
      "content": "set(${1:#:name}, ${2:#:value});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sv": true
      }
    },
    "0c6ff88b-c5cc-34bc-bfc0-7c50d27790fc": {
      "content": "FUNCTION VARIANCE(${1:number},${2:...})$0",
      "doc": "statistical variance of the specified list of number argument",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-VARIANCE",
      "matches": {
        "FUNCTION VARIANCE": true
      }
    },
    "0c7769d2-b2be-33e8-9ac4-196a1014030e": {
      "content": "grid-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      }
    },
    "0c8623fa-c9e6-3167-a8e8-24fb9bec6bdd": {
      "content": "assertEquals(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ae": true
      }
    },
    "0c8a0cb9-fc69-37aa-b959-9cd2c97680b1": {
      "content": "white-space-collapse: loose",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      }
    },
    "0c8a2a07-c1af-33e5-a895-b992703fa7c0": {
      "content": "# %%",
      "doc": "Code snippet to add a new cell",
      "filetype": "python",
      "grammar": "lsp",
      "label": "add/new/cell",
      "matches": {
        "add/new/cell": true
      }
    },
    "0caa9d82-5a3a-3f55-ac0c-51566903ba4f": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      }
    },
    "0cad4db3-59ab-3d9d-a0c7-d409aaf81d4d": {
      "content": "if ( ${1:condition} ) then\r\n\t$0\r\nend if",
      "doc": "if",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "if1",
      "matches": {
        "if": true
      }
    },
    "0cb5a992-d488-3976-a86b-6def5a9f542b": {
      "content": "analogWrite(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aw": true
      }
    },
    "0cb752b4-46f7-37a9-844c-82ea27c83379": {
      "content": "{% layout '${1:layout}' %}",
      "doc": "Theme tag: layout",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag layout",
      "matches": {
        "layout": true
      }
    },
    "0cc02f6a-3caf-3cef-bcdc-296cf89bc52f": {
      "content": "constructor (props) {\n\tsuper(props)\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props as arguments",
      "filetype": "react",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "con": true
      }
    },
    "0cc81f86-53b5-3850-99b2-ec49fe98e0c7": {
      "content": "${1}:\nfor ${2} of ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for each",
      "matches": {
        "named_for_each": true
      }
    },
    "0cc8751b-554a-3e6e-a0e7-e22811b5be85": {
      "content": "public ${1:String} ${2:name};",
      "doc": "Public field",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Public field",
      "matches": {
        "public_field": true
      }
    },
    "0ccdafa2-0cee-3f29-90c0-6415dc9a8b62": {
      "content": "@type ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "0ccdc233-34ae-3ef6-98fc-1b75feff323a": {
      "content": "match ${1:TARGET} {\n    ${2:#:pattern} => ${3:#expr},${4}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      }
    },
    "0cd75cc1-8325-350e-87c6-6562c4ac81e8": {
      "content": "tpl",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Tuple",
      "matches": {
        "T": true
      }
    },
    "0cde4af2-6587-39f0-89a4-c456d9ee1b92": {
      "content": "\\begin{Vmatrix}\n\t${1:TARGET}\n\\end{Vmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Vmatrix": true,
        "\\begin{Vmatrix} \\Vmatrix": true
      }
    },
    "0ce131f4-d1be-3c1e-80bf-4714fcf589f9": {
      "content": "const { ${1:first} } = this.state",
      "doc": "Creates and assigns a local variable using state destructing",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "destructState",
      "matches": {
        "cs": true
      }
    },
    "0ce25d35-d454-36f6-a067-8fc17e9d03e3": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      }
    },
    "0ce6fde4-b7d4-36ce-80b8-43c371ca892c": {
      "content": "${1:/* condition */} ? ${2:a} : ${3:b}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "0ce860c8-04c0-3d4b-a1e8-150884b00b97": {
      "content": "?then(${1:true}, ${0:false${VISUAL}})",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "?then(true, false)",
      "matches": {
        "?th": true
      }
    },
    "0cebffb3-928d-345e-a443-b564b8137fff": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} open ${4:Account} ${8:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "open account",
      "matches": {
        "open": true
      }
    },
    "0cf1d854-2147-39a6-8d5d-7478b4f514e9": {
      "content": "debugger;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "db": true,
        "debugger": true
      }
    },
    "0cf2624f-3c18-3297-bfc0-0e25cfedaadb": {
      "content": "\\\\vec{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "vector",
      "matches": {
        "vec": true
      }
    },
    "0cf6fc41-13a4-3ff4-8da3-b77b363ecd3e": {
      "content": "<style type=\"text/css\" media=\"${1:all}\">\n\t${0}\n</style>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "style": true
      }
    },
    "0cf94224-c388-3776-916c-d9c2aaab6d58": {
      "content": "where\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "0d1773e1-1162-392e-b41b-0b121ea77492": {
      "content": "->(${1:args}) { $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert lambda arrow with arguments",
      "matches": {
        "->a": true
      }
    },
    "0d1930d4-7ab9-3637-8e30-409095925757": {
      "content": "\\begin{sloppypar}\n\t${1:TARGET}\n\\end{sloppypar}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{sloppypar} \\sloppypar": true,
        "sloppypar": true
      }
    },
    "0d1cadfa-b8eb-374e-bc27-ce89e14bff82": {
      "content": "{namespace ${1:name}}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "Namespace",
      "matches": {
        "ns": true
      }
    },
    "0d20e555-592a-33be-a099-a154ba1af37f": {
      "content": "getInitialState: ->\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define getInitialState",
      "matches": {
        "getInitialState": true
      }
    },
    "0d253e6e-4334-3e7d-83a6-fbdc4140b6ed": {
      "content": "if(${1}) {\n\t${2}\n} else {\n\t${3}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "0d26fc34-f320-3772-b4e0-d2a9da77e294": {
      "content": "(begin\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      }
    },
    "0d2a9910-08a8-3060-a651-c46bef31056e": {
      "content": "const ${1:memoizedCallback} = useCallback(\n\t() => {\n\t\t${2:doSomething}(${3:a}, ${4:b})\n\t},\n\t[${5:a}, ${6:b}],\n)$0",
      "doc": "React useCallback() hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useCallback",
      "matches": {
        "ucb": true
      }
    },
    "0d2fc832-7f16-3447-baec-d2568d8df69e": {
      "content": "_.toArray(${value})",
      "doc": "_.toArray({ 'a': 1, 'b': 2 });\n// => [1, 2]\n\n_.toArray('abc');\n// => ['a', 'b', 'c']\n\n_.toArray(1);\n// => []\n\n_.toArray(null);\n// => []\n\nConverts `value` to an array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toarray",
      "matches": {
        "lodash toarray": true
      }
    },
    "0d31a55f-112f-38a4-a6dd-3cfc16b2afd4": {
      "content": "it { expect { ${1:object} }.${2} ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iexpb": true
      }
    },
    "0d347304-b567-36f1-82af-e7ffdd6e1898": {
      "content": "const ${1:queryName} = `query ${1:queryName} {\n  ${2:query}\n}\n`;",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-query",
      "matches": {
        "graphql-request query": true
      }
    },
    "0d3f35f2-b793-388f-aac9-73d6154b4bcf": {
      "content": "&#x21E7;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shift": true
      }
    },
    "0d404a6d-5df8-35de-b17b-8926677b92cf": {
      "content": "if err != nil {\n  t.Errorf(\"${1}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Errorf(...) }",
      "matches": {
        "ter": true
      }
    },
    "0d49c905-7ca4-3957-8893-502d3f820567": {
      "content": "text-align: ${1:left/right/center/justify};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-align: left:center:right (txt)",
      "matches": {
        "text": true
      }
    },
    "0d4e0a69-5c6f-3c7b-afe0-239e37f071cf": {
      "content": "${1:public} class ${2:$TM_FILENAME_BASE}\n{\n\t$0\n}",
      "doc": "Create new class",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "cls",
      "matches": {
        "cls": true
      }
    },
    "0d4f0d80-2de2-397a-9e1e-4f0666e7c3da": {
      "content": "function ${1}(${2}):${3}{\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "0d55a315-b110-3371-81f6-a340d184f79c": {
      "content": "${1:deferred}.promise(${2:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprom": true
      }
    },
    "0d588cc1-f155-3a36-a000-f644493044a1": {
      "content": "{% if ${1:condition} %}\n\t$2\n{% else %}\n\t$3\n{% endif %}",
      "doc": "Control flow tag: if else",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag if else",
      "matches": {
        "ifelse": true
      }
    },
    "0d6686f1-02fb-3878-8dc6-46f82076c57b": {
      "content": "margin-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      }
    },
    "0d6e5b80-03a7-3822-ba9b-05125c2786a2": {
      "content": "${1:public} async ${2:Task}<${3:object}> ${4:MyMethodAsync}(${5:string} ${6:parameter})\n{\n\t$0\n}",
      "doc": "Creates an async Method structure",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Creates an Async Method structure",
      "matches": {
        "method_async": true
      }
    },
    "0d6e5d05-e9e2-3a55-a15e-579baf718c41": {
      "content": "protected int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi|": true
      }
    },
    "0d6e6721-4304-327e-961e-6cc0306736b6": {
      "content": "while ${1:condition}:\n\t${2:pass}$0",
      "doc": "Code snippet to create a while loop structure.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "0d747bc3-347b-3aaf-911d-604a51f0f5c2": {
      "content": "${1:FIELDNAME} = models.FloatField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FloatField",
      "matches": {
        "mfloat": true
      }
    },
    "0d7baf57-229d-3deb-a21d-c143f823bf30": {
      "content": "switch ( ${1:test} ){\n\t${2:condition1} { ${3:action} }\n\t${4:condition2} { ${5:action} }\n\tdefault { ${6:action} }",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "0d7bb976-8252-3385-ace5-ddbd6040ed02": {
      "content": "let ${0} \n if (${2:condition}) {\n\t${1}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "let and if statement",
      "matches": {
        "lif": true
      }
    },
    "0d7bdd9b-f957-3496-a92c-cb4aa030d2a1": {
      "content": "list-style-position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      }
    },
    "0d7c9b33-937f-3467-9aec-edccd4220336": {
      "content": "align-content last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      }
    },
    "0d7d0b2a-c8f9-3f24-a29a-ff76595374bb": {
      "content": "const ${1:NAME} ${2:Type} = ${0:0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const XXX Type = ...",
      "matches": {
        "con": true
      }
    },
    "0d8499f7-c883-3cac-a4e2-57f3782569d3": {
      "content": "${1:obj}.mouseup (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      }
    },
    "0d8a687f-7e9e-3fc1-b7be-2b0218cadb5d": {
      "content": "Some(${1})",
      "doc": "Some(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "Some",
      "matches": {
        "Some": true
      }
    },
    "0d90d5c7-319f-3fec-8dc6-5c581d741fa1": {
      "content": "python3 << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "python3 <<EOF | EOF",
      "matches": {
        "py3": true,
        "python3": true
      }
    },
    "0d964a54-35a4-3999-842e-97772eb132f8": {
      "content": "| strip_html",
      "doc": "String filter: strip html",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter strip html",
      "matches": {
        "strip_html": true
      }
    },
    "0d980b04-c9d5-35bb-8952-508d5642a5a7": {
      "content": "$this->db->update(${1:table}, ${2:data}, ${3:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_update": true
      }
    },
    "0d9b2941-aa1f-324d-9253-383f797c9161": {
      "content": "logic${1:#: nbit} ${2:reg}_r, $2_w;${3:TARGET}",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "logic [] _r, _w;",
      "matches": {
        "rw": true
      }
    },
    "0da81dd2-d1cc-305c-9d3b-9e26e8192bd1": {
      "content": "<returns>${1}</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<r": true
      }
    },
    "0daa0936-8028-3d68-8233-b53af03aefa9": {
      "content": "white-space: ${1:normal/pre/nowrap};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "white-space:  normal:pre:nowrap (white)",
      "matches": {
        "white": true
      }
    },
    "0dab4695-b90b-3b45-85e1-f44116e88ab7": {
      "content": "extends ${1:BaseClass}\n\n# class member variables go here, for example:\n# var a = 2\n# var b = \"textvar\"\n\nfunc _ready():\n\t# Called every time the node is added to the scene.\n\t# Initialization here\n\tpass",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "GDScript template",
      "matches": {
        "gdscript": true
      }
    },
    "0db659d0-3368-3e35-bfd5-6a76e5cbfd13": {
      "content": "expect(${1:target}).not.toBeLessThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not be less than (js)",
      "matches": {
        "notl": true
      }
    },
    "0dbbde7c-1098-33bb-a598-409cb39577f7": {
      "content": "edition = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "edition": true
      }
    },
    "0dbd1d40-5589-34a9-9b3a-7abfbe716c37": {
      "content": "<${1:elementName}>\n\t$0\n</${1}>",
      "doc": "an element",
      "filetype": "react",
      "grammar": "lsp",
      "label": "jsx element",
      "matches": {
        "j": true
      }
    },
    "0dbf3c6f-2e38-3dd2-baac-7b0efa26d271": {
      "content": "#[bench]\nfn ${1:name}(b: &mut test::Bencher) {\n    ${2:b.iter(|| ${3:/* benchmark code */})}\n}",
      "doc": "#[bench]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "bench",
      "matches": {
        "bench": true
      }
    },
    "0dc892bd-8b47-376d-b7b6-434b6f5839ae": {
      "content": "v-cloak",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-cloak",
      "matches": {
        "vcloak": true,
        "vue v-cloak": true
      }
    },
    "0dcd50f1-7046-39e9-918e-939b65c496ae": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-func-required",
      "matches": {
        "prop-types func required": true,
        "ptfr": true
      }
    },
    "0dd56d74-3165-39e5-91a2-b0d82d33af7a": {
      "content": "border-collapse collapse",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      }
    },
    "0dd5c6b8-02ea-3b2e-a53c-4f37bebb048f": {
      "content": "@while ${1:$i} ${2:>} ${3:0} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "0ddb38ef-ef16-3506-a337-6d0aaf0256b5": {
      "content": "${1|this,vm|}.\\$on('${2:event}', ${3:callback})$4",
      "doc": "vm.$on( event, callback )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$on",
      "matches": {
        "vmOn": true
      }
    },
    "0de6fb40-fcb3-313e-9a7b-0ef68aed3143": {
      "content": "if ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "0defc33e-0f58-3bc8-a099-3b8711cedbc7": {
      "content": "| modulo: ${1:2}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modulo": true
      }
    },
    "0df1ec21-5b93-3d40-a267-6bbf2544dcde": {
      "content": "<?php echo $this->${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pethis": true
      }
    },
    "0df3a2a8-e7f1-3e2d-892c-d1b68f4a428d": {
      "content": "data(${1:name})",
      "doc": "Load Dataset",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "dat",
      "matches": {
        "data": true
      }
    },
    "0df4706e-caf4-3850-b2f1-9643f410894a": {
      "content": "<#attempt>\n\t${0:${VISUAL}}\n<#recover>\n</#attempt>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#attempt>...<#recover></#attempt>",
      "matches": {
        "att": true
      }
    },
    "0df7b6ca-ce4e-3b81-a640-7f0a47d49905": {
      "content": "empty-cells: show;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      }
    },
    "0dfa09ba-36d6-3b81-9808-ef99ac753aa9": {
      "content": "renderXml(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renx": true
      }
    },
    "0dfadc0f-47f1-3f9e-a1ab-52aa3818e42f": {
      "content": "assertSame(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ass": true
      }
    },
    "0dfb3a89-72d7-32b7-a6b1-3657fe9aedac": {
      "content": "list-style-type: square;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      }
    },
    "0dfb4eef-9286-3e16-8f25-466b5cba3d20": {
      "content": "{% if $1 %}\n\t$2\n{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "0dfdc7e0-deef-3800-bb96-35ff77933318": {
      "content": "module.exports = {\n\tcss: {\n\t\tloaderOptions: {\n\t\t\t${1:sass}: {\n\t\t\t\tdata: `${2:@import '@/styles/_variables.scss';}`\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "vue.config.js",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-vue-config-js-import",
      "matches": {
        "vconfig": true,
        "vue vue.config.js import": true
      }
    },
    "0e06441d-d10d-3215-8e64-1dc1f419e563": {
      "content": "Belt.Int.fromString(${1:10})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Belt. fromString",
      "matches": {
        "bfs": true,
        "bfstr": true
      }
    },
    "0e0a40f4-9c5c-3843-8039-315681086f1f": {
      "content": "name=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "name": true
      }
    },
    "0e0b3630-fd1f-3a22-ad89-c2044182f71b": {
      "content": "flex-direction: column-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:cr": true
      }
    },
    "0e0e65cb-7308-3a62-a82b-da797a244858": {
      "content": "copypath\"\\$COBCPY;$1\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "copypath",
      "matches": {
        "copypath": true
      }
    },
    "0e0ec030-42ac-3f60-9b28-6e134202dc0e": {
      "content": "let [${1:name}] = ${2:value};",
      "doc": "Array destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-let-array",
      "matches": {
        "base let destruct array": true
      }
    },
    "0e1b3d54-0d32-3dae-9d2d-aecddddcf1b8": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) begin\n\t${4}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "0e20d47c-9a7e-3c14-b70c-f34734f41e6d": {
      "content": "function atan(${1:tangent})$0",
      "doc": "function trigonometric arc-tangent, or inverse tangent, of tangent",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-atan",
      "matches": {
        "function atan": true
      }
    },
    "0e2285e8-3454-3a88-8821-2b9978e0b758": {
      "content": "if ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "if ... end",
      "matches": {
        "if": true
      }
    },
    "0e296332-216c-3554-970a-d0b10327207f": {
      "content": "list-style-position: inside",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      }
    },
    "0e3fd642-d975-317b-aac8-66a628ea5024": {
      "content": "font-weight: bolder",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      }
    },
    "0e48cb84-77c6-3e28-81a4-e2c9ea6c443d": {
      "content": "(when ${1}\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "0e498acb-d7eb-3c53-9e36-f3d866ea2ef6": {
      "content": "_.reduceRight(${collection}, ${iteratee}, ${accumulator})",
      "doc": "var array = [[0, 1], [2, 3], [4, 5]];\n\n_.reduceRight(array, function(flattened, other) {\n  return flattened.concat(other);\n}, []);\n// => [4, 5, 2, 3, 0, 1]\n\nThis method is like `_.reduce` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reduceright",
      "matches": {
        "lodash reduceright": true
      }
    },
    "0e4b608d-f495-3c29-b932-4df3921eab2e": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplate: `$0`\n})\n\nexport class ${2:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }\n}",
      "doc": "Angular component with an inline template",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-component-with-inline-template",
      "matches": {
        "a-component-inline": true,
        "angular component inline template": true
      }
    },
    "0e5364cb-95aa-3c10-91f2-5343477f14df": {
      "content": "let rec ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnr": true
      }
    },
    "0e53f367-c9e4-36ef-b3b1-04391719e562": {
      "content": "try:\n\t# Short option syntax: \"hv:\"\n\t# Long option syntax: \"help\" or \"verbose=\"\n\topts, args = getopt.getopt(sys.argv[1:], \"${1:short_options}\", [${2:long_options}])\n\nexcept getopt.GetoptError, err:\n\t# Print debug info\n\tprint str(err)\n\t${3:error_action}\n\nfor option, argument in opts:\n\tif option in (\"-h\", \"--help\"):\n\t\t${0}\n\telif option in (\"-v\", \"--verbose\"):\n\t\tverbose = argument",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      }
    },
    "0e58b383-9dd0-39b6-b4a8-f3c74b01c2c0": {
      "content": "exp($2);",
      "doc": "float exp(float x)\nvec2 exp(vec2 x)\nvec3 exp(vec3 x)\nvec4 exp(vec4 x)\n\nThe exp function returns the constant e raised to the power of x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "exp",
      "matches": {
        "exp": true
      }
    },
    "0e5c6211-ba3c-3532-aaeb-c5d1f1b8d18f": {
      "content": "NSMutableString ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsms": true
      }
    },
    "0e5d5873-7395-3f5b-b42a-17210130c013": {
      "content": "mod ${1:#:mod_name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "0e625190-ba61-3285-95dc-c40ceb60c1cb": {
      "content": "{\n\t\"type\": \"range\",\n\t\"id\": \"$1\",\n\t\"min\": \"$2\",\n\t\"max\": \"$3\",\n\t\"step\": \"$4\",\n\t\"unit\": \"$5\",\n\t\"label\": \"$6\",\n\t\"default\": \"$7\"\n},$8",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema range",
      "matches": {
        "_range": true
      }
    },
    "0e62f099-32fc-3990-b658-d0fb2e02f108": {
      "content": "/**\n * ${0:description}\n *\n */",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/**": true
      }
    },
    "0e686792-bbc2-3d4e-ac9a-e91c3e1c09d8": {
      "content": "cursor: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      }
    },
    "0e686c29-cdbb-37dd-bd2a-6b1e1789c227": {
      "content": "text-transform: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      }
    },
    "0e6b9b57-cade-3638-ae6c-567ed609f9da": {
      "content": "module type ${1:(* Name *)} = sig\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "Declare module signature",
      "matches": {
        "mot": true
      }
    },
    "0e6f3d60-dd38-3fbd-a70f-891d1e95e726": {
      "content": "each_pair do |${1:name}, ${2:val}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eapd": true
      }
    },
    "0e7987be-d9c6-3ae2-829e-816670a7b6f2": {
      "content": "add_subdirectory(${0:src})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subdir": true
      }
    },
    "0e80f37c-18b0-3034-b78e-3f524e0a9af9": {
      "content": "font-family: ${0:Capitals,Impact},fantasy",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      }
    },
    "0e885703-695d-3742-b498-7908a5977e1f": {
      "content": "void main(string[] args)\n{\n\t${VISUAL}${0: /*code*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Main",
      "matches": {
        "main": true
      }
    },
    "0e888008-83a3-396f-8a86-cea7f9eea4b5": {
      "content": "grid-row-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg:0": true
      }
    },
    "0e9e13dc-edcf-3c0f-a194-333dca155ede": {
      "content": "each_with_index { |${1:e}, ${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawi": true
      }
    },
    "0ea90f50-4ee9-358f-abee-bed781bde39e": {
      "content": "try {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "0eb34c33-6d17-33a4-bee0-3ea847f47e26": {
      "content": "vertical-align: top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      }
    },
    "0ec135c1-5e4a-39a5-a71e-56122e0b1070": {
      "content": "#include <boost/${1:shared_ptr}.hpp>",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binc": true
      }
    },
    "0ec2978f-f760-39bb-9a8a-f21abcf6418c": {
      "content": "box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      }
    },
    "0ec3eaeb-686b-358e-9ba3-b2d41bb4e625": {
      "content": "import React from 'react'\nimport renderer from 'react-test-renderer'\n\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n  const defaultProps = {}\n  const wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n  test('render', () => {\n    expect(wrapper).toMatchSnapshot()\n  })\n})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setupReactTest",
      "matches": {
        "stest": true
      }
    },
    "0ecba81d-69b2-3d83-9515-d1019d3d44b0": {
      "content": "function sign(${1:number})$0",
      "doc": "sign representation of number as -1, 0, 1",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-sign",
      "matches": {
        "function sign": true
      }
    },
    "0edff213-7295-3f18-a8f9-197422fc6b5b": {
      "content": "fontWeight: '${1:normal}',",
      "doc": "fontWeight",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "fontWeight",
      "matches": {
        "fo": true
      }
    },
    "0ee13a4d-855e-3fbf-adb0-555a4e97126c": {
      "content": "require('dotenv').config()",
      "doc": "As early as possible in your application, require and configure dotenv.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-require",
      "matches": {
        "dotenv require": true
      }
    },
    "0eec851a-10b8-3805-8b85-026daa4aaa92": {
      "content": "names(${1:x})",
      "doc": "Names",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "nam",
      "matches": {
        "names": true
      }
    },
    "0ef15da4-46fb-32a3-80c7-278c5e6449a5": {
      "content": "destroyed () {\n\t${0};\n},",
      "doc": "destroyed lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-destroyed",
      "matches": {
        "vdestroyed": true,
        "vue lifecycle destroyed": true
      }
    },
    "0ef26a22-0066-3404-a2ba-dbd978239430": {
      "content": "vertical-align: text-top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      }
    },
    "0ef8d79e-3153-3850-a9ca-b862a9e9109e": {
      "content": "if {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "0ef9dc62-3908-3498-b920-273098669511": {
      "content": "interface ${1} extends ${2} {\n\t${3}: ${4:any};\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface extends",
      "matches": {
        "intx": true
      }
    },
    "0efb335c-8fbb-3ecf-877b-4f2e6b404e24": {
      "content": "after_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macr": true
      }
    },
    "0efb942d-c0b0-391a-9f63-bc0bf8b32d14": {
      "content": "....\n${0}\n....",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "literal block ... text ...",
      "matches": {
        "block-literal": true,
        "literalblock": true
      }
    },
    "0f09e23a-6604-3267-9283-a2f0948a3727": {
      "content": "mean(${1:x}${2:, na.rm=${3:FALSE}})",
      "doc": "Mean",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "mea",
      "matches": {
        "mean": true
      }
    },
    "0f0dfba4-4ca0-3543-85d1-9c1761b0c7a4": {
      "content": "{%- if ${1:condition} -%}\n\t${2}\n{%- else -%}\n\t${0}\n{%- endif -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse-": true
      }
    },
    "0f0e9510-3c22-30b9-a038-d66f489f18f5": {
      "content": "${1:obj}.focusOut(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusout": true
      }
    },
    "0f0f8e96-8afa-38d1-8ea8-0c1082dee473": {
      "content": "do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "do block",
      "matches": {
        "do": true
      }
    },
    "0f2817b1-3258-30e0-90ae-129c782f8db5": {
      "content": "summary(${1:dataName}, digits = ${2:digits}, maxsum = ${3:maxsum})",
      "doc": "Mean, median, 25th and 75th quartiles, min, and max of variables",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Descriptive statistics summary",
      "matches": {
        "summary": true
      }
    },
    "0f2f68ad-4299-3c31-999f-c532fa2d026a": {
      "content": "begin ${0:TARGET} end",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "beg": true
      }
    },
    "0f323f5f-51c5-33db-86d2-812acb01d894": {
      "content": "yup.reach()",
      "doc": "yup.reach(schema: Schema, path: string, value?: object, context?: object): Schema\n\nFor nested schemas yup.reach will retrieve a nested schema based on the provided path.For nested schemas that need to resolve dynamically, you can provide a value and optionally\na context object.let schema = object().shape({\n  nested: object().shape({\n    arr: array().of(object().shape({ num: number().max(4) }))\n  })\n});\n\nreach(schema, \"nested.arr.num\");\nreach(schema, \"nested.arr[].num\");\nreach(schema, \"nested.arr[1].num\");\nreach(schema, 'nested[\"arr\"][1].num');",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-reach",
      "matches": {
        "yup reach": true
      }
    },
    "0f3955ca-df60-37ac-8c2c-b094de566839": {
      "content": "*>> <summary>method $1</summary>\nmethod-id $1.\nprocedure division.\n    $0\nend method.",
      "doc": "method-id",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "method-id",
      "matches": {
        "method-id": true,
        "mi": true
      }
    },
    "0f39acd9-2cb1-3481-9664-5ce1401f2e05": {
      "content": "#define $0",
      "doc": "Code snippet for #define \" \"",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#def",
      "matches": {
        "def": true
      }
    },
    "0f3c36c6-5dba-3ed9-8670-7f01153b1641": {
      "content": "describe.only('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-only",
      "matches": {
        "desco": true,
        "jest describe only": true
      }
    },
    "0f3e3100-b0e2-30b5-b4b1-24facc6a93f9": {
      "content": "void main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "0f4315c4-f464-3aee-8649-8ae739b4147d": {
      "content": "struct ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "struct ... end",
      "matches": {
        "struct": true
      }
    },
    "0f44b0e2-f8ca-3bf7-9080-9ecd4cdacfd6": {
      "content": "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cz1}, ${4:cx2}, ${5:cy2}, ${6:cz2}, ${7:x}, ${8:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "bezierVertex": true
      }
    },
    "0f47c9b3-81a7-3168-9911-e914f8c527e1": {
      "content": "<main role=\"main\">\n\t${0}\n</main>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "0f5188d4-715a-3010-9880-72c581ca1337": {
      "content": "extlookup(\"${1:variable}\", \"${2:default}\", \"${3:data source}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Extlookup with defaults and custom data file",
      "matches": {
        "extlookup": true
      }
    },
    "0f5640fc-0783-3fe3-9ed7-836ad23e0f98": {
      "content": "import { $2 } from '${1:module}';$0",
      "doc": "Imports only a portion of the module in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importDestructing",
      "matches": {
        "imd": true
      }
    },
    "0f59e662-5e05-3100-a164-1689df400707": {
      "content": "justify-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      }
    },
    "0f5c05b4-02eb-3ecc-a500-50289c0ecf03": {
      "content": "__FUNCTION__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FUN": true
      }
    },
    "0f60feec-0cf2-3bd1-b724-ab9c49b3c405": {
      "content": "|...+.*..1....+....2....+....3....+....4....+....5....+....6....+....7..",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ruler",
      "matches": {
        "ruler": true
      }
    },
    "0f64ec6c-8bf8-3f4a-a4be-5ba7aac3d987": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      }
    },
    "0f6961c5-a493-36a6-bb69-d87a7699941b": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      }
    },
    "0f6a6968-4866-342f-96dc-d5b906f45671": {
      "content": "if ARGV.${1}\n\tabort \"Usage: #{$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usai": true
      }
    },
    "0f6ff781-54e2-3978-9d00-101ec6030a52": {
      "content": "_{${1:${TM_SELECTED_TEXT}}}",
      "doc": "subscript",
      "filetype": "latex",
      "grammar": "lsp",
      "label": "subscript",
      "matches": {
        "__": true
      }
    },
    "0f72142d-4c68-3e0b-8ec6-97113bd7d28a": {
      "content": "for ${1:pat} in ${2:expr} {\n    ${3:unimplemented!();}\n}",
      "doc": "for … in … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "0f741e3c-b113-3a0b-9b9d-ea167914a4fc": {
      "content": "setInterval(() => { ${1:first} }, ${2:second})",
      "doc": "Executes the given function at specified intervals",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setInterval",
      "matches": {
        "sti": true
      }
    },
    "0f77021e-796f-38a2-858a-868112925f60": {
      "content": "${1:FIELDNAME} = models.TimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TimeField",
      "matches": {
        "mtime": true
      }
    },
    "0f7ac7aa-1dd2-3093-996d-5ca6417e743a": {
      "content": "${1:m a} -> ${0:a}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->": true
      }
    },
    "0f7c0d51-6952-3255-b355-b4f6b501ac19": {
      "content": "$${1:#:arrayName} = array('${2}' => ${3} ${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "0f8713cb-8a82-31e4-88d5-fa885ae78535": {
      "content": "overflow-style: panner;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      }
    },
    "0f8a6d54-42c3-3c4b-a350-6ed169e483da": {
      "content": "| size",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      }
    },
    "0f914844-e470-33ed-8754-fd02f11de061": {
      "content": "for ${1:I} in ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "0f931abd-e525-3ca2-bf65-f2a4597ea9cf": {
      "content": "class ${1:class_name}:\n\t\"\"\"${2:description}\"\"\"\n\tdef __init__(self, ${3:args}):\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clai": true
      }
    },
    "0f933e34-5e62-3b7c-b00b-37c4fa7c7faa": {
      "content": "@after-enter=\"$1\"$0",
      "doc": "@after-enter=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "after-enter",
      "matches": {
        "afterEnterEvent": true
      }
    },
    "0f96e16e-988a-3358-ab4e-aeb564745d34": {
      "content": "{% firstof $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      }
    },
    "0f9fe78e-7f8f-3f86-9538-bbb3d66f0d98": {
      "content": "${1:obj}.each (index) ->\n\t${0:this.innerHTML = this + \" is the element, \" + index + \" is the position\"}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "0fa0f043-f82d-36de-9749-4c2c3007678c": {
      "content": "public ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      }
    },
    "0fa408aa-7489-38fd-9a62-4dcc436a1742": {
      "content": "comment on column ${1:table}.${2:column} is '${0:comment}';",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colcom": true
      }
    },
    "0fa4660e-4263-3b03-b0f6-a4ef565c80b8": {
      "content": ":source-highlighter: pygments$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: pygments",
      "matches": {
        "highlight-pygments": true,
        "hipygments": true
      }
    },
    "0fb1448e-fd63-32fb-bf41-55612194abcb": {
      "content": "<map name=\"${1}\" id=\"${2:$1}>\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map#": true
      }
    },
    "0fbf2aea-c32d-3cdb-bfca-105aa88a40f9": {
      "content": "${1:TMPFILE}=$(mktemp ${2:XXX})\ntrap \"rm -f '${$1}'\" 0               # EXIT\ntrap \"rm -f '${$1}'; exit 1\" 2       # INT\ntrap \"rm -f '${$1}'; exit 1\" 1 15    # HUP TERM\n${0}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tmp": true
      }
    },
    "0fc4e978-d23c-3b41-9ac6-fab2cc4d2673": {
      "content": "inspect $1 converting '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'",
      "doc": "inspect converting",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "inspect converting",
      "matches": {
        "inspect": true
      }
    },
    "0fc69788-0e32-3b3b-bf6a-41d19d898341": {
      "content": "spyOn(${1:object}, '${2:method}').and.returnValue(${3:arguments});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and return (js)",
      "matches": {
        "sr": true
      }
    },
    "0fc8acb5-8d01-3ea1-a256-310b29197c65": {
      "content": "t.timestamp :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.timestamp (tcts)",
      "matches": {
        "t.": true
      }
    },
    "0fcf1a1a-25db-3bf4-8b59-d0f66facbbd6": {
      "content": "${0:name}.map (a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapf": true
      }
    },
    "0fd57081-57f0-3a92-8637-69a09e9d4311": {
      "content": "TODO ${1:task description}",
      "doc": "TODO item",
      "filetype": "org",
      "grammar": "lsp",
      "label": "todo",
      "matches": {
        "todo": true
      }
    },
    "0fe3b33b-e10b-35d2-9cd5-a8bf5103e9ad": {
      "content": "${1:FIELDNAME} = serializers.UUIDField(${2})",
      "doc": "Django-rest Serializers ``UUIDField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF UUIDField",
      "matches": {
        "suuid": true
      }
    },
    "0fe4b92a-5c23-3a96-bab4-1447438c1882": {
      "content": "$this->db->get(\"${1:table}\", ${2:limit}, ${3:offset});${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-get": true
      }
    },
    "0fe4f936-7ed8-3675-8c0a-0ea30968987f": {
      "content": "text-height: text-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      }
    },
    "0fe94e19-779c-3399-8195-a79dc8d16710": {
      "content": "snippet ${1:trigger} \"${2:description}\"\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "snip": true
      }
    },
    "0ff16211-cf51-32b4-bb99-d6417a2004fa": {
      "content": "${1:obj}.addClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addClass": true
      }
    },
    "0ff8eef7-4ac3-38d2-90e5-94377ddf1620": {
      "content": "public ${1:int} ${2:MyProperty} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Simple property declaration",
      "matches": {
        "prop": true
      }
    },
    "0ffa240b-c2c8-3b35-9e1d-d5ad2f6d9600": {
      "content": "ALTER TABLE ${1:tableName}\n\tADD COLUMN ${2:col_name};",
      "doc": "Alter table - Add column",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "alterad",
      "matches": {
        "alterad": true
      }
    },
    "0ffc865e-b680-3a3b-b82d-f3cb715e2aea": {
      "content": "Yii::app()->cache->set('${1:key}', ${2:value}, ${3:expire}, new C${4:}CacheDependency(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycas": true
      }
    },
    "10048c1d-21d8-37ff-9853-138c251ac679": {
      "content": "if $${1:variable} {\n\t${2}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "1004e6f2-2c21-3729-8856-298c3ad98fc0": {
      "content": "<object width=\"$2\" height=\"$3\" classid=\"clsid:02BF25D5-8C17-4B23-BC80-D3488ABDDC6B\"\ncodebase=\"http://www.apple.com/qtactivex/qtplugin.cab\">\n\t<param name=\"src\" value=\"$1\">\n\t<param name=\"controller\" value=\"$4\">\n\t<param name=\"autoplay\" value=\"$5\">\n\t<embed src=\"${1:movie.mov}\"\n\t\twidth=\"${2:320}\" height=\"${3:240}\"\n\t\tcontroller=\"${4:true}\" autoplay=\"${5:true}\"\n\t\tscale=\"tofit\" cache=\"true\"\n\t\tpluginspage=\"http://www.apple.com/quicktime/download/\">\n</object>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "movie": true
      }
    },
    "10075d00-8a75-3d1b-8378-5879af20d173": {
      "content": "print_r(${0}, 1);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prs": true
      }
    },
    "1007c13c-c808-3048-9cfd-73212efdf3d5": {
      "content": "<datagrid>\n\t${0}\n</datagrid>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datagrid": true
      }
    },
    "100926be-5008-3cc8-9055-68bb7e38c018": {
      "content": "${1:my} class ${2:ClassName} ${3:is|does Parent|Role}{\n\t${4}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "100b1e17-a55b-313b-b1aa-cc1607bbd66a": {
      "content": "unsigned int ${1:object}Count = [${2:array} count];\n\nfor (unsigned int index = 0; index < $1Count; index++) {\n\t${3:id} $1 = [$2 $1AtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forarray": true
      }
    },
    "100cab6d-e229-339d-bd51-1ebde2c50f58": {
      "content": "expect($1).toBeUndefined();$0",
      "doc": "expects the argument is undefined",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobeundefined",
      "matches": {
        "jest expect tobeundefined": true,
        "tbu": true
      }
    },
    "100d6cf3-8342-3263-a2b9-1ff75b33e227": {
      "content": "docker {\n\timage '${1:myregistry.com/node'}'\n\tlabel '${2:my-defined-label'}'\n\tregistryUrl '${3:https://myregistry.com/'}'\n\tregistryCredentialsId '${4:myPredefinedCredentialsInJenkins'}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      }
    },
    "10127baa-09c7-322c-9ed0-db4505bf908d": {
      "content": "{\n\t\"type\": \"npm\",\n\t\"script\": \"${1:start}\",\n\t\"isBackground\": true,\n\t\"presentation\": {\n\t\t\"focus\": true,\n\t\t\"panel\": \"dedicated\"\n\t},\n\t\"group\": {\n\t\t\"kind\": \"build\",\n\t\t\"isDefault\": true\n\t},\n\t\"problemMatcher\": {\n\t\t\"owner\": \"typescript\",\n\t\t\"source\": \"ts\",\n\t\t\"applyTo\": \"closedDocuments\",\n\t\t\"fileLocation\": [\"relative\", \"\\${cwd\\}\"],\n\t\t\"pattern\": \"\\$tsc\",\n\t\t\"background\": {\n\t\t\t\"activeOnStart\": true,\n\t\t\t\"beginsPattern\": {\n\t\t\t\t\"regexp\": \"(.*?)\"\n\t\t\t},\n\t\t\t\"endsPattern\": {\n\t\t\t\t\"regexp\": \"Compiled |Failed to compile.\"\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create task to start Angular",
      "matches": {
        "a-task-start": true
      }
    },
    "101a9b2f-d671-3ae8-a647-ec812a2fad5b": {
      "content": "border-bottom-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-color: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "101b5708-c30e-3e94-8442-b7d3304ebc21": {
      "content": "DELETE FROM ${1:tableName}\n\tWHERE ${3:condition};",
      "doc": "Delete records",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "delete",
      "matches": {
        "delete": true
      }
    },
    "1027ab98-93ba-33df-8192-f250a9501d83": {
      "content": "console.clear();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.clear",
      "matches": {
        "cclear": true
      }
    },
    "10322f17-f104-3e24-abc9-57a7d72f44b4": {
      "content": "justify-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content: space-around",
      "matches": {
        "jcsa": true
      }
    },
    "1033bc84-bc44-38b1-aecb-71f802abf7f1": {
      "content": "border-top-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      }
    },
    "10340f36-a9cf-341b-adea-22cceb81baf3": {
      "content": "echo CHtml::activeName(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhan": true
      }
    },
    "10355408-efdb-3ca9-9cc1-c7e4776da691": {
      "content": "page-break-after right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      }
    },
    "1035f918-df42-341f-8cbe-006ec5d3d44a": {
      "content": "#region ${1:Name}\n    $0\n#endregion",
      "doc": "#region",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "#region",
      "matches": {
        "region": true
      }
    },
    "103765f2-95bf-3d16-b2b5-b3f3c7fa9751": {
      "content": "#!/usr/bin/env python\n$0",
      "doc": "Adds shebang line for default python interpreter.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "#!/usr/bin/env python",
      "matches": {
        "env": true
      }
    },
    "103e7500-fcc6-392d-872c-10ca1eaf55f8": {
      "content": "input(v-model=\"${1:data}\" type=\"text\")",
      "doc": "v-model directive",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-model Directive",
      "matches": {
        "vmodel": true
      }
    },
    "103f9280-a035-3b0b-9e3a-90306f1ecfd2": {
      "content": "lapply(${1:list}, ${2:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "lapply",
      "matches": {
        "lapply": true
      }
    },
    "10441928-afc0-30b8-8014-0b380774d1f9": {
      "content": "> ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert quoted text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert quoted text",
      "matches": {
        "quote": true
      }
    },
    "104b2132-4b4b-322e-b34b-7f74995605a6": {
      "content": "def this(arg) = this(arg)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "athis": true
      }
    },
    "104f664f-72ec-328b-8c5b-aefa2d2341ee": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\param $5 ${6:Parameter description}\n * \\return ${7:Return parameter description}\n */\n${8:void} ${9:function_name}(${10:Type} ${3:Parameter}, ${11:Type} ${5:Parameter})\n{\n\t${12}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun2": true
      }
    },
    "105344e8-cd3f-329c-b5f8-1cddda74b953": {
      "content": "task ${1} is\n\tentry ${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "task": true
      }
    },
    "10567fc7-0f28-30e4-840e-375efc2aabea": {
      "content": "align-items first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      }
    },
    "10572c4a-dae2-3f8e-974a-858836d02b51": {
      "content": "ortho(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${0:far});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ortho": true
      }
    },
    "105bb298-eec2-3c03-96d6-abb699912896": {
      "content": "File.open('${1:path/to/file.dump}', 'rb') { |${2:file}| Marshal.load($2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ml": true
      }
    },
    "106573b2-4122-3a51-afa3-9855283bfc46": {
      "content": "@react.component\nlet make = (${1}) => {\n\t${2}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "React Component",
      "matches": {
        "@react": true,
        "react.component": true
      }
    },
    "10690da6-9824-3d88-83c5-838b44f4ea33": {
      "content": "xhr :get, :${1:show}${2:, id: ${3:1}}$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr get",
      "matches": {
        "xget": true
      }
    },
    "106b3aac-562c-3116-9209-8be8f6616ef8": {
      "content": "{{#${1:value}}}\n${2:${VISUAL}}\n{{/$1}}\n{{^$1}}\n${3}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{#value}} ... {{/value}} {{^value}} ... {{/value}}",
      "matches": {
        "ife": true
      }
    },
    "1070b20b-7e08-3c25-b601-d43622247964": {
      "content": "-webkit-border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      }
    },
    "1075b271-93d2-3f67-a93d-0ba93f11c7e4": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      }
    },
    "10776f60-486e-3457-adf8-484c89f1ce3d": {
      "content": "def ${1:mname}(self, ${2:arg}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      }
    },
    "107808e7-495a-373d-a0c4-54707dd1884a": {
      "content": "/**\n * ${3:#:undocumented class variable}\n *\n * @var ${4:#:string}\n **/\n${1:#:var} $${2};${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_class_var": true
      }
    },
    "107dce37-3397-3b2e-ad2e-b41faadf3fb3": {
      "content": "while (${1:\\$${2:a} <= ${3:10}}) {\n\t${0:# code...}\n}",
      "doc": "While-loop",
      "filetype": "php",
      "grammar": "lsp",
      "label": "while …",
      "matches": {
        "while": true
      }
    },
    "107ee15c-50af-3792-9389-d67c603304bd": {
      "content": "/// <summary>\n/// $0\n/// </summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML summary comment",
      "matches": {
        "///": true
      }
    },
    "108867ac-77fd-3900-83e8-20bf08bc9abf": {
      "content": "$this->widget('CLinkPager', array('pages'=>$pages,'header'=>'${0}'}))",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ylinkpager": true
      }
    },
    "108e3054-0052-3b70-af8d-2fb1b54b6e52": {
      "content": "(for/product ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/product",
      "matches": {
        "forp": true
      }
    },
    "1092dd84-5651-30ab-a5cc-8374d8aa669c": {
      "content": "_.subtract(${minuend}, ${subtrahend})",
      "doc": "_.subtract(6, 4);\n// => 2\n\nSubtract two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-subtract",
      "matches": {
        "lodash subtract": true
      }
    },
    "1099973f-aaa0-3fe5-8270-e4a99a711d80": {
      "content": "{% do $1 %}$0",
      "doc": "do",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "do",
      "matches": {
        "do": true
      }
    },
    "10a003c8-b121-3533-8e4d-5a9dab6f46cd": {
      "content": "{% load ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      }
    },
    "10a73846-fcee-3a8d-88be-9fd4e0cfbb9c": {
      "content": "{% cache %}\n\t${0}\n{% endcache %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig cache",
      "matches": {
        "cache": true
      }
    },
    "10a79c09-cdc0-3a60-9618-7ca3cd757cff": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch {\n\tcase e: FileNotFoundException => ${2}\n\tcase e: IOException => ${3}\n} finally {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "10af55b5-1923-3336-89dc-03c929386f96": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "while (condition) { ... }",
      "matches": {
        "wh": true
      }
    },
    "10b26462-399a-3475-b9a4-27ede7263c51": {
      "content": "using ${1:#:path};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true,
        "using_import": true
      }
    },
    "10bc6a77-3e8a-3103-8645-897b9e84cd98": {
      "content": "<dt>${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      }
    },
    "10bfa1e0-25a2-37b3-8e5f-78ad4ccf1f90": {
      "content": "for ${1:i} = ${2:1:n}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "10c1b8c8-47e7-3e1a-87d1-a02818d6f52f": {
      "content": "<%doc>\n\t${1:}\n</%doc>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "doc",
      "matches": {
        "doc": true
      }
    },
    "10c33ba9-e424-36cb-a73d-86282545743b": {
      "content": "| url_encode",
      "doc": "String filter: url encode",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter url encode",
      "matches": {
        "url_encode": true
      }
    },
    "10ca739d-00a5-3014-a082-98bb3c4225b1": {
      "content": "${1:el}.classList.remove('${2:class}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "classList.remove",
      "matches": {
        "heclr": true
      }
    },
    "10ce10f0-2e48-38c2-a6ef-3ed0a78a11ac": {
      "content": "delegate: :${1:method}, to: :${0:object}",
      "doc": "delegate to",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Delegate to",
      "matches": {
        "dt": true
      }
    },
    "10ce25fc-9321-3c40-8448-5367c9cd615d": {
      "content": "_.range(${start}, ${end}, ${step})",
      "doc": "_.range(4);\n// => [0, 1, 2, 3]\n\n_.range(-4);\n// => [0, -1, -2, -3]\n\n_.range(1, 5);\n// => [1, 2, 3, 4]\n\n_.range(0, 20, 5);\n// => [0, 5, 10, 15]\n\n_.range(0, -4, -1);\n// => [0, -1, -2, -3]\n\n_.range(1, 4, 0);\n// => [1, 1, 1]\n\n_.range(0);\n// => []\n\nCreates an array of numbers (positive and/or negative) progressing from\n`start` up to, but not including, `end`. A step of `-1` is used if a negative\n`start` is specified without an `end` or `step`. If `end` is not specified,\nit's set to `start` with `start` then set to `0`.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-range",
      "matches": {
        "lodash range": true
      }
    },
    "10d3a03f-1bd5-3668-8caf-1379643654b9": {
      "content": "letter-spacing: ${0:2px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "letter-spacing",
      "matches": {
        "ls": true
      }
    },
    "10d691bc-7d4a-33b3-a166-0f6410bd9557": {
      "content": "{% cycle ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      }
    },
    "10d879bc-8f33-373b-8216-8abd740f9530": {
      "content": "$1 section.\n   $TM_SELECTED_TEXT\n$1-end section.\n   exit section.",
      "doc": "select-tosection",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "select-to-section",
      "matches": {
        "perform": true
      }
    },
    "10d96583-eb85-30c7-b047-0199b4014957": {
      "content": "import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n  static propTypes = {${2:second}: ${3:third}}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React component class with PropTypes and ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassComponentPropTypes",
      "matches": {
        "rccp": true
      }
    },
    "10da4382-22bb-356f-805e-03a64fd42447": {
      "content": "do\n{\n\t${VISUAL}$0\n} while (${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "do loop",
      "matches": {
        "do": true
      }
    },
    "10df839f-c2b5-3abf-a1cf-8fe5fb6feda6": {
      "content": "<%= render \"${1:index}.html\", ${2:var: @var} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render": true
      }
    },
    "10e2974a-e282-36ef-9082-1330ba9d9d81": {
      "content": "else\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "10e6ea39-b8fb-3048-93ea-f785bd6a11c6": {
      "content": "FUNCTION MEAN(${1:number},${2:...})$0",
      "doc": "statistical mean value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MEAN",
      "matches": {
        "FUNCTION MEAN": true
      }
    },
    "10ecfc11-da44-3f58-8eae-951b0165bae8": {
      "content": "${1:deferred}.fail(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dfail": true
      }
    },
    "10f2a6a5-66c1-3e18-8bfc-98fc2d6a49de": {
      "content": "overflow-style: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      }
    },
    "10f67188-0fae-306f-9f31-d510ab86ef66": {
      "content": "module type ${1} = {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modty": true
      }
    },
    "1108a373-4739-375a-b2fb-5f53ff031b4d": {
      "content": "${1:fn}.bind(${2:this}, ${3:arguments})",
      "doc": "function bind",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-bind",
      "matches": {
        "base function bind": true
      }
    },
    "110ff3cc-d4c5-3921-beca-de1c0f229075": {
      "content": "call \"$1\" using\n    by ${2|value,reference,content|} ${3:identifer}\n    returning ${4:return-code}\nend-call\n$0",
      "doc": "CALL literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "call",
      "matches": {
        "call": true
      }
    },
    "1111e176-ce7a-32d1-8465-9874be1e1ae2": {
      "content": "${1:FIELDNAME} = forms.FilePathField($2, path=${3:/absolute_path/}, required=${4:False})",
      "doc": "FilePathField (ffilepath)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ffilepath",
      "matches": {
        "ffilepath": true
      }
    },
    "111cc4b8-37fc-3acf-b024-1f65e9c0690b": {
      "content": "<table>\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table": true
      }
    },
    "111efe31-ee23-36e7-801b-cf8a2fe886aa": {
      "content": "while (${1:condition}) {\n\t${0}\n}",
      "doc": "while loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "while-loop",
      "matches": {
        "base while": true
      }
    },
    "111fa2f0-face-32bc-b07b-4cbe7a762ce1": {
      "content": "(defrecord ${1:name} [${2:fields}]\n\t${3:protocol}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      }
    },
    "111fd0ff-d566-3e25-9c73-6768c29c7c5c": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport { Component, Vue } from 'vue-property-decorator';\n\n\t@Component\n\texport default class ${0} extends Vue {\n\t\t\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Class based Typescript format",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Class based Typescript format",
      "matches": {
        "vbase-ts-class": true
      }
    },
    "1123fea4-916f-3d18-bc1a-3e64ba179e03": {
      "content": "_.intersectionBy(${arrays}, ${iteratee})",
      "doc": "_.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [2.1]\n\n// The `_.property` iteratee shorthand.\n_.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }]\n\nThis method is like `_.intersection` except that it accepts `iteratee`\nwhich is invoked for each element of each `arrays` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersectionby",
      "matches": {
        "lodash intersectionby": true
      }
    },
    "11244bbd-2837-33f9-9ce7-fa2d496bc1ce": {
      "content": "create sequence ${1:name} start with ${2:1} increment by ${3:1} minvalue ${0:1};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seq": true
      }
    },
    "112a121a-effb-3e87-8d1f-bae331807aa5": {
      "content": "form_button(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_button": true
      }
    },
    "112e4494-83f2-3296-b9b5-abf171b96a5e": {
      "content": "cut:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      }
    },
    "112efb51-61f4-33de-955c-cd2c34eec12c": {
      "content": "#if ${1:0}\n$0\n#endif /* $1 */",
      "doc": "Code snippet for #if",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#if",
      "matches": {
        "#if": true
      }
    },
    "11369624-9790-39d5-ba7e-25ee59344eb2": {
      "content": "list-style-position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      }
    },
    "1138cfe1-a347-3656-b3bc-646bb80d3dcc": {
      "content": "background-attachment: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      }
    },
    "1138fe14-d084-374b-bb3b-d4cef9befee5": {
      "content": "[[NSUserDefaults standardUserDefaults] objectForKey:${1:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Read from defaults (getprefs)",
      "matches": {
        "getprefs": true
      }
    },
    "11391bbc-1bd1-3745-aa18-89760e25fc0c": {
      "content": "left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      }
    },
    "113ad286-a16f-3630-8be2-d42075efe480": {
      "content": "/**\n * ${1:undocumented constant}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_dp": true
      }
    },
    "1140e31e-2ad9-37aa-8d1b-97bdd63e9c3c": {
      "content": "\\begin{titlepage}\n\t${1:TARGET}\n\\end{titlepage}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{titlepage} \\titlepage": true,
        "titlepage": true
      }
    },
    "11412163-3212-34db-852e-ad24238f0045": {
      "content": "console.assert(${1:expression}, ${2:object});",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleAssert",
      "matches": {
        "cas": true
      }
    },
    "11428c50-01e0-3bb7-a30a-8d7c1af2bb94": {
      "content": "console.log(${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "console.log",
      "matches": {
        "cl": true
      }
    },
    "11490147-7430-3e17-871c-18856891b5f3": {
      "content": "_.rearg(${func}, ${indexes})",
      "doc": "var rearged = _.rearg(function(a, b, c) {\n  return [a, b, c];\n}, [2, 0, 1]);\n\nrearged('b', 'c', 'a')\n// => ['a', 'b', 'c']\n\nCreates a function that invokes `func` with arguments arranged according\nto the specified `indexes` where the argument value at the first index is\nprovided as the first argument, the argument value at the second index is\nprovided as the second argument, and so on.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rearg",
      "matches": {
        "lodash rearg": true
      }
    },
    "114e7a1f-38cf-3170-8fd4-9042d9941eb5": {
      "content": "::before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      }
    },
    "1153bfe5-f3f0-34ce-a8b8-4c7f74341bea": {
      "content": "typedef struct {\n\t$0\n} ${1:MyStruct};",
      "doc": "Code snippet to define a type with struct",
      "filetype": "c",
      "grammar": "lsp",
      "label": "typedef struct",
      "matches": {
        "structt": true
      }
    },
    "1158689d-48e7-39a8-abe6-c582f754efbc": {
      "content": "console.groupCollapsed(\"${1:label}\");\n${0:${VISUAL}}\nconsole.groupEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.groupCollapsed",
      "matches": {
        "cgroupc": true
      }
    },
    "115dab96-fc40-3a86-b776-db64822037fc": {
      "content": "console.error(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.error",
      "matches": {
        "ce": true
      }
    },
    "115fac78-2ec7-31a4-8963-18e04cd9122a": {
      "content": "t.float :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.float (tcf)",
      "matches": {
        "t.": true
      }
    },
    "116faae3-7de3-3a3a-a04c-6bfd69e3711b": {
      "content": "given ($${1:var}) {\n\t${2:# cases}\n\t${0:# default}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "given": true
      }
    },
    "11707c1b-fceb-35a1-90f6-d40bc2ecef7e": {
      "content": "display: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      }
    },
    "1173dfa8-ba01-3949-b6d9-8871c330e709": {
      "content": "`r ${0}`",
      "doc": "",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert Inline Chunck",
      "matches": {
        "`": true
      }
    },
    "11852293-86e7-39cb-8307-739476d2ba5f": {
      "content": "<rt>$1</rt>$2",
      "doc": "HTML - Defines explanation to ruby annotations",
      "filetype": "html",
      "grammar": "lsp",
      "label": "rt",
      "matches": {
        "rt": true
      }
    },
    "1185bf06-6c6e-3798-a1bf-d12067bf8805": {
      "content": "enum ${1:Name} {${2:item1}, ${3:item2} }",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "enum declaration",
      "matches": {
        "enum": true
      }
    },
    "118abea7-9a0f-38ef-acd2-63af82b28fb7": {
      "content": "# encoding: utf-8",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enc": true
      }
    },
    "118fb489-257c-3daa-9966-b38380ace57d": {
      "content": "{\n\tpath: '${1:path}', \n\tloadChildren: () => import('${2:lazy-path}').then(m => m.${3:lazy-module})\n},",
      "doc": "Angular lazy route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-lazy-route-path",
      "matches": {
        "a-route-path-lazy": true,
        "angular lazy route path": true
      }
    },
    "11a23632-c2f3-3209-bc14-ce7d546b8912": {
      "content": "text-emphasis: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      }
    },
    "11a56926-4ea3-3d14-ae6f-158c79190ad6": {
      "content": "const ${1} = styled(${2})`\n  ${3}\n`;",
      "doc": "Styled-Component from existing component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-from-existing-component",
      "matches": {
        "scc": true,
        "styled-components component from existing": true
      }
    },
    "11aab120-2563-3c51-b116-fc7f4d3631ce": {
      "content": "if ${1:TARGET}\nthen ${2}\nelse ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "if..then..else",
      "matches": {
        "If": true
      }
    },
    "11abcbc3-9bd3-3ad9-a216-f29fa3a33904": {
      "content": "| strip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip": true
      }
    },
    "11b6c1a8-5957-3205-9785-494b49621fa6": {
      "content": "map(${1:value}, ${2:low1}, ${4:high1}, ${5:low2}, ${0:high2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "11b73f13-4341-33c2-ab9b-ffa89e9b603a": {
      "content": "${1:deferred}.notify(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotify": true
      }
    },
    "11bc00bc-fc0e-391e-bff6-5fbadfe765a2": {
      "content": "PropTypes.number",
      "doc": "Number prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      }
    },
    "11c3236f-7d52-3f6c-be74-c5c02ee86f39": {
      "content": "@version ${0:#:version}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ver": true,
        "version": true
      }
    },
    "11cb7d9d-a939-35cc-a96c-aea82b8b63de": {
      "content": "#!/usr/bin/env falcon",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "11d1fc40-dbb6-3e83-ba01-a6590f671fc8": {
      "content": "public ${1:void} ${2:name}(${3}) {\n\t$0\n}",
      "doc": "public method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Public method",
      "matches": {
        "public_method": true
      }
    },
    "11dac730-f619-3c76-9e0f-8357496cd7c3": {
      "content": "border-style dotted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      }
    },
    "11dc0ad2-3989-3ba1-8fa4-52602314e47c": {
      "content": "(${1:args}) ->\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "11dceed4-ff8a-389d-8a2c-d84bcfe8b3ac": {
      "content": "export const ${1:functionName} = (${2:params}) => {\n\t$0\n};",
      "doc": "Export named function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportNamedFunction",
      "matches": {
        "enf": true
      }
    },
    "11e3b4db-c2fe-36cc-98d1-458e017f2ff8": {
      "content": "_.differenceWith(${array}, ${values}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\n_.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n// => [{ 'x': 2, 'y': 1 }]\n\nThis method is like `_.difference` except that it accepts `comparator`\nwhich is invoked to compare elements of `array` to `values`. The order and\nreferences of result values are determined by the first array. The comparator\nis invoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.pullAllWith`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-differencewith",
      "matches": {
        "lodash differencewith": true
      }
    },
    "11ea0c6e-9d61-3c53-ad10-8358b64a87b4": {
      "content": "import { motion, AnimateSharedLayout } from \"framer-motion\"",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-import-animate-shared-layout",
      "matches": {
        "animate-presence": true,
        "framer-motion import animate-shared-layout": true
      }
    },
    "11f099ba-2462-33cc-94a2-aa1bfb4acf70": {
      "content": "import Vue from 'vue'\nimport ${1:VueCompositionApi} from '${2:@vue/composition-api}'\n\nVue.use(${1:VueCompositionApi})",
      "doc": "Import a plugin to main.js or plugins file",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Plugin import",
      "matches": {
        "vplugin": true
      }
    },
    "11f65656-4865-3785-92d7-07a5f959ae59": {
      "content": "_.isUndefined(${value})",
      "doc": "_.isUndefined(void 0);\n// => true\n\n_.isUndefined(null);\n// => false\n\nChecks if `value` is `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isundefined",
      "matches": {
        "lodash isundefined": true
      }
    },
    "11f6ef79-3e96-3b8a-bc09-fbe97b053694": {
      "content": "expect(${1:target}).not.toBeNull()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be null (coffee)",
      "matches": {
        "notn": true
      }
    },
    "11fafe22-f9a8-3662-91a6-aa7674f9c0e3": {
      "content": "\\\\DeclareMathOperator{${1}}{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\DeclareMathOperator",
      "matches": {
        "dmo": true
      }
    },
    "11ff40bb-ac4c-3457-a08d-337b9a2a6c10": {
      "content": "include(ExternalProject)\nExternalProject_Add(${1:googletest}\n  URL ${2:http://googletest.googlecode.com/files/gtest-1.7.0.zip}\n  URL_HASH SHA1=${3:f85f6d2481e2c6c4a18539e391aa4ea8ab0394af}\n  SOURCE_DIR \"${4:${CMAKE_BINARY_DIR}/gtest-src}\"\n  BINARY_DIR \"${0:${CMAKE_BINARY_DIR}/gtest-build}\"\n  CONFIGURE_COMMAND \"\"\n  BUILD_COMMAND     \"\"\n  INSTALL_COMMAND   \"\"\n  TEST_COMMAND      \"\"\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ext_url": true
      }
    },
    "11ff5b87-5948-36f8-9f8f-693de299a2c3": {
      "content": "accept ${1}(${2}) do\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "accept": true
      }
    },
    "1205120c-5c3e-34af-9c3f-39ff16bb46c1": {
      "content": "using ${1:Name} = ${2:Type};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typedef": true,
        "using_typedef": true
      }
    },
    "1205996f-8b99-3543-b290-ab023ccb50b6": {
      "content": "${1:obj}.siblings('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sib": true
      }
    },
    "120bbbdd-5031-3be9-9d6e-b810f374efbb": {
      "content": "href=\"${1:#}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "href": true
      }
    },
    "120c55f4-5c97-3f7f-b5a5-af128c65a32f": {
      "content": "| ${1:Column1}  |\n|-------------- |\n| ${2:Item1}    |\n| ${3:Item2}    |\n| ${4:Item3}    |\n${0}",
      "doc": "Insert table with 4 rows and 1 column. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 4x1 table",
      "matches": {
        "4x1table": true
      }
    },
    "12114b78-fdce-33dc-81b3-9366b5908b23": {
      "content": "font-emphasize-position: after;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      }
    },
    "1213253d-298c-3d3d-92a8-5286658c1080": {
      "content": "${1:promise}.catch((${2:err}) => {\n\t${0}\n})",
      "doc": "Promise.catch",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-catch",
      "matches": {
        "base promise catch": true
      }
    },
    "12144077-c4d4-3109-9321-c94aa2867c2c": {
      "content": "validates_presence_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:can't be blank}\"}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of if (vpif) 2",
      "matches": {
        "vpif": true
      }
    },
    "12288c9c-4bda-341c-978a-21a5dd7224e2": {
      "content": "align-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      }
    },
    "122962d8-e7c2-3cec-b230-c01e486c3866": {
      "content": "{\n\tblock : '${1:name}',\n\tcontent : [\n\t\t'${2:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "1229fb72-3f64-3fcb-80b3-9c445bd42613": {
      "content": "visibility ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      }
    },
    "122e2f02-3e0c-349a-a643-017426fd63b5": {
      "content": "if ${1:test}\n\t$0\nelse\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "if else",
      "matches": {
        "if else": true
      }
    },
    "123f1bcd-c040-358c-be1c-c934ee08ce0d": {
      "content": "go func($1) {\n\t$0\n}($2)",
      "doc": "Snippet for anonymous goroutine declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "goroutine anonymous function",
      "matches": {
        "go": true
      }
    },
    "12483c13-0b63-31a2-951e-80c5f052da79": {
      "content": "word-break break-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      }
    },
    "125070d2-10ac-3b9c-a8fd-15330320aeed": {
      "content": "<Link to=\"${1:/blog}\" activeStyle={{ ${2:color}: \"${3:red}\" }} >Text</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-activestyle",
      "matches": {
        "gatsby link activestyle": true
      }
    },
    "12599651-af0a-38de-b762-2b1ef1bc20f2": {
      "content": "margin-top auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      }
    },
    "1262c3df-5af6-38f0-a654-3241a68378ae": {
      "content": "!> @param[${1}]${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doxp": true
      }
    },
    "126df8b1-2f14-3d94-b430-35bbcd6251a3": {
      "content": "right: ${1},",
      "doc": "right",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "right",
      "matches": {
        "ri": true
      }
    },
    "126fe0bf-15bf-320e-86a4-a23160e7c7d3": {
      "content": "| remove_first: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remove_first": true
      }
    },
    "12738f46-a5f7-30bd-a429-82ad4c9d3c99": {
      "content": "resources:\n{{ toYaml .Values.${1:value_key}.resources | indent 12 }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resources_spec": true
      }
    },
    "127916be-000d-357c-856a-dfccaeabc6a3": {
      "content": "def ${1:name}(${0:arg}) =\n\tif($2) $2\n\telse $1($2)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      }
    },
    "127d64e5-3c86-36de-b8a9-c302b3a16fe0": {
      "content": "working-storage section.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "working-storage section",
      "matches": {
        "working-storage": true,
        "ws": true
      }
    },
    "127d767c-af9a-39e7-a2ff-74b6b55584c8": {
      "content": "break ${0}",
      "doc": "The break command tells Bash to leave the loop straight away.\n\nEnter the break or break (n) where n=number of loops.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "break",
      "matches": {
        "break": true
      }
    },
    "1282c14b-0e41-37ce-b910-ee387fb26bdd": {
      "content": "{% if ${1:condition} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "128b21cf-ad27-3b21-9430-b3a1e46c70cc": {
      "content": "DELIMITED BY SIZE",
      "doc": "DELIMITED BY SIZE (string)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "DELIMITED",
      "matches": {
        "DBS": true,
        "DELIMITED BY SIZE": true
      }
    },
    "1292aa2a-acfb-3589-94b2-1268f257237b": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      }
    },
    "129a4eb8-d02f-3c41-b3e0-1a3f95ce35de": {
      "content": "border-bottom-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      }
    },
    "129b07fa-55c6-3ca2-9512-d2a5fa50a7bb": {
      "content": "if ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "129b8049-1714-385c-9560-41cb8abc989d": {
      "content": "(${1:key} for ${2:value} in ${3:iterable})$0",
      "doc": "Create a generator based on existing iterables.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Generator comprehension",
      "matches": {
        "gc": true
      }
    },
    "12a0f955-bb0e-3e00-8ae3-720c57ea63c4": {
      "content": "finally\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "finally statement",
      "matches": {
        "fin": true
      }
    },
    "12a14ff2-5920-33e8-b445-6ff8946116d2": {
      "content": "<small>$1</small>$2",
      "doc": "HTML - Defines small text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "small",
      "matches": {
        "small": true
      }
    },
    "12a44cb6-e703-3dd5-a2ae-92f9dd6315e1": {
      "content": "| times: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "times": true
      }
    },
    "12b3bc11-58e3-3bf4-a410-df914f1b154b": {
      "content": "${1:fn} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      }
    },
    "12bb9a75-5c38-39be-9319-995dde585b36": {
      "content": "fn ${1:args} -> ${0} end",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "12be91a0-5865-3e99-ab8e-2e55b90b9c7b": {
      "content": "${1} Send ${2} to ${1}, if ${1} supports it}${3}\nif ([${1:self} respondsToSelector:@selector(${2:someSelector:})])\n{\n    [${1} ${3}];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "res": true
      }
    },
    "12c4ff13-a394-3e77-8fa8-67be30ddfaf0": {
      "content": "@\"${1}\"",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s": true
      }
    },
    "12d33835-97a8-3c24-8c60-dcf1de565126": {
      "content": "while ($1) {\n\t${2:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "12d4fd2e-f7fc-35d3-a143-6cbc16036aa6": {
      "content": "background-clip border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      }
    },
    "12dc6c6d-2218-389e-81f3-9efb5f33ef8e": {
      "content": "alias_method :${1:new_name}, :${0:old_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "am": true
      }
    },
    "12e45b64-6fdf-34b4-a743-f4c8183da9ae": {
      "content": "exports.${1:member} = ${2:value};",
      "doc": "exports.member",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exports-member",
      "matches": {
        "base exports member": true
      }
    },
    "12e4d413-f2a2-3630-a0e9-ee631e58e067": {
      "content": "use Symfony\\Bundle\\FrameworkBundle\\Controller\\Controller;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Controller",
      "matches": {
        "usecontroller": true
      }
    },
    "12e6b3d6-8818-304f-9043-4119d6a22e7f": {
      "content": "display: table-row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      }
    },
    "12f89c1c-7a58-3e20-8827-252a8a259cca": {
      "content": "${${1:0}:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${X:default}",
      "matches": {
        "$:": true
      }
    },
    "12fabdc6-a23e-39b1-948c-3f0260e474be": {
      "content": "ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      }
    },
    "12fcf1ae-d431-3d5c-97b4-a96f5ef32134": {
      "content": "&#x2192;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "right": true
      }
    },
    "12fd9a47-56f8-3c39-81d4-4f734df6d397": {
      "content": "curve(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${0:y4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curve": true
      }
    },
    "130649fb-543f-3a29-83e2-8ff4a4f0c25d": {
      "content": "function cos(${1:angle})$0",
      "doc": "function trigonometric cosine of angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-cos",
      "matches": {
        "function cos": true
      }
    },
    "130aab08-e30e-3b3b-88fa-c5d8c2204315": {
      "content": "const dispatch = createEventDispatcher();",
      "doc": "svelte dispatch",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch",
      "matches": {
        "s-dispatch": true
      }
    },
    "13130855-23fc-3964-97e8-3cf32f0ee3ae": {
      "content": "${1:FIELDNAME} = forms.IPAddressField($2)",
      "doc": "IPAddressField (fip).\n\nThis field has been deprecated since version 1.7 in favor of GenericIPAddressField.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fip",
      "matches": {
        "fip": true
      }
    },
    "131b47ca-21df-3af8-bd2a-dbee26e149f5": {
      "content": "test(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "test conventional commit",
      "matches": {
        "test": true
      }
    },
    "131db561-19c1-34ee-a71b-f2247bf78a32": {
      "content": "func ${1:funcName}(${2}) ${3:error} {\n\t${4}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      }
    },
    "131fbc40-07da-37f8-a7d3-4c23a3384eff": {
      "content": "save_and_open_screenshot${0}",
      "doc": "save_and_open_screenshot",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Save and open screenshot",
      "matches": {
        "saos": true
      }
    },
    "1320d13e-935d-3ac5-aa16-4676a49f8a50": {
      "content": "border: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      }
    },
    "1321a27e-93d2-32ad-b00d-4410bf472bb6": {
      "content": "while ${1:(* condition *)} do\n\t${2:(* A *)}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "133413d7-2535-3dc4-96ea-3a706d940057": {
      "content": "write(${1:*},${2:*}) ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "write",
      "matches": {
        "wr": true
      }
    },
    "133d98af-c550-3e76-b6c7-ee977bf6561d": {
      "content": "mixed.strip()",
      "doc": "mixed.strip(stripField: boolean = true): Schema\n\nMarks a schema to be removed from an output object. Only works as a nested schema.let schema = object({\n  useThis: number(),\n  notThis: string().strip()\n});\n\nschema.cast({ notThis: \"foo\", useThis: 4 }); // => { useThis: 4 }",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-strip",
      "matches": {
        "yup mixed strip": true
      }
    },
    "1340000c-2684-3a7b-9af7-4f625442227a": {
      "content": ".. tip::\n\t${0:my tips}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tip:": true
      }
    },
    "134656cb-caea-3047-95af-43b2f45a6ab4": {
      "content": "\\\\subsubsection*{${1:subsubsection name}}%\n\\\\label{ssub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsubsection*",
      "matches": {
        "ssub*": true
      }
    },
    "1349c909-a5c0-3237-af80-adaabd96c73a": {
      "content": "return ${0:result};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "134c21b0-25b2-3fb0-bf31-2dbaf6f501f9": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n\t\tstage('${3:Test}'){\n\t\t\tsteps {\n\t\t\t\tsh '${4:make check}'\n\t\t\t\tjunit '${5:reports/**/*.xml}'\n\t\t\t}\n\t\t}\n\t\tstage('${6:Deploy}') {\n\t\t\tsteps {\n\t\t\t\tsh '${7:make publish}'\n\t\t\t}\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipeline_sample": true
      }
    },
    "135df89e-0e34-3cdb-9320-da935f69ddc8": {
      "content": "expect(${1:target}).toBe(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be (js)",
      "matches": {
        "eb": true
      }
    },
    "135e3149-16cd-309d-aec7-2f3f483538b0": {
      "content": "// https://uniswap.org/docs/v2/smart-contracts/pair/\r\n// https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Pair.sol implementation\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Pair {\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n  function name() external pure returns (string memory);\r\n  function symbol() external pure returns (string memory);\r\n  function decimals() external pure returns (uint8);\r\n  function totalSupply() external view returns (uint);\r\n  function balanceOf(address owner) external view returns (uint);\r\n  function allowance(address owner, address spender) external view returns (uint);\r\n\r\n  function approve(address spender, uint value) external returns (bool);\r\n  function transfer(address to, uint value) external returns (bool);\r\n  function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n  function nonces(address owner) external view returns (uint);\r\n\r\n  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n\r\n  event Mint(address indexed sender, uint amount0, uint amount1);\r\n  event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\r\n  event Swap(\r\n      address indexed sender,\r\n      uint amount0In,\r\n      uint amount1In,\r\n      uint amount0Out,\r\n      uint amount1Out,\r\n      address indexed to\r\n  );\r\n  event Sync(uint112 reserve0, uint112 reserve1);\r\n\r\n  function MINIMUM_LIQUIDITY() external pure returns (uint);\r\n  function factory() external view returns (address);\r\n  function token0() external view returns (address);\r\n  function token1() external view returns (address);\r\n  function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\r\n  function price0CumulativeLast() external view returns (uint);\r\n  function price1CumulativeLast() external view returns (uint);\r\n  function kLast() external view returns (uint);\r\n\r\n  function mint(address to) external returns (uint liquidity);\r\n  function burn(address to) external returns (uint amount0, uint amount1);\r\n  function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\r\n  function skim(address to) external;\r\n  function sync() external;\r\n}",
      "doc": "Uniswap Pair Interface",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "uniV2Pair",
      "matches": {
        "uniV2Pair": true
      }
    },
    "1360a408-397e-38af-bbaa-30691b6eefde": {
      "content": "border-left: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      }
    },
    "1366b873-d69a-3ebb-a409-1bb43cc111bd": {
      "content": "beforeRouteLeave(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router component guards beforeRouteLeave",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteLeave",
      "matches": {
        "vbeforerouteleave": true
      }
    },
    "13699401-6968-3176-9b8e-8b36920e6cdf": {
      "content": "enum ${1:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      }
    },
    "136bfeb3-b11a-33a5-8259-f3ad0d2e1259": {
      "content": "main :: IO ()\nmain = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "136df75d-620a-34f0-9e0e-2826c187898d": {
      "content": "justify-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      }
    },
    "137081a0-1367-350c-a36e-174cf6f084b3": {
      "content": "#!/usr/bin/awk -f",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "#!/usr/bin/awk -f",
      "matches": {
        "#!": true
      }
    },
    "13747054-17b3-314f-ae30-33af23ae00ef": {
      "content": "function ${1:Singleton} (${2:argument}) {\n\t// the cached instance\n\tvar instance;\n\n\t// rewrite the constructor\n\t$1 = function $1($2) {\n\t\treturn instance;\n\t};\n\n\t// carry over the prototype properties\n\t$1.prototype = this;\n\n\t// the instance\n\tinstance = new $1();\n\n\t// reset the constructor pointer\n\tinstance.constructor = $1;\n\n\t${0}\n\n\treturn instance;\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sing": true
      }
    },
    "13795b41-803a-3a81-aa9d-b4afcf259316": {
      "content": "/$0/",
      "doc": "italic words",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "italic",
      "matches": {
        "italic": true
      }
    },
    "137ad0ed-5e5f-3b4a-b3c7-8b9550be56f9": {
      "content": "my $fh = open \"${1:filename}\", ${2::r|:w|:a};\n${3:# actions};\n$fh.close;",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "open": true
      }
    },
    "137bca7c-07c0-31ea-b957-5a1a8068de73": {
      "content": "<IfModule ${1:mod_example.c}>\n\t${0:${VISUAL}}\n</IfModule>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmodule": true
      }
    },
    "137c8a9c-2754-3dfb-ba3a-2f78925ac081": {
      "content": "refute_same ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfs": true
      }
    },
    "1388fc8c-e23d-3b6d-b799-40fc33524e3e": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-shape",
      "matches": {
        "prop-types shape": true,
        "ptsh": true
      }
    },
    "138eb24d-a2d0-3c99-9c13-af4f5b71f727": {
      "content": "break;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      }
    },
    "1394d98f-75fe-3cad-ab35-fbb3eb91bfc6": {
      "content": "${1:/* condition */} ? ${2:a} : ${0:b}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "1395c256-c68f-355d-9bb6-af643048f52a": {
      "content": "cosh($2)",
      "doc": "return the hyperbolic cosine of the parameter",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "cosh",
      "matches": {
        "cosh": true
      }
    },
    "139d5cd0-06d9-3a16-ac13-7cc9104efbb8": {
      "content": "switch(${1:/*var*/})\n{\n\tcase ${2:/*value*/}:\n\t\t$3\n\t\tbreak;\n\tcase ${4:/*value*/}:\n\t\t$5\n\t\tbreak;\n\t${7:/*more cases*/}\n\tdefault:\n\t\t${6:assert(false);}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "switch (sw)",
      "matches": {
        "sw": true
      }
    },
    "13a25b9f-832b-3184-89a4-302f1903a8fe": {
      "content": "function ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts function",
      "matches": {
        "tfun": true
      }
    },
    "13a8b204-d201-31d5-858a-767689c61f3c": {
      "content": "val ${1:name} = ${2:value}",
      "doc": "Snippet for a variable",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "variable declaration with val",
      "matches": {
        "val": true
      }
    },
    "13af02e1-cd11-3ee5-96b9-d77dfddb02aa": {
      "content": "reject { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rej": true
      }
    },
    "13b0266b-258c-3462-9db6-15b845eedf7d": {
      "content": "{% include \"${1:template}\" %}$0",
      "doc": "include",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "include",
      "matches": {
        "include": true
      }
    },
    "13b26227-bd6f-323c-aee3-575a9e9fd88b": {
      "content": "upto(${1:1.0/0.0}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "upt": true
      }
    },
    "13b270ef-851a-3aba-95ed-965f2e8099cb": {
      "content": "watch: {\n\t${1:data}(${2:newValue}, ${3:oldValue}) {\n\t\t${0}\n\t}\n},",
      "doc": "vue watcher",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-watchers",
      "matches": {
        "vue watchers": true,
        "vwatcher": true
      }
    },
    "13b430f5-fe78-3cdb-8914-b31eaa3869b6": {
      "content": "| times: ${times:1}",
      "doc": "Math filter: times",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter times",
      "matches": {
        "times": true
      }
    },
    "13ba8650-83a3-3fcc-a3bc-e5b18705ac0a": {
      "content": "<h3 class=\"${1}\">${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3.": true
      }
    },
    "13bf659c-0f59-3fda-9bc6-f2ddf26d78a2": {
      "content": "dispatch_semaphore_create(${1:intptr_t value})",
      "doc": "Create a dispatch_semaphore_create",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch semaphore create",
      "matches": {
        "dispatchsemaphorecreate": true
      }
    },
    "13c12f1d-b6a9-32aa-b37d-32465383f9f2": {
      "content": "move 0 to ${2:counter}\ninspect ${1:source} tallying ${2:counter} for ${3|all spaces,all $4,characters|}",
      "doc": "Inspect a tallying counter for ...",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "inspect tallying",
      "matches": {
        "inspect": true
      }
    },
    "13c4686e-c709-32d7-8765-1d0809f7f328": {
      "content": "border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      }
    },
    "13d53679-47eb-378b-b864-b73120256ea6": {
      "content": "echo '<pre>'; var_dump(${1}); echo '</pre>'; die(${0:});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdd": true
      }
    },
    "13dcee6b-9975-3b69-b655-5aa87d3a54f0": {
      "content": "delegate: :${1:method}, to: :${2:object}, prefix: :${3:prefix}, allow_nil: ${0:allow_nil}",
      "doc": "delegate to",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Delegate to with prefix",
      "matches": {
        "dtp": true
      }
    },
    "13dd40b9-68e7-3389-b6d1-4446d3a14d7f": {
      "content": "display table-footer-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      }
    },
    "13dfee1d-1d2d-3cb2-8f5d-6b60ef09e9fb": {
      "content": "<style lang=\"postcss\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with postcss scoped",
      "matches": {
        "style_with_postcss_scoped": true
      }
    },
    "13e14f42-c4ac-3dd9-8b8e-51d871675366": {
      "content": "setter ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      }
    },
    "13e42454-6418-3ed9-83fe-9495cfc0c985": {
      "content": "---\ntitle: ${1:title}\nlayout: post\ndate: ${2:date} ${0:hour:minute:second} -05:00\n---",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      }
    },
    "13e61c13-64da-3881-9e7b-b4d04efcca83": {
      "content": "align-items: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items: baseline",
      "matches": {
        "aib": true
      }
    },
    "13e6ce4b-f4f9-37c6-8978-ede623139bb5": {
      "content": "grid-auto-flow column dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      }
    },
    "13e7f88e-d870-33f3-bf8d-c8fa7ff4dab6": {
      "content": "else if (${1:condition}) {\n\t${0}\n}",
      "doc": "else if statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "else-if-statement",
      "matches": {
        "base else if": true
      }
    },
    "13ed0697-ab71-3683-8b34-84d585d6adbf": {
      "content": "after_create :${0:method}",
      "doc": "after_create",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "After create",
      "matches": {
        "ac": true
      }
    },
    "13efe3c6-dcfa-3379-94d7-e3191a7059cd": {
      "content": "@import url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      }
    },
    "13f5c2a6-f003-3afc-abb6-078bb50f5dde": {
      "content": "function __construct(${1})\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "construct": true
      }
    },
    "13faf7b2-7650-3926-bd5b-73602812bc0e": {
      "content": "new Promise((resolve, reject) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "new Promise",
      "matches": {
        "np": true
      }
    },
    "13fb19cb-f8ce-370b-92d7-f53604acd0a8": {
      "content": "public ${1:object} this[${2:int} index]\n{\n\tget { ${0} }\n\tset { ${0} }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "index": true
      }
    },
    "13feb8b8-4d3d-388a-9598-c6c3bc43dfe7": {
      "content": "<% ${1:array}.forEach(${2:element} => { %>\n $3\n<% }) %>",
      "doc": "EJS ForEach Loop",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS ForEach",
      "matches": {
        "ejseach": true
      }
    },
    "1407cb5c-e2c7-3b1b-adda-acd1a3b9e86a": {
      "content": "go func() {\n\t${1:${VISUAL}}\n}()\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go func() { ... }()",
      "matches": {
        "gof": true
      }
    },
    "14104ade-4dff-39d5-bc6e-bd42189216dc": {
      "content": "${1:expression} foreach @${2:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Loop one-line (xforeach)",
      "matches": {
        "xfore": true
      }
    },
    "14118f13-70b3-35be-84e1-689e4ceedb56": {
      "content": "[style.${1:property}]=\"${2:expression}\"",
      "doc": "Angular [style] binding",
      "filetype": "html",
      "grammar": "lsp",
      "label": "style",
      "matches": {
        "a-style": true
      }
    },
    "1418b43c-ac4c-3581-b086-80526ba905b3": {
      "content": "assert_redirected_to ${1:parent}_${2:child}_path(${0:@$1})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artnpp": true
      }
    },
    "1422ebcc-908a-3511-b292-51419c13e405": {
      "content": "int $1 ()\n{\n\tint $2 = $3;$4\n\treturn $2;\n}",
      "doc": "Creates a function that returns the int type",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create int function",
      "matches": {
        "intfunc": true
      }
    },
    "14253f8a-7919-387c-b428-3e066d7fd290": {
      "content": "struct ${1:#:name} {\n    ${0:TARGET:data}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      }
    },
    "142882ab-87f3-39b0-9e10-bc1066f871ee": {
      "content": "require 'byebug'; byebug",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert byebug call",
      "matches": {
        "debug": true
      }
    },
    "142c6be8-5f88-355a-83c0-9e5e8ec37518": {
      "content": "to=\"$1\"$0",
      "doc": "to=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-to",
      "matches": {
        "to": true,
        "vue to": true
      }
    },
    "142f0c86-0a7b-3cbd-a2b3-03da2f5f5167": {
      "content": "function(${1:x}) ${3:{$0\\}}",
      "doc": "Function",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fun",
      "matches": {
        "function": true
      }
    },
    "14342dd3-8a63-3a46-b4ad-4f514e736f00": {
      "content": "FUNCTION LOWERCASE(${1:string})$0",
      "doc": "character string that contains string with any uppercase letters replaced by their corresponding lowercase letters",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOWERCASE",
      "matches": {
        "FUNCTION LOWERCASE": true
      }
    },
    "143e210c-5855-30db-a9a5-9588fdffdd1d": {
      "content": "real, intent(out) ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real intent(out)",
      "matches": {
        "reo": true
      }
    },
    "14425000-b7dd-3eba-afc1-c471609b4085": {
      "content": "else\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "1452f1e6-a658-3a21-9300-1c28b79a76d5": {
      "content": "\\begin{eqnarray}\n\t${1:TARGET}\n\\end{eqnarray}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{eqnarray} \\eqnarray": true,
        "eqnarray": true
      }
    },
    "145dc655-df4b-3eb9-a794-84d975434497": {
      "content": "_.sampleSize(${collection}, ${n})",
      "doc": "_.sampleSize([1, 2, 3], 2);\n// => [3, 1]\n\n_.sampleSize([1, 2, 3], 4);\n// => [2, 3, 1]\n\nGets `n` random elements at unique keys from `collection` up to the\nsize of `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-samplesize",
      "matches": {
        "lodash samplesize": true
      }
    },
    "14693c96-5d9e-3165-a90a-12a1f9c7b3b5": {
      "content": "for (${1:1}, ${2:10}) { |i|\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "14716e65-32d9-300c-844f-b96ca91be6d1": {
      "content": "for (${1:Class} *${2:some$1} in ${3:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      }
    },
    "1473355d-56d2-3b74-96fa-9417d74640e2": {
      "content": "import { Route, Router } from 'svelte-routing'",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-routing-import",
      "matches": {
        "svelte import routing": true,
        "svroute": true
      }
    },
    "1474ebae-e6a7-3ca9-a2bb-7510bb714946": {
      "content": "validates :${1:terms}${2:, acceptance: ${3:{ accept: \"${4:1}\"${5:, message: \"${6:You must accept the terms of service}\"}}} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of",
      "matches": {
        "vao": true
      }
    },
    "14768c20-7fc8-3c22-8f6c-416aa4e6e505": {
      "content": "protected ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p|-": true
      }
    },
    "147d0d77-f2a5-3772-a6ac-94bd976b419b": {
      "content": "= mail_to ${1:email_address}, ${2:name}, :subject => ${3}, :body => ${4}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mts": true
      }
    },
    "147eb63f-7c65-3c0d-82f3-f097b499fc57": {
      "content": "direction: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true,
        "direction": true
      }
    },
    "14821994-0b04-3827-a8ed-61131e84e857": {
      "content": "#!/usr/bin/env sh",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "14856836-4b76-3988-9fea-055a9da2e294": {
      "content": "${1}:\nloop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named loop",
      "matches": {
        "nlo": true
      }
    },
    "14873064-3dc4-38b4-90da-a856b6457884": {
      "content": "\\frac{${1}}{${2}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\frac": true,
        "frac \\frac{": true
      }
    },
    "14887e43-4099-377e-a429-63e6fcdf42f1": {
      "content": "table-layout: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      }
    },
    "148aba25-d6e6-3655-8ba4-ad481df3b9c2": {
      "content": "module ${1:main};${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "1490a0e6-2613-3078-9b71-2d20d6231115": {
      "content": "__PRETTY_FUNCTION__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "PF": true
      }
    },
    "1492b624-e5ea-356f-a614-9d3f3646e303": {
      "content": "&#x2303;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctrl": true
      }
    },
    "1493f4b7-f1fc-3ff8-95f9-b7a3baeec720": {
      "content": "<embed src=\"${1}\" type=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "embed": true
      }
    },
    "149d2309-db04-34ed-8f04-18bd23f38e1e": {
      "content": "outline-color: ${1:#000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      }
    },
    "14a49e3d-0a62-3211-8040-7411e2f76e76": {
      "content": "def ${1:mname}(self, ${2:arg}):\n\t${3:pass}$0",
      "doc": "Code snippet for a class method definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New method",
      "matches": {
        "defs": true
      }
    },
    "14a5f4d1-e93c-3f54-9722-842f2fc406ca": {
      "content": "page-break-inside: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      }
    },
    "14af1389-36da-35a9-b11f-5f0daa879bf7": {
      "content": "${1:FIELDNAME} = serializers.NullBooleanField(${2})",
      "doc": "Django-rest Serializers ``NullBooleanField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF NullBooleanField",
      "matches": {
        "snullbool": true
      }
    },
    "14b30a5b-226f-3f91-bcad-a7d31b063052": {
      "content": "switch ${1:-exact} -- ${2:\\$var} {\n\t${3:match} {\n\t\t$4\n\t}\n\tdefault {$5}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "switch... (switch)",
      "matches": {
        "switch": true
      }
    },
    "14b94902-387c-38a3-b5c1-c797146d7679": {
      "content": "<fieldset>\n\t$1\n</fieldset>",
      "doc": "HTML - Defines a fieldset",
      "filetype": "html",
      "grammar": "lsp",
      "label": "fieldset",
      "matches": {
        "fieldset": true
      }
    },
    "14ba63c1-85e3-31fb-a789-1ebde4522523": {
      "content": "return ${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "rt": true
      }
    },
    "14cdacd3-4e9d-395b-b262-af05cc70f2b1": {
      "content": "try {\n\t$0\n} catch (${1:error}) {\n\t\n}",
      "doc": "Try-Catch Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Try-Catch Statement",
      "matches": {
        "trycatch": true
      }
    },
    "14dc7deb-8789-3fee-9eb7-c45437b09011": {
      "content": "java.io.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.i": true
      }
    },
    "14ec6078-8115-3f71-bd14-7653fa557c01": {
      "content": "\\coordinate[${1}](${2:name}) ${3};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\coordinate": true,
        "coordinate": true
      }
    },
    "14f2395c-cf0b-3fe7-b350-687f019ebbb2": {
      "content": "overflow-style scrollbar",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      }
    },
    "1504883c-8261-3889-aa16-3d08b5e6da6f": {
      "content": "${1:deferred}.reject(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drej": true
      }
    },
    "1507c08c-b9d8-32e5-a464-ac2f09ea0acd": {
      "content": "<wbr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbr": true
      }
    },
    "150947d2-2544-3f55-959f-b7f4bd13f3a6": {
      "content": "<input type=\"${1:text}\" value=\"$2\" name=\"$3\"${4: id=\"${5:$3}\"}/>$7",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      }
    },
    "150bc90b-a93b-30b7-9daf-fe3d4cb9ce01": {
      "content": "flex-direction: column;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex-direction: column",
      "matches": {
        "fldc": true
      }
    },
    "150f1d2e-fe01-3bf1-9f02-6504ae1e986d": {
      "content": "align-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      }
    },
    "15152c75-06c6-3417-aa20-4a606f1336c1": {
      "content": "#include \"${1}\"${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc2, #include2": true,
        "inc2": true
      }
    },
    "1530c203-8d63-32ba-a67d-93d21d30a794": {
      "content": "caption-side: top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      }
    },
    "1534a6b6-ca0a-3abe-869c-04b311be4ea8": {
      "content": "interface{}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "in": true
      }
    },
    "1536acbd-08d5-3580-83a8-f13d7556389b": {
      "content": "import React from 'react'\nimport renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from '~/store'\nimport { ${1:${TM_FILENAME_BASE}} } from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n  const defaultProps = {}\n  const wrapper = renderer.create(\n    <Provider store={store}>\n     <${1:${TM_FILENAME_BASE}} {...defaultProps} />\n    </Provider>,\n  )\n\n  test('render', () => {\n    expect(wrapper).toMatchSnapshot()\n  })\n})",
      "doc": "Create test component",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setupReactComponentTestWithRedux",
      "matches": {
        "srtest": true
      }
    },
    "15389564-c153-3be2-9d8b-b976f08f625a": {
      "content": "import React from 'react'",
      "doc": "import React",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react",
      "matches": {
        "imr": true,
        "react import": true
      }
    },
    "1541a1d7-6ea3-3942-ae95-384d0df5585c": {
      "content": "translate(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "translate": true
      }
    },
    "154775f7-4906-39e8-8ad7-4ad540adea5c": {
      "content": "$this->assertInternalType(${1:'string'}, ${2:actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertInternalType('string', $actual)",
      "matches": {
        "asit": true
      }
    },
    "154a54e8-06f9-3984-9d2a-80a4844a44b6": {
      "content": "property ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw": true
      }
    },
    "154ce129-2a21-37ec-926e-323df723d9ed": {
      "content": "def update\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\trespond_to do |format|\n\t\tif @$1.update($1_params)\n\t\t\tformat.html { redirect_to @$1, notice: '$2 updated' }\n\t\telse\n\t\t\tformat.html { render :edit, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "def update",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Update action",
      "matches": {
        "update": true
      }
    },
    "1552f6dc-7285-3b95-8afa-b911a798f118": {
      "content": "(cond ((${1:predicate}) (${2:action}))\n\t((${3:predicate}) (${0:action})))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      }
    },
    "155eab4c-8801-35d2-95dd-9b65b2551665": {
      "content": "@Test\npublic void test${1:Name}() throws Exception {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "15628a60-cf90-3215-aa01-c5fdcab67cef": {
      "content": "validates_numericality_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:is not a number}\"}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of if",
      "matches": {
        "vnif": true
      }
    },
    "1565901a-e615-3324-838f-38586c2c7cde": {
      "content": "finally {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "finally": true
      }
    },
    "15662fa7-c4ce-3574-b720-5a30dff3cb45": {
      "content": "textWidth(${0:data});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textWidth": true
      }
    },
    "156a5f29-74c7-3c89-ae01-95e4547557d1": {
      "content": "$.isEmptyObject(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isempty": true
      }
    },
    "156b5717-d198-3309-9370-b248bf4c4ff6": {
      "content": "[[NSUserDefaults standardUserDefaults] objectForKey:${1:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ReadDefaultsValue",
      "matches": {
        "rdef": true
      }
    },
    "156bb3e6-c321-3743-b405-ca835606320f": {
      "content": "<section class=\"${1}\">\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section.": true
      }
    },
    "1570279b-fce3-3c5b-8599-c7d33cadc62f": {
      "content": "+ (${1:void}) ${2:func name} {\n$4\n}",
      "doc": "Create an Objc class method implementation",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create class method implementation",
      "matches": {
        "+impl": true,
        "funcci": true
      }
    },
    "1570c0b1-30e4-33c1-b15a-4533d4c10b80": {
      "content": "display: grid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      }
    },
    "1573b5fd-1f15-3dfc-aebc-2ed97269d761": {
      "content": "- (void)addObjectTo${1:#:Things}:(${2:#:id})anObject;\n- (void)insertObject:(${2})anObject in${1}AtIndex:(unsigned int)i;\n- (${2})objectIn${1}AtIndex:(unsigned int)i;\n- (unsigned int)indexOfObjectIn${1}:(${2})anObject;\n- (void)removeObjectFrom${1}AtIndex:(unsigned int)i;\n- (unsigned int)countOf${1};\n- (NSArray${3: *})${1};\n- (void)set${1}:(NSArray${3: *})new${1};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "InterfaceAccessorsForKVCArray",
      "matches": {
        "iarray": true
      }
    },
    "15758d3e-71e1-334f-b80f-a1a3e0581f26": {
      "content": "validates :${0:attribute}, confirmation: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vc": true
      }
    },
    "15782ec3-a598-32d7-b826-9591a5a7f090": {
      "content": "do{\n\t\n} while($2){\n\t\n}",
      "doc": "do {\n\t//code\n}while();\n\nThe keyword do is used in combination with while to describe a loop that is controlled by a condition. The body defined by curly braces encloses the statements that are executed at each pass of the loop. The parentheses enclose the expression that defines the condition.\n\ndo {\n\taFunction();\n} while(i <= 99);\n\nThe execution of a single pass or the whole loop can be aborted by using a continue or a break statement respectively.\n\nIn contrast to a simple while loop the body is always executed at least one time even if the expression evaluates to false from the beginning.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "dowhile",
      "matches": {
        "dowhile": true
      }
    },
    "1579eb56-7f00-359a-b2f6-71911c8502ac": {
      "content": "{% paginate ${1:collection.products} by ${2:12} %}\n\t{% for ${3:product} in ${1:collection.products} %}\n\t\t$4\n\t{% endfor %}\n{% endpaginate %}",
      "doc": "Theme tag: paginate",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag paginate",
      "matches": {
        "paginate": true
      }
    },
    "1580672e-ca47-359a-95aa-e5a9a3541999": {
      "content": "kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: {{ template \"${2}.$1.fullname\" . }}\n  labels:\n\tapp: {{ template \"${2:chartName}.name\" . }}\n\tchart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n\trelease: \"{{ .Release.Name }}\"\n\theritage: \"{{ .Release.Service }}\"\nspec:\n  accessModes:\n\t- {{ .Values.$1.persistence.accessMode | quote }}\n  resources:\n\trequests:\n\t  storage: {{ .Values.$1.persistence.size | quote }}\n{{- if .Values.$1.persistence.storageClass }}\n{{- if (eq \"-\" .Values.$1.persistence.storageClass) }}\n  storageClassName: \"\"\n{{- else }}\n  storageClassName: \"{{ .Values.${1:value_key}.persistence.storageClass }}\"\n{{- end }}\n{{- end }}\n{{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "PersistentVolumeClaim_spec": true
      }
    },
    "158276fe-530c-3508-8ae7-a7f62878968a": {
      "content": "console.debug(${1:object});",
      "doc": "Displays a message in the console. Also display a blue right arrow icon along with the logged message in Safari",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoledebug",
      "matches": {
        "base console debug": true
      }
    },
    "15884b8d-cd91-3531-9722-6b1e1e1e5b94": {
      "content": "$.Deferred()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "D": true
      }
    },
    "1589261b-c12c-38e8-9f20-831f22646278": {
      "content": "${1:String} ${2:var}${3: = null}${4};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      }
    },
    "158cf96e-6918-3c69-927a-aee326d38e86": {
      "content": "<header>\n\t$1\n</header>",
      "doc": "HTML - Defines a header for a section of page",
      "filetype": "html",
      "grammar": "lsp",
      "label": "header",
      "matches": {
        "header": true
      }
    },
    "158f7161-3104-3a26-a6a7-d086d1e45aa8": {
      "content": "resize: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      }
    },
    "1595be68-d074-3455-a563-cc7bf5fdb152": {
      "content": "{# ${0:comment} #}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      }
    },
    "159cfb96-1c25-30c1-ba70-14a8cb8209a3": {
      "content": "while ($1) {\n  $0\n}",
      "doc": "Insert a while loop.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "159d32f5-d912-3f10-bc5f-28bba2f996d7": {
      "content": "grid-template-columns: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      }
    },
    "159e5fc3-a47c-3f36-8fef-8780b37b5eec": {
      "content": "#!/usr/bin/env python3",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "159eb7fe-072e-33ec-b673-8f710819a6c3": {
      "content": "border-top-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      }
    },
    "15a042a5-e550-3c31-82a1-991e86b1d3ca": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-required",
      "matches": {
        "prop-types object required": true,
        "ptor": true
      }
    },
    "15a10b40-1589-333d-9879-f8c08bd072f4": {
      "content": "${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delay": true
      }
    },
    "15a552ca-426d-34d2-84e2-fcf8dba9954f": {
      "content": "inout${1:#: nbit} io_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "inout [] io_,",
      "matches": {
        "IO": true
      }
    },
    "15aa8769-aeea-368d-af50-a17aa24d5b2d": {
      "content": "_.isSafeInteger(${value})",
      "doc": "_.isSafeInteger(3);\n// => true\n\n_.isSafeInteger(Number.MIN_VALUE);\n// => false\n\n_.isSafeInteger(Infinity);\n// => false\n\n_.isSafeInteger('3');\n// => false\n\nChecks if `value` is a safe integer. An integer is safe if it's an IEEE-754\ndouble precision number which isn't the result of a rounded unsafe integer.\n\n**Note:** This method is based on\n[`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-issafeinteger",
      "matches": {
        "lodash issafeinteger": true
      }
    },
    "15b574a0-2114-324b-bad6-4374cdf72039": {
      "content": "const { ${2:prop} } = ${1:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const statement from destructuring",
      "matches": {
        "cd": true
      }
    },
    "15b817fa-139b-384c-8dda-6bf1639317f9": {
      "content": "overflow-style: panner",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      }
    },
    "15ba821e-a036-3c79-a8ec-6554352a80ba": {
      "content": "this.route.paramMap\n\t.pipe(switchMap(params => params.get('id')), tap(id => (this.id = +id)))\n\t.subscribe(id => {$1});\n$0",
      "doc": "Angular - subscribe to routing parameters",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "routing-params-subscribe",
      "matches": {
        "a-route-params-subscribe": true,
        "angular routing params subscribe": true
      }
    },
    "15bc83bd-1054-3b5c-9da9-886f7837995d": {
      "content": ".. danger:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "danger",
      "matches": {
        "danger": true
      }
    },
    "15c8dc95-dc54-3fbd-8ef2-b54becb31d9e": {
      "content": "assert.equal ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ae": true
      }
    },
    "15cb826e-c4ee-3d96-b334-139e036967bb": {
      "content": "export async function getServerSideProps(${1:context}) {\n  return {\n    props: {}, \n  }\n}",
      "doc": "If you export an async function called getServerSideProps from a page, Next.js will pre-render this page on each request using the data returned by getServerSideProps. The context parameter is an object containing the following keys: params, req, res, query, preview, previewData.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-server-side-props",
      "matches": {
        "next getserversideprops": true
      }
    },
    "15cf566b-a549-3484-a820-9336c72ae9af": {
      "content": "generic\n\ttype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "generic type",
      "matches": {
        "generic": true
      }
    },
    "15d0c925-dd9c-3353-a984-9a6ed7d3953a": {
      "content": "import { PropTypes } from 'react'\n\nconst ${TM_FILENAME_BASE} = props => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t)\n}\n\n${1}.propTypes = {\n\t$0\n}\n\nexport default ${1}",
      "doc": "Creates a React function component with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactStatelessProps",
      "matches": {
        "rfcp": true
      }
    },
    "15d19e52-7c36-3a07-a161-e87bb48f6f62": {
      "content": "beforeCreate () {\n\t${0};\n},",
      "doc": "beforeCreate lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforecreate",
      "matches": {
        "vbeforecreate": true,
        "vue lifecycle beforecreate": true
      }
    },
    "15d254ec-d801-326a-a9db-b347725d2dbe": {
      "content": "assert_redirected_to ${1:parent}_${2:child}_path(${3:@$1}, ${0:@$2})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artnp": true
      }
    },
    "15dac0e0-faaa-3364-8b4b-1e9a2725a60d": {
      "content": "animate:${1:name}={${2:params}}",
      "doc": "animate",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-animate",
      "matches": {
        "s-animate": true
      }
    },
    "15e06584-7a03-3db5-a5d9-923d18350dd4": {
      "content": "for \"${1:filename}\".IO.lines -> $line {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfile": true
      }
    },
    "15e43f69-6a1f-38dd-a0ae-39c271dd1932": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "15e651eb-deb2-314e-9e44-1912dc44b303": {
      "content": "func _init():\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_init method of Object",
      "matches": {
        "init": true
      }
    },
    "15f38e0e-23d1-318c-be48-11d2c3e1bc0a": {
      "content": "MsgBox(0, \"Debug\", ${0:\"Debug Message\"})",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "15f8cb88-60d9-3e14-a92b-c11f6b15c6c2": {
      "content": "border-style: double",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      }
    },
    "15fecb01-fdd2-332c-8dc2-8718b3f7acc0": {
      "content": "attr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw": true
      }
    },
    "160144a0-608c-3414-bf8c-e2d014412509": {
      "content": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "() ? a : b",
      "matches": {
        "ter": true,
        "ternary": true
      }
    },
    "1605be94-2f19-3134-ba16-a36df2b7f293": {
      "content": "_.unzipWith(${array}, ${iteratee})",
      "doc": "var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n// => [[1, 10, 100], [2, 20, 200]]\n\n_.unzipWith(zipped, _.add);\n// => [3, 30, 300]\n\nThis method is like `_.unzip` except that it accepts `iteratee` to specify\nhow regrouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unzipwith",
      "matches": {
        "lodash unzipwith": true
      }
    },
    "16064d33-30ce-35b7-bfba-9e7a5dd38416": {
      "content": "${1:obj}.end()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      }
    },
    "160689ae-7caf-3ca6-ba41-8383c44eedde": {
      "content": "enter-to-class='$1'$0",
      "doc": "enter-to-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "enter-to-class",
      "matches": {
        "enterToClass": true
      }
    },
    "1609426a-c59e-30ed-9131-4e3eea3d76c6": {
      "content": "script ${1:#:new_object}\n\ton run\n\t\t${2:TARGET}\n\tend run\nend script",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      }
    },
    "1613cc3a-5d6e-37e4-b0fe-da2b2ef04e44": {
      "content": "$this->assertContainsOnly(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContainsOnly($needle, $haystack)",
      "matches": {
        "ascono": true
      }
    },
    "16142d8a-fe00-3923-8c28-67edf9b5c506": {
      "content": "${1:map}.resource :${2:resource}${10: do |${11:$2}|\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.resource",
      "matches": {
        "mapr": true
      }
    },
    "1617eeb5-7207-3f1b-9c7f-632241bed028": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivate {\n\tconstructor() { }\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivate guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanActivate Guard",
      "matches": {
        "a-guard-can-activate": true
      }
    },
    "16195896-0f4d-39b3-a6dc-315e78ccae63": {
      "content": "${1:FIELDNAME} = FloatRangeField()",
      "doc": "FloatRangeField (ffloatrange).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ffloatrange",
      "matches": {
        "ffloatrange": true
      }
    },
    "161de26e-aa41-35e8-8bd8-5c570a910914": {
      "content": "File.foreach(${1:'path/to/file'}) { |${2:line}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.foreach() { |line| .. }",
      "matches": {
        "file": true
      }
    },
    "1624c80b-eb55-39e3-949e-af3c63972cd7": {
      "content": "mag(${1:a}, ${2:b}${3:, }${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mag": true
      }
    },
    "162886e2-5323-326b-992d-e161d8538065": {
      "content": "class ${0:name} extends Suite {\n\tdef test() {\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "suite": true
      }
    },
    "162d1d7e-731b-3cc4-8ff0-cdd8d7968c8a": {
      "content": "class ${1:${TM_FILENAME_BASE}} extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {};\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with constructor, empty state, proptypes and export in ES6 module system without imports. (Mostly used when React, Proptypes are provided by webpack provide plugin)",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactWithWebpackDefaults",
      "matches": {
        "rwwd": true
      }
    },
    "16326387-61d3-358a-9a09-b36199d3b0b5": {
      "content": "procedure ${1:name}(${2:args})\nas\nbegin\n\t${0:-- body}\nend $2;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppb": true
      }
    },
    "16398f6b-cb6f-3c61-8dad-99b29e13a8ea": {
      "content": "<s>${0}</s>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s": true
      }
    },
    "16443551-9f8f-348c-8e7a-c1408724644a": {
      "content": "| split: '${1:,}'",
      "doc": "String filter: split",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter split",
      "matches": {
        "split": true
      }
    },
    "1645f706-1aeb-3d40-9a42-e1c83d92834e": {
      "content": "place-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      }
    },
    "1650b53f-ead0-3e63-a24f-1d682c0e0b24": {
      "content": "${1:component}.$on(${2:eventname}, ${3:handler});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-on",
      "matches": {
        "svcomon": true,
        "svelte component on": true
      }
    },
    "16531d4d-26c4-3b75-90e3-bd7c8880dff6": {
      "content": "private ${1:void} ${2:name}($3) {\n\t$0\n}",
      "doc": "private method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "private_method",
      "matches": {
        "private_method": true
      }
    },
    "165dd98f-2dcc-333c-8b3d-7e96515e7554": {
      "content": "use Symfony\\Component\\Validator\\Constraints as Assert;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Constraints as Assert",
      "matches": {
        "useassert": true
      }
    },
    "165e29c0-5584-38e6-9f8a-5f96ae831421": {
      "content": "import React, { memo } from 'react'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithMemo",
      "matches": {
        "imrm": true
      }
    },
    "1665c5fc-a5c4-331b-bb8f-d2c4c3997bac": {
      "content": "{% highlight ${1:#:TARGET} %}\n  ${2:code}\n{% endhighlight %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "highlight": true,
        "hl": true
      }
    },
    "1667c871-bc62-3233-8ff0-7d82eec31bee": {
      "content": "NSAutoreleasePool *pool = [NSAutoreleasePool new];\n$0\n[pool drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSAutoreleasePool (pool)",
      "matches": {
        "pool": true
      }
    },
    "166f158f-5fc1-3d95-a794-4ff3485cd72b": {
      "content": "box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      }
    },
    "1671fa74-b8cf-37bd-8540-f78a5b6bc1ba": {
      "content": "import { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importBrowserRouterWithRouteAndNavLink",
      "matches": {
        "imrr": true
      }
    },
    "1676cb43-74b8-3497-a189-a98d471761e2": {
      "content": "for ${1:i} = ${2:0} to ${3:10} do\n  ${0:TARGET}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "for i=x..y do; ... done",
      "matches": {
        "for": true
      }
    },
    "1676f2c7-1389-355c-b60a-1362a9469797": {
      "content": "\\\\longrightarrow {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "longrightarrow",
      "matches": {
        "lra": true
      }
    },
    "16847ecf-9aa2-3a0e-b807-42827e03d38f": {
      "content": "<s>$1</s>$2",
      "doc": "HTML - Used to define strikethrough text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "s",
      "matches": {
        "s": true
      }
    },
    "16869e31-a9fc-34ff-a1b1-c16b09a09bb4": {
      "content": "_.concat(${array}, ${values})",
      "doc": "var array = [1];\nvar other = _.concat(array, 2, [3], [[4]]);\n\nconsole.log(other);\n// => [1, 2, 3, [4]]\n\nconsole.log(array);\n// => [1]\n\nCreates a new array concatenating `array` with any additional arrays\nand/or values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-concat",
      "matches": {
        "lodash concat": true
      }
    },
    "16881f22-c154-3b40-afcf-6606541ed0b5": {
      "content": "require(\"optparse\", quietly = TRUE)\noption_list <-\n    list(make_option(c(\"-n\", \"--add_numbers\"), action=\"store_true\", default=FALSE,\n                     help=\"Print line number at the beginning of each line [default]\")\n         )\nparser <- OptionParser(usage = \"%prog [options] file\", option_list=option_list)\narguments <- parse_args(parser, positional_arguments = TRUE)\nopt <- arguments$options\n\nif(length(arguments$args) != 1) {\n    cat(\"Incorrect number of required positional arguments\\n\\n\")\n    print_help(parser)\n    stop()\n} else {\n    file <- arguments$args\n}\n\nif( file.access(file) == -1) {\n    stop(sprintf(\"Specified file ( %s ) does not exist\", file))\n} else {\n    file_text <- readLines(file)\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optparse": true
      }
    },
    "168b0118-acaf-32b8-a00d-63f3686c1eae": {
      "content": "${1:value} .|> ${2:function}",
      "doc": "Code snippet for pointwise pipe expression.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "pointwise pile",
      "matches": {
        "pipe.": true,
        "pp.": true,
        "ppipe": true
      }
    },
    "16964b09-abf4-342c-b08e-c71baf7d6132": {
      "content": "grid-auto-flow: row dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      }
    },
    "169cb2dd-776e-3c69-8322-87b3ef32d634": {
      "content": "ellipse(${1:x}, ${2:y}, ${3:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ellipse": true
      }
    },
    "169d4211-bae8-3ba2-a9b8-f9b7f7694af6": {
      "content": "box-sizing border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      }
    },
    "169ed944-06bb-320b-b88b-8edfe04f887d": {
      "content": "${1:moduleName} = angular.module '$1', [${2:moduleDeps}]\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngma": true
      }
    },
    "16b456c9-c735-39fa-8964-04a808234253": {
      "content": "get ${1:property} () {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getter",
      "matches": {
        "get": true
      }
    },
    "16b5915a-eaa9-31c4-8c96-c8869c93947f": {
      "content": "case (${1:condition}) {\n\t${2:match1} => ${3:value1}\n\t${4:match3} => ${5:value3}\n\t=> ${6:defaultValue}\n}",
      "doc": "A case expression is useful for matching enums or exact values, while also supporting a default value.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Case",
      "matches": {
        "case": true
      }
    },
    "16c1e323-f08b-379c-9dc4-e26391764308": {
      "content": "_.isWeakSet(${value})",
      "doc": "_.isWeakSet(new WeakSet);\n// => true\n\n_.isWeakSet(new Set);\n// => false\n\nChecks if `value` is classified as a `WeakSet` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isweakset",
      "matches": {
        "lodash isweakset": true
      }
    },
    "16cafa8c-c8e5-374b-afe8-030bf3eb3eab": {
      "content": "include_str!(\"${1}\")",
      "doc": "include_str!(\"…\")",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "include_str",
      "matches": {
        "include_str": true
      }
    },
    "16cfabd5-1aa8-3e55-aa88-76276d8d9684": {
      "content": "${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeto": true
      }
    },
    "16cfff4a-1d7e-33bc-950e-d6d88a586c9f": {
      "content": "${1:expr}? ${2:true} : ${0:false}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      }
    },
    "16dce13c-0a10-353f-85da-d29d98649fbe": {
      "content": "renderJSON(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renj": true
      }
    },
    "16dd8875-66d1-340a-84aa-c6ce2c223658": {
      "content": "always @(${1:*})${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "always @()",
      "matches": {
        "al": true
      }
    },
    "16de6f2a-87a4-363d-9206-a472e4521ab9": {
      "content": "mod($2, $3)",
      "doc": "float mod(float x, float y)\nvec2 mod(vec2 x, vec2 y)\nvec3 mod(vec3 x, vec3 y)\nvec4 mod(vec4 x, vec4 y)\n\nThe mod function returns x minus the product of y and floor(x/y). The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nSide note: If x and y are integers the return value is the remainder of the division of x by y as expected.\n\nfloat mod(float x, float y)\nvec2 mod(vec2 x, float y)\nvec3 mod(vec3 x, float y)\nvec4 mod(vec4 x, float y)\n\nThere is also a variation of the mod function where the second parameter is always a floating scalar.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mod",
      "matches": {
        "mod": true
      }
    },
    "16e31735-0408-3982-b112-4561ca6735d7": {
      "content": "font-emphasize-style: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      }
    },
    "16e7d5cc-83b7-3afc-b6b1-804564ca41c7": {
      "content": "function it_$1()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function it_does_something() { ... }",
      "matches": {
        "it": true
      }
    },
    "16eef2db-1c97-3f24-97ca-7db812302a45": {
      "content": "for k, v in ipairs(${1:table}) do\n  print(k, v)\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "for k, v in ipairs(table) do",
      "matches": {
        "print_table": true
      }
    },
    "16f25654-f143-31df-a1c1-447ac11322d0": {
      "content": "\\begin{aligned}\n        ${1:TARGET}\n\\end{aligned}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{aligned} \\aligned": true,
        "aligned": true
      }
    },
    "16f5680e-1dda-3588-a880-901daf0275d8": {
      "content": "render action: \"${1:action}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (action)... (ra)",
      "matches": {
        "ra": true
      }
    },
    "16f77131-ceda-3a09-bc26-255d81fd74ed": {
      "content": "{% cycle '${1:odd}', '${2:even}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      }
    },
    "16f93110-c2de-36e8-91e1-e255da3a4d1b": {
      "content": "it { should have_db_column :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishc": true
      }
    },
    "16ffc6b5-c9df-3868-b866-818cfa98aa62": {
      "content": "enum ${1:Name} {\n  $0\n}",
      "doc": "Insert a enum.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "1700949f-812f-3536-becc-3b5f171f6b50": {
      "content": "include ${1:classname}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "17018fdc-cbab-3000-a7d8-ee0f7faef362": {
      "content": "group('$1', () {\n  $0\n});",
      "doc": "Insert a test group block.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "group",
      "matches": {
        "group": true
      }
    },
    "17090341-8363-36f0-93d8-81f635e9a5d8": {
      "content": "{% blocktrans %}\n    ${VISUAL}\n{% endblocktrans %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blocktrans": true
      }
    },
    "170eb91e-b729-3d63-9422-03bd570af214": {
      "content": "{{ block.super }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "super": true
      }
    },
    "17124e1e-a7b0-3ba3-adc1-92d8c1a3c0c5": {
      "content": "function ${1:name}(a, b)::Cint\n\treturn a + b\nend\n\n${1:name}_c = @cfunction(${1:name}, Cint, (Cint, Cint))\nccall(${1:name}_c, Cint, (Cint, Cint), 1, 1)",
      "doc": "An example for ccal.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "ccal/function",
      "matches": {
        "ccal": true,
        "cfun": true,
        "cfunction": true
      }
    },
    "1712d9ad-af67-36b0-a649-2ed380a19f73": {
      "content": "|> Enum.filter($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "pipe into filter",
      "matches": {
        ">f": true
      }
    },
    "17147db7-30d3-3bef-8d83-e4e231609596": {
      "content": "${1:FIELDNAME} = forms.ModelMultipleChoiceField($2)",
      "doc": "ModelMultipleChoiceField (fmomuchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fmomuchoice",
      "matches": {
        "fmomuchoice": true
      }
    },
    "1715f57a-9097-3d3d-8a18-9a051bd9a12b": {
      "content": "font-stretch: condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      }
    },
    "1716af05-9552-39b2-8080-a4c30e963d9a": {
      "content": "FUNCTION LOWEST-ALGEBRAIC(${1:numeric-identifier})$0",
      "doc": "lowest value that could possibly be stored in the specified numeric-identifier",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOWEST-ALGEBRAIC",
      "matches": {
        "FUNCTION LOWEST-ALGEBRAIC": true
      }
    },
    "171c6ed0-130a-3edb-9d0c-a82fe5970438": {
      "content": "actions",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "actions",
      "matches": {
        "actions": true
      }
    },
    "1727e8b2-24dd-3dc7-930d-76e809c0cbfa": {
      "content": "interface{}",
      "doc": "Snippet for empty interface",
      "filetype": "go",
      "grammar": "lsp",
      "label": "empty interface",
      "matches": {
        "in": true
      }
    },
    "172bf250-6a59-3dcc-ac94-8ffa33c5126e": {
      "content": "${1:app}.delete('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "edel": true
      }
    },
    "172d3273-741e-36e6-849f-0a57555bfce6": {
      "content": "for {${1:set i 0}} {${2:\\$i < \\$n}} {${3:incr i}} {\n\t$4\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "for... (for)",
      "matches": {
        "for": true
      }
    },
    "1731ba61-5239-36f5-ad7c-afe5c8d96c9b": {
      "content": "\\begin{alertblock}{${1:#:title}}\n\t${2:TARGET}\n\\end{alertblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{alertblock}": true,
        "alertblock": true
      }
    },
    "1739c142-30ad-370f-90e9-c9791b3004fe": {
      "content": "package body ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package body {NAME} is {...} end",
      "matches": {
        "package_body": true
      }
    },
    "173e0940-9cf3-3d13-af4b-98c8c9100496": {
      "content": "if(${1:#:condition})\n\t${0}\nendif()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "if() endif()",
      "matches": {
        "if": true
      }
    },
    "173eb821-3a12-3875-b52a-b8aaacfaeff7": {
      "content": "position: ${1:relative};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "position",
      "matches": {
        "pos": true
      }
    },
    "17407a12-c5da-3f52-b3c3-5147c57f4f4e": {
      "content": "---\ntitle: ${1:title}\ndate: ${2:\"`r Sys.Date()`\"}\noutput: ${4:pdf_document}\n---",
      "doc": "",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "YAML Header",
      "matches": {
        "---": true
      }
    },
    "1743ef44-d1f7-3051-a57e-8e68466d1553": {
      "content": "(for/fold\n\t([${1}])\n\t([${2}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/fold",
      "matches": {
        "forf": true
      }
    },
    "174495fb-7ce0-316f-8410-3e625cd2cc6e": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "1749832d-4a24-3985-b8db-9e2f6bba8282": {
      "content": "_.defer(${func}, ${args})",
      "doc": "_.defer(function(text) {\n  console.log(text);\n}, 'deferred');\n// => Logs 'deferred' after one millisecond.\n\nDefers invoking the `func` until the current call stack has cleared. Any\nadditional arguments are provided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defer",
      "matches": {
        "lodash defer": true
      }
    },
    "1749ae62-5559-3e71-891d-0dd6e2a53f57": {
      "content": "try\n  ${1:TARGET}\ncatch ${2:#:error}\n  ${3}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "1758b79e-39ed-3677-bb52-aa6330f8db68": {
      "content": "while $1 do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "while": true
      }
    },
    "175f96e1-948a-3cdf-97d4-12c8bb8070f6": {
      "content": "switch ${1:n}\n\tcase ${2:0}\n\t\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "178922d5-19aa-3eb8-9087-570f30488e67": {
      "content": "<header id=\"${1}\">\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header#": true
      }
    },
    "17909b62-1c5f-321f-9de3-9a38a82fc0ce": {
      "content": "${1:condition} || ${2:expression}",
      "doc": "In the expression a || b, the subexpression b is only evaluated if a evaluates to false.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "or short-circuit evaluation",
      "matches": {
        "||": true
      }
    },
    "17919caf-ac29-34db-8514-25bcd98b5fbb": {
      "content": "elif ${1:condition}; then\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "179efe9e-f430-3581-83fd-e018e820a942": {
      "content": "font-style italic",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      }
    },
    "17a1816b-b630-37c7-9819-08a80727cde6": {
      "content": "shadowRadius: ${1},",
      "doc": "shadowRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "shadowRadius",
      "matches": {
        "sha": true
      }
    },
    "17a812eb-b3ca-3d14-8cb3-219f7df30ac6": {
      "content": "\\item ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true,
        "item \\item": true
      }
    },
    "17a95ad8-de7d-3845-b8c0-cd235448f4b4": {
      "content": "const ${1:store} = writable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "svelte writeable w/ set function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable-set",
      "matches": {
        "s-writeable-set": true
      }
    },
    "17adff33-1e3b-39a2-aaf4-afd0f2e66749": {
      "content": "public string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms+": true
      }
    },
    "17bcfd59-5fd3-32f9-955a-d416dd0e062d": {
      "content": "<?php echo ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?e": true
      }
    },
    "17c110a1-1b90-31eb-886c-b59138cf2b9b": {
      "content": "{% ${1} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      }
    },
    "17c44084-cad9-3dce-9567-3c444d723b01": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}; trackBy:${1:item}.id\"${0}",
      "doc": "Angular *ngFor with trackBy",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFor with trackBy",
      "matches": {
        "a-ngFor-trackBy": true
      }
    },
    "17c8ab24-b1b0-3969-a433-69d872e13927": {
      "content": "#lang scribble/base",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#sb": true
      }
    },
    "17c924e5-e218-3644-8e44-38f2375bdd7f": {
      "content": "PropTypes.shape({\n  $0\n}).isRequired",
      "doc": "An object taking on a particular shape required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      }
    },
    "17c9bc50-096a-31ce-ad64-2ac1d55e5930": {
      "content": "${1:FIELDNAME} = models.XMLField(schema_path=${2:None}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml": true
      }
    },
    "17cb2157-fffc-3a94-bb82-fdf3799d6b02": {
      "content": "<a href=\"$1\">$2</a>$3",
      "doc": "HTML - Defines a hyperlink",
      "filetype": "html",
      "grammar": "lsp",
      "label": "a",
      "matches": {
        "a": true
      }
    },
    "17cb62a9-ef57-30cc-802a-03f33765b30f": {
      "content": "assert ${1:#:test} : ${2:#:Failure message};${3}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assert": true
      }
    },
    "17cbaf73-316c-3224-8585-e9daf56380a5": {
      "content": "go func(${1}) {\n\t${3:/* TODO */}\n}(${2})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go func(...) { ... }(...)",
      "matches": {
        "gof": true
      }
    },
    "17d2d7b6-db2c-373a-ade9-eb1469505c2b": {
      "content": "open(unit=${1:iounit}, iostat=${3:ios}, status=\"${4:scratch}\", action=\"${5:readwrite}\")\r\nif ( $3 /= 0 ) stop \"Error opening scratch file on unit $1\"",
      "doc": "Scratch File",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "open3",
      "matches": {
        "open": true
      }
    },
    "17d30fec-5f3e-3671-ace4-13697abc2103": {
      "content": "while(${1:/* condition */})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "17d42713-a932-30f9-8098-5c65764962e6": {
      "content": "max-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      }
    },
    "17d4537e-ef19-3b7a-b3d4-c372bf13e3fe": {
      "content": "case class ${1}(${2}: ${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "case class ..(..: ..)",
      "matches": {
        "cclass": true
      }
    },
    "17d79c38-4776-3fbb-9768-995f3b065571": {
      "content": "${1:font} = loadFont(\"${0:FFScala-32.vlw}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadFont": true
      }
    },
    "17dc8d54-16b2-30cb-bb47-e9424bb32d69": {
      "content": "get(${1:x}, ${2:y}${3:, }${4:width}${5:, }${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "pixel",
      "matches": {
        "get": true
      }
    },
    "17de2ad5-2c62-31fb-a1a1-c7f2f84863de": {
      "content": "${1}defined('${2}')",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def?": true
      }
    },
    "17e3e6dd-fcf5-3077-96a3-06b05d8ba5d9": {
      "content": "for ${1:i} = ${2:1} to ${3:10} do\n\t${4:(* BODY *)}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "17f1e9cf-640c-39be-9016-8038a9c2d584": {
      "content": "border-fit: overwrite",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      }
    },
    "17f4db61-cd6e-3c08-b405-8a71120bff2f": {
      "content": "import React from 'react'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReact",
      "matches": {
        "imr": true
      }
    },
    "17fe659e-df84-35f1-a525-99ca288de6c3": {
      "content": "elseif (${1:condition}) {\n\t${0:# code...}\n}",
      "doc": "Elseif block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "elseif …",
      "matches": {
        "elseif": true
      }
    },
    "17feda20-95db-346f-885f-54dd74a1b2d0": {
      "content": "@inbook{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tsubtitle={${4:subtitle}},\n\tbooktitle={${5:book}},\n\teditor={${6:editor}},\n\tyear={${7:YYYY}},\n\tlocation={${8:somewhere}},\n\tpublisher={${9:publisher}},\n\tpages={${10:NN}--${11:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "In Book reference",
      "matches": {
        "inb": true
      }
    },
    "1802436b-c470-3f4d-8ee6-a5d65a76f647": {
      "content": "IO.inspect(${0}label: \"${1:label}\")",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect with label",
      "matches": {
        "insl": true
      }
    },
    "1804a9a5-5ecb-33a5-84f7-ce680d575089": {
      "content": "urlizetrunc:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      }
    },
    "1807ed4f-6564-36a7-a790-8173f77d5188": {
      "content": "white-space: pre-line",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      }
    },
    "1808cb69-fb40-3312-9322-c4f7b4a21cd3": {
      "content": "margin: '${1}',",
      "doc": "margin",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "margin",
      "matches": {
        "mar": true
      }
    },
    "181377b7-bfb5-363f-b143-faf01e1154d1": {
      "content": "unless ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "181408b9-7890-3481-8af9-3f87691c1e70": {
      "content": "white-space: pre;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      }
    },
    "18158594-946d-325f-bd1c-1431a6a79da6": {
      "content": "protected\n\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prot": true
      }
    },
    "181afbe7-d2d6-3c55-adf3-34161e8ef941": {
      "content": "if(${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "1823e8f7-2f43-3141-abf9-654d711ac516": {
      "content": "font-stretch ultra-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      }
    },
    "182bb847-0e26-3bd3-aaef-389a80f5e3d7": {
      "content": "<% for ${2:item} in ${1} %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "1836f383-2318-312a-9c36-752f23b8d82a": {
      "content": "@media screen and (min-width: ${0}px)",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@msmw": true
      }
    },
    "18383361-6216-37f4-bccf-f255235d3c58": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ifelse": true
      }
    },
    "183a3434-7c33-39d7-adfe-a2679303a00b": {
      "content": "Element Should Not Be Visible    ${${1:locator}}    ${2:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Not Be Visible",
      "matches": {
        "esnbv": true
      }
    },
    "184740ca-9c76-3c3c-8f78-4ab233fb361e": {
      "content": "?assertNot(${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asn": true
      }
    },
    "18483f84-588b-3258-8aa2-1d334e1c4faf": {
      "content": "specular(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "specular": true
      }
    },
    "184ae094-6933-34fb-b441-81ef5dac36de": {
      "content": "list-style-image: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-image": true,
        "lsi": true
      }
    },
    "184c0b15-2eaf-33ed-aa35-2d9f6cac557b": {
      "content": "justify-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      }
    },
    "1851dc0d-dce3-3ee7-8cf6-471596c7298e": {
      "content": "delegate :${1:methods}, to: :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "delegate .. to",
      "matches": {
        "dele": true
      }
    },
    "18533caf-4fa5-36dc-bf5e-07227e119726": {
      "content": "validates :${1:attribute}, exclusion: { in: ${0:%w( mov avi )} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ve": true
      }
    },
    "1854c79d-8c74-301d-96b4-1a00cf6972d9": {
      "content": "mixed.concat()",
      "doc": "mixed.concat(schema: Schema)\n\nCreates a new instance of the schema by combining two schemas. Only schemas of the same type can be concatenated.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-concat",
      "matches": {
        "yup mixed concat": true
      }
    },
    "185741ff-3238-3288-8a54-29e071dc8351": {
      "content": "left: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "left",
      "matches": {
        "lef": true
      }
    },
    "18592e30-5946-30b9-af31-f6e06cee2565": {
      "content": "-moz-border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      }
    },
    "1861de3d-967e-3b05-a9b1-0aae750fa9b3": {
      "content": "<c:catch var=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ccatch": true
      }
    },
    "1866b574-0125-35d6-83d6-872d6756a581": {
      "content": "list-style-type lower-roman",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      }
    },
    "187030f8-6436-3855-992f-709e43785363": {
      "content": "@extend .${1}\n${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@ext": true
      }
    },
    "1870aecc-e871-3104-9c4e-e617985f850d": {
      "content": "overflow: ${1|visible,hidden,scroll,auto,clip|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "overflow",
      "matches": {
        "ov": true
      }
    },
    "1874d69e-3eb1-3eeb-966b-c0bf96588aad": {
      "content": "println(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "print line",
      "matches": {
        "prl": true
      }
    },
    "18765db6-1c01-32d8-8b25-d3bf5843f723": {
      "content": "${1:x} <- ${2:undefined}$0",
      "doc": "Monadic get",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "get",
      "matches": {
        "get": true
      }
    },
    "187d85f2-248a-3c11-962d-9902cc3e30d1": {
      "content": "package main\n\nimport (\n  \"fmt\"\n)\n\nfunc main() {\n  fmt.Printf(\"Hello, world\\n\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package main\\nimport fmt...",
      "matches": {
        "helloworld": true
      }
    },
    "18877cd7-6a4e-31c5-a556-6912c95af3e4": {
      "content": "verify only: [:$1], method: :post, render {:status: 500, text: \"use HTTP-POST\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "verify -- render",
      "matches": {
        "verify": true
      }
    },
    "188a83e1-6a73-31be-8e67-662774aea6bf": {
      "content": "refute_kind_of ${1:UnexpectedKind}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfko": true
      }
    },
    "188b4485-6a63-3550-bbd6-4d306ab5516f": {
      "content": "array.max()",
      "doc": "array.max(limit: number | Ref, message?: string | function): Schema\n\nSet a maximum length limit for the array. The ${max} interpolation can be used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-max",
      "matches": {
        "yup array max": true
      }
    },
    "188b968c-efd1-3bd1-806f-aacf18068d94": {
      "content": "function ${1:foo}(node) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action",
      "matches": {
        "svaction": true,
        "svelte action": true
      }
    },
    "188d0515-3aee-335a-8178-1d2eef32346e": {
      "content": "$this->${1:method}()->shouldNotBe${2:String|Array|Bool}();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeString|Array|Bool()",
      "matches": {
        "snbscalar": true
      }
    },
    "188d265f-d0fa-3ef6-8aea-1155567e9aac": {
      "content": "import React from 'react'\n\ntype Props = {}\n\nexport default function ${1:${TM_FILENAME_BASE}}({}: Props) {\n  return (\n    <div>${1:first}</div>\n  )\n}",
      "doc": "Creates a React Functional Component with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactFunctionalComponent",
      "matches": {
        "tsrfc": true
      }
    },
    "18941b2a-b2c1-3e34-a436-138f32940c56": {
      "content": "&#x21E4;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backtab": true
      }
    },
    "189a26d5-1f00-3ce4-b4ff-40652a072d3c": {
      "content": "flex-wrap: ${1|wrap,wrap-reverse,nowrap|};",
      "doc": "initial value: nowrap",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex-wrap",
      "matches": {
        "flw": true
      }
    },
    "189e752a-1e0f-3f42-acd2-8c311f1ac59a": {
      "content": "macro ${1:#:name}(${2}):${3:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macro": true
      }
    },
    "18a3c7df-21ae-3878-bb1f-e06365d03785": {
      "content": "for {\n\t${1:item} <- ${2:obj}\n} yield ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fory": true
      }
    },
    "18aa912e-3edb-30c8-ac57-a5b2dcf05771": {
      "content": "console.dirxml(${1:object});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.dirxml",
      "matches": {
        "cdirx": true
      }
    },
    "18ad2557-938f-3336-8b7e-100d806898a0": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "Base for Vuex store",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-store",
      "matches": {
        "vstore": true,
        "vuex store": true
      }
    },
    "18b1b989-202f-3484-8c58-da3e49db747a": {
      "content": "cursor pointer",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      }
    },
    "18b2b587-5184-3e6d-ad45-3653572bb321": {
      "content": "setTimeout(() => {\n\t${2}\n}, ${1:delayInms});",
      "doc": "Executes the given function after the specified delay in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setTimeOut",
      "matches": {
        "sto": true
      }
    },
    "18b4167d-7ef1-38a9-816a-ebf7071a2b5f": {
      "content": "counter-reset ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      }
    },
    "18ba0308-3916-3eff-9bb4-688549e570eb": {
      "content": "case ${1:#:expression} of\n\t${2:#:value} ->\n\t\t${3:TARGET}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "case ... of",
      "matches": {
        "case": true
      }
    },
    "18bdd1e8-b1e3-3e7c-bb62-30209b823766": {
      "content": "${1:FIELDNAME} = forms.IntegerField($2, required=${3:False})",
      "doc": "IntegerField (fint)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fint",
      "matches": {
        "fint": true
      }
    },
    "18be1991-c4f4-3c40-af36-64b28f6a5ef9": {
      "content": "in\n{\n\tassert(${1:/*condition*/}, \"${2:error message}\");\n\t$3\n}\nbody",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "in contract (in)",
      "matches": {
        "in": true
      }
    },
    "18c4686e-0b8c-3dcf-bf89-c6f281fe91d7": {
      "content": "align-content: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      }
    },
    "18c52531-d273-386f-8700-23098703e4aa": {
      "content": "__import__('pprint').pprint(${1})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pprint": true
      }
    },
    "18cac939-fe56-3523-b913-86470365b6fa": {
      "content": "entry ${1}(${2}) when ${3} is\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "entry ... when",
      "matches": {
        "ent": true
      }
    },
    "18d38f78-a694-3ed4-89f7-2236bf07be96": {
      "content": "function formatted-date(${1:date-format},${2:integer-date})$0",
      "doc": "function formatted-date",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-formatted-date",
      "matches": {
        "function formatted-date": true
      }
    },
    "18d403ce-751f-3ce6-b00e-d2e21d3825f4": {
      "content": "{% if ${1:condition} %}\n\t${0:${VISUAL}}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "18df278a-0913-3853-90c8-249b2fd7cd3e": {
      "content": "{${1:value} for ${2:value} in ${3:iterable}}$0",
      "doc": "Create a set based on existing iterables.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Set comprehension",
      "matches": {
        "sc": true
      }
    },
    "18e480b3-cbab-3485-b5cd-22e1fc2bd9ef": {
      "content": "<style lang=\"$1\">\n\t$0\n</style>",
      "doc": "style element with lang attribute",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "styleLang",
      "matches": {
        "styleLang": true
      }
    },
    "18e9dd86-d320-3b14-963c-de4b08ea13bd": {
      "content": "#' @field ${1:name}::${2:Type} ${0:Description}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "type field documentation",
      "matches": {
        "fld": true
      }
    },
    "18ea3cf1-86b7-3a52-a5e9-81182281c6c1": {
      "content": "<nowiki>${1}</nowiki>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nowiki": true
      }
    },
    "18eca5dc-b96c-386e-8716-e268f640f696": {
      "content": "array.min()",
      "doc": "array.min(limit: number | Ref, message?: string | function): Schema\n\nSet a minimum length limit for the array. The ${min} interpolation can be used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-min",
      "matches": {
        "yup array min": true
      }
    },
    "18f81304-f6eb-3638-b6fa-ddcf8b43587c": {
      "content": "font-weight normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      }
    },
    "18f942d8-8a86-358f-9556-7a3894d8f256": {
      "content": "import React, { Component } from 'react';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponent",
      "matches": {
        "rcc": true
      }
    },
    "18faeaf9-c155-3fad-9027-3e3594bcf126": {
      "content": "static_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sca": true
      }
    },
    "18fd1edb-4f71-3581-9fcc-2a17904e5ebb": {
      "content": "expect(${1:target}).not.toBeFalsy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be falsy (coffee)",
      "matches": {
        "notf": true
      }
    },
    "1900d3be-4e6e-3b44-b479-a833dc99dec4": {
      "content": "map[${1:type}]${2:type}",
      "doc": "Snippet for a map",
      "filetype": "go",
      "grammar": "lsp",
      "label": "map declaration",
      "matches": {
        "map": true
      }
    },
    "19089eac-b3de-3636-b0c2-674ded8ae931": {
      "content": "it { should validate_uniqueness_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvu": true
      }
    },
    "190c9dcb-bb20-375a-b9b7-d2df76ad64db": {
      "content": "library UNISIM;\nuse UNISIM.VCOMPONENTS.ALL;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "libx": true
      }
    },
    "1915e7f2-8135-3827-9add-9f4a5c3bf1a4": {
      "content": "FUNCTION MIN(${1:number},${2:...})$0",
      "doc": "statistical min value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MIN",
      "matches": {
        "FUNCTION MIN": true
      }
    },
    "1919bfe6-923e-3e40-8adf-e9ba902137da": {
      "content": "grid-auto-columns: auto",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      }
    },
    "191d4104-ddbc-327f-93f8-cd65a93baddc": {
      "content": "${1:deferred}.isRejected()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disrej": true
      }
    },
    "1923fa32-7a97-3d1a-8e45-7afec3ea8205": {
      "content": "$${1:arrayName} = ['${2}' => ${3}];",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$... = ['' => ]",
      "matches": {
        "array": true
      }
    },
    "1932eac2-13aa-3d53-b38d-eca0f25de5f7": {
      "content": "after(() => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "after",
      "matches": {
        "aft": true
      }
    },
    "19330d07-d376-333b-b4ce-77b0f23c40d4": {
      "content": "#define ${0:#:SYMBOL}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true,
        "define": true
      }
    },
    "193bee33-f576-32c0-a285-82c792486504": {
      "content": "var ${1:name} = ${2:value};",
      "doc": "var assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "var-assignment",
      "matches": {
        "base var": true
      }
    },
    "193cc05e-11af-3f33-b98b-40640520c0f1": {
      "content": "text-emphasis: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      }
    },
    "194063a8-0484-3dd3-976b-eaa770b7c9f2": {
      "content": "switch ($${1:variable}) {\n\tcase '${2:value}':\n\t\t${3}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${4}\n\t\tbreak;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "switch($var) { case 'xyz': ... default: .... }",
      "matches": {
        "switch": true
      }
    },
    "19420839-2ed8-32b0-97f9-d26f991d45b1": {
      "content": "-moz-box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      }
    },
    "194b392c-2d1b-3ca4-be57-f01e51c483f3": {
      "content": "alignContent: '${1}',",
      "doc": "alignContent",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "alignContent",
      "matches": {
        "align": true
      }
    },
    "1952449b-fa8f-3505-a128-94db1644229d": {
      "content": "<div>\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div": true
      }
    },
    "19548ba3-1cda-3870-8c03-b0525e20051b": {
      "content": "else if (${1:condition}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      }
    },
    "19550b9f-299f-3d16-a9aa-9601c85208cc": {
      "content": "<ol>\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true
      }
    },
    "195db583-f371-3c9a-bf52-7745d6ec82b8": {
      "content": "number.truncate()",
      "doc": "number.truncate(): Schema\n\nTransformation that coerces the value to an integer by stripping off the digits\nto the right of the decimal point.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-truncate",
      "matches": {
        "yup number truncate": true
      }
    },
    "19631b97-4412-31c5-99f9-bfb98003948e": {
      "content": "switch(${1:/* variable */})\n{\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "19656dbc-9eea-3220-8222-97a7af071289": {
      "content": "expect($1).toBeFalsy();$0",
      "doc": "expects the argument is falsy",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobefalsy",
      "matches": {
        "jest expect tobefalsy": true,
        "tbf": true
      }
    },
    "196e2b9d-bb4b-31e2-909f-a8bf0dcd26cf": {
      "content": "for ${1} = ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "standard for loop",
      "matches": {
        "for": true
      }
    },
    "1971285f-e02d-385c-ad85-8b6750b2497b": {
      "content": "${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cssm": true
      }
    },
    "19732d04-27f7-30e7-ac82-19f1450a8c14": {
      "content": "{{ ${1:$TM_SELECTED_TEXT} | replace(\"/(search)/i\", \"replace\") }}$0",
      "doc": "replace regex with | replace(\"/(search)/i\", \"replace\")",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "replacex",
      "matches": {
        "replacex": true
      }
    },
    "1973f6c8-8d46-3893-9776-0eeade46d1e9": {
      "content": "{% extends '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% extends ... %}",
      "matches": {
        "ext": true,
        "extends": true
      }
    },
    "19755a01-7bcb-3039-b9de-13fab7356806": {
      "content": "from django.db import models",
      "doc": "from ... import models",
      "filetype": "models",
      "grammar": "lsp",
      "label": "imodels",
      "matches": {
        "imodels": true
      }
    },
    "1977bad9-09f5-3b86-9a9a-e0ce148c059b": {
      "content": "this.${1:first}Ref = React.createRef()",
      "doc": "Create ref statement used inside constructor",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "createRef",
      "matches": {
        "cref": true
      }
    },
    "197c5ba2-4152-3552-a4ba-3b64814ab22f": {
      "content": "\\supercite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\supercite": true,
        "supercite": true
      }
    },
    "197f03ab-8e57-32ef-a620-f63b2aefc956": {
      "content": "IO.inspect(${1})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect()",
      "matches": {
        "p": true
      }
    },
    "1980ff62-233c-3388-b8bd-1e67d6d84b81": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nimport { reactive, toRefs } from 'vue'\n\nexport default {\n\tsetup () {\n\t\tconst state = reactive({\n\t\t\t${0:count}: ${1:0},\n\t\t})\n\t\n\t\treturn {\n\t\t\t...toRefs(state),\n\t\t}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API Reactive",
      "matches": {
        "vbase-3-reactive": true
      }
    },
    "19813b8a-b556-396a-a18c-e824f2b76815": {
      "content": "// override object.Equals\npublic override bool Equals(object obj)\n{\n    //\n    // See the full list of guidelines at\n    //   http://go.microsoft.com/fwlink/?LinkID=85237\n    // and also the guidance for operator== at\n    //   http://go.microsoft.com/fwlink/?LinkId=85238\n    //\n    \n    if (obj == null || GetType() != obj.GetType())\n    {\n        return false;\n    }\n    \n    // TODO: write your implementation of Equals() here\n    ${1:throw new System.NotImplementedException();}\n    return base.Equals (obj);\n}\n\n// override object.GetHashCode\npublic override int GetHashCode()\n{\n    // TODO: write your implementation of GetHashCode() here\n    ${2:throw new System.NotImplementedException();}\n    return base.GetHashCode();\n}",
      "doc": "Implementing Equals() according to guidelines",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Implementing Equals() according to guidelines",
      "matches": {
        "equals": true
      }
    },
    "1985fd5d-d806-3596-a624-4a0981e86acb": {
      "content": "background-break: bounding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      }
    },
    "198613f4-8037-3b1d-9cf6-045e0067b491": {
      "content": "place-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      }
    },
    "1986fad5-24ef-37f8-8716-bd40bc13cdc6": {
      "content": "std::priority_queue<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pqueue": true
      }
    },
    "1989867a-4680-3ba2-bc4e-b1887ff86c59": {
      "content": "for (${1:variable} in ${2:vector}) {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "198c29c8-37ba-38e1-9d1f-f3a6a39b417c": {
      "content": "curveVertex(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "curveVertex": true
      }
    },
    "198cf8d5-d103-323d-9761-8300f6af136b": {
      "content": "switch (${1:switch_on}) {\n\tdefault:\n\t\t$0\n\t\tbreak;\n}",
      "doc": "Code snippet for switch statement",
      "filetype": "c",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "198d3835-020f-37de-aa31-e98caeb067fe": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      }
    },
    "198f4c8f-6e74-3aaa-afa6-4a2de1c8198e": {
      "content": "**${1:#:text}**",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      }
    },
    "198f9c3d-c987-39c2-811d-affaed9743f6": {
      "content": "${1:#:method_name}: function(${2:#:attribute}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":f": true
      }
    },
    "1994b09a-1349-3296-8ef4-534fec7a2467": {
      "content": ".. caution::\n\t${0:Watch out!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cau:": true
      }
    },
    "1994e6fd-d355-327b-b633-4d703b19e202": {
      "content": "${1:FIELDNAME} = IntegerRangeField()",
      "doc": "IntegerRangeField (fintrange).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fintrange",
      "matches": {
        "fintrange": true
      }
    },
    "199ff0eb-c5bb-34ca-8c17-b7f4bdf2acce": {
      "content": "{% autoescape ${0:xhtml_escape | None} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      }
    },
    "19a36f06-d309-368d-a958-8f1922b4a245": {
      "content": "import { mapActions } from 'vuex';\n\nexport default {\n\tmethods: {\n\t\t...mapActions([\n\t\t\t${1:'nameOfAction'}, //also supports payload `this.nameOfAction(amount)` \n\t\t])\n\t},\n};",
      "doc": "mapactions inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapActions",
      "matches": {
        "vmapactions": true
      }
    },
    "19abe344-af30-314d-9908-e0f2e6a93f90": {
      "content": "StatefulBuilder(\n  builder: (BuildContext context, setState) {\n    return ${0:};\n  },\n),",
      "doc": "Creates a widget that both has state and delegates its build to a callback. Useful for rebuilding specific sections of the widget tree.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Stateful Builder",
      "matches": {
        "statefulBldr": true
      }
    },
    "19ac30e0-d518-306c-beca-fc6f04b09b92": {
      "content": "#if ${1}\n${0}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      }
    },
    "19b4481d-d1f8-33bb-a891-18092c46d6d3": {
      "content": "justify-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      }
    },
    "19c14674-8e81-38e3-b61e-dfbc07493801": {
      "content": "{(${1:a},${2:b}) =>\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{(": true
      }
    },
    "19c476c0-a9dc-3027-bccf-bbbf99b01dd0": {
      "content": "v-else",
      "doc": "Does not expect expression. previous sibling element must have v-if or v-else-if.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-else",
      "matches": {
        "vElse": true
      }
    },
    "19c510fb-285d-390d-970f-4ba1d7487534": {
      "content": "console.dir(${1:first})",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleDir",
      "matches": {
        "cdi": true
      }
    },
    "19ca619f-41f2-3d0d-8c67-05798db12c9e": {
      "content": "slot-scope='$1'$0",
      "doc": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "slotScope",
      "matches": {
        "slotScope": true
      }
    },
    "19d0d1b6-188a-3644-a18d-050550e20da4": {
      "content": "$this->${1:method}()->shouldNotMatch(${2:'/wizard/i'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotMatch('/wizard/i')",
      "matches": {
        "snmatch": true
      }
    },
    "19d1b735-87ba-3e4e-a89c-3c683291369c": {
      "content": "class ${1:ClassName}(${2:object}):\n\t\"\"\"${3:docstring for $1}\"\"\"\n\tdef __init__(self, ${4:arg}):\n\t\t${5:super($1, self).__init__()}\n\t\tself.$4 = $4\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "19d5b644-62b7-3251-9f09-79a4d6287efb": {
      "content": "${1:FIELDNAME} = models.BinaryField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binary": true
      }
    },
    "19dae88d-2a27-39b9-b886-4194e310e505": {
      "content": "parfor ${1:i} = ${2:1:n}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "parfor",
      "matches": {
        "parfor": true
      }
    },
    "19dca475-2b93-302e-9b48-8ed60ff6f0ba": {
      "content": "${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n ${2:property}: ${3:PropTypes.node.isRequired},\n}",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-init",
      "matches": {
        "prop-types init": true
      }
    },
    "19e54f9a-8c59-306f-b131-fecd9bb3d3c1": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "19ede2d4-ec95-3117-9a3c-ac1f750fa719": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "19f374c0-8dc8-38c2-9ffa-6cb475900ef9": {
      "content": "<label for=\"${2:$1}\">$1</label>\n<input type=\"${3:text}\" name=\"${4:$2}\"${5: id=\"${6:$2}\"} value=\"$7\" />$8",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label_and_input": true
      }
    },
    "19f4d9a4-aee6-380a-b4bd-e3c67858d8cc": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "try catch",
      "matches": {
        "try": true
      }
    },
    "19f8612e-d2bf-3003-b4b6-9dbde7179b79": {
      "content": "post {\n\tfailure {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfa": true
      }
    },
    "19fc0cdf-4ab8-356d-a59f-b84f0dd1d903": {
      "content": "right: ${1},",
      "doc": "right",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "right",
      "matches": {
        "ri": true
      }
    },
    "1a03ab33-6e3e-39a2-b78c-b90a0b29465a": {
      "content": "{\n\tblock : '${1:name}',\n\tmods: { ${2:modName}: '${3:modVal}' },\n\tcontent : [\n\t\t'${4:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bwm": true
      }
    },
    "1a077718-821a-3c8a-bf9f-a056f73163a4": {
      "content": "t.binary :${1:title}${2:, limit: ${3:2}.megabytes}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.binary (tcbi)",
      "matches": {
        "t.": true
      }
    },
    "1a114c5a-9ff1-352c-8f59-94b652a8d735": {
      "content": "(filter ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "1a14aa63-617a-36a9-b9b9-6f050b7d0099": {
      "content": "Url:redirect('${1:path}');",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_redirect": true
      }
    },
    "1a1ab869-0421-36f8-a22f-0a71ae63f01b": {
      "content": "_.isWeakMap(${value})",
      "doc": "_.isWeakMap(new WeakMap);\n// => true\n\n_.isWeakMap(new Map);\n// => false\n\nChecks if `value` is classified as a `WeakMap` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isweakmap",
      "matches": {
        "lodash isweakmap": true
      }
    },
    "1a1ca5e3-568e-30a2-b848-ae67e2b9300a": {
      "content": "for ${1:name} in ${2:array}\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      }
    },
    "1a22dba6-d152-3ad1-94a4-63a865f0c38b": {
      "content": "Object.getOwnPropertyDescriptor(${1:obj}, '${2:prop}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.getOwnPropertyDescriptor",
      "matches": {
        "og": true
      }
    },
    "1a2c34d7-87c7-3e01-a1d2-5198b48ca1e2": {
      "content": "outline-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      }
    },
    "1a3b1f80-72f0-3bce-8822-b47871be4724": {
      "content": "<dl id=\"${1}\">\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl#": true
      }
    },
    "1a3daa9a-e9a2-339c-8e4a-15c363c59ac0": {
      "content": "{% youtube ${0:video_id} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "youtube": true
      }
    },
    "1a404f4f-62f2-3ff7-9f03-595e09cd4dbd": {
      "content": "const { ${1:name} } = this.props",
      "doc": "",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "destructuring of props",
      "matches": {
        "dp": true
      }
    },
    "1a47b1b7-3ec6-38c0-b42b-ce0ada0f638d": {
      "content": "async () => {\n\t{$TM_SELECTED_TEXT}\n}",
      "doc": "wraps text in arrow function",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "wrap selection in async arrow function",
      "matches": {
        "wrap selection in async arrow function": true
      }
    },
    "1a49b4dd-0ec2-3d97-9eb9-97316e175527": {
      "content": "array.ensure()",
      "doc": "array.ensure(): Schema\n\nEnsures that the value is an array, by setting the default to [] and transforming null and undefined\nvalues to an empty array as well. Any non-empty, non-array value will be wrapped in an array.array()\n  .ensure()\n  .cast(null); // => []\narray()\n  .ensure()\n  .cast(1); // => [1]\narray()\n  .ensure()\n  .cast([1]); // => [1]",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-ensure",
      "matches": {
        "yup array ensure": true
      }
    },
    "1a49ce49-2056-388b-b76c-0e7f448ec204": {
      "content": "<%= if ${1} do %>\n  $0\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "1a4a3c21-c4e7-3138-aad7-1e3317fac111": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t${3:${VISUAL}}\nelse\n\t${0}\nendif",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "1a4c8f0b-a94a-3a12-991b-248b739be5a0": {
      "content": "# Client App\nFROM johnpapa/angular-cli as client-app\nLABEL authors=\"${1:John Papa}\"\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --silent\nCOPY . .\nRUN ng build --prod\n\n# Node server\nFROM ${2:node:12-alpine} as node-server\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --production --silent && mv node_modules ../\nCOPY ${3:server.js} .\nCOPY ${4:/server} /usr/src/app/server\n\n# Final image\nFROM ${2:node:12-alpine}\nWORKDIR /usr/src/app\nCOPY --from=node-server /usr/src /usr/src\nCOPY --from=client-app /usr/src/app/dist ./\nEXPOSE ${5:3000}\n# CMD [\"node\", \"server.js\"]\nCMD [\"npm\", \"start\"]\n$0",
      "doc": "Multi-stage Node and Angular Dockerfile",
      "filetype": "dockerfile",
      "grammar": "lsp",
      "label": "Multi-stage Node and Angular Dockerfile",
      "matches": {
        "docker-angular-node-multi-stage": true
      }
    },
    "1a4d48fc-3f35-3345-878a-8391c727e250": {
      "content": "${1:obj}.show('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      }
    },
    "1a6177c8-3c63-3b85-8c63-916c85bd4964": {
      "content": "object (self)\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object",
      "matches": {
        "Obj": true
      }
    },
    "1a6654b9-8df7-335d-b790-cba69a0a35b2": {
      "content": "fun ${1:name}(${2}): ${3:String} {\n\t${4}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "1a6692d7-0acb-3ac9-bc3b-fcf966b96c60": {
      "content": "/**\n * ${3:undocumented constant}\n */\ndefine(${1}, ${2});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_d": true
      }
    },
    "1a6afbc1-26bb-3295-b079-c3860b336ad9": {
      "content": "\\${5}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5}",
      "matches": {
        "5": true
      }
    },
    "1a7407f2-e57f-3c7d-9d01-54ac9083ed04": {
      "content": "Vue.directive('${1:directiveName}', {\n\tbind(el, binding, vnode) {\n\t\tel.style.${2:arg} = binding.value.${2:arg};\n\t}\n});",
      "doc": "vue custom directive",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-custom-directive",
      "matches": {
        "vc-direct": true,
        "vue custom directive": true
      }
    },
    "1a76d725-7bbd-36d4-9e5f-a434fc051291": {
      "content": "while ${1}\n\t${0:${VISUAL}}\nendw",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      }
    },
    "1a7910ae-efca-3c55-9c83-5c8c1697daf2": {
      "content": "# ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "# section heading",
      "matches": {
        "heading": true,
        "section": true
      }
    },
    "1a7c9616-594f-3581-81f0-d96aaf85eb62": {
      "content": "| append: '${1:string}'",
      "doc": "String filter: append",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter append",
      "matches": {
        "append": true
      }
    },
    "1a85054e-64b7-36a6-bf0d-c5ac6c1b09dd": {
      "content": "import $0",
      "doc": "Code snippet for import a package.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "im": true,
        "import": true
      }
    },
    "1a86768c-0396-3eec-93f6-4038c782f975": {
      "content": "for $1 in range(${2:start}{$3:,end}):\n\t${4:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "for range loop",
      "matches": {
        "for": true
      }
    },
    "1a8701de-8222-3a4b-b9ab-934c110e8a8c": {
      "content": "border-style double",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      }
    },
    "1a883559-b0f0-371f-9572-af4a42b2bd4d": {
      "content": "top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "1a884f2c-7847-3452-8e0a-1f626c3dcc0c": {
      "content": "println(gl.glGetError());",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl get error",
      "matches": {
        "gl": true
      }
    },
    "1a915543-3538-3719-ba7d-3739cc7dd2a6": {
      "content": "analogRead(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ar": true
      }
    },
    "1a93664e-a99d-3729-98fb-120cea4808d9": {
      "content": "import ${1:package} as ${2:name}",
      "doc": "Code snippet for import a package and rename.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "import as",
      "matches": {
        "as": true,
        "im": true,
        "import": true
      }
    },
    "1a9aa4e5-2748-313b-bf81-eb04c6455c72": {
      "content": "mat2 scale(vec2 scale){\n\treturn mat2(scale.x, 0.0, 0.0, scale.y);\n}",
      "doc": "scale",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "scale",
      "matches": {
        "scale": true
      }
    },
    "1a9addb6-1776-3ec1-96db-2623b94c574b": {
      "content": "{% hook \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig hook",
      "matches": {
        "hook": true
      }
    },
    "1a9cda6f-1725-398c-af8d-8404f89ba443": {
      "content": "//Paul Razvan Berg tips (@PaulRBerg)\r\n1️⃣ Use \"type(uint256).max\" instead of \"uint256(-1)\"\r\n2️⃣ Surround code with {} to avoid \"stack too deep\"\r\n3️⃣ Skip tuple vars with commas: \"uint a, , ,\"\r\n4️⃣ Swap vars in one line: \"(a,b)=(b,a)\"\r\n5️⃣ Use \"assert\" and get built-in formal verification with SMTChecker\r\n\r\n-----------------------------------------------\r\n\r\n// Daniel Luca tips (CleanUnicorn.eth)\r\n1️⃣  You can format numbers in Solidity using underscores.\r\ni.e.,\r\n1_000 is a thousand\r\n1_0_0_0 is a thousand\r\n1_000e0_3 is a million\r\n\r\nPython spec https://www.python.org/dev/peps/pep-0515/\r\n\r\n------------------------------\r\nContribute tips here: https://github.com/juanfranblanco/vscode-solidity/blob/master/snippets/solidity.json#L197-L201 \r\nEscape the text using: https://www.freeformatter.com/json-escape.html\r\n------------------------------",
      "doc": "solidity tips",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "solidityTips",
      "matches": {
        "solidityTips": true
      }
    },
    "1a9e9a98-e0a2-3d98-89dc-1065dbb4201a": {
      "content": "livenessProbe:\n  httpGet:\n\tpath: /healthz\n\tport: 8080\n\tscheme: HTTP\n  initialDelaySeconds: 30\n  timeoutSeconds: 5\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "livenessProbe_spec": true
      }
    },
    "1aa2c7b4-77bc-36fc-8c0d-832ed2574cd6": {
      "content": "\\${3:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:#optional}",
      "matches": {
        "3#": true
      }
    },
    "1aa2e784-e0ed-3e52-932d-52240cf53f2b": {
      "content": "{%- continue -%}",
      "doc": "Iteration tag: continue, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag continue, whitespaced",
      "matches": {
        "continue-": true
      }
    },
    "1aa385fe-424d-3ff5-abd9-0c0479919eca": {
      "content": "${1:obj}.removeProp('${2:property name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remp": true
      }
    },
    "1aa655e3-d230-309e-a0ec-76c3b4f6e818": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}');",
      "doc": "Creates an NgRx Action",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-action",
      "matches": {
        "a-ngrx-create-action": true,
        "angular ng rx create action": true
      }
    },
    "1aaa827f-fdbe-30e1-9124-71465f689795": {
      "content": "delegate (${1:int x}) => ${2}${3:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      }
    },
    "1aab5954-74e2-30ac-9cb0-df5183bd9581": {
      "content": "caption-side: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      }
    },
    "1aae2dc1-b3ff-345d-b90f-59db457d00de": {
      "content": "$.ajax({\n\turl: '${1:mydomain.com/url}',\n\ttype: '${2:POST}',\n\tdataType: '${3:xml/html/script/json}',\n\tdata: $.param( $('${4:Element or Expression}') ),\n\tcomplete: function (jqXHR, textStatus) {\n\t\t${5:// callback}\n\t},\n\tsuccess: function (data, textStatus, jqXHR) {\n\t\t${6:// success callback}\n\t},\n\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t${0:// error callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajax": true
      }
    },
    "1ab4bd8a-d619-3a06-8ad9-da31ecaddd3c": {
      "content": "\\$this->",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t.": true
      }
    },
    "1ab8656e-1b51-3445-b88d-6699de81e672": {
      "content": "modules",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "modules",
      "matches": {
        "modules": true
      }
    },
    "1ab8ad17-a512-3519-816a-6f905430592d": {
      "content": "@unpublished{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    note = {${4}},\n    memo = {month, year},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@unpublished": true,
        "unpublished": true
      }
    },
    "1ab8fefb-6f4a-3dda-8553-0fc0423c5857": {
      "content": "require 'ruby-debug'; debugger",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug18": true
      }
    },
    "1abb84e6-0b33-3997-aa07-240fe3087471": {
      "content": "text-transform lowercase",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      }
    },
    "1ac2904f-1976-3859-8c11-859025c50a59": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypetransitional": true
      }
    },
    "1acdc5c5-f5d1-3c36-802d-24487159ca73": {
      "content": "+ (void)initialize\n{\n\t[[NSUserDefaults standardUserDefaults] registerDefaults:[NSDictionary dictionaryWithObjectsAndKeys:\n\t\t$0@\"value\", @\"key\",\n\t\tnil]];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Initialize Implementation (I)",
      "matches": {
        "I": true
      }
    },
    "1ad0e15f-162f-3ae6-a84f-8ce36c37e4d3": {
      "content": "{# PAGINATION\n\t\t\nFor this pagination to work properly, we need to be sure to set\nthe paginateBase variable in the template we are including the \npagination in.\n\n{% set paginateBase = \"/blog/p\" %}\n#}\n\n{% if pageInfo.totalPages > 1 %}\n<ul>\n\t{% if pageInfo.currentPage != \"1\" %}\n\t\t<li><a href=\"{{ paginateBase ~ \"1\" }}\">First Page</a></li>\n\t{% endif %}\n\n\t{% if pageInfo.prevUrl %}\n\t\t<li><a href=\"{{ pageInfo.prevUrl }}\">Previous Page</a></li>\n\t{% endif %}\n\n\t{% for pageNumber in 1..pageInfo.totalPages %}\n\t\t<li {% if pageInfo.currentPage == pageNumber %}class=\"active-page\"{% endif %}>\n\t\t\t<a href=\"{{ paginateBase ~ pageNumber }}\">{{ pageNumber }}</a>\n\t\t</li>\n\t{% endfor %}\n\n\t{% if pageInfo.nextUrl %}\n\t\t<li><a href=\"{{ pageInfo.nextUrl }}\">Next Page</a></li>\n\t{% endif %}\n\n\t{% if pageInfo.currentPage != pageInfo.total %}\n\t\t<li><a href=\"{{ paginateBase ~ pageInfo.total }}\">Last Page</a></li>\n\t{% endif %}\n</ul>\n{% endif %}\n$0",
      "doc": "paginate advanced",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "paginate1",
      "matches": {
        "paginate": true
      }
    },
    "1adec821-2a49-3684-938f-f1263c8c56b5": {
      "content": "validates_associated :${1:attribute}${2:, on: :${3:create}, if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated if (vaif)",
      "matches": {
        "vaif": true
      }
    },
    "1ae51b79-1cc1-33e6-99ef-4251b774dbf3": {
      "content": "map {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "1ae65ca1-479c-3999-a9cb-8f0f71d5d912": {
      "content": "var ${1:name}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "var statement",
      "matches": {
        "v": true
      }
    },
    "1ae84acb-b120-3e02-8ca2-bd8fbfb0d779": {
      "content": "<${1}> ${0}",
      "doc": "Add urls",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "URLS",
      "matches": {
        "u": true,
        "url": true
      }
    },
    "1ae94280-e1fc-3610-959b-61ee87d82573": {
      "content": "{ ${1:try} } always { ${0:always} }",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "always": true
      }
    },
    "1aeffac8-9303-39db-9c22-06fb7d1a43ae": {
      "content": "${1:Table}~\\\\ref{${2:tab:}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a table",
      "matches": {
        "table": true
      }
    },
    "1af2703f-780a-36cc-a12c-67ff0bb4fbcd": {
      "content": "{\n\t\"type\": \"html\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"<div>${0}</div>\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_html": true
      }
    },
    "1af2c2bc-96d4-3541-b409-df90a1680b50": {
      "content": "expand(${1:array}${2:, }${0:newSize});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expand": true
      }
    },
    "1af3a4f4-7781-3ca2-a984-4e9c406add0b": {
      "content": "if(${1:true})\n{\n\t${2:${VISUAL}}\n}\nelse\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "1b17eef3-6a46-3fa7-985f-5ce4de93cf8a": {
      "content": "image:${1:example.jpg}[${2:Description}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Inline image:file[desc]",
      "matches": {
        "imageinline": true
      }
    },
    "1b190ab7-0cb3-3f29-a126-240b920e1d51": {
      "content": "[${1}](${2}){${3}};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      }
    },
    "1b1eabea-531c-309b-8a39-99442b502c39": {
      "content": "{% endnav %}$0",
      "doc": "endnav",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endnav",
      "matches": {
        "endnav": true
      }
    },
    "1b2360d3-46ee-37c3-8acb-a88202bdd7a3": {
      "content": "$this->${1:method}()->shouldHaveCount(${2:7});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveCount(7)",
      "matches": {
        "scount": true
      }
    },
    "1b298c39-74d5-35b8-b8b6-86ab7e40c87e": {
      "content": "[SetUp]\npublic void SetUp() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testsetup": true,
        "tsu": true
      }
    },
    "1b2ef02c-ffbd-3eec-8142-08b1d3fe9960": {
      "content": "log.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Println(...)",
      "matches": {
        "ln": true
      }
    },
    "1b3522c8-7cc2-3b38-bf62-1a137869250e": {
      "content": "${1:FIELDNAME} = models.CharField($2, max_length=${3:50})",
      "doc": "CharField (mchar)",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mchar",
      "matches": {
        "mchar": true
      }
    },
    "1b3b0255-9882-35dd-9f56-beb86067a446": {
      "content": "@misc{${1:LABEL},\n    memo = {author, title, howpublished, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@misc": true,
        "misc": true
      }
    },
    "1b3cada5-77be-331f-aa3e-1f03f9d5260f": {
      "content": "(is (= ${1} ${0}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      }
    },
    "1b3da459-aa25-3423-8ffe-c90ad4322a67": {
      "content": "include Comparable\n\ndef <=>(other)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Comp": true
      }
    },
    "1b461839-c23b-3730-8bc0-444453a652ee": {
      "content": "page-break-after: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      }
    },
    "1b498a4b-b10f-3422-a522-7992bbb4b0cc": {
      "content": "(${1}) => ${0:${VISUAL}}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "() =>",
      "matches": {
        "af": true
      }
    },
    "1b4f2a8b-8c70-339e-a0dd-5c8217a2d729": {
      "content": "componentWillMount () {\n\t$0\n}",
      "doc": "Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      }
    },
    "1b512a61-73ef-38ba-b42f-b7c434de80ee": {
      "content": "<xsl:otherwise>${0}\n</xsl:otherwise>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "otherwise": true
      }
    },
    "1b52a832-3271-31fc-8edb-cbe533bffeaa": {
      "content": "function asin(${1:sine})$0",
      "doc": "function trigonometric arc-sine, or inverse sine, of sine",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-asin",
      "matches": {
        "function asin": true
      }
    },
    "1b541fbd-89f5-3f7e-acd1-9c339d8e3ee9": {
      "content": "camera(${1:eyeX}, ${2:eyeY}, ${3:eyeZ}, ${4:centerX}, ${5:centerY}, ${6:centerZ}, ${7:upX}, ${8:upY}, ${0:upZ});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "camera": true
      }
    },
    "1b58d83c-6e38-3d11-ab80-928502cf20d5": {
      "content": "refute_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfn": true
      }
    },
    "1b5bddea-782e-3fcf-9202-eadc3491af8e": {
      "content": "letter-spacing: $1em;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "letter-spacing:   length-em (letter)",
      "matches": {
        "letter": true
      }
    },
    "1b5c5658-6181-3b58-9925-5e6bd2e5c7e9": {
      "content": "${1:Figure}~\\\\ref{${2:fig:}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a figure",
      "matches": {
        "figure": true
      }
    },
    "1b6e7ea4-1613-32e7-8032-d4efa10db8c9": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-instance-of",
      "matches": {
        "prop-types instanceof": true,
        "pti": true
      }
    },
    "1b703661-6cd7-3188-8a37-5fc3c2704b57": {
      "content": "{% elif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "1b76a294-3d1b-38c0-a0fb-94b358df6cc4": {
      "content": "if err != nil {\n\tpanic(${1})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error panic",
      "matches": {
        "errp": true
      }
    },
    "1b7cd44b-2492-39cb-b29f-82b17215c188": {
      "content": "assert_redirected_to ${10:${2:model}s_path}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (path plural)",
      "matches": {
        "artpp": true
      }
    },
    "1b7d0995-ba17-3592-8301-d4ed22002d7a": {
      "content": "place-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      }
    },
    "1b7ece43-ddfe-349d-bf54-6d7b02445cee": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      }
    },
    "1b83a464-ce01-32d9-af0f-336640020375": {
      "content": "fontWeight: '${1:normal}',",
      "doc": "fontWeight",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "fontWeight",
      "matches": {
        "fo": true
      }
    },
    "1b845e52-dc9a-32c2-9ceb-ac0dba66fdd5": {
      "content": "case ${1:value}:\n\t${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case ...:",
      "matches": {
        "case": true
      }
    },
    "1b85be8f-42d7-31d3-bfa1-2860d4c89823": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      }
    },
    "1b93f203-e166-314d-90be-dcfdb4c852ff": {
      "content": "DELETE FROM mysql.user WHERE user = '${1:userName}';",
      "doc": "Delete user",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "deleteuser",
      "matches": {
        "deleteuser": true
      }
    },
    "1b974e29-572a-3f2c-a173-bd7897c47c93": {
      "content": "background-origin: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      }
    },
    "1b98808a-d18d-34ca-9aa2-570e2dca5341": {
      "content": "import thunk from 'redux-thunk'",
      "doc": "Import thunk from redux-thunk",
      "filetype": "redux-thunk",
      "grammar": "lsp",
      "label": "redux-thunk-import",
      "matches": {
        "redux-thunk import": true
      }
    },
    "1b9aafa7-b4ee-3122-93c6-6da9690ea063": {
      "content": "background-clip: ${1|border-box,padding-box,content-box,text|};",
      "doc": "initial value: border-box",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-clip",
      "matches": {
        "bgcl": true
      }
    },
    "1b9c72f5-3e2b-3991-8134-b2ef32df5503": {
      "content": "t.float :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create float column",
      "matches": {
        "tcf": true
      }
    },
    "1ba1e79c-7ba3-3744-be2d-dd5b28bb4b14": {
      "content": "mods : { ${1:modName} : '${2:modVal}' },",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mo": true
      }
    },
    "1ba25a23-378d-3f7b-8fea-e2ddbf656311": {
      "content": "padding: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding",
      "matches": {
        "p": true
      }
    },
    "1baa6836-1abb-3a94-b2cf-c1c8ba8fb0ce": {
      "content": "<article class=\"${1}\">\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article.": true
      }
    },
    "1baaffe5-9df1-305c-9fc3-0c9a1d5eac35": {
      "content": "validates_uniqueness_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:must be unique}\", if: proc { |obj| ${6:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of if (vuif)",
      "matches": {
        "vuif": true
      }
    },
    "1baed5dc-afe3-3119-8f1d-601aa463c01b": {
      "content": "if err != nil {\n\tt.Errorf(\"${0:message}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Errorf(...) }",
      "matches": {
        "ter": true
      }
    },
    "1bb58693-dfec-32f5-9035-ba7d5ccbf483": {
      "content": "echo CHtml::activeFileField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaff": true
      }
    },
    "1bb79d08-e330-3948-b018-d72f1c6c9de1": {
      "content": "try:\n\t${1:pass}\nexcept ${2:expression} as ${3:identifier}:\n\t${4:pass}\nelse:\n\t${5:pass}",
      "doc": "Code snippet for a try/except/else statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "try/except/else",
      "matches": {
        "try/except/else": true
      }
    },
    "1bb7eebf-b575-3669-b2be-df60fd2d98f8": {
      "content": "t.binary :${1:title}${2:, limit: ${3:2}.megabytes}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create binary column",
      "matches": {
        "tcbi": true
      }
    },
    "1bc658e8-1399-3ce1-83b2-cb61e373162f": {
      "content": "get ${1:propertyName}() {\n\treturn this.${0};\n}",
      "doc": "Creates a getter property inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propertyGet",
      "matches": {
        "pge": true
      }
    },
    "1bc8e4e2-4f08-3df0-8133-1ed533e9b5d6": {
      "content": "<Directory ${1:/Library/WebServer/}>\n\t${0}\n</Directory>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      }
    },
    "1bcb67d4-0c46-313f-a84a-45abb1120526": {
      "content": "cond do\n\t${1} ->\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      }
    },
    "1bcc6997-43bf-3fb3-91a2-d34492508b4d": {
      "content": "render nothing: ${1:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (nothing) (rn)",
      "matches": {
        "rn": true
      }
    },
    "1bd5fd6d-98ba-3b72-8b78-63b2060442b7": {
      "content": "{\n\telem : '${1:name}',\n\tcontent : [\n\t\t'${2:content}'\n\t]\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "e": true
      }
    },
    "1bd8374f-dd20-3a42-8aa9-b5b925d6df05": {
      "content": "<legend>${0}</legend>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend": true
      }
    },
    "1be68333-25d1-3a5a-85e0-5b08818af441": {
      "content": "Vue.use(${1:plugin})$0",
      "doc": "Vue.use( plugin )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "use",
      "matches": {
        "VueUse": true
      }
    },
    "1bf727fe-5d23-3679-87b1-56d4e68ab381": {
      "content": "{{ site.date | date: '${format: %b %d, %Y}' }}",
      "doc": "Tag: site.date",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Site Vairable Date",
      "matches": {
        "date": true
      }
    },
    "1bf92407-d5bf-35ef-8d21-cf5855127b24": {
      "content": "| minus: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "minus": true
      }
    },
    "1bf9f3aa-015e-3752-9346-e9add06c18bb": {
      "content": "go func(${1} ${2:type}) {\n\t${3:/* code */}\n}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "goroutine anonymous function",
      "matches": {
        "ga": true
      }
    },
    "1bfafd39-7e5b-3397-856f-94bb62df3503": {
      "content": "componentWillReceiveProps(nextProps) {\n\t$0\n}",
      "doc": "DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillreceiveprops",
      "matches": {
        "cwr": true,
        "react componentwillreceiveprops": true
      }
    },
    "1c01db56-082a-3808-8614-28edf457f01b": {
      "content": "mailto:${1:alice@example.com}[${2:Alice}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "mailto link",
      "matches": {
        "mailto": true
      }
    },
    "1c04a7a3-f70f-3526-8ddf-f444cc8ab1be": {
      "content": "componentWillReceiveProps: (nextProps) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillReceiveProps",
      "matches": {
        "componentWillReceiveProps": true
      }
    },
    "1c04d14f-0cb5-32a8-b4d9-5add9f4cc41d": {
      "content": "has_many",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many",
      "matches": {
        "hm": true
      }
    },
    "1c0a1dfd-f8e3-3b94-a2f7-94ac7e227124": {
      "content": "white-space ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      }
    },
    "1c0a30c7-e6cb-3f0b-904c-34039cbc6000": {
      "content": "\\begin{verbatim}\n\t${1:TARGET}\n\\end{verbatim}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verbatim} verb \\verbatim": true,
        "verbatim": true
      }
    },
    "1c0a577c-7bc2-3644-b54f-d8c0036fcba3": {
      "content": "resize both",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      }
    },
    "1c0bccfe-307b-3294-916d-d93aa0cebaed": {
      "content": ".. error:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "error",
      "matches": {
        "error": true
      }
    },
    "1c0c152d-fea7-3f51-ba68-36578aa9b474": {
      "content": "{% if ${1:#:condition} %}\n  ${2:TARGET}\n{% else %}\n  ${3}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "if else endif",
      "matches": {
        "ifelse": true
      }
    },
    "1c0cf499-b3eb-37c5-9efe-246914ab1ceb": {
      "content": "else if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "else if ...",
      "matches": {
        "eif": true
      }
    },
    "1c107e39-0a34-3ded-809f-b1ef46a234a8": {
      "content": "font-size-adjust: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      }
    },
    "1c14d2ce-82e3-3fd4-9c10-a708640d31fd": {
      "content": "${1:public} static void Main(string[] args)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "svm": true
      }
    },
    "1c1a8a80-3769-3e6d-a36d-ad068698ced2": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"less\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with LESS",
      "matches": {
        "vbase-less": true
      }
    },
    "1c1ea5d0-7588-3a9c-a1a3-b10fb0294912": {
      "content": "@php\n    ${1}\n@endphp",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@php ... @endphp",
      "matches": {
        "php": true
      }
    },
    "1c241b1a-3186-3b00-9832-676767b666e3": {
      "content": "create or replace package body ${1:name}\nas\n\t${0:-- body}\nend; -- end of package body $1;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      }
    },
    "1c257c16-2a75-3fb3-9a6a-b2a0e5651a74": {
      "content": "struct ${1:Name}(${2:Type});",
      "doc": "struct …(…);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "struct-tuple",
      "matches": {
        "struct-tuple": true
      }
    },
    "1c302430-7569-33da-b217-a4af9fb6a77c": {
      "content": "${1:obj}.select (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "1c31d68e-d27b-32e4-a6e3-bac06d29d687": {
      "content": "if {${1:condition}} {\n\t$2\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "if... (if)",
      "matches": {
        "if": true
      }
    },
    "1c36455e-fb31-390e-88e5-429f0839045f": {
      "content": "{% block ${1:#:name} %}\n\t${0:TARGET}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% block ... %} ... {% endblock %}",
      "matches": {
        "bl": true,
        "block": true
      }
    },
    "1c423eb2-0227-39af-9fc1-2d94eab3fd9a": {
      "content": "$(this)",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "this": true
      }
    },
    "1c43eb6e-ceec-369d-a3a4-ed8245291ad2": {
      "content": "_.floor(${number}, ${precision})",
      "doc": "_.floor(4.006);\n// => 4\n\n_.floor(0.046, 2);\n// => 0.04\n\n_.floor(4060, -2);\n// => 4000\n\nComputes `number` rounded down to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-floor",
      "matches": {
        "lodash floor": true
      }
    },
    "1c472d02-7604-300f-a3c2-7ca9787aebb1": {
      "content": "Boolean",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      }
    },
    "1c4d3eb9-6546-3380-b6d3-c61d31e1a796": {
      "content": "with ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "with",
      "matches": {
        "wi": true
      }
    },
    "1c4dbe2e-4e85-3f66-bcf4-ab2e1a0e86bb": {
      "content": "func ${1:handler}(${2:w} http.ResponseWriter, ${3:r} *http.Request) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "HTTP handler",
      "matches": {
        "funch": true
      }
    },
    "1c54a15c-9a05-30cc-b8bc-64c8d5d2152e": {
      "content": "padding: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true,
        "padding": true
      }
    },
    "1c596f98-4210-3548-9bcd-5c221645bf61": {
      "content": "try:\n\t${1:pass}\nexcept ${2:expression} as ${3:identifier}:\n\t${4:pass}\nfinally:\n\t${5:pass}",
      "doc": "Code snippet for a try/except/finally statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "try/except/finally",
      "matches": {
        "try/except/finally": true
      }
    },
    "1c5e6ae5-bc9e-33dd-9c02-7c089c97ff3f": {
      "content": "{% blocktrans %}\n  $1\n{% endblocktrans %}",
      "doc": "blocktrans tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "blocktrans",
      "matches": {
        "blocktrans": true
      }
    },
    "1c5ea664-3dc3-3127-96bf-7a36fda371fe": {
      "content": "$.ajaxSetup({\n\turl: \"${1:mydomain.com/url}\",\n\ttype: \"${2:POST}\",\n\tdataType: \"${3:xml/html/script/json}\",\n\tdata: $.param( $(\"${4:Element or Expression}\") ),\n\tcomplete: function (jqXHR, textStatus) {\n\t\t${5:// callback}\n\t},\n\tsuccess: function (data, textStatus, jqXHR) {\n\t\t${6:// success callback}\n\t},\n\terror: function (jqXHR, textStatus, errorThrown) {\n\t\t${0:// error callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsetup": true
      }
    },
    "1c673b54-1a3d-3af0-87ed-95e04a9eea1d": {
      "content": "def self.${1:class_method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      }
    },
    "1c684a98-f716-3b3c-a27c-b755c364902a": {
      "content": "<map class=\"${1}\" name=\"${2}\">\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map.": true
      }
    },
    "1c6893a0-d8e6-34dc-8954-e80e833936f7": {
      "content": "list-style-type: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      }
    },
    "1c6b5532-f8f1-3d88-8814-934b507c75d6": {
      "content": "vertical-align: middle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      }
    },
    "1c71e7f1-749b-3c1a-ba52-dd60bc19e1f1": {
      "content": "methods: {\n\t${1:name}() {\n\t\t${0}\n\t}\n},",
      "doc": "vue method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Methods",
      "matches": {
        "vmethod": true
      }
    },
    "1c777aa6-ecc2-37ad-875e-e4cef055e126": {
      "content": "{% lorem $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lorem": true
      }
    },
    "1c8b8f07-d9d9-34f5-b83e-880f2b1c2f02": {
      "content": "signal ${1:signalname}(${2:args})",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "signal declaration",
      "matches": {
        "signal": true
      }
    },
    "1ca452b1-d42a-3da5-ad42-ea9994283d82": {
      "content": "border-style: ridge;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      }
    },
    "1cab07a9-3663-3cbc-8dad-980d95ff4831": {
      "content": "${1:obj}.mouseleave (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mleave": true
      }
    },
    "1cad6c3b-f8f0-36a1-8f86-7e8119fc21a7": {
      "content": "border-bottom: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "1cb67b76-305e-35bb-b13d-27d775466201": {
      "content": ";(function(${1}) {\n\t${0:${VISUAL}}\n}(${2}))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ";fe": true
      }
    },
    "1cc54b2b-3ab9-3fea-9b1f-61a3fb0a3b92": {
      "content": "frexp($2, $3)",
      "doc": "split a floating point number",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "frexp",
      "matches": {
        "frexp": true
      }
    },
    "1cc6ea43-c0fb-3335-ad97-7845a0e1d42e": {
      "content": "describe('$1', () => {\n  $0\n})",
      "doc": "Testing `describe` block",
      "filetype": "react",
      "grammar": "lsp",
      "label": "describeBlock",
      "matches": {
        "desc": true
      }
    },
    "1cc78819-beb8-3453-a568-cb5439d63536": {
      "content": "sub t${1:number}_${2:test_case} :Test(${3:num_of_tests}) {\n\tmy $self = shift;\n\t${0}\n\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsub": true
      }
    },
    "1cc943fa-2d88-366c-aff1-c91c1bde111e": {
      "content": "class ${1:CLASS_NAME}(TemplateView):\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "templateview",
      "matches": {
        "templateview": true
      }
    },
    "1ccb81fb-7a9d-38f5-88fc-2c6b0b27e937": {
      "content": "{${0:}|${1:TARGET}|$0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "string literals {xxx| ... |xxx}",
      "matches": {
        "lit": true
      }
    },
    "1cd187f0-bcd4-3a8b-9643-c7a016525021": {
      "content": "content: close-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      }
    },
    "1cd41658-f0f6-37ca-9660-aef037ff2d9d": {
      "content": "with ${1};${2}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "with ...;...",
      "matches": {
        "with": true
      }
    },
    "1cd5194f-e155-3d4d-b0e2-f861befb6a89": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "1cdae639-03a3-3004-a186-5c3f384c92ba": {
      "content": "DROP TABLE IF EXISTS ${1:tableName};",
      "doc": "Drop table with conditional",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "dropti",
      "matches": {
        "dropti": true
      }
    },
    "1ce2616a-a7ed-3175-80bf-4226a6e13a47": {
      "content": "text-decoration: line-through;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-decoration: line-through",
      "matches": {
        "tdl": true
      }
    },
    "1cf792a3-49dc-37df-bf34-108a309e5484": {
      "content": "def ${1:method_name}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "method definition",
      "matches": {
        "def": true
      }
    },
    "1cfc98a1-d5e6-3509-9136-7630345dd2ab": {
      "content": "public void test${1:Name}() throws Exception {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "1cfdd145-56a6-37f7-942e-aed3dfd86743": {
      "content": "<style scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with CSS scoped",
      "matches": {
        "style_with_CSS_scoped": true
      }
    },
    "1d01798c-e964-3e4e-a1c2-9da2caf727a9": {
      "content": "import { Link } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importRouterLink",
      "matches": {
        "imbrl": true
      }
    },
    "1d07d2fd-45d2-3769-abd9-8c6ce2b894a8": {
      "content": "object ${1:name}${2:(arg)}${3: extends }${4: with} ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      }
    },
    "1d07d5c8-4e5a-3af4-bdaf-e87755cced23": {
      "content": "<hr>",
      "doc": "HTML - Defines a horizontal rule",
      "filetype": "html",
      "grammar": "lsp",
      "label": "hr",
      "matches": {
        "hr": true
      }
    },
    "1d0ab7bf-2dfa-3b88-8fe6-c2672bd565e1": {
      "content": "it \"${1}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      }
    },
    "1d154c00-3f2f-35be-b454-334256a50236": {
      "content": "const ${1:first} = useContext(${2:second})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useContext",
      "matches": {
        "useContextSnippet": true
      }
    },
    "1d15cf0c-cac8-33ed-a6cd-b7e8dfb84890": {
      "content": "%%raw(`\n\t${1://js code}\n`)",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Top level js embed",
      "matches": {
        "tle": true,
        "tlr": true
      }
    },
    "1d19c4d4-d01b-39fa-8d54-e81aa09befa9": {
      "content": "setTimeout(function () {${0}}${2}, ${1:10});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "timeout": true
      }
    },
    "1d24e566-63cf-3eac-83fc-b53c775560c7": {
      "content": "${1} : out std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ost": true
      }
    },
    "1d274c21-ba73-3c5d-a118-fb6a5313468a": {
      "content": "white-space-collapse: keep-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      }
    },
    "1d2f6867-94c3-3f3f-a94e-3b054ea8e31b": {
      "content": "public int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      }
    },
    "1d304a28-7a0a-30a9-9f2e-c638d4af8846": {
      "content": "${1:obj}.focusIn(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusin": true
      }
    },
    "1d32bc05-b830-3b14-88b0-b344994aa954": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      }
    },
    "1d3d5bcd-b0e2-3ede-b85e-352f874e5f85": {
      "content": "if($2){\n\t\n} else {\n\t\n}",
      "doc": "if(){\n\t//code\n} else {\n\t//code\n}\n\nThe keyword else is used in conjunction with the keyword if to describe the alternative execution of a statement. The parentheses enclose the expression that defines the condition. The curly braces after the if statement enclose the statements that are executed if the condition evaluates as true. The curly braces after the else statement enclose the statements that are executed if the condition evaluates as false.\n\nif(i != 0){\n\taFunction();\n} else {\n\tbFunction();\n}\n\nDepending on the condition either the statements in the first curly braces or the statements in the second curly braces are executed.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "ifelse",
      "matches": {
        "ifelse": true
      }
    },
    "1d45888e-4057-37eb-8a0b-119b7661293f": {
      "content": "font: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      }
    },
    "1d4cc065-e5e9-3054-ab6a-545e2a971aed": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0:${VISUAL}}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer recover",
      "matches": {
        "dfr": true
      }
    },
    "1d562b71-8b43-3158-b961-5be29fd4bd83": {
      "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\"\n\"http://www.w3.org/TR/html4/strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docts": true
      }
    },
    "1d627f3a-f1b5-3492-a374-120d938ae44e": {
      "content": "{%- assign ${1:variable} = ${2:value} -%}",
      "doc": "Variable tag: assign, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag assign, whitespaced",
      "matches": {
        "assign-": true
      }
    },
    "1d6486d5-e254-34c3-94b4-5817bc7475e6": {
      "content": "${1:callbacks}.add(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cadd": true
      }
    },
    "1d64a250-afdd-3ac9-ae01-5aef53ec87a4": {
      "content": "<ng-template [ngTemplateOutlet]=\"${1:outlet}\" [ngOutletContext]=\"${2:context}\"></ng-template>",
      "doc": "Angular ng-template",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-template",
      "matches": {
        "a-ng-template": true,
        "angular ng-template": true
      }
    },
    "1d6c8acb-ef49-3225-9d9c-cc6995b08f7b": {
      "content": "\"\"\"${0:doc}\n\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\"": true
      }
    },
    "1d7130cd-c438-32cb-91d4-82174a8cbf4f": {
      "content": "$this->assertFalse(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFalse($a)",
      "matches": {
        "asf": true
      }
    },
    "1d7a37d3-e954-3497-bbea-3b10eef2d389": {
      "content": "int",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Int",
      "matches": {
        "T": true
      }
    },
    "1d84c844-cef8-391c-8d2b-4624089b4c38": {
      "content": "post {\n\tsuccess {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "1d871bc8-0df2-358d-8bbf-c4917270ba83": {
      "content": "do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "1d8b5db7-1a4a-371a-b879-34b89be8a0cd": {
      "content": "background-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backcolor": true,
        "bc": true
      }
    },
    "1d904843-4a62-31fd-993d-69a5f5127266": {
      "content": "<xsl:stylesheet version=\"1.0\"\nxmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">${0}\n</xsl:stylesheet>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet": true
      }
    },
    "1d909712-6863-39e9-bafa-41c2871d4287": {
      "content": "{% templatetag $1 %}",
      "doc": "templatetag tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "templatetag",
      "matches": {
        "templatetag": true
      }
    },
    "1d9241d3-608f-3545-ac4b-eaec1ce8d0dd": {
      "content": "async ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "async",
      "matches": {
        "as": true
      }
    },
    "1d947e7a-0b61-3736-aa60-d57078f409b6": {
      "content": "from django.urls import ${1|path,re_path,include,reverse,reverse_lazy,register_converter|}",
      "doc": "Utility functions for use in URLconfs.",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "urls (≥2.0)",
      "matches": {
        "iurls": true
      }
    },
    "1d966be9-5c88-3ca0-b084-61834d667dd2": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-pure-component-prop-types",
      "matches": {
        "imrpcp": true,
        "react import purecomponent proptypes": true
      }
    },
    "1d977d7a-d0e3-3270-906c-99da6dfce141": {
      "content": "jest.fn($0)",
      "doc": "creates jest.fn()",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-jest-fn",
      "matches": {
        "jest fn": true,
        "jfn": true
      }
    },
    "1d9ecb24-43e3-3285-9095-72202002f190": {
      "content": "${1:mutationName}() {\n\tthis.\\$store.commit('${1:mutationName}', ${2:payload});\n}",
      "doc": "commit to vuex store in methods for mutation",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Commit Vuex Store in Methods",
      "matches": {
        "vcommit": true
      }
    },
    "1d9ecd2e-66da-362a-814d-426bcfdc36e7": {
      "content": "-right->",
      "doc": "Right arrow, format: box -right-> box 2 (it will point right towards the box 2",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Arrow-right",
      "matches": {
        "right": true
      }
    },
    "1dacbf47-806a-3a3b-af15-981c5d9d7309": {
      "content": "type ${1:Alias} = ${2:Type};",
      "doc": "type … = …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "type",
      "matches": {
        "type": true
      }
    },
    "1db242ac-87ba-3abb-95bc-1219ea959ec3": {
      "content": "\\${2}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2}",
      "matches": {
        "2": true
      }
    },
    "1db5e040-bf3f-3155-ad62-bce4cd797707": {
      "content": "place-self ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      }
    },
    "1db6b060-5edc-3ee8-bad3-47d66f6d1902": {
      "content": "<label for=\"${2:$1}\">${1}</label>\n<input type=\"${3:text/submit/hidden/button}\" name=\"${4:$2}\" id=\"${5:$2}\" value=\"${6}\" />",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label:i": true
      }
    },
    "1dbe41d6-31e6-32c8-a2ae-18f7c85310a8": {
      "content": "for (${1:element} <- elements) {\n\t${2:println(element.toString)}\n}",
      "doc": "For loop",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "1dbf6767-4873-3206-b828-4d4f5f91c6fe": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array",
      "matches": {
        "prop-types array": true,
        "pta": true
      }
    },
    "1dc3905c-dd34-358b-99d5-76efbbceb58f": {
      "content": "right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      }
    },
    "1dc3eabe-5307-3100-8ee2-7a40f268b5f8": {
      "content": "/// <summary>\n/// ${0}\n/// </summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "///": true
      }
    },
    "1dcc880b-2b0d-3b80-adf7-e31e09914d8a": {
      "content": "border-style hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      }
    },
    "1dda5c71-dd70-351a-95c8-3cf22dab8009": {
      "content": "${1:FIELDNAME} = forms.TypedChoiceField($2, required=${3:False})",
      "doc": "TypedChoiceField (ftchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ftchoice",
      "matches": {
        "ftchoice": true
      }
    },
    "1dddd276-1d44-3b7f-bb6d-6fcee153f712": {
      "content": "log.Println(\"$1\")",
      "doc": "Snippet for log.Println()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "log.Println",
      "matches": {
        "lp": true
      }
    },
    "1de1d03f-5e0a-3cee-930c-702e77e63cdb": {
      "content": "Logger.debug(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "1de7c181-8098-3c0c-99f9-7e55b8e7a3f2": {
      "content": "const ${1:styles} = StyleSheet.create({\n    ${2:container}: {\n        ${3}\n    },\n});",
      "doc": "Create React Native Styled Components StyleSheet",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "StyleSheet",
      "matches": {
        "rn-stylesheet": true
      }
    },
    "1de90239-5a8f-321b-a79d-f2de7a94f575": {
      "content": "plot(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      }
    },
    "1def3d31-c800-3287-b3ee-2ee7a8f88f17": {
      "content": "foreach(${1:/*elem*/}; ${2:/*range*/})\n{\n\t${VISUAL}$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach (fore)",
      "matches": {
        "fore": true
      }
    },
    "1df32c3d-826e-3eab-a834-8cf92d78ed5a": {
      "content": "# ${1:text}",
      "doc": "Insert heading",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert heading",
      "matches": {
        "heading": true
      }
    },
    "1df8e271-a313-33c6-a301-5662d69ddd7b": {
      "content": "{% case ${1:variable} %}\n\t{% when ${2:condition} %}\n\t\t$3\n\t{% else %}\n\t\t$4\n{% endcase %}",
      "doc": "Control flow tag: case",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag case",
      "matches": {
        "case": true
      }
    },
    "1dffece4-74cd-3e9a-8049-0fc5a7c4b054": {
      "content": "if ${1:condition}\n\t${2:block}\nelseif ${3:condition}\n\t${4:block}\nelse\n\t${5:block}\nend",
      "doc": "Code snippet for if-elseif-else statement.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "if/elseif/else",
      "matches": {
        "ifelseif": true
      }
    },
    "1e00bcea-ea98-3656-8370-083955d13808": {
      "content": "title $0",
      "doc": "The document title",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Title",
      "matches": {
        "ti": true
      }
    },
    "1e06b160-9d35-3c06-8990-8666c6a30acf": {
      "content": "${1:obj}.pushStack(${2:elements})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushstack": true
      }
    },
    "1e07e229-c553-378d-bc75-442ea799c1cb": {
      "content": "@else",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@else directive",
      "matches": {
        "else": true
      }
    },
    "1e084020-a8be-3c8f-992c-28e6112a747a": {
      "content": "throw new ${1:Exception}(\"${2:Error Processing Request}\");",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "throw new Exception()",
      "matches": {
        "te": true
      }
    },
    "1e0f0a06-62c0-3581-8241-e51414823bb8": {
      "content": "${1:auto} ${2:var} = ${0:1};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "1e106fd6-a79d-3d9d-b74a-e30f38265b5f": {
      "content": "cattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "cattr_accessor",
      "matches": {
        "crw": true
      }
    },
    "1e125843-c80a-36e9-8f33-69f3f5784cbf": {
      "content": "text-decoration: ${1|none,underline,overline,line-through|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-decoration",
      "matches": {
        "td": true
      }
    },
    "1e19fd92-0f2c-30fd-a17d-3c3a4c829103": {
      "content": "return ${1} do\n\t${0}\nend return;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "extended return",
      "matches": {
        "return": true
      }
    },
    "1e1d47cf-ae95-381b-b07f-76c78d80defa": {
      "content": "${1:obj}.wrap('${2:&lt;div class=\"extra-wrapper\"&gt;&lt;/div&gt;}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrap": true
      }
    },
    "1e1df165-2169-3582-8e38-47bcb38ab70c": {
      "content": "overflow-x: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      }
    },
    "1e1df54e-1e23-3806-9a52-24bdbcfb0be6": {
      "content": "@data\n$0\n@end",
      "doc": "data tags",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "data",
      "matches": {
        "data": true
      }
    },
    "1e2577e3-3047-388d-aae7-fdf2fcb25189": {
      "content": "grid-column-end: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      }
    },
    "1e258836-9e69-3ad0-b6f8-8c6a09ad4008": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "1e27b569-5070-3035-a4cb-6113cfa89151": {
      "content": "actor $0",
      "doc": "An actor in the system",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Actor",
      "matches": {
        "act": true
      }
    },
    "1e27bc48-c18e-3538-8215-6b987a5125d2": {
      "content": "<area shape=\"${1:rect}\" coords=\"${2}\" href=\"${3}\" alt=\"${4}\">\narea+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area+": true
      }
    },
    "1e27c9e0-74a2-3baa-92f7-b3db6417d6fa": {
      "content": "`${1}` $0",
      "doc": "Insert code",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert code",
      "matches": {
        "code": true
      }
    },
    "1e2a47f0-4369-3275-b75e-dd5036d90793": {
      "content": "cy.scrollTo('${1:position}');",
      "doc": "Scroll to a specified position. Valid positions are topLeft, top, topRight, left, center, right, bottomLeft, bottom, and bottomRight.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-scroll-to-position",
      "matches": {
        "cypress scroll to position": true
      }
    },
    "1e349249-c469-3c59-9585-6badbcdb5fce": {
      "content": "for ${1:item} <- ${2:items}, into: ${3} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "1e3a1e0b-f9f4-37f8-a319-29ab398e2b48": {
      "content": "Page Should Contain Link    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Link",
      "matches": {
        "pscl": true
      }
    },
    "1e3ba854-8f4c-3718-bab4-1d15ae5bccc5": {
      "content": "{-# INLINE ${0:name} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inline": true
      }
    },
    "1e3f0b86-81c2-3fe4-8bd4-2b2a4a3df902": {
      "content": "<input type=\"password\" name=\"${1:password}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputpassword": true
      }
    },
    "1e5b1a2c-a505-30b3-bfd8-6e0948c1c747": {
      "content": "PropTypes.node.isRequired",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      }
    },
    "1e5da2a9-a4b7-3c57-a4dd-ed8d29286e99": {
      "content": "rename_column :${1:table_name}, :${2:old_column_name}, :${0:new_column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrnc": true
      }
    },
    "1e5f785d-6cf6-3bca-a99a-2063f7d1088f": {
      "content": "list-style-type: ${1:cjk-ideographic/hiragana/katakana/hiragana-iroha/katakana-iroha};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: asian (list)",
      "matches": {
        "list": true
      }
    },
    "1e61ebfc-e791-3fae-8e4b-55ab1781762e": {
      "content": "sub ${1:function_name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "1e6946fa-df7d-3ce7-b7bc-6981aa504908": {
      "content": "${1:action} unless ${0:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      }
    },
    "1e694781-b42f-3ece-be2e-5cea0898287e": {
      "content": "<script type=\"${1}\" id=\"${2}\">\n\t${0}\n</script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptt": true
      }
    },
    "1e6d4271-8ad5-3de7-a98d-323e5fc93bc3": {
      "content": "{% endspaceless %}$0",
      "doc": "endspaceless",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endspaceless",
      "matches": {
        "endspaceless": true
      }
    },
    "1e6de10d-0438-3f39-aa75-d081dab2bebf": {
      "content": "-moz-border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      }
    },
    "1e7a0aa7-af17-3515-8a03-8fbffe43dfed": {
      "content": "(if ${1:test-expr}\n\t${2:then-expr}\n\t${0:else-expr})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "1e7d0a94-2a4f-31b1-a6dc-7aad8ce4c452": {
      "content": "augroup ${1:AU_NAME}\n\tautocmd!\n\t${0:${VISUAL}}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroupvisual ... autocmd block with visual placeholder",
      "matches": {
        "auv": true
      }
    },
    "1e8ad1bb-de4c-319b-9fb2-db15718b0092": {
      "content": "if ${1:TARGET} then ${2} else ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "if..then..else - oneline",
      "matches": {
        "if": true
      }
    },
    "1e8d57d6-6b6c-3ba9-8f7d-7048a0e46d04": {
      "content": "protected int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi|": true
      }
    },
    "1e8fe677-6126-3869-a508-a1e9263b09fa": {
      "content": "static ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      }
    },
    "1e92d9b9-c2c7-3c4d-be86-152c93e71eee": {
      "content": "a_ply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a_": true
      }
    },
    "1e95c86a-0b8b-3bf6-821a-5d35facffc48": {
      "content": "<tr>$1</tr>$2",
      "doc": "HTML - Defines a table row",
      "filetype": "html",
      "grammar": "lsp",
      "label": "tr",
      "matches": {
        "tr": true
      }
    },
    "1e963f81-df83-32e6-aae5-010bebab3ab4": {
      "content": "class ${1:ModelName}(models.Model):\n\t\"\"\"${2:docstring}\"\"\"\n\t${3}\n\n\tclass Meta:\n\t\t${4}\n\n\tdef __unicode__(self):\n\t\t${5}\n\n\tdef save(self, *args, **kwargs):\n\t\t${6}\n\n\t@models.permalink\n\tdef get_absolute_url(self):\n\t\treturn ('${7:view_or_url_name}' ${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "model": true
      }
    },
    "1ea08907-315f-3269-b94b-210caef84044": {
      "content": "width: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "width",
      "matches": {
        "wid": true
      }
    },
    "1ea355c2-9bb9-34ee-b43c-484e55250c2c": {
      "content": "$.type(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$type": true
      }
    },
    "1eb04be4-b844-3355-b7f7-cab9c4636526": {
      "content": "import { Text, StyleSheet, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <View>\n        <Text>${1:first}</Text>\n      </View>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeComponentWithStyles",
      "matches": {
        "rncs": true
      }
    },
    "1eb88ace-b46c-31c9-b59f-7b95cf68ee4f": {
      "content": "[${1:ref number}] ${0}\n\nfn$1. ${2:footnote}",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "1ebe12eb-54e8-364a-9206-f3859da1aa5d": {
      "content": "%raw(\"${1://js expression}\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "expression level js embed",
      "matches": {
        "ele": true,
        "elr": true,
        "exe": true
      }
    },
    "1ec20a64-b622-31b0-8f27-07f73dde503b": {
      "content": "private",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "1ecae972-77bf-3f1d-a6fb-53fba3e09c8c": {
      "content": "return ${1:/*value to return*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "return (ret)",
      "matches": {
        "ret": true
      }
    },
    "1ed57510-3754-3003-82f3-acc7c61103b9": {
      "content": "page-break-after left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      }
    },
    "1ed8b69b-f290-3c75-ac1c-ff0c1fe7daa6": {
      "content": "v-once",
      "doc": "Does not expect expression",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-once",
      "matches": {
        "vOnce": true
      }
    },
    "1edc8b85-d7f3-31f0-97d2-da8a4bc308aa": {
      "content": "<table border=\"${1}\">\n${2:TARGET}\n</table>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table": true
      }
    },
    "1ef1862e-b6d2-3bd6-ac0c-0654b8d469b3": {
      "content": "with timeout ${1:#:number} seconds\n\t${0:TARGET}\nend timeout",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "timeout": true
      }
    },
    "1ef79e10-97b1-3112-a4dd-98f1cac8751b": {
      "content": "_.isNumber(${value})",
      "doc": "_.isNumber(3);\n// => true\n\n_.isNumber(Number.MIN_VALUE);\n// => true\n\n_.isNumber(Infinity);\n// => true\n\n_.isNumber('3');\n// => false\n\nChecks if `value` is classified as a `Number` primitive or object.\n\n**Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\nclassified as numbers, use the `_.isFinite` method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnumber",
      "matches": {
        "lodash isnumber": true
      }
    },
    "1efc487a-00e1-3959-83dd-c911c1edca2f": {
      "content": "grid-row-start: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      }
    },
    "1efd0aa2-45f1-3ede-9c91-fa02281c0c4a": {
      "content": "lang=\"${1:en}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lang": true
      }
    },
    "1f01f484-d75b-3be8-935e-5ee23098caa4": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      }
    },
    "1f026e4b-adf6-38c5-ac47-83b190709d8d": {
      "content": "visibility: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      }
    },
    "1f0eb7ac-5ef4-3555-8e22-23d30f92a35e": {
      "content": "case ${1}:\n\t${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "1f0eca80-8588-3f77-81e5-5211c417d4b6": {
      "content": "process.stderr",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stderr": true
      }
    },
    "1f12f8e9-611b-3359-8988-23b3371b7827": {
      "content": "${1:FIELDNAME} = models.DateTimeField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datetime": true
      }
    },
    "1f1a76f2-715e-35dc-9379-8bb0269d931c": {
      "content": "module ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "module NAME {...}",
      "matches": {
        "module": true
      }
    },
    "1f1d6daf-bbfe-38ee-9eeb-e7d172b81d1e": {
      "content": "font-weight: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      }
    },
    "1f1dcc42-e76b-37ec-a29b-b5569ad77fe5": {
      "content": "(try\n\t${1}\n\t(catch ${2:Exception} e ${3:nil}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "(try ... (catch ...",
      "matches": {
        "try": true
      }
    },
    "1f24bf22-d76c-3b1e-979d-fc996720c47a": {
      "content": "direction: ${1:ltr|rtl};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "direction: ltr|rtl (direction)",
      "matches": {
        "direction": true
      }
    },
    "1f26a959-66f7-3575-8eff-4a7d4cc8de48": {
      "content": "else {\n   ${1:selected}\n}",
      "doc": "Code snippet for 'else' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "1f2feb42-8d87-378d-ba65-91d3d57cce3e": {
      "content": "\\\\${1:x} -> ${0:expression}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\": true
      }
    },
    "1f30d352-01f9-30eb-ba89-354b2ad3b18b": {
      "content": "<pre>\n\t{{ dump($1) }}\n</pre>",
      "doc": "dump",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "dump",
      "matches": {
        "dump": true
      }
    },
    "1f35c278-b778-3e69-815b-f0bcce228b0b": {
      "content": "exec sql include sqlca end-exec.",
      "doc": "exec sql include",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "exec-sql",
      "matches": {
        "exec": true
      }
    },
    "1f389acc-3139-381a-8954-80624481e328": {
      "content": "__LINE__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__LINE__",
      "matches": {
        "line": true
      }
    },
    "1f3d94d0-0546-39ce-a417-d90146a530b8": {
      "content": "{\n\t\"type\": \"richtext\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": \"<p>$3</p>\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema richtext",
      "matches": {
        "_richtext": true
      }
    },
    "1f3ee76b-2b00-3037-96d0-17df26a91d27": {
      "content": "border-top-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      }
    },
    "1f407164-159a-3c77-848b-5dc2d1c29f29": {
      "content": "export ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expt": true
      }
    },
    "1f49be5a-93e7-32d6-9144-13623348c238": {
      "content": "expect(${1:target})$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect (coffee)",
      "matches": {
        "ex": true
      }
    },
    "1f50dc05-c688-33d2-8e9d-5774edd7f24b": {
      "content": "PropTypes.symbol.isRequired,",
      "doc": "Symbol prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeSymbolRequired",
      "matches": {
        "ptsmr": true
      }
    },
    "1f5745d4-f907-3cae-b6c8-97c90d6417e5": {
      "content": "each { |${1:e}| $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert each with inline block",
      "matches": {
        "ea": true
      }
    },
    "1f57ca5a-61af-3479-b128-021783b0c156": {
      "content": "month = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "month": true
      }
    },
    "1f5b58b4-3866-31a2-9366-e93f5584abce": {
      "content": "border-top-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-color": true,
        "btc": true
      }
    },
    "1f61fd84-32e1-3fd9-b317-d83656567f5d": {
      "content": "console.trace();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "console-trace": true,
        "ct": true
      }
    },
    "1f63435d-40ac-3a62-af91-352ba0a731b0": {
      "content": "{% set ${1:name} = ${2:'value'} %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "set",
      "matches": {
        "set": true
      }
    },
    "1f6a4beb-2081-310c-90b0-8de12966c1e7": {
      "content": "overflow hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      }
    },
    "1f706b87-a507-360d-adab-e10611dcced2": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "import ( ... )",
      "matches": {
        "import": true
      }
    },
    "1f752dd3-2846-3434-982b-f7b544f34eab": {
      "content": "border-bottom-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      }
    },
    "1f775ef8-4979-3376-aac6-3fbe29e7998d": {
      "content": "describe('${1:description}', function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "Describe (js)",
      "matches": {
        "des": true
      }
    },
    "1f795ed8-ca5d-3e45-bbeb-bb06404530be": {
      "content": "<summary>${0:#:description}</summary>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<summary></summary>",
      "matches": {
        "summary": true
      }
    },
    "1f7b54f0-e939-3ac2-bfbf-430d797aa704": {
      "content": "overflow-y: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      }
    },
    "1f7f3af9-c20c-3d00-873d-02f51794178c": {
      "content": "case $1 do\n  $2 -> \n    $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "1f845d60-cd92-3ad2-acc9-fa357500a2b3": {
      "content": ".. image:: ${1:#:path}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      }
    },
    "1f874694-4ff6-3cd3-a4ac-bd70660394b0": {
      "content": "${1:callbacks}.remove(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Crem": true
      }
    },
    "1f8751ee-3210-3663-9dc4-5204afe00a76": {
      "content": "background-color: transparent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      }
    },
    "1f8b23a1-d7e1-3f78-b790-14283964aae1": {
      "content": "= number_to_currency(${1})",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ntc": true
      }
    },
    "1f8b53b5-b501-34a8-a0ca-8de7cf2efcd0": {
      "content": "{% ssi $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      }
    },
    "1f8b97be-fb14-391d-b51a-b412aa259499": {
      "content": "using ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "load a package",
      "matches": {
        "use": true
      }
    },
    "1f8df199-d562-36d9-a4ab-eea7191a7540": {
      "content": "border-top-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      }
    },
    "1f921f75-5694-3317-8e90-b79d85c67e84": {
      "content": "white-space-collapse: loose;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      }
    },
    "1f93b442-7770-3e2e-a4ea-7d5d7b9ea0dc": {
      "content": "word-break normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      }
    },
    "1f942124-347d-3b42-99dc-9938b1710099": {
      "content": "display table-column-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      }
    },
    "1fa4551c-6269-328c-a603-f344c3b61d4d": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "1fa718db-7d00-3972-ba93-6f8508b00cfc": {
      "content": "<include file='${1:#:filename}' path='${2:#:tabpath}[@${3:#:name}=\"${4:#:id}\"]'/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<include file='' path=''/>",
      "matches": {
        "include": true
      }
    },
    "1fb03acd-fb19-3c57-9dc7-eacf989e3ddc": {
      "content": "<%= link_to '${1:link text...}' do %>\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      }
    },
    "1fba61f5-2697-3246-8dd3-0041208680cb": {
      "content": "split(${1:hay stack}, \"${2:patten}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      }
    },
    "1fbb7bce-14c6-33b0-aef4-a61630915f76": {
      "content": "page-break-inside: avoid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      }
    },
    "1fbe94bc-be88-3e86-b046-2200d3943783": {
      "content": "chapter = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chapter": true
      }
    },
    "1fc4dd26-4da8-358f-9c54-08005bdbf6d7": {
      "content": "finally {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "finally {}",
      "matches": {
        "fin": true,
        "finally": true
      }
    },
    "1fc50464-5086-3d9d-ba48-362cf923fd52": {
      "content": "panic(\"${0}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic(\"...\")",
      "matches": {
        "panic": true,
        "pn": true
      }
    },
    "1fc8cb0d-1d33-362b-bf9f-7719b769f656": {
      "content": "| strip_html }}",
      "doc": "String filter: strip html",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter strip html",
      "matches": {
        "strip_html": true
      }
    },
    "1fd05598-b3a1-3e12-a30b-f09b04905841": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      }
    },
    "1fd239f5-f604-3eae-926e-8d8a0745dbfa": {
      "content": "font-emphasize-style: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      }
    },
    "1fda9ebc-c063-3060-96ad-9477905b398f": {
      "content": "max(${1:$2, $3})$0",
      "doc": "max",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "max",
      "matches": {
        "max": true
      }
    },
    "1fdfc066-b56a-3d00-b768-1725db976e26": {
      "content": "border-length: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      }
    },
    "1fe47842-5179-3523-b27e-15172a3a05b0": {
      "content": "=head1 NAME\n\n${1:ClassName} - ${2:ShortDesc}\n\n=head1 SYNOPSIS\n\n  use $1;\n\n  ${3:# synopsis...}\n\n=head1 DESCRIPTION\n\n${0:# longer description...}\n\n\n=head1 INTERFACE\n\n\n=head1 DEPENDENCIES\n\n\n=head1 SEE ALSO",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppod": true
      }
    },
    "1fec0a1f-40f6-3056-8545-3f01cb5cbda0": {
      "content": "<nuxt/>",
      "doc": "This component is used only in layouts to display the page components.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "nuxt",
      "matches": {
        "nuxt": true
      }
    },
    "1fec1b9d-2b5e-3e0a-968f-6e894cdf8a5f": {
      "content": "override def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovdef": true
      }
    },
    "1ff2fcbd-4f29-3813-82df-86c335f83dfd": {
      "content": "border-left-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-width: size (border)",
      "matches": {
        "border": true
      }
    },
    "1ff5fe89-152d-3b09-9501-55cf6eb79dc3": {
      "content": "align-content: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      }
    },
    "1ffa5c56-cc1b-3eba-b472-b4dbb35e3f5e": {
      "content": "float: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "float: none",
      "matches": {
        "fln": true
      }
    },
    "1ffb9851-970f-3f47-b6c6-4bff60d4b3cb": {
      "content": "generic\n\ttype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "generic type",
      "matches": {
        "gen": true
      }
    },
    "1ffc8047-2fab-3b7b-81ae-0e500b5bcaa7": {
      "content": "border-bottom-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      }
    },
    "1ffd158e-f0d7-3c02-a074-ecb1d6863833": {
      "content": "^${1}^${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "^upper^",
      "matches": {
        "upper": true
      }
    },
    "1ffe0402-d7b5-3c41-88b1-ae1508289cbb": {
      "content": "align-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      }
    },
    "1fff5d03-6330-392a-a58b-b5564acd2c59": {
      "content": "##### ${0}",
      "doc": "Add header level 5",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 5",
      "matches": {
        "h5": true
      }
    },
    "2003686f-4ae5-3631-b043-70efa8f6af2c": {
      "content": "text-replace none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      }
    },
    "2006b09a-6dc4-36f9-85ba-0a42efacd3a2": {
      "content": "import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n\treturn {\n\n\t};\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n)(${1:${TM_FILENAME_BASE}});",
      "doc": "Creates a React component class connected to redux",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactReduxComponent",
      "matches": {
        "rrc": true
      }
    },
    "200f91b8-cf4a-3346-84b5-771fd49f6ab4": {
      "content": "{% endnamespace %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endnamespace",
      "matches": {
        "endnamespace": true
      }
    },
    "2010037e-7473-3c78-b7b4-8d88ba86d270": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n} finally {\n\t\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "try/catch/finally",
      "matches": {
        "tcf": true
      }
    },
    "2019e7a0-0baf-3993-8d40-5343daa7ba98": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      }
    },
    "201bd74d-3d0f-350a-98fa-1b1650b18d03": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      }
    },
    "20252146-d550-3d52-92b7-5bb4d0b97b85": {
      "content": "try\n{\n    $1\n}\ncatch (${2:System.Exception})\n{\n    $0\n    throw;\n}",
      "doc": "Try catch",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Try catch",
      "matches": {
        "try": true
      }
    },
    "20293fb2-6061-36ff-9ad7-4358755349e0": {
      "content": "redirect_to(${2:${10:model}s_path})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (path plural)",
      "matches": {
        "repp": true
      }
    },
    "20298637-cd12-3dfe-8eb5-d738bc1bf1e7": {
      "content": "_.isNative(${value})",
      "doc": "_.isNative(Array.prototype.push);\n// => true\n\n_.isNative(_);\n// => false\n\nChecks if `value` is a pristine native function.\n\n**Note:** This method can't reliably detect native functions in the presence\nof the core-js package because core-js circumvents this kind of detection.\nDespite multiple requests, the core-js maintainer has made it clear: any\nattempt to fix the detection will be obstructed. As a result, we're left\nwith little choice but to throw an error. Unfortunately, this also affects\npackages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\nwhich rely on core-js.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnative",
      "matches": {
        "lodash isnative": true
      }
    },
    "2031f4c5-8797-3523-b47b-51b2232d13dd": {
      "content": "render text:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :text",
      "matches": {
        "rt": true
      }
    },
    "203a00b6-6dbe-3575-9be5-03bc25408bf8": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl": true
      }
    },
    "2048bb75-3046-33f2-ab65-28c91c7069a3": {
      "content": "aspectRatio: '${1}',",
      "doc": "aspectRatio",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "aspectRatio",
      "matches": {
        "as": true
      }
    },
    "2048f68d-d7e4-3b71-8439-371c396168b4": {
      "content": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable} if ${6:condition}}$0",
      "doc": "Handy and faster way to create dictories based on existing dictionaries, with conditional if statement.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Dictionary comprehension if filter",
      "matches": {
        "dci": true
      }
    },
    "20579b4d-2dc1-3d4f-8d41-8a851ce4d9ca": {
      "content": "if ($1) {\n\t$0\n}",
      "doc": "Code snippet for if statement",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "205a43d9-7b33-3301-94bf-0dfb57e923c2": {
      "content": "FS\nFUNCTION SQRT(${1:number})$0",
      "doc": "aproximation of the square root of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-SQRT",
      "matches": {
        "FUNCTION SQRT": true
      }
    },
    "205e0026-ac1b-3e96-9a48-e4a5bb3441fc": {
      "content": "printf(\"${1:} = %${2}\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prx": true
      }
    },
    "205ffaa2-c909-3df9-b794-f12bd941454a": {
      "content": "const_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "const_cast<>()",
      "matches": {
        "const_cast": true
      }
    },
    "2064b788-793e-3fd6-afef-6ddb81c46480": {
      "content": "#!/usr/bin/env python\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python",
      "matches": {
        "#!": true
      }
    },
    "20709878-9a63-352a-8e65-176b601515a1": {
      "content": "allow(${1:object}).to $0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert allow",
      "matches": {
        "allow": true
      }
    },
    "207ca27a-fb31-3ba9-8fb0-2d6b15952e12": {
      "content": "baremodule ${1:name}\n\t$0\nend",
      "doc": "Code snippet for module block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "baremodule",
      "matches": {
        "bare": true,
        "baremodule": true,
        "bmod": true
      }
    },
    "20836b78-427c-3ca0-bbba-667078b622be": {
      "content": "for(int ${2:i} = 0; $2 < ${1:count}; $2${3:++})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "208484bf-178c-3835-992b-bd4610f979ad": {
      "content": "foreach_reverse(${1:i}, ${2:elem}; ${3:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "feri": true
      }
    },
    "208a6b44-2614-3ad8-9227-e689ce9d60d6": {
      "content": "set ${1:setting} = ${0:value}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "208b8979-f40e-3d17-91a3-e50a08ce6895": {
      "content": "fun (${1:Parameters}) -> ${2:body} end",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "208f8a92-d7bd-3769-8480-1e9a6385ffa5": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ife": true
      }
    },
    "2095f82b-feb5-3f09-804b-a925db5e8c38": {
      "content": "rgb(${1:255}, ${2:255}, ${3:255})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color rgb",
      "matches": {
        "rgb": true
      }
    },
    "2098fb79-cf10-3e13-a182-4297f84e1124": {
      "content": "justify-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      }
    },
    "209f80bc-6cb4-3cdd-8a6a-cc324f7cbb7b": {
      "content": "${1:public} static ${2:void} ${3:MyMethod}(${4})\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Static method",
      "matches": {
        "mths": true
      }
    },
    "20a31753-2626-3b15-ad3b-a8414aea59cb": {
      "content": "${1:document}.getElementById('${0:element ID}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "by#": true
      }
    },
    "20a52726-24df-3456-8fb6-d724d7f6c4c1": {
      "content": "await Promise.all(${1:array}.map(async (${2:value}) => {\n\t${0}\n}))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "await Promise.all map",
      "matches": {
        "apm": true
      }
    },
    "20a7c06f-da3c-3ac1-b266-37a3d0d7be98": {
      "content": "before_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbd": true
      }
    },
    "20aa10bb-c948-3c24-adcb-9d27b5c3a3b7": {
      "content": "elsif ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "20b2f248-7cdf-3b96-8acf-dda471d8e3d7": {
      "content": "public bool ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+|": true
      }
    },
    "20b67d8a-41d3-31e0-808a-05e941a07eb8": {
      "content": "include_bytes!(\"${1}\")",
      "doc": "include_bytes!(\"…\")",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "include_bytes",
      "matches": {
        "include_bytes": true
      }
    },
    "20c35d29-2423-3a70-b4c3-5b76436b5821": {
      "content": "enter-active-class=\"$1\"$0",
      "doc": "enter-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-active-class",
      "matches": {
        "enteractiveclass": true,
        "vue enter-active-class": true
      }
    },
    "20c5f63f-d361-37c1-8402-a9dfc113e794": {
      "content": "border-break: close",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      }
    },
    "20c7a3fb-d8dc-3b31-a81a-87bbcba9f655": {
      "content": "{@literal ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{literal": true
      }
    },
    "20ce6a8c-996f-3512-8e18-e12538f811da": {
      "content": "each do |${1:#:variable}|\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "20d17b68-91fe-3a42-80b5-7290cbc43472": {
      "content": "${1:obj}.dequeue(${2:'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deq": true
      }
    },
    "20d1fc48-0925-3010-9413-08fd3064f96b": {
      "content": "lmObj <- lm(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, na.action = ${6:na.action})\nsummary(lmObj)",
      "doc": "Fit a linear model",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Linear model",
      "matches": {
        "lm": true
      }
    },
    "20d2df30-716a-375d-b76b-6821b557463b": {
      "content": "# Client App\nFROM johnpapa/angular-cli as client-app\nLABEL authors=\"${1:John Papa}\"\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --silent\nCOPY . .\nRUN ng build --prod\n\n# Node server\nFROM ${2:node:12-alpine} as node-server\nWORKDIR /usr/src/app\nCOPY [\"package.json\", \"npm-shrinkwrap.json*\", \"./\"]\nRUN npm install --production --silent && mv node_modules ../\nCOPY ${3:server.js} .\nCOPY ${4:/server} /usr/src/app/server\n\n# Final image\nFROM ${2:node:12-alpine}\nWORKDIR /usr/src/app\nCOPY --from=node-server /usr/src /usr/src\nCOPY --from=client-app /usr/src/app/dist ./\nEXPOSE ${5:3000}\n# CMD [\"node\", \"server.js\"]\nCMD [\"npm\", \"start\"]\n$0",
      "doc": "Multi-stage Node and Angular Dockerfile",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "multi-stage-node-and-angular-dockerfile",
      "matches": {
        "angular multi-stage node and dockerfile": true,
        "docker-angular-node-multi-stage": true
      }
    },
    "20d81b90-109f-3daf-978b-fa180b8c7c63": {
      "content": "<script>\n\t$1\n</script>",
      "doc": "HTML - Defines a script",
      "filetype": "html",
      "grammar": "lsp",
      "label": "script",
      "matches": {
        "script": true
      }
    },
    "20e2a3e3-cd08-36f7-8e7f-2323df16bafd": {
      "content": "<xsl:apply-templates select=\"${1:*}\">\n\t<xsl:sort select=\"${2:node}\" order=\"${3:ascending}\" data-type=\"${4:text}\">${5}\n</xsl:apply-templates>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "sort-by",
      "matches": {
        "apply-templates": true
      }
    },
    "20e9f588-1f28-3dc3-9d4d-99553c6daad1": {
      "content": "test ${1:test_name} => { description => '${2:Description of test.}'} => sub {\n\tmy ($self) = @_;\n\t${0}\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trsub": true
      }
    },
    "20eb3fb3-faa3-3495-9ecf-a4523b350c8d": {
      "content": "enum ${1:MyEnum} {\n\t$0\n};",
      "doc": "Code snippet for enum",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "20ef0401-40b1-323b-8c8f-e0c12881b3e5": {
      "content": "word-break loose",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      }
    },
    "20f7c730-5e3e-3fb7-9e15-2a31be08b948": {
      "content": "margin-right auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      }
    },
    "210786a9-575e-3363-88c9-9b6f4692d93b": {
      "content": "foreach ${1:my $${2:x}} (@${3:array}) {\n\t${4:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "foreach",
      "matches": {
        "fore": true
      }
    },
    "210a6bc2-e756-372c-89cb-4b6eb7bfe604": {
      "content": "| jsonify }}'",
      "doc": "Array filter: jsonify",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter jsonify",
      "matches": {
        "json": true
      }
    },
    "210d2b64-016c-3abc-adf7-80a6f1d71fd8": {
      "content": "require [\"${1:#dependencies1}\"], (${2:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqjs": true
      }
    },
    "2112ff74-d142-3783-9ffb-7f84ea232f0b": {
      "content": "| ${1:Column1}  |\n|-------------- |\n| ${2:Item1}    |\n| ${3:Item2}    |\n${0}",
      "doc": "Insert table with 3 rows and 1 column. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 3x1 table",
      "matches": {
        "3x1table": true
      }
    },
    "21131ff3-0a00-3862-8bdb-015a5dd9f0f5": {
      "content": "onErrorCaptured(() => {${1}})",
      "doc": "Vue onErrorCaptured Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onErrorCaptured",
      "matches": {
        "v3onerrorcaptured": true
      }
    },
    "21143df1-0736-359a-bfc2-6f2710de1e96": {
      "content": "Plugin '${0}'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "Vundle.vim Plugin definition",
      "matches": {
        "bun": true
      }
    },
    "21147b39-c2f1-300e-a07b-4e7bb7ba9006": {
      "content": "EVALUATE $1\n    WHEN $2\n       $0\n    WHEN OTHER\n       CONTINUE\nEND-EVALUATE",
      "doc": "EVALUATE",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "EVALUATE",
      "matches": {
        "EVALUATE": true
      }
    },
    "2114b647-9953-3140-ae22-bc86b187c66e": {
      "content": "if ${1:condition}; then\n\t${0:${VISUAL}}\nfi",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "211e4766-8f79-3d59-a6fe-861cc117404d": {
      "content": "FUNCTION LOCALE-TIME-FROM-SECONDS(${1:integer-time},${2:locale-optional})$0",
      "doc": "format integer-time (internal-format) according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOCALE-TIME-FROM-SECONDS",
      "matches": {
        "FUNCTION LOCALE-TIME-FROM-SECONDS": true
      }
    },
    "211f605d-5e42-3df2-8169-cffb26e34130": {
      "content": "import { ${1} } from '${2}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import { member } from 'xyz'",
      "matches": {
        "imm": true
      }
    },
    "2121f91e-94ef-3c29-9d56-fc35bf5b2404": {
      "content": "subtype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "subtype",
      "matches": {
        "subty": true
      }
    },
    "21258602-3ef9-340d-aafa-ed790c633a4a": {
      "content": "this.state.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tst": true
      }
    },
    "21299d8a-0590-34ff-b89b-e4231e09d90f": {
      "content": "{{- range $key, $value := .Values.tcp }}\n  - name: \"{{ $key }}-tcp\"\n\tport: {{ $key }}\n\tprotocol: TCP\n\ttargetPort: \"{{ $key }}-tcp\"\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portTCP_spec": true
      }
    },
    "212e3374-abae-3535-851d-778d25c2cab7": {
      "content": "const [state, dispatch] = useReducer(${1:first}, ${2:second}, ${3:third})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useReducer",
      "matches": {
        "useReducerSnippet": true
      }
    },
    "2139995f-4557-3e19-8397-d96051175128": {
      "content": "case \"$${1:{name\\}}\" in\n\t${2:pattern*})\n\t\t${0}\n\t\t;;\n\t*)\n\t\t${3:echo \"$$1 Didn't match anything\"}\nesac",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "213b6eec-fe23-3058-91c1-262c38ac108d": {
      "content": "describe('${1:description}', () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "describe",
      "matches": {
        "desc": true
      }
    },
    "213ed233-09b3-3595-8806-a8ff289b0dca": {
      "content": "(cond\n  ((${1}) ${2})\n  (${0:else}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      }
    },
    "21458c4c-76cb-311a-8afa-13bec2f27c5d": {
      "content": "private static ${1:Type} ${2:name}(${3}) {\n\t$0\n}",
      "doc": "private static method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Private static method",
      "matches": {
        "private_static_method": true
      }
    },
    "21469489-8e5a-334c-89a9-67dee5afb4f8": {
      "content": "top: ${1},",
      "doc": "top",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "top",
      "matches": {
        "top": true
      }
    },
    "214e31e4-53f5-34a3-8456-f5e26b07947e": {
      "content": "get_digit:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      }
    },
    "214e77fb-fe45-3ede-a98a-14724de516d2": {
      "content": "protected ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts protected method",
      "matches": {
        "tpromet": true
      }
    },
    "21579814-706b-378e-b9d9-da4deaa23bcc": {
      "content": "text-justify inter-cluster",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      }
    },
    "215a3ccf-6cb0-38bd-bab4-2a4c9087b642": {
      "content": "{% case \"${1}\" %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch case",
      "matches": {
        "case": true
      }
    },
    "21663b8a-d4d8-3079-8fbf-91c958ed7c64": {
      "content": "=>",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "21665ff7-1a52-3b44-b5e1-efc04d34ab5a": {
      "content": "FUNCTION ORD-MIN(${1:char},${2:...})$0",
      "doc": "min. ordinal position in the program character set corresponding to list of chars",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ORD-MIN",
      "matches": {
        "FUNCTION ORD-MIN": true
      }
    },
    "216a2639-db4f-3050-a13d-67073861d5c1": {
      "content": "#region ${1:#:name}\n    ${0:TARGET}\n#endregion",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reg": true,
        "region": true
      }
    },
    "216c3510-cd2f-3ad2-afd9-cfa11fdca75d": {
      "content": ":after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      }
    },
    "216cf2fe-0144-346c-80e8-247c1209cbec": {
      "content": "test('should $1', () => {\n  $0\n})",
      "doc": "Testing `test` block",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "testBlock",
      "matches": {
        "test": true
      }
    },
    "21722a7b-1888-38d7-8157-785c3e6bd06d": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked immediately before rendering when new props or state are being received. [DEPRECATION NOTE]: This method is deprecated in React 16.3",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUpdate",
      "matches": {
        "cwup": true
      }
    },
    "217b7b2c-b624-367e-a375-7434e5f9bfd2": {
      "content": "enum ${1:#:name} {\n    ${0:TARGET}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      }
    },
    "217b96b7-ae7e-3db3-bb66-b27f2f2c8f16": {
      "content": "render layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rl": true
      }
    },
    "217c0cfc-8eae-3823-8eb7-21ec87d342a1": {
      "content": "import { GraphQLClient } from 'graphql-request';",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-import-client",
      "matches": {
        "graphql-request import client": true
      }
    },
    "217c1ff2-ff5f-3627-bd05-a52c4db6d2f3": {
      "content": "HashMap[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmap": true
      }
    },
    "217cac66-70d5-3080-a3b1-f240139a1f9a": {
      "content": "internal ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&-": true
      }
    },
    "2185509b-be87-3c12-943d-ff2b45ab1950": {
      "content": "<% $1 %> $2",
      "doc": "EJS No Output",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS No Output",
      "matches": {
        "ejs": true
      }
    },
    "21861504-02e6-32af-826f-8a5371878377": {
      "content": "table-layout: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      }
    },
    "2186aad5-1e48-3f2d-a06d-e5083f0a7f8d": {
      "content": "mixed.isValidSync()",
      "doc": "mixed.isValidSync(value: any, options?: object): boolean\n\nSynchronously returns true when the passed in value matches the schema.Takes the same options as validateSync() and has the same caveats around async tests.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-valid-sync",
      "matches": {
        "yup mixed isvalidsync": true
      }
    },
    "21875147-108a-3a0d-a31e-30dea2f4182d": {
      "content": "println!(\"${1}\");",
      "doc": "println!(…);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "println",
      "matches": {
        "println": true
      }
    },
    "2188fd64-7ddb-36b2-aeaf-340b67d4267a": {
      "content": "<seealso cref=\"${1:#:member}\"/>}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<seealso cref=\"\"/>",
      "matches": {
        "seealso": true
      }
    },
    "2197013c-deb4-3c36-90f2-c3de6b5fe8af": {
      "content": "around_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "marc": true
      }
    },
    "219b2940-57a3-3128-9617-4629e40bd154": {
      "content": "SELECT ${1:attribute(s)} FROM ${2:tableName}\nUNION\nSELECT ${3:attribute(s)} FROM ${4:tableName2};",
      "doc": "Regular union",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "union",
      "matches": {
        "union": true
      }
    },
    "219c539c-48be-3aa9-b9cb-6da45e9f5025": {
      "content": "@lang('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@lang directive",
      "matches": {
        "lang": true
      }
    },
    "219c6e8d-0fe3-3e32-8fca-af15f467c204": {
      "content": "booktitle = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "booktitle": true
      }
    },
    "21a2afc5-4fbf-33db-bd38-7956da2daeab": {
      "content": "minHeight: ${1},",
      "doc": "minHeight",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "minHeight",
      "matches": {
        "min": true
      }
    },
    "21a3857a-6896-34ff-9f79-63d1b157f0c5": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n{\n\t${7}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun2": true
      }
    },
    "21a4b9e7-ffbb-3bc2-8ab1-affa0c6a2bab": {
      "content": "main : Program ${1:Flags} ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}programWithFlags\n\t\t{ init: ${6:initWithFlags}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "progf mainf": true,
        "programWithFlags": true
      }
    },
    "21a7140f-7c0e-323b-98c1-36c1525237d4": {
      "content": "(* ${1:comment} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "commment",
      "matches": {
        "cc": true
      }
    },
    "21b512f0-fefa-31dc-8259-758267444d82": {
      "content": "place-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      }
    },
    "21b87828-e9e7-343a-ac36-f86da500f394": {
      "content": "marginVertical: '${1}',",
      "doc": "marginVertical",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginVertical",
      "matches": {
        "mar": true
      }
    },
    "21bab75d-6257-3e4e-be40-e8f41860e3e4": {
      "content": "background: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      }
    },
    "21bdf97b-4f58-3625-9a72-5047c7c5a713": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      }
    },
    "21c0d291-acb1-3f0c-9356-cd74c09f78c6": {
      "content": "import React from 'react'\n\nfunction ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-export-component",
      "matches": {
        "react component functional export": true,
        "rfce": true
      }
    },
    "21c1e8b9-f48e-398c-9843-edf08675e58a": {
      "content": "white-space nowrap",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      }
    },
    "21cbe2b1-6f07-31bd-a49e-8fce6bb2cb68": {
      "content": "${1:#:set the_file to }choose file with prompt \"${2:#:Pick a file:}\"\n${3:#:default location path to home folder}\n${4:#:with invisibles}\n${5:#:with multiple selections allowed}\n${6:#:with showing package contents}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Files": true
      }
    },
    "21cc9c59-f3f5-3b58-aeea-04c0ef39a080": {
      "content": "padding-right: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-right": true,
        "pr": true
      }
    },
    "21cd2651-ce6f-3c91-a3cb-6a7c92b31ae9": {
      "content": "for all ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for all",
      "matches": {
        "for_all": true
      }
    },
    "21d0c869-efb9-3497-900a-8c1276fe7cc5": {
      "content": "<div class=\"${1}\">\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div.": true
      }
    },
    "21d38da0-ba42-37d9-826b-0afdc61530bb": {
      "content": "# coding: utf-8\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enc": true,
        "encoding": true
      }
    },
    "21d3c49b-3bd8-3ef3-b14f-2b960db16027": {
      "content": "| first",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "first": true
      }
    },
    "21d9826a-5c31-3820-bce9-7e6cd0150b84": {
      "content": "beforeEach(function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "beforeEach(function() { ... })",
      "matches": {
        "befe": true
      }
    },
    "21dcad6c-9593-3624-b07a-bf9f2607885b": {
      "content": "FUNCTION BYTE-LENGTH(${1:integer})$0",
      "doc": "function byte-length (in bytes) of item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-BYTE-LENGTH",
      "matches": {
        "FUNCTION BYTE-LENGTH": true
      }
    },
    "21e13f56-9e2a-3685-aa2d-b3d63b9a8579": {
      "content": "if ${1:#:condition} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if {}",
      "matches": {
        "if": true
      }
    },
    "21e6b4dc-7ee2-38a2-9177-4e87571f169e": {
      "content": "@if (${1:condition})\n   ${2}\n@elseif (${3:condition})\n   ${4}\n@else\n   ${5}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "if elseif else endif",
      "matches": {
        "ifelse": true
      }
    },
    "21e8fb45-d4f6-32f5-a67e-45e08e132a30": {
      "content": "componentWillMount () {\n\t$0\n}",
      "doc": "Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      }
    },
    "21ed94db-e9ef-3bdd-b2b8-05ee09377280": {
      "content": "(/ ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/": true
      }
    },
    "21f83f90-3d7f-374f-a709-c819164f3f8d": {
      "content": "<input v-model.number=\"${1:numData}\" type=\"number\" step=\"1\" />",
      "doc": "v-model directive number input",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-model Number Directive",
      "matches": {
        "vmodel-num": true
      }
    },
    "21ffd3fe-f1a9-3bed-bcf0-247c2117d693": {
      "content": "var $1 = new sap.ui.core.Icon({\n\t\t\t\tsrc :$2 , //sap.ui.core.URI\n\t\t\t\tsize :$3 , //sap.ui.core.CSSSize\n\t\t\t\tcolor :$4 , //sap.ui.core.CSSColor\n\t\t\t\thoverColor : $5 ,  // sap.ui.core.CSSColor\n\t\t\t\tactiveColor :$6 , //sap.ui.core.CSSColor\n\t\t\t\twidth :$7 , //sap.ui.core.CSSSize\n\t\t\t\theight : $8 ,//sap.ui.core.CSSSize\n\t\t\t\tbackgroundColor :$8 , //sap.ui.core.CSSColor\n\t\t\t\thoverBackgroundColor :$9 , //sap.ui.core.CSSColor\n\t\t\t\tactiveBackgroundColor :$10 , //sap.ui.core.CSSColor\n\t\t\t\tvisible :$11 , //boolean (default: true)\n\t\t\t\tdecorative : $12 ,//boolean (default: true)\n\t\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapicon": true
      }
    },
    "22012770-9b20-3bb5-b5bf-ba9eb7eefb24": {
      "content": "_.trimEnd(${string}, ${chars})",
      "doc": "_.trimEnd('  abc  ');\n// => '  abc'\n\n_.trimEnd('-_-abc-_-', '_-');\n// => '-_-abc'\n\nRemoves trailing whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trimend",
      "matches": {
        "lodash trimend": true
      }
    },
    "2207efa1-5493-3597-aba8-a7dc6e1838e8": {
      "content": "updated () {\n\t${0};\n},",
      "doc": "updated lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-updated",
      "matches": {
        "vue lifecycle updated": true,
        "vupdated": true
      }
    },
    "2208b624-b215-362c-8c96-288dad966e0f": {
      "content": "{{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imagePullSecrets_spec": true
      }
    },
    "220a8b9d-0dbe-3762-9377-d69a403ee91a": {
      "content": "<button type=\"submit\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button:s": true
      }
    },
    "220eaae8-af48-3485-b10f-d33d3520528f": {
      "content": "if (${1:condition}) then\n\t${0}\nend if",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "22158527-ef24-3885-9338-eb27f87d8daf": {
      "content": "initial begin\n    ${0:TARGET}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "initial begin ... end",
      "matches": {
        "init": true,
        "initial": true
      }
    },
    "222a5340-cc25-3438-a16b-1b6c3e93d7fd": {
      "content": ".or.",
      "doc": "Or",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "or",
      "matches": {
        "or": true
      }
    },
    "222ed5e6-5448-3f4a-b300-4dbbeacf5dc4": {
      "content": "justify-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      }
    },
    "22394a59-a4cc-3661-b350-94f7a17f31df": {
      "content": "\\paragraph{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\paragraph": true,
        "paragraph \\paragraph{": true
      }
    },
    "22412db5-d68b-3178-8410-24f448087f72": {
      "content": "if ${1:#:condition}\n  ${2:TARGET}\nelse\n  ${3:#:body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "2241b8cc-6fdb-309f-ac70-cf214cc90da4": {
      "content": "maply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      }
    },
    "22431437-00c1-3183-92f0-d5ccaadbdaad": {
      "content": "text-wrap: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      }
    },
    "224521f3-2114-34a1-88ec-7629fd705d1c": {
      "content": "<grammar> grammar{\n\tE<${1}>\n\t\t: [${2}] ${3}\n\t\t;\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grammar": true
      }
    },
    "224664eb-d5a4-3fd0-afcc-1fcb452df9de": {
      "content": "reduce(${1:init}) do |${2:mem}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redd": true
      }
    },
    "2248c143-07fe-3c11-8909-621d1a5e1ed7": {
      "content": "${1:obj}.get(${2:element index})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "224a63ec-ffa5-3836-8456-85c51e610b86": {
      "content": "switch (${1:key}) {\n\tcase ${2:value}:\n\t\t$0\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n}",
      "doc": "Switch Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Switch Statement",
      "matches": {
        "switch": true
      }
    },
    "225d16ae-c9e5-34b0-a1fd-c82f01013df0": {
      "content": "redirect_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to",
      "matches": {
        "re": true
      }
    },
    "2262cf0b-ef2b-3b37-99bc-0583d2900181": {
      "content": "text-decoration ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "2265af42-5788-3da8-b82b-50ed86e34613": {
      "content": "{%- raw -%}${code:}{%- endraw -%}",
      "doc": "Tag: raw",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag raw",
      "matches": {
        "raw": true
      }
    },
    "22692f5c-baa2-37a9-95f8-a6ddca40cf80": {
      "content": "<http://${1:url}>",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<": true
      }
    },
    "226a134c-80e8-349d-b6cd-01fb38ebe8bf": {
      "content": "PropTypes.element.isRequired",
      "doc": "React element prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      }
    },
    "22758ac6-45cc-3fdc-8c3b-fb863ceafc7b": {
      "content": "place-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      }
    },
    "2278b3fb-b15e-34cf-804e-39c4967a7af9": {
      "content": "std::multimap<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmap": true
      }
    },
    "227902c1-98f1-34cc-95d6-b808d505799d": {
      "content": "script src=\"${1:script.js}\" type=\"text/javascript\"",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      }
    },
    "227c643f-8819-3c0a-ad83-0ea41939f1a3": {
      "content": "try\n\t${1}\ncatch ${2:err}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "try ... catch",
      "matches": {
        "try": true
      }
    },
    "227c73ad-18df-319b-ae6f-370db4362395": {
      "content": "{% raw %}${0}{% endraw %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      }
    },
    "22814bdf-dbd6-3c73-9c75-48033c5789d8": {
      "content": "font-weight: light;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-weight: light",
      "matches": {
        "fwl": true
      }
    },
    "2284f0dc-0399-3db0-af2f-6b7e05000648": {
      "content": "page-break-before: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      }
    },
    "22899fc7-8359-390d-b0fa-7a9bc00ed1e2": {
      "content": "message(AUTHOR_WARNING \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(AUTHOR_WARNING \"...\")",
      "matches": {
        "author_warning_message": true
      }
    },
    "228f82a9-5388-30ef-bf7d-5d4a8a19fc01": {
      "content": "apply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      }
    },
    "2295032c-e705-3938-9035-9290b7e45d95": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select { case a := <-chan: ... }",
      "matches": {
        "select": true
      }
    },
    "22965995-ac8b-30dc-a882-f35a491d0eea": {
      "content": "{ path: '', pathMatch: 'full', redirectTo: '${1:path}' }$0",
      "doc": "Angular default route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-default-route-path",
      "matches": {
        "a-route-path-default": true,
        "angular default route path": true
      }
    },
    "2296fbd4-3448-3b66-a622-46dace9d767a": {
      "content": "enter-to-class=\"$1\"$0",
      "doc": "enter-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-to-class",
      "matches": {
        "entertoclass": true,
        "vue enter-to-class": true
      }
    },
    "22a30c4e-2f9e-3d02-bc86-14ea510d7345": {
      "content": "import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n  static propTypes = {}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassExportComponentWithPropTypes",
      "matches": {
        "rcep": true
      }
    },
    "22a39ce3-801d-358f-9621-2c5bc9800e66": {
      "content": "<map name=\"${1}\">\n\t${0}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "22ae50f6-4032-339f-a847-98aa1e1c1a8f": {
      "content": "parameter ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "parameter ... = ...",
      "matches": {
        "pa": true,
        "parameter": true
      }
    },
    "22b2bcd0-d61e-3d9f-b7aa-390ab7967696": {
      "content": "{% empty %}\n${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      }
    },
    "22b441af-ca89-3dd6-8000-d8fb9ce6c338": {
      "content": "do while ( ${1:condition} )\r\n\t$0\r\nend do",
      "doc": "do while",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "dow",
      "matches": {
        "dow": true
      }
    },
    "22c5b194-7cfb-3c80-8279-902528e9732d": {
      "content": "{% now \"${0:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      }
    },
    "22c5c4a8-ec50-35b1-ae44-141cc81831c2": {
      "content": "\\begin{bmatrix}\n\t${1:TARGET}\n\\end{bmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{bmatrix} \\bmatrix": true,
        "bmatrix": true
      }
    },
    "22d43fa3-9894-30a7-aca5-9eabda051b34": {
      "content": "const { ${1:name} } = this.state",
      "doc": "",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "destructuring of state",
      "matches": {
        "ds": true
      }
    },
    "22d69fc0-5c93-3067-970c-046f1dc096c1": {
      "content": "text-emphasis: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      }
    },
    "22e49a26-097f-3be6-bf9e-484f373f5ba1": {
      "content": "JSON.stringify($0)",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "JSON.stringify()",
      "matches": {
        "js": true
      }
    },
    "22e61cf0-7f6d-32bd-94ce-cfc10bebd92e": {
      "content": "protected body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected body",
      "matches": {
        "protected_body": true
      }
    },
    "22e6f0e5-e93e-3259-88ea-2628fc11ec4d": {
      "content": "{%- capture ${variable} -%}${code:}{%- endcapture -%}",
      "doc": "Variable tag: capture",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag capture",
      "matches": {
        "capture": true
      }
    },
    "22edd9f2-3de4-3816-9b45-de32fc775057": {
      "content": "FUNCTION LENGTH-AN(${1:item})$0",
      "doc": "returns the length (in bytes) of the specified item;",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LENGTH-AN",
      "matches": {
        "FUNCTION LENGTH-AN": true
      }
    },
    "22f1f942-5a56-3488-8cad-ef712d933892": {
      "content": "FT\nFUNCTION TAN(${1:angle})$0",
      "doc": "trigonometric tangent of the specified angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-TAN",
      "matches": {
        "FUNCTION TAN": true
      }
    },
    "22f3eb4c-f8d3-3edf-9efe-260da9d5fcdd": {
      "content": "class ${1:MODEL_NAME}CreateView(CreateView):\r\n    model = ${1:MODEL_NAME}\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "createview",
      "matches": {
        "createview": true
      }
    },
    "22f81ff5-e72c-3330-b26c-84a335ab40fe": {
      "content": "import { createStore } from 'redux';",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      }
    },
    "22ffa10c-ddb8-3738-b753-1b5e082f539b": {
      "content": "int opApply(int delegate(ref ${1:/*iterated type/s*/}) dg)\n{\n\tint result = 0;\n\t${2:/*loop*/}\n\t{\n\t\tresult = dg(${3:/*arg/s*/});\n\t\tif(result){break;}\n\t}\n\treturn result;\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opApply (opApply)",
      "matches": {
        "opApply": true
      }
    },
    "230bd3bc-02bb-38bb-9fff-3e1e45e8af95": {
      "content": "let [${1:a}] = ${2:data}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Array destructuring",
      "matches": {
        "dar": true
      }
    },
    "230ec4a8-cabf-35a9-8915-66c27f899290": {
      "content": "<span>${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span": true
      }
    },
    "23131e67-dbee-3f3f-a8ca-a150d55097e5": {
      "content": "class ${1:Name}ModelSerializer(serializers.ModelSerializer):\n\t${2}\n\tclass Meta:\n\t\tmodel = ${3:$1}\n\t\tfields = \"${4:__all__}\"",
      "doc": "Django-rest Serializers ``ModelSerializer`` Class",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ModelSerializer (class)",
      "matches": {
        "modelserializer": true
      }
    },
    "2314811a-81a1-35f1-becf-aab0e0736bac": {
      "content": "<mark>${0}</mark>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mark": true
      }
    },
    "231bff56-4d51-391e-b617-9650b9e81301": {
      "content": "echo CHtml::metaTag('${1:content}', '${2:name}', '${3:httpEquiv}',array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhmtag": true
      }
    },
    "231d35f4-086c-3631-a467-d5697bc15136": {
      "content": "return new Promise((resolve, reject) => {\n\t${1}\n});",
      "doc": "Creates and returns a new Promise in the standard ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "promise",
      "matches": {
        "prom": true
      }
    },
    "23275bc5-114c-35ca-ad4a-239f84ae69d7": {
      "content": "if ${1} then\n\t${0}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "232819e3-560e-30ab-9991-f59e384828d3": {
      "content": "<dd id=\"${1}\">${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd#": true
      }
    },
    "2329ca6b-a263-3347-b334-2d6771a9f527": {
      "content": "import ${1:Name} from '@/components/${1:Name}.vue'\n\nexport default {\n\tcomponents: {\n\t\t${1:Name}\n\t},\n}",
      "doc": "import a component and include it in export default",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-export",
      "matches": {
        "vimport-export": true,
        "vue import export": true
      }
    },
    "2329fa9f-2202-3237-87bb-82c2c70597da": {
      "content": "expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to have attribute (coffee)",
      "matches": {
        "eha": true
      }
    },
    "2332aeb6-fd85-31d5-bf40-bceb5c129f65": {
      "content": "$this->db->select(${1:sql}, ${2:where});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_select": true
      }
    },
    "23347ad9-e9f5-3a2f-bbc5-97fd6b864b71": {
      "content": "display list-item",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      }
    },
    "233b7923-bba5-3015-98b6-dadcf82e5037": {
      "content": "console.dir(${0:obj});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.dir",
      "matches": {
        "cdir": true
      }
    },
    "233dbfca-935d-317d-a7a3-b04f6c8a0058": {
      "content": "_.after(${n}, ${func})",
      "doc": "var saves = ['profile', 'settings'];\n\nvar done = _.after(saves.length, function() {\n  console.log('done saving!');\n});\n\n_.forEach(saves, function(type) {\n  asyncSave({ 'type': type, 'complete': done });\n});\n// => Logs 'done saving!' after the two async saves have completed.\n\nThe opposite of `_.before`; this method creates a function that invokes\n`func` once it's called `n` or more times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-after",
      "matches": {
        "lodash after": true
      }
    },
    "2344cb71-b517-37af-bc83-d00d3646333a": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      }
    },
    "234e571b-0bcd-365e-97d5-15e78401322c": {
      "content": "(** ${0} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "2352f7ca-cc1d-33f6-8e62-71909217f4c7": {
      "content": "expect(${1:target}).not.toBeNull();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be null (js)",
      "matches": {
        "notn": true
      }
    },
    "23545703-4280-359a-bf03-15cfd0966896": {
      "content": "Open Context Menu    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Open Context Menu",
      "matches": {
        "ocm": true
      }
    },
    "23554132-5fae-30e2-ad77-79b4aa2f8ccb": {
      "content": "size(${1:200}, ${2:200}${0:, OPENGL});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "opengl",
      "matches": {
        "size": true
      }
    },
    "23576dd5-280c-3f5f-ae76-20576a21a715": {
      "content": "<var>$1</var>$2",
      "doc": "HTML - Defines a variable",
      "filetype": "html",
      "grammar": "lsp",
      "label": "var",
      "matches": {
        "var": true
      }
    },
    "236a9476-e3a5-3be6-90ea-e4d8d85016bb": {
      "content": "expect(${1:}).to.deep.equal(${0});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...).to.deep.equal(...)",
      "matches": {
        "expd": true
      }
    },
    "236a9c25-cef0-38c3-ab4f-4d148a751a53": {
      "content": "list-style-type upper-roman",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      }
    },
    "236e15af-2d06-3f3a-aba0-1c3a36bcab13": {
      "content": "${${1:1}:${0:text}}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      }
    },
    "238042aa-4f9a-33be-b047-ca9c6440ad25": {
      "content": "<%= form_for @${1:model} do |f| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      }
    },
    "238a7cd8-921c-350a-bf47-45350ba1ecc7": {
      "content": "_.unescape(${string})",
      "doc": "_.unescape('fred, barney, &amp; pebbles');\n// => 'fred, barney, & pebbles'\n\nThe inverse of `_.escape`; this method converts the HTML entities\n`&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\ntheir corresponding characters.\n\n**Note:** No other HTML entities are unescaped. To unescape additional\nHTML entities use a third-party library like [_he_](https://mths.be/he).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unescape",
      "matches": {
        "lodash unescape": true
      }
    },
    "2392039d-8bac-3d44-b7bc-c3319f1d89b3": {
      "content": "text-align ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      }
    },
    "2392c0ab-91d7-3e32-bdd1-60072e25cb01": {
      "content": "grid-auto-columns: max-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      }
    },
    "239c6273-d94d-33be-bd5e-73535593004e": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      }
    },
    "239d2cef-e5f1-3c5f-9c50-e409d031ccd4": {
      "content": "Return From Keyword    ${1:${optional return value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Return From Keyword",
      "matches": {
        "rfk": true
      }
    },
    "23a7c058-e68f-34a4-acc6-fc6c6be58d1f": {
      "content": "# https://kubernetes.io/docs/concepts/services-networking/ingress/#tls\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ${1:testsecret-tls}\n  namespace: ${2:default}\ntype: kubernetes.io/tls\n# The TLS secret must contain keys named 'tls.crt' and 'tls.key' that contain the certificate and private key to use for TLS.\ndata:\n  tls.crt: base64 encoded cert\n  tls.key: base64 encoded key\n\n---\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ${3:tls-example-ingress}\n  namespace: ${2:default}\nspec:\n  tls:\n  - hosts:\n      - ${4:https-example.foo.com}\n    secretName: ${1:testsecret-tls}\n  rules:\n  - host: ${4:https-example.foo.com}\n    http:\n      paths:\n      - path: /${5}\n        pathType: Prefix\n        backend:\n          service:\n            name: ${6:service1}\n            port:\n              number: ${7:80}\n---\n$0",
      "doc": "k8s Ingress with TLS",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Ingress with TLS",
      "matches": {
        "k-ingress-tls": true
      }
    },
    "23a974a9-6731-3d41-9572-10c34a83f29f": {
      "content": "useEffect(() => {\n\t${1}\n});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useEffect",
      "matches": {
        "usee": true
      }
    },
    "23b19ccc-1382-3276-8eb5-97458fad6f6d": {
      "content": "boundary $0",
      "doc": "Model a boundary of the system",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Boundary",
      "matches": {
        "bound": true
      }
    },
    "23b4a4bb-b0fb-3219-99e4-81a686286f7e": {
      "content": "border-fit: space",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      }
    },
    "23bb22b8-890b-358a-a793-e5c062821754": {
      "content": "execute ${1}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exe": true
      }
    },
    "23c15836-04e7-3b8b-a2d6-e9dbbb833316": {
      "content": "sq(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sq": true
      }
    },
    "23c5b8c1-42a4-3857-a743-bdfb9166e607": {
      "content": "vertical-align: super",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      }
    },
    "23d1c71f-94b2-3067-a4c9-6ce77d7331db": {
      "content": "${1:obj}.error (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      }
    },
    "23da7f98-6d16-3b86-b75f-ddb85723bba5": {
      "content": "${1}:\nwhile ${2} loop\n\t${0:${VISUAL}}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named while",
      "matches": {
        "nwh": true
      }
    },
    "23da88fd-6d1a-3f9f-8377-7ad61a991e18": {
      "content": "page-break-after: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      }
    },
    "23db090b-b78f-3a4e-8e6b-3392b7e44d2f": {
      "content": "@Before\nstatic void ${1:intercept}(${2:args}) { ${0} }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      }
    },
    "23df34ec-57f3-31f9-b7af-3427506cee2a": {
      "content": "Scanner",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Sc": true
      }
    },
    "23e9c7a9-337d-3418-af31-e09b63294eb8": {
      "content": "function (${1})${2: use } {\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "function () {}",
      "matches": {
        "function_literal": true
      }
    },
    "23ea1d5e-102d-3e05-8d9a-023ff27636a3": {
      "content": "padding-left: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "padding-left",
      "matches": {
        "padl": true
      }
    },
    "23f1c3c0-1b93-36f9-b753-38c2811cee61": {
      "content": "padding: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   all (padding)",
      "matches": {
        "padding": true
      }
    },
    "23f23683-d53f-3b6e-9b77-412ca8e67e7d": {
      "content": "{% blockquote ${1:author}, ${2:title} %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote-author": true
      }
    },
    "23f47621-400f-3c2c-bbf5-89f97c10c43c": {
      "content": "render xml:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :xml",
      "matches": {
        "rx": true
      }
    },
    "23f63590-bc39-3219-87b8-b46bf39c7240": {
      "content": "function log10(${1:number})$0",
      "doc": "format base 10 logarithm of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-log10",
      "matches": {
        "function log10": true
      }
    },
    "23f79fa9-5c10-3749-8c9a-3b62ffcfb4a5": {
      "content": "<html>\n${0}\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      }
    },
    "23f855c4-9c84-35d0-a8e9-cccb545339bd": {
      "content": "border-bottom: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      }
    },
    "23fa7e21-0002-37c5-8e6d-e4c381641d99": {
      "content": "var ${1:name} = ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "var assignment",
      "matches": {
        "va": true
      }
    },
    "24177b77-1a3a-311c-b145-09c111ce39d2": {
      "content": "expect(${1:what}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expect": true
      }
    },
    "2419e714-c6d9-3d19-986c-0c8858c78261": {
      "content": "{% when ${1:condition} %}\n$0",
      "doc": "Control flow tag: when",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag when",
      "matches": {
        "when": true
      }
    },
    "241e96af-c76e-3299-99a6-842a00bbecd6": {
      "content": "_.trim(${string}, ${chars})",
      "doc": "_.trim('  abc  ');\n// => 'abc'\n\n_.trim('-_-abc-_-', '_-');\n// => 'abc'\n\n_.map(['  foo  ', '  bar  '], _.trim);\n// => ['foo', 'bar']\n\nRemoves leading and trailing whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trim",
      "matches": {
        "lodash trim": true
      }
    },
    "2424a083-adad-30c7-b014-a70a80e03563": {
      "content": "render partial: '${1:item}', locals: { ${2:$1}: ${0:@$1} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      }
    },
    "242aa713-1da2-3f57-a951-ce68dedcfaf6": {
      "content": "${1:FIELDNAME} = serializers.DateField(${2})",
      "doc": "Django-rest Serializers ``DateField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF DateField",
      "matches": {
        "sdate": true
      }
    },
    "242ea20f-453d-3237-80d5-624984eb5219": {
      "content": "/// ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "2444bc93-9be2-346c-bb34-9ddedcfa1e7f": {
      "content": "(if (not ${1})\n\t(begin\n\t\t${2})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnb": true
      }
    },
    "244c00bd-d63e-36aa-ae83-34f3e559eff3": {
      "content": "constructor(${1:arg}: ${2:type}) {\n\t$0\n}",
      "doc": "Snippet for constructor function",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "constructor",
      "matches": {
        "constructor": true
      }
    },
    "244dab75-a307-3315-b7da-ab7ee5c9f4ba": {
      "content": "@moduledoc \"\"\"${0:TARGET}\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "@moduledoc \"\"\"...\"\"\"",
      "matches": {
        "mdoc": true
      }
    },
    "244e2930-f8c3-364b-bc97-c14107fda824": {
      "content": "text-outline: ${1:0} ${2:0} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      }
    },
    "244e5391-8945-3ef5-b877-c752a1dc3893": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t$3\nelse\n\t$4\nendif",
      "doc": "if else statement",
      "filetype": "make",
      "grammar": "lsp",
      "label": "if else statement",
      "matches": {
        "ife": true
      }
    },
    "244e86ca-eca5-35bd-9ee6-8fc16d697320": {
      "content": "let rec ${1:TARGET}\nin ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let rec .. in",
      "matches": {
        "letr": true
      }
    },
    "245202ee-df88-3f7e-9fde-8234dec60c48": {
      "content": "if (${1}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "if ... else ...",
      "matches": {
        "ife": true
      }
    },
    "2459d52e-ba67-3779-badf-81041de6b039": {
      "content": "<%= ${1:f}.password_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffpf": true
      }
    },
    "245e9367-9ad2-3be8-84fb-761a3d3fa324": {
      "content": "echo CHtml::activeId(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhai": true
      }
    },
    "245eeb27-205b-36fa-86a9-3dcb7d380b0f": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} * \"${5:Payee}\" \"${6:Narration}\"\n\t${9:Account} ${10:Amount} ${11:Commodity}\n\t${14:Account} ${15:#:Amount} ${16:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "transaction",
      "matches": {
        "transaction": true
      }
    },
    "2463a572-1076-3c03-9d34-2a2f7c1bb15c": {
      "content": "<${1:div} v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\">\n\t{{ ${2:item} }}\n</${1:div}>",
      "doc": "vfor statement",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-for",
      "matches": {
        "vfor": true
      }
    },
    "2464cc53-82be-3a72-a9c0-0099d1055f23": {
      "content": "@enforce_keys [:${1:key_name}]",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enfk": true
      }
    },
    "24690c4b-fcd9-398c-ae78-6e217eb0ff9b": {
      "content": "{${1}: ${2} for ${3} in ${4:${VISUAL}}}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "dict comprehension",
      "matches": {
        "dcp": true
      }
    },
    "246da14a-0127-37f7-bc42-44a6d7ec8204": {
      "content": "before_filter :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bf": true
      }
    },
    "247261ec-c3d0-3a86-8a4a-c73079cd4dda": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}",
      "doc": "transition local",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-local",
      "matches": {
        "s-transition-local": true
      }
    },
    "2472df3b-0285-366a-9578-0b7ec65f715c": {
      "content": "post {\n\taborted {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pab": true
      }
    },
    "247bcc0c-22de-3a14-90f0-0a96cdf87015": {
      "content": "try\n{\n\t\n}\ncatch (const std::exception&)\n{\n\t$1\n}",
      "doc": "Code snippet for try catch",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "247e2444-ef1b-3408-beb4-d2464dc2d1dd": {
      "content": "try:\n\t${1:pass}\nfinally:\n\t${2:pass}",
      "doc": "Code snippet for a try/finally statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "try/finally",
      "matches": {
        "try/finally": true
      }
    },
    "247f78e9-bf15-3f50-8c6a-f39051c79eb3": {
      "content": "rect(${1:x}, ${2:y}, ${3:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rect": true
      }
    },
    "2480bbf4-a712-3ae6-b8fd-ad2035755907": {
      "content": "box-sizing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      }
    },
    "2482fad1-18c5-3d2a-9b66-f54d4d2e9e36": {
      "content": "<i>${0}</i>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i": true
      }
    },
    "24842874-b237-395f-bf10-7fcd803259ea": {
      "content": "func ${1:handler}(w http.ResponseWriter, r *http.Request) {\n\t${0:fmt.Fprintf(w, \"hello world\")}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http.HandlerFunc",
      "matches": {
        "hf": true
      }
    },
    "2485e734-65f4-3016-be17-25071bdb87ad": {
      "content": "? {\n\t\"${1}\"\t=> ${0}\n  }",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      }
    },
    "24884873-ce1b-3282-8539-44984c596dc2": {
      "content": "[${1}](${2}) ${0}",
      "doc": "Add links",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Links",
      "matches": {
        "l": true,
        "link": true
      }
    },
    "248a8180-c4e5-3a0e-b94d-b39f0d46d948": {
      "content": "${1:obj}.prev('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prev": true
      }
    },
    "248b58e1-fa28-3ee7-9206-178e6f967d34": {
      "content": "import { Helmet } from 'react-helmet';",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-import",
      "matches": {
        "react-helmet import": true
      }
    },
    "248e8541-d0d3-3a37-95c7-cbdf79fba7da": {
      "content": "\"${1:link text}\":${0:url}",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      }
    },
    "2494c1c7-48f5-39b9-8b4e-819c54570658": {
      "content": "validates_acceptance_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of",
      "matches": {
        "vb": true
      }
    },
    "24962065-2703-39d3-a4f3-bc5f45b6e033": {
      "content": "unimplemented!()",
      "doc": "unimplemented!()",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "unimplemented",
      "matches": {
        "unimplemented": true
      }
    },
    "2499d4d5-b4c6-3ad3-bb1c-553d7cd72ea4": {
      "content": "text-indent: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      }
    },
    "2499d5af-1672-30fe-abbb-56bfc4f7c59b": {
      "content": "{% continue %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "continue": true
      }
    },
    "249bbc56-0868-3ae6-9eeb-396f39ca70d7": {
      "content": "${1}.find(${2:item} => {\n\t${0}\n});",
      "doc": "find",
      "filetype": "base",
      "grammar": "lsp",
      "label": "find",
      "matches": {
        "base find": true
      }
    },
    "249e1891-b2bc-3a13-a3e1-d228dc2d0a42": {
      "content": "border-bottom-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      }
    },
    "24aae198-0876-3c7f-9580-c9dd51e2a3b5": {
      "content": "<select>${1:TARGET}</select>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "24ad0661-4221-370e-8f94-5064c5e4b778": {
      "content": "const { ${scrollYProgress} } = useViewportScroll()",
      "doc": "useViewportScroll(): ScrollMotionValues Returns MotionValues that update when the viewport scrolls.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-viewport-scroll",
      "matches": {
        "framer-motion use-viewport-scroll": true,
        "use-viewport-scroll": true
      }
    },
    "24ad7447-bae0-38e8-bb72-efc2cebb8465": {
      "content": "/**\n* @Route(\"/${1:route_name}\", name=\"$1\")\n* @Template()\n*/\npublic function $1Action($2)\n{\n\t$3\n\treturn ${4:[];}$0\n}",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony 2 Controller action",
      "matches": {
        "sfa": true
      }
    },
    "24b06025-795e-3e57-8c15-2fc028f50046": {
      "content": "@callback ${1:name}(${2:args}) :: ${3:returns}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cb": true
      }
    },
    "24b2c08d-9c51-3dcb-add4-3ab68f1bf099": {
      "content": "\"puppet://puppet/${1:module name}/${0:file name}\"",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:": true
      }
    },
    "24baa4a6-8e2e-3d1c-8dca-2c24485232c9": {
      "content": "${1:void} ${2:#:Method}(${3:#:arguments}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      }
    },
    "24bdaab9-ad46-3753-a81c-1e08747bc124": {
      "content": "bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "24cabd47-1dcb-3f7b-a4e4-8263c8d9e2b1": {
      "content": "print(${0:TARGET})",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true,
        "print": true
      }
    },
    "24d02a57-8afa-3806-9e65-7778f5e59f25": {
      "content": "{% filter ${1:name} %}\n\t$0\n{% endfilter %}",
      "doc": "filter (block)",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "filterb",
      "matches": {
        "filterb": true
      }
    },
    "24d0fa6f-f41d-3f6a-a091-09f2b17541ed": {
      "content": "type\t\tfixedValue;\nvalue\t\tuniform ${0};",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      }
    },
    "24d3a0fc-2d8e-34e6-9214-4e7673dae476": {
      "content": "# Directory resource\ndirectory ${1:\"/path/to/dir\"} do # The path to the directory\n\t${2:#}group ${3} # The group owner of the directory (string or id)\n\t${4:#}mode ${5} # The octal mode of the directory, eg 0755\n\t${6:#}owner ${7} # The owner for the directory\n\t${10:#}recursive ${11:false} # When deleting the directory, delete it recursively. When creating the directory, create recursively (ie, mkdir -p)\n\n\t${12:#}${13:action :create} # Create this directory (Default)\n\t${14:#}${0:action :delete} # Delete this directory\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "directory": true
      }
    },
    "24df2c49-f972-3aa4-85a8-5f3a7894fd25": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/\napiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: ${1:myapp}\n  namespace: ${2:default}\nspec:\n  selector:\n    matchLabels:\n      app: ${1:myapp} # has to match .spec.template.metadata.labels\n  serviceName: \"${1:myapp}\"\n  replicas: ${3:3} # by default is 1\n  template:\n    metadata:\n      labels:\n        app: ${1:myapp} # has to match .spec.selector.matchLabels\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: ${1:myapp}\n        image: ${4:${1:myapp}-slim:1.16.1}\n        ports:\n        - containerPort: ${5:80}\n          name: ${1:myapp}\n        volumeMounts:\n        - name: ${6:www}\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: ${6:www}\n    spec:\n      storageClassName: ${7:my-storage-class}\n      accessModes:\n      - ${8|ReadWriteOnce,ReadWriteMany,ReadOnlyMany|}\n      resources:\n        requests:\n          storage: ${9:1Gi}\n---\n$0",
      "doc": "k8s StatefulSet",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s StatefulSet",
      "matches": {
        "k-statefulset": true
      }
    },
    "24eae479-0302-323e-96c8-a56fcb1f9757": {
      "content": "for i, ${1:x} in pairs(${2:table}) do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "foreach",
      "matches": {
        "foreach": true
      }
    },
    "24f18ef2-a129-3e2b-a8e5-76f752f78c9f": {
      "content": "vertical-align text-bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      }
    },
    "24f3af55-4d66-3578-8286-65e885720522": {
      "content": "if !ok {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if !ok { ... }",
      "matches": {
        "ok": true
      }
    },
    "24f962f2-15f1-3456-8703-ba6fcc5eb71e": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "let ... in ...",
      "matches": {
        "let": true
      }
    },
    "24ff538c-c0c5-3c78-a5ed-37a0221737dd": {
      "content": "validates_associated :${0:attribute}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated",
      "matches": {
        "va": true
      }
    },
    "250914ec-034b-33a0-a718-62a8b773e5f5": {
      "content": "Mouse Down On Image    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down On Image",
      "matches": {
        "mdoi": true
      }
    },
    "250b4410-cd4d-3341-853a-bcea59fbdd08": {
      "content": "\\begin{sffamily}\n\t${1:TARGET}\n\\end{sffamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{sffamily} \\sffamily": true,
        "sffamily": true
      }
    },
    "25120633-8abd-3f47-acf1-1449ae1197af": {
      "content": "var ${1} = ${2};",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "2525df96-106b-3db6-81ce-3551c0dba8b1": {
      "content": "top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "252d7c8b-4fc1-3770-b4c9-50d1e83f511d": {
      "content": "string.length()",
      "doc": "string.length(limit: number | Ref, message?: string | function): Schema\n\nSet a required length for the string value. The ${length} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-length",
      "matches": {
        "yup string length": true
      }
    },
    "252fa81d-2b39-317a-8369-c4e997334dd7": {
      "content": ".. code:: ${1:type}\n\n\t${0:write some code}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cod:": true
      }
    },
    "25312807-23fa-3f88-8ff0-7846af859ccc": {
      "content": "interface ${1}{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      }
    },
    "2532e6f6-c55e-321e-8759-a9a6e58cb209": {
      "content": "private bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb-": true
      }
    },
    "25331709-984c-3717-9070-bd8368c81cad": {
      "content": "make(${1:[]string}, ${2:0})${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "make(Type, size)",
      "matches": {
        "make": true
      }
    },
    "25393332-3c36-3fff-a652-2ef695fd76ae": {
      "content": "for ${1:i} in ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "253ba078-ea43-3a72-8979-c2d089c0189e": {
      "content": "loop {\n    ${2:unimplemented!();}\n}",
      "doc": "loop { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "loop",
      "matches": {
        "loop": true
      }
    },
    "25487870-3a03-3294-a9e2-61c8f0540eef": {
      "content": "(** ${1:odoc} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "odoc",
      "matches": {
        "oo": true
      }
    },
    "254b8cf6-8dca-3e04-b57e-43c9d49771d3": {
      "content": "for (${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "for (..) {..}",
      "matches": {
        "for": true
      }
    },
    "254ba9d1-336a-39f8-8d07-267c5173e40b": {
      "content": "gl.glGenLists(${0:1})",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl gen lists",
      "matches": {
        "gl": true
      }
    },
    "254f70ac-04cd-3b98-b437-dd9a28bbcb83": {
      "content": "word-spacing: ${1:10px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "word-spacing:  length (word)",
      "matches": {
        "word": true
      }
    },
    "255a2e8f-6f01-31b6-8600-2a84800f7cf2": {
      "content": "background-break: bounding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      }
    },
    "25679741-1339-3844-bda0-6ee1dcc5242f": {
      "content": "cfg!(${1})",
      "doc": "cfg!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "cfg!",
      "matches": {
        "cfg!": true
      }
    },
    "256bcb2d-4774-30e4-9445-9f2ddca76046": {
      "content": "{% increment ${0:variable} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "increment": true
      }
    },
    "256c344d-1283-384f-9c60-2c73f15b056b": {
      "content": "{% embed \"${1:template}\" %}\n\t$0\n{% endembed %}",
      "doc": "embed",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "embed",
      "matches": {
        "embed": true
      }
    },
    "2573474f-58fe-3de3-89f3-3de7421ae2cc": {
      "content": "@extend ${0};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      }
    },
    "257c999c-46e6-3a52-9029-6a8aa03c90df": {
      "content": "Vue.config.performance = ${1:true}",
      "doc": "Vue.config.performance",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "performance",
      "matches": {
        "VueConfigPerformance": true
      }
    },
    "257ea3db-9551-301c-add3-a34228adee15": {
      "content": "real, dimension(${1}), intent(out) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension intent(out)",
      "matches": {
        "redo": true
      }
    },
    "258c167d-79ad-3212-aefd-030df2caac00": {
      "content": "borderBottomLeftRadius: ${1},",
      "doc": "borderBottomLeftRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderBottomLeftRadius",
      "matches": {
        "bor": true
      }
    },
    "2591f68d-2dc8-3e81-ac3d-16ff3f9cfe73": {
      "content": "(${1:i}, $1 = ${2:1}, ${3:100}, ${4:1})$0",
      "doc": "Implied do",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "ido",
      "matches": {
        "ido": true
      }
    },
    "2592235d-11ac-33ab-8b3b-afa4ff4964d9": {
      "content": "vec![${1}]",
      "doc": "vec![…]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "vec",
      "matches": {
        "vec": true
      }
    },
    "259dc47c-ea0d-385a-b7c4-73f3fe296e3e": {
      "content": "import { Injectable } from '@angular/core';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor() { }\n\t$0\n}",
      "doc": "Angular Service with Injectable ProvidedIn Root",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-service",
      "matches": {
        "a-service": true,
        "angular service": true
      }
    },
    "259e0cab-a134-36b8-a1a0-ce98c157d35f": {
      "content": "void opAssign($1 rhs) ${2:@safe pure nothrow}\n{\n\t$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opAssign (op=)",
      "matches": {
        "op=": true
      }
    },
    "25a133c6-3ea0-351d-8714-69eaf441c041": {
      "content": "{%- for ${1:item} in ${2:collection} -%}\n\t$3\n{%- endfor -%}",
      "doc": "Iteration tag: for, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag for, whitespaced",
      "matches": {
        "for-": true
      }
    },
    "25a58504-f426-37be-9bb9-939f852459a4": {
      "content": "ALTER TABLE ${1:table}\nMODIFY ${2:column} ${3:new_column_desc};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "ALTER TABLE ... MODIFY ...",
      "matches": {
        "ALTER_TABLE": true
      }
    },
    "25a65644-9878-379e-b7a4-786b8ff6db31": {
      "content": "module ${1} = {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "25a864f3-af91-315e-838e-bbe09591e853": {
      "content": "grid-column-start ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      }
    },
    "25a9d399-2625-305a-925b-b1e272a1da54": {
      "content": "content: close-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cq": true
      }
    },
    "25aaace6-97b9-3a94-b4fb-d4a3a5731407": {
      "content": "/**\n *\t${1:@private}$0\n */\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docc": true
      }
    },
    "25b06b0e-d4a3-34b3-a62f-5404b6fdeeaa": {
      "content": "_.add(${augend}, ${addend})",
      "doc": "_.add(6, 4);\n// => 10\n\nAdds two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-add",
      "matches": {
        "lodash add": true
      }
    },
    "25b21600-dc14-3c09-b3c8-5389244a2264": {
      "content": "|> Array.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atap": true
      }
    },
    "25c3980c-d1c6-35d1-88c1-aa2a77ce4336": {
      "content": "#[cfg(test)]\nmod tests {\n\tuse super::${1:*};\n\n\ttest${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Test module",
      "matches": {
        "testmod": true
      }
    },
    "25c91d81-c0ca-3dcb-8924-bbc128382849": {
      "content": "renderToString",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "renderToString",
      "matches": {
        "renderToString": true
      }
    },
    "25cf45ae-c894-3a57-9545-e52828d80473": {
      "content": "${1:var_name} = kwargs.get('$1', ${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lkwg": true
      }
    },
    "25d3437a-d3d8-3093-84d4-bcd8b3e488e7": {
      "content": "<figure class=\"${1}\">\n\t${0}\n</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure.": true
      }
    },
    "25db043d-0f33-3e11-9a3a-6fb6301ee453": {
      "content": "border-top none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      }
    },
    "25dd7022-b959-3f54-bc9f-99761e46c5d0": {
      "content": "ReactDOM.createPortal(${1:child}, ${2:container});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.createPortal",
      "matches": {
        "rdcp": true
      }
    },
    "25e08fd5-cac6-34f3-9f18-d88bc7092e4c": {
      "content": "grid-row-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      }
    },
    "25e1b245-6024-351b-9e6a-1a033792c286": {
      "content": "float: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      }
    },
    "25e67386-1817-330a-9a09-bd94073f77f9": {
      "content": "class ${1}Inline(admin.TabularInline):\n\t'''Tabular Inline View for ${1}'''\n\n\tmodel = ${2:${1}}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = (${6},)",
      "doc": "Tabular Inline",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "tabularinline",
      "matches": {
        "tabularinline": true
      }
    },
    "25f045c6-033d-3da5-bfee-0e5e50727d4a": {
      "content": "border-top-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      }
    },
    "25f2bdcb-5fa8-3e33-93ca-310e3de0fe61": {
      "content": "std::queue<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      }
    },
    "25f36b6f-8950-3af5-9945-3718f8d523f9": {
      "content": "min-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      }
    },
    "25f706be-9e2a-3089-8f4d-75bc0c47b8df": {
      "content": "background: ${0:#fff};",
      "doc": "background: image position/size repeat attachment box box",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background",
      "matches": {
        "bg": true
      }
    },
    "25f80fce-0cbb-3210-8164-a1e41915058f": {
      "content": "console.groupEnd()",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleGroupEnd",
      "matches": {
        "cge": true
      }
    },
    "25f8ce20-4228-353a-a3bd-858bccfe27ab": {
      "content": "${1}.filter(${2:item} => {\n\t${0}\n});",
      "doc": "filter",
      "filetype": "base",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "base filter": true
      }
    },
    "25ff8044-da63-3ed5-a965-ffd63ebe4a09": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "!important",
      "matches": {
        "!": true
      }
    },
    "26018f1e-e6ed-345c-b875-0449661a21cc": {
      "content": "if $1 then\n\t$2\nelseif $3 then\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/elseif statement",
      "matches": {
        "eif": true
      }
    },
    "26042df2-a147-3939-a8e6-2e3c6d3a2741": {
      "content": "class ${1:MyClass}\n{\npublic:\n\t$1();\n\t$1($1 &&) = default;\n\t$1(const $1 &) = default;\n\t$1 &operator=($1 &&) = default;\n\t$1 &operator=(const $1 &) = default;\n\t~$1();\n\nprivate:\n\t$2\n};\n\n$1::$1()\n{\n}\n\n$1::~$1()\n{\n}",
      "doc": "Code snippet for class",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "26064a07-323e-332e-bc16-3b70fba0cb1a": {
      "content": "object ${1:X} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      }
    },
    "2608c05e-f6a3-30e3-bef1-6ce8d991d8ad": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>\n\n<style>\n\t${2:/* your styles go here */}\n</style>\n\n${3:<!-- markup (zero or more items) goes here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-format",
      "matches": {
        "svcomponent": true,
        "svelte component template": true
      }
    },
    "260a58f4-8c1e-395d-a778-869dd1fdfe59": {
      "content": "${1:name}ui <- function(id) {\n    ns <- NS(id)\n    tagList(\n    ${0}\n        )\n    }\n\n${1:name} <- function(input, output, session) {\n    ns <- session\\$ns\n}\n\n# Copy in UI\n#${1:name}ui(\"${1:name}ui\")\n\n# Copy in server\n#callModule(${1:name}, \"${1:name}ui\")",
      "doc": "Shiny module",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Shiny module",
      "matches": {
        "shiny module": true
      }
    },
    "260e2e29-3921-34a7-8e2a-59cff6c119b9": {
      "content": "cursor: default;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "cursor: default",
      "matches": {
        "curd": true
      }
    },
    "261025b2-a887-3ac8-937d-784f6ca27554": {
      "content": "{% regroup ${1} by ${2} as ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      }
    },
    "2611be6b-f68f-3ee9-9b40-4b9d30c4cd3e": {
      "content": "it('should $1', async () => {\n  $0\n})",
      "doc": "Testing async `it` block",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "itAsyncBlock",
      "matches": {
        "tita": true
      }
    },
    "26251965-08d8-3a8e-89fe-ef95396452e9": {
      "content": "font-stretch semi-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      }
    },
    "262be684-adec-3ae3-a26d-1045813247c6": {
      "content": "else {\n\t$0\n}",
      "doc": "Code snippet for else statement",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "262c6339-20f0-3447-ab9a-758766ce7503": {
      "content": "flex-wrap: ${0:nowrap};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw": true
      }
    },
    "262ca476-be69-3e8d-8c91-2c70966017f5": {
      "content": "margin-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      }
    },
    "2648f157-4e26-3dec-a3b0-3f4a9173f35e": {
      "content": "get ${1:#:NAME}() {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "265454ec-539b-3119-a730-af6c85135d6f": {
      "content": "@before-enter=\"$1\"$0",
      "doc": "@before-enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-enter",
      "matches": {
        "beforeenterevent": true,
        "vue before-enter": true
      }
    },
    "26594734-4ef1-3674-bb44-9f2074f20ea9": {
      "content": "reduce(${1:init}) { |${2:mem}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "red": true
      }
    },
    "265c9c40-576c-37a4-8880-3477efd106a6": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      }
    },
    "265fa165-8740-3907-88d4-767914459fc5": {
      "content": "select {\ncase ${1:#:condition}:\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select {}",
      "matches": {
        "select": true
      }
    },
    "266075f4-fc18-3822-832a-6eab933558f1": {
      "content": "position fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      }
    },
    "26656148-f006-3c86-bfb0-7436db7382c1": {
      "content": "switch (${1:#:var}) {\ncase ${2:#:val}:\n    ${0:TARGET}\n    break;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "switch () {}",
      "matches": {
        "switch": true
      }
    },
    "2665d75c-6e9c-3607-826d-a108e9526346": {
      "content": "# frozen_string_literal: true$0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert frozen literal string",
      "matches": {
        "frozen": true
      }
    },
    "266b1567-25b8-37b0-85b9-065ea95a3d49": {
      "content": "@property void ${1:/*member_name*/}(${2:/*type*/} rhs) pure nothrow {${3:$1_} = rhs;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "setter property (set)",
      "matches": {
        "set": true
      }
    },
    "266d99b2-8661-3bf5-90ec-bc84dd940de0": {
      "content": "{% endif %}$0",
      "doc": "endif",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endif",
      "matches": {
        "endif": true
      }
    },
    "266e7876-52ba-3d3d-92eb-24fdcbc041d4": {
      "content": "$.makeArray(${0:obj});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "makearray": true
      }
    },
    "26726c62-e078-33a4-9df9-ee71d9b4b08e": {
      "content": "function letgo()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function letgo() { ... }",
      "matches": {
        "letgo": true
      }
    },
    "267b7207-bb32-30dc-baae-b3cf036e425d": {
      "content": "@genType.as(\"${1:CB}\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "@genType alias",
      "matches": {
        "gta": true
      }
    },
    "26821831-17b4-33c4-95ef-172bb5906189": {
      "content": "aspectRatio: '${1}',",
      "doc": "aspectRatio",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "aspectRatio",
      "matches": {
        "as": true
      }
    },
    "26842e58-3faf-3af9-8197-82931471d9e6": {
      "content": "(define ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "2686ac67-3558-393b-a91a-8ea170f14860": {
      "content": "list-style-type: lower-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      }
    },
    "2686e61c-89e0-3e52-94d3-0c730ba01975": {
      "content": "setContext(${1:key}, ${2:context})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-set-context",
      "matches": {
        "sv-content": true,
        "svelte set content": true
      }
    },
    "268841bd-7bb7-3a59-8318-f45a9f4ab922": {
      "content": "it('${1:}', function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "it('should do', function() { ... })",
      "matches": {
        "it": true
      }
    },
    "268cfee5-8c49-368b-b65c-da5571535ae8": {
      "content": "<canvas id=\"$1\">$2</canvas>$3",
      "doc": "HTML - Defines graphics",
      "filetype": "html",
      "grammar": "lsp",
      "label": "canvas",
      "matches": {
        "canvas": true
      }
    },
    "268e762c-32db-333b-a1e8-dc284ed29f43": {
      "content": "has ${1:attribute} => (\n\tis\t    => '${2:ro|rw}',\n\tisa \t=> '${3:Str|Int|HashRef|ArrayRef|etc}',\n\tdefault => sub {\n\t\t${4:defaultvalue}\n\t},\n\t${0:# other attributes}\n);",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      }
    },
    "269d56ce-d55e-31d8-8588-dd1fc6478c6d": {
      "content": "propsData",
      "doc": "Restriction: only respected in instance creation via `new`. Pass props to an instance during its creation. This is primarily intended to make unit testing easier.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "propsData",
      "matches": {
        "propsData": true
      }
    },
    "269de0af-f33f-3064-bb87-8c387ee846c2": {
      "content": "expect(${1:target}).toBeDefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (js)",
      "matches": {
        "etbd": true
      }
    },
    "26a51d9e-5c2a-3d4c-afe7-1bcfeb2bf750": {
      "content": "t.Log(\"$1\")",
      "doc": "Snippet for t.Log()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "t.Log",
      "matches": {
        "tl": true
      }
    },
    "26b04b35-cb6d-38ac-b7ab-0180ddc23284": {
      "content": "@appear-cancelled=\"$1\"$0",
      "doc": "@appear-cancelled=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "appear-cancelled",
      "matches": {
        "appearCancelledEvent": true
      }
    },
    "26ba5714-2b9b-3dc1-8446-57b051c643f3": {
      "content": "<%= error_tag ${1:f}, :${2:field} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "error_tag",
      "matches": {
        "et": true
      }
    },
    "26bf15d6-1afc-3182-bc6e-a5de167d45f1": {
      "content": ":after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      }
    },
    "26c72441-6475-31b1-b9b0-e0a8199b89f1": {
      "content": "def new\n\t@${1:model_class_name} = ${2:ModelClassName}.new\n\n\trespond_to do |format|\n\t\tformat.html # new.html.erb\n\t\tformat.json  { render json: @$1 }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defnew": true
      }
    },
    "26c9efbb-b3df-3a04-9ce7-853a6d60c3ad": {
      "content": "font-weight: bolder;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      }
    },
    "26d73a1b-e87b-36b1-a549-c1388663155d": {
      "content": "NSArray * array;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      }
    },
    "26de7941-3e20-3816-af6c-148d8bf5bf15": {
      "content": "Page Should Contain Image    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Image",
      "matches": {
        "psci": true
      }
    },
    "26e584c1-3256-319e-bc1a-a39cc8271265": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit($1, $2);\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vactions": true
      }
    },
    "26eff8b2-4a81-3d54-9dd5-d72685729e7a": {
      "content": "@click=\"${1:handler}(${2:arg}, $event)\"",
      "doc": "v-on click handler with arguments",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-on Shortcut Directive",
      "matches": {
        "von": true
      }
    },
    "26f40991-d191-33ab-b9d8-e8c0ca8ebcb6": {
      "content": "| first",
      "doc": "Array filter: first",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter first",
      "matches": {
        "first": true
      }
    },
    "26f52e36-b940-3886-9ab8-1f3671fec9ae": {
      "content": "${1:obj}.removeClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remc": true
      }
    },
    "26f62bb2-137f-3db9-958f-18d869235983": {
      "content": "import React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassExportComponent",
      "matches": {
        "rce": true
      }
    },
    "2703bdd2-d9d9-3fdd-bf05-4c1736d2360c": {
      "content": "{\n\t\"type\": \"collection\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema collections dropdown",
      "matches": {
        "_collections": true
      }
    },
    "2707df22-ca1d-3ac2-a99d-e6e07ee57731": {
      "content": "var ${1:#:NAME}: ${2:#:TYPE} = ${0:#:TARGET};",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "var NAME: TYPE = expr;",
      "matches": {
        "var-with-type": true
      }
    },
    "2709b31f-3330-3264-9904-eae62106e908": {
      "content": "delay(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      }
    },
    "2718568d-a5da-32cd-9f3e-38e12a72bafc": {
      "content": "foreach(${1:i}, ${2:elem}; ${3:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fei": true
      }
    },
    "271b7bed-7b68-3694-bf9e-4c79451a4f93": {
      "content": "outline: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      }
    },
    "27220db6-b341-3567-9211-4606ebb51b95": {
      "content": "if ($1) {\n  $0\n}",
      "doc": "Insert an if statement.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "272491bb-1056-3d9f-9cf2-6666162abcff": {
      "content": "let ${1:x} = ${2:\"hello\"}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "variable",
      "matches": {
        "l": true,
        "let": true,
        "var": true
      }
    },
    "27268b2c-aba9-3566-87a4-bd55aece8f4e": {
      "content": "# Execute resource\nexecute ${1:\"command to execute\"} do # The command to execute\n\t${2:#}creates ${3:nil} # A file this command creates - if the file exists, the command will not be run.\n\t${4:#}cwd ${5:nil} # Current working directory to run the command from.\n\t${6:#}environment ${7:nil} # A hash of environment variables to set before running this command.\n\t${8:#}group ${9:nil} # A group name or group ID that we should change to before running this command.\n\t${10:#}path ${11:nil} # An array of paths to use when searching for the command. Nil uses system path.\n\t${12:#}returns ${13:0} # The return value of the command - this resource raises an exception if the return value does not match.\n\t${14:#}timeout ${15:nil} # How many seconds to let the command run before timing it out.\n\t${16:#}user ${17:nil} # A user name or user ID that we should change to before running this command.\n\t${18:#}umask ${19:nil} # Umask for files created by the command\n\n\t${20:#}${21:action :run} # Run this command (Default)\n\t${22:#}${0:action :nothing} # Do not run this command\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "execute": true
      }
    },
    "272893b2-c8da-3c6d-9615-9baa66451349": {
      "content": "border-style: wave",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:w": true
      }
    },
    "273205a8-52b1-3aa8-aeec-6bc9b718276d": {
      "content": "import ${1:std.stdio};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "import (imp)",
      "matches": {
        "imp": true
      }
    },
    "273a1b7a-1f95-33da-81ed-29a12cf2e042": {
      "content": "return $0",
      "doc": "return value",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "rt": true
      }
    },
    "273e468c-5bb2-34d2-b9dc-7774dc4287ab": {
      "content": "font-smooth auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      }
    },
    "2743af7d-7578-3083-8063-f6642e002f54": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "do { ... } while (condition)",
      "matches": {
        "do": true
      }
    },
    "274649ca-63ca-3007-bf4e-2ea32081323a": {
      "content": "stop();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      }
    },
    "27584db2-f477-3671-8e08-5c9bf693ca03": {
      "content": "begin\n\t$1\nrescue => exception\n\t\nensure\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Exception block with ensure",
      "matches": {
        "begin ensure": true
      }
    },
    "275b9c4a-cee6-327d-be3d-0e18e0ccd008": {
      "content": "for ${1:value} ∈ ${2:iterable}\n\t$0\nend",
      "doc": "Code snippet to iterate each element.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "foreach",
      "matches": {
        "foreach": true,
        "forin": true
      }
    },
    "275d58c8-9bac-3ac9-b25f-6237afa77c40": {
      "content": "#![feature(${1})]",
      "doc": "#![feature(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "feature",
      "matches": {
        "feature": true
      }
    },
    "2761909b-9cd0-3f94-a199-56b17e249fae": {
      "content": "#ifndef $1\n#define ${1:#:SYMBOL}\n#endif${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifndef ... #define ... #endif",
      "matches": {
        "#ifndef": true,
        "ifndef": true
      }
    },
    "2763b363-6c07-38d4-9b8c-052e110f8cb3": {
      "content": "| upcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "upcase": true
      }
    },
    "27694b5c-5d59-3557-80e5-b94c5b627edd": {
      "content": "for (${4:size_t} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "for (for)",
      "matches": {
        "for": true
      }
    },
    "276b0bfd-87c2-3800-ac71-024118d02dcd": {
      "content": "text-decoration: underline;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-decoration: underline",
      "matches": {
        "tdu": true
      }
    },
    "2770fa79-4d83-378b-a9a8-78cbb9064e30": {
      "content": "var tests = []struct {\n    name string\n    expected string\n    given string\n}{\n    {\"${2}\", \"${3}\", \"${4}\",},\n}\nfor _, tt := range tests {\n    tt := tt\n    t.Run(tt.name, func(t *testing.T){\n        actual := ${1:Function}(tt.given)\n        if actual != tt.expected {\n            t.Errorf(\"given(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n        }\n    })\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var test = {...}{...} for {t.Run(){...}}",
      "matches": {
        "testtable": true
      }
    },
    "27799dd2-50d3-3eba-abe4-8a0e68bba2c3": {
      "content": "${1:component}(:${1:propName}=\"${0}\")",
      "doc": "component element with props",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Component with Props Binding",
      "matches": {
        "vel-props": true
      }
    },
    "277a3a61-3deb-3a1b-8a52-8f19c904c83a": {
      "content": "Wait Until Element Contains    ${1:${locator}}    ${2:${text}}    ${3:${timeout=None}}    ${4:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Contains",
      "matches": {
        "wuec": true
      }
    },
    "277bf55a-ae86-3465-9e71-0c9b57a1d124": {
      "content": "GridView.builder(\n  gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(\n    crossAxisCount: ${1:2},\n  ),\n  itemCount: ${2:2},\n  itemBuilder: (BuildContext context, int index) {\n    return ${3:};\n  },\n),",
      "doc": "Creates a scrollable, 2D array of widgets that are created on demand. Providing a non-null `itemCount` improves the ability of the [GridView] to estimate the maximum scroll extent.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "GridView.Builder",
      "matches": {
        "gridViewB": true
      }
    },
    "277e9397-fdb6-3999-9919-a221a61f12c1": {
      "content": "@info \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      }
    },
    "2784733f-ae47-324e-8221-04f901d3d51d": {
      "content": "\\\\lim_{${1:n \\\\to \\\\infty}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\lim_{}",
      "matches": {
        "lim": true
      }
    },
    "2787ea02-8c6c-3fe1-97c4-0bbfdf622ff9": {
      "content": "package ${1:PackageName}",
      "doc": "Package statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "package",
      "matches": {
        "package": true
      }
    },
    "278b6c2c-7f9d-3d6f-b523-8ce5d76374bb": {
      "content": "align-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      }
    },
    "27922047-b23c-345d-9d1f-3167df681707": {
      "content": "expression()",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "27953ec1-a5e5-3948-aebf-7777a0678da9": {
      "content": "(defmethod ${1:multifn} \"${2:doc-string}\" ${3:dispatch-val} [${4:args}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      }
    },
    "279ecac6-2232-3ded-b3cb-c9571e2c5a61": {
      "content": "new Vue({\n\t$1\n})",
      "doc": "new Vue()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vue",
      "matches": {
        "newVue": true
      }
    },
    "27a04ae1-585e-3234-803c-56711c7789d3": {
      "content": "font-stretch: expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      }
    },
    "27a2927b-3344-38dd-b669-cdf09312e133": {
      "content": "<area shape=\"poly\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:p": true
      }
    },
    "27a5f804-ec85-3490-b590-eef88c980505": {
      "content": "margin: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      }
    },
    "27a8d524-9050-3282-b26c-080d86520b13": {
      "content": "import Html exposing (Html)\n\n\ntype alias Model =\n\t{}\n\n\ntype Msg\n\t= Noop\n\n\nmain : Program Never Model Msg\nmain =\n\tHtml.program\n\t\t{ init = init\n\t\t, view = view\n\t\t, update = update\n\t\t, subscriptions = subscriptions\n\t\t}\n\n\ninit : ( Model, Cmd Msg )\ninit =\n\t{} ! []\n\n\nupdate : Msg -> Model -> ( Model, Cmd Msg )\nupdate msg model =\n\tcase msg of\n\t\tNoop ->\n\t\t\tmodel ! []\n\n\nsubscriptions : Model -> Sub Msg\nsubscriptions model =\n\tSub.none\n\n\nview : Model -> Html Msg\nview model =\n\tHtml.text \"Hello, sailor!\"",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "Elm 0.18 program",
      "matches": {
        "program": true
      }
    },
    "27aa8732-fc8c-3152-9b39-b308026953a8": {
      "content": "from IPython import embed; embed()$0",
      "doc": "",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "IPython set trace",
      "matches": {
        "ipydb": true
      }
    },
    "27b04714-8e3b-318a-acd0-183a6b92c9b3": {
      "content": "${1:name} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=>": true
      }
    },
    "27b0ce51-e757-342f-8f3f-8fc4c33479d8": {
      "content": "&#x2318;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmd": true
      }
    },
    "27b584c6-6355-3e69-af59-5ea5e84e5a52": {
      "content": "grid-template-areas: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      }
    },
    "27b84929-dc7f-3bd1-b384-3c18e75a6222": {
      "content": "${1:cond} ? ${2:true} : ${3:false}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "ternary",
      "matches": {
        "te": true
      }
    },
    "27bbfcdf-fe8d-31bc-a41d-942302494558": {
      "content": "useDebugValue(${1:value});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useDebugValue",
      "matches": {
        "used": true
      }
    },
    "27bcfc4b-7660-399e-9cbc-e4896097b11e": {
      "content": "#!/opt/local/bin/perl\n\nuse strict;\nuse warnings;\n${1}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "perl": true
      }
    },
    "27c0f50e-c435-39c3-8cb9-d1109ccdc7c7": {
      "content": "color: ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "color",
      "matches": {
        "col": true
      }
    },
    "27c700b4-4ef8-31c2-9ad8-dc6e5a4e0f04": {
      "content": "when {\n\tanyOf '${1:anyOf}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenanyOf": true
      }
    },
    "27ca1794-0698-3bff-800f-ca73becddd22": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      }
    },
    "27d09a72-f518-3bf3-8da8-d71ffe2f9ba7": {
      "content": "public int ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+|": true
      }
    },
    "27dcfb5a-cb90-32c7-9830-bef844c7f000": {
      "content": "SHOW TABLES;",
      "doc": "Show tables",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "showt",
      "matches": {
        "showt": true
      }
    },
    "27dd52d1-df47-334d-9a54-2f7442e7e8e6": {
      "content": "${1:term}\n  ~  ${2:definition}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::": true
      }
    },
    "27e16879-7c99-3f3e-9273-887c77fe5c5e": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "27e246f1-af5f-369e-b571-3b704174e88a": {
      "content": "font-emphasize-style dot",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      }
    },
    "27e6deda-1f7c-3862-bfb4-5b4af023f8bd": {
      "content": "<h1>${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1": true
      }
    },
    "27e9e066-4888-30aa-b015-e7632549eab6": {
      "content": "<tt>${1}</tt>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "27f320f9-2f6b-36fa-9377-624f5cc6e7a0": {
      "content": "const [${2:propertyName}] = ${1:arrayToDestruct};",
      "doc": "Creates and assigns a local variable using array destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingArray",
      "matches": {
        "dar": true
      }
    },
    "27f85b03-cee1-374f-98e9-a494dbc4ffc3": {
      "content": "else {\n\t${1}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "27f86a36-103a-37fd-8589-5b646ed47d5d": {
      "content": "@else if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "27f9c7ec-cf90-3582-9f21-ec53c33a5352": {
      "content": "echo CHtml::textField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhtf": true
      }
    },
    "27fee264-b673-32a7-9d50-147e36b9ce0a": {
      "content": "vertical-align: sub;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      }
    },
    "27ff24d6-5360-30ec-83b8-278e8cf66c84": {
      "content": "validation_errors();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_validation_errors": true
      }
    },
    "28038f9e-517b-3976-86c2-adc3f3cf9462": {
      "content": "_.sortedIndexBy(${array}, ${value}, ${iteratee})",
      "doc": "var objects = [{ 'x': 4 }, { 'x': 5 }];\n\n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.sortedIndexBy(objects, { 'x': 4 }, 'x');\n// => 0\n\nThis method is like `_.sortedIndex` except that it accepts `iteratee`\nwhich is invoked for `value` and each element of `array` to compute their\nsort ranking. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindexby",
      "matches": {
        "lodash sortedindexby": true
      }
    },
    "2803c13e-9f42-30bb-a6e5-1c606dd9d7ed": {
      "content": "# SCM Resource, Chef::Provider::Git\ngit ${1:\"/destination/path\"} do # Path to clone/checkout/export the source to\n\t${2:#}repository ${3} # URI of the repository\n\t${4:#}revision ${5:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${6:#}reference ${7} # (Git only) alias for revision\n\t${8:#}user ${9:nil} # System user to own the checked out code\n\t${10:#}group ${11:nil} # System group to own the checked out code\n\t${12:#}depth ${13:nil} # (Git only) Number of past revisions to include in Git shallow clone\n\t${14:#}enable_submodules ${15:\"false\"} # (Git only) performs a submodule init and submodule update\n\t${16:#}remote ${17:\"origin\"} # (Git only) remote repository to use for syncing an existing clone\n\t${18:#}ssh_wrapper ${19} # (Git only) path to a wrapper script for running SSH with git. GIT_SSH environment variable is set to this.\n\n\t${20:#}${21:action :sync} # Update the source to the specified revision, or get a new clone (Default)\n\t${22:#}${23:action :checkout} # Clone the source. Does nothing if a checkout is available\n\t${24:#}${0:action :export} # Export the source, excluding or removing any version control artifacts\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "git": true
      }
    },
    "2803d000-a4a0-3498-b60c-9b902482b43b": {
      "content": "self.assertNotEqual(${1:expected}, ${2:actual}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert not equal",
      "matches": {
        "asne": true
      }
    },
    "2805e2e4-4228-3717-a4bc-9e443a12c054": {
      "content": "#ifndef ${1:#:SYMBOL}\n    #define $1\n\n    ${0:TARGET}\n#endif /* end of include guard */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifndef ... #define ... #endif",
      "matches": {
        "include-guard": true,
        "once": true
      }
    },
    "280cd345-a572-3c7c-aad0-ecdf4ba83736": {
      "content": "| asset_img_url: '${1:medium}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asset_img_url": true
      }
    },
    "28153183-bed2-3061-a5fc-4a507946c249": {
      "content": "parent",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "parent",
      "matches": {
        "parent": true
      }
    },
    "281622f0-aa45-323d-9c2e-3b0e954a1464": {
      "content": "it { is_expected.not_to ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iiexpn": true
      }
    },
    "28184f26-4367-3f18-b984-dd17b7c1334c": {
      "content": "(for/list ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/list",
      "matches": {
        "forl": true
      }
    },
    "281a01ec-85dd-30cd-9b9f-b5d3a00cbe6f": {
      "content": "\\begin{picture}\n\t${1:TARGET}\n\\end{picture}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{picture} \\picture": true,
        "picture": true
      }
    },
    "28235a6e-2bba-3df3-9f66-d49b5e38aa7a": {
      "content": "<b>${1:TARGET}</b>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "2825e96c-b55b-39d3-bc5f-be24501a2c97": {
      "content": "border-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      }
    },
    "28278252-9204-3924-982a-9ef57324607e": {
      "content": "from django.core.urlresolvers import ${1|reverse,reverse_lazy,resolve,get_script_prefix|}",
      "doc": "*Deprecated since version 1.10*\n\nUtility functions.",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "urlresolvers",
      "matches": {
        "iurlresolvers": true
      }
    },
    "2828d710-8bce-360d-a409-99aa94e30dde": {
      "content": "@debug \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@d": true
      }
    },
    "282d6c52-e634-3cf4-9d09-4e45a26a721a": {
      "content": "background-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      }
    },
    "28370e58-4669-35c5-8a4e-1b7dc2e0c23e": {
      "content": "margin-top: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-top: length (margin)",
      "matches": {
        "margin": true
      }
    },
    "283aab73-e46a-3fcd-b6e8-215b75069d87": {
      "content": "redirect_to action: \"${1:show}\", id: ${0:@item}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (action, id)",
      "matches": {
        "reai": true
      }
    },
    "283e65b7-b292-32f7-aeca-33a77e0d2074": {
      "content": "on:${1:eventname}|${2|preventDefault,stopPropagation,passive,capture,once|}={${3:handler}}",
      "doc": "on event w/ modifiers",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-modifiers",
      "matches": {
        "s-on-event-modifiers": true
      }
    },
    "283e73c3-75fb-3043-ac76-4607b62c2fbc": {
      "content": "Execute Async Javascript    ${1:${code line 1}}    ${2:${code line 2}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Execute Async Javascript",
      "matches": {
        "eaj": true
      }
    },
    "283fcf83-23e9-38c3-993e-3f8eba54c88e": {
      "content": "<h5>${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5": true
      }
    },
    "2845b3c3-214e-3106-894b-f40e635a602e": {
      "content": "import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\nconst styles = StyleSheet.create({})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeFunctionalExportComponentWithStyles",
      "matches": {
        "rnfes": true
      }
    },
    "284dfac9-5ad0-3f82-b8f7-b8aa0414a68a": {
      "content": "\\$set dialect\"${2|ans85,bs2000,bs2000-offload,cob370,cob371,cob372,mf,mvs,os390,osvs,vsc21,vsc22,vsc23,vsc24|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "dialect",
      "matches": {
        "$set": true
      }
    },
    "2852bf47-d223-3019-a92f-a33f788747f4": {
      "content": "def dispatch(self, request, *args, **kwargs):\r\n    return super(${1:CLASS_NAME}, self).dispatch(request, *args, **kwargs)",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "dispatch",
      "matches": {
        "dispatch": true
      }
    },
    "2857d046-d02b-3375-87cc-7abb296219a0": {
      "content": "align-self last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      }
    },
    "285af017-277d-313d-8b65-b26878ffaae0": {
      "content": "Page Should Not Contain Radio Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Radio Button",
      "matches": {
        "psncrb": true
      }
    },
    "285ba303-a94e-30a3-bf99-3efe6dcec2bc": {
      "content": "LOGGER.info(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      }
    },
    "2860ae66-9966-313f-9200-62fc363b2d50": {
      "content": "enum ${1:Name} {\n\n\tcase $0\n}",
      "doc": "enum declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "286271f5-3ba7-3362-8282-3f0b8cf1b43c": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}}, ${7:value = ${8:FALSE}}, ${9:fixed = ${10:TRUE}})",
      "doc": "Grep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grep2",
      "matches": {
        "grep": true
      }
    },
    "28665ecc-94a5-3fda-816c-ef5a70a26ac7": {
      "content": "func main() {\n\t$1\n}",
      "doc": "Snippet for main function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "main function",
      "matches": {
        "fmain": true
      }
    },
    "286e26c9-ce84-336e-b4ff-050a6eca9671": {
      "content": "class ${1:ClassName}(${2:object}):\n\t\"\"\"${3:docstring for $1.}\"\"\"\n\tdef __init__(self, ${4:arg}):\n\t\t${5:super($1, self).__init__()}\n\t\tself.arg = arg\n\t\t$0",
      "doc": "Code snippet for a class definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New class",
      "matches": {
        "classi": true
      }
    },
    "2870d4c0-170a-3a37-82f3-e0edce0ad66a": {
      "content": "<c:set var=\"${1}\">${2:item1,item2,item3}</c:set>\n<c:forTokens var=\"${3}\" items=\"\\${$1}\" delims=\"${4:,}\">\n\t${0:<c:out value=\"$3\" />}\n</c:forTokens>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfort": true
      }
    },
    "287306ab-ab8a-3cf1-a7ab-75a1058cb778": {
      "content": "empty-cells: show",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      }
    },
    "28775159-912f-39be-b751-0a8dcadb956b": {
      "content": "updated() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "updated",
      "matches": {
        "updated": true
      }
    },
    "2880ea55-9e22-3af2-a448-adec6f857406": {
      "content": "font-variant: small-caps",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      }
    },
    "288579fc-2853-3b4a-a7f7-ce8db19dd5aa": {
      "content": "_.parseInt(${string}, ${radix})",
      "doc": "_.parseInt('08');\n// => 8\n\n_.map(['6', '08', '10'], _.parseInt);\n// => [6, 8, 10]\n\nConverts `string` to an integer of the specified radix. If `radix` is\n`undefined` or `0`, a `radix` of `10` is used unless `value` is a\nhexadecimal, in which case a `radix` of `16` is used.\n\n**Note:** This method aligns with the\n[ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-parseint",
      "matches": {
        "lodash parseint": true
      }
    },
    "28877ce7-60dd-3003-90c3-9a96661342b7": {
      "content": "const $1 = useContext($2)$0",
      "doc": "React useContext() hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useContext",
      "matches": {
        "uc": true
      }
    },
    "28882989-5df0-31a9-b0d5-5dc5c7012d10": {
      "content": "| escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "escape": true
      }
    },
    "2896a6b2-fb04-3042-860e-48d3c7ecb958": {
      "content": ".gt.",
      "doc": "Greater Than",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "gt",
      "matches": {
        "gt": true
      }
    },
    "28980b0f-e4b8-32c9-b5ec-c62d49927ead": {
      "content": "pragma solidity >=0.5.0 <0.8.0;",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "pragma solidity example",
      "matches": {
        "pragm-ex": true
      }
    },
    "28a6fa81-b1e8-3c08-8c61-65731a3c85cb": {
      "content": "border-style outset",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      }
    },
    "28ad3698-8d6e-390a-9674-18a125c57794": {
      "content": "${pageContext.request.contextPath}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cpath": true
      }
    },
    "28b1f28a-cc25-3593-a57c-f06dbe1f25fc": {
      "content": "let ${1:name} = (${2}) => ${0}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "inline functin",
      "matches": {
        "fn": true
      }
    },
    "28b7f04c-695b-3f02-8f9f-a3f02bb7987b": {
      "content": "height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      }
    },
    "28c0dc60-7db5-3cb6-9dc1-bd1a5dc9fe3a": {
      "content": "border-top-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      }
    },
    "28c12ed9-6baa-36f7-8445-3a2cb84353ff": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n\t${3}\n} finally {\n\t${4}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcf": true
      }
    },
    "28c3cbe8-bb12-355a-928c-14bf75d7882d": {
      "content": "background-color: ${0:#fff};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-color",
      "matches": {
        "bgc": true
      }
    },
    "28c41beb-a867-37cb-832a-5d26ccbbadaa": {
      "content": "{% trans %}$0{% endtrans %}",
      "doc": "trans",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "trans",
      "matches": {
        "trans": true
      }
    },
    "28cc273e-66e7-3e17-a19d-7a17b67c78f2": {
      "content": "if (${1:true}) {${0}}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "28e26ece-82ea-38d1-b197-21c8d3c4f32f": {
      "content": "asin(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asin": true
      }
    },
    "28e78f41-edce-3713-b2a5-f9fec4b2968d": {
      "content": "cancel \"$1\"\n$0",
      "doc": "CANCEL literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "cancel",
      "matches": {
        "cancel": true
      }
    },
    "28e7b113-3386-3bb7-9262-df4326fbd68a": {
      "content": "{\n\t:f${0}\n}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eventsmap": true
      }
    },
    "28ed0eff-1f86-38a4-bb05-5c6f5eab0891": {
      "content": "\\\\rightarrow {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "rightarrow",
      "matches": {
        "ra": true
      }
    },
    "28eeb1e2-8457-3ada-bd71-23c9ec18d599": {
      "content": "if (${1:/* condition */}) ${2};",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      }
    },
    "29007b27-504b-3274-b071-2f9de65790e5": {
      "content": "{% else %}\n\t${1}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "29015d8d-342f-3aa0-845f-e5035adcbe31": {
      "content": "_.matches(${source})",
      "doc": "var objects = [\n  { 'a': 1, 'b': 2, 'c': 3 },\n  { 'a': 4, 'b': 5, 'c': 6 }\n];\n\n_.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n// => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\nCreates a function that performs a partial deep comparison between a given\nobject and `source`, returning `true` if the given object has equivalent\nproperty values, else `false`.\n\n**Note:** The created function is equivalent to `_.isMatch` with `source`\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-matches",
      "matches": {
        "lodash matches": true
      }
    },
    "2904b35f-1d06-3219-a9bd-cd036ee234a9": {
      "content": "v-pre",
      "doc": "Does not expect expression",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-pre",
      "matches": {
        "vPre": true
      }
    },
    "29076be1-a496-3213-ad37-e2559208db04": {
      "content": "until ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      }
    },
    "2908569b-5e2a-39f2-8f5d-e70f522a5363": {
      "content": "background-position: ${1:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-position:  position (background)",
      "matches": {
        "background": true
      }
    },
    "290b1ee0-ba6e-3865-ad23-05d6710c2b89": {
      "content": "${1:FIELDNAME} = models.SlugField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SlugField",
      "matches": {
        "mslug": true
      }
    },
    "290faad6-edcd-3937-8928-0858350eb3a9": {
      "content": "Marshal.load(Marshal.dump(${1:obj_to_copy}))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deec": true
      }
    },
    "290fbe6e-2bb4-395f-a524-705d4661aed3": {
      "content": "repeat while ${1:#:condition}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "repwh": true
      }
    },
    "2923283e-55bd-318d-b1ce-73c1e6045a30": {
      "content": "grid ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      }
    },
    "2929f98a-b0ec-348b-b6c7-fef098768c5e": {
      "content": "justify-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      }
    },
    "293f2079-4c25-315a-b35c-0e1197a690bc": {
      "content": "version(${1:/*version name*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "version (version)",
      "matches": {
        "version": true
      }
    },
    "2942491e-caf7-3fce-8b85-a26f800a9eee": {
      "content": "fetch(${1:name}) { |${2:key}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fet": true
      }
    },
    "294b8933-c310-3e6b-b747-536304e48fe9": {
      "content": "{% import '${1:#:module}' as ${2:#:namespace} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% import '...' as ... %}",
      "matches": {
        "import": true
      }
    },
    "295175f5-166c-3819-9219-913ebb1eb3b0": {
      "content": "_.reduce(${collection}, ${iteratee}, ${accumulator})",
      "doc": "_.reduce([1, 2], function(sum, n) {\n  return sum + n;\n}, 0);\n// => 3\n\n_.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n  return result;\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\nReduces `collection` to a value which is the accumulated result of running\neach element in `collection` thru `iteratee`, where each successive\ninvocation is supplied the return value of the previous. If `accumulator`\nis not given, the first element of `collection` is used as the initial\nvalue. The iteratee is invoked with four arguments:\n(accumulator, value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.reduce`, `_.reduceRight`, and `_.transform`.\n\nThe guarded methods are:\n`assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\nand `sortBy`",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reduce",
      "matches": {
        "lodash reduce": true
      }
    },
    "29558822-858e-3330-af49-fc679d55cc0c": {
      "content": "~w($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "word list",
      "matches": {
        "wl": true
      }
    },
    "295af8fb-c8c5-3ec4-820f-7822c7499333": {
      "content": ".footnote:[${1:footnotetext}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "footnote",
      "matches": {
        "footnote": true
      }
    },
    "295d48ce-56cf-3f3a-9841-51789bedf54f": {
      "content": "ceil($1)$0",
      "doc": "ceil",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "ceil",
      "matches": {
        "ceil": true
      }
    },
    "295e2700-4650-31c5-bb00-a108638731f4": {
      "content": "@appear='$1'$0",
      "doc": "@appear=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "appear",
      "matches": {
        "appearEvent": true
      }
    },
    "29671e33-ea17-31b7-b68a-3cda52a5885b": {
      "content": "from .models import $1",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "fmi",
      "matches": {
        "fmi": true
      }
    },
    "296be9f7-de67-3e01-a0af-2ce7593ab31c": {
      "content": "type ${1} = ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "296c03bf-f7ca-3684-87a2-019ab9374e1b": {
      "content": "place-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      }
    },
    "2972307d-98ed-3932-9a14-37b5eb4b8e3b": {
      "content": "text-height: max-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      }
    },
    "2973b9c3-e4fc-368b-8373-145366de0d80": {
      "content": "${1:deferred}.isResolved()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disres": true
      }
    },
    "29773707-df0a-3f6e-9985-15171aa44088": {
      "content": "def __enter__(self):\n\t${1:pass}\n\ndef __exit__(self, exc_type, exc_value, traceback):\n\t${2:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "context manager methods",
      "matches": {
        "context": true
      }
    },
    "297ba93a-f7d7-3905-92ed-0d888d48a50d": {
      "content": "getDefaultProps: ->\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define getDefaultProps",
      "matches": {
        "getDefaultProps": true
      }
    },
    "29801e94-5459-34ea-a974-9a46674c442e": {
      "content": "font-weight: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-weight: normal",
      "matches": {
        "fwn": true
      }
    },
    "2980b251-773a-342a-8201-ae040df8a730": {
      "content": "@selector(${1:method}}",
      "doc": "Create a @selector",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "@selector",
      "matches": {
        "@selector": true
      }
    },
    "29829dc4-792a-3faa-87b5-1aed43da7c41": {
      "content": "{% extends \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig extends",
      "matches": {
        "ext": true
      }
    },
    "2988fc45-e9f7-3d88-b405-a4f7168df0a0": {
      "content": "#[derive(Debug)]\nenum ${1:Name} {\n    ${2:Variant1},\n    ${3:Variant2},\n}",
      "doc": "enum … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "29914b2e-446a-34a6-8c2c-8bcd8e1e1aac": {
      "content": "\\begin{itemize}\n\t\\item ${1:TARGET}\n\\end{itemize}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{itemize} \\itemize": true,
        "itemize": true
      }
    },
    "29949be6-d619-38e6-b1a3-037b9e632690": {
      "content": "void keyTyped(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyTyped": true
      }
    },
    "299b88c6-ea79-344f-8b23-107d41ce227b": {
      "content": "align-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      }
    },
    "299e7baf-639e-3f4d-a981-95b1d794950d": {
      "content": "#!/usr/bin/env zsh\n$0",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "#!/usr/bin/env zsh",
      "matches": {
        "#!": true
      }
    },
    "299fefc7-6c2b-3e1a-92b0-0546f35d5bf3": {
      "content": "<%= stylesheet_link_tag \"${0}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sslt": true
      }
    },
    "29a75c49-84ff-3b2f-8f61-fc7d2c96f5f2": {
      "content": "random($1)$0",
      "doc": "random",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "random",
      "matches": {
        "random": true
      }
    },
    "29ab7764-2704-3505-b74d-4a96f965e2a5": {
      "content": "${1:Title}\n-----${2:-}\n${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      }
    },
    "29ae6bc7-9c0b-37f4-89ab-667af5e5e699": {
      "content": "// execute a display list\ngl.glCallList(${0:list});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl call list",
      "matches": {
        "gl": true
      }
    },
    "29b45260-ff1f-3aaa-a151-a29ab9b2b4b8": {
      "content": "import Vue from 'vue';\nimport VueRouter from 'vue-router';\n\nVue.use(VueRouter);\n\nexport const router = new VueRouter({\n\tbase: '/',\n\tmode: 'history',\n\troutes: [\n\t\t{ path: '/path', component: component }\n\t]\n});",
      "doc": "Base for Vue Router",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router",
      "matches": {
        "vrouter": true
      }
    },
    "29b8d1b6-82a6-3c8f-bd58-2b5793cafc62": {
      "content": "{% if $1 %}$2{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iif": true
      }
    },
    "29bdbae8-621a-3d05-818e-5ec6b7294277": {
      "content": "justify-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      }
    },
    "29beea31-3509-3ccc-91f8-50f1ac85e1d2": {
      "content": "router.beforeResolve((to, from, next) => {\n\t${1:next();}\n});",
      "doc": "Vue Router global guards beforeResolve",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeResolve",
      "matches": {
        "vbeforeresolve": true
      }
    },
    "29ce56c8-aac4-3f0f-859b-f6e7c794fa85": {
      "content": "Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lorem": true
      }
    },
    "29d2eb0b-33ba-3c0e-8ff3-d87f500820c1": {
      "content": "alias_method_chain :${1:method_name}, :${0:feature}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amc": true
      }
    },
    "29dbf9e2-2eaf-345b-bd89-b81933972faf": {
      "content": "return(${1:code})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "ret": true
      }
    },
    "29e41b44-6751-3606-98e4-bf1278aca9d0": {
      "content": "(for/sum ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/sum",
      "matches": {
        "fors": true
      }
    },
    "29e61923-71c7-3a22-930b-bf0c49f71c6c": {
      "content": "procedure ${1}(${2}) is\n\t${3}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure",
      "matches": {
        "proc": true
      }
    },
    "29e8b148-9544-3003-96ac-4d79bc0428c0": {
      "content": "case ${1:/*value*/}:\n\t$2\n\tbreak;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "case (case)",
      "matches": {
        "case": true
      }
    },
    "29e8d465-7236-336b-b394-4050adbd1e11": {
      "content": "<%= content_tag '${1:DIV}', ${2:content}${0:,options} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      }
    },
    "29f31cd9-7091-3320-b8a2-703b62782f2d": {
      "content": "justify-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      }
    },
    "29f5a23c-b81f-39c1-8202-b1723c438bc8": {
      "content": "<div>\n\t$1\n</div>",
      "doc": "HTML - Defines a section in a document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "div",
      "matches": {
        "div": true
      }
    },
    "2a01a651-a611-3cb8-951b-df0ccc6b3d4a": {
      "content": "if ${1:#:condition} then ${2:#:value} else ${3:#:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      }
    },
    "2a02ec3e-68bd-3d07-8088-ef0e2727f764": {
      "content": "border-bottom-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      }
    },
    "2a0abd4d-9d64-339e-8696-62a036218024": {
      "content": "rel=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rel": true
      }
    },
    "2a0c16ce-93dd-3f53-85dd-edf8bba9121c": {
      "content": "<menu>\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu": true
      }
    },
    "2a0e2f87-ce2d-36f5-9b87-e31d962a7f1c": {
      "content": "{${1:key}: ${2:value} for ${3:key}, ${4:value} in ${5:iterable}}$0",
      "doc": "Handy and faster way to create dictories based on existing dictionaries.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Dictionary comprehension",
      "matches": {
        "dc": true
      }
    },
    "2a14a38c-e61d-39f6-80f4-c0e2ea536cca": {
      "content": "$this->shouldReturnAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldReturnAnInstanceOf('Type')",
      "matches": {
        "srinstance": true
      }
    },
    "2a164545-8f50-32e3-a6df-c4dedb3d287d": {
      "content": "function char(${1:integer})$0",
      "doc": "function character in the ordinal position specified by integer, from the current alphanumeric collating sequence",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-char",
      "matches": {
        "function char": true
      }
    },
    "2a173fc5-ac82-309b-8516-6b5e3da5b42a": {
      "content": "| ${1:Column1}    | ${2:Column2}    | ${3:Column3}    |\n|---------------- | --------------- | --------------- |\n| ${4:Item1.1}    | ${5:Item2.1}    | ${6:Item3.1}    |\n| ${7:Item1.2}    | ${8:Item2.2}    | ${9:Item3.2}    |\n${0}",
      "doc": "Insert table with 3 rows and 3 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 3x3 table",
      "matches": {
        "3x3table": true
      }
    },
    "2a1831b4-64fc-3f96-8069-7c267e9dfb6c": {
      "content": "border-top: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      }
    },
    "2a1b3c7e-ab6f-32f7-9723-6de61ea9b42f": {
      "content": "for ${1:i}=${2:1},${3:10} do\n\t${0:print(i)}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "2a1ce994-7503-3444-af64-552657a3f8ea": {
      "content": "expect($0)",
      "doc": "expect actual value",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect",
      "matches": {
        "exp": true,
        "jest expect": true
      }
    },
    "2a1d6603-8b0b-3f24-a5aa-81e666020d73": {
      "content": "state = {\n\t${1}: ${2},\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      }
    },
    "2a1ec275-f95e-39cc-a5ce-d8a9b9be4bcc": {
      "content": "#include \"${1}.h\"${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc2, #include2": true,
        "inc2": true
      }
    },
    "2a1f1ae8-92a8-3993-be7b-7e8b85beb977": {
      "content": "white-space-collapse: keep-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      }
    },
    "2a26c0a4-4c1c-384c-8913-fc99085a9ab0": {
      "content": "HashSet${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hset": true
      }
    },
    "2a2d6f39-687d-322a-b8c7-ad0667795327": {
      "content": "<% $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "%",
      "matches": {
        "%": true
      }
    },
    "2a2fe78c-b1b4-3d35-bc2e-a78ea18fbb82": {
      "content": "{\n\t\"type\": \"image_picker\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\"\n},$3",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema image picker",
      "matches": {
        "_image_picker": true
      }
    },
    "2a31e2ec-5d03-3e88-8b41-7c3c9eeedbe9": {
      "content": "const ${1:name} = ${2:value};",
      "doc": "const assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "const-assignment",
      "matches": {
        "base const": true
      }
    },
    "2a3ba680-687c-33af-8976-ab0130911b4d": {
      "content": "- [ ] ${1:task}",
      "doc": "task",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "task",
      "matches": {
        "task": true
      }
    },
    "2a3c548c-d264-347b-aca5-3b995759609b": {
      "content": "{% ifequal ${1} ${2} %}\n\t${0}\n{% endifequal %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      }
    },
    "2a3e5cef-264b-33d2-9dbb-1f55ad72bd42": {
      "content": "unloadMovie(${1:#:target});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "um": true
      }
    },
    "2a53a502-77fd-3c13-acf1-f1ee978fa94a": {
      "content": "using $0",
      "doc": "Code snippet for using a package.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "using",
      "matches": {
        "us": true,
        "using": true
      }
    },
    "2a566d2a-bb4d-3da3-b03a-2b107406bf73": {
      "content": "{% ssi ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      }
    },
    "2a60d6f9-ca47-3a09-9cc3-5e4d1f01b38c": {
      "content": "table-layout: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      }
    },
    "2a6473b9-fb91-3046-baeb-da3a7f8df55a": {
      "content": "/**\n * ${3:#:undocumented constant}\n **/\ndefine(${1} ${2});${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_constant": true
      }
    },
    "2a6a3e5e-4e27-39d1-89c6-eeb7d940aa6b": {
      "content": "${1:obj}.mouseover (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mover": true
      }
    },
    "2a6bd005-f2c3-344a-a8b0-244259265205": {
      "content": "init${1:#:?}(${2:#:arguments}) {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      }
    },
    "2a704d15-095f-34bb-86b2-2b90cbb02904": {
      "content": "font-effect ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      }
    },
    "2a70ce36-e175-3f21-8707-26e2e0320aa2": {
      "content": "checkEvents() {\n\tthis.router.events.subscribe(event => {\n\t\tswitch (true) {\n\t\t\tcase event instanceof ${1:eventName}:\n\t\t\t\t$0\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n}",
      "doc": "Angular Router Events",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Router Events",
      "matches": {
        "a-router-events": true
      }
    },
    "2a730184-7694-31cb-ac4c-a9352d307ca9": {
      "content": "{% pullquote %}\n${1:text} {\" ${2:quote} \"} ${0:text}\n{% endpullquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pullquote": true
      }
    },
    "2a734476-4a0d-3fb5-a058-112bffee8880": {
      "content": "place-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      }
    },
    "2a7aa78d-c894-3dec-a9ee-f834291eb32f": {
      "content": "${1:obj}.serializeArray()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serializea": true
      }
    },
    "2a86503b-9068-3651-8a74-3d206662d06f": {
      "content": "border-corner-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      }
    },
    "2a8a50c1-98aa-3d24-b7a1-95c929ae71ec": {
      "content": "<label for=\"$1\">$2</label>$3",
      "doc": "HTML - Defines an inline window",
      "filetype": "html",
      "grammar": "lsp",
      "label": "label",
      "matches": {
        "label": true
      }
    },
    "2a8f1035-a7ca-333b-9724-448023a3e926": {
      "content": "border-bottom-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      }
    },
    "2aa13b0c-bf7f-321a-942d-10b34f2ed740": {
      "content": "integer, dimension(${1}), intent(out) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension intent(out)",
      "matches": {
        "indo": true
      }
    },
    "2aa5e89d-693e-3c07-996b-a8ea8b031b81": {
      "content": "use v6;\nuse Test;\n${1:use lib 'lib';}\n\nplan ${2:$num-tests};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "2aa7166c-ead2-3169-87fd-120ab2debf82": {
      "content": "@override\ndynamic noSuchMethod(Invocation invocation) {\n  ${1:}\n}",
      "doc": "This method is invoked when a non-existent method or property is accessed.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "No Such Method",
      "matches": {
        "nosm": true
      }
    },
    "2aae74de-dc21-3fdf-aac3-e9155ec10a24": {
      "content": "use lib qw{ ./t/lib };",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tlib": true
      }
    },
    "2ab1cf17-9571-388a-a641-3d8801e8897c": {
      "content": "text-outline ${1:0} ${2:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      }
    },
    "2ab4e2d0-22d8-3870-81c3-b82870687de1": {
      "content": "_.conforms(${source})",
      "doc": "var objects = [\n  { 'a': 2, 'b': 1 },\n  { 'a': 1, 'b': 2 }\n];\n\n_.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n// => [{ 'a': 1, 'b': 2 }]\n\nCreates a function that invokes the predicate properties of `source` with\nthe corresponding property values of a given object, returning `true` if\nall predicates return truthy, else `false`.\n\n**Note:** The created function is equivalent to `_.conformsTo` with\n`source` partially applied.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-conforms",
      "matches": {
        "lodash conforms": true
      }
    },
    "2ac2455f-892f-3ad4-a049-f07e92a2a5cb": {
      "content": "attrs : { ${1:attr} : '${2:val}' },",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      }
    },
    "2ac4f820-f99b-3b80-bcf6-14161e396507": {
      "content": "${1|this,vm|}.\\$off('${2:event}', ${3:callback})$4",
      "doc": "vm.$off( [event, callback] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$off",
      "matches": {
        "vmOff": true
      }
    },
    "2ac67f1f-8c87-352b-8a23-aa6e42df9a3f": {
      "content": "protected ${1:String} ${2:name};",
      "doc": "Protected field",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Protected field",
      "matches": {
        "protected_field": true
      }
    },
    "2ac6ca77-d9d7-31eb-920d-cb410519c772": {
      "content": "${1:obj}.map(function (${2:index}, ${3:element}) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "2acdef9b-8647-3236-b1e6-ddf388f7f80f": {
      "content": "function midrange(${1:number},${2:...})$0",
      "doc": "statistical midrange value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-midrange",
      "matches": {
        "function midrange": true
      }
    },
    "2ad764ef-fff5-37ae-8338-d0dfc51cf4cd": {
      "content": "wont_equal ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "we": true
      }
    },
    "2ad77ca0-1fa6-391c-abe8-7fa840b0e6e7": {
      "content": "self.assertIn(${1:needle}, ${2:haystack}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert in",
      "matches": {
        "asin": true
      }
    },
    "2aeb9fa3-b7b2-358e-9fe8-abcc88061d95": {
      "content": "border-left-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-style: style (border)",
      "matches": {
        "border": true
      }
    },
    "2aefdd68-3a6b-3c77-b82a-dad6353b545b": {
      "content": "cursor: ${1|auto,default,alias,cell,copy,crosshair,context-menu,help,grab,grabbing,move,none,no-drop,not-allowed,pointer,progress,e-resize,all-scroll,text,wait,vertical-text,zoom-in,zoom-out|};",
      "doc": "initial value: auto",
      "filetype": "css",
      "grammar": "lsp",
      "label": "cursor",
      "matches": {
        "cur": true
      }
    },
    "2af31b59-b452-33f6-be1a-9e71f87a387c": {
      "content": "v-on:${1:event}='${2:handle}'",
      "doc": "Expects: Function | Inline Statement",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-on",
      "matches": {
        "vOn": true
      }
    },
    "2affc383-8e5d-3acd-87e9-3428226e352d": {
      "content": "{# $1 #}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "{#": true
      }
    },
    "2b0069ef-d43e-39f7-bf62-6fb3c154b405": {
      "content": "class ${0:name}Clipper extends CustomClipper<Path> {\n\n  @override\n  Path getClip(Size size) {\n  }\n\n  @override\n  bool shouldReclip(CustomClipper<Path> oldClipper) => false;\n}",
      "doc": "Used for creating custom shapes",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Custom Clipper ",
      "matches": {
        "customClipper": true
      }
    },
    "2b07d044-120c-3317-a74a-fb79816491ba": {
      "content": "{% if ${1:condition} %}\n\t$2\n{% else %}\n\t$0\n{% endif %}",
      "doc": "if ... else",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "ife",
      "matches": {
        "ife": true
      }
    },
    "2b08b7b2-ae40-31e4-9431-1f92c9faf5b7": {
      "content": "| escape }}",
      "doc": "String filter: escape",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter escape",
      "matches": {
        "escape": true
      }
    },
    "2b1b849c-7bcc-3442-8464-ba1baf1ff3af": {
      "content": "throw new $1Exception(\"$2\");",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "throw (thr)",
      "matches": {
        "thr": true
      }
    },
    "2b1ec9ea-5813-3085-bf1d-3a376272d483": {
      "content": "// https://eips.ethereum.org/EIPS/eip-777\r\n// Example implementation https://github.com/0xjac/ERC777/blob/master/contracts/examples/ReferenceToken.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface ERC777Token {\r\n    function name() external view returns (string memory);\r\n    function symbol() external view returns (string memory);\r\n    function totalSupply() external view returns (uint256);\r\n    function balanceOf(address holder) external view returns (uint256);\r\n    function granularity() external view returns (uint256);\r\n\r\n    function defaultOperators() external view returns (address[] memory);\r\n    function isOperatorFor(\r\n        address operator,\r\n        address holder\r\n    ) external view returns (bool);\r\n    function authorizeOperator(address operator) external;\r\n    function revokeOperator(address operator) external;\r\n\r\n    function send(address to, uint256 amount, bytes calldata data) external;\r\n    function operatorSend(\r\n        address from,\r\n        address to,\r\n        uint256 amount,\r\n        bytes calldata data,\r\n        bytes calldata operatorData\r\n    ) external;\r\n\r\n    function burn(uint256 amount, bytes calldata data) external;\r\n    function operatorBurn(\r\n        address from,\r\n        uint256 amount,\r\n        bytes calldata data,\r\n        bytes calldata operatorData\r\n    ) external;\r\n\r\n    event Sent(\r\n        address indexed operator,\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 amount,\r\n        bytes data,\r\n        bytes operatorData\r\n    );\r\n    event Minted(\r\n        address indexed operator,\r\n        address indexed to,\r\n        uint256 amount,\r\n        bytes data,\r\n        bytes operatorData\r\n    );\r\n    event Burned(\r\n        address indexed operator,\r\n        address indexed from,\r\n        uint256 amount,\r\n        bytes data,\r\n        bytes operatorData\r\n    );\r\n    event AuthorizedOperator(\r\n        address indexed operator,\r\n        address indexed holder\r\n    );\r\n    event RevokedOperator(address indexed operator, address indexed holder);\r\n}",
      "doc": "ERC777 token standard, extending ERC20",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc777 interface",
      "matches": {
        "erc777i": true
      }
    },
    "2b2b595b-5c37-3b41-822b-59db8e6cfedc": {
      "content": "type ${1:Type} = ${0:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "2b2c04b5-5454-30ad-9a99-20584e82912f": {
      "content": "~~${1}~~ ${0}",
      "doc": "Insert strikethrough",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert strikethrough",
      "matches": {
        "strikethrough": true
      }
    },
    "2b326476-bb74-38cf-b314-cb487c4d8ad3": {
      "content": "\\\\begin{equation}\n\t\\\\label{eq:${2}}\n${0:${VISUAL}}\n\\\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "Labeled equation environment",
      "matches": {
        "eql": true
      }
    },
    "2b329a5d-1b59-3daa-aba2-6fd3a3322f00": {
      "content": "leave-active-class='$1'$0",
      "doc": "leave-active-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "leave-active-class",
      "matches": {
        "leaveActiveClass": true
      }
    },
    "2b35c33d-8437-34c4-be57-27e3f64468ef": {
      "content": "after_validation :${0:method}",
      "doc": "after_validation",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "After validation",
      "matches": {
        "av": true
      }
    },
    "2b3749c5-4092-3241-8ccb-0d3ea11987fe": {
      "content": "const ${1:name} = computed(() => {\n\treturn ${2}\n})",
      "doc": "Vue Composition api - computed",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Computed",
      "matches": {
        "v3computed": true
      }
    },
    "2b4322f0-7f86-3c48-964e-74c2704c2594": {
      "content": "${1:component}.$set(${2: params});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-set",
      "matches": {
        "svcoms": true,
        "svelte component set": true
      }
    },
    "2b434155-32ca-3f85-b1ae-f30ebe3448eb": {
      "content": "let ${1} = ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "2b44a1f2-bd22-3abe-843b-817985ecf6c0": {
      "content": "# Template resource\ntemplate ${1:\"/path/to/file\"} do # Path to the file\n\t${2:#}cookbook ${3:nil} # Specify the cookbook where the template is located, default is current cookbook\n\t${4:#}source ${5:nil} # Template source file. Found in templates/default for the cookbook\n\t${6:#}variables ${7} # Variables to use in the template\n\t${8:#}local ${9:false} # Is the template already present on the node?\n\t${10:#}backup ${11:5} # How many backups of this file to keep. Set to false if you want no backups.\n\t${12:#}owner ${13} # The owner for the file\n\t${14:#}group ${15} # The group owner of the file (string or id)\n\t${16:#}mode ${17} # The octal mode of the file (4-digit format)\n\t${18:#}content ${19:nil} # A string to write to the file. This will replace any previous content if set\n\n\t${20:#}${21:action :create} # Create the file (Default)\n\t${22:#}${23:action :delete} # Delete this file\n\t${24:#}${0:action :touch} # Touch this file (update the mtime/atime)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      }
    },
    "2b48ffbb-33ee-3a17-87f7-3994840cbabc": {
      "content": "<details${2}>\n    <summary>${1}</summary>\n    ${3}\n</details>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "details": true
      }
    },
    "2b508c7c-f5e4-3dd2-b132-dfd08da895c0": {
      "content": "resize: horizontal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      }
    },
    "2b56bca1-4e45-3f3c-b1cf-1c689429ba96": {
      "content": "left: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      }
    },
    "2b5a22df-fbd1-359e-a971-7eae18c2cd63": {
      "content": "inject",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "inject",
      "matches": {
        "inject": true
      }
    },
    "2b668f7f-2b21-38fe-aafe-e2dcfb41c351": {
      "content": "$routeProvider.when '${1:url}',\n\ttemplateUrl: '${2:templateUrl}'\n\tcontroller: '${3:controller}'\n${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngrw": true
      }
    },
    "2b6cbc23-80e7-3c53-93bd-cb76db64f92c": {
      "content": "step($2, $3)",
      "doc": "float step(float edge, float x)\nvec2 step(vec2 edge, vec2 x)\nvec3 step(vec3 edge, vec3 x)\nvec4 step(vec4 edge, vec4 x)\n\nThe step function returns 0.0 if x is smaller then edge and otherwise 1.0. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nfloat step(float edge, float x)\nvec2 step(float edge, vec2 x)\nvec3 step(float edge, vec3 x)\nvec4 step(float edge, vec4 x)\n\nThere is also a variation of the step function where the edge parameter is always a floating scalar.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "step",
      "matches": {
        "step": true
      }
    },
    "2b70a302-ce58-3fef-bcd4-e48da98851a3": {
      "content": "$.param(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "2b72d7af-7078-3610-8a2c-8ca24f1856c6": {
      "content": "v-else",
      "doc": "Does not expect expression. previous sibling element must have v-if or v-else-if.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-else",
      "matches": {
        "velse": true,
        "vue v-else": true
      }
    },
    "2b75ff3f-10e7-35da-b5f8-976c26c752bb": {
      "content": "typedef ${1:Type} ${2:Name}(${3:params});",
      "doc": "Insert a typedef.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "typedef",
      "matches": {
        "typedef": true
      }
    },
    "2b7a80e6-be2c-34b6-8e05-272b6d822dfa": {
      "content": "{% trans \"${1:string}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      }
    },
    "2b7ff271-e236-3c8b-92ae-6ea9f85e21ec": {
      "content": "while ${1:true} do\n  ${2:TARGET}\ndone",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "while ... do; ... done",
      "matches": {
        "while": true
      }
    },
    "2b83ccdc-6d16-3b37-bd55-90e946b3c0bc": {
      "content": "class ${1:Name} {\n\n\t$0\n}",
      "doc": "class declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "2b8774a4-006a-3458-b546-4c6e3911831b": {
      "content": "${1:FIELDNAME} = serializers.MultipleChoiceField(choices=${2})",
      "doc": "Django-rest Serializers ``MultipleChoiceField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF MultipleChoiceField",
      "matches": {
        "smchoice": true
      }
    },
    "2b88b50a-9bb9-342a-9480-64e350874e5a": {
      "content": "align-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      }
    },
    "2b91767b-73b3-394d-b4eb-ea5a125cb931": {
      "content": "\\$_SERVER['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "server": true
      }
    },
    "2b948414-0234-39bf-b21f-845e5322367f": {
      "content": "offset: ${offset:0}",
      "doc": "For loops option",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag Option offset",
      "matches": {
        "offset": true
      }
    },
    "2b9b0e38-6eb0-3d91-a2dc-db5521e7443f": {
      "content": "Ada.Text_IO.Get(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get",
      "matches": {
        "get": true
      }
    },
    "2ba1664e-db3d-3735-a21f-4d722875f782": {
      "content": "_.forOwn(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).\n\nIterates over own enumerable string keyed properties of an object and\ninvokes `iteratee` for each property. The iteratee is invoked with three\narguments: (value, key, object). Iteratee functions may exit iteration\nearly by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forown",
      "matches": {
        "lodash forown": true
      }
    },
    "2bae6c21-b3e3-3f59-8fd8-a0295d439df9": {
      "content": "render text: \"${1:text to render...}\", layout: \"${2:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,layout) (rtl)",
      "matches": {
        "rtl": true
      }
    },
    "2baeaf5b-ec1a-3e95-9261-7108c43116f3": {
      "content": "${1:obj}.is('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      }
    },
    "2bb0530a-8b36-3432-9836-d3b41d58b39d": {
      "content": "@doc \"\"\"${0:TARGET}\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "@doc \"\"\"...\"\"\"",
      "matches": {
        "doc": true
      }
    },
    "2bb606ec-0827-37d8-bd20-07e7c97a39d4": {
      "content": "floatformat:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      }
    },
    "2bb94944-5650-3923-a1d8-acb6aa0ec9c0": {
      "content": "debugPrint(${1:statement});",
      "doc": "Prints a message to the console, which you can access using the flutter tool's `logs` command (flutter logs).",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "debugPrint",
      "matches": {
        "debugP": true
      }
    },
    "2bba8fce-db8c-3b5c-8110-fb901fb234a3": {
      "content": "alias ${1:/*orig*/} ${2:/*alias*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "alias (al)",
      "matches": {
        "al": true
      }
    },
    "2bbb617b-d0dd-33a3-85a6-4c6075ba738d": {
      "content": "${1:obj}.keypress (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kpress": true
      }
    },
    "2bbf1fd5-abf2-3c2f-9c39-a8c261c7f2b2": {
      "content": "${1:obj}.empty()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      }
    },
    "2bc26092-0db7-30d6-b7e1-d987a6dd2bcb": {
      "content": "{% if ${1} %}\n\t${0:TARGET}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% if ... %} ... {% endif %}",
      "matches": {
        "if": true
      }
    },
    "2bc4e645-6975-39bb-90c0-f77f1af88cb4": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "tp": true
      }
    },
    "2bc6e3c1-391b-3e5f-a143-fefa4e1a831c": {
      "content": "<ul type=\"disc\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uldisc": true
      }
    },
    "2bcbb2fe-f02f-3aa4-b97d-f102714e249e": {
      "content": "onBeforeUnmount(() => {${1}})",
      "doc": "(beforeDestroy) Vue onBeforeUnmount Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeUnmount",
      "matches": {
        "v3onbeforeunmount": true
      }
    },
    "2bd580ec-b2d0-3e09-937d-0d7eb9de12bb": {
      "content": "console.info(${1:object});",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleinfo",
      "matches": {
        "base console info": true
      }
    },
    "2bdd45f6-8e9d-38c5-abda-9752ad743165": {
      "content": "type ${1} struct {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true,
        "ts": true
      }
    },
    "2bde313a-49f2-3df7-bdfd-a57fbea55392": {
      "content": "/* ------------------------------------------------------------------------- */",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sep": true
      }
    },
    "2be049a3-adb1-3082-980c-39bfebc3fbfa": {
      "content": "isset(${1:var})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "isset",
      "matches": {
        "is": true
      }
    },
    "2be1c8df-12a7-359c-822c-f1853b8edf01": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0:${VISUAL}}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      }
    },
    "2be8a7fe-56c2-39e5-a304-5d283d0e9a9d": {
      "content": "<${1:elementName}>\n\t{$TM_SELECTED_TEXT}\n</${1}>",
      "doc": "an element",
      "filetype": "react",
      "grammar": "lsp",
      "label": "jsx element wrap selection",
      "matches": {
        "jsx wrap selection with element": true
      }
    },
    "2be99de6-cab8-3eaf-b536-d100208c9764": {
      "content": "@import '${0}'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "2bed2c61-475c-35c1-bd6f-63f2b838d5da": {
      "content": "${1:void} ${2:/*function name*/}(${3:/*args*/}) ${4:@safe pure nothrow}\n{\n\t${VISUAL}$5\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "function definition (fun)",
      "matches": {
        "fun": true
      }
    },
    "2bf32a38-8f06-3529-b968-2de240c268f8": {
      "content": "<Link href=\"${1:#}\">\n  <a>${2:content}</a>\n</Link>",
      "doc": "Link accepts the following props: href, as, passHref, prefetch, replace, scroll, shallow",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link",
      "matches": {
        "next link": true
      }
    },
    "2bfafb25-7900-38df-9ece-39f3afc5cbfb": {
      "content": "public ${1:int} ${2:MyProperty} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propg": true
      }
    },
    "2bfb0a90-862a-3211-b9d5-2629c2300a13": {
      "content": "delete ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      }
    },
    "2bfcb310-df6b-3f80-b2cc-fe0756fe13d7": {
      "content": "it('${1:description}', async () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "it asynchronous",
      "matches": {
        "it": true
      }
    },
    "2c071056-626b-3312-9ac2-6c3705b0a43a": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-element-required",
      "matches": {
        "prop-types element required": true,
        "ptelr": true
      }
    },
    "2c0b2ba3-b6d3-3af1-9fc3-a78f25f30ec3": {
      "content": "NS_ASSUME_NONNULL_BEGIN\n\n@interface ${1:$TM_FILENAME_BASE} : ${2:NSObject}\n\n$3\n\n@end\n\nNS_ASSUME_NONNULL_END",
      "doc": "Create an Objc Class interface",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create Class interface",
      "matches": {
        "@interface": true,
        "class": true
      }
    },
    "2c0fdc50-0993-393c-a814-6afa3b431db1": {
      "content": "border-top-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      }
    },
    "2c10d4d1-a67d-3e76-9cb6-d7badd9aa140": {
      "content": "PropTypes.object.isRequired",
      "doc": "Object prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      }
    },
    "2c1b99d8-2d33-3431-903e-0e4a282320c3": {
      "content": "export const state = () => ({\n\tvalue: 'myvalue'\n})\n\nexport const getters = {\n\tgetterValue: state => {\n\t\treturn state.value\n\t}\n}\n\nexport const mutations = {\n\tupdateValue: (state, payload) => {\n\t\tstate.value = payload\n\t}\n}\n\nexport const actions = {\n\tupdateActionValue({ commit }) {\n\t\tcommit('updateValue', payload)\n\t}\n}",
      "doc": "vuex store 2",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-store-2",
      "matches": {
        "vstore2": true,
        "vuex store 2": true
      }
    },
    "2c208108-0bd7-3bcf-8f08-c42309ae0ae2": {
      "content": "onBeforeUpdate(() => {${1}})",
      "doc": "Vue onBeforeUpdate Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeUpdate",
      "matches": {
        "v3onbeforeupdate": true
      }
    },
    "2c2307b9-b0a5-3c2c-bf12-42a606913c78": {
      "content": "${1:obj}.attr('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      }
    },
    "2c2eb1be-71c6-3ab1-ba18-fb565729786b": {
      "content": "_.padEnd(${string}, ${length}, ${chars})",
      "doc": "_.padEnd('abc', 6);\n// => 'abc   '\n\n_.padEnd('abc', 6, '_-');\n// => 'abc_-_'\n\n_.padEnd('abc', 3);\n// => 'abc'\n\nPads `string` on the right side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-padend",
      "matches": {
        "lodash padend": true
      }
    },
    "2c337268-f978-37a4-b454-a034030001d7": {
      "content": "${1:deferred}.state()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dstate": true
      }
    },
    "2c368b27-7d1d-36b5-81bd-d2debba20ce8": {
      "content": "<input type=\"search\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:search": true
      }
    },
    "2c384731-fa0c-3c30-abcb-513dd8efbb1f": {
      "content": "#include \"$0\"",
      "doc": "Code snippet for #include \" \"",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#inc",
      "matches": {
        "#inc": true
      }
    },
    "2c3f3635-9df8-39dc-90e1-96834818f07c": {
      "content": "$this->db->from(\"${1:table}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-from": true
      }
    },
    "2c4e8c3b-6511-3d2c-9057-8cff3ebaedc3": {
      "content": "public ${1:${TM_FILENAME_BASE}}($2) {\n\t${0:super();}\n}",
      "doc": "Public constructor",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Public constructor",
      "matches": {
        "ctor": true
      }
    },
    "2c51c847-1d27-3abb-b972-f65b04370bcb": {
      "content": "justify-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      }
    },
    "2c548c19-e6bf-3401-b471-0728754d6f03": {
      "content": "(*\n   ${0:TARGET}\n*)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "multi line comment",
      "matches": {
        "Cc": true
      }
    },
    "2c57c7d2-2f81-323e-85c1-d6e430fab794": {
      "content": "function ${1:function_name} (${2:argument}: ${3:argument_type}) {\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "function (named)",
      "matches": {
        "fun": true
      }
    },
    "2c62a76d-5085-3944-a4ae-ce41ec420de3": {
      "content": "align-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      }
    },
    "2c69aa71-faed-36e1-a94c-9d01582e52ad": {
      "content": "word-break break-strict",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      }
    },
    "2c6dff95-cd06-3370-bd2a-6f5022c94ca4": {
      "content": "position: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      }
    },
    "2c6e3742-0c04-3d62-9a27-dce89e00f936": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      }
    },
    "2c788388-a326-339e-befe-83f479881e84": {
      "content": "import { useRouter } from 'next/router'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-use-router",
      "matches": {
        "next import userouter": true
      }
    },
    "2c7f6a30-80a1-3e3f-9c26-3b790bb3dc0c": {
      "content": "bind:this={${1:dom_node}}",
      "doc": "bind this",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-this",
      "matches": {
        "s-bind-this": true
      }
    },
    "2c80837a-fd3e-322d-8470-98fddf0699a0": {
      "content": "FUNCTION LOG10(${1:number})$0",
      "doc": "format base 10 logarithm of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOG10",
      "matches": {
        "FUNCTION LOG10": true
      }
    },
    "2c8998b0-54ad-3b18-8644-f7bf4ddc834f": {
      "content": "![${1:alt}](${2:link})$0",
      "doc": "Insert image",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert image",
      "matches": {
        "image": true
      }
    },
    "2c937e35-d618-3f86-9956-6679d4495d3e": {
      "content": "assert_raises(${1:StandardError}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asr": true
      }
    },
    "2c9d06ea-3207-3f4f-b412-fe865b9b832c": {
      "content": "component Main {\n\tfun render : Html {\n\t\t<$0/>\n\t}\n}",
      "doc": "The component named Main is the one that get's rendered on the screen.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Main component",
      "matches": {
        "main": true
      }
    },
    "2c9dcf97-4509-35ca-a4da-0d444dff4528": {
      "content": "member do\n\t${1:get :${2:action}}\n\t${3:put :${4:action}}\n\t${5:post :${6:action}}\n\t${7:delete :${8:action}}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "member routes",
      "matches": {
        "member": true
      }
    },
    "2ca02211-a271-3d92-8223-baa67b88983d": {
      "content": "isSomeString!${1:S}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isstr": true
      }
    },
    "2ca95546-4012-30ab-a8bf-8d448ca61b7f": {
      "content": "overflow-style: scrollbar",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      }
    },
    "2cb236f1-6c45-34ca-a333-e19c3e1a4ee9": {
      "content": "caption-side: bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      }
    },
    "2cbbba08-d48e-3f52-a3ff-a7f0ae6d9eee": {
      "content": "{% ifchildren %}\n\t$1\n{% endifchildren %}\n$0",
      "doc": "ifchildren",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "ifchildren",
      "matches": {
        "ifchildren": true
      }
    },
    "2cc19562-2015-3368-9e8a-43ab44741d9f": {
      "content": "Object.keys(${1:obj})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.keys",
      "matches": {
        "ok": true
      }
    },
    "2cc5147a-6950-3803-83a2-0c8bb78f82e8": {
      "content": "_.tap(${value}, ${interceptor})",
      "doc": "_([1, 2, 3])\n .tap(function(array) {\n   // Mutate input array.\n   array.pop();\n })\n .reverse()\n .value();\n// => [2, 1]\n\nThis method invokes `interceptor` and returns `value`. The interceptor\nis invoked with one argument; (value). The purpose of this method is to\n\"tap into\" a method chain sequence in order to modify intermediate results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tap",
      "matches": {
        "lodash tap": true
      }
    },
    "2cca3bad-7f49-3729-b3a3-ce5891deeb6b": {
      "content": "flex-basis: ${0:auto};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxb": true
      }
    },
    "2cd4fbbe-1d06-3082-a8ff-74bd84ae1257": {
      "content": "$.type(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$type": true
      }
    },
    "2ce237e1-074f-3c12-844a-c71444c32268": {
      "content": "module_path!()",
      "doc": "module_path!()",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "module_path",
      "matches": {
        "module_path": true
      }
    },
    "2ce47317-81e4-3ddc-a5d0-18788e2910d8": {
      "content": "let (${1:tx}, ${2:rx}): (Sender<${3:i32}>, Receiver<${4:i32}>) = channel();",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Declare (Sender, Receiver) pair of asynchronous channel()",
      "matches": {
        "chan": true
      }
    },
    "2ce545e3-2780-309a-ace0-c1615262b6a8": {
      "content": "_.stubString()",
      "doc": "_.times(2, _.stubString);\n// => ['', '']\n\nThis method returns an empty string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubstring",
      "matches": {
        "lodash stubstring": true
      }
    },
    "2ce60b6d-1f85-3960-a66e-8ae0c026886f": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      }
    },
    "2ce74541-e806-3f8c-abc7-08553d48bb88": {
      "content": "watchEffect(() => {\n\t${1}\n})",
      "doc": "Run a function immediately while reactively tracking its dependencies, and re-run it whenever the dependencies have changed.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watcheffect",
      "matches": {
        "vue v3 watcheffect": true
      }
    },
    "2cf0a88e-95ce-32bc-a6ac-95bdc1110b7b": {
      "content": "trace(${1:\"$0\"});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "2cf27cdf-f1fc-3a18-9662-67e908b8ece6": {
      "content": "catch($1Exception e)\n{\n\t${2:/*handle exception*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "catch (catch)",
      "matches": {
        "catch": true
      }
    },
    "2d0064e8-42f5-3ddd-ba11-882b78a5e407": {
      "content": "<!DOCTYPE>\n$1",
      "doc": "HTML - Defines the document type",
      "filetype": "html",
      "grammar": "lsp",
      "label": "doctype",
      "matches": {
        "doctype": true
      }
    },
    "2d02c10b-47a5-3517-9f29-d5bb8db0142c": {
      "content": "class ${1:ClassName} ${2:extends ${3:AnotherClass}} ${4:implements ${5:Interface}}\n{\n\t$0\n}",
      "doc": "Class definition",
      "filetype": "php",
      "grammar": "lsp",
      "label": "class …",
      "matches": {
        "class": true
      }
    },
    "2d052065-752e-3916-b180-0cb1aee12501": {
      "content": "{% tablerow ${1:item} in ${2:collection} cols: ${3:2} %}\n\t$4\n{% endtablerow %}",
      "doc": "Iteration tag: tablerow",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag tablerow",
      "matches": {
        "tablerow": true
      }
    },
    "2d12790c-6beb-3303-9a3b-ebfbf1af1f6e": {
      "content": "% for ${1:i} in ${2:iter}:\n\t${0:}\n% endfor",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "2d18b018-556b-38ff-800f-e659942d7ca2": {
      "content": "grid-auto-rows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      }
    },
    "2d1b7049-8603-3d4b-a8d5-66b4da750fbf": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      }
    },
    "2d1dd483-5c22-390d-b253-4c10f257fd14": {
      "content": "PIMPLE\n{\n\tnOuterCorrectors \t${1:outer};\n\tnCorrectors     \t${2:inner};\n\tnNonOrthogonalCorrectors ${3:nonOrtho};\n\tpRefCell        \t${4:cell};\n\tpRefValue       \t${0:value for $4};\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimple": true
      }
    },
    "2d2274ca-b052-3fd7-a6d0-9f5c7e390b82": {
      "content": "PropTypes.array,",
      "doc": "Array prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      }
    },
    "2d239bd4-8fd6-3524-a9ae-fb04b8f5fbea": {
      "content": "read(${1:*},${2:*}) ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "read",
      "matches": {
        "read": true
      }
    },
    "2d2582d8-e96e-3337-984f-134939545725": {
      "content": "#+BEGIN_CENTER\n$0\n#+END_CENTER",
      "doc": "#+BEGIN_CENTER block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "center block",
      "matches": {
        "<C": true
      }
    },
    "2d27ec04-ef0b-3d18-921d-40188a804388": {
      "content": "/// ${3:/*documentation*/}\nclass $1Exception : $2Exception\n{\n\tpublic this(string msg, string file = __FILE__, int line = __LINE__)\n\t{\n\t\tsuper(msg, file, line);\n\t}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "exception declaration (exc)",
      "matches": {
        "exc": true
      }
    },
    "2d28b5a1-fe0b-39fc-9d7f-c085f223df04": {
      "content": "let ${1} = ${0};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "2d2dfa50-02ed-3e13-b68d-ee1dbcc1eb76": {
      "content": "module ${1:name}\r\n\r\n\timplicit none\r\n\t$0\r\n\r\nend module $1",
      "doc": "module",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "mod",
      "matches": {
        "mod": true
      }
    },
    "2d37e10d-b13e-3552-ad60-46a0a805cbd7": {
      "content": "page-break-inside ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      }
    },
    "2d41898b-30fd-326e-8c69-a5643dae043b": {
      "content": "INSPECT $1 REPLACING ALL ${2|SPACES,ZERO|} BY '${3}'",
      "doc": "INSPECT REPLACING",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "INSPECT REPLACING",
      "matches": {
        "INSPECT": true
      }
    },
    "2d479f9c-f5e1-3ab3-a509-83f4938ac2aa": {
      "content": "getContext(${1:key})",
      "doc": "svelte getContext",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-get-context",
      "matches": {
        "s-get-content": true
      }
    },
    "2d4a0213-3658-310d-897b-16f84ac8627f": {
      "content": "v-for=\"(${1:item}, ${2:index}) in ${3:items}\" :key=\"${4:index}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-for",
      "matches": {
        "vfor": true,
        "vue v-for": true
      }
    },
    "2d4a8c28-cc0f-34f3-b656-7329cf6589ed": {
      "content": "{% css %}\n\t$1\n{% endcss %}\n$0",
      "doc": "css",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "css",
      "matches": {
        "css": true
      }
    },
    "2d539894-2646-3802-8f4a-030b95b157f9": {
      "content": "z-index auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      }
    },
    "2d53ff12-70c2-359c-ae5b-42d0fbb3fed7": {
      "content": "until [[ ${1:condition} ]]; do\n\t${0}\ndone",
      "doc": "until loop by condition",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "until",
      "matches": {
        "until": true
      }
    },
    "2d583038-5dc2-37d8-b21c-9d10d5a5471d": {
      "content": "border-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      }
    },
    "2d5a8e21-29a0-3061-9771-28438129ec87": {
      "content": "{VISUAL}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      }
    },
    "2d5b5dd7-d7ee-3703-9ece-c0019756da0b": {
      "content": "after ${1:ms} ${0:#do something}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "af": true
      }
    },
    "2d66bf95-9987-3c42-9809-050c30b30544": {
      "content": "<${1:h1}::${2:stylename}>\n\t$0\n</${1:h1}>",
      "doc": "HTML elements can be written as in standard HTML.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Title Element",
      "matches": {
        "h": true
      }
    },
    "2d6a4342-fc36-324c-aa8c-b22e5bbd5a4c": {
      "content": "catch(${1:Exception} ${2:e}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      }
    },
    "2d6d7992-e079-3d64-8635-b1e6089379b4": {
      "content": "console.error(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ce": true,
        "console-error": true
      }
    },
    "2d6f4a58-8aab-3c1f-b3c6-f71a1bdeafcf": {
      "content": "import { Component } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1}",
      "doc": "Creates a React component class",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactClassCompoment",
      "matches": {
        "rcc": true
      }
    },
    "2d71e17f-87a8-3dc7-a755-8029f6ad9128": {
      "content": "display table-header-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      }
    },
    "2d72a597-fd1a-3961-b339-7cec8d3f5afc": {
      "content": "module.exports = ${1:name};",
      "doc": "module.exports",
      "filetype": "base",
      "grammar": "lsp",
      "label": "module-exports",
      "matches": {
        "base module exports": true
      }
    },
    "2d7d8232-542e-3a13-8832-c9881dc92519": {
      "content": "if let ${1:Some($2)} = $3 {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if let (...)",
      "matches": {
        "ifl": true
      }
    },
    "2d84b40f-ad40-37df-a2c2-d370f5bb667d": {
      "content": "text-height: max-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      }
    },
    "2d88f16b-addb-3315-b931-57ff998edd37": {
      "content": "if ${1:/* condition */} {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if else condition",
      "matches": {
        "ife": true
      }
    },
    "2d8c49e9-955e-3f87-bd7f-207a0505153f": {
      "content": "div(ng-if='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "2d906dde-8f27-311e-a4bb-ab0fb276a990": {
      "content": "${1:obj}.val('${2:text}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      }
    },
    "2d97e8bb-efc7-3ff8-84fa-b812c6a26270": {
      "content": "protected body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected body",
      "matches": {
        "prob": true
      }
    },
    "2d98d508-d0b4-3318-a321-fc03496e934a": {
      "content": "console.log(JSON.stringify(${0}, null, 2));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.log stringified",
      "matches": {
        "clstr": true
      }
    },
    "2d9b679d-6a8a-32c8-896a-849ee5c969d1": {
      "content": "bool",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Boolean",
      "matches": {
        "T": true
      }
    },
    "2da87c70-14ad-34b9-8241-68f34def59e3": {
      "content": "overflow-style marquee",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      }
    },
    "2dad48f4-4dd2-3a90-a33d-6d7248186982": {
      "content": "class ${1:FormName}(forms.Form):\n\t\"\"\"${2:docstring}\"\"\"\n\t${0}",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      }
    },
    "2db36794-4ddc-3d0e-b779-d7cbd1d2e732": {
      "content": "[Fact]\npublic void ${1:TestName}()\n{\n//Given\n\n//When\n\n//Then\n}$0",
      "doc": "create xunit test method",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "xUnit Test",
      "matches": {
        "fact": true
      }
    },
    "2dbf1a03-bc57-3482-9aeb-160f1d36e1bf": {
      "content": "$.post('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxpost": true
      }
    },
    "2dc32923-4c75-317d-94c2-5e771f4dcb91": {
      "content": "if ${1:condition}, do: ${2}, else: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do: .. else:",
      "matches": {
        "ife:": true
      }
    },
    "2dc5e0d6-aee0-3b32-a08c-00ff5c42300c": {
      "content": "EntityDataModule.forRoot(${1:entityConfig}),",
      "doc": "Import NgRx Entity Data Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-import-entity-data-module",
      "matches": {
        "a-ngrx-data-entity-data-module-import": true,
        "angular ng rx data import entity module": true
      }
    },
    "2dc7779b-ee2d-3ec4-b8b7-f178aa1c0104": {
      "content": "{# $1 #}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "#": true
      }
    },
    "2dcce195-5c40-3d3e-8764-71d58f2c1f4d": {
      "content": "fn ${1:name}(${2:arg}: ${3:Type}) -> ${4:RetType} {\n    ${5:unimplemented!();}\n}",
      "doc": "fn …(…) { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "fn",
      "matches": {
        "fn": true
      }
    },
    "2dcd78a5-bf17-3f4d-a4c9-42c4d35df3d2": {
      "content": "// https://uniswap.org/docs/v2/smart-contracts/factory/\r\n// https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Factory.solimplementation\r\n// SPDX-License-Identifier: MIT\r\n// UniswapV2Factory is deployed at 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f on the Ethereum mainnet, and the Ropsten, Rinkeby, Görli, and Kovan testnets\r\npragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2Factory {\r\n  event PairCreated(address indexed token0, address indexed token1, address pair, uint);\r\n\r\n  function getPair(address tokenA, address tokenB) external view returns (address pair);\r\n  function allPairs(uint) external view returns (address pair);\r\n  function allPairsLength() external view returns (uint);\r\n\r\n  function feeTo() external view returns (address);\r\n  function feeToSetter() external view returns (address);\r\n\r\n  function createPair(address tokenA, address tokenB) external returns (address pair);\r\n}",
      "doc": "Uniswap Factory",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "uniV2Factory",
      "matches": {
        "uniV2Factory": true
      }
    },
    "2dcf8a68-7f35-30ae-994e-450c1e840b36": {
      "content": "mixed.describe()",
      "doc": "mixed.describe(): SchemaDescription\n\nCollects schema details (like meta, labels, and active tests) into a serializable\ndescription object.SchemaDescription {\n  type: string,\n  label: string,\n  meta: object,\n  tests: Array<{ name: string, params: object }>\n}",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-describe",
      "matches": {
        "yup mixed describe": true
      }
    },
    "2dcfa045-8cdc-3172-8e24-ef46a9e5fb65": {
      "content": "@extends('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@extends directive",
      "matches": {
        "extends": true
      }
    },
    "2dd7b40c-c767-34d4-819f-94210204eb16": {
      "content": "text-justify auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      }
    },
    "2ddc3812-6a49-37f5-bd16-6e763c041fa0": {
      "content": "<video width=\"$1\" height=\"$2\" controls>\n\t$3\n</video>",
      "doc": "HTML - Defines a video",
      "filetype": "html",
      "grammar": "lsp",
      "label": "video",
      "matches": {
        "video": true
      }
    },
    "2dde2d3a-33a2-34fb-a7fb-487cb1c3c7d0": {
      "content": "brightness(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "brightness": true
      }
    },
    "2de280b8-29c1-371c-8c2f-340761bad56b": {
      "content": "flex: ${1:1} ${2:1} ${3:auto};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex (alt)",
      "matches": {
        "fle": true
      }
    },
    "2de4ffc1-4543-3350-917a-84e702e1c283": {
      "content": "\\ *${1:Emphasis}*\\ ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*c": true
      }
    },
    "2de6bf00-f815-323c-910a-6cd96ace891a": {
      "content": "${1:callbacks}.fireWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfirew": true
      }
    },
    "2de7b5ec-c92e-3b89-8f9b-7f6860594efc": {
      "content": "export const ${1:first} = (${2:second}) => {${3:third}}",
      "doc": "Export named function",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportNamedFunction",
      "matches": {
        "enf": true
      }
    },
    "2de8d446-ca7e-387f-bd87-f9389f87deaf": {
      "content": "&#x2305;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enter": true
      }
    },
    "2de93ee8-eb5b-3b9f-994f-372016c3d24f": {
      "content": "- [${1|x, |}] ${2:first}\n- [${3|x, |}] ${4:second}\n- [${5|x, |}] ${6:third}\n$0",
      "doc": "Insert task list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert task list",
      "matches": {
        "task list": true
      }
    },
    "2def1cbf-3ad7-3313-ad91-4a33911e7dcc": {
      "content": "import styled from 'styled-components/native';",
      "doc": "import styled from 'styled-components/native'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-styled-from-styled-components-native",
      "matches": {
        "imscn": true,
        "styled-components import styled native'": true
      }
    },
    "2defeca7-9f52-3462-9469-f13065c39c93": {
      "content": "cursor move",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      }
    },
    "2df2dad7-9afd-32f8-a8b2-25900b15304e": {
      "content": "${1:http}.HandleFunc(\"${2:/}\", func(w http.ResponseWriter, r *http.Request) {\n\t${0:fmt.Fprintf(w, \"hello world\")}\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "mux.HandleFunc",
      "matches": {
        "hhf": true
      }
    },
    "2df46fb0-5811-335e-a744-61c41a631d21": {
      "content": "{% filter ${1:name} %}$0{% endfilter %}",
      "doc": "filter",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "filter": true
      }
    },
    "2df92dcf-0146-3235-a42d-e20373d05ee3": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-memo-prop-types",
      "matches": {
        "imrmp": true,
        "react import memo proptypes": true
      }
    },
    "2dfb1525-e480-34fe-966f-d243df5068b1": {
      "content": "Mouse Over    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Over",
      "matches": {
        "mover": true
      }
    },
    "2dfb979f-2705-3e2f-94a1-cfeadc490a38": {
      "content": "Array.from(${1:document}.getElementsByTagName('${2:tag}'))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getElementsByTagName",
      "matches": {
        "gt": true
      }
    },
    "2e0002f2-dd0b-3253-b812-e344b51480b3": {
      "content": "\\${1:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:TARGET}",
      "matches": {
        "1T": true,
        "1t": true
      }
    },
    "2e06641f-e3c4-3945-a41d-9fd4e31e0c43": {
      "content": "background-repeat: no-repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      }
    },
    "2e07b4df-39f0-3630-9bf6-b5a12f2b5bbc": {
      "content": "1. ${1:first}\n2. ${2:second}\n3. ${3:third}\n$0",
      "doc": "Insert ordered list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert ordered list",
      "matches": {
        "ordered list": true
      }
    },
    "2e087e1e-e0f1-32bc-a422-698372dd90d8": {
      "content": "overflow-style: marquee",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mq": true
      }
    },
    "2e11b4f1-ff52-357f-8cbf-33890c467f2d": {
      "content": "justify-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      }
    },
    "2e16b45f-d6a4-3118-8d32-8016004186da": {
      "content": "${1:deferred}.notify(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotify": true
      }
    },
    "2e1fb338-5c88-35ac-8a8c-b7f55a8f9c7e": {
      "content": "def ${1:funcname}(self, ${2:parameter_list}):\n\traise NotImplementedError",
      "doc": "Code snippet for an abstract class method",
      "filetype": "python",
      "grammar": "lsp",
      "label": "def(abstract class method)",
      "matches": {
        "def abstract class method": true
      }
    },
    "2e215ffd-5498-35d5-b18a-608f8a611a44": {
      "content": "type ${1} interface {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true,
        "ti": true
      }
    },
    "2e2cafb0-59a3-33a3-bdc4-2a507898dba4": {
      "content": "while ($1) {\n\t$0\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "2e300b6e-a718-3190-8ed6-f844a0e4a644": {
      "content": "var ${1:seq} =\n\tfrom ${2:item1} in ${3:items1}\n\tjoin ${4:item2} in ${5:items2} on $2.${6:prop1} equals $4.${7:prop2}\n\tselect ${8:$2.prop3}\n\twhere ${9:clause}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "LINQ syntax",
      "matches": {
        "from": true
      }
    },
    "2e3cc971-5f8c-39f6-b3a2-cc7d05dfc6b0": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon}\n\tbuttons {\"${3:Cancel}\", \"${4:OK}\"}\n\tdefault button \"${4}\"\nset button_pressed to button returned of result\nif button_pressed is \"${4}\" then\n\t${5:#:TARGET}\nelse\n\t-- action for cancel button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK/Cancel": true
      }
    },
    "2e3e9074-57cf-3a47-a214-e8a896811ff6": {
      "content": "overflow-x auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      }
    },
    "2e427876-0704-3377-929e-c43904c5f32f": {
      "content": "margin: 0 auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin: 0 auto",
      "matches": {
        "mara": true
      }
    },
    "2e42bf55-59b4-3d02-b5f8-04445296c33b": {
      "content": "private _${1:value} : ${2:string};\npublic get ${1:value}() : ${2:string} {\n\treturn this._${1:value};\n}\npublic set ${1:value}(v : ${2:string}) {\n\tthis._${1:value} = v;\n}",
      "doc": "Define a full property",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Define a full property",
      "matches": {
        "prop": true
      }
    },
    "2e430ced-3d05-3adb-b851-6935d49ff12d": {
      "content": "<a href=\"${1}\" target=\"_top\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_top": true
      }
    },
    "2e4a1c49-88e9-3332-a30d-514c0bd72895": {
      "content": "grid-auto-rows: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      }
    },
    "2e4b1a64-b0d6-3991-a8aa-524b6c405805": {
      "content": "flex-wrap: nowrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:n": true
      }
    },
    "2e53f27d-8b73-31e8-bb38-fdf48020f1e0": {
      "content": "| concat: ${1:array}",
      "doc": "Array filter: concat",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter concat",
      "matches": {
        "concat": true
      }
    },
    "2e5f944e-4e95-3f06-a22c-5b20c1141600": {
      "content": "${1:deferred}.resolve(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dres": true
      }
    },
    "2e6c6146-c731-34ba-b543-d6eee66aa7c3": {
      "content": "xhr :delete, :${1:destroy}, id: ${2:1}$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr delete",
      "matches": {
        "xdelete": true
      }
    },
    "2e77c8d7-d791-34a1-9ed3-0ee3de3caafa": {
      "content": "var tests = []struct {\n\tname string\n\texpected string\n\tgiven string\n}{\n\t{\"${1}\", \"${2}\", \"${3}\",},\n}\nfor _, tt := range tests {\n\ttt := tt\n\tt.Run(tt.name, func(t *testing.T){\n\t\tactual := ${0:${VISUAL}}(tt.given)\n\t\tif actual != tt.expected {\n\t\t\t\tt.Errorf(\"$0(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n\t\t}\n\n\t})\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "2e7b9a12-4cdd-383d-aed9-48a1ada8bcca": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "M": true
      }
    },
    "2e7fd4a4-b5da-3fb8-8d7e-05d60fa6a64d": {
      "content": "declare(strict_types=${1:1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "declare(strict_types=1)",
      "matches": {
        "dst": true
      }
    },
    "2e860a67-2927-32f9-ba1e-1d476125cee8": {
      "content": "${1:obj}.dequeue(${2:'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deq": true
      }
    },
    "2e86f14a-673e-3d1a-bddd-91bca60c2eca": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      }
    },
    "2e8eee54-7b81-34e7-b21d-8c2efb87d880": {
      "content": ".. seealso:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "seealso",
      "matches": {
        "seealso": true
      }
    },
    "2e939246-7e4b-31fa-9101-0e20f7deebd3": {
      "content": "try\n  ${1:TARGET}\nfinally\n  ${2}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try ... finally ... endtry",
      "matches": {
        "tryf": true,
        "tryfinally": true
      }
    },
    "2e94d1e9-8485-3575-af95-35670d49f4ec": {
      "content": "borderLeftColor: ${1},",
      "doc": "borderLeftColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderLeftColor",
      "matches": {
        "bor": true
      }
    },
    "2e978ef5-a176-3a87-a44d-798c4d252fa4": {
      "content": "${1:FIELDNAME} = models.SlugField(max_length=${2:50}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slug": true
      }
    },
    "2ea1c047-aa63-3fa7-aff6-40534e719bc4": {
      "content": "flunk '${1:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      }
    },
    "2eaaa397-a2b5-3efd-8c3c-88eb0710d808": {
      "content": "let\n\t${1} =\n\t\t${2}\nin\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "2eab9395-cb11-361c-b710-214d6ac5b684": {
      "content": "break ${1:label};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      }
    },
    "2ed02890-e868-3040-8212-30d013653d79": {
      "content": "${1:obj}.triggerHandler('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trigh": true
      }
    },
    "2ed60ab9-fd22-30e8-b03c-83437e74415a": {
      "content": "\\${2:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:TARGET}",
      "matches": {
        "2T": true,
        "2t": true
      }
    },
    "2ed80211-2d35-3748-a214-781063809e3f": {
      "content": "<h1 id=\"${1}\">${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1#": true
      }
    },
    "2edc068f-bcdb-36bd-844b-34c6bd08bee7": {
      "content": "else if ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "eli": true
      }
    },
    "2ee8a5cb-2014-30cd-9d25-af030ada1789": {
      "content": "border-top-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      }
    },
    "2eebfb3b-08a4-3975-85f3-f0ae8faf5779": {
      "content": "import React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React pure component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-pure-component",
      "matches": {
        "react component class pure": true,
        "rpc": true
      }
    },
    "2f0a8f2c-4888-3df6-996f-6c8fa2638556": {
      "content": "_.isTypedArray(${value})",
      "doc": "_.isTypedArray(new Uint8Array);\n// => true\n\n_.isTypedArray([]);\n// => false\n\nChecks if `value` is classified as a typed array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-istypedarray",
      "matches": {
        "lodash istypedarray": true
      }
    },
    "2f0d4b0d-e04c-366d-b5a9-7f38ae701fd2": {
      "content": "@(${1:x}) ${0:x*x}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "anonymous function",
      "matches": {
        "@": true
      }
    },
    "2f0e3491-428d-38a4-8f4d-12737e6cb83d": {
      "content": "width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      }
    },
    "2f11863d-2b9f-36dc-88ca-2b235a34e0fa": {
      "content": "int choice = NSRunAlertPanel(@\"${1:Something important!}\", @\"${2:Something important just happend, and now I need to ask you, do you want to continue?}\", @\"${3:Continue}\", @\"${4:Cancel}\", nil);\nif(choice == NSAlertDefaultReturn) // \"${3:Continue}\"\n{\n\t${0};\n}\nelse if(choice == NSAlertAlternateReturn) // \"${4:Cancel}\"\n{\n\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      }
    },
    "2f1a7246-52cc-3f4e-bb21-5fed6ff42a66": {
      "content": "foreach ($${1:variable} as $${2:key} => $${3:value}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "foreach ($var as $key => $value) { .. }",
      "matches": {
        "foreachk": true
      }
    },
    "2f20d006-8d6e-3b5c-a1df-b6d139e82f9c": {
      "content": "// Don't FUCKING touch this.",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idfk": true
      }
    },
    "2f21c04b-913f-3dc4-a2fe-a8a43f8b201d": {
      "content": "@change=\"$emit('change', $event.target.value)\"",
      "doc": "Vue Emit from Child Component",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Emit from Child",
      "matches": {
        "vemit-child": true
      }
    },
    "2f298a8d-73b2-3eb2-b020-2d16e9f77f06": {
      "content": "(when-let [${1:result} ${2:test}]\n\t${0:body})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when-let": true
      }
    },
    "2f36f7ea-5f51-393f-8662-375124041546": {
      "content": "align-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      }
    },
    "2f3a88ae-d29c-39fa-85b6-224821842846": {
      "content": "function ${1:name}($2) result($3)\n\t${0}\nend function $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "func": true
      }
    },
    "2f3c6b84-bca7-3b92-8513-ab8a8b55188b": {
      "content": "[Conditional(\"${1:#:SYMBOL}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true,
        "conditional": true
      }
    },
    "2f4021b2-a992-3be9-a604-8a5f97aaa531": {
      "content": "border-top-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      }
    },
    "2f47d4a8-d273-3280-b370-7967723a5692": {
      "content": "<%= for ${1:item} <- ${2:$1s} ${3:@conn} do %>\n\t$0\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "2f4b7721-9470-3a51-9dfc-bcc21e77b7b1": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      }
    },
    "2f530d89-f7f0-391b-b444-934da22af8ba": {
      "content": "list",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "List",
      "matches": {
        "T": true
      }
    },
    "2f545008-c8ed-302b-8048-0f28f2c142b3": {
      "content": "def ${1:fname}(${2:arg}):\n\t${3:pass}$0",
      "doc": "Code snippet for function definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New function",
      "matches": {
        "def": true
      }
    },
    "2f59502e-24a1-3b46-9847-56d4eaa92a30": {
      "content": "$this->${1:method}()->shouldEndWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldEndWith('string')",
      "matches": {
        "send": true
      }
    },
    "2f68a5a6-c699-38b4-a5fe-7f1ded1e86f4": {
      "content": "{% import \"${1}\" as ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig import",
      "matches": {
        "import": true
      }
    },
    "2f693946-f659-3312-b0b9-f5bdc243f74b": {
      "content": "const { head, html, css } = ${1:App}.render({\n\tprops: ${3:props},\n})",
      "doc": "svelte render component",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-render-component",
      "matches": {
        "s-render-component": true
      }
    },
    "2f69c9d3-dc71-3fb3-9b6e-790a6615cb30": {
      "content": "-record(${1:record}, {${2:field}=${3:value}}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      }
    },
    "2f6abf69-57ef-309d-900e-9e44513e4bfc": {
      "content": "<head>\n\t$1\n</head>",
      "doc": "HTML - Defines information about the document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "head",
      "matches": {
        "head": true
      }
    },
    "2f6ee58c-fa2d-34e4-8aff-0ab5e0b45be6": {
      "content": "PROCEDURE DIVISION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "PROCEDURE DIVISION",
      "matches": {
        "PD": true,
        "PROCEDURE DIVISION": true
      }
    },
    "2f75b402-248c-327a-88cb-45506f39501b": {
      "content": "map!(${1:f})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "2f7a5346-9d05-3c7c-b64d-c6b26548ce7e": {
      "content": "ldply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      }
    },
    "2f7f3b38-c358-3bf0-9617-59bf0a414dfd": {
      "content": "^$0^",
      "doc": "superscript",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "superscript",
      "matches": {
        "superscript": true
      }
    },
    "2f80f919-cef0-3b31-a8ee-eb867b958202": {
      "content": ":key=\"${1:key}\"",
      "doc": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-key",
      "matches": {
        "key": true,
        "vue key": true
      }
    },
    "2f83b864-4607-3346-9009-a22188bb38f3": {
      "content": "fontStyle: '${1:normal}',",
      "doc": "fontStyle",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "fontStyle",
      "matches": {
        "fo": true
      }
    },
    "2f8770e4-176d-3699-ae52-a57fb74dc3a2": {
      "content": "unless (${1:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "un",
      "matches": {
        "unless": true
      }
    },
    "2f89f93d-a328-391d-aeee-d5467defa5c8": {
      "content": "foreach (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forea": true
      }
    },
    "2f8adc00-ba97-3c77-b075-eb16ae639c08": {
      "content": "type ${1:NewName} = $2;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Type alias",
      "matches": {
        "ty": true
      }
    },
    "2f8b66b0-2163-38cd-a49f-80438a48199a": {
      "content": "fscanf($1, \"$2\"$0);",
      "doc": "Generic fscanf() snippet",
      "filetype": "c",
      "grammar": "lsp",
      "label": "fscanf",
      "matches": {
        "fscanf": true
      }
    },
    "2f8dee0b-f409-3207-8ec8-8132da85aa2e": {
      "content": "{\n\tpath: '${1:path}', \n\tloadChildren: () => import('${2:lazy-path}').then(m => m.${3:lazy-module})\n},$0",
      "doc": "Angular lazy route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Lazy Route Path",
      "matches": {
        "a-route-path-lazy": true
      }
    },
    "2f9f235c-bf8f-324d-8613-a92c6d8714c9": {
      "content": "justify-content: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      }
    },
    "2f9f6e86-44b2-362d-9157-44a2dc292534": {
      "content": "align-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      }
    },
    "2fb2ebb0-0e9d-3b51-9a51-fe1e079ac7a9": {
      "content": "marker-offset: auto;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "marker-offset: auto (marker)",
      "matches": {
        "marker": true
      }
    },
    "2fbae9b3-36d9-382a-b5b6-2fcde8218041": {
      "content": "d3.nest()\n  .key(${1})\n  .entries(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nest": true
      }
    },
    "2fbbb738-e86c-359e-a80a-766faf54302f": {
      "content": "border-left: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      }
    },
    "2fbdd623-56c6-37d7-9d64-393daa5c9cc5": {
      "content": "validates_presence_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of",
      "matches": {
        "vp": true
      }
    },
    "2fbf399f-e3ee-392a-ac4a-540e35ee6648": {
      "content": "switch (${1:#:let}) {\n  case ${2:#:val}:\n    ${0:TARGET}\n    break;\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "2fc6cf52-486b-3648-9eb8-5f3ef0217cdb": {
      "content": "faceforward($2, $3, $4)",
      "doc": "float faceforward(float N, float I, float Nref)\nvec2 faceforward(vec2 N, vec2 I, vec2 Nref)\nvec3 faceforward(vec3 N, vec3 I, vec3 Nref)\nvec4 faceforward(vec4 N, vec4 I, vec4 Nref)\n\nThe faceforward function returns a vector that points in the same direction as a reference vector. The function has three input parameters of the type floating scalar or float vector: N, the vector to orient, I, the incident vector, and Nref, the reference vector. If the dot product of I and Nref is smaller than zero the return value is N. Otherwise -N is returned.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "faceforward",
      "matches": {
        "faceforward": true
      }
    },
    "2fc88262-04cb-3072-ab5e-496779cb4600": {
      "content": "| uniq",
      "doc": "Array filter: uniq",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter uniq",
      "matches": {
        "uniq": true
      }
    },
    "2fcb8dea-c303-344d-b228-37a2122e5b31": {
      "content": "console.count(${1:label});",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolecount",
      "matches": {
        "base console count": true
      }
    },
    "2fcc2c28-e07e-393d-baf5-96ecc87ba122": {
      "content": "${1: obj} match {\n\tcase ${2:e} => ${3}\n\tcase _ => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      }
    },
    "2fce29d7-e55b-3e7a-964d-f88d4ffd7742": {
      "content": "\\\\begin{equation}\n\\\\begin{tikzcd}\n\t${1}\n\\\\end{tikzcd}\n\\\\end{equation}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tikzcd environment in equation",
      "matches": {
        "tikzcd": true
      }
    },
    "2fd04826-4fbd-3682-903a-1eb7f6645a40": {
      "content": "NSException *${1:badness};\n$1 = [NSException exceptionWithName:@\"${2:$1Name}\"\n                             reason:@\"${0}\"\n                           userInfo:nil];\n[$1 raise];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "except": true
      }
    },
    "2fd764b1-9f08-32d5-9413-8a72059314f4": {
      "content": "position: ${1:static/relative/absolute/fixed};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "position: type (position)",
      "matches": {
        "position": true
      }
    },
    "2fde2cf0-52cb-3c28-83f1-49c671a6ce26": {
      "content": "constructor(props) {\n\tsuper(props);\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props as arguments",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "con": true
      }
    },
    "2fe116fb-7891-3d63-ac29-82d062bfc8ee": {
      "content": "\\\\citep{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citep",
      "matches": {
        "citep": true
      }
    },
    "2fe49adc-a76f-3f3a-8021-46dc2de56ea3": {
      "content": "validates_inclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not included in the list}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of",
      "matches": {
        "vi": true
      }
    },
    "2feb1f5b-39d4-3472-8e67-ad1699721f62": {
      "content": ".FALSE.",
      "doc": ".FALSE.",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "F",
      "matches": {
        "F": true
      }
    },
    "2feebe92-c383-3e79-a1c0-e40cb1356542": {
      "content": "background-position: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      }
    },
    "2fef8f23-e8b8-3510-99d7-401dbf733bff": {
      "content": "import ${0:Http}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "2ff3bc3e-e99e-330e-a7b8-62f43c67a941": {
      "content": "list-style-type none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      }
    },
    "2ff631da-46f7-3704-a216-3d3385d34d28": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}\n\t${3}\ndefault:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "sl": true
      }
    },
    "2ffaed2b-eea1-3a66-9829-1455bab4a100": {
      "content": "macro(${1:name} ${2:args})\n\t${3}\nendmacro($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "macro() endmacro()",
      "matches": {
        "macro": true
      }
    },
    "2ffef1c0-06ee-3226-89d9-b45c30eaa679": {
      "content": "impl AsRef<${1:Ref}> for ${2:Type} {\n\tfn as_ref(&self) -> &${3:$1} {\n\t\t&self.${0:field}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "AsRef trait implementation",
      "matches": {
        "asref": true
      }
    },
    "3008a1fc-9245-3a01-b696-288b2fb6b844": {
      "content": "_.xorBy(${arrays}, ${iteratee})",
      "doc": "_.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2, 3.4]\n\n// The `_.property` iteratee shorthand.\n_.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 2 }]\n\nThis method is like `_.xor` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich by which they're compared. The order of result values is determined\nby the order they occur in the arrays. The iteratee is invoked with one\nargument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xorby",
      "matches": {
        "lodash xorby": true
      }
    },
    "3008b07f-4c08-3292-997b-1fad69d7156a": {
      "content": "case ${1} of\n\t${2} ->\n\t\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "3008b573-39bd-3c64-b7bb-e4b66bddf3d3": {
      "content": "(defn ${1:name} \"${2:doc-string}\" [${3:arg-list}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      }
    },
    "300ab82f-37ff-3c07-a2d2-1bcd86fdb742": {
      "content": "{% javascript %}\n\t${0}\n{% endjavascript %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "javascript": true
      }
    },
    "300fc82f-7a5f-3dee-9973-94cc397e463d": {
      "content": "belongs_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "belongs_to",
      "matches": {
        "bt": true
      }
    },
    "3015c460-85e6-32ff-a0d3-c43f89241b88": {
      "content": "watchQuery (newQuery, oldQuery) {\n\t${1:data}\n},",
      "doc": "Use the watchQuery key to set up a watcher for query strings.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-watch-query",
      "matches": {
        "nuxt watchquery": true
      }
    },
    "30220a80-625d-391e-8aa4-42c30f43c342": {
      "content": "expect(${1:target}).not.toHaveAttr('${2:attr}'${3:, '${4:value}'})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to not have attribute (coffee)",
      "matches": {
        "notha": true
      }
    },
    "3025465c-3300-3520-b54f-a7d887433c14": {
      "content": "Select (${1:condition})\nCase ${2:case1}:\n\t${3:; Case 1 code}\nCase Else:\n\t${0:; Else code}\nEndSelect",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "30266ed5-22c0-3a0d-b987-d884a7ed817f": {
      "content": "_.findLastIndex(${array}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n// => 2\n\n// The `_.matches` iteratee shorthand.\n_.findLastIndex(users, { 'user': 'barney', 'active': true });\n// => 0\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastIndex(users, ['active', false]);\n// => 2\n\n// The `_.property` iteratee shorthand.\n_.findLastIndex(users, 'active');\n// => 0\n\nThis method is like `_.findIndex` except that it iterates over elements\nof `collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlastindex",
      "matches": {
        "lodash findlastindex": true
      }
    },
    "3029a459-372e-3cb0-b653-0b0820ea9d34": {
      "content": "width: ${1},",
      "doc": "width",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "width",
      "matches": {
        "w": true
      }
    },
    "302c2afa-51d1-39a8-90df-aa8787940c62": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tINNER JOIN ${3:tableName2}\n\tON ${4:match};",
      "doc": "Inner Join",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "ijoin",
      "matches": {
        "ijoin": true
      }
    },
    "3032ea8b-74a2-3e6a-b6ef-cea12723862a": {
      "content": "<bdi>${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      }
    },
    "303370fd-010b-3f3d-b06c-93761c855646": {
      "content": "_.isFunction(${value})",
      "doc": "_.isFunction(_);\n// => true\n\n_.isFunction(/abc/);\n// => false\n\nChecks if `value` is classified as a `Function` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isfunction",
      "matches": {
        "lodash isfunction": true
      }
    },
    "30347855-216b-3d71-9c82-eb6f0f78c5e9": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      }
    },
    "303c5d38-7d1a-36a9-a801-d3f89734f29a": {
      "content": "instance ${1:Class} ${2:Type} where\n  ${3:function} ${4:self} = ${0:TARGET}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "instance": true
      }
    },
    "303c8b31-0aac-377a-9cb3-7142fb10cd8c": {
      "content": "overflow-x: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      }
    },
    "30407427-dacc-349f-8bad-7f6e27134671": {
      "content": "render() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Basic render.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-render",
      "matches": {
        "react component render": true,
        "ren": true
      }
    },
    "30475f91-4081-3eb3-90c3-f022a6bba5d3": {
      "content": "expect($1).toBeNull();$0",
      "doc": "expects the argument is null",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobenull",
      "matches": {
        "jest expect tobenull": true,
        "tbn": true
      }
    },
    "304b6ef4-27d2-32c0-981b-6b900faf382b": {
      "content": "{if ${1:expression}}\n\t$0\n{/if}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "if .. (if)",
      "matches": {
        "if": true
      }
    },
    "304f0795-6a02-3177-8923-b0a909e67df8": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.${1:value};\n\t}\n}",
      "doc": "vuex getter",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-getters",
      "matches": {
        "vgetter": true,
        "vuex getters": true
      }
    },
    "305bc3f8-603b-3967-89ba-fb8632b99f2e": {
      "content": "!important",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "!": true
      }
    },
    "305c9cb5-361c-3576-9d94-bce95a8ebea7": {
      "content": "super(${1:/*args*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "super (sup)",
      "matches": {
        "sup": true
      }
    },
    "305e1d1a-40fb-3177-8f09-6f48b4fa7f2f": {
      "content": "<see cref=\"${1:#:member}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<see cref=\"\"/>",
      "matches": {
        "see": true
      }
    },
    "305e7271-6727-39e8-81a7-62c5ea553199": {
      "content": "Should Be Equal    \"\\${${1:var}}\"    \"${2:expected value}\"    ${3:\"optional error msg\"}\t${4:ignore_case=True}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Should Be Equal",
      "matches": {
        "sbe": true
      }
    },
    "305f98c9-f6e8-3aec-b4f9-ca8199dc7fc9": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      }
    },
    "306aa8ba-64b9-35cc-b864-a30f675a930f": {
      "content": "async for ${1:target} in ${2:iter}:\n\t${3:block}",
      "doc": "Code snippet for an async for statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "async/for",
      "matches": {
        "async/for": true
      }
    },
    "306cca6d-ed5d-308e-a4a0-5aa5f45c17f9": {
      "content": "\\label{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\label": true,
        "label": true
      }
    },
    "3072bc27-9feb-3737-81be-9aed1011950a": {
      "content": "_.round(${number}, ${precision})",
      "doc": "_.round(4.006);\n// => 4\n\n_.round(4.006, 2);\n// => 4.01\n\n_.round(4060, -2);\n// => 4100\n\nComputes `number` rounded to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-round",
      "matches": {
        "lodash round": true
      }
    },
    "3074bc0c-5857-39d9-a6c6-b640e95037b7": {
      "content": "beforeMount() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeMount",
      "matches": {
        "beforeMount": true
      }
    },
    "307523b0-26e7-3204-b65e-77500792f024": {
      "content": "background-attachment ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      }
    },
    "3078e474-bb6c-3b8b-b48c-8e58a144a233": {
      "content": "text-wrap: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      }
    },
    "308060be-6030-37d6-b402-9a3c524759f3": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "3081c7fb-46d8-3d8e-b087-2c38fe591573": {
      "content": "list-style-type: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "308653a1-849e-385b-ad1d-d681b965c1d0": {
      "content": "${1:FIELDNAME} = models.BooleanField(${0:default=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      }
    },
    "309301ea-7fe0-3e88-9f41-91df2526e6eb": {
      "content": "func Example${1:Method}() {\n\t${0:${VISUAL}}\n\t// Output:\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func ExampleXYZ() { ... }",
      "matches": {
        "example": true
      }
    },
    "309a1683-45d0-3b3b-bd38-f86e66c74580": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State, props) => ${3:selectLogic}\n);",
      "doc": "Creates an NgRx Selector using props",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-selector-w-props",
      "matches": {
        "a-ngrx-create-selector-props": true,
        "angular ng rx create selector props": true
      }
    },
    "309d7903-d2b4-326f-8060-7685a21bff89": {
      "content": "# Package resource\npackage ${1:\"package_name\"} do # Name of the package to install\n\t${2:#}version ${3:nil} # The version of the package to install/upgrade\n\t${4:#}response_file ${5:nil} # An optional response file - used to pre-seed packages (note: the file is fetched by Remote File)\n\t${6:#}source ${7} # Used to provide an optional package source for providers that use a local file (rubygems, dpkg and rpm)\n\t${8:#}options ${9:nil} # Add additional options to the underlying package command\n\t${10:#}gem_binary ${11:gem} # A gem_package attribut to specify a gem binary. Useful for installing ruby 1.9 gems while running chef in ruby 1.8\n\n\t${12:#}${13:action :install} # Install a package - if version is provided, install that specific version (Default)\n\t${14:#}${15:action :upgrade} # Upgrade a package - if version is provided, upgrade to that specific version\n\t${16:#}${17:action :remove} # Remove a package\n\t${18:#}${0:action :purge} # Purge a package (this usually entails removing configuration files as well as the package itself)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      }
    },
    "30a0043f-da93-3c37-8aa1-81d57c521ba8": {
      "content": "[System.AttributeUsage(System.AttributeTargets.${1:All}, Inherited = ${2:false}, AllowMultiple = ${3:true})]\nsealed class ${4:My}Attribute : System.Attribute\n{\n    // See the attribute guidelines at\n    //  http://go.microsoft.com/fwlink/?LinkId=85236\n    readonly string positionalString;\n    \n    // This is a positional argument\n    public ${4:My}Attribute(string positionalString)\n    {\n        this.positionalString = positionalString;\n        \n        // TODO: Implement code here\n        ${5:throw new System.NotImplementedException();}\n    }\n    \n    public string PositionalString\n    {\n        get { return positionalString; }\n    }\n    \n    // This is a named argument\n    public int NamedInt { get; set; }\n}",
      "doc": "Attribute using recommended pattern",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Attribute using recommended pattern",
      "matches": {
        "attribute": true
      }
    },
    "30a09cdb-b851-30df-b90d-711653a23fb0": {
      "content": "Wait Until Page Does Not Contain Element    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Does Not Contain Element",
      "matches": {
        "wupdnce": true
      }
    },
    "30a32902-d942-38fc-b3ad-d13934352f46": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t}\n},",
      "doc": "Vue Component Data",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Data",
      "matches": {
        "vdata": true
      }
    },
    "30a49f51-ed66-3f31-8e44-1725309ac88b": {
      "content": "sap.ui.controller(\"$1\", {\n   onInit: function(){\n   },\n   onAfterRendering: function() {\n   },\n   onAfterRendering: function() {\n   },\n   onExit: function() {\n   },\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapcomponent": true
      }
    },
    "30a8920c-d831-3246-8c65-fdf33198bab4": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      }
    },
    "30ab5c57-8b27-33de-847a-5ea908356028": {
      "content": "<%= form_for @changeset, ${1:\"${2:/users}\"}, fn f -> %>\n\t\t$0\n\n\t<%= submit \"Submit\" %>\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_for",
      "matches": {
        "ff": true
      }
    },
    "30b8d14d-d992-3970-add6-bbec57519d69": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\">\n\t<option value=\"${3}\">${4:$3}</option>\n\topt+${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select+": true
      }
    },
    "30c2664e-bdcc-3df6-a275-1ef81f3bd6da": {
      "content": "${1:propName}: {\n\ttype: ${2:Number}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vprops": true
      }
    },
    "30c7096f-b5ca-39d1-bf66-1180e698130e": {
      "content": "PropTypes.symbol,",
      "doc": "Symbol prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeSymbol",
      "matches": {
        "ptsm": true
      }
    },
    "30cd9a10-529f-3479-939d-3a1e59753c38": {
      "content": "border-break close",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      }
    },
    "30d7c29c-45c4-3c4f-a516-2dc5e9805260": {
      "content": "use Data::Dump qw(dump);\nwarn dump ${1:variable}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dump": true
      }
    },
    "30db3232-6063-3f76-99a3-a9d2105c2fef": {
      "content": "import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LogInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst started = Date.now();\n\t\treturn next.handle(req).pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tconst elapsed = Date.now() - started;\n\t\t\t\t\tconsole.log(`Request for \\${req.urlWithParams} took \\${elapsed} ms.`);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}",
      "doc": "Angular HttpInterceptor for Logging HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-for-logging",
      "matches": {
        "a-http-interceptor-logging": true,
        "angular http interceptor logging": true
      }
    },
    "30dc1ae1-1565-3bd4-8ce3-17fd6dba3367": {
      "content": "args:\n{{- range $key, $value := .Values.${1:value_key}.extraArgs }}\n  {{- if $value }}\n  - --{{ $key }}={{ $value }}\n  {{- else }}\n  - --{{ $key }}\n  {{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args_spec": true
      }
    },
    "30df388e-30ee-3a1f-8784-40758400341a": {
      "content": "(comment\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comm": true
      }
    },
    "30efbbc4-c907-3d30-9cba-002719908bf8": {
      "content": "<%= render template: \"${1:file}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      }
    },
    "30fd5bbf-5249-3c39-9054-3530809f97c8": {
      "content": "_.invertBy(${object}, ${iteratee})",
      "doc": "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invertBy(object);\n// => { '1': ['a', 'c'], '2': ['b'] }\n\n_.invertBy(object, function(value) {\n  return 'group' + value;\n});\n// => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\nThis method is like `_.invert` except that the inverted object is generated\nfrom the results of running each element of `object` thru `iteratee`. The\ncorresponding inverted value of each inverted key is an array of keys\nresponsible for generating the inverted value. The iteratee is invoked\nwith one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invertby",
      "matches": {
        "lodash invertby": true
      }
    },
    "30fe5f5a-8ac6-396c-8473-d08ec5ee7fbb": {
      "content": "signal ${1} : unsigned (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      }
    },
    "3102420f-2a9c-3764-8d68-209b9b903996": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-pure-component-proptypes",
      "matches": {
        "react component class pure with proptypes": true,
        "rpcp": true
      }
    },
    "3102fd67-7d62-3e8c-879d-8e301205789a": {
      "content": "justify-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content: flex-start",
      "matches": {
        "jcfs": true
      }
    },
    "3106cb45-0f18-36db-9d3c-7c65712e4bc7": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rc": true
      }
    },
    "310d4b96-d324-3da6-8aef-486401b5496b": {
      "content": "print_r(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "31103159-4234-3353-8ec2-35acb5e82305": {
      "content": "form_submit(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_submit": true
      }
    },
    "3115225b-3d09-32ee-8eb1-84b1eb0b21cd": {
      "content": "align-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      }
    },
    "311a7099-9fcf-370c-ba28-c871d00c50a5": {
      "content": "<ol type=\"i\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oli": true
      }
    },
    "311ec44a-0123-3542-81cb-66b1e50c0ec0": {
      "content": "<dialog>\n\t${0}\n</dialog>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dialog": true
      }
    },
    "31224328-5572-39e4-9d26-adf3bb81d29a": {
      "content": "if ${1:condition} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if ... { ... }",
      "matches": {
        "if": true
      }
    },
    "312f8ac9-ade1-3191-bc6b-c48ead493a85": {
      "content": "begin\n\t${0}\nend;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beg": true
      }
    },
    "31300b2d-351b-3811-85dc-26d3a598edbf": {
      "content": "for (let ${2:i} = ${1:Things.length} - 1; $2 >= 0; $2--) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "reversed for (...) {...}",
      "matches": {
        "forr": true
      }
    },
    "3131cc75-0ece-373f-ba9a-d9f3db0f0ae8": {
      "content": "${1:div}(:class=\"[${2:classNameA}, ${3:classNameB}]\")",
      "doc": "vue class binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Class Binding Object",
      "matches": {
        "vclass-obj": true
      }
    },
    "31332c15-3a02-3cd9-9ece-fa36d998fd13": {
      "content": "display: table",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      }
    },
    "3134cc81-c134-3442-99b9-530d88808e54": {
      "content": "#import <$0>",
      "doc": "Code snippet for #import < >",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#imp<",
      "matches": {
        "#imp<": true
      }
    },
    "31378b26-560a-3da7-b6de-c52a056f4ab4": {
      "content": "const {${1:name}} = ${2:value};",
      "doc": "Object destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-const-assignment",
      "matches": {
        "base const destruct object": true
      }
    },
    "3138839a-d1a0-39d9-8498-8fb43e745b84": {
      "content": "<%= ${1:f}.text_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fftf": true
      }
    },
    "3138b7da-e35e-3b84-baf5-4fd378407654": {
      "content": "{%- decrement ${variable} -%}",
      "doc": "Variable tag: decrement",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag decrement",
      "matches": {
        "decrement": true
      }
    },
    "31413867-d173-3cb7-8a02-1c676c75cc14": {
      "content": "${1:array}.forEach(${2:element} => {\n\t$0\n});",
      "doc": "For-Each Loop using =>",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "For-Each Loop using =>",
      "matches": {
        "foreach =>": true
      }
    },
    "3143a014-609a-3862-b6cb-73d954a8103d": {
      "content": "validates_exclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not allowed}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of (ve)",
      "matches": {
        "ve": true
      }
    },
    "31454e21-c0eb-3bad-8668-cca0e9119952": {
      "content": "${1:obj}.css({${2:attribute1}: '${3:value1}', ${4:attribute2}: '${5:value2}'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cssm": true
      }
    },
    "31470d10-345e-3a55-9a4c-89fc92f856d4": {
      "content": "[[${1}]] ${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[[": true
      }
    },
    "314e93d9-a892-3431-9b74-ac7ac8975298": {
      "content": "${1:FIELDNAME} = serializers.JSONField(binary=${2})",
      "doc": "Django-rest Serializers ``JSONField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF JSONField",
      "matches": {
        "sjson": true
      }
    },
    "31528fff-119a-3894-94be-bb7d544f623a": {
      "content": "function ${1:new_function}(${2:args})\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "New function",
      "matches": {
        "!fun(ction)?!": true
      }
    },
    "3152c1db-e110-3553-815d-c3e5e84b78e2": {
      "content": "font: ${1:normal/italic/oblique} ${2:normal/small-caps} ${3:normal/bold} ${4:1em/1.5em} ${5:Arial}, ${6:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font:   style variant weight size:line-height font -family (font)",
      "matches": {
        "font": true
      }
    },
    "3157fd91-cb35-3ce1-8d08-a0d02d7b6f5b": {
      "content": "\\${5:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:TARGET}",
      "matches": {
        "5T": true,
        "5t": true
      }
    },
    "315a049a-3a7d-31e7-ac3a-e5f52decd587": {
      "content": "beforeUpdate() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeUpdate",
      "matches": {
        "beforeUpdate": true
      }
    },
    "3161751e-f0ed-36ab-8af2-04ad2d431479": {
      "content": "beforeDestroy () {\n\t${0};\n},",
      "doc": "beforeDestroy lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeDestroy",
      "matches": {
        "vbeforedestroy": true
      }
    },
    "3168dd58-a6ff-3a8f-916f-fe33b9dcfc44": {
      "content": "#[allow(${1:unused_variables})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "allow lint attribute",
      "matches": {
        "allow": true
      }
    },
    "317483a8-e5be-3f8d-9f89-7de66ebf650d": {
      "content": "{%- for ${1:item} in ${2:collection} -%}\n\t${0}\n{%- endfor -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for-": true
      }
    },
    "31772dbf-8c11-35ca-ba08-d649bd4bd246": {
      "content": "\\fullcite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\fullcite": true,
        "fullcite": true
      }
    },
    "317c6938-a2e8-3286-8ca5-f5312d022dcb": {
      "content": "_.isObjectLike(${value})",
      "doc": "_.isObjectLike({});\n// => true\n\n_.isObjectLike([1, 2, 3]);\n// => true\n\n_.isObjectLike(_.noop);\n// => false\n\n_.isObjectLike(null);\n// => false\n\nChecks if `value` is object-like. A value is object-like if it's not `null`\nand has a `typeof` result of \"object\".",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isobjectlike",
      "matches": {
        "lodash isobjectlike": true
      }
    },
    "317cb330-e859-3272-b932-e92ece2b2997": {
      "content": "\\ ${1:x} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "λ",
      "matches": {
        "lambda": true
      }
    },
    "318155ea-3ce8-3603-aa81-165a2190912d": {
      "content": "{% do view.registerJsFile \"${1:url}\" %}$0",
      "doc": "do js",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "dojs",
      "matches": {
        "dojs": true
      }
    },
    "318c6b9c-2f91-3b06-b47b-316873ff23dd": {
      "content": "${1:#:set the_color to }choose color default color ${2:{65536, 65536, 65536\\}}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Color": true
      }
    },
    "318cfaee-adc2-3b89-ad5a-3ae53159181b": {
      "content": "sign($2)",
      "doc": "float sign(float x)\nvec2 sign(vec2 x)\nvec3 sign(vec3 x)\nvec4 sign(vec4 x)\n\nThe sign function returns 1.0 when x is positive, 0.0 when x is zero and -1.0 when x is negative. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "sign",
      "matches": {
        "sign": true
      }
    },
    "318e223b-d127-3e72-a071-1dc9a1838cd3": {
      "content": "yumrepo { \"${1:repo name}\":\n\tdescr   => \"${2:$1}\",\n\tenabled => ${0:1},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yumrepo": true
      }
    },
    "319fa916-eb27-3237-bc4d-9e9d166b85be": {
      "content": "<param name=\"${1:Int}\">${2}</param>\n*>> $0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "<param",
      "matches": {
        "<param>": true
      }
    },
    "319fcf23-f827-3e53-8793-b711feb96673": {
      "content": "integer, intent(out) ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer intent(out)",
      "matches": {
        "ino": true
      }
    },
    "31a8b9ac-57b0-368a-89e4-63d8ee3f8d2b": {
      "content": "Buffer${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "buf": true
      }
    },
    "31b7362e-bea0-36da-9fa5-59da96a66b79": {
      "content": "| modulo: ${modulo:2}",
      "doc": "Math filter: modulo",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter modulo",
      "matches": {
        "modulo": true
      }
    },
    "31d7e99d-1f7b-3b3b-a102-95a25a2b47c8": {
      "content": "borderBottomRightRadius: ${1},",
      "doc": "borderBottomRightRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderBottomRightRadius",
      "matches": {
        "bor": true
      }
    },
    "31e99f4f-22be-367a-9f17-848706b73e96": {
      "content": "-moz-border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      }
    },
    "31ee5c7a-1ad1-3b8f-8543-12d9aca43d73": {
      "content": "background-origin: padding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      }
    },
    "31ef209d-4c41-3604-a60d-f28bd6b361f3": {
      "content": "opacity: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "opacity",
      "matches": {
        "opa": true
      }
    },
    "31f405df-2f3e-3cc9-810a-547d5ebf14d9": {
      "content": "if ${1:TARGET}\nthen ${2}\nelse ${3}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "if..then..else",
      "matches": {
        "if": true
      }
    },
    "31fab934-6399-3617-a3f6-f873d4b0db66": {
      "content": "async fetch ({ store, ${1:params} }) {\n\tlet { data } = await fetch('${2:endpoint}').then(res => res.json())\n\tstore.commit('${3:MUTATION_TYPE}', data)\n},",
      "doc": "Nuxt Fetch",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Fetch",
      "matches": {
        "nfetch": true
      }
    },
    "31fe9358-9774-3baf-afb1-bc4b9d524b16": {
      "content": "right: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "right",
      "matches": {
        "rig": true
      }
    },
    "3206d124-ff11-30bf-a2b6-49fb45af6556": {
      "content": "for ${1:i} in ${2:1}..${3:42} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "32099244-8b6f-3c0e-bc79-2e28d7b08a32": {
      "content": "${1:FIELDNAME} = forms.ComboField($2)",
      "doc": "ComboField (fcombo)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fcombo",
      "matches": {
        "fcombo": true
      }
    },
    "32136734-03fe-3f24-b28c-a63789ea7cde": {
      "content": "jasmine.any($1)",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "any (js)",
      "matches": {
        "any": true
      }
    },
    "3215ebd2-3030-3d62-949e-e8d3696b034e": {
      "content": "t.date :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.date (tcda)",
      "matches": {
        "t.": true
      }
    },
    "32166d8c-b0ca-3b0e-a69d-4cd526d64739": {
      "content": "[Test]\npublic void ${1:#:Name}Test() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "321e956f-2925-3d1e-98c1-69d944356bd1": {
      "content": "- (void)awakeFromNib\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wake": true
      }
    },
    "321f1ee0-7e07-3c79-a21a-04a43aed0754": {
      "content": "{{- if .Values.$1.tolerations }}\n  tolerations:\n{{ toYaml .Values.${1:value_key}.tolerations | indent 8 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tolerations_spec": true
      }
    },
    "3224bd5b-ac9a-3336-b68d-37d68e710e62": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} else {\n\t${3:#:else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "322dd7f1-5b07-3ffc-9c89-a4467eadf9a4": {
      "content": "font-stretch: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      }
    },
    "322ff60d-0d67-335e-a815-8b0aabc8fb98": {
      "content": "namespace ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "namespace NAME {...}",
      "matches": {
        "namespace": true
      }
    },
    "323295b6-23cf-3422-b9b0-e7bdfdaa3ae3": {
      "content": "- (IBAction)${1:method}:(${2:id})sender\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iba": true
      }
    },
    "3232dea2-928a-36c0-b830-594a882aa06f": {
      "content": "when {\n\tbuildingTag '${1:tag}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenbuildingTag": true
      }
    },
    "32382ab9-3f10-3269-bbee-850aff116834": {
      "content": "PropTypes.instanceOf($0)",
      "doc": "Is an instance of a class prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      }
    },
    "323d3612-ea35-3af2-9b9b-42f23a88d687": {
      "content": "containers:\n  - name: {{ template \"${2:chartName}.name\" . }}-{{ .Values.$1.name }}\n\timage: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\timagePullPolicy: \"{{ .Values.${1:value_key}.image.pullPolicy }}\"\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "containers_spec": true
      }
    },
    "323f476d-4561-3452-bd13-e82aea940268": {
      "content": "componentDidMount() { ${1:first} }",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      }
    },
    "32419a43-2eb3-3e96-8cdd-bd8befd7c289": {
      "content": "class ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React component class",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactJustClassCompoment",
      "matches": {
        "rcjc": true
      }
    },
    "32533fe7-a206-31e7-9bad-0405954657e9": {
      "content": "{${1:array}.map((item) => {\n\treturn <${2:elementName} key={item.id}>\n\t$0\n</${2}>\n})}",
      "doc": "an element self closed",
      "filetype": "react",
      "grammar": "lsp",
      "label": "jsx elements map with return",
      "matches": {
        "jmr": true
      }
    },
    "3263f0ac-8dd4-3619-81a9-e57114ae9726": {
      "content": "post {\n\tregression {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "32666432-22c4-3ea9-a514-effca1a2e857": {
      "content": "console.info(${1:object});",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleInfo",
      "matches": {
        "cin": true
      }
    },
    "3269328a-bae4-3461-9a05-67faa830984a": {
      "content": "stage('${1:Test}'){\n\tsteps {\n\t\tsh '${2:make check}'\n\t\tjunit '${3:reports/**/*.xml}'\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stage": true
      }
    },
    "326c33c4-fb3f-33e4-a593-d0794d8e7f5d": {
      "content": "/// @notice Explain to an end user what this does\r\n/// @dev Explain to a developer any extra details\r\n/// @param Documents a parameter just like in doxygen (must be followed by parameter name)\r\n/// @return Documents the return variables of a contract’s function state variable\r\n/// @inheritdoc\tCopies all missing tags from the base function (must be followed by the contract name)",
      "doc": "natspec for function",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "natspec function",
      "matches": {
        "///nat_function": true
      }
    },
    "326cbbdc-96d1-3811-b46c-a305bd675ae8": {
      "content": "<template v-slot:${0:name}>${1:defaultcontent}</template>",
      "doc": "named slot",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Slot",
      "matches": {
        "vslot-named": true
      }
    },
    "32789f89-5e1c-3abd-8b98-67f3bcaf433f": {
      "content": "*>> <summary>method main</summary>\nmethod-id main public static.\nprocedure division using\n           by value args as string occurs any.\n    $0\nend method.",
      "doc": "method-id (main)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "main method-id",
      "matches": {
        "main": true
      }
    },
    "3278aebe-b6e9-3bd5-9699-2040ae49c267": {
      "content": "grid-template: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      }
    },
    "32794cb0-a98d-3eb1-ae8f-68b67a583d10": {
      "content": "FUNCTION ANNUITY(${1:interest-rate},${2:number-of-periods})$0",
      "doc": "function annuity",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ANNUITY",
      "matches": {
        "FUNCTION ANNUITY": true
      }
    },
    "327e1687-3770-3648-a440-50f787fdf99f": {
      "content": "|  ${0:factors}      |    ${1:a}       |  ${2:b}   \t|\n| ------------- |-------------  | ------- |\n|    ${3:f1}    |    Y          | N       |\n|    ${4:f2}    |    Y          | N       |",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tb": true
      }
    },
    "327f923a-c431-3150-a568-9adfe6947efc": {
      "content": "$Params = @{\n\t${1:Param1} = '${2:Value1}'\n\t${3:Param2} = '${4:Value2}'\n}\n${5:CommandName} @Params",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splatting": true
      }
    },
    "3281a361-af18-39c3-9d17-057e26a37efd": {
      "content": "console.clear();",
      "doc": "Clears the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleClear",
      "matches": {
        "ccl": true
      }
    },
    "3287abe4-f018-3be8-98d3-10039c14ca43": {
      "content": "border: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      }
    },
    "3289b02e-710e-35f8-91fc-05972b753a89": {
      "content": "map(&:${0:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mp": true
      }
    },
    "328a01ff-7e09-36f7-b851-a154bb62575f": {
      "content": "<p id=\"${1}\">${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p#": true
      }
    },
    "328a42b0-3d3a-38c2-a0f8-0bbd32a915c4": {
      "content": "<sub>${1:TARGET}</sub>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "328c2038-a150-31e2-a77e-33a52c5a748b": {
      "content": "belongs_to :${0:association}",
      "doc": "belongs_to assocation",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Belongs to",
      "matches": {
        "bt": true
      }
    },
    "32902fd0-b7d9-3a78-9578-0dc2cf3969a9": {
      "content": "assert_send [${1:object}, :${2:message}, ${3:args}]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "assert_send(..)",
      "matches": {
        "asss": true
      }
    },
    "3290cde6-6144-3a7c-8784-369b1eb4c1a6": {
      "content": "enum class ${1:MyClass} {$0};",
      "doc": "Code snippet for enum class (c++11)",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "enum class",
      "matches": {
        "enum class": true
      }
    },
    "32946bff-346c-3f9e-a534-17a79a75ed9e": {
      "content": "\\\\begin{gather${1:ed}}\n\t${0:${VISUAL}}\n\\\\end{gather$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "gather(ed) environment",
      "matches": {
        "gat": true
      }
    },
    "329ac394-5470-3a88-9232-e9a938b758db": {
      "content": "module type ${1} = sig\n\t${0}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modty": true
      }
    },
    "329d0f24-dc0a-36ef-a042-3e1afb6afd8a": {
      "content": "/* ${1:#:comment} */\n${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true,
        "comment": true
      }
    },
    "329de7d5-98ae-3400-a9bb-97e95bad7ac7": {
      "content": "background-origin: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      }
    },
    "32a95c1c-d043-31be-9066-022c7b513728": {
      "content": "size(${1:source}${2:, dim=${3:1}})",
      "doc": "Size",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "size",
      "matches": {
        "size": true
      }
    },
    "32aed76b-3b9b-3bf7-8fd9-b13ba172785d": {
      "content": "&#x238B;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "esc": true
      }
    },
    "32bda8a0-a1ba-32f5-a8b1-91f0b28f40f9": {
      "content": "<!% ${1:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "<!%",
      "matches": {
        "<!%": true
      }
    },
    "32c279ba-7e33-3bb0-99e7-b665d4291a65": {
      "content": "async with ${1:expr} as ${2:var}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "awith": true
      }
    },
    "32c6774f-37d8-370f-b162-cb16e3fbd5f7": {
      "content": "${1:void} ${2:method}(${3}) ${4:throws }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "32ca9c1f-9723-3e0a-9ceb-7864959660ce": {
      "content": "(ns ${1:example}\n  (:require [clojure.core.match :as m]))\n; vim: set lispwords+=m/match :",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require-core-match": true
      }
    },
    "32d15222-8d35-38ca-a550-5a431354c731": {
      "content": "if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "if () {}",
      "matches": {
        "if": true
      }
    },
    "32d29a49-d467-3e02-9fe3-7babd890e30d": {
      "content": "Mouse Down    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down",
      "matches": {
        "md": true
      }
    },
    "32d32ca0-4744-3a60-aa11-0b5f6d333c79": {
      "content": "#[inline]\npub fn ${1:name}() {\n    ${2:unimplemented!();}\n}",
      "doc": "inlined function",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "inline-fn",
      "matches": {
        "inline-fn": true
      }
    },
    "32d5784d-8c85-33e3-b157-7c7072187f96": {
      "content": "t.time :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create time column",
      "matches": {
        "tcti": true
      }
    },
    "32df7559-d436-363c-b420-8d04ed80dca9": {
      "content": "font-emphasize-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      }
    },
    "32e0da92-0335-3518-9ce6-46879b4a78a3": {
      "content": "<dt id=\"${1}\">${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt#": true
      }
    },
    "32e0ead2-c4f6-37b8-8bee-615aeacc1b6e": {
      "content": "immediate",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "immediate",
      "matches": {
        "immediate": true
      }
    },
    "32e63cba-f56d-3ecc-a486-f2c538341884": {
      "content": "${1:FIELDNAME} = models.PositiveSmallIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PositiveSmallIntegerField",
      "matches": {
        "mpossmallint": true
      }
    },
    "32eb6a14-9fb0-346b-b1b9-e3306c970538": {
      "content": "#region ${1:Region}\n${VISUAL}$0\n#endregion",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "#region #endregion",
      "matches": {
        "#region": true
      }
    },
    "32f04fc2-e992-369c-90fd-efd1fdc58e88": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{:else}\n\t${4: <!-- empty list -->}\n{/each}",
      "doc": "each else block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-else-block",
      "matches": {
        "s-each-else-block": true
      }
    },
    "32f3a3a3-b392-32bd-a1ca-da2ae9622cc2": {
      "content": "database $0",
      "doc": "Models a Database (depicted as a cylinder)",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Database",
      "matches": {
        "db": true
      }
    },
    "32f5c6f7-4d07-37fb-8651-fbc931939f66": {
      "content": "useEffect(() => {\n  ${1:first}\n\n  return () => {\n    ${2:second}\n  }\n}, [${3:third}])",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "useEffectSnippet": true
      }
    },
    "330683f5-b48c-3f53-a9f6-91eacd69a312": {
      "content": "{{ ${variable:} }}",
      "doc": "Context Variable",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag context variable",
      "matches": {
        "convar": true
      }
    },
    "330b3a82-3fea-38bd-bf55-ecde6a901d68": {
      "content": "line-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      }
    },
    "33103b3f-b705-3682-b293-d8db2a884ec3": {
      "content": "func Test${1:Function}(t *testing.T) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func TestXYZ(t *testing.T) { ... }",
      "matches": {
        "test": true
      }
    },
    "331441c0-ddf7-39cf-9407-a214c6ead89e": {
      "content": "<%= ${1:f}.text_area :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffta": true
      }
    },
    "3318ba4d-54ba-364b-ab37-6c5e9cf40b68": {
      "content": "@import '${0:filename}';",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "@import",
      "matches": {
        "imp": true
      }
    },
    "3318e8a4-e1aa-3d29-ba5c-591975add445": {
      "content": "$${1:mock} = $this->createMock(${2:SomeClass}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$mock = $this->createMock(SomeClass::class);",
      "matches": {
        "mock": true
      }
    },
    "331f059b-3ba9-3f7f-b8f0-bbaa782ab833": {
      "content": "void loop()\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      }
    },
    "33241b2c-44e8-39f3-8bcd-ef628e22aaed": {
      "content": "_.memoize(${func}, ${resolver})",
      "doc": "var object = { 'a': 1, 'b': 2 };\nvar other = { 'c': 3, 'd': 4 };\n\nvar values = _.memoize(_.values);\nvalues(object);\n// => [1, 2]\n\nvalues(other);\n// => [3, 4]\n\nobject.a = 2;\nvalues(object);\n// => [1, 2]\n\n// Modify the result cache.\nvalues.cache.set(object, ['a', 'b']);\nvalues(object);\n// => ['a', 'b']\n\n// Replace `_.memoize.Cache`.\n_.memoize.Cache = WeakMap;\n\nCreates a function that memoizes the result of `func`. If `resolver` is\nprovided, it determines the cache key for storing the result based on the\narguments provided to the memoized function. By default, the first argument\nprovided to the memoized function is used as the map cache key. The `func`\nis invoked with the `this` binding of the memoized function.\n\n**Note:** The cache is exposed as the `cache` property on the memoized\nfunction. Its creation may be customized by replacing the `_.memoize.Cache`\nconstructor with one whose instances implement the\n[`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\nmethod interface of `clear`, `delete`, `get`, `has`, and `set`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-memoize",
      "matches": {
        "lodash memoize": true
      }
    },
    "3324f6ea-e101-3510-a8a0-6686982cb20a": {
      "content": "text-align: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-align: right",
      "matches": {
        "tar": true
      }
    },
    "33320618-a69a-34b8-b837-04cc41d54814": {
      "content": "import qualified ${1:module} as ${2:name}",
      "doc": "Qualified import",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "import_qualified",
      "matches": {
        "import qual": true
      }
    },
    "33322ab4-a49d-33b1-9eba-dbf7c5e9dc4e": {
      "content": "<optgroup label=\"${1}\">\n${2:TARGET}\n<optgroup>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optgroup": true
      }
    },
    "3336fbc4-f76c-382b-b398-3b0172e332af": {
      "content": "align-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      }
    },
    "333a8f20-5f69-39e7-b149-3aa411b5d2bb": {
      "content": "\\begin{ttfamily}\n\t${1:TARGET}\n\\end{ttfamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{ttfamily} \\ttfamily": true,
        "ttfamily": true
      }
    },
    "333c5e77-5bc9-3a81-b58a-378175914602": {
      "content": "for ${1:needle} in ${2:haystack} ; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "333cf4cc-d642-32ee-aa54-0634047e4658": {
      "content": "v-pre",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-pre",
      "matches": {
        "vpre": true,
        "vue v-pre": true
      }
    },
    "333dd437-f3c9-3da1-9357-daa54dddd3e6": {
      "content": "<dl>\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      }
    },
    "333f08c8-1b44-3f64-bf4a-acde47b50061": {
      "content": "border-style groove",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      }
    },
    "33408324-105a-321b-9b3e-18d77c0f2a7e": {
      "content": "text-align-last: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      }
    },
    "3340d3a9-e9db-34f7-84ef-9483cb5dd5a2": {
      "content": "<video class=\"${1}\" src=\"${2}\" height=\"${3}\" width=\"${4}\" preload=\"${5:none}\" autoplay=\"${6:autoplay}\">${7}</video>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "video.": true
      }
    },
    "334ca35a-c7e9-3410-b998-9d65e00a6322": {
      "content": "_.sortedIndex(${array}, ${value})",
      "doc": "_.sortedIndex([30, 50], 40);\n// => 1\n\nUses a binary search to determine the lowest index at which `value`\nshould be inserted into `array` in order to maintain its sort order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindex",
      "matches": {
        "lodash sortedindex": true
      }
    },
    "334fc9f0-f318-3492-b8f6-4a1555e60f4c": {
      "content": "{:catch error}\n\t<!-- promise was rejected -->",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-catch-block",
      "matches": {
        "svcatch": true,
        "svelte catch": true
      }
    },
    "3353dbfa-9416-33a5-bef0-f035755e73b0": {
      "content": "\\begin{array}{${1}}\n\t${2:TARGET}\n\\end{array}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{array} \\array": true,
        "array": true
      }
    },
    "335de20e-9e8b-3fb8-997e-e7016463907e": {
      "content": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n  ${0}\nfinally\n  let &$1 = $1_save\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use option save",
      "matches": {
        "save_option": true
      }
    },
    "335fcf08-4c5c-3308-90a1-46c6ed178aaa": {
      "content": "Serial.read();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sr": true
      }
    },
    "337364de-bc88-3364-897f-d9f1945662ee": {
      "content": "${1:#:macro_name}!(${2})${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "macro": true
      }
    },
    "337414eb-1406-3cbb-9069-8905b6c40bb8": {
      "content": "| newline_to_br",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "newline_to_br": true
      }
    },
    "33836356-2e43-315b-8ad3-10ed627d7544": {
      "content": "assert_instance_of ${1:ExpectedClass}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asio": true
      }
    },
    "338bb2b8-8d83-3145-9c47-eca62197ac3b": {
      "content": "_.slice(${array}, ${start}, ${end})",
      "doc": "undefined\n\nCreates a slice of `array` from `start` up to, but not including, `end`.\n\n**Note:** This method is used instead of\n[`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\nreturned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-slice",
      "matches": {
        "lodash slice": true
      }
    },
    "338f76ec-1a41-3d61-a3e2-593ea1b23b3f": {
      "content": "_.snakeCase(${string})",
      "doc": "_.snakeCase('Foo Bar');\n// => 'foo_bar'\n\n_.snakeCase('fooBar');\n// => 'foo_bar'\n\n_.snakeCase('--FOO-BAR--');\n// => 'foo_bar'\n\nConverts `string` to\n[snake case](https://en.wikipedia.org/wiki/Snake_case).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-snakecase",
      "matches": {
        "lodash snakecase": true
      }
    },
    "339066b7-6d9f-362c-9fad-cfb1e61334b9": {
      "content": "(map #(${1:lambda}) ${0:coll})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapl": true
      }
    },
    "33945921-ae92-3b21-aca3-cbfe73a5639b": {
      "content": "Serial.println(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sl": true
      }
    },
    "339cc77d-a753-3adf-905e-5f4a257f44e1": {
      "content": "wordwrap(width=${1:79}, break_long_words=${2:True})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "wordwrap",
      "matches": {
        "wordwrap": true
      }
    },
    "339e57e2-4a59-3e3a-94d7-c5407b75cfdc": {
      "content": "protected type ${1}(${2}) is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected type",
      "matches": {
        "protected_type": true
      }
    },
    "339ffec6-fc45-37fa-94ab-0f054deb3fb7": {
      "content": "border: ${1:1px} ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border:   size style color (border)",
      "matches": {
        "border": true
      }
    },
    "33a0b942-4734-3b1b-bad7-90512691b3f1": {
      "content": "<input type=\"image\" name=\"${1}\" id=\"${2:$1}\" src=\"${3}\" alt=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:image": true
      }
    },
    "33a1d074-ed4b-3f70-aaeb-f8c91147343c": {
      "content": "foreach ($${1:variable} as $${2:value}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "foreach ($var as $value) { .. }",
      "matches": {
        "foreach": true
      }
    },
    "33a3a031-349d-341f-8028-42bf01f4ebc3": {
      "content": "gl.glColor4f(${1:red}, ${2:green}, ${3:blue}, ${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl color 4f",
      "matches": {
        "gl": true
      }
    },
    "33a7dd84-6338-3d58-bfc3-845e55a92cdf": {
      "content": "{% autoescape ${1:off} %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      }
    },
    "33aa2660-d319-344e-8f99-a0f892442280": {
      "content": "justify-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      }
    },
    "33ab0e3c-54c8-386a-b57a-cfe4b883658d": {
      "content": "scope :${1:name}, lambda { |${2:param}| ${3:where(${4::${5:field}: ${6:\"${7:value}\"}})} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope lambda",
      "matches": {
        "scopel": true
      }
    },
    "33ac157e-9266-32e2-b967-1b5d9a63203f": {
      "content": "*ngFor=\"let ${1:item} of ${2:stream} | async as ${3:list}\"${0}",
      "doc": "Angular *ngForAsync",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngForAsync",
      "matches": {
        "a-ngForAsync": true
      }
    },
    "33b3fa0a-273d-36d2-9526-c9d243e84fa6": {
      "content": "\\\\item ${1:${VISUAL}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\item",
      "matches": {
        "it": true
      }
    },
    "33b40a08-0e1b-33d8-8a70-212893013046": {
      "content": "@incollection{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    booktitle = {${4}},\n    year = {${5}},\n    memo = {editor, pages, organization, publisher, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@incollection": true,
        "incollection": true
      }
    },
    "33b46f4b-e39f-3655-8295-bc23ffb5ad46": {
      "content": "display: compact",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      }
    },
    "33b7c3ca-e8d2-3e9d-a305-1d969180fda6": {
      "content": "urlize(trim_url_limit=${1:None}, nofollow=${2:False})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "convert plain-text url to <a/>",
      "matches": {
        "urlize": true
      }
    },
    "33c316f6-3d04-352e-9d28-abb112800b0d": {
      "content": "border-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      }
    },
    "33c51183-5a30-3ae3-a6d3-1083aad838de": {
      "content": "concat!(${1})",
      "doc": "concat!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "concat",
      "matches": {
        "concat": true
      }
    },
    "33cef28a-ee83-33f1-be5c-08b31ee0a908": {
      "content": "<track src=\"${1}\" srclang=\"${2}\" label=\"${3}\" default=\"${4:default}>${5}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "track": true
      }
    },
    "33daecbd-6cb2-330c-a5cc-f0fb0bc039fc": {
      "content": "return ${0};",
      "doc": "return",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "base return": true
      }
    },
    "33e0881a-d13c-3e2a-a727-fb49f01573e9": {
      "content": "{% empty %}\n${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      }
    },
    "33e5444e-7516-332f-9f15-d61f02b22373": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${2:Your}Interceptor implements HttpInterceptor {\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn next.handle(req);\n\t}\n}",
      "doc": "Empty Angular HttpInterceptor for HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-empty",
      "matches": {
        "a-http-interceptor": true,
        "angular http interceptor empty": true
      }
    },
    "33e7fe9a-8282-3eec-8547-c92eec42a937": {
      "content": "return(${0})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "33e846a9-766a-3ff8-803f-ae46a355f16a": {
      "content": "<dl class=\"${1}\">\n\t${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl.": true
      }
    },
    "33e9aa46-eb0a-3654-bdbe-ceb68643673e": {
      "content": "${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "off": true
      }
    },
    "33f1bda0-e30c-342e-92a2-10205ba2b9b1": {
      "content": "${1:private/public }${2:static }${3:String} ${4:str}${5: =}${0:value};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "33f24697-1787-3684-9633-d75250803db5": {
      "content": "export const ${1:first} = '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reduxConst",
      "matches": {
        "rxconst": true
      }
    },
    "33f5f6f4-0c70-3578-aaaf-68dfb94d614b": {
      "content": "random(${1:value1}${2:, }${0:value2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "random": true
      }
    },
    "33ffce5c-0d6b-3bac-ba74-2cc63407c99b": {
      "content": "font-effect emboss",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      }
    },
    "34097bea-8744-3994-b46c-6dff2eb856fa": {
      "content": "MsgBox(0, \"${0:VarName}\", $1)",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showvar": true
      }
    },
    "340cc249-5777-350e-8285-618f25b44efd": {
      "content": "data ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      }
    },
    "3412455e-74bc-3acc-9965-3234cad3f664": {
      "content": "if ${1:condition} then\n\t${2:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "341b23af-708b-3fbf-8053-66c668cafed1": {
      "content": "const ${1} = styled.${2}.attrs({\n  ${3}: ${4}\n})`\n  ${5}\n`;",
      "doc": "Styled-Component with attributes",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-with-attributes",
      "matches": {
        "scattrs": true,
        "styled-components component with attributes": true
      }
    },
    "341ce1b2-50f0-3ed1-b713-7357bcb3e523": {
      "content": "{% spaceless %}\n\t$0\n{% endspaceless %}",
      "doc": "spaceless",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "spaceless",
      "matches": {
        "spaceless": true
      }
    },
    "3427982d-e022-3357-a7c3-14f22e907af3": {
      "content": "Js.log(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.log",
      "matches": {
        "cl": true,
        "col": true
      }
    },
    "34289ff8-aee2-3b3b-9b56-5233ff5d67ea": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tupdate(${2:parameters}) {\n\t\t\t// the value of `${2:parameters}` has changed\n\t\t}\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "action w/ update function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-update",
      "matches": {
        "s-action-update": true
      }
    },
    "34306d53-506c-30e8-a44d-81989aa614be": {
      "content": "if (allocated($1)) deallocate(${1:array}, stat=${2:err})\r\nif ($2 /= 0) print *, \"$1: Deallocation request denied$0\"",
      "doc": "Deallocate Array",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "deal",
      "matches": {
        "deal": true
      }
    },
    "343152f1-0421-3743-b547-e04384b445e8": {
      "content": "@change=\"${1:foo} = $event\"",
      "doc": "Vue Emit to Parent Component",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Emit to Parent",
      "matches": {
        "vemit-parent": true
      }
    },
    "343761af-0566-315a-bd74-88e22a7fb6bd": {
      "content": "repeat {\n\t${1}\n} ${2:while|until} ${3};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      }
    },
    "3437f9b8-e661-3ca9-8319-71bc2575d816": {
      "content": "font-variant: small-caps;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      }
    },
    "343f009e-a3db-3229-8ffb-9978c730d5ed": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      }
    },
    "344b4c3d-ff0a-37b1-821e-907ce958ea75": {
      "content": "expect(() => {\n\t$0\n}).toThrow($1);",
      "doc": "expects that the method will throw an error",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrow",
      "matches": {
        "jest expect tothrow": true,
        "tt": true
      }
    },
    "3460db64-1599-3dc4-92c0-2b0d681974b8": {
      "content": "border-left-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      }
    },
    "34677377-7b19-3d16-911e-29f61170e9f1": {
      "content": "page-break-after: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      }
    },
    "346c78d2-fe25-3343-b161-d837432894df": {
      "content": "text-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      }
    },
    "346def29-4368-3f76-900f-160b266a9014": {
      "content": "if (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "if()",
      "matches": {
        "if": true
      }
    },
    "3470dcc9-5460-333e-a9d3-9586997ae39f": {
      "content": "${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undele": true
      }
    },
    "347403d4-14eb-3c08-b839-df6b01ae6365": {
      "content": "${1:$TM_FILENAME_BASE}.propTypes = {\n\t$2\n};",
      "doc": "Creates empty propTypes declaration",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypes",
      "matches": {
        "rpt": true
      }
    },
    "3476ed64-c35e-3743-bb47-2b1a0f8bd9ec": {
      "content": "content: counters(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      }
    },
    "347770c8-65a9-342f-a4d4-8f79e3146b40": {
      "content": "{{ $1 }}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{{ }} statement.",
      "matches": {
        "{": true
      }
    },
    "34882efe-d72b-3658-bdd2-8b3fba0ba098": {
      "content": "open(${1:11},file=${2},status=${3:#:old}${4:#:,position='append'})\n${5}\nclose($1)",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "open",
      "matches": {
        "op": true
      }
    },
    "348e6971-8e39-3fc1-a246-c2477da61106": {
      "content": "const initialState = {}\n\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n\n  case ${1:first}:\n    return { ...state, ...payload }\n\n  default:\n    return state\n  }\n}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reduxReducer",
      "matches": {
        "rxreducer": true
      }
    },
    "3493880d-93c2-3793-b6f3-14b186d98774": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      }
    },
    "349cf4b4-c59a-34a0-b7c5-dee69a4d7edd": {
      "content": "for (${1} : ${2}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enfor": true
      }
    },
    "349ed4e0-a78f-3faa-a96a-30a3c1fad8b7": {
      "content": "for (int ${1:i} = 0; $1 < ${2}; $1++) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for (int x;...; x++) {}",
      "matches": {
        "fori": true
      }
    },
    "34a61b69-4479-3715-a1fc-b2e0d10424a7": {
      "content": "/** @var ${1:Type} \\$${2:var} ${3:description} */\n${4:protected} \\$${2:var}${5: = ${6:null}};$0",
      "doc": "Documented Class Variable",
      "filetype": "php",
      "grammar": "lsp",
      "label": "PHPDoc property",
      "matches": {
        "doc_v": true
      }
    },
    "34acd581-0aea-393b-9c3e-8173febfc2e5": {
      "content": "async with ${1:expr} as ${2:var}:\n\t${3:block}",
      "doc": "Code snippet for an async with statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "async/with",
      "matches": {
        "async/with": true
      }
    },
    "34b3d8bf-4a8b-3936-ab7a-76301a525775": {
      "content": "exception ${0:TARGET} of ${1:string}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "exception",
      "matches": {
        "exn": true
      }
    },
    "34b9705d-e60c-3144-bbc5-ebd69b08d8d5": {
      "content": "font-style oblique",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      }
    },
    "34bce940-e902-35d7-9092-3b78c67d8e1e": {
      "content": "border-top: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "34c39c5c-04c7-36a1-84c0-8b3803a379c7": {
      "content": "{% endswitch %}$0",
      "doc": "endswitch",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endswitch",
      "matches": {
        "endswitch": true
      }
    },
    "34c595ee-1439-3180-b300-8ea28640d29b": {
      "content": "it('should ${1:first}', async () => { ${2:second} })",
      "doc": "Testing asynchronous `it` block",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "itAsyncBlock",
      "matches": {
        "tita": true
      }
    },
    "34d7b501-820a-3843-b3de-cf0a73f15f16": {
      "content": "export default (req, res) => {\n  res.json(${1:object});\n};",
      "doc": "API routes provide built in middlewares which parse the incoming request. Those middlewares are: req.cookies, req.body, req.query.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-api",
      "matches": {
        "next api": true
      }
    },
    "34dd554b-1e92-31c5-8484-99dd7a30c951": {
      "content": "import React from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React",
      "matches": {
        "ir": true
      }
    },
    "34e1fda7-44a5-3c66-8e27-a988b9da644e": {
      "content": "string.min()",
      "doc": "string.min(limit: number | Ref, message?: string | function): Schema\n\nSet a minimum length limit for the string value. The ${min} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-min",
      "matches": {
        "yup string min": true
      }
    },
    "34e5c99d-c71d-3a0d-b7cd-19d43e1e5646": {
      "content": "border-top-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-width: size (border)",
      "matches": {
        "border": true
      }
    },
    "34ebe4af-be2f-3641-a269-a1bea17f8f8a": {
      "content": "display: table-row",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      }
    },
    "34f01950-6983-33b1-bedb-7c2cf932b06a": {
      "content": "CREATE INDEX ${1:_name} ON ${2:cities} (${3:name});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "CREATE INDEX ... ON ... ( ... )",
      "matches": {
        "CREATE_INDEX": true
      }
    },
    "34f2ed86-62b8-3a25-a777-eac0635c8489": {
      "content": "begin\n\t$1\nrescue => exception\n\t\nelse\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Exception block with else",
      "matches": {
        "begin else": true
      }
    },
    "34f3ace2-622b-30a0-8371-21949b23fbee": {
      "content": "console.groupEnd();",
      "doc": "Closes out the corresponding console.group().",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroupEnd",
      "matches": {
        "cge": true
      }
    },
    "34f52cbe-bffd-3151-b2c9-42f024ed7faa": {
      "content": "{{local:${1:image_path}}}${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{<image path>}}",
      "matches": {
        "image_local": true
      }
    },
    "34f5e3e8-201a-3384-bdaa-3f8c53fe665f": {
      "content": "@property (nonatomic, ${1:memory control}) ${2:property};",
      "doc": "Create an Objc property",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create property",
      "matches": {
        "@property": true,
        "prop": true
      }
    },
    "34f6c867-d2a1-3972-b6e9-37360291ae47": {
      "content": "@click=\"${1:handler}(${2:arg}, $event)\"",
      "doc": "v-on click handler with arguments",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-on Shortcut Directive",
      "matches": {
        "von": true
      }
    },
    "34fa1ac3-4e03-34de-b097-4a3ebc1e01c7": {
      "content": "${1:expression} if ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      }
    },
    "350035d6-5e2c-33a9-b256-307650c5dade": {
      "content": "@private",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@private",
      "matches": {
        "@pri": true
      }
    },
    "3508e540-23f0-36bd-80cb-fc48be037479": {
      "content": "align-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      }
    },
    "350adfef-cfc5-3df2-96b4-f1dca6465cf9": {
      "content": "class ${1:MODEL_NAME}UpdateView(UpdateView):\r\n    model = ${1:MODEL_NAME}\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "updateview",
      "matches": {
        "updateview": true
      }
    },
    "3515b0b6-b701-3952-81de-0b947b7bd53d": {
      "content": "if ( ${1:condition} )\n{\n\t${2:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "35188361-c621-3ba9-9ef7-8ac0f618e099": {
      "content": "import { ${1:Observable} } from 'rxjs';\n$0",
      "doc": "RxJs import",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "RxJs Import",
      "matches": {
        "a-rxjs-import": true
      }
    },
    "3519ba77-df08-39d0-bc5c-58c5654eafc9": {
      "content": "for ${1:#:var} in ${2:#:list}\n  ${0:TARGET}\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for in endfor",
      "matches": {
        "for": true
      }
    },
    "351d1880-d2ec-3a4e-b833-79c38baa6ca1": {
      "content": "-ifdef(${1:TEST}).\n${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifd": true
      }
    },
    "351ec4d2-c8b8-3adb-ada8-6ff82c45e9b1": {
      "content": "CREATE DATABASE IF NOT EXISTS ${1:name};",
      "doc": "Create table with conditional",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "createdi",
      "matches": {
        "createdi": true
      }
    },
    "35216f38-bea3-3732-a8cf-cef20ad906d0": {
      "content": "@ManyToMany\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mm": true
      }
    },
    "3522b37b-261f-3217-bcee-441fd45290c4": {
      "content": "{{ $1 | t }}$0",
      "doc": "translate with | t",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "t",
      "matches": {
        "t": true
      }
    },
    "35257f00-56eb-363a-9420-0747dbb64726": {
      "content": "System.Text",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.t": true
      }
    },
    "352a3b11-b18e-3773-8fa7-85637c826485": {
      "content": "position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      }
    },
    "352b8856-3e80-330e-8dad-3dc3537ba665": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "3535ebb9-73cb-3c2f-b201-4224e9b27846": {
      "content": "?assertExit(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asex": true
      }
    },
    "35472219-12df-37cb-b288-4c001a2ce2a1": {
      "content": "${1:obj}.scrollLeft(${2:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrolll": true
      }
    },
    "355a82c5-70cf-3c75-bb7b-40e35b81d14a": {
      "content": "public static void main (String[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psvm": true
      }
    },
    "355e260f-9eb8-3805-88b4-425b0587e584": {
      "content": "const ${1:renderer} = require('vue-server-renderer').createRenderer()$0",
      "doc": "require('vue-server-renderer').createRenderer()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "renderer",
      "matches": {
        "renderer": true
      }
    },
    "355e5d34-3894-39b9-bd4c-48b93eee5019": {
      "content": "void main() {\n\trunApp(\n\t\tMaterialApp(\n\t\t\ttitle: 'Flutter Demo',\n\t\t\ttheme: ThemeData(\n\t\t\t\tprimarySwatch: Colors.blue,\n\t\t\t),\n\t\t\tdebugShowCheckedModeBanner: false,\n\t\t\thome: const HomePage(),\n\t\t),\n\t);\n}\n\nclass HomePage extends StatelessWidget {\n\tconst HomePage({Key? key}) : super(key: key);\n\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Scaffold(\n\t\t\tappBar: AppBar(\n\t\t\t\ttitle: const Text('Home Page'),\n\t\t\t),\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsa": true
      }
    },
    "35634f02-d98f-33f9-b9c3-8efd562f005c": {
      "content": "Vue.nextTick({\n\t$1\n}).then(function ($2) {\n\t$3\n})",
      "doc": "Vue.nextTick( callback, [context] ).then(function(){ })",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "nextTickThen",
      "matches": {
        "VueNextTickThen": true
      }
    },
    "357296d1-683c-376e-a0d2-c8efc6d3f6d5": {
      "content": "// https://eips.ethereum.org/EIPS/eip-2021\r\n// https://github.com/IoBuilders/payoutable-token (example)\r\n// SPDX-License-Identifier: MIT\r\n/*\r\nAn extension to the ERC-20 standard token that allows Token wallet owners to request payout from their wallet,\r\nby calling the smart contract and attaching a payout instruction string.\r\n\r\nToken wallet owners (or approved addresses) can order payout requests through blockchain.\r\nThis is done by calling the orderPayoutFrom or orderPayoutFrom methods,\r\nwhich initiate the workflow for the token contract operator to either honor or reject the payout request.\r\nIn this case, payout instructions are provided when submitting the request, which are used by the operator to determine the destination of the funds.\r\n\r\nIn general, it is not advisable to place explicit routing instructions for the payouts on a verbatim basis on the blockchain,\r\nand it is advised to use a private communication alternatives, such as private channels, encrypted storage or similar,\r\nto do so (external to the blockchain ledger). Another (less desirable) possibility is to place these instructions on the instructions field in encrypted form.\r\n*/\r\n\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface IPayoutable /* is ERC-20 */ {\r\n    enum PayoutStatusCode {\r\n        Nonexistent,\r\n        Ordered,\r\n        InProcess,\r\n        FundsInSuspense,\r\n        Executed,\r\n        Rejected,\r\n        Cancelled\r\n    }\r\n    function authorizePayoutOperator(address orderer) external returns (bool);\r\n    function revokePayoutOperator(address orderer) external returns (bool);\r\n    function orderPayout(string calldata operationId, uint256 value, string calldata instructions) external returns (bool);\r\n    function orderPayoutFrom(string calldata operationId, address walletToBePaidOut, uint256 value, string calldata instructions)\r\n                                                                                                                external returns (bool);\r\n    function cancelPayout(string calldata operationId) external returns (bool);\r\n    function processPayout(string calldata operationId) external returns (bool);\r\n    function putFundsInSuspenseInPayout(string calldata operationId) external returns (bool);\r\n    function executePayout(string calldata operationId) external returns (bool);\r\n    function rejectPayout(string calldata operationId, string calldata reason) external returns (bool);\r\n\r\n    function isPayoutOperatorFor(address walletToDebit, address orderer) external view returns (bool);\r\n    function retrievePayoutData(string calldata operationId) external view\r\n                    returns (address walletToDebit, uint256 value, string memory instructions, PayoutStatusCode status);\r\n\r\n    event PayoutOrdered(address indexed orderer, string indexed operationId, address indexed walletToDebit, uint256 value, string instructions);\r\n    event PayoutInProcess(address indexed orderer, string indexed operationId);\r\n    event PayoutFundsInSuspense(address indexed orderer, string indexed operationId);\r\n    event PayoutExecuted(address indexed orderer, string indexed operationId);\r\n    event PayoutRejected(address indexed orderer, string indexed operationId, string reason);\r\n    event PayoutCancelled(address indexed orderer, string indexed operationId);\r\n    event PayoutOperatorAuthorized(address indexed walletToBePaidOut, address indexed orderer);\r\n    event PayoutOperatorRevoked(address indexed walletToBePaidOut, address indexed orderer);\r\n}",
      "doc": "Draft: EIP-2021: Payoutable Token: An extension to the ERC-20 standard token that allows Token wallet owners to request payout from their wallet, by calling the smart contract and attaching a payout instruction string.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc2021i",
      "matches": {
        "erc2021i-draft": true
      }
    },
    "3573faa0-2992-3217-856f-ff78165963cd": {
      "content": "@includeIf('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@includeIf directive",
      "matches": {
        "includeIf": true
      }
    },
    "357a165a-7ce2-393f-b0e1-d74bfe019202": {
      "content": "use:action={${1:parameters}}",
      "doc": "use action w/ parameters",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use-parameters",
      "matches": {
        "s-use-parameters": true
      }
    },
    "357f252b-25f5-3be5-baa9-a2f1fe7e2655": {
      "content": "logical${1:(${2:kind})}${3:, ${4:attributes}} :: ${5:name}",
      "doc": "Logical",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "log",
      "matches": {
        "log": true
      }
    },
    "358a71cd-0f7f-39e8-845e-7c8e80ab8ac6": {
      "content": "${1:FIELDNAME} = models.BigIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BigIntegerField",
      "matches": {
        "mbigint": true
      }
    },
    "358df97a-98c2-3dc9-bc72-3d339654514e": {
      "content": "std::map<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "358e20ac-318d-3406-a240-2762c19c0820": {
      "content": "place-items ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      }
    },
    "358e3d3e-c794-3a54-9382-26908233dd0d": {
      "content": "tan($2)",
      "doc": "float tan(float angle)\nvec2 tan(vec2 angle)\nvec3 tan(vec3 angle)\nvec4 tan(vec4 angle)\n\nThe tan function returns the tangent of an angle in radians. The input parameter can be a floating scalar or a float vector. In case of a float vector the tangent is calculated separately for every component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "tan",
      "matches": {
        "tan": true
      }
    },
    "3597581d-3cae-3ec4-a208-46f2fac23816": {
      "content": "logger.fatal",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.fatal",
      "matches": {
        "logf": true
      }
    },
    "359e2e68-2581-3462-a521-ea4b9f241005": {
      "content": "div(ng-repeat='${1} in ${2}' | ${3})",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repf": true
      }
    },
    "35a01999-ee92-3acf-b31e-d9afe50948c1": {
      "content": "height: ${1:auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "height",
      "matches": {
        "h": true
      }
    },
    "35a076db-20d1-31a6-80f6-e151f5522bac": {
      "content": "expect($1).toHaveBeenCalled();$0",
      "doc": "returns true if the spy was called",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalled",
      "matches": {
        "jest expect tohavebeencalled": true,
        "thbc": true
      }
    },
    "35a0e7ea-96b2-3a5c-a543-667c93939ed2": {
      "content": "norm(${1:value}, ${2:low}, ${0:high});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "norm": true
      }
    },
    "35a20b11-d6a9-3d84-a0bc-d9246c6f5c91": {
      "content": "test(\"${1:description}\") {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "35a2256d-1def-3476-9aca-f4af82e83b10": {
      "content": "${1:U}\n{\n\tsolver          PBiCG;\n\tpreconditioner  DILU;\n\ttolerance       1e-${2:6};\n\trelTol          ${0:0.0};\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pbicg": true
      }
    },
    "35a6d97d-9948-34fc-9906-17afee41000d": {
      "content": "import gsap from 'gsap';",
      "doc": "import gsap library",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import GSAP",
      "matches": {
        "vimport-gsap": true
      }
    },
    "35ad8452-593c-3756-8b5e-4203e054213d": {
      "content": "set logscale ${1:#:axis}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set logscale <axis>",
      "matches": {
        "logscale": true
      }
    },
    "35b0edee-afdd-3354-b27f-6da198097417": {
      "content": "Map<${1:Object}, ${2:Object}> ${3:map} = new HashMap<$1, $2>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.hm": true
      }
    },
    "35b91e8d-331f-37f0-972c-bb7e16b829f4": {
      "content": "dot($2, $3)",
      "doc": "float dot(float x, float y)\nfloat dot(vec2 x, vec2 y)\nfloat dot(vec3 x, vec3 y)\nfloat dot(vec4 x, vec4 y)\n\nThe dot function returns the dot product of the two input parameters, i.e. the sum of the component-wise products. If x and y are the same the square root of the dot product is equivalent to the length of the vector. The input parameters can be floating scalars or float vectors. In case of floating scalars the dot function is trivial and returns the product of x and y.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "dot",
      "matches": {
        "dot": true
      }
    },
    "35bccb60-5924-30cc-8672-3a22fb0c389e": {
      "content": "clip auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      }
    },
    "35bf90d6-bff1-3fc4-9564-a61c4f40152a": {
      "content": "console.dir(${1:object});",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleDir",
      "matches": {
        "cdi": true
      }
    },
    "35cde0ba-f9ed-324c-a314-60b042d135d0": {
      "content": "${1:obj}.empty()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      }
    },
    "35d12b95-c8cd-33d9-928c-6cc34910643a": {
      "content": "Dir.glob(${1:'dir/glob/*'}) { |${2:file}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "Dir.global() { |file| .. }",
      "matches": {
        "Dir": true
      }
    },
    "35d3b46b-ff9a-3ff2-a9af-d98d329ecfb2": {
      "content": "display ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      }
    },
    "35f54ed1-4660-3151-8573-583b630931c5": {
      "content": "bind:@\"${2:#:binding}\" toObject:${3:observableController} withKeyPath:@\"${4:keyPath}\" options:${5:nil}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      }
    },
    "35f7977f-fdac-3777-85c8-73193aa24b62": {
      "content": "| money_without_currency",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_without_currency": true
      }
    },
    "35fe505f-c2f0-3b2b-be26-c59534463744": {
      "content": "page-break-inside avoid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      }
    },
    "36066b37-5b7e-308e-bc2e-11281bcff6be": {
      "content": "${1:http}.HandleFunc(\"${2:/}\", ${3:handler})",
      "doc": "Snippet for http.HandleFunc()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http.HandleFunc",
      "matches": {
        "hf": true
      }
    },
    "3608066f-6bce-37c7-a05d-cccd0c187f29": {
      "content": "it { should serialize :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iss": true
      }
    },
    "363a1fb4-6e93-3bf4-8627-5d40728bc47e": {
      "content": "accept ${1:variable} ${2|from date,from day,from day-of-week,time|}\n$0",
      "doc": "accept from date/day/week/time",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "accept from",
      "matches": {
        "accept": true
      }
    },
    "3640f1da-df64-3e9c-a691-b1a7789151a4": {
      "content": "enum ${1:#:NAME} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "enum NAME {...}",
      "matches": {
        "enum": true
      }
    },
    "36546996-274d-38d4-9f36-a4b5447d5273": {
      "content": "{msg desc=\"${1:description}\"}\n\t$0\n{/msg}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "Message",
      "matches": {
        "msg": true
      }
    },
    "3663c5ac-d225-35a7-9db8-1fbff28c1a77": {
      "content": "echo CHtml::imageButton('${1:src}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhimgb": true
      }
    },
    "36682995-5e67-35c4-9879-11cd39fd79a0": {
      "content": "PropTypes.any.isRequired,",
      "doc": "Any prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeAnyRequired",
      "matches": {
        "ptanr": true
      }
    },
    "36694b28-c3f9-35b0-8314-ba2cb824f7bf": {
      "content": "preventDefault();\n$1",
      "doc": "preventDefault()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "preventDefault",
      "matches": {
        "preventDefault": true
      }
    },
    "36847598-c3cb-34dc-a55a-fff43f1e93fd": {
      "content": "font-weight: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-weight": true,
        "fw": true
      }
    },
    "36871f4e-91c0-330b-93aa-71a4a25877e1": {
      "content": "has_many :${1:object}s${2:, class_name: \"$1\", foreign_key: \"${4:reference}_id\"}, dependent: :destroy$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many dependent: :destroy",
      "matches": {
        "hmd": true
      }
    },
    "3688d9ab-5f06-3431-aec5-6a5fb87757cd": {
      "content": "case ${1:expression} :\n\t${0}\nbreak;",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "3689844e-ce31-38c2-90d9-1ac723272a45": {
      "content": "DECIMAL",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dec": true
      }
    },
    "368aed8d-f90f-3046-b252-7db7f03979eb": {
      "content": "else\n{\n    $0\n}",
      "doc": "Else statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Else statement",
      "matches": {
        "else": true
      }
    },
    "368f7ce0-dadc-32d6-a4af-77b668a515c6": {
      "content": "padding-bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      }
    },
    "3695bf1a-38b7-30d8-8f5c-b2a620264254": {
      "content": "function! ${1:#:func_name}(${2}) abort\n  ${0:TARGET}\nendfunction",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "func endfunc",
      "matches": {
        "func": true,
        "function": true
      }
    },
    "3696d5ce-86ea-3f22-8a0b-f00440862fd5": {
      "content": "LOGGER.critical(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lc": true
      }
    },
    "36978f64-aa9b-3a84-9c09-0bf1c30f4c1d": {
      "content": "<colgroup>\n\t$1\n</colgroup>",
      "doc": "HTML - Defines group of table columns",
      "filetype": "html",
      "grammar": "lsp",
      "label": "colgroup",
      "matches": {
        "colgroup": true
      }
    },
    "369b611e-dd39-3958-b11b-c7558b83ae23": {
      "content": "border-top-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts": true
      }
    },
    "36a01cfc-5502-3311-8bfc-dd5ef7eff401": {
      "content": "#+BEGIN_SRC ${1:lang}\n$0\n#+END_SRC",
      "doc": "#+BEGIN_SRC ... block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "src block",
      "matches": {
        "<s": true
      }
    },
    "36a02129-9f0a-333b-88a9-7eed07f6118f": {
      "content": "animation-play-state: ${1|paused,running|};",
      "doc": "initial value: running",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-play-state",
      "matches": {
        "anips": true
      }
    },
    "36ab8522-0733-3802-b2c7-01c10ff2f110": {
      "content": "padding-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "36accbe5-11d7-374a-bd32-3c521c81e548": {
      "content": "import { ${2:second} as ${3:third} } from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importAs",
      "matches": {
        "ima": true
      }
    },
    "36b3120f-8c83-3c89-8e35-ecb28b084e89": {
      "content": "?assertNotMatch(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnmat": true
      }
    },
    "36b31433-43da-3966-b212-67aab5f21f9f": {
      "content": "empty-cells hide",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      }
    },
    "36b3ee50-1008-3f12-9c6f-73504e199f63": {
      "content": "@register.inclusion_tag(${2:'$1.html'}, takes_context=True)\ndef $1(context):\n\trequest = context.get('request')\n\t$3\n\treturn {\n\t\t'request': request,\n\t\t$4\n\t}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "register_inclusion_tag",
      "matches": {
        "register_inclusion_tag": true
      }
    },
    "36b52404-470b-3904-a938-914d3d9ab533": {
      "content": "typedef ${1:void} (^${2:type_name}) (${3:parameters})",
      "doc": "Create a block field",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Block typedef",
      "matches": {
        "typedefblock": true
      }
    },
    "36b699c5-1c94-300a-9782-b6afac5e818c": {
      "content": "${1:value} & ${2:value}",
      "doc": "Code snippet for bitwise and operator.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "bitwise and",
      "matches": {
        "band": true
      }
    },
    "36b81f83-2789-35e5-8ab7-a780690a5f27": {
      "content": "<%text>\n\t${1:}\n</%text>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "text",
      "matches": {
        "text": true
      }
    },
    "36bf4f5e-836e-34af-893c-93df7af2d3d5": {
      "content": "if err != nil {\n\treturn nil, errors.Wrapf(err, \"${1:message %v}\", ${2:args...})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrapf with two return values",
      "matches": {
        "errn,wf": true
      }
    },
    "36c10a10-bf51-3157-8607-505db6238a24": {
      "content": "echo CHtml::ajaxLink('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajl": true
      }
    },
    "36c42d8c-052d-3e12-8225-0cf3c8c1d7cb": {
      "content": "text-emphasis dot",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      }
    },
    "36cba281-5835-3ffb-9778-ec2a25158d0e": {
      "content": "NSArray ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsa": true
      }
    },
    "36cc8547-d5dd-3646-8edf-f56860eda52f": {
      "content": "struct ${1:MyStruct} {\n\t$0\n};",
      "doc": "Code snippet for struct",
      "filetype": "c",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "36ce2e28-42d2-3a9f-a744-c07fd5da81e6": {
      "content": "for (int ${1:i} = 0; $1 < ${2:count}; $1${3:++})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "36d0beed-c79d-361e-971a-328e0fe6bf32": {
      "content": "{% trans %}${0}{% endtrans %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      }
    },
    "36d15027-0359-3ecb-bab6-99230b905bda": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.$1;\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vgetters": true
      }
    },
    "36d4a15e-f3d8-3324-9b1b-13e62469700e": {
      "content": "{% raw ${0:expression} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raw": true
      }
    },
    "36d833c4-5499-33af-a757-cf9ad0d6d688": {
      "content": ":nth-last-child($0)",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      }
    },
    "36dca31f-233b-3591-805f-783fc54e0f86": {
      "content": "after_validation :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mav": true
      }
    },
    "36e08c45-f6c5-37e6-a2f5-ab1799052930": {
      "content": "grid-auto-rows max-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      }
    },
    "36e24dee-fb4d-3600-a1ac-1557b49d8804": {
      "content": "fmt.Printf(\"${1}\\n\"${2:})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true,
        "printf": true
      }
    },
    "36e34ee4-fa2a-3153-956e-e09543f9f2a4": {
      "content": "v-else-if='${1:condition}'",
      "doc": "Expects: any. previous sibling element must have v-if or v-else-if.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-else-if",
      "matches": {
        "vElseIf": true
      }
    },
    "36ef2b9d-95e0-3d82-98b4-3cbc9f3d7759": {
      "content": "page-break-inside: avoid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:av": true
      }
    },
    "36f97b37-9232-3664-9ddb-0c6679f36423": {
      "content": "def edit\n\t@${1:model_class_name} = ${0:ModelClassName}.find(params[:id])\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defedit": true
      }
    },
    "36fed101-bf51-3b93-a76b-503849715b16": {
      "content": "<dt class=\"${1}\">${0}</dt>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt.": true
      }
    },
    "36ff518e-1bb0-33a2-b29a-ad46c22233fd": {
      "content": "word-wrap: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      }
    },
    "370df5cf-4e42-3d8a-a031-2c65a077b6de": {
      "content": "[class]=\"${1:expression}\"",
      "doc": "Angular [class] binding",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "a-class": true,
        "angular class": true
      }
    },
    "3717b241-b1bd-3c02-a54d-b572fec26745": {
      "content": "<% unless ${1:falsevalue} %>\n  $2\n<% end %>",
      "doc": "unless .. end",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "unless",
      "matches": {
        "unless": true
      }
    },
    "371b3b48-cfba-34a1-b865-1babfea30746": {
      "content": "place-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      }
    },
    "371eea9f-1677-39df-a7c2-91f0e8e7718a": {
      "content": "| abs",
      "doc": "Math filter: abs",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter abs",
      "matches": {
        "abs": true
      }
    },
    "373c0a6b-cb3a-3f45-9461-a268d6452f6b": {
      "content": "downto(${1:0}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dow": true
      }
    },
    "3742b494-1d9d-30dd-8089-8cce4030ffa2": {
      "content": "let ${1:name} = ${2:value};",
      "doc": "let assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "let-assignment",
      "matches": {
        "base let": true
      }
    },
    "374cc289-fe2d-31c1-a92f-c1e53a6140f3": {
      "content": "number.min()",
      "doc": "number.min(limit: number | Ref, message?: string | function): Schema\n\nSet the minimum value allowed. The ${min} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-min",
      "matches": {
        "yup number min": true
      }
    },
    "3750d90f-def5-3cd8-b9f3-8fdbe5a69bf3": {
      "content": "assert_redirected_to ${1:model}_path(${0:@$1})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artp": true
      }
    },
    "37517029-fbc7-33c1-b2df-ccbe73c7d1ff": {
      "content": "componentDidMount () {\n\t$0\n}",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      }
    },
    "3752ee77-9aa9-3954-8602-62ddca9daca9": {
      "content": "# coding: utf-8\nrequire 'erb'\nputs ERB::Util.url_encode '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlencode": true
      }
    },
    "375f8ef8-97b5-301a-8466-33fa85f08e3e": {
      "content": "class ${1:MODEL_NAME}ListView(ListView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic List View",
      "matches": {
        "listview": true
      }
    },
    "376295ad-e5fa-3099-a63f-14209d7453d7": {
      "content": "_.valuesIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.valuesIn(new Foo);\n// => [1, 2, 3] (iteration order is not guaranteed)\n\nCreates an array of the own and inherited enumerable string keyed property\nvalues of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-valuesin",
      "matches": {
        "lodash valuesin": true
      }
    },
    "3768eff2-3af9-3a0c-b353-c2c0d8e1f692": {
      "content": "frustrum(${1:left}, ${2:right}, ${3:bottom}, ${4:top}, ${5:near}, ${0:far});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frustrum": true
      }
    },
    "376de770-1dac-3470-ad75-27c02ab7ad80": {
      "content": "{% cycle %}",
      "doc": "cycle tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "cycle",
      "matches": {
        "cycle": true
      }
    },
    "377716cd-a04a-338b-87fb-8b6faf3b4547": {
      "content": "color: rgb(${1:255},${2:255},${3:255});$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-rgb (color)",
      "matches": {
        "color": true
      }
    },
    "377f79bd-152f-3f2a-94f6-114ac34e8472": {
      "content": "set the_choice to choose from list ${1}\"\\}}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_ItemFromList": true
      }
    },
    "377ffa60-e40b-332d-bfbd-b0c10650a17f": {
      "content": "if ${1:#:condition} then\n\t${2}\nelse\n\t${3}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "if ... then ... else ...",
      "matches": {
        "if": true
      }
    },
    "3783b41b-947d-3752-8c74-849cc9624081": {
      "content": "${1:public }function ${2:FunctionName}(${3:${4:${5:Type} }\\$${6:var}${7: = ${8:null}}})\n{\n\t${0:# code...}\n}",
      "doc": "Function",
      "filetype": "php",
      "grammar": "lsp",
      "label": "function …",
      "matches": {
        "fun": true
      }
    },
    "37891afe-987e-31b5-86d3-a210aa2b710b": {
      "content": "${1:s:V}.load('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "s:V.load('...')",
      "matches": {
        "vital_load_without_call": true
      }
    },
    "378a06ea-01df-3705-9168-a39dffa716df": {
      "content": ":last-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      }
    },
    "378e56f1-c4af-33f9-859f-fdc522115ec9": {
      "content": "| downcase",
      "doc": "String filter: downcase",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter downcase",
      "matches": {
        "downcase": true
      }
    },
    "37959953-e5c9-30fc-a552-bde99b8e69c5": {
      "content": "\\ref{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\ref": true,
        "ref": true
      }
    },
    "37980842-5b80-3dc0-8201-0902ee5b4975": {
      "content": "-ms-filter 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      }
    },
    "3798b768-443a-36d5-ace5-c02baacd4903": {
      "content": "impl ${1:Type} {\n    ${2:// add code here}\n}",
      "doc": "impl … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "impl",
      "matches": {
        "impl": true
      }
    },
    "379a4ac0-d3c2-3d3a-9953-66cee48625f4": {
      "content": "module ${1:M} (${2:Arg} : ${3:ARG}) : ${4:SIG} = struct\n\t${5:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "define functor - with signature",
      "matches": {
        "Func": true
      }
    },
    "379ac970-aeb7-3ed4-bc03-b59f3db992d4": {
      "content": "assert_select '${1:path}', ${2:text}: '${3:inner_html}' ${4:do}\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_select(..)",
      "matches": {
        "ass": true
      }
    },
    "379c5668-f81b-3c2f-85ca-0f8b7331730f": {
      "content": "{% endembed %}$0",
      "doc": "endembed",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endembed",
      "matches": {
        "endembed": true
      }
    },
    "37a04e51-a0d2-3c33-adb3-185a17fe0a1b": {
      "content": "${1:div}(v-for=\"${2:item} in ${2:item}s\" :key=\"${2:item}.id\")\n\t| {{ ${2:item} }}",
      "doc": "vfor statement",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-for",
      "matches": {
        "vfor": true
      }
    },
    "37aadc53-eac3-39d3-90eb-a169c5993bc0": {
      "content": "<dt>$1</dt>$2",
      "doc": "HTML - Defines a definition term",
      "filetype": "html",
      "grammar": "lsp",
      "label": "dt",
      "matches": {
        "dt": true
      }
    },
    "37bb3c1f-6d22-389e-96e5-28f5dcb00d45": {
      "content": "{% endfor %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endfor",
      "matches": {
        "endfor": true
      }
    },
    "37c0876b-663a-3347-a9ed-992b8163df23": {
      "content": "inline_template(\"<%= ${1} %>\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inline_template": true
      }
    },
    "37c20b0d-1e62-3287-bc65-252aff55497a": {
      "content": "v-else",
      "doc": "Does not expect expression. previous sibling element must have v-if or v-else-if.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-else",
      "matches": {
        "vElse": true
      }
    },
    "37cc065b-539f-33f9-a502-8fdcb6d8b260": {
      "content": "height auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      }
    },
    "37cedccc-1a1c-34fd-96c7-bd0840d68cbd": {
      "content": "const ${1:name} = (${2:arguments}) => {\n\treturn ${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const arrow function assignment",
      "matches": {
        "cf": true
      }
    },
    "37cf9251-64fa-3860-9fcd-0a71aeab6772": {
      "content": "white-space: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "white-space": true,
        "ws": true
      }
    },
    "37d1c9c4-0b12-3ca0-9389-6ee779032a05": {
      "content": "| slice: ${1:0}, ${2:5}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "37de1ff4-32e4-316c-9de4-e4c0906628a7": {
      "content": "library(cluster)\nclara(${1:xData}, k = ${2:k}, metric = ${3:metric}, stand = ${4:stand}, samples = ${5:samples})",
      "doc": "Cluster data into k clusters (library: cluster)",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Clustering",
      "matches": {
        "clara": true
      }
    },
    "37e736c1-2548-395b-bc4f-3b1ddca3cbbc": {
      "content": "long $1 ()\n{\n\tlong $2 = $3;$4\n\treturn $3;\n}",
      "doc": "Creates a function that returns the long type",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create long function",
      "matches": {
        "longfunc": true
      }
    },
    "37e7787a-97d2-320b-a527-feee9ee39b94": {
      "content": "| ceil",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ceil": true
      }
    },
    "37ebd42e-7634-3981-b4dc-22172416b32c": {
      "content": "__ScriptVersion=\"${1:version}\"\n\n#===  FUNCTION  ================================================================\n#         NAME:  usage\n#  DESCRIPTION:  Display usage information.\n#===============================================================================\nfunction usage ()\n{\n\techo \"Usage :  \\$${0:0} [options] [--]\n\n    Options:\n    -h|help       Display this message\n    -v|version    Display script version\"\n\n}    # ----------  end of function usage  ----------\n\n#-----------------------------------------------------------------------\n#  Handle command line arguments\n#-----------------------------------------------------------------------\n\nwhile getopts \":hv\" opt\ndo\n  case \\$opt in\n\n\th|help     )  usage; exit 0   ;;\n\n\tv|version  )  echo \"\\$${0:0} -- Version \\$__ScriptVersion\"; exit 0   ;;\n\n\t* )  echo -e \"\\\\n  Option does not exist : \\$OPTARG\\\\n\"\n\t\t  usage; exit 1   ;;\n\n  esac    # --- end of case ---\ndone\nshift \\$(($OPTIND-1))",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      }
    },
    "37f573da-606e-3663-96d6-efff513c570f": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-bool-required",
      "matches": {
        "prop-types bool required": true,
        "ptbr": true
      }
    },
    "37ff872b-4e72-3cf1-9b7c-fffdffae5f97": {
      "content": "$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$retVal = (condition) ? a : b",
      "matches": {
        "t": true
      }
    },
    "3800e44d-c4af-30b7-a5f8-dbaa2c2824d9": {
      "content": "background-repeat: ${1|no-repeat,repeat-x,repeat-y,repeat,space,round|};",
      "doc": "initial value: repeat",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-repeat",
      "matches": {
        "bgr": true
      }
    },
    "380276cd-a548-3ceb-861b-34d87a569bfa": {
      "content": "def ${1:FUNCTIONNAME}_${2|pre_init,post_init,pre_save,post_save,pre_delete,post_delete,m2m_changed,class_prepared,Management signals,pre_migrate,post_migrate|}_receiver(sender, instance, *args, **kwargs):\n\tpass\n\n\n${2|pre_init,post_init,pre_save,post_save,pre_delete,post_delete,m2m_changed,class_prepared,Management signals,pre_migrate,post_migrate|}.connect(${1:name}_${2|pre_init,post_init,pre_save,post_save,pre_delete,post_delete,m2m_changed,class_prepared,Management signals,pre_migrate,post_migrate|}_receiver, sender=${3:MODELNAME})",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "receiver",
      "matches": {
        "receiver": true
      }
    },
    "38034440-bffa-34ae-93d0-e81188aee901": {
      "content": "<td>${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "38063d07-241f-3677-8942-72184b1462cc": {
      "content": "text-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      }
    },
    "380a514c-6ac4-3948-a4f8-b5f4d81600fc": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "38116ae6-08e0-368e-adaa-0413d5cb7f2b": {
      "content": "border-bottom-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      }
    },
    "3811dd33-e999-3071-8402-8982a4a4cbfe": {
      "content": "getElementBy${1:Id}('${0}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gett": true
      }
    },
    "38163cb7-d692-32bd-97fd-a0f83557d0d4": {
      "content": "{\n\t\"type\": \"text\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": \"$3\",\n\t\"info\": \"$4\",\n\t\"placeholder\": \"$5\"\n},$6",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema text",
      "matches": {
        "_text": true
      }
    },
    "381c8825-1f2a-3037-ac42-51607ec30828": {
      "content": "${1:FIELDNAME} = forms.ComboField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ComboField",
      "matches": {
        "fcombo": true
      }
    },
    "38201ead-8230-34a1-a3de-c8232e574bde": {
      "content": "content attr(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      }
    },
    "38229439-29d7-3ea9-baa9-2c65bc113687": {
      "content": "it_behaves_like ${0:'shared examples name'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibl": true
      }
    },
    "38231b57-1d23-344c-b7a5-e11e69fc0a24": {
      "content": "accept ${1}(${2}) do\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "accept",
      "matches": {
        "acc": true
      }
    },
    "382d4bd6-452d-3a84-af6b-e62162bd6d10": {
      "content": "return this.httpClient.get('${1:url}');$0",
      "doc": "Angular HttpClient.get",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "httpclient-get",
      "matches": {
        "a-httpclient-get": true,
        "angular http client get": true
      }
    },
    "38328d87-f682-335a-b4b5-112e005b8365": {
      "content": "${1:#:expression} for @${2:#:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xfor": true
      }
    },
    "38339028-94e1-3dbc-88f2-8994e6e596f3": {
      "content": "@media screen and (${1:max-width: 300px}) {\n  $0\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "@media",
      "matches": {
        "med": true
      }
    },
    "38353312-accf-3999-bcc6-c4818a5f6ab0": {
      "content": "require('${1:module}');",
      "doc": "require",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "base require": true
      }
    },
    "383aca8b-09a1-394e-b5ea-db1eba4e6313": {
      "content": "file { \"${1:filename}\":\n\tensure  => ${2:present},\n\towner   => \"${3:root}\",\n\tgroup   => \"${4:root}\",\n\tmode    => \"${5:0644}\",\n\tsource  => \"puppet:///modules/${6:module}/${7:source}\",\n\tcontent => template(\"${8:module}/${9:template}\"),\n\talias   => \"${10:alias}\",\n\trequire => [ Package[\"${11:package}\"], File[\"${12:file}\"], ],\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      }
    },
    "383e5fc2-838e-3b4d-84f9-7db799520c91": {
      "content": "getters: {\n\t${1:value}: state => {\n\t\treturn state.${1:value};\n\t}\n}",
      "doc": "vuex getter",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Getters",
      "matches": {
        "vgetter": true
      }
    },
    "383f1d17-6c5b-393f-8af5-18944f53e2d3": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}', props<{${4:key}: ${5:type}}>());",
      "doc": "Creates an NgRx Action with Props",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-action-w-props",
      "matches": {
        "a-ngrx-create-action-props": true,
        "angular ng rx create action props": true
      }
    },
    "3842a82a-6a0b-3cda-bc0e-56e08615ce15": {
      "content": "${1:FIELDNAME} = forms.FilePathField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FilePathField",
      "matches": {
        "ffilepath": true
      }
    },
    "3843585e-0a01-3d82-8870-faf48cbcd677": {
      "content": "background-repeat ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      }
    },
    "38438d79-3320-3f25-b5b2-284ac8d599c7": {
      "content": "bind:${1:property}",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind",
      "matches": {
        "s-bind": true
      }
    },
    "3848c4d5-da7f-32f3-8116-357468327f8e": {
      "content": "protected bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb|": true
      }
    },
    "384c47a4-b1f3-32c5-9725-1ac3f5099b52": {
      "content": "text-transform: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-transform",
      "matches": {
        "tt": true
      }
    },
    "384dc334-e373-3cde-b18c-847d775e7d5e": {
      "content": "@for ${1:$i} from ${2:1} through ${3:3}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "38541176-06e8-31e1-a44c-d490564850ad": {
      "content": "_.propertyOf(${object})",
      "doc": "var array = [0, 1, 2],\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.propertyOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n// => [2, 0]\n\nThe opposite of `_.property`; this method creates a function that returns\nthe value at a given path of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-propertyof",
      "matches": {
        "lodash propertyof": true
      }
    },
    "38541742-8322-3356-98ab-feaae5f63644": {
      "content": "text-replace: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      }
    },
    "385522e2-feb3-3f4a-a0d0-8f58e17a4bec": {
      "content": "{\n\t\"type\": \"textarea\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": \"$3\",\n\t\"info\": \"$4\",\n\t\"placeholder\": \"$5\"\n},$6",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema textarea",
      "matches": {
        "_textarea": true
      }
    },
    "38580031-ef46-3ee3-ade3-ab35e6af9f3d": {
      "content": "import ipdb; ipdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import ipdb..",
      "matches": {
        "ipdb": true
      }
    },
    "3859d4e0-ebf8-3ee2-a96e-a242ab703278": {
      "content": "it.todo('${1:description}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "it.todo",
      "matches": {
        "itt": true
      }
    },
    "385a11d0-1809-31a0-9530-db7bcc88c89e": {
      "content": "package ${1:com.github.ujihisa}\n\nclass ${2:TARGET} {\n  public static void main(String[] args) {\n    println(\"Hello world!\")\n  }\n}",
      "doc": "",
      "filetype": "groovy",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "385fa095-4c97-3e41-920e-2f94a4e8f3f4": {
      "content": "use Doctrine\\ORM\\Mapping as ORM;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Doctrine\\..\\Mapping as ORM",
      "matches": {
        "useorm": true
      }
    },
    "386ad1f4-41b4-3eee-9b5f-7d1808fbf99f": {
      "content": "do {\n  ${0}\n} while (${0:/* condition */});",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      }
    },
    "38737b9d-c614-3fb8-876a-3f74b1939a54": {
      "content": "inspect $1 replacing all ${2|spaces,zero|} by '${3}'",
      "doc": "inspect replacing",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "inspect replacing",
      "matches": {
        "inspect": true
      }
    },
    "3873d55f-eaf2-3fd1-988d-c88e1f79a515": {
      "content": "while ${1:condition}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "387ca219-b2f0-3263-85d6-910ab8b12d52": {
      "content": "margin ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      }
    },
    "387e8cfc-ef5d-3a6c-9a4f-0a3da7d1dfa9": {
      "content": "*${1:Emphasis}* ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*": true
      }
    },
    "38964d48-acf8-3a45-a777-9a769a2d8bd9": {
      "content": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "viewport": true
      }
    },
    "3897c99c-70ea-3c6c-9e2d-27dd91ccd8ed": {
      "content": "for ${1:e} in ${2:c}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "3899e483-3785-33e8-adb5-24b945fc9d24": {
      "content": "expect($1).toHaveBeenCalledWith($0);",
      "doc": "returns true if the spy has been called with",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalledwith",
      "matches": {
        "jest expect tohavebeencalledwith": true,
        "thbcw": true
      }
    },
    "389a4ea0-50cb-3869-bc09-c9251a35cec2": {
      "content": "while(${1:/*condition*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "while (wh)",
      "matches": {
        "wh": true
      }
    },
    "389f134d-5c31-37bf-88aa-29c92e941b2d": {
      "content": "import ${1:Img} from \"gatsby-image/withIEPolyfill\"",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-import-withiepolyfill",
      "matches": {
        "gatsby-image import withiepolyfill": true
      }
    },
    "38a03aab-3bac-3ef8-aa5f-ff397086a373": {
      "content": "map do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapd": true
      }
    },
    "38a186bc-2847-3e89-96e6-9c522c0357c8": {
      "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\"\n\"http://www.w3.org/TR/html4/loose.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doct": true
      }
    },
    "38a60135-0a39-3215-ba68-bbc2a87bd639": {
      "content": "constructor (props) {\n\tsuper(props)\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props as arguments",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "con": true
      }
    },
    "38a61319-379c-3a97-93fd-e021d29fa08a": {
      "content": "{% include \"${1:template}\" with {\n\t${2:key}: ${3:\"${4:value}\"}\n} %}\n$0",
      "doc": "include w/ key/value",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "inckv",
      "matches": {
        "inckv": true
      }
    },
    "38ad7220-c629-331f-a64b-83bb338cff84": {
      "content": "c(${0:items})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      }
    },
    "38b4473c-f2e3-3f13-a5e3-5b53314441d6": {
      "content": "protected function tearDown()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "protected function tearDown() { ... }",
      "matches": {
        "teardown": true
      }
    },
    "38b4ae4f-7b79-328b-86e1-1c74e00f37e8": {
      "content": "${1:FIELDNAME} = models.CharField(max_length=${2}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      }
    },
    "38b6042a-09ad-3788-af53-8c6cb40f0e27": {
      "content": "{ |${1:var}| $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert inline block",
      "matches": {
        "b": true
      }
    },
    "38b9580d-9462-3773-8dab-534cbb08fc48": {
      "content": "\\\\frac{\\\\partial^2 {$1}}{\\\\partial {$2} \\\\partial {$3}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "second partial derivation",
      "matches": {
        "ppdv": true
      }
    },
    "38bd0b9d-c2b4-37b3-82a0-0eb0a4608688": {
      "content": "<li>${0}</li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      }
    },
    "38cc1601-0541-3b70-ba9b-8456c16f8c2f": {
      "content": "for (${1:auto} ${2:i} : ${3:container}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "38d8587c-6fe8-3bb2-aba6-0d901191a9fc": {
      "content": "(${1:arguments}) => ${2:statement}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "arrow function",
      "matches": {
        "af": true
      }
    },
    "38d8cae0-7c66-3d6f-8f6b-c30c702e9ff3": {
      "content": "cron { \"${1:name}\":\n\tcommand => \"${2}\",\n\tuser    => \"${3:root}\",\n\t${4}    => ${0},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cron": true
      }
    },
    "38db34e4-f8ff-3362-9848-cc12af873294": {
      "content": "import ${0:Data.Text}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "38deec1d-4ca8-360e-a7ea-a4a821168ec4": {
      "content": "constructor(props, context) {\n\tsuper(props, context);\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props and context as arguments",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "classConstructorContext",
      "matches": {
        "conc": true
      }
    },
    "38df1cbb-3715-3ef9-9410-3c237dea17d9": {
      "content": "text-align-last center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      }
    },
    "38e005d4-0bed-37f3-a3ab-d4d687a92810": {
      "content": "limit: ${limit:5}",
      "doc": "For loops option",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag Option limit",
      "matches": {
        "limit": true
      }
    },
    "38e171c3-a22d-3e54-8537-7a0c4eb3b925": {
      "content": "FUNCTION MOD(${1:value},${2:modulus})$0",
      "doc": "remainder from the division of value by modulus",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MOD",
      "matches": {
        "FUNCTION MOD": true
      }
    },
    "38e31fba-71f2-3bad-b6e2-2c266ad3b9ce": {
      "content": "<c:url value=\"${1}\" var=\"${2}\">\n\t<c:param name=\"${4}\" value=\"${5}\" />\n\tcparam+${0}\n</c:url>\n<a href=\"\\${$2}\">${3}</a>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curl+": true
      }
    },
    "38e4314e-2ae1-3f60-9f9f-c2b3a1a9ff77": {
      "content": "value=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "value": true
      }
    },
    "38e8a5dc-a3d2-32d0-be62-1be1445da9e8": {
      "content": "RAILS_DEFAULT_LOGGER.debug \"${1:message}\"$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "RAILS_DEFAULT_LOGGER.debug (rdb)",
      "matches": {
        "rdb": true
      }
    },
    "38eb9ff4-0d8f-3ad1-b7ba-659c007e493b": {
      "content": "${1:FIELDNAME} = forms.TypedMultipleChoiceField($2)",
      "doc": "TypedMultipleChoiceField (ftmuchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ftmuchoice",
      "matches": {
        "ftmuchoice": true
      }
    },
    "38f954ec-c1ab-3a51-8f7a-0370137b951f": {
      "content": "\\begin{mdseries}\n\t${1:TARGET}\n\\end{mdseries}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{mdseries} \\mdseries": true,
        "mdseries": true
      }
    },
    "38f9f900-ae29-3637-a157-45d924e734a5": {
      "content": "do {\n\t${0}\n} while (${1})",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "do ... while",
      "matches": {
        "do": true
      }
    },
    "39002597-be10-3129-86ac-53b8532d192b": {
      "content": "\\\\begin{listing}[language=${1:language}]\n\t${0:${VISUAL}}\n\\\\end{listing}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lst": true
      }
    },
    "390b9ddd-78d1-3ca4-98bf-4d7cd6f48c10": {
      "content": "sum(attribute=${1:None}, start=${2:0})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sum of sequence of numbers + start",
      "matches": {
        "sum": true
      }
    },
    "390cd63c-44b4-3abb-a9af-04646088bd82": {
      "content": "{:else if ${1: otherCondition}}\n\t${2: <!-- else if content here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-if-block",
      "matches": {
        "svelse-if": true,
        "svelte else if": true
      }
    },
    "390d3904-0151-33ff-b67e-c39adcdccc36": {
      "content": "if ${1:condition} then ${2:value} else ${0:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      }
    },
    "391236b0-62c1-3f31-b2c6-edd158cbd401": {
      "content": "border-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      }
    },
    "3923a5e1-54f3-3dee-ab3d-a8e3fad224d5": {
      "content": "Ada.Text_IO.New_Line(${1:1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.New_Line",
      "matches": {
        "newline": true
      }
    },
    "392a88f1-b923-3715-979a-efd6623f8d8e": {
      "content": "echo CHtml::activeCheckBoxList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhacbl": true
      }
    },
    "392ef7d5-df9d-3777-a392-75032d85b4be": {
      "content": "jasmine.anything()",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "anything (js)",
      "matches": {
        "anyt": true
      }
    },
    "392f14b2-2bab-3f4d-b84c-f6b41d2d3891": {
      "content": "animation-direction: ${1|alternate,alternate-reverse,reverse,normal|};",
      "doc": "initial value: normal",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-direction",
      "matches": {
        "anidi": true
      }
    },
    "3936a338-ca48-3578-9414-802203ce69ce": {
      "content": "<figure>${0}</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure": true
      }
    },
    "3937c574-aeab-378b-8180-c2d846d323e0": {
      "content": "{#await ${1:promise}}\n\t<!-- promise is pending -->\n{:then ${2:value}}\n\t<!-- promise was fulfilled -->\n{/await}",
      "doc": "await then block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-then-block",
      "matches": {
        "s-await-then-block": true
      }
    },
    "393d6304-574b-3bc7-b77e-ca0b25888ed7": {
      "content": "{%- increment ${variable} -%}",
      "doc": "Variable tag: increment",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag increment",
      "matches": {
        "increment": true
      }
    },
    "393dd7a8-6aab-3d74-a567-a9a36bfdadfc": {
      "content": "@each('$1', $$2, '$3')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@each directive",
      "matches": {
        "each": true
      }
    },
    "393ebf70-ab1f-3a8a-9b47-6a1fe96d44c4": {
      "content": "{\n\t\"type\": \"link_list\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_link_list": true
      }
    },
    "394334ad-992b-334b-b084-3ccba98130c5": {
      "content": "<typeparamref name=\"${1:#:name}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<typeparamref name=\"\"/>",
      "matches": {
        "typeparamref": true
      }
    },
    "3944ba14-8893-3da3-a009-06088bff0539": {
      "content": "clear right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      }
    },
    "3947e764-5bfd-35c0-a4e9-e1b210ed1db9": {
      "content": "typeof ${1:source} === '${2:undefined}'",
      "doc": "typeof",
      "filetype": "base",
      "grammar": "lsp",
      "label": "typeof",
      "matches": {
        "base typeof": true
      }
    },
    "394f4bb0-6282-3b2f-bdb5-9cfb3a9c807c": {
      "content": "FUNCTION ACOS(${1:cosine})$0",
      "doc": "function trigonometric arc-cosine, or inverse cosine, of cosine",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ACOS",
      "matches": {
        "FUNCTION ACOS": true
      }
    },
    "39577085-7fd6-3c1c-bf05-b52610ae112b": {
      "content": "import { TimelineMax, ${1:Ease} } from 'gsap'",
      "doc": "component methods options that dispatch an action from vuex store.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-gsap",
      "matches": {
        "vimport-gsap": true,
        "vue import gsap": true
      }
    },
    "395afc4f-b3c3-3be4-9045-6771dec6191f": {
      "content": "<%= ${1:f}.input :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffi": true
      }
    },
    "395de921-7ede-3d77-990a-f88b12940b59": {
      "content": "align-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      }
    },
    "3961044b-dd4f-3ef1-b7d0-3b37cd8f3af8": {
      "content": "import React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n  return (\n    <div>${1:first}</div>\n  )\n}",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionalComponent",
      "matches": {
        "rfc": true
      }
    },
    "396112e6-e9de-3cfc-a0af-7c95b937bb0b": {
      "content": "$.unique(${1:array})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      }
    },
    "39647a4b-5fcd-3101-968c-f284e774756b": {
      "content": "render json:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :json",
      "matches": {
        "rj": true
      }
    },
    "3965dbe1-68dd-36e5-92b1-9a05a1ee86da": {
      "content": "background: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      }
    },
    "396d39a5-60a7-3330-889a-241bd136f68d": {
      "content": "beforeEnter: (to, from, next) => {\n\t${1:// ...}\n}",
      "doc": "beforeEnter: (to, from, next) => { }",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeEnter",
      "matches": {
        "beforeEnter": true
      }
    },
    "3972a121-9318-3a9d-ad87-c3954fb1ee51": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "3978ad89-62a7-3413-bf9b-ef5206ffecbd": {
      "content": "<ul>\n\t{% for tag in craft.tags.group(\"${1:tagGroupHandle}\").all() %}\n\t\t<li>{{ tag }}</li>\n\t{% endfor %}\n</ul>\n$0",
      "doc": "craft.tags",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "tags",
      "matches": {
        "tags": true
      }
    },
    "397f977a-9d4a-3088-a912-d169847e14ae": {
      "content": "config(function($1) {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "angular config",
      "matches": {
        "aconf": true
      }
    },
    "397fe4f1-8022-3f15-b0e0-ebdcf24d0a73": {
      "content": "{% block ${1} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      }
    },
    "39845761-9d7e-3888-9f91-1b1702be4e00": {
      "content": "#!/usr/bin/env julia",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "3989beaf-7699-3ae0-bc60-f3a2eb017400": {
      "content": "FOREIGN KEY(${1:attribute}) REFERENCES ${2:tableName}(${3:attribute})",
      "doc": "Foreing Key",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "foreingk",
      "matches": {
        "foreingk": true
      }
    },
    "398d3c87-0ea5-3fb2-8abf-0828b6219588": {
      "content": "// https://eips.ethereum.org/EIPS/eip-20\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface Token {\r\n\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @return balance the balance\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n\r\n    /// @notice send `_value` token to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return success Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value) external returns (bool success);\r\n\r\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return success Whether the transfer was successful or not\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n\r\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of wei to be approved for transfer\r\n    /// @return success Whether the approval was successful or not\r\n    function approve(address _spender, uint256 _value) external returns (bool success);\r\n\r\n    /// @param _owner The address of the account owning tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return remaining Amount of remaining tokens allowed to spent\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}",
      "doc": "ERC20 token standard interface",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc20 interface",
      "matches": {
        "erc20i": true
      }
    },
    "398e5bb4-090c-3646-9ca7-359e40bf7b97": {
      "content": "<?php\n\tnamespace Models;\n\n\tuse Core\\Model;\n\n\tclass ${1:class_name} extends Model\n\t{\n\t\tfunction __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_model": true
      }
    },
    "399f253b-d5b2-3492-b43a-aebabe86ba37": {
      "content": "font-weight bolder",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:br": true
      }
    },
    "39b11aac-ed1c-3a39-919c-34a47208324d": {
      "content": "loadBytes(\"${0:filename}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadBytes": true
      }
    },
    "39b5e197-98ab-3cc1-a9b9-1878c9f1ceb5": {
      "content": "enum ${1:#:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      }
    },
    "39b8f43e-e548-3c48-9aa1-9519575e9143": {
      "content": "Yii::app()->request->isAjaxRequest",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yisajax": true
      }
    },
    "39bc5b7a-aef9-3e7c-ab05-7d7a5570bee6": {
      "content": "background-origin: padding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      }
    },
    "39be5fcf-05f3-3503-991c-8a681d674c9c": {
      "content": "<svelte:component this={${1:component}} />",
      "doc": "svelte:component",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component",
      "matches": {
        "s-component": true
      }
    },
    "39e84c0e-f3c3-31e8-9281-d5caec744859": {
      "content": "${1:Record} { ${2:recFieldA} = ${3:undefined}\n\t\t\t, ${4:recFieldB} = ${0:undefined}\n\t\t\t}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      }
    },
    "39f5e420-f8dc-3f7e-8973-152375429e22": {
      "content": "_.filter(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n_.filter(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, { 'age': 36, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.filter(users, 'active');\n// => objects for ['barney']\n\nIterates over elements of `collection`, returning an array of all elements\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).\n\n**Note:** Unlike `_.remove`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-filter",
      "matches": {
        "lodash filter": true
      }
    },
    "39f7beb6-2db2-3500-91af-77db05749544": {
      "content": "_.mapValues(${object}, ${iteratee})",
      "doc": "var users = {\n  'fred':    { 'user': 'fred',    'age': 40 },\n  'pebbles': { 'user': 'pebbles', 'age': 1 }\n};\n\n_.mapValues(users, function(o) { return o.age; });\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\n// The `_.property` iteratee shorthand.\n_.mapValues(users, 'age');\n// => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\nCreates an object with the same keys as `object` and values generated\nby running each own enumerable string keyed property of `object` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, key, object).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mapvalues",
      "matches": {
        "lodash mapvalues": true
      }
    },
    "39f995e3-1084-3a42-abb1-e9bf6bc71fb9": {
      "content": "page-break-after: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:a": true
      }
    },
    "3a042a73-0e7f-3a6d-b22a-60b29043bc57": {
      "content": "\\\\begin{figure}\n\\\\begin{center}\n\t\\\\includegraphics[scale=${1}]{Figures/${2}}\n\\\\end{center}\n\\\\caption{${3}}\n\\\\label{fig:${4}}\n\\\\end{figure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "figure environment (includegraphics)",
      "matches": {
        "fig": true
      }
    },
    "3a07a596-4ecf-3f32-a95e-62bb09907243": {
      "content": "object ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      }
    },
    "3a0efcdd-8daa-34d8-b4d0-642b2f36a7ef": {
      "content": "setTimeout(() => {\n\t${0}\n}, ${1:delay});",
      "doc": "setTimeout",
      "filetype": "base",
      "grammar": "lsp",
      "label": "settimeout",
      "matches": {
        "base set timeout": true
      }
    },
    "3a0f520f-53f6-38ef-9230-045e90256cec": {
      "content": "flex-direction: row-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:rr": true
      }
    },
    "3a1ccc38-16c4-3fd0-a7e8-88a0901b7c47": {
      "content": "fmt.Println(\"$1\")",
      "doc": "Snippet for fmt.Println()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "fmt.Println",
      "matches": {
        "fp": true
      }
    },
    "3a1cfa03-4f51-3f75-8809-a6a3dc9659f4": {
      "content": "from django import template\nregister = template.Library()",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "ilib",
      "matches": {
        "ilib": true
      }
    },
    "3a303259-f3c1-367b-86c9-248da274f815": {
      "content": "${1:obj}.not('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not": true
      }
    },
    "3a3032ef-2825-342e-a7bc-e52199f32ad8": {
      "content": "for (const ${1:item} in ${2:object}) {\n\t${0}\n}",
      "doc": "Iterating over property values of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forIn",
      "matches": {
        "fin": true
      }
    },
    "3a30db96-630b-3af4-ac79-77b0bda2299a": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Arrow Function Component with ES7 module system with PropTypes",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactArrowFunctionComponentWithPropTypes",
      "matches": {
        "rafcp": true
      }
    },
    "3a3ae6ab-a315-3091-bd60-5e2036b24313": {
      "content": "Lorem ipsum dolor sit amet, qui minim labore adipisicing minim sint cillum sint consectetur cupidatat.",
      "doc": "Lorem Ipsum Sentence",
      "filetype": "global",
      "grammar": "lsp",
      "label": "Lorem Ipsum Sentence",
      "matches": {
        "loremSent": true
      }
    },
    "3a3eb1e5-0d7c-3122-b62c-ada2ac24b54b": {
      "content": "${1:/* condition */} ? ${2:/* if true */} : ${0:/* if false */}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ter": true
      }
    },
    "3a420357-6556-3f21-90ca-24bf417c83b7": {
      "content": "font-style: ${1:normal/italic/oblique};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-style:   normal:italic:oblique (font)",
      "matches": {
        "font": true
      }
    },
    "3a430a88-9b7a-32b2-b4f0-c6608cdbb49a": {
      "content": "${1:obj}.submit (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      }
    },
    "3a48fce1-c571-3d52-9565-234e26f72e3b": {
      "content": "path",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "path",
      "matches": {
        "path": true
      }
    },
    "3a4d3895-52a8-3ede-9d10-c50fe70a1948": {
      "content": "clip: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      }
    },
    "3a523e49-6ffc-3eb8-bd27-f1561f1f288c": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "!important",
      "matches": {
        "!": true
      }
    },
    "3a579435-e8e9-3699-b7f9-2de8fd7bc4d3": {
      "content": "type ${1} is ${2}\n\twith Default_Value => ${3};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type with default value",
      "matches": {
        "type_default": true
      }
    },
    "3a5a00ee-1a95-3e90-93c7-c7f865d99d49": {
      "content": "<|-- $1",
      "doc": "Arrow for object extends another object",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Extension",
      "matches": {
        "ext": true
      }
    },
    "3a62775c-749c-36d0-a05d-7677c2f0e8c0": {
      "content": "gl_FragColor",
      "doc": "mediump vec4 gl_FragColor;\n\nThe built-in variable gl_FragColor is used by the fragment shader to hand over the color of the fragment to the OpenGL ES 2.0 pipeline. The variable is pre-declared as shown above that way the variable can be used in the fragment shader for an assignment without prior declaration.\nThe values of the color vector are interpreted in the RGBA color space.\nThe assignment of values to this variable is mandatory for the fragment shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_FragColor",
      "matches": {
        "gl_FragColor": true
      }
    },
    "3a65c679-ea05-31a1-9221-5b43d61ff981": {
      "content": "def new\n\t@${1:model_class_name} = ${2:ModelClassName}.new\nend",
      "doc": "def new",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "New action",
      "matches": {
        "new": true
      }
    },
    "3a6b3ad6-7745-3a1c-b814-acd29470e0fa": {
      "content": "View::render('${1:view}', $${2:array});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_render": true
      }
    },
    "3a7621ed-0b89-3531-a6f4-286547485b4c": {
      "content": "\\begin{pmatrix}\n\t${1:TARGET}\n\\end{pmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\pegin{bmatrix} \\pmatrix": true,
        "pmatrix": true
      }
    },
    "3a79291c-c9a4-386e-91e2-dea739abe7f1": {
      "content": "daply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      }
    },
    "3a7b6b91-15eb-3726-b74b-0598170b8a0e": {
      "content": "lerpColor(${1:c1}, ${2:c2}, ${0:amt});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lerpColor": true
      }
    },
    "3a7cc513-5956-3c62-9e96-b58557556b0a": {
      "content": "${1:FIELDNAME} = models.IPAddressField($2)",
      "doc": "IPAddressField (mip).\n\nThis field has been deprecated since version 1.7 in favor of GenericIPAddressField.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mip",
      "matches": {
        "mip": true
      }
    },
    "3a810a2e-0239-3781-8098-1214808acbbc": {
      "content": "_.padStart(${string}, ${length}, ${chars})",
      "doc": "_.padStart('abc', 6);\n// => '   abc'\n\n_.padStart('abc', 6, '_-');\n// => '_-_abc'\n\n_.padStart('abc', 3);\n// => 'abc'\n\nPads `string` on the left side if it's shorter than `length`. Padding\ncharacters are truncated if they exceed `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-padstart",
      "matches": {
        "lodash padstart": true
      }
    },
    "3a814faf-2689-33be-8cf6-8e95def60f65": {
      "content": "if $${1:variable} {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "3a81fbe5-6172-3c45-9d16-51fc00ba6961": {
      "content": "function integer-of-formatted-date(${1:format},${2:date})$0",
      "doc": "converts date in specified format to an internal integer",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer-of-formatted-date",
      "matches": {
        "function integer-of-formatted-date": true
      }
    },
    "3a8c5c0f-db66-35ec-9827-4f2b0331b76b": {
      "content": "elif ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "elif ...: ...",
      "matches": {
        "elif": true
      }
    },
    "3a9852cf-388d-3af1-9698-5df0e5539de5": {
      "content": "font-weight: ${1:normal/bold};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-weight: weight (font)",
      "matches": {
        "font": true
      }
    },
    "3a9b31b6-4ce4-34d5-928f-64bcdaa417bf": {
      "content": "Ok(${1:result})",
      "doc": "Ok(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "Ok",
      "matches": {
        "Ok": true
      }
    },
    "3aa16b9a-fb4d-3587-a387-a7799a370108": {
      "content": "case (${1:/* variable */})\n\t${2:/* value */}: begin\n\t\t${3}\n\tend\n\tdefault: begin\n\t\t${4}\n\tend\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "3ab56956-f15f-3434-9ee4-9674ea657a59": {
      "content": "FUNCTION SIN(${1:angle})$0",
      "doc": "trigonometric sine of the specified angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-SIN",
      "matches": {
        "FUNCTION SIN": true
      }
    },
    "3ac06054-19a6-33c8-93c3-2d05a40d6a32": {
      "content": "\\section{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\section": true,
        "section \\section{": true
      }
    },
    "3ac6d867-ade1-381d-b3e4-14ef8b94df09": {
      "content": "cursor: default",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      }
    },
    "3ad44e10-60a1-3fb8-b4bd-c1a1d1a5b08e": {
      "content": "<button type=\"submit\" [disabled]=\"!${1:form}.form.valid\">\n\tSave\n</button>",
      "doc": "Angular form submit",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormSubmit",
      "matches": {
        "a-form-submit": true
      }
    },
    "3ae36d64-ee29-3f01-814d-bf02e2723679": {
      "content": "<link rel=\"${1}\" href=\"${2}\" title=\"${3}\" type=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      }
    },
    "3af13847-df82-3f43-a9e4-3209423be703": {
      "content": "justify-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      }
    },
    "3af499c7-31dd-3884-b705-910ccbace940": {
      "content": "border-fit space",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      }
    },
    "3b037fd6-e51b-36ef-817a-6505cc522b09": {
      "content": "${1:obj}.mouseout(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      }
    },
    "3b059139-1207-3391-b45f-a1e807075d52": {
      "content": "cursor: pointer;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      }
    },
    "3b078e5c-da31-356d-9d82-97f23ec939e8": {
      "content": "repeat {\n    ${0:TARGET}\n} while ${1:false}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      }
    },
    "3b0ab297-214e-34d0-a8e9-13ec0ccff516": {
      "content": "for (var ${2:i} = 0, len = ${1:things}.length; $2 < len; ${3:++}$2) {\n  ${0:$1[$2]}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "3b0c1990-6149-3a1e-aaad-052ba692f35c": {
      "content": "${1:FIELDNAME} = serializers.BooleanField(${2})",
      "doc": "Django-rest Serializers ``BooleanField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF BooleanField",
      "matches": {
        "sbool": true
      }
    },
    "3b0e10ea-e788-3e05-b085-00698ee30bee": {
      "content": "{% capture ${1:#:var} %}${2:#:TARGET}{% endcapture %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture": true
      }
    },
    "3b106db1-2824-3b76-8a74-78524c019a6b": {
      "content": "JSON.stringify ${0:object}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsons": true
      }
    },
    "3b113023-4d98-3baa-a348-dd6150254603": {
      "content": "string.email()",
      "doc": "string.email(message?: string | function): Schema\n\nValidates the value as an email address via a regex.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-email",
      "matches": {
        "yup string email": true
      }
    },
    "3b14781b-0c35-34f0-874d-f42f689613bd": {
      "content": "<xsl:choose>\n\t<xsl:when test=\"${1:value}\">\n\t\t${2}\n\t</xsl:when>\n</xsl:choose>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "choose": true
      }
    },
    "3b18c69a-acef-3495-8255-d940633cf117": {
      "content": "case $1:\n\t$0\n\tbreak;",
      "doc": "Code snippet for case branch",
      "filetype": "c",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "3b268392-87b0-354f-be73-6f45c4da1e58": {
      "content": "text-decoration underline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      }
    },
    "3b2713f1-67b8-3aa6-8992-60bcae260a85": {
      "content": "try {\n    ${0:TARGET}\n} finally {\n    ${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} finally {}",
      "matches": {
        "try_f": true,
        "try_finally": true
      }
    },
    "3b29399d-5966-37a0-81fb-37b22c516500": {
      "content": "'''${1}'''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "'''": true
      }
    },
    "3b32c2d8-1d16-39f8-943d-ec33659d947e": {
      "content": "${1:obj}.queue(${2:name}${3:, newQueue})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      }
    },
    "3b394e3b-e25b-3b52-a1bc-ba8bd864027a": {
      "content": "grid-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      }
    },
    "3b39ba67-7a58-30cd-9624-0901083e8718": {
      "content": "{% block ${1:name} %}$0{% endblock %}",
      "doc": "block",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "block",
      "matches": {
        "block": true
      }
    },
    "3b39d0be-a72f-3acb-af62-9221a543791b": {
      "content": "lmObj <- lm(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, na.action = ${6:na.action})\nsummary(lmObj)\nplot(lmObj, which=c(1)) # Plot residuals versus fitted",
      "doc": "Fit a linear model and create a plot",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Linear model with plot",
      "matches": {
        "lmplot": true
      }
    },
    "3b3b6bfd-8c1a-3ac1-a90f-e82dbf48f297": {
      "content": "object ${1:ObjectName} {\n\tdef main(args: Array[String]): Unit = {\n\t\t${2:println(\"Hello, world!\")}\n\t}\n}",
      "doc": "Object with main method",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "main_object",
      "matches": {
        "obj_main": true
      }
    },
    "3b400fee-f6af-3448-844f-914b5b51a8f9": {
      "content": "require('getopt', quietly = TRUE)\nopt_spec <- matrix(c(\n\t\t\t\t'help',     'h', 0, \"logical\", \t\"Getting help\",\n\t\t\t\t'file',     'f', 1, \"character\",\"File to process\"\n                ), ncol = 5, byrow = TRUE)\nopt <- getopt(spec = opt_spec)\nif ( !is.null(opt$help) || is.null(commandArgs()) )   {\n    cat(getopt(spec = opt_spec, usage = TRUE, command = \"yourCmd\"))\n    q(status=0)\n}\n# some inital value\nif ( is.null(opt$???) )    { opt$??? <- ??? }",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      }
    },
    "3b432401-bdf4-39c3-b619-8442212b9b14": {
      "content": "FUNCTION MIDRANGE(${1:number},${2:...})$0",
      "doc": "statistical midrange value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MIDRANGE",
      "matches": {
        "FUNCTION MIDRANGE": true
      }
    },
    "3b4374d5-1e95-3042-a4d2-85c9b1238895": {
      "content": "{%- layout '${1:layout}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layout-": true
      }
    },
    "3b49f2e0-d80a-397c-a08f-7c113e0a9995": {
      "content": "{|${1:#:var}|\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "{|var| ... }",
      "matches": {
        "blockvar": true
      }
    },
    "3b4a8ebc-7825-3fc8-aaf0-8ec652ca8eda": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-of-required",
      "matches": {
        "prop-types arrayof required": true,
        "ptaor": true
      }
    },
    "3b50998f-5ac8-3fef-b511-c7f35e28731e": {
      "content": "position: static;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      }
    },
    "3b5301b3-8d5f-3d19-a84d-d0d9dfed0d2c": {
      "content": "<style lang=\"less\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with less scoped",
      "matches": {
        "style_with_less_scoped": true
      }
    },
    "3b5ae000-7643-3508-aac9-0dc463406f19": {
      "content": "lock (${1:#:resource}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "lock () {}",
      "matches": {
        "lock": true
      }
    },
    "3b7c0d00-89cd-353e-9490-7ab066446d98": {
      "content": "${1:property_name}: observer('${3:argument}', function() {\n\t${0://body...}\n}),",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "property_name: observer('...', function() {...}),",
      "matches": {
        "proo": true
      }
    },
    "3b7f39e4-384f-39f6-a8ee-8a857b68fcf4": {
      "content": "setClass(\"${1:Class}\", slots = c(${2:name = \"type\"}))",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "setClass",
      "matches": {
        "sc": true
      }
    },
    "3b828ca9-841f-35fd-9611-e37bd1b7814d": {
      "content": "when ${1} =>\n\t${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "3b93fcff-e69b-3f7a-b5ab-cd1318708a86": {
      "content": "echo CHtml::linkTag('${1:relation}', '${2:type}', '${3:href}', '${4:media}',array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlinkt": true
      }
    },
    "3b9559e9-8c60-346c-8302-8b16ea0b110e": {
      "content": "$scope.$broadcast '${1:eventName}', ${2:eventArgs}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$b": true
      }
    },
    "3b96cba3-47de-3e33-9c20-98f20683ae9c": {
      "content": "<c:redirect url=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "credirect": true
      }
    },
    "3b9a924f-afe8-3902-a527-35b3956e4aa0": {
      "content": "directives",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "directives",
      "matches": {
        "directives": true
      }
    },
    "3b9df758-2db2-3760-ab77-8b660616b558": {
      "content": "<form id=\"${1}\" action=\"${2}\" method=\"${3:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form#": true
      }
    },
    "3ba67a4e-d32c-357f-a538-4221aa24e9d8": {
      "content": "align-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      }
    },
    "3ba9c3b9-4a17-304f-b42b-4f227c8644af": {
      "content": "grid-gap: ${1} ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      }
    },
    "3bab1d2e-1a87-3f5e-aca8-0ddd40efe707": {
      "content": "bezierDetail(${0:detail});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierDetail": true
      }
    },
    "3baf890b-b8c8-32ec-a261-ff0663ec7b7e": {
      "content": "double $1 ()\n{\n\tdouble $2 = $3;$4\n\treturn $2;\n}",
      "doc": "Creates a function that returns the double type",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create double function",
      "matches": {
        "doubfunc": true
      }
    },
    "3bb42040-6720-3057-acf1-0c4a40ba7510": {
      "content": "- (NSString${$1: *)})${1:#:thing}\n{\n\treturn ${2};\n}\n\n- (void)set${1}:(NSString${2: *})${3}\n{\n\t${3} = [${3} copy];\n\t[${2} release];\n\t${2} = ${3};\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      }
    },
    "3bb96689-7288-3524-ada0-f0402bf69cd2": {
      "content": "font-smooth never",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      }
    },
    "3bbbb2f2-409f-3f42-9b46-f47bbcf11621": {
      "content": "FUNCTION SECONDS-FROM-FORMATTED-TIME(${1:format},${2:time})$0",
      "doc": "decode time according to format (a time format or a combined date and time format)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-SECONDS-FROM-FORMATTED-TIME",
      "matches": {
        "FUNCTION SECONDS-FROM-FORMATTED-TIME": true
      }
    },
    "3bbbc7b1-b04c-30c5-a7c2-d32bde0098cb": {
      "content": "Js.trace(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.trace",
      "matches": {
        "ct": true,
        "ctr": true
      }
    },
    "3bcba8f5-a570-3935-af09-8a0d6963eefc": {
      "content": "MovieClip",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mc": true
      }
    },
    "3bcfba0e-88d8-35ee-8dd3-3a1588f76a44": {
      "content": "=${1:variable}=",
      "doc": "variable",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "var",
      "matches": {
        "var": true
      }
    },
    "3bd96e14-b4ee-3104-a6c6-9d2735bd55f8": {
      "content": "lines(${1:x}${2:, color=${3:red}})",
      "doc": "Polygonal Line",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lin",
      "matches": {
        "lines": true
      }
    },
    "3bdd418b-10ab-3b22-a19a-e6c2e2b7a7cf": {
      "content": "display block",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      }
    },
    "3bddd851-2e12-37de-ab53-35614e67c116": {
      "content": "{% ${1:#:tag} ${2:#:name} %}\n\t${0:TARGET}\n{% end$1 %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% ... %} ... {% end... %}",
      "matches": {
        "tagblock": true
      }
    },
    "3be44da7-e227-3680-82cb-87cdc615c1e2": {
      "content": "__SOURCE_DIRECTORY__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__SOURCE_DIRECTORY__",
      "matches": {
        "sourced": true
      }
    },
    "3be4de6d-3352-36f0-9d9f-62a6b42bef6c": {
      "content": "_.hasIn(${object}, ${path})",
      "doc": "var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.hasIn(object, 'a');\n// => true\n\n_.hasIn(object, 'a.b');\n// => true\n\n_.hasIn(object, ['a', 'b']);\n// => true\n\n_.hasIn(object, 'b');\n// => false\n\nChecks if `path` is a direct or inherited property of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-hasin",
      "matches": {
        "lodash hasin": true
      }
    },
    "3bf4c8b4-a946-37bc-9cc1-742a071a052a": {
      "content": ":hover",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      }
    },
    "3bf810ea-5d58-3466-b849-935a978d7588": {
      "content": "import * as ${2:second} from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importEverything",
      "matches": {
        "ime": true
      }
    },
    "3bf92e4a-d93a-3a60-b872-7d617fe0da79": {
      "content": "\\\\left\\\\{ ${0:${VISUAL}} \\\\right\\\\}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left\\{ right\\}",
      "matches": {
        "lr{": true
      }
    },
    "3c044e17-19f9-3d7e-8327-f3322a25021e": {
      "content": "\\\\part{${1:part name}} % (fold)%\n\\\\label{prt:${2:$1}}\n${0}\n% part $2 (end)",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "document \\part",
      "matches": {
        "part": true
      }
    },
    "3c0fba92-deaf-323b-81a3-170f9c989248": {
      "content": "@after-enter='$1'$0",
      "doc": "@after-enter=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "after-enter",
      "matches": {
        "afterEnterEvent": true
      }
    },
    "3c0ff6a6-631d-358e-b483-8339bc78fe7c": {
      "content": "border: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border",
      "matches": {
        "bd": true
      }
    },
    "3c1523b4-c9bc-3096-9166-47a9bd869789": {
      "content": "content: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      }
    },
    "3c1aad25-9e55-3307-8ec3-d1f720a7025e": {
      "content": "it { should belong_to :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbt": true
      }
    },
    "3c1c30f6-3574-34e4-89ff-6d42f25d7368": {
      "content": "for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {\n\t$0\n}",
      "doc": "Code snippet for 'for' loop",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "3c1dd0b9-7b1b-3651-9404-22e099a5d264": {
      "content": "margin-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      }
    },
    "3c2c7ac9-4fe5-3f91-a276-9d94b4828122": {
      "content": "repeat with ${1} in ${2}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "repwi": true
      }
    },
    "3c368fd6-9314-3acb-b06e-8446d6cabdfc": {
      "content": "mattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "mattr_accessor",
      "matches": {
        "mrw": true
      }
    },
    "3c374996-56a2-350a-8d4d-797f4397a9e6": {
      "content": "_.toInteger(${value})",
      "doc": "_.toInteger(3.2);\n// => 3\n\n_.toInteger(Number.MIN_VALUE);\n// => 0\n\n_.toInteger(Infinity);\n// => 1.7976931348623157e+308\n\n_.toInteger('3.2');\n// => 3\n\nConverts `value` to an integer.\n\n**Note:** This method is loosely based on\n[`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tointeger",
      "matches": {
        "lodash tointeger": true
      }
    },
    "3c3f7036-7f08-36de-8bb9-0f7dca88b0e3": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      }
    },
    "3c40f06c-8fb7-3703-ad07-bc0e9167f1cf": {
      "content": "integer :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      }
    },
    "3c4c7197-183a-30c5-9b57-2d7ac663f9aa": {
      "content": "echo CHtml::textArea('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhta": true
      }
    },
    "3c521365-7cea-3d9d-84d3-fc100333096c": {
      "content": "do${1: ${2:i} = ${3:1}, ${4:100}, ${5:1}}\r\n\t$0\r\nend do",
      "doc": "do",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "do",
      "matches": {
        "do": true
      }
    },
    "3c594aef-9ba6-3296-93d2-f052be8500e5": {
      "content": "_.flatMapDeep(${collection}, ${iteratee})",
      "doc": "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDeep([1, 2], duplicate);\n// => [1, 1, 2, 2]\n\nThis method is like `_.flatMap` except that it recursively flattens the\nmapped results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmapdeep",
      "matches": {
        "lodash flatmapdeep": true
      }
    },
    "3c59f111-5959-3843-ad0f-a7002913619d": {
      "content": "clear: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      }
    },
    "3c5e9c9f-67ad-35b3-a25d-20bb11415994": {
      "content": "<router-link $1>$2</router-link>$0",
      "doc": "router-link element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerlink",
      "matches": {
        "routerlink": true,
        "vue routerlink": true
      }
    },
    "3c6b3d09-197e-36c3-998a-cc83b55ba81e": {
      "content": "${1|this,vm|}.\\$mount('$2')",
      "doc": "vm.$mount( [elementOrSelector] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$mount",
      "matches": {
        "vmMount": true
      }
    },
    "3c725d70-68d0-3cae-a925-54263ac98c57": {
      "content": "${1:obj}.prepend('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      }
    },
    "3c772330-6c18-3e19-86d1-ab96dbab5641": {
      "content": "afterEach(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "after each (js)",
      "matches": {
        "aft": true
      }
    },
    "3c78caf4-7478-3746-86e9-177f863750ce": {
      "content": "\"${1:key}\": [\n\t${VISUAL}$0\n],",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Named array",
      "matches": {
        "na": true
      }
    },
    "3c7acdab-ed64-3127-88e7-96e812a9384b": {
      "content": "border-bottom-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      }
    },
    "3c7bd817-44db-360c-b55d-cf809e4d1a17": {
      "content": "internal string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&": true
      }
    },
    "3c7e3cbd-4b53-3d0e-84da-922fdb5ac324": {
      "content": "elif ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "elif ...: ...",
      "matches": {
        "elif": true
      }
    },
    "3c82776b-ccaa-3324-be14-1e2e2b55cc1e": {
      "content": "console.count(${1:label});",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleCount",
      "matches": {
        "cco": true
      }
    },
    "3c838c76-b152-39aa-aa6b-41e9454241e7": {
      "content": "if (!${1:condition}) {\n\treturn null\n}",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "if falsy return null",
      "matches": {
        "ifr": true
      }
    },
    "3c86f942-97d1-3a5b-9cfc-8fe2d1794446": {
      "content": "align-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      }
    },
    "3c8e3a42-bb38-37d4-b8df-9085383020b3": {
      "content": "Js.timeStart(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.timeStart",
      "matches": {
        "cts": true
      }
    },
    "3c94a09b-57b9-3469-b23b-c76f9129bd83": {
      "content": "@table\n$0\n@end",
      "doc": "table",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "table",
      "matches": {
        "table": true
      }
    },
    "3c9a7dc0-3eb4-3543-ad4d-9e4deb069638": {
      "content": "return {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return new object",
      "matches": {
        "ro": true
      }
    },
    "3c9c34fc-cb91-34f5-a185-46c4f4312af6": {
      "content": "position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      }
    },
    "3c9db8db-a19c-37b8-81ee-45493b5d835e": {
      "content": "_.isPlainObject(${value})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\n_.isPlainObject(new Foo);\n// => false\n\n_.isPlainObject([1, 2, 3]);\n// => false\n\n_.isPlainObject({ 'x': 0, 'y': 0 });\n// => true\n\n_.isPlainObject(Object.create(null));\n// => true\n\nChecks if `value` is a plain object, that is, an object created by the\n`Object` constructor or one with a `[[Prototype]]` of `null`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isplainobject",
      "matches": {
        "lodash isplainobject": true
      }
    },
    "3ca755b3-4752-3e63-b90b-9dc4565db173": {
      "content": "case $1:\n\t$0\n\tbreak;",
      "doc": "Code snippet for case branch",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "3caf52c9-c76b-3af3-8bae-1d4c9998f733": {
      "content": "Yii::app()->params['${0}']",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ypar": true
      }
    },
    "3cb11de2-0ccd-3e78-b9fb-565f8d2c8262": {
      "content": "t.integer :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.integer (tci)",
      "matches": {
        "t.": true
      }
    },
    "3cbe687d-3a35-3404-8c69-91f2b05f417a": {
      "content": "_.repeat(${string}, ${n})",
      "doc": "_.repeat('*', 3);\n// => '***'\n\n_.repeat('abc', 2);\n// => 'abcabc'\n\n_.repeat('abc', 0);\n// => ''\n\nRepeats the given string `n` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-repeat",
      "matches": {
        "lodash repeat": true
      }
    },
    "3cc755e1-8759-3620-a756-ed2c8ce57a27": {
      "content": "for (let ${1:i} of ${2:#:Things}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forof": true
      }
    },
    "3ccae22b-15f9-3a93-a2d6-6afb862955e2": {
      "content": "if err != nil {\n\tlog.Fatal(err)\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error with log.Fatal(err)",
      "matches": {
        "errl": true
      }
    },
    "3ccd560c-2563-33e8-98fc-1c5cbc9b9c03": {
      "content": "word-wrap unrestricted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      }
    },
    "3cd9d66f-bfa1-30fc-94e8-133ce1556430": {
      "content": "ACCEPT ${1:variable}\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ACCEPT",
      "matches": {
        "ACCEPT": true
      }
    },
    "3cdbbaac-814b-318d-9028-df092bd946eb": {
      "content": "border-bottom-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbs": true,
        "border-bottom-style": true
      }
    },
    "3ce308e5-147d-3179-b38a-e8e2e72c9759": {
      "content": "shadowRadius: ${1},",
      "doc": "shadowRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "shadowRadius",
      "matches": {
        "sha": true
      }
    },
    "3ce977c1-13a6-3689-a6a1-cb2bd2d21955": {
      "content": "\\\\begin{description}\n\t\\\\item[${1}] ${0}\n\\\\end{description}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "description environment",
      "matches": {
        "desc": true
      }
    },
    "3ceabd66-a301-3519-954b-d381a26306e7": {
      "content": "defer ${1:func}($0)",
      "doc": "Snippet for defer statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "defer statement",
      "matches": {
        "df": true
      }
    },
    "3cebb56b-5cea-3468-a931-3ffe434f4b47": {
      "content": "place-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      }
    },
    "3cf20657-e9d4-3312-bffa-24efbcdee316": {
      "content": "yup.lazy()",
      "doc": "yup.lazy((value: any) => Schema): Lazy\n\nCreates a schema that is evaluated at validation/cast time. Useful for creating\nrecursive schema like Trees, for polymorphic fields and arrays.CAUTION! When defining parent-child recursive object schema, you want to reset the default()\nto undefined on the child otherwise the object will infinitely nest itself when you cast it!.let node = object({\n  id: number(),\n  child: yup.lazy(() => node.default(undefined))\n});\n\nlet renderable = yup.lazy(value => {\n  switch (typeof value) {\n    case \"number\":\n      return number();\n    case \"string\":\n      return string();\n    default:\n      return mixed();\n  }\n});\n\nlet renderables = array().of(renderable);",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-lazy",
      "matches": {
        "yup lazy": true
      }
    },
    "3cf2cf00-edd5-3028-b529-60c8d163f41e": {
      "content": "each_index {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_index": true
      }
    },
    "3cf2db52-0c85-32fa-bf98-ef7c411c0007": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentdidupdate",
      "matches": {
        "cdup": true,
        "react componentdidupdate": true
      }
    },
    "3cf51316-c6a3-3cc2-9dd2-299e6c10724e": {
      "content": "::before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      }
    },
    "3cf53f0d-2fdd-3842-8e8e-e493c91cc93d": {
      "content": "&#x2190;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      }
    },
    "3cf56c3b-ff8a-3215-80db-7b49e6ce1aaf": {
      "content": "for (let ${1:prop} of ${2:object}) {\n\t${0:$1}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (let prop of object}) { ... }",
      "matches": {
        "forl": true
      }
    },
    "3cf6b4bc-65c7-3fc7-b172-58197363bf65": {
      "content": "&#x2193;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "down": true
      }
    },
    "3cf99317-f784-317d-9a12-86e1a881bdea": {
      "content": "journal = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "journal": true
      }
    },
    "3cfb0b4a-248d-3ed7-acb7-eedac3f03cfc": {
      "content": "params[:${1:id}]",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pa": true
      }
    },
    "3d0125d6-207e-3d99-a0c2-3608e47eeaa5": {
      "content": "break;",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      }
    },
    "3d0127f5-0a35-36b7-93c8-384f5aec3c4a": {
      "content": "(${1:arguments}) => {\n\t${0}\n}",
      "doc": "arrow function with body (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "arrow-function-with-body-es6-",
      "matches": {
        "base function arrow body": true
      }
    },
    "3d093f8f-d754-3f44-ab94-4a2f71bc36af": {
      "content": "background-break: continuous",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      }
    },
    "3d0b611e-898e-30e2-9044-d775697714a0": {
      "content": "if (${1:condition}) \n\t${2:value}\nelse\n\t${3:value}",
      "doc": "Snippet for if...else expression",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "if...else",
      "matches": {
        "ifelse": true
      }
    },
    "3d0e742b-f525-32e4-9092-2c175f1ff3bf": {
      "content": "| upcase",
      "doc": "String filter: upcase",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter upcase",
      "matches": {
        "upcase": true
      }
    },
    "3d110ae2-0269-3c3f-b760-1fe97f486946": {
      "content": "{% raw %}$1{% endraw %}",
      "doc": "Theme tag: raw",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag raw",
      "matches": {
        "raw": true
      }
    },
    "3d13aa82-8b35-3ee2-8157-ecf0f2ead91a": {
      "content": "mutable struct ${1:struct} <: ${2:type}\n\t$0\nend",
      "doc": "Code snippet for mutable struct block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "mutable struct",
      "matches": {
        "mstruct": true,
        "mut": true,
        "mutable": true
      }
    },
    "3d150c6f-dd0f-33b8-9acc-90606d2fc609": {
      "content": "public ${1:int} ${2} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+-": true
      }
    },
    "3d175fc3-0395-3642-80a2-9cff20107b22": {
      "content": "border-left: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      }
    },
    "3d185982-59bb-36fd-b44f-8fcc758ce40c": {
      "content": "function ord-max(${1:char},${2:...})$0",
      "doc": "max. ordinal position in the program character set corresponding to list of chars",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-ord-max",
      "matches": {
        "function ord-max": true
      }
    },
    "3d189508-3ffd-3a20-8eb3-ae582de8481a": {
      "content": "_.xorWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.xorWith(objects, others, _.isEqual);\n// => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\nThis method is like `_.xor` except that it accepts `comparator` which is\ninvoked to compare elements of `arrays`. The order of result values is\ndetermined by the order they occur in the arrays. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xorwith",
      "matches": {
        "lodash xorwith": true
      }
    },
    "3d22f8cf-6778-3c09-bbb0-d26938e88e35": {
      "content": "<exception cref=\"${1:System.Exception}\">${2}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML exception comment",
      "matches": {
        "<ex": true
      }
    },
    "3d26dbfb-7353-3c3f-b4d4-93887eed16da": {
      "content": "justify-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      }
    },
    "3d27fc2e-b9c1-3bfb-bcb4-72cd7fb485c4": {
      "content": "sin(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sin": true
      }
    },
    "3d29881e-1dd8-3717-9d2b-b1ed4c18ecf9": {
      "content": "${1:deferred}.notifyWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotifyw": true
      }
    },
    "3d29f299-c5a8-39c8-b7de-b9de1a7b6d7a": {
      "content": "<?$php foreach ($${1:#:variable} as $${2:#:key}${3: =>}): ?>\n${0:TARGET}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pforeach": true
      }
    },
    "3d3ae886-8ebe-3568-b1ab-dc59299b9230": {
      "content": "top: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      }
    },
    "3d40c192-93f8-34ea-aa2a-bec3a12270f5": {
      "content": "expand.grid(${1:...}, ${2:KEEP.OUT.ATTRS = ${3:TRUE}}, ${4:stringsAsFactors = ${5:TRUE}})",
      "doc": "Expand grid",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "exp",
      "matches": {
        "exppand": true
      }
    },
    "3d40c927-4ceb-384a-aab6-f9dd3d27c147": {
      "content": "@import '${0:TARGET}';",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@import '...';",
      "matches": {
        "import": true
      }
    },
    "3d41deb6-a9fc-38f1-9af5-166be32d5446": {
      "content": "{@value ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{value": true
      }
    },
    "3d440a0f-3c30-3420-a4d1-55b556eb1bda": {
      "content": "${1:div}(:style=\"[${2:styleObjectA}, ${3:styleObjectB]}\")",
      "doc": "vue inline style binding, objects",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Style Binding Object",
      "matches": {
        "vstyle-obj": true
      }
    },
    "3d4c320b-162b-3be5-b62e-a569f90c4b29": {
      "content": "border-top-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      }
    },
    "3d502982-44d9-3a65-b5b4-ee034650994e": {
      "content": "<router-link to=\"$1\">$2</router-link>$0",
      "doc": "<router-link to=''></router-link>. router-link element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerlinkto",
      "matches": {
        "routerlinkto": true,
        "vue routerlinkto": true
      }
    },
    "3d532a37-53aa-3229-a303-6704ca28b41d": {
      "content": "if $1 then\n\t$2\nelseif $3 then\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/elseif/else statement",
      "matches": {
        "eife": true
      }
    },
    "3d53d4ae-ef2b-3e52-ab2d-dccf32e0dd58": {
      "content": "opacity ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      }
    },
    "3d587589-e3c6-311b-bebe-2c08073e44e4": {
      "content": "def self.${1:class_method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      }
    },
    "3d5dc43f-1f9e-38e9-9b08-f1d0018ecf1c": {
      "content": "|> Enum.each(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to each",
      "matches": {
        ">e": true
      }
    },
    "3d67567f-beb0-3e47-85e3-8b42bf63fcf7": {
      "content": "$dataProvider = new CActiveDataProvider('${1}', array(\n  'criteria' => array(\n\t\t'condition' => '${2}',\n\t\t'order' => '${3}',\n\t\t'with' => array('${4}')\n\t),\n//'pagination' => false,\n\t'pagination' => array(\n\t\t'pageSize'=>${5},\n\t),\n));\n${0}\n// $dataProvider->getData() will return a list of Post objects",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yadp": true
      }
    },
    "3d6e103d-bb50-3e92-9834-804d17627999": {
      "content": "content no-open-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      }
    },
    "3d76a4fb-62d1-38f4-9494-75fda49c2786": {
      "content": "@param {${1:type}} ${2:name} ${0:description}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@par": true
      }
    },
    "3d791dfe-c8d5-371a-89f7-a91185084ae1": {
      "content": "${1:obj}.fadeOut('slow/400/fast', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeoutc": true
      }
    },
    "3d79b6af-0e1b-3989-8fa0-212aad4bea7a": {
      "content": "${1|this,vm|}.\\$set(${2:target}, ${3:key}, ${4:value})",
      "doc": "vm.$set( target, key, value ). This is the alias of the global Vue.set.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$set",
      "matches": {
        "vmSet": true
      }
    },
    "3d85249c-80c6-3ba8-8bdd-697da112ec76": {
      "content": "border-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      }
    },
    "3d87e223-e730-39e2-8625-c64457ae23b0": {
      "content": "float: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      }
    },
    "3d92bab8-cce9-3861-a194-5694e1d39cc6": {
      "content": "bitflags! {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "bitflags!",
      "matches": {
        "bfl": true
      }
    },
    "3d954ac7-ac24-3ef2-ae4a-e50b7252f9db": {
      "content": "in",
      "doc": "The qualifier in is used to mark a parameter as read-only when a function is declared. The parameter will be passed by value to the function and the value can not be modified by the function.\nThe above function declaration shows the three possible parameter qualifiers. The usage of the read-only qualifier is not necessary since this is the default if no qualifier is specified.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "in",
      "matches": {
        "in": true
      }
    },
    "3d9b78b6-3d7f-37ff-9cf5-3065e136188b": {
      "content": "unique case (${1}) begin\n    ${2:'b0}: begin\n        ${3}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case_parallel": true
      }
    },
    "3da694d7-5680-358e-b545-e554458c7616": {
      "content": "require('dotenv').config({ path: '${1:/full/custom/path/to/your/env/vars}' })",
      "doc": "You may specify a custom path if your file containing environment variables is located elsewhere.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-path",
      "matches": {
        "dotenv path": true
      }
    },
    "3da7ece4-4aaa-39d9-8fa5-c3d76802c0f8": {
      "content": "border-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      }
    },
    "3da97115-aeee-32d4-aefb-d5074b6bf369": {
      "content": "grid-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      }
    },
    "3dab6728-fe58-3978-a314-1b5fa40f5d08": {
      "content": "| money_with_currency",
      "doc": "Money filter: money with currency",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter money with currency",
      "matches": {
        "money_with_currency": true
      }
    },
    "3dac882e-5fc2-326f-aa6d-98fd28464b0a": {
      "content": "new(${0:type})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "new",
      "matches": {
        "nw": true
      }
    },
    "3dafd203-f3b3-3f67-baf0-8bc5398484a7": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "3dbd69b7-812c-33b1-9d97-4bce317fdf67": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n} else {\n\t${2}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (cond) { ... } else { ... }",
      "matches": {
        "ife": true
      }
    },
    "3dc37ef8-c18e-378b-bf4c-e58f6030d0d1": {
      "content": "<%# ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%# %>",
      "matches": {
        "comment": true
      }
    },
    "3dcc144a-20f7-32cd-b27a-aa23a108bff1": {
      "content": "internal string ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&|": true
      }
    },
    "3dcfa355-4e97-3711-bbaa-83385f20ffd8": {
      "content": "box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      }
    },
    "3dd7a294-30e9-37c6-ba82-8b4bdce711dd": {
      "content": "@while (${1})\n    ${2}\n@endwhile",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@while ... @endwhile",
      "matches": {
        "while": true
      }
    },
    "3dd83990-6951-3cbd-b773-69603bf75ddc": {
      "content": "${1:Listing}~\\\\ref{${2:list}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a listing",
      "matches": {
        "listing": true
      }
    },
    "3ddc4016-3d0c-3f65-98fc-9d73d5c9030f": {
      "content": "dispatch(${1:key},${2:data})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch-event",
      "matches": {
        "svdpe": true,
        "svelte dispatch event": true
      }
    },
    "3de10c3d-e32f-3b0f-9f9d-3f04d0528b03": {
      "content": "import styled from 'styled-components';",
      "doc": "import styled from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-styled-from-styled-components",
      "matches": {
        "imsc": true,
        "styled-components import styled": true
      }
    },
    "3de1420f-d635-3969-b9ab-cd87219fdfc8": {
      "content": "#[macro_use]\nextern crate log;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate log",
      "matches": {
        "ecl": true
      }
    },
    "3de5b773-b095-3764-ba88-4706d2a452c9": {
      "content": "<nuxt>$1</nuxt>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-view",
      "matches": {
        "nuxt view": true
      }
    },
    "3de6e3fa-712c-348b-9b1b-c7587a24f002": {
      "content": "{%- continue -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "continue-": true
      }
    },
    "3de8656a-ac45-368e-a4d5-f397f7a2a2a8": {
      "content": "dispatch(${1:key},${2:data})",
      "doc": "svelte dispatch event",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch-event",
      "matches": {
        "s-dispatch-event": true
      }
    },
    "3de94851-2461-3c88-9951-f58cc5f1f69c": {
      "content": "| truncatewords: ${1:5}, '${2:...}'",
      "doc": "String filter: truncatewords",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter truncatewords",
      "matches": {
        "truncatewords": true
      }
    },
    "3defe1a3-34e3-3c8b-a6e2-0fe62328af5d": {
      "content": "echo CHtml::dropDownList('${1:name}', '${2:select}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhddl": true
      }
    },
    "3df28d32-f3fb-32a5-92a3-65f95d7205a3": {
      "content": "<template>\n\t<${1:div}$2>\n\t\t$0\n\t</${1:div}>\n</template>",
      "doc": "template element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-template",
      "matches": {
        "template": true,
        "vue template": true
      }
    },
    "3df39dc3-f972-35bf-8ddd-82a7e681b313": {
      "content": "(deftest ${1:a}-test\n  (testing \"${2:hello}\"\n    ${0:TARGET:(is (= 0 1))}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deftest": true
      }
    },
    "3df6e91a-cc2f-3272-99f5-80c5f10b45f0": {
      "content": "logger.error",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.error",
      "matches": {
        "loge": true
      }
    },
    "3df8535a-8ccd-38b7-a5ca-d80968acd95e": {
      "content": "await tick()",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tick",
      "matches": {
        "sv-tick": true,
        "svelte tick": true
      }
    },
    "3e0c86b4-6bcf-3f2e-8152-1784ffa965ea": {
      "content": "_.attempt(${func}, ${args})",
      "doc": "// Avoid throwing errors for invalid selectors.\nvar elements = _.attempt(function(selector) {\n  return document.querySelectorAll(selector);\n}, '>_>');\n\nif (_.isError(elements)) {\n  elements = [];\n}\n\nAttempts to invoke `func`, returning either the result or the caught error\nobject. Any additional arguments are provided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-attempt",
      "matches": {
        "lodash attempt": true
      }
    },
    "3e100c74-b86e-34f0-aefc-37fb19f72448": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "tp": true
      }
    },
    "3e13d916-aef9-3a4d-ac44-b0400f9fca51": {
      "content": "<%= link ${1:\"${2:Submit}\"}, to: ${3:\"${4:/users}\"}, method: ${5::delete} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "link",
      "matches": {
        "lin": true
      }
    },
    "3e18b6d9-a4ac-3164-88a3-12534bac9ef1": {
      "content": "\\\\chapter{${1:chapter name}}%\n\\\\label{cha:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\chapter",
      "matches": {
        "cha": true
      }
    },
    "3e1bcf2d-1ff3-3973-91b9-aa0f8c3fec8f": {
      "content": "FUNCTION LOCALE-DATE(${1:yyyymmdd},${2:locale-optional})$0",
      "doc": "format yyyymmd; according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOCALE-DATE",
      "matches": {
        "FUNCTION LOCALE-DATE": true
      }
    },
    "3e1cc9bd-8913-3162-9ad2-3593ad64dc84": {
      "content": "${1:iterable}.forEach((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "forEach loop",
      "matches": {
        "fe": true
      }
    },
    "3e1d6fd5-131e-3ac5-9df6-1c13d7c775fb": {
      "content": "sourceformat\"${2|free,variable,fixed|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "sourceformat",
      "matches": {
        "sourceformat": true
      }
    },
    "3e20c94e-3d94-3a85-a46f-dda0c6dad9a5": {
      "content": "import { reactive, toRefs } from 'vue'\n\nexport default {\n\tsetup () {\n\t\tconst state = reactive({\n\t\t\t${0:count}: ${1:0},\n\t\t})\n\t\n\t\treturn {\n\t\t\t...toRefs(state),\n\t\t}\n\t}\n}",
      "doc": "Vue Composition API Script with Reactive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API Reactive Script",
      "matches": {
        "v3reactive-setup": true
      }
    },
    "3e23185e-2837-3dbb-99cc-02ec8c830f75": {
      "content": ".. ${1:#:NAME}:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive",
      "matches": {
        "directive": true
      }
    },
    "3e2a0213-5872-3bd7-9480-c390a90e355c": {
      "content": "${1:name}\tnumber\t${3:default 0}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ncol": true
      }
    },
    "3e2c0954-3e18-38ef-bf1a-6e0a49341ba5": {
      "content": "let ${1:TARGET} = ${2};${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "3e2cfba6-6748-3a26-900a-3697bb1920bb": {
      "content": "{% endblock %}$0",
      "doc": "endblock",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endblock",
      "matches": {
        "endblock": true
      }
    },
    "3e2daea0-9ec8-3d8a-89bb-1167b87bb186": {
      "content": "def show\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\nend",
      "doc": "def show",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Show action",
      "matches": {
        "show": true
      }
    },
    "3e2e17a2-074a-3554-a9ec-04f568114a25": {
      "content": "text-decoration overline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      }
    },
    "3e2f744f-d5df-3bde-b675-a1112b71a889": {
      "content": "getURL(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gu": true
      }
    },
    "3e319a58-f9b5-30a2-b2b4-0359b048cdd3": {
      "content": "add ${1:a} to ${2:b} giving ${3:c}",
      "doc": "Add a to b giving c",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "add",
      "matches": {
        "add": true
      }
    },
    "3e3243dd-ecbf-3bca-b891-2af175df3424": {
      "content": "${1:instance} is ${2:class}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "Is instance of a class or script",
      "matches": {
        "is": true
      }
    },
    "3e368415-9391-3633-84e4-9c3ccdd87e3f": {
      "content": "useCallback(\n\t() => {\n\t\t${1:callback}\n\t},\n\t[${2:input}],\n)",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usecallback",
      "matches": {
        "react usecallback": true,
        "usecallback": true
      }
    },
    "3e39b1c5-d16f-3587-a411-ed524746d187": {
      "content": "width=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      }
    },
    "3e3b7cf1-839e-3e8f-a6e6-f64ed4ef5cf0": {
      "content": "| downcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "downcase": true
      }
    },
    "3e3da8ca-ca4b-3b1a-96e3-b91fca99acb8": {
      "content": "font-effect: engrave",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      }
    },
    "3e3e1164-d6b0-31a0-905c-a3ddf363c815": {
      "content": "do {\n\t${1:TARGET}\n} while (${2:#:condition});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "3e3e7c00-f03c-3bca-8738-4f36e1584914": {
      "content": "unpack(${1:vector}, mask=(${2:$1>0}), field=${3:destination array})",
      "doc": "unpack",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "unpack",
      "matches": {
        "unpack": true
      }
    },
    "3e4c9b30-0d71-378b-a705-22d010caf6cb": {
      "content": "<%= render partial: '${1:item}', collection: ${0:items} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      }
    },
    "3e50de0b-9638-3a7c-90bb-4528f82e925d": {
      "content": "appear-to-class=\"$1\"$0",
      "doc": "appear-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-to-class",
      "matches": {
        "appeartoclass": true,
        "vue appear-to-class": true
      }
    },
    "3e525d07-e189-3ec1-ab2b-4b5a9192dd12": {
      "content": "font-family: ${0:'Monotype Corsiva','Comic Sans MS'},cursive",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      }
    },
    "3e59f94a-19ae-38aa-8a92-b8113ea821e0": {
      "content": "<meter value=\"$1\">$2</meter>$3",
      "doc": "HTML - Defines measurement within a predefined range",
      "filetype": "html",
      "grammar": "lsp",
      "label": "meter",
      "matches": {
        "meter": true
      }
    },
    "3e5a74ec-9c45-3682-9c0a-62f9bc4d5bbc": {
      "content": "<footer>\n    ${1}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer": true
      }
    },
    "3e5d234c-d645-3419-9fb1-ef6e4a12ab52": {
      "content": "word-wrap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      }
    },
    "3e5e2801-df3b-362e-a087-9478b9189c14": {
      "content": "out",
      "doc": "The qualifier out is used to mark a parameter as write-only when a function is declared. The parameter will be passed by reference to the function but it is not initialized, i.e. the value can not be read. The value can be modified by the function and the changes are preserved after the function exits.\nThe above function declaration shows the three possible parameter qualifiers. The usage of the read-only qualifier is not necessary since this is the default if no qualifier is specified.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "out",
      "matches": {
        "out": true
      }
    },
    "3e60bf42-fbd9-3031-b52c-8df222716d1d": {
      "content": "Run Keyword And Expect Error    ${1:My error}    ${2:${kw}}    ${3:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Expect Error",
      "matches": {
        "rkaee": true
      }
    },
    "3e619a2d-4251-33b1-af21-d0614a49dbc7": {
      "content": "background-image: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backimage": true,
        "bi": true
      }
    },
    "3e671622-a82c-3455-8d2a-af51d20c3fea": {
      "content": "for (let ${1:i} = 0, ${2:len} = ${3:Things.length}; $1 < $2; $1++) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (...) {...}",
      "matches": {
        "for": true
      }
    },
    "3e6a3172-a226-33d3-92a8-aafc94443f19": {
      "content": "function tan(${1:angle})$0",
      "doc": "trigonometric tangent of the specified angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-tan",
      "matches": {
        "function tan": true
      }
    },
    "3e7252eb-93eb-3f93-b46f-48ce2c751c27": {
      "content": "include!(\"${1}\");",
      "doc": "include!(\"…\");",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "include",
      "matches": {
        "include": true
      }
    },
    "3e784a8c-d8c1-3e6c-bd24-df2578e93528": {
      "content": "margin ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "3e7e1c1b-72c3-35b1-943c-d3b34893c060": {
      "content": "function fraction-part(${1:number})$0",
      "doc": "portion of number that occurs to the right of the decimal point",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-fraction-part",
      "matches": {
        "function fraction-part": true
      }
    },
    "3e81ca8a-7416-3eb4-ac44-7e2f262abc05": {
      "content": "if {${1}} {\n\t${2}\n} elseif {${3}} {\n\t${4:# elsif...}\n} else {\n\t${0:# else...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "3e8259cb-f227-317b-bb1b-5809b0b1f8cc": {
      "content": "has_many :${1:object}s${2:, class_name: \"$1\", foreign_key: \"${4:reference}_id\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many (hm)",
      "matches": {
        "hm": true
      }
    },
    "3e8339a0-4bd4-374c-86db-42db0bb4501a": {
      "content": "{% stylesheet %}\n\t${0}\n{% endstylesheet %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet": true
      }
    },
    "3e8821bb-247a-34c4-8446-ae4d62d5b087": {
      "content": "invariant()\n{\n\tassert(${1:/*condition*/}, \"${2:error message}\");\n\t$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "invariant (inv)",
      "matches": {
        "inv": true
      }
    },
    "3e8eddfa-afa5-3618-b94f-47689a85154a": {
      "content": "<big>$1</big>$2",
      "doc": "HTML - Used to make text bigger",
      "filetype": "html",
      "grammar": "lsp",
      "label": "big",
      "matches": {
        "big": true
      }
    },
    "3e933d23-6e19-3aa5-a1b5-502b0fb3ecb9": {
      "content": "content: open-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      }
    },
    "3e9400a2-25ad-3e13-8c18-1e0ba3ddff24": {
      "content": "${1:public} int ${2}(${3})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      }
    },
    "3e99e7a4-dc29-30bf-a485-99dd23c1a160": {
      "content": "File.dirname(File.expand_path(__FILE__))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.dirname(...)",
      "matches": {
        "__dir__": true,
        "filedir-legacy-compatibility": true
      }
    },
    "3e9a4a56-0bc1-3076-90a8-cbcf118b8dd7": {
      "content": "while(${1:#:condition})\n\t${2}\nendwhile()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "while() endwhile()",
      "matches": {
        "while": true
      }
    },
    "3e9f51eb-0867-3b62-991f-933c0bb74692": {
      "content": "it { should validate_numericality_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvn": true
      }
    },
    "3e9ffa46-504e-3db6-8b63-047300da6c56": {
      "content": "set tb value)",
      "doc": "Set a value in a table",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "set",
      "matches": {
        "set": true
      }
    },
    "3ea3abc0-23f0-37ef-a10b-e026c0552c93": {
      "content": "for (let ${1:i} = 0; $1 < ${2:#:Things}.length; ++$1) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "3ea6b582-1164-30f3-9294-580a53c32643": {
      "content": "after_destroy :${0:method}",
      "doc": "after_destroy",
      "filetype": "rails",
      "grammar": "lsp",
      "label": " destroy",
      "matches": {
        "ad": true
      }
    },
    "3ea94512-8bf9-3e23-882f-c8a69dab1e0c": {
      "content": "-webkit-box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      }
    },
    "3ea96511-cc4e-3a7a-adff-e7227faead53": {
      "content": "<fieldset>\n\t<legend><span>${1}</span></legend>\n\t${2}\n</fieldset>\nfieldset+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset+": true
      }
    },
    "3ead7edb-c766-38db-9b8d-c2eea6922541": {
      "content": "_.isFinite(${value})",
      "doc": "_.isFinite(3);\n// => true\n\n_.isFinite(Number.MIN_VALUE);\n// => true\n\n_.isFinite(Infinity);\n// => false\n\n_.isFinite('3');\n// => false\n\nChecks if `value` is a finite primitive number.\n\n**Note:** This method is based on\n[`Number.isFinite`](https://mdn.io/Number/isFinite).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isfinite",
      "matches": {
        "lodash isfinite": true
      }
    },
    "3eafa662-9246-327d-b3f4-832175b2520f": {
      "content": "exit when ${1};\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "exit when",
      "matches": {
        "exit_when": true
      }
    },
    "3eb3fb68-36d4-38cd-b68b-b5c805b76652": {
      "content": "place-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      }
    },
    "3eb777e0-03a1-3da6-a7b0-798c834690c5": {
      "content": "on:${1:click}=\"{() => ${2:count += 1}}\"",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-inline",
      "matches": {
        "svelte on event inline": true,
        "svon-inline": true
      }
    },
    "3eba80e6-3297-33c8-b57f-88322cd0cbe9": {
      "content": "${fn:replace(${1:string}, ${2:substr}, ${0:replace})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace": true
      }
    },
    "3ebf3c1f-a678-3e33-8d30-26d787070399": {
      "content": "const ${1:elName}El = useRef(null)$0",
      "doc": "React useContext() hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useRef",
      "matches": {
        "ur": true
      }
    },
    "3ec066c5-523a-36f6-8b61-fe83cb360431": {
      "content": "_Generic(${1:#:expression}, ${2:#:association-list})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_Generic": true,
        "generic, select": true
      }
    },
    "3ec902ae-8eca-3066-a5a7-a32b385af808": {
      "content": "fmt.Printf(\"$1 = %+v\\n\", ${1:${VISUAL}})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(...)",
      "matches": {
        "ff": true
      }
    },
    "3ecb2c31-0853-3c99-931a-7d5bba6ff987": {
      "content": "define([\"${1:#dependencies1}\"], function (${2:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "3ecd6dd0-8089-39c1-8018-1336ee50c598": {
      "content": "<c:when test=\"\\${${1}}\">\n\t${0}\n</c:when>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cwhen": true
      }
    },
    "3ecef7f6-80e2-3c3e-999e-f1858f345ad4": {
      "content": "accept ${1:variable}\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "accept",
      "matches": {
        "accept": true
      }
    },
    "3edace24-6a8b-3ec0-a25e-be4830b43953": {
      "content": "partition { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "par": true
      }
    },
    "3edb6f88-c720-3fb0-8d56-52bfce6e46b7": {
      "content": "&#x21E5;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tab": true
      }
    },
    "3edbe18d-4507-3a3d-8f2c-6e8795b7dab7": {
      "content": "it { should validate_acceptance_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isva": true
      }
    },
    "3edddc2c-c1f5-36d4-a85c-33a43147b960": {
      "content": "props.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "props",
      "matches": {
        "pp": true
      }
    },
    "3edf6338-1243-3ff5-8adb-b0c2719a46c9": {
      "content": "let rec ${1} =\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnr": true
      }
    },
    "3ee236c3-a2d7-3aaa-bf5f-b0c9c943e1b8": {
      "content": "loop do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "forever loop",
      "matches": {
        "loop": true
      }
    },
    "3ee94507-fb78-32bd-8823-e04f8bf51801": {
      "content": "<template lang=\"pug\">\n  ${0}\n</template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> with pug",
      "matches": {
        "template_with_pug": true
      }
    },
    "3ee947b1-4cb2-3202-ab0b-2f2583358c9a": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      }
    },
    "3ef4383c-21b4-34cf-bd76-fecb3a3a1aaf": {
      "content": "${1:obj}.serialize()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serialize": true
      }
    },
    "3ef7afcf-8253-364f-bb50-4dfd3eb13b78": {
      "content": "flash[:${1:notice}] = '${0}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flash": true
      }
    },
    "3ef9d26e-3e65-3b64-bb82-9ab76a54c774": {
      "content": "cursor: pointer;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "cursor: pointer",
      "matches": {
        "curp": true
      }
    },
    "3f0330a4-04e1-3712-9002-fbe7ae8eb29b": {
      "content": "_.isArrayLikeObject(${value})",
      "doc": "_.isArrayLikeObject([1, 2, 3]);\n// => true\n\n_.isArrayLikeObject(document.body.children);\n// => true\n\n_.isArrayLikeObject('abc');\n// => false\n\n_.isArrayLikeObject(_.noop);\n// => false\n\nThis method is like `_.isArrayLike` except that it also checks if `value`\nis an object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraylikeobject",
      "matches": {
        "lodash isarraylikeobject": true
      }
    },
    "3f0805fb-3a53-3cb7-9e49-3ecb4f9b3ded": {
      "content": "<summary>$1</summary>$2",
      "doc": "HTML - Defines a visible heading for the detail element [limited support]",
      "filetype": "html",
      "grammar": "lsp",
      "label": "summary",
      "matches": {
        "summary": true
      }
    },
    "3f08f613-25ca-3805-b845-90edcc9a4b68": {
      "content": "font-emphasize-style: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      }
    },
    "3f09015b-5d75-377b-a674-ead828f36fce": {
      "content": "[SerializableAttribute]",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serial": true,
        "serializable": true
      }
    },
    "3f0e83c2-2d7b-3103-a77c-d70ff4ecd0ad": {
      "content": "setTimeout(() => { ${1:first} }, ${2:second})",
      "doc": "Executes the given function after the specified delay",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setTimeOut",
      "matches": {
        "sto": true
      }
    },
    "3f121c95-19e5-367f-8042-9ccfcf76381d": {
      "content": "default:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "default: ...",
      "matches": {
        "default": true
      }
    },
    "3f17da21-b914-374e-9ad6-352650bda131": {
      "content": "while [[ ${1:condition} ]]; do\n\t${0}\ndone",
      "doc": "A while loop by condition.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "3f1c8228-8436-37c3-ba12-dabfbfff7a1c": {
      "content": "Int",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      }
    },
    "3f24835f-a595-3e0e-85b9-2d5085b2a2f4": {
      "content": "else if (${1:condition}) {\n   ${2:selected}\n}",
      "doc": "Code snippet for 'else' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "elseif",
      "matches": {
        "elseif": true
      }
    },
    "3f26aca1-74f0-3da9-b379-52488f8da4ea": {
      "content": "list-style-image: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-image: url (list)",
      "matches": {
        "list": true
      }
    },
    "3f26b5c6-3609-30b6-99d6-34703850bed8": {
      "content": "{{- if .Values.$1.affinity }}\n  affinity:\n{{ toYaml .Values.${1:value_key}.affinity | indent 8 }}\n{{- end }}\n  terminationGracePeriodSeconds: 60\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "affinity_spec": true
      }
    },
    "3f27549b-e14a-3d7c-82eb-29aadf30d5eb": {
      "content": "${1:obj}.add('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "3f27aa5c-fe31-3bb1-88ab-f2c3f58121a3": {
      "content": "~this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dtor": true
      }
    },
    "3f312994-4075-3eb1-97e7-247f1400533d": {
      "content": "DROP DATABASE IF EXISTS ${1:dbName};",
      "doc": "Drop database with conditional",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "dropdi",
      "matches": {
        "dropdi": true
      }
    },
    "3f376d93-0acd-3976-bc1b-d2612b0ccfb1": {
      "content": "t.boolean :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.boolean (tcb)",
      "matches": {
        "t.": true
      }
    },
    "3f3c640c-8129-335d-9f12-1df05995208a": {
      "content": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${5:pass}$0",
      "doc": "Code Snippet for a try/except with else statement.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try:except:else",
      "matches": {
        "trye": true
      }
    },
    "3f3f8c7d-f58d-310d-9084-17154a79a2e7": {
      "content": "place-content: ${1} ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      }
    },
    "3f432da5-e934-350d-872d-160c2fc16352": {
      "content": "class ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      }
    },
    "3f43da20-2786-3e22-a54e-b5ddaeacd2a8": {
      "content": "require 'test_helper'\n\nclass ${1:Model}ControllerTest < ActionController::TestCase\n\ttest$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create functional test class",
      "matches": {
        "clact": true
      }
    },
    "3f4711b2-debc-3f47-8680-5a7b82943971": {
      "content": "{% debug %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "3f47890e-3ca3-3e96-a453-a0cbb8f8f492": {
      "content": "| ${1:Column1}    | ${2:Column2}    | ${3:Column3}    |\n|---------------- | --------------- | --------------- |\n| ${4:Item1.1}    | ${5:Item2.1}    | ${6:Item3.1}    |\n| ${7:Item1.2}    | ${8:Item2.2}    | ${9:Item3.2}    |\n| ${10:Item1.3}   | ${11:Item2.3}   | ${12:Item3.3}   |\n${0}",
      "doc": "Insert table with 4 rows and 3 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 4x3 table",
      "matches": {
        "4x3table": true
      }
    },
    "3f4a6019-9495-37e5-a7c3-437f0c60b897": {
      "content": "NSLog(@\"${1}\")",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSLog(...)",
      "matches": {
        "log": true
      }
    },
    "3f4be3d3-13e0-3134-80b9-b7e315dad585": {
      "content": "{% section '${1:snippet}' %}",
      "doc": "Theme tag: section",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag section",
      "matches": {
        "section": true
      }
    },
    "3f540d76-d9d7-3639-a40c-09a35855dd23": {
      "content": "const ${1:reducerName} = (state={}, action) => {\n\tswitch(action.type) {\n\t\tcase ${1:action}:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t$2\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rdc": true
      }
    },
    "3f56e6bb-f7b4-3c61-b18e-e6908247eb75": {
      "content": "wont_be ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wb": true
      }
    },
    "3f597563-0a69-31c7-8929-9608a687c1d6": {
      "content": "for ${1}{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for loop",
      "matches": {
        "for": true
      }
    },
    "3f5d667f-996e-3082-9de5-d2f735fc4baa": {
      "content": "outline none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      }
    },
    "3f61ee07-b998-36e0-8b7a-a61f41c80b66": {
      "content": "scope=\"${1:this api replaced by slot-scope in 2.5.0+}\"$0",
      "doc": "Used to denote a <template> element as a scoped slot, which is replaced by `slot-scope` in 2.5.0+.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "scope",
      "matches": {
        "scope": true
      }
    },
    "3f6b8c21-753a-3497-92d8-c71d81669e4f": {
      "content": "threadIdx.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Thread Index",
      "matches": {
        "tid": true
      }
    },
    "3f6e6076-8e0f-3b05-93d2-4e6abb13662f": {
      "content": "{% regroup ${1} by ${2} as ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      }
    },
    "3f728995-1fcf-3566-ae7c-c31a6261e6c3": {
      "content": "limit: ${1:5}",
      "doc": "For loops option",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag Option limit",
      "matches": {
        "limit": true
      }
    },
    "3f72ab69-9205-3f28-a59e-f839e717c721": {
      "content": "class ${1:ClassName}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Class definition",
      "matches": {
        "class": true
      }
    },
    "3f778415-38e3-3f7d-a09d-8a7dbf77b086": {
      "content": "${1:obj}.append('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      }
    },
    "3f7b1df4-4cc6-3b30-9552-8a99fa2abfbd": {
      "content": "for ${1:I} in ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "3f7b346c-6f48-3ff7-9fc5-0b28ee83c6b8": {
      "content": "~~${1}~~${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "~~scratch~~",
      "matches": {
        "scratch": true
      }
    },
    "3f7dac3c-b3bf-317e-a2e9-de97b2b92499": {
      "content": "assert(${1:condition});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asr": true
      }
    },
    "3f7fefa9-3279-3047-80b2-5859dcc98feb": {
      "content": "| md5",
      "doc": "String filter: md5",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter md5",
      "matches": {
        "md5": true
      }
    },
    "3f85f299-cf34-3b9a-bcf2-9e9bae609feb": {
      "content": "empty-cells: hide",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      }
    },
    "3f8aed9a-c738-30b4-9065-63e280229f0c": {
      "content": "_.last(${array})",
      "doc": "_.last([1, 2, 3]);\n// => 3\n\nGets the last element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-last",
      "matches": {
        "lodash last": true
      }
    },
    "3f8bb0f9-60cd-304d-a8e8-aaf97377fee5": {
      "content": "Element Should Be Disabled    \\${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Disabled",
      "matches": {
        "esbd": true
      }
    },
    "3f90663a-3366-3af1-97ff-6ea3c9d57439": {
      "content": "echo CHtml::activeInputField('${1:type}', ${2:model}, '${3:attribute}',array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaif": true
      }
    },
    "3f90d8d1-c2ab-3fa7-a51e-a92b68e13433": {
      "content": "justify-items: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      }
    },
    "3f945a59-6193-3a2b-b86c-077abe80d988": {
      "content": "\\begin{align}\n\t${1:TARGET}\n\\end{align}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{align} \\align": true,
        "align": true
      }
    },
    "3f9668e7-9a06-36e1-9af4-692167169643": {
      "content": "FUNCTION COMBINED-DATETIME(${1:integer-date},${2:standard-numeric-time})$0",
      "doc": "function combines integer-date and standard-numeric-time into a single numeric item from which both date and time components can be derived",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-COMBINED-DATETIME",
      "matches": {
        "FUNCTION COMBINED-DATETIME": true
      }
    },
    "3f96e4e8-b933-3d86-8ecf-359c3c92b53a": {
      "content": "| money_with_currency",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_with_currency": true
      }
    },
    "3f97fa1f-e6ac-39e1-9d94-86bb5411cb8a": {
      "content": "GridView.count(\n  crossAxisSpacing: ${1:1},\n  mainAxisSpacing: ${2:2},\n  crossAxisCount: ${3:2},\n  children: <Widget> [\n    ${4:}\n  ],\n),",
      "doc": "Creates a scrollable, 2D array of widgets with a fixed number of tiles in the cross axis.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "GridView.Count",
      "matches": {
        "gridViewC": true
      }
    },
    "3f998bf3-4f84-342c-a883-7446aba07fda": {
      "content": "$.extend(${1:true, }${2:target}, ${3:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extend": true
      }
    },
    "3f9e2a11-4b9c-388d-893e-c56b9d79f448": {
      "content": "display: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      }
    },
    "3f9eee82-0306-371b-9907-f214b47d42db": {
      "content": "id=\"$1\" name=\"${2:$1}\"",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idn": true
      }
    },
    "3fa135fe-12b4-3800-8215-461493cb1328": {
      "content": "${1:reg}_w = $1_r;${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "_w = _r",
      "matches": {
        "regkeep": true
      }
    },
    "3fa2a244-977a-3cd2-9b66-bef26387111a": {
      "content": "align-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      }
    },
    "3faaaacc-b2ec-314e-a350-f924433ab360": {
      "content": "alias",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "alias",
      "matches": {
        "alias": true
      }
    },
    "3fb182f0-e3ae-32fd-8d34-9fa96ae85b57": {
      "content": "border-top-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      }
    },
    "3fb1cc75-431f-38e2-94fa-257b33e27d58": {
      "content": "unittest {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      }
    },
    "3fb25a13-5d1a-3d2e-9a51-92aed5d588be": {
      "content": "<area shape=\"rect\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:r": true
      }
    },
    "3fb6d06f-ffcf-39be-a4a9-574883fb52ba": {
      "content": "acos($2)",
      "doc": "float acos(float x)\nvec2 acos(vec2 x)\nvec3 acos(vec3 x)\nvec4 acos(vec4 x)\n\nThe acos function returns the arccosine of an angle in radians. It is the inverse function of cosine. The input parameter can be a floating scalar or a float vector. In case of a float vector the arccosine is calculated separately for every component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "acos",
      "matches": {
        "acos": true
      }
    },
    "3fba9e3a-21f3-3104-b020-1d6927096cdd": {
      "content": "while (${1:/* condition */}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "3fc1fcf5-87aa-3213-9cf8-244991c4042e": {
      "content": ":::::: {.columns}\n::: {.column}\n\n${1:Content of the left column.}\n\n:::\n::: {.column}\n\n${2:Content of the right column.}\n\n:::\n::::::$0",
      "doc": "Insert (side-by-side) two columns",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert two columns",
      "matches": {
        "two columns": true
      }
    },
    "3fca7437-8f44-3722-89af-0b1026dbf478": {
      "content": "# ${0}",
      "doc": "Add header level 1",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 1",
      "matches": {
        "h1": true
      }
    },
    "3fca752d-5e8c-30c0-8af4-01e21ddc2394": {
      "content": "case ${1}:\n\t${0}\n\tbreak",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "3fcc57a3-c9ed-3295-93ac-cea292129ce4": {
      "content": "let mut ${1}: ${2} = ${3};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let mut variable declaration with explicit type annotation",
      "matches": {
        "lettm": true
      }
    },
    "3fcd9ff7-7ad8-340c-9a40-d0fed040bf5b": {
      "content": "{\n\t${VISUAL}$0\n},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Object",
      "matches": {
        "o": true
      }
    },
    "3fd1bf34-f662-35af-b147-290de0fc2016": {
      "content": "font-variant small-caps",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:sc": true
      }
    },
    "3fd85c88-b44d-3c88-8ba5-071233010aa9": {
      "content": "\\\\citeyear{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citeyear",
      "matches": {
        "citey": true
      }
    },
    "3fda78cb-23d7-3c10-aeff-4f80000c7264": {
      "content": "const ${1:first} = (${2:second}) => { ${3:third} }",
      "doc": "Creates a named function",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "namedFunction",
      "matches": {
        "nfn": true
      }
    },
    "3fe076b3-c2be-3ec9-9cb6-4bcf0332aae2": {
      "content": "<script src=\"${1}\"${2: defer}></script>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "js",
      "matches": {
        "scriptsrc": true
      }
    },
    "3fe50e89-9f47-31a9-a367-3b79ad8a9e3f": {
      "content": "${1:app}.put('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eput": true
      }
    },
    "3fe88d4f-f228-378e-85ff-7b71fa5d795b": {
      "content": "| ${1:Column1}    | ${2:Column2}    | ${3:Column3}    |\n|---------------- | --------------- | --------------- |\n| ${4:Item1.1}    | ${5:Item2.1}    | ${6:Item3.1}    |\n| ${7:Item1.2}    | ${8:Item2.2}    | ${9:Item3.2}    |\n| ${10:Item1.3}   | ${11:Item2.3}   | ${12:Item3.3}   |\n| ${13:Item1.4}   | ${14:Item2.4}   | ${15:Item3.4}   |\n${0}",
      "doc": "Insert table with 5 rows and 3 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 5x3 table",
      "matches": {
        "5x3table": true
      }
    },
    "3fe8d8b4-f3cd-3058-b24b-1b38c5ce4b9b": {
      "content": "(function(${1}) {\n\t${0:${VISUAL}}\n}(${2}));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(f": true
      }
    },
    "3feacfad-f2a3-304a-9a0c-80be3ccd737c": {
      "content": "/// @title A title that should describe the contract/interface\r\n/// @author The name of the author\r\n/// @notice Explain to an end user what this does\r\n/// @dev Explain to a developer any extra details",
      "doc": "natspec for contract",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "natspec contract",
      "matches": {
        "///nat_contract": true
      }
    },
    "3fecd54b-4067-38ba-a6ab-d3356c5c5760": {
      "content": "align-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      }
    },
    "3fee78d3-1dbc-3676-b16c-9faaa6fe9600": {
      "content": "<dd>$1</dd>$2",
      "doc": "HTML - Defines a definition description",
      "filetype": "html",
      "grammar": "lsp",
      "label": "dd",
      "matches": {
        "dd": true
      }
    },
    "3ff01814-c6f9-3477-80f8-49e4bb350a45": {
      "content": "align-items last baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      }
    },
    "3ff2c9c0-7151-39a9-9887-9e818bb5f528": {
      "content": "echo CHtml::openTag('${1:tag}', array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhot": true
      }
    },
    "3ffadb1e-6ece-305a-8f25-c88be7572818": {
      "content": "\\begin{figure}[${1}]\n\t\\centering\n\t\\begin{tikzpicture}[${2}]\n\t\t${3:TARGET}\n\t\\end{tikzpicture}\n\t\\caption{${4}}\n\t\\label{${5}}\n\\end{figure}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figuretikz": true,
        "tikzfig": true
      }
    },
    "4000f6ce-126e-34cc-ba24-781c0801dd5e": {
      "content": "[${1:link}](http://${2:url} \"${3:title}\")${4}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      }
    },
    "40055367-167b-3154-bdee-8bb9521a2057": {
      "content": "toggleHighQuality();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tq": true
      }
    },
    "40056499-2e34-3b65-8a38-c51ae1609c18": {
      "content": "else\n\t${0:command}",
      "doc": "else",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "400ebb3b-4ad4-3d8e-81ab-a1d82067dcaa": {
      "content": "is_dir(${1:path})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "is_dir",
      "matches": {
        "id": true
      }
    },
    "4010c7a7-8260-363c-a108-2ca7b79aba6b": {
      "content": "?assertEqual(${1}, ${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aseq": true
      }
    },
    "4014927c-ad74-31ae-8c5d-b1e757b9d264": {
      "content": "// MARK: - ${1:lable}",
      "doc": "Create a MARK",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: -",
      "matches": {
        "mark": true
      }
    },
    "401b509e-15c8-334c-9ed1-4ea3468681a7": {
      "content": "import React from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactArrowFunctionExportComponent",
      "matches": {
        "rafce": true
      }
    },
    "401b8d5a-d3df-3a86-b6a3-29b6c4d982e2": {
      "content": "border-top-right-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      }
    },
    "401bb6ae-76d9-36e3-8ca0-24b7a83d77de": {
      "content": "component",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "componentWord",
      "matches": {
        "component": true
      }
    },
    "4021f1c5-b7c8-3456-9fca-06679453e876": {
      "content": "lightFalloff(${1:constant}, ${2:linear}, ${0:quadratic});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lightFalloff": true
      }
    },
    "4024c9d2-731d-389c-ac3e-758bd9440204": {
      "content": "\\begin{theindex}\n\t${1:TARGET}\n\\end{theindex}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{theindex} \\theindex": true,
        "theindex": true
      }
    },
    "40259264-04bc-3561-84f7-bcf57e8f137b": {
      "content": "scope(${1:exit})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "scope (scope)",
      "matches": {
        "scope": true
      }
    },
    "4025cc23-2b25-38f4-95c3-7777607aa9fc": {
      "content": "extern \"C\" {\n    ${2:// add code here}\n}",
      "doc": "extern \"C\" { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "extern-mod",
      "matches": {
        "extern-mod": true
      }
    },
    "402ef18c-8850-3e0d-b8b2-e9912db9a8bb": {
      "content": "${1:obj}.size()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      }
    },
    "402f8680-3e90-363c-8db7-3b3c9578b89a": {
      "content": "background-clip: padding-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      }
    },
    "40324e48-bc0e-3bd4-a0e7-813e36050026": {
      "content": "<${1:}>${2}</$1>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      }
    },
    "40364465-71ff-38f5-bbf3-f3bbc9706df0": {
      "content": "color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      }
    },
    "403b547d-25e2-35bf-b4d6-a3aef29cb70c": {
      "content": "#import \"$0\"",
      "doc": "Code snippet for #import \" \"",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#imp",
      "matches": {
        "#imp": true
      }
    },
    "404419eb-84d9-3d8d-a9e2-81a89d124ec6": {
      "content": "background-clip: no-clip",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      }
    },
    "404468cb-14e2-32c6-9b2f-56c746febfbb": {
      "content": "align-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      }
    },
    "4047440e-0e58-3af7-88e7-6d40d0cf0a6d": {
      "content": "text-align-last: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      }
    },
    "40482d1a-02b1-3657-944a-b73c42a6a931": {
      "content": "ref='${1:reference}'$0",
      "doc": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "ref",
      "matches": {
        "ref": true
      }
    },
    "404d805d-9440-333b-9254-465d82471002": {
      "content": "<fieldset class=\"${1}\">\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset.": true
      }
    },
    "4052a34f-56aa-37c8-826e-25ab242ced2c": {
      "content": ".. attention::\n\t${0:hey!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "att:": true
      }
    },
    "4054380d-cf74-3bd2-b07e-195a1e11d13a": {
      "content": "| upcase }}",
      "doc": "String filter: upcase }}",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter upcase",
      "matches": {
        "upcase": true
      }
    },
    "4057e245-bb19-372e-b9c3-f9d78f32fc7a": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "4058c207-d782-3b16-ad5c-f5e15a53dd77": {
      "content": "defprotocol ${1:name}, [${0:function}]",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defpr": true
      }
    },
    "406e42b4-46a3-345b-950c-b884e7e14244": {
      "content": "border-left-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      }
    },
    "40761f0d-88ce-3cdf-9f61-fa1b009a202d": {
      "content": "| ${1:Column1}   | ${2:Column2}    |\n|--------------- | --------------- |\n| ${3:Item1.1}   | ${4:Item2.1}   |\n| ${5:Item1.2}   | ${6:Item2.2}   |\n| ${7:Item1.3}   | ${8:Item2.3}   |\n${0}",
      "doc": "Insert table with 4 rows and 2 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 4x2 table",
      "matches": {
        "4x2table": true
      }
    },
    "407719d0-82a1-3d66-bbc0-94b2d7f6eda0": {
      "content": "any? { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "any": true
      }
    },
    "407be2b4-b80b-3c90-9d38-83e653d597dc": {
      "content": "@doc \"\"\"\n${1:doc string}\n\"\"\"\ndef ${2:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defd": true
      }
    },
    "407f58b1-d754-3ee6-841a-bf5711fd58e1": {
      "content": "% while ${1:}:\n\t${2:}\n% endwhile",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "wh": true
      }
    },
    "4081eaab-46c9-36f0-bd0a-31b17f4d3001": {
      "content": "interface ${1:name}\r\n\t$0\r\nend interface ! $1",
      "doc": "interface",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "interf",
      "matches": {
        "interf": true
      }
    },
    "40841c1b-3705-3da7-9b57-eab8d5328bb7": {
      "content": "public",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      }
    },
    "4090edd7-8fa3-33eb-896a-cb075cc719c5": {
      "content": "\\begin{matrix}\n\t${1:TARGET}\n\\end{matrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{matrix} \\matrix": true,
        "matrix": true
      }
    },
    "409887ec-2c91-3b7e-adec-36c84c7f122a": {
      "content": "{% else %}\n  ${1:TARGET}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "40a19bdd-7162-35b5-8e8d-61c83ac4b294": {
      "content": "require :module)",
      "doc": "Require a module",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "require": true
      }
    },
    "40a2a794-d422-3b83-bebc-84c8b39ea403": {
      "content": "when {\n\tenvironment '${1:environment}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenenvironment": true
      }
    },
    "40a2fd72-1566-3807-8800-e7613f8f7e7f": {
      "content": "public string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      }
    },
    "40a672bc-b8c6-38f9-98e7-512d9d83f394": {
      "content": "left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      }
    },
    "40a83d75-7719-3dad-8026-fb677367e9cb": {
      "content": "refute_equal ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfe": true
      }
    },
    "40b63647-02d5-35d0-bba9-7b9f79f98879": {
      "content": "margin-left: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      }
    },
    "40b9f2b8-c003-3556-907e-3c8c96c74ba0": {
      "content": "const ${1:value} = useContext(${2:MyContext});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useContext",
      "matches": {
        "usect": true
      }
    },
    "40c9241a-1f91-33cd-ad2c-3bea9051c9a8": {
      "content": "${1:FIELDNAME} = serializers.URLField(${2})",
      "doc": "Django-rest Serializers ``URLField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF URLField",
      "matches": {
        "surl": true
      }
    },
    "40d3075c-83fb-39e5-9f18-202065327fcf": {
      "content": "setInterval(() => {\n\t$0\n}, ${1:interval});",
      "doc": "Set Interval Function",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Set Interval Function",
      "matches": {
        "setinterval": true
      }
    },
    "40d730b7-e464-38a5-83b7-06d85ea70080": {
      "content": "Element Should Be Focused    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Focused",
      "matches": {
        "esbf": true
      }
    },
    "40e3ef18-aab1-33a5-8cea-bb235c043c59": {
      "content": "${1:obj}.fadeOut 'slow/400/fast', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeoutc": true
      }
    },
    "40e7022c-f9bf-3fd5-801d-dfb342eef876": {
      "content": "expect($1).toHaveLength($0);",
      "doc": "expects the object to have length",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavelength",
      "matches": {
        "jest expect tohavelength": true,
        "thl": true
      }
    },
    "40e8b61c-a006-3970-99e5-4a1fa2146b18": {
      "content": "IO.inspect($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "IO.inspect",
      "matches": {
        "ins": true
      }
    },
    "40ebccdb-e8b7-3a14-bcbd-371669d2057f": {
      "content": "| plus: ${1:1}",
      "doc": "Math filter: plus",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter plus",
      "matches": {
        "plus": true
      }
    },
    "40f17e9e-dd95-33c0-b517-ad843cba3327": {
      "content": "\\\\times {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "cross product",
      "matches": {
        "\\x": true
      }
    },
    "40f28b48-4129-389d-af9c-86076703512c": {
      "content": "${1:obj}.hasClass('${2:className}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasc": true
      }
    },
    "40f39ff5-adbf-33dc-8b6e-9f917fe223ff": {
      "content": "fill(${1:range}) { |${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fil": true
      }
    },
    "40fa550b-685c-3f9a-8fbb-6bb871a97268": {
      "content": "render inline: \"${1:<%= 'hello' %>}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline) (ri)",
      "matches": {
        "ri": true
      }
    },
    "41036813-45da-3574-a229-4a2d706d5f8e": {
      "content": "case ${1:#:condition}:\n  ${2:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "41050dba-7e70-3cfe-8c0d-af31cea53cca": {
      "content": "case ${1:value}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "cs": true
      }
    },
    "410fa306-7ad6-3123-a161-37671da65a0a": {
      "content": "var $1 = new sap.m.HBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmhbox": true
      }
    },
    "4111aed0-5845-39b4-8365-b467a9a3035f": {
      "content": "do {\n\t$0\n} while (${1:condition});",
      "doc": "Do-While Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Do-While Statement",
      "matches": {
        "dowhile": true
      }
    },
    "411272ec-0eac-3eae-84ec-bb1eaacc68a3": {
      "content": "pipe(${1:stream})${2}",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipe": true
      }
    },
    "411de8b0-1db3-3a33-ac6d-d6db38390cd8": {
      "content": "${1:obj}.unbind('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbind": true
      }
    },
    "41262c7d-936d-3af9-9928-515714f90376": {
      "content": "assert_rjs :${1:replace}, ${2:\"${3:dom id}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_rjs",
      "matches": {
        "asrj": true
      }
    },
    "4126d66e-f259-38ed-87c5-0f7ccb0c80f7": {
      "content": "Page Should Contain Element    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Element",
      "matches": {
        "psce": true
      }
    },
    "41296698-b9de-3082-8248-e076a9fefc8f": {
      "content": "&#x21A9;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      }
    },
    "412a1cda-3010-3030-b54d-10f21e4c9d09": {
      "content": "form_open(\"${1:action}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_open": true
      }
    },
    "41310b71-718f-3b5b-b441-487aad4eb2f3": {
      "content": "var ${1:var} = struct{\n\t${2:name} ${3:type}\n}{\n\t$2: ${4:value},\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Grouped globals with anonymous struct",
      "matches": {
        "gg": true
      }
    },
    "4135077c-3a9b-31ef-84bd-d6c5425c1546": {
      "content": "process.stdin",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stdin",
      "matches": {
        "stdin": true
      }
    },
    "413840a5-dd50-3005-9afd-d69169e2ec09": {
      "content": "[[ ${0:test} ]]",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      }
    },
    "413be9e8-aeb5-3369-a09f-00014e5de9bf": {
      "content": "def initialize(${1:args})\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "definit": true
      }
    },
    "413dd8f0-215e-3763-a239-567404951151": {
      "content": "$${1:variable}: ${0:value}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      }
    },
    "413f7b76-b5ff-3a78-8605-2836ff507312": {
      "content": "defmacro ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defma": true
      }
    },
    "41420011-0735-3e67-840f-83c0c0e543f8": {
      "content": "<style>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with CSS",
      "matches": {
        "style_with_CSS": true
      }
    },
    "41428d24-f26b-35b9-ae42-2b152103b7d4": {
      "content": "${1:FIELDNAME} = models.CommaSeparatedIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CommaSeparatedIntegerField",
      "matches": {
        "mcoseint": true
      }
    },
    "415432e0-8346-345b-9213-00e9dfce1874": {
      "content": "cy.visit('${1:url}');",
      "doc": "Visit a remote URL",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-visit",
      "matches": {
        "cypress visit": true
      }
    },
    "4158bdfc-aa94-3fd8-94d3-73ae7e29cfb8": {
      "content": "Options ${1:#:All} ${2:#:ExecCGI} ${3:#:FollowSymLinks} ${4:#:Includes} ${5:#:IncludesNOEXEC} ${6:#:Indexes} ${7:#:MultiViews} ${8:#:SymLinksIfOwnerMatch}",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      }
    },
    "4159c845-2101-3125-acad-9e4b44859cb8": {
      "content": "{% ssi $1 parsed %}",
      "doc": "ssi tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ssi",
      "matches": {
        "ssi": true
      }
    },
    "41607dd1-36d5-3a1b-a658-5481f58d24ca": {
      "content": "|> Enum.filter(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to filter",
      "matches": {
        ">f": true
      }
    },
    "4161039c-6398-3fc6-805f-fe3435743f45": {
      "content": "text-indent: ${1:10}px;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-indent: length (text)",
      "matches": {
        "text": true
      }
    },
    "41737747-369a-39cd-affc-484dfb8d9983": {
      "content": "<option value=\"${1}\">${2:TARGET}</option>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      }
    },
    "4174ea6a-d10d-3a8c-8b33-591fb1e71e24": {
      "content": "<remarks>${0:#:description}</remarks>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<remarks></remarks>",
      "matches": {
        "remarks": true
      }
    },
    "41774fa5-7f68-3390-abea-7d9ea813ff28": {
      "content": "try\n\t${1}\nwith ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "41795bc8-8cf8-35bb-8a7e-3d14b3e74bf3": {
      "content": "min(${1:value1}, ${2:value2}${3:, }${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      }
    },
    "417af119-cdf5-34a2-9f70-d7653d34bca5": {
      "content": "align-content: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      }
    },
    "417f6a8a-80c8-30b2-9e29-c2704d0975a5": {
      "content": "#!/usr/bin/env python3",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!3": true
      }
    },
    "417f8ef0-3c88-3eff-9810-265c69132877": {
      "content": "object\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "obj",
      "matches": {
        "obj": true
      }
    },
    "4194476c-aa7f-3dd9-865f-cb295f1103cd": {
      "content": "grid: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      }
    },
    "4196e9e2-4c9c-375d-b847-03dbce09237f": {
      "content": "function present-value(${1:discount-rate},${2:amount},${3:...})$0",
      "doc": "approximation of the present value of a series of future period-end amount",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-present-value",
      "matches": {
        "function present-value": true
      }
    },
    "419837c0-2ce4-39dc-8b41-d707cd41b2b6": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "else {...}",
      "matches": {
        "el": true
      }
    },
    "419bce06-7389-358e-bfea-136a7a51c636": {
      "content": "<nav id=\"${1}\">\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav#": true
      }
    },
    "419c9e37-0815-34f9-847b-aa73be0c52c4": {
      "content": "Run Keyword If Any Tests Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Any Tests Failed",
      "matches": {
        "rkiatf": true
      }
    },
    "419fd61d-a372-3135-858b-f17d2b76e006": {
      "content": "margin-left: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-left": true,
        "ml": true
      }
    },
    "419ffbae-2321-3f3c-ae4b-7b6f1f489ba8": {
      "content": "it('should $1', async () => {\n  $0\n})",
      "doc": "Testing async `it` block",
      "filetype": "react",
      "grammar": "lsp",
      "label": "itAsyncBlock",
      "matches": {
        "tita": true
      }
    },
    "41a6fa1b-d9ad-36bf-9601-de9bc18dd830": {
      "content": "while (${1:/* condition */}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "41af361c-d662-333e-951c-6952dc160152": {
      "content": "$.merge(${1:target}, ${0:original})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "merge": true
      }
    },
    "41af68fb-d886-385c-8d32-55f30eabb823": {
      "content": "/*! \\enum $2\n *\n *  ${4:Detailed description}\n */\ntypedef enum {\n\t${1:Data} /*!< ${3:Description} */\n} ${2:foo};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tde": true
      }
    },
    "41b331b1-444d-317c-b54d-0c5668bcb57c": {
      "content": "| money_without_trailing_zeros",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money_without_trailing_zeros": true
      }
    },
    "41b47f5b-fe9f-3050-99a0-ab47a3e81a6a": {
      "content": "curvePoint(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curvePoint": true
      }
    },
    "41b7771d-0f8d-38cf-bbb2-815223e20c2a": {
      "content": "place-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      }
    },
    "41ca4e56-f539-3bc6-bf41-d09d57b71eee": {
      "content": "pixels[${0:index}]",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pixels": true
      }
    },
    "41cacb6a-9446-30dd-b4f0-93767492300a": {
      "content": "const",
      "doc": "The qualifier const is used for variables that are compile-time constants or for function parameters that are read-only.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "const",
      "matches": {
        "const": true
      }
    },
    "41cd4f5e-43a6-3bb5-a828-84593ec8c845": {
      "content": "justify-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      }
    },
    "41d2a699-b37e-30fc-9a79-7d75b29bd1b8": {
      "content": "(/ $1 /) ${2:,&} ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/": true
      }
    },
    "41d75031-2ba0-3b65-bc5b-ea3786b41c9f": {
      "content": "<transition$1>\n$2\n</transition>$0",
      "doc": "transition element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition",
      "matches": {
        "transition": true,
        "vue transition": true
      }
    },
    "41d805bb-3382-3d71-b9b5-b58802db4786": {
      "content": "${1:FIELDNAME} = models.EmailField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "EmailField",
      "matches": {
        "memail": true
      }
    },
    "41dd4590-96c0-3f45-bacf-220953d61039": {
      "content": "number.moreThan()",
      "doc": "number.moreThan(min: number | Ref, message?: string | function): Schema\n\nValue must be strictly greater than min. The ${more} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-more-than",
      "matches": {
        "yup number morethan": true
      }
    },
    "41dd8714-a058-35f5-8d42-5506d555d45c": {
      "content": "// http://snipplr.com/view.php?codeview&id=1986 // modified\nclass CSVIterator implements Iterator\n{\n\tprivate $f;\n\tprivate $curr;\n\tprivate $rowCounter;\n\n\t /* opts keys:\n\t\t* row_size\n\t\t* escape\n\t\t* enclosure\n\t\t* delimiter\n\t\t*/\n\tpublic function __construct( $file_or_handle, $opts = [4096, ','] )\n\t{\n\t\t$d = function($n) use(&$opts){ return isset($opts[$n]) ? $opts[$n] : false; };\n\n\t\t$this->combine = $d('combine');\n\t\t$this->headers = $d('headers');\n\t\t$this->headerCheckFunction = $d('header_check_function');\n\n\t\t$this->f =\n\t\t\tis_string($file_or_handle)\n\t\t\t? fopen( $file_or_handle, 'r' )\n\t\t\t: $file_or_handle;\n\t\tif (!$this->f) throw new Exception('bad file descriptor');\n\t\t$this->fgetcsv_args = [\n\t\t\t\t$this->f,\n\t\t\t\tisset($opts['row_size']) ? $opts['row_size'] : 4096,\n\t\t\t\tisset($opts['delimiter']) ? $opts['delimiter'] : ',',\n\t\t\t\tisset($opts['enclosure']) ? $opts['enclosure'] : '\"',\n\t\t\t\tisset($opts['escape']) ? $opts['escape'] : '\\\\',\n\t\t];\n\t\t$this->start();\n\t}\n\n\tprotected function readRow(){\n\t\t$this->curr = call_user_func_array('fgetcsv', $this->fgetcsv_args );\n\t\t$this->rowCounter++;\n\t\tif ($this->rowCounter == 1){\n\t\t\t$this->processHeader();\n\t\t} elseif ($this->curr) {\n\t\t\t$this->processRow();\n\t\t}\n\t}\n\n\tpublic function processHeader(){\n\t\tif ($this->headers || $this->combine){\n\t\t\t$this->header = $this->curr;\n\t\t\tif ($this->headerCheckFunction){\n\t\t\t\t$f = $this->headerCheckFunction;\n\t\t\t\t$f($this->header);\n\t\t\t}\n\t\t\t$this->readRow();\n\t\t}\n\t}\n\n\tpublic function processRow(){\n\t\tif ($this->combine)\n\t\t\t$this->curr = array_combine($this->header, $this->curr);\n\t}\n\n\tpublic function start(){\n\t\t$this->rowCounter = 0;\n\t\trewind( $this->f );\n\t\t$this->readRow();\n\t}\n\n\tpublic function rewind()\n\t{\n\t\t$this->start();\n\t}\n\n\tpublic function current()\n\t{\n\t\t$curr = $this->curr;\n\t\t$this->readRow();\n\t\treturn $curr;\n\t}\n\n\tpublic function key()\n\t{\n\t\treturn $this->rowCounter;\n\t}\n\n\tpublic function next()\n\t{\n\t\treturn $this->curr;\n\t}\n\n\tpublic function valid(){\n\t\tif( !$this->next() )\n\t\t{\n\t\t\tfclose( $this->f );\n\t\t\treturn FALSE;\n\t\t}\n\t\treturn TRUE;\n\t}\n\n} // end class",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CSVIterator": true
      }
    },
    "41e1974a-21e5-3c00-b68b-91c05d4dd784": {
      "content": "rug(${1:jitter(${2:x})})",
      "doc": "",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "rug",
      "matches": {
        "rug": true
      }
    },
    "41e32758-87c4-3e8a-9711-ccafc5fbc136": {
      "content": "public void test${1:#:Name}() throws Exception {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "41e4866c-acb7-316f-87a4-d139c791f4df": {
      "content": "= render :partial => \"${0:item}\"",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      }
    },
    "41ed52f0-8c6c-321e-a62d-1d5607af0f0f": {
      "content": "use Symfony\\Component\\HttpFoundation\\File\\UploadedFile;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\File",
      "matches": {
        "usefile": true
      }
    },
    "41ee2702-69d1-328b-b8a9-9ff42f7280ce": {
      "content": "<template lang=\"$1\">\n\t<div$2>\n\t\t$0\n\t</div>\n</template>",
      "doc": "template element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "templateLang",
      "matches": {
        "templateLang": true
      }
    },
    "41f44af2-2fa3-30d0-820e-6c9ea9313ab9": {
      "content": "CONSTRAINT ${1:attribute} FOREIGN KEY (${2:attribute(s)})\n\tREFERENCES ${3:tableName}(${4:attribute})",
      "doc": "Constraint foreing Key",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "foreingkc",
      "matches": {
        "foreingkc": true
      }
    },
    "41f5b8e1-b6c6-369b-a43e-23739f475d4e": {
      "content": "CHARACTER",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      }
    },
    "41f663b9-65c5-3680-8db0-c779feca4891": {
      "content": "def ${1:#:name}(${2}):\n\t\"\"\"${3:#:function documentation}\"\"\"\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def function(...): \"\"\"...\"\"\"",
      "matches": {
        "defd": true
      }
    },
    "41f6bb6a-94f6-3fbd-967f-e3d62556f36a": {
      "content": "private ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "41fe96f3-a7fa-38aa-93a5-844a38b6e063": {
      "content": "<router-link $1>$2</router-link>$0",
      "doc": "router-link element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "routerLink",
      "matches": {
        "routerLink": true
      }
    },
    "4206418b-5d93-39b7-8f36-1e06948c0720": {
      "content": "qr/${0:regex}/x",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qr/": true
      }
    },
    "4218ca9e-b399-3255-a361-a63c48cbe70a": {
      "content": "break",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "break",
      "matches": {
        "br": true
      }
    },
    "42222695-3b67-3e34-ae36-5df69af7b7ef": {
      "content": "\\\\begin{equation}\n\t${0:${VISUAL}}\n\\\\end{equation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "equation environment",
      "matches": {
        "eq": true
      }
    },
    "422345b4-c0d0-3479-85ac-8d401e3b295f": {
      "content": "this.setState({$0})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-set-state-object",
      "matches": {
        "react componentsetstateobject": true,
        "sst": true
      }
    },
    "4228ec21-bdeb-305e-ad3b-0204b61f5eb4": {
      "content": "{% filter ${1:filter} %}\n\t$2\n{% endfilter %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "filter",
      "matches": {
        "filter": true
      }
    },
    "422a44b1-772c-3ec9-a946-6f1fe039efc6": {
      "content": "{% requireGuest %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requireguest",
      "matches": {
        "requireguest": true
      }
    },
    "422d3b85-7edf-360d-84aa-41f1c920d8c1": {
      "content": "@while ${1:$i} ${2:>} ${3:0}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "422dfd57-fba8-3241-b40b-a4921164fa61": {
      "content": "${1} : in std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      }
    },
    "42341c37-74a4-3e2a-8f7d-c9b57febfb70": {
      "content": "import { ${2:originalName} as ${3:alias} } from '${1:module}';$0",
      "doc": "Imports a specific portion of the module by assigning a local alias in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importAs",
      "matches": {
        "ima": true
      }
    },
    "42391777-6c4b-3bca-84b6-9b0d8d2d3d8b": {
      "content": "echo CHtml::closeTag('${0:tag}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhct": true
      }
    },
    "423cb53e-2d13-30a5-9d74-f81752cfd9af": {
      "content": "out${1:(result)}\n{\n\tassert(${2:/*condition*/}, \"${3:error message}\");\n\t$4\n}\nbody",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "out contract (out)",
      "matches": {
        "out": true
      }
    },
    "425a831a-74be-3fae-8b20-04906e3d8be3": {
      "content": "{{ site.${my_collection}.directory }}",
      "doc": "The full path to the collection's source direcotry",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag collection directory",
      "matches": {
        "cdirp": true
      }
    },
    "425b1bfd-2ac4-320f-80c7-d4ef34b03c0f": {
      "content": "(+ ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "+": true
      }
    },
    "426665b1-a033-38b5-b976-7ade6eb6bf1c": {
      "content": "if ${1:condition}:\n\t${2:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "4269c764-0e31-35fd-baa3-83d388977b33": {
      "content": "foreach(${1:elem}; ${2:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fe": true
      }
    },
    "426cb831-1593-347f-a018-e2689ecff446": {
      "content": "@param {${1:Type}} ${2:varname} ${3:Description}",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@param {Type} varname Description",
      "matches": {
        "@p": true
      }
    },
    "426cd694-f2db-3433-9673-2aa8203f55c1": {
      "content": "self.assertEqual(${0}, ${1})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a=": true
      }
    },
    "4271c3f9-8135-32cd-b812-209d1c997657": {
      "content": "background-repeat: repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-repeat: repeat",
      "matches": {
        "bgrr": true
      }
    },
    "427761db-5f90-3321-b80a-d1901cc16c72": {
      "content": "class $1 extends StatelessWidget {\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stless": true
      }
    },
    "427a8412-4d25-32a5-a718-cd910cff1777": {
      "content": "require('${1:module}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "rq": true
      }
    },
    "429673bc-f917-3b3d-9881-e89aa2e0139e": {
      "content": "Wait Until Element Is Visible    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Visible",
      "matches": {
        "wueiv": true
      }
    },
    "429982f3-544d-33e4-9e13-992111e7c899": {
      "content": "place-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      }
    },
    "42a2c50a-abc4-30ed-b1ef-29d2a737353c": {
      "content": "-> (${1:#:args}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      }
    },
    "42a4e0f7-c27c-39bf-a29b-a7f62c352336": {
      "content": "(match ${1}\n\t[(${2}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      }
    },
    "42a716f8-34b7-3f42-a405-a3f42b92fe1c": {
      "content": "const { ${1:scaleX}, ${2:scaleY} } = useInvertedScale()",
      "doc": "useInvertedScale(scale): ScaleMotionValues Returns a MotionValue each for scaleX and scaleY that update with the inverse of their respective parent scales.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-inverted-scale",
      "matches": {
        "framer-motion use-inverted-scale": true,
        "use-inverted-scale": true
      }
    },
    "42b06806-d4bc-3ca3-a56a-ff659f8c1bcb": {
      "content": "background-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi": true
      }
    },
    "42b1a38f-e41e-3e0c-a8fb-3b79e60c2397": {
      "content": "redirect_to action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :action",
      "matches": {
        "rea": true
      }
    },
    "42b4f9a8-22af-3710-8bcc-a5737b027b5f": {
      "content": "return ${0};",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "42b69482-0025-3a36-9520-5314c51dbd18": {
      "content": "<AnimatePresence>\n    {${1:isVisible} && (\n      <motion.div\n        initial={{ ${3:style} }}\n        animate={{ ${4:style} }}\n        exit={{ ${5:style} }}\n      />\n    )}\n</AnimatePresence>",
      "doc": "AnimatePresence allows components to animate out when they're removed from the React tree.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-presence",
      "matches": {
        "animate-presence": true,
        "framer-motion animate-presence": true
      }
    },
    "42b6b1e5-5dfd-3189-9838-0eb21c64abd3": {
      "content": "@since ${0:#:version}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "since": true
      }
    },
    "42b79504-820c-3b7a-951e-b58950994ef9": {
      "content": "_.stubObject()",
      "doc": "var objects = _.times(2, _.stubObject);\n\nconsole.log(objects);\n// => [{}, {}]\n\nconsole.log(objects[0] === objects[1]);\n// => false\n\nThis method returns a new empty object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubobject",
      "matches": {
        "lodash stubobject": true
      }
    },
    "42b9615c-6463-31ed-be72-6c855e893adc": {
      "content": "<table id=\"${1}\">\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table#": true
      }
    },
    "42b9c0ac-958c-3b36-a66c-38c93a25efe5": {
      "content": "do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "42c6ad3f-36df-3fe3-ba8c-0c070fbe4dd1": {
      "content": "\\$_ENV['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "env": true
      }
    },
    "42c8699c-132a-391c-a261-34af7d26f637": {
      "content": "while ${1:#:condition} ; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true,
        "while": true
      }
    },
    "42cf5682-698c-3453-b0fa-1ec8181216fa": {
      "content": "import { createGlobalStyle } from 'styled-components';",
      "doc": "import { createGlobalStyle } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-create-global-style-from-styled-components",
      "matches": {
        "imscg": true,
        "styled-components import createglobalstyle": true
      }
    },
    "42d98253-6208-3a62-b05b-85829c03712b": {
      "content": "PropTypes.bool.isRequired",
      "doc": "Bool prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      }
    },
    "42da5ba8-7ada-3561-9e93-ca5009860e07": {
      "content": "${1|this,vm|}.\\$parent$2",
      "doc": "Type: Vue instance. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$parent",
      "matches": {
        "vmParent": true
      }
    },
    "42f0bcff-81ff-3b1b-9a5a-fa97520ebcec": {
      "content": "print*,",
      "doc": "Quick Print",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "pr",
      "matches": {
        "pr": true
      }
    },
    "42f19a03-e5f1-3435-a060-7c9409d825bb": {
      "content": "while (${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      }
    },
    "42f6b821-6e34-31d4-9209-9b31b2b47463": {
      "content": "componentDidMount() {\n\t$0\n}",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      }
    },
    "42f7c329-0ac8-349a-a87c-4a670205e089": {
      "content": "def update(self, instance, validated_data):\n\treturn ${1:super().update(instance, validated_data)}",
      "doc": "Django-rest Serializers ``Update`` Method",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF Update (serializers-method)",
      "matches": {
        "supdate": true
      }
    },
    "42f865fe-75f0-347c-867b-7c54de395a38": {
      "content": "text-align=\"right\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignr": true
      }
    },
    "42fa2f6f-4e67-307b-b18d-52dc6d2d88e1": {
      "content": "box-sizing content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      }
    },
    "42ffbc2a-b4ef-3fef-a2f4-db692d38356e": {
      "content": "const ${1:value} = get(${2:store});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-store-get",
      "matches": {
        "svelte store-get-value": true,
        "svstoregm": true
      }
    },
    "4307ee15-1bdd-32c0-b6c1-ab47648ceda2": {
      "content": "bezierTangent(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierTangent": true
      }
    },
    "43120ec4-9ec1-3141-a459-c2c72adcfc2c": {
      "content": "integer, intent(in)  ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer intent(in)",
      "matches": {
        "ini": true
      }
    },
    "4313fc32-e3a7-3d1b-8630-a1febd9a6d6a": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% else %}\n\t$3\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "if": true
      }
    },
    "431f4b62-b319-3f4c-95af-fcc8f09f167b": {
      "content": "\"${1:key}\": {\n\t${VISUAL}$0\n},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Named object",
      "matches": {
        "no": true
      }
    },
    "4320d7b2-7a6e-36fa-92f5-f35fd87ad95a": {
      "content": "componentWillUnmount() {\n\t$0\n}",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      }
    },
    "4320fc68-d3f2-3327-ab69-35b2ce9866e2": {
      "content": "${1:static }function (${2:args}) use (${3:&$x, $y /*put vars in scope (closure) */}) {\n\t${0}\n};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      }
    },
    "43249b66-9e51-3c81-9167-bc1fa2e2cc35": {
      "content": "{% render '${1:snippet}' %}",
      "doc": "Theme tag: render",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag render",
      "matches": {
        "render": true
      }
    },
    "432dedfd-86cc-36b2-b34c-efe0a708cf96": {
      "content": "@component('$1')\n\t${2:${VISUAL}}\n@endcomponent",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@component directive",
      "matches": {
        "component": true
      }
    },
    "432f9d29-e4d7-3bca-8aff-b4b1cde56d1d": {
      "content": "componentWillUpdate (nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked immediately before rendering when new props or state are being received.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentWillUpdate",
      "matches": {
        "cwup": true
      }
    },
    "43376e44-89df-3887-81de-d5cf9d7999a6": {
      "content": "protected string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps|": true
      }
    },
    "43385ced-74c1-344f-8089-0de84b14b6ed": {
      "content": "select {\ncase ${1:condition}:\n\t$0\n}",
      "doc": "Snippet for select statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "select statement",
      "matches": {
        "sel": true
      }
    },
    "43404f67-f106-3c20-972e-ddc181a6ab11": {
      "content": "$('<${1}/>'${2:, {}})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "434aaaaa-c2e5-3e2b-8442-2246f92f1f39": {
      "content": "assert_response :${1:success}, @response.body$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Test Assert Response (are)",
      "matches": {
        "asre": true
      }
    },
    "434c3155-b7ab-321e-a516-d73bac02c37b": {
      "content": "display: ${1|none,block,inline,inline-block,flex,inline-flex,list-item,table,inline-table,table-caption,table-cell,table-row,table-row-group,table-column|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "display",
      "matches": {
        "dis": true
      }
    },
    "436c913f-de0f-35a6-9887-73bbb1c2840f": {
      "content": "background-size: cover",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      }
    },
    "43730c13-420f-3322-a2d3-279bbe70bed2": {
      "content": "text-justify: inter-word;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      }
    },
    "437761a0-cf6f-3c79-b69a-60659af9c9f4": {
      "content": "this.${1:service}.${2:function}\n\t.subscribe(${3:arg} => this.${4:property} = ${3:arg});\n$0",
      "doc": "Angular observable subscribe",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "subscribe",
      "matches": {
        "a-subscribe": true,
        "angular subscribe": true
      }
    },
    "43792a93-784e-39f2-8911-75d48f8507c5": {
      "content": "detach(${0:})",
      "doc": "Detach",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "det",
      "matches": {
        "detach": true
      }
    },
    "437dcaca-f0b2-3e81-baac-e9315b07c1bb": {
      "content": "${1|this,vm|}.\\$root$2",
      "doc": "Type: Vue instance. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$root",
      "matches": {
        "vmRoot": true
      }
    },
    "43996c90-d1bd-3845-bb67-abf8ddb17654": {
      "content": "let pos_save = getpos('.')\ntry\n  ${0}\nfinally\n  call setpos('.', pos_save)\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use pos save",
      "matches": {
        "save_pos": true
      }
    },
    "4399afc9-556e-35f8-af10-c16ac5f1241a": {
      "content": "{#await ${1:promise}}\n\t<!-- ${1:promise} is pending -->\n{:then ${value}}\n\t<!-- ${1:promise} was fulfilled -->\n{:catch error}\n\t<!-- ${1:promise} was rejected -->\n{/await}",
      "doc": "await catch block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-catch-block",
      "matches": {
        "s-await-catch-block": true
      }
    },
    "43adfbaf-64c1-3f08-a5a4-633d9937a192": {
      "content": "#define",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "43af392d-70c7-34b2-ab98-ea99ea6619ee": {
      "content": "character(len=$1${2:, kind=$3})${4:, ${5:attributes}} :: ${6:name}",
      "doc": "Character",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "char",
      "matches": {
        "char": true
      }
    },
    "43b55630-e443-3595-aed2-bf8b629640d5": {
      "content": "white-space-collapse: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      }
    },
    "43bad466-b97c-33d4-a83e-3b5a1f99a40d": {
      "content": "constructor(${1:arguments}) {\n\tsuper(${1:arguments});${0}\n}",
      "doc": "class constructor (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "class-constructor-es6-",
      "matches": {
        "base class constructor": true
      }
    },
    "43bc36c7-8ee9-3be2-9565-6db89184cfd4": {
      "content": "{@code ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{code": true
      }
    },
    "43c46352-e199-3cfa-8e36-b2d1a0d8eafd": {
      "content": "expect(${1:target}).not.toEqual(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to equal (js)",
      "matches": {
        "note": true
      }
    },
    "43c86650-991c-3272-88a2-e7343775eb8a": {
      "content": "<sup>${0}</sup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      }
    },
    "43c9b60f-25b8-36d1-ac3b-92e68d965ea2": {
      "content": "typeof ${1:first}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typeofSnippet",
      "matches": {
        "tpf": true
      }
    },
    "43cb0d32-9213-37d9-97ee-e618875d41d1": {
      "content": "final switch(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsw": true
      }
    },
    "43cb9547-094d-3ceb-86fe-b4eef45f6040": {
      "content": "${1} ? ${2} : ${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "43d64bec-2a68-3787-ab0b-65b77278c1b8": {
      "content": "${1:obj}.scrollTop(${2:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrollt": true
      }
    },
    "43d9a7a7-67f3-37cf-8945-6e72641802b5": {
      "content": "<input type=\"submit\" value=\"$2\" $3/>$7",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      }
    },
    "43e0f9cb-5daa-3b5b-9a6b-40071aca690d": {
      "content": "| strip }}",
      "doc": "String filter: strip",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter strip",
      "matches": {
        "strip": true
      }
    },
    "43eccab3-7b52-3aee-89f9-0c429ee67201": {
      "content": "text-decoration: underline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      }
    },
    "43faf32e-3757-3b1d-a34f-adbf8be7d1e9": {
      "content": "if([${1:[self delegate]} respondsToSelector:@selector(${2:selfDidSomething:})])\n\t[${1} ${3}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      }
    },
    "43fccc30-c976-3ade-9037-5d66652a6ee2": {
      "content": "${1:obj}.fadeOut('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeout": true
      }
    },
    "43ff88f7-1041-34b2-a635-d682b6608fd9": {
      "content": "const ${1:y} = useTransform(${2:x}, ${3:value => value * 2})",
      "doc": "useTransform()\nCreate a MotionValue that transforms the output of another MotionValue through a function.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-transform",
      "matches": {
        "framer-motion use-transform": true,
        "use-transform": true
      }
    },
    "440a9c40-fd70-3153-af5f-09132983d011": {
      "content": "PFont ${1:font};\n$1 = loadFont(\"${0:FFScala-32.vlw}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font": true
      }
    },
    "44123461-c9ec-39d4-afee-c383746e4a06": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${0:100} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      }
    },
    "441a67e5-b4f2-3c01-9d6f-bf034a4fbf09": {
      "content": "_.countBy(${collection}, ${iteratee})",
      "doc": "_.countBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': 1, '6': 2 }\n\n// The `_.property` iteratee shorthand.\n_.countBy(['one', 'two', 'three'], 'length');\n// => { '3': 2, '5': 1 }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the number of times the key was returned by `iteratee`. The\niteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-countby",
      "matches": {
        "lodash countby": true
      }
    },
    "441fde76-0fbe-3a23-8665-544206279dd0": {
      "content": "(${1}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=>": true
      }
    },
    "44274ad9-ed91-3f34-bb45-f3d27f158acb": {
      "content": "line(${1:x1}, ${2:y1}, ${3:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "line": true
      }
    },
    "4430f631-ee55-30f9-b631-72b9c73f1f99": {
      "content": "display: table-header-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      }
    },
    "4433b536-f32f-3666-a88b-ec787d617835": {
      "content": "Logger.error(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      }
    },
    "44377c9c-b3d9-35ec-b2da-f4524e55d757": {
      "content": "continue",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "continue",
      "matches": {
        "cn": true
      }
    },
    "443e1ffb-e8c4-31b7-8613-4d8cc88984f8": {
      "content": "when others => ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when others",
      "matches": {
        "when_others": true
      }
    },
    "4445b640-2248-3c15-b233-de0a71281c66": {
      "content": "local ${0}",
      "doc": "create a variable",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "local",
      "matches": {
        "l": true
      }
    },
    "444b3c16-49b7-35c3-b927-7c46995fcc37": {
      "content": "feat(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "feat conventional commit",
      "matches": {
        "feat": true
      }
    },
    "444e0175-590a-3eb4-867e-24eadea5a318": {
      "content": "FIND FIRST ${1:BufferName}\n${2:WHERE $1.${3}} ${0}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      }
    },
    "444eba34-7a8e-3a9b-af86-23c9c7b14171": {
      "content": "console.timeEnd(${1:object});",
      "doc": "Sets end point for execution time measurement",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTimeEnd",
      "matches": {
        "cte": true
      }
    },
    "444f3bcb-a58d-3953-8c99-a8667dace12f": {
      "content": "const ${1:functionname} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:functionname}",
      "doc": "Creates a React function component with custom name",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactFunctionComponentWithCustomName",
      "matches": {
        "rfcn": true
      }
    },
    "4453d3fb-44e0-36e6-b142-8e2dc49c5a62": {
      "content": "border-top-right-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      }
    },
    "445597bf-3cb4-3074-a4f2-65405c5fe933": {
      "content": "{% for ${1:item} in ${2:sequence} %}\n\t$3\n{% endfor %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "4459b146-7baa-3825-b02f-2ed56db49cae": {
      "content": "exit program returning ${1:item}",
      "doc": "EXIT PROGRAM",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "exit program",
      "matches": {
        "ep": true,
        "exit": true
      }
    },
    "445c3516-6332-3add-9b08-64bd8bd7271e": {
      "content": "_.unionBy(${arrays}, ${iteratee})",
      "doc": "_.unionBy([2.1], [1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]\n\nThis method is like `_.union` except that it accepts `iteratee` which is\ninvoked for each element of each `arrays` to generate the criterion by\nwhich uniqueness is computed. Result values are chosen from the first\narray in which the value occurs. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unionby",
      "matches": {
        "lodash unionby": true
      }
    },
    "445fe2d7-31cf-3832-9503-28fb83ee578f": {
      "content": "| pluralize: '${1:item}', '${2:items}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      }
    },
    "4464304f-8e89-3251-862c-967bf180a2e1": {
      "content": "time:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      }
    },
    "446bb372-809c-31f8-bacd-1f7ca772fee5": {
      "content": "post {\n\tcleanup {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      }
    },
    "446e1e79-0787-3477-8425-e93180ae16e0": {
      "content": "hset",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "HashSet",
      "matches": {
        "T": true
      }
    },
    "44735f59-b443-308e-adfe-bd0e5b5660b0": {
      "content": "{% ${1:tag_name} %}\n${0}\n{% end$1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      }
    },
    "4477556c-80ae-3651-a6af-aad94e79c2a1": {
      "content": "type ${1:x} = [ #${2:one} | #${3:two} ]",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "type polimorphic variant",
      "matches": {
        "tpv": true,
        "typepv": true
      }
    },
    "447856c6-160c-3b7a-a67b-a9c2370d9ac9": {
      "content": "validates :${1:attribute}, length: { in: ${2:3}..${0:20} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vl": true
      }
    },
    "447c1187-3faa-3ee4-ad45-25a31b984765": {
      "content": "{% include '${1:snippet}', ${2:variable}: ${3:value} %}",
      "doc": "Theme tag: include with parameters",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag include with parameters",
      "matches": {
        "includewith": true
      }
    },
    "4484dcc1-7ad3-3962-b1d1-06de83d03aa4": {
      "content": "-webkit-border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      }
    },
    "4497102d-5bd3-3fdf-babf-52a0a61e3cd1": {
      "content": "has_and_belongs_to_many",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_and_belongs_to_many",
      "matches": {
        "habtm": true
      }
    },
    "449a38ed-94b6-3d1a-92ac-7cacf66be7ec": {
      "content": "${1:X} <- ${2:List}${3:, gen}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Generator Expression",
      "matches": {
        "gen": true
      }
    },
    "44a3d4fb-9c94-38f1-b42a-2509863812ef": {
      "content": "justify-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      }
    },
    "44a662a4-e0b6-3645-a443-2cff5250124a": {
      "content": "\\\\index{${1:index}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\index",
      "matches": {
        "index": true
      }
    },
    "44ab16c2-c87c-3212-8cd7-a863bd18c3ce": {
      "content": "Yii::app()->cache->flush();",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycaf": true
      }
    },
    "44ac7a8f-21a5-3e63-8efa-0e668300f50a": {
      "content": "import 'react-native'\nimport React from 'react'\nimport renderer from 'react-test-renderer'\nimport { Provider } from 'react-redux'\n\nimport store from '~/store'\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n  const defaultProps = {}\n  const wrapper = renderer.create(\n    <Provider store={store}>\n      <${1:${TM_FILENAME_BASE}} {...defaultProps} />\n    </Provider>,\n  )\n\n  test('render', () => {\n    expect(wrapper).toMatchSnapshot()\n  })\n})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setupReactNativeTestWithRedux",
      "matches": {
        "snrtest": true
      }
    },
    "44ad3777-31eb-36e1-8923-33124025920f": {
      "content": "minloc(${1:source}${2:, mask=${3:$1>0}})",
      "doc": "Index of Minimum",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "minloc",
      "matches": {
        "minloc": true
      }
    },
    "44afc1e0-b6d3-371d-8179-3e1432e2ff19": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "44b00be5-3873-388b-9127-d37a3353b5a6": {
      "content": "width auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      }
    },
    "44b596f7-7ffd-37e3-a54c-fd0c3f02ab86": {
      "content": "{% now \"${1:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      }
    },
    "44b7c4f1-9ec2-3148-adbc-392400832b78": {
      "content": "pub fn new(${2}) -> ${1:Self} {\n\t$1 { ${3} }\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Constructor function",
      "matches": {
        "new": true
      }
    },
    "44c0540b-a5e7-3f8c-8f2b-b93b51bd91f1": {
      "content": "@catch (NSException * e) {\n\t${2:handler}\n}",
      "doc": "Create a catch block",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "catch",
      "matches": {
        "@catch": true
      }
    },
    "44c68bd4-9dde-3f7f-b44c-1cd7d150d060": {
      "content": "methods: {\n\t${1:name}() {\n\t\t${0}\n\t}\n},",
      "doc": "vue method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-methods",
      "matches": {
        "vmethod": true,
        "vue methods": true
      }
    },
    "44c6c1a6-e840-3f5c-9344-ed42eaeec262": {
      "content": "must_equal ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "me": true
      }
    },
    "44c8d4b2-a285-303e-bce0-c657c763c3f5": {
      "content": "border-bottom-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      }
    },
    "44cf2a18-9b77-3eb0-bbcb-25fb117e899f": {
      "content": "_.isMap(${value})",
      "doc": "_.isMap(new Map);\n// => true\n\n_.isMap(new WeakMap);\n// => false\n\nChecks if `value` is classified as a `Map` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismap",
      "matches": {
        "lodash ismap": true
      }
    },
    "44d200f4-50a8-37ef-8e96-0bdd9fa0ddc7": {
      "content": "it { should_not ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isn": true
      }
    },
    "44da3720-3cb7-3feb-b557-24a37f48b3a4": {
      "content": "${1:obj}.outerHeight()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerh": true
      }
    },
    "44de5476-8fca-38b1-bb5e-ca7267ccbe2e": {
      "content": "const ${1:ComponentName} = (${2:props}) => {\n\t${3:state}\n\n\treturn (\n\t\t<>\n\t\t\t${4}\n\t\t</>\n\t);\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "raf": true
      }
    },
    "44e023b3-9028-311b-add9-3616a96e5ef7": {
      "content": "#[ignore]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[ignore]",
      "matches": {
        "ig": true
      }
    },
    "44e30b95-022c-3186-8e0a-52de51c419d5": {
      "content": "assert_nothing_thrown { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnt": true
      }
    },
    "44e5ac70-fadb-3406-92ef-912bb1fd3573": {
      "content": "${1:mutationName}() {\n\tthis.\\$store.commit('${1:mutationName}', ${2:payload})\n}",
      "doc": "commit to vuex store in methods for mutation",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-commit-vuex-store-in-methods",
      "matches": {
        "vcommit": true,
        "vue commit vuex store in methods": true
      }
    },
    "44e5e3c0-5a29-3d9f-9d39-d8ce46932436": {
      "content": "$.trim(${1:str})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$trim": true
      }
    },
    "44f3c39a-fee3-3598-b291-c23a6d092b0a": {
      "content": "breakpoint()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      }
    },
    "44fce68f-e344-309e-8630-82eb07ecc698": {
      "content": "t.string :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create string column",
      "matches": {
        "tcs": true
      }
    },
    "44fdfd91-0a9b-3870-9c58-05e6575ff1f0": {
      "content": "__import__('ipdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ipdb": true
      }
    },
    "4508fa0d-53b3-3035-adc7-f75b67a7240d": {
      "content": "text-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      }
    },
    "450cdd39-9677-34b0-aff4-2adc8f88df7a": {
      "content": "place-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      }
    },
    "45106073-ee42-3d41-8df0-73a593aff25c": {
      "content": "${1:int}[${2:string}] ${3:dict} = ${0};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      }
    },
    "45131793-221c-3e4d-99e6-98d3d8aced39": {
      "content": "# Deploy resource\ndeploy ${1:\"/deploy/dir/\"} do # Path to deploy to\n\t${2:#}deploy_to ${3} # The \"meta root\" for your application.\n\t${4:#}repository ${5} # URI of the repository\n\t${6:#}repo ${7} # alias for repository\n\t${8:#}revision ${9:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${10:#}branch ${11} # alias for revision\n\t${12:#}user ${13:nil} # System user to run the deploy as\n\t${14:#}group ${15:nil} # System group to run the deploy as\n\t${16:#}svn_username ${17} # (Subversion only) Username for Subversion operations}\n\t${18:#}svn_password ${19} # (Subversion only) Password for Subversion operations}\n\t${20:#}svn_arguments ${21} # (Subversion only) Extra arguments passed to the subversion command}\n\t${22:#}shallow_clone ${23:nil} # (Git only) boolean, true sets clone depth to 5\n\t${24:#}enable_submodules ${25:false} # (Git only) performs a submodule init and submodule update\n\t${26:#}remote ${27:\"origin\"} # (Git only) remote repository to use for syncing an existing clone\n\t${28:#}ssh_wrapper ${29} # (Git only) path to a wrapper script for running SSH with git. GIT_SSH environment variable is set to this.\n\t${30:#}git_ssh_wrapper ${31} # alias for ssh_wrapper\n\t${32:#}scm_provider ${33:Chef::Provider::Git} # SCM Provider to use.\n\t${34:#}repository_cache ${35: \"cached-copy\"} # Name of the subdirectory where the pristine copy of your app's source is kept\n\t${36:#}environment ${37} # A hash of the form {\"ENV_VARIABLE\"=>\"VALUE\"}}\n\t${38:#}purge_before_symlink ${39:%w(log tmp/pids public/system)} # An array of paths, relative to app root, to be removed from a checkout before symlinking\n\t${40:#}create_dirs_before_symlink ${41:%w(tmp public config)} # Directories to create before symlinking. Runs after purge_before_symlink\n\t${42:#}symlinks ${43:\"system\" => \"public/system\", \"pids\" => \"tmp/pids\", \"log\" => \"log\"} # A hash that maps files in the shared directory to their paths in the current release\n\t${44:#}symlink_before_migrate ${45:\"config/database.yml\" => \"config/database.yml\"} # A hash that maps files in the shared directory into the current release. Runs before migration\n\t${46:#}migrate ${47:false} # Should the migration command be executed? (true or false)\n\t${48:#}migration_command ${49} # A string containing a shell command to execute to run the migration\n\t${50:#}restart_command ${51:nil} # A code block to evaluate or a string containing a shell command\n\t${52:#}before_migrate ${53:\"deploy/before_migrate.rb\"} # A block or path to a file containing chef code to run before migrating\n\t${54:#}before_symlink ${55:\"deploy/before_symlink.rb\"} # A block or path to a file containing chef code to run before symlinking\n\t${56:#}before_restart ${57:\"deploy/before_restart.rb\"} # A block or path to a file containing chef code to run before restarting\n\t${58:#}after_restart ${59:\"deploy/after_restart.rb\"} # A block or path to a file containing chef code to run after restarting\n\n\t${60:#}${61::deploy} # Deploy the application (Default)\n\t${62:#}${63::force_deploy} # For the revision deploy strategy, this removes any existing release of the same code version and re-deploys in its place\n\t${64:#}${0::rollback} # Rollback the application to the previous release\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy": true
      }
    },
    "4515b909-a020-3c40-93ea-e211c89cdcda": {
      "content": "private def ${1:method_name}${2:(${3:*args})}\n\t$0\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "private def <name>...",
      "matches": {
        "\"\\b(pde)?f\"": true
      }
    },
    "45208ba2-2bd5-3d46-86a3-7952a922eac9": {
      "content": "margin: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "4525811d-a689-3e74-b945-a9996eab0909": {
      "content": "struct ${1:#:Name} ${2::} ${3:Interface} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      }
    },
    "4534aa06-291f-309c-9c6a-de71f723a2e1": {
      "content": "v-bind$1=\"${2}\"",
      "doc": "Expects: any (with argument) | Object (without argument)",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-bind",
      "matches": {
        "vbind": true,
        "vue v-bind": true
      }
    },
    "45352a35-1f37-34b2-837f-32e98af5da44": {
      "content": "padding-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      }
    },
    "4538b6d9-3214-3526-a1e6-6d261f9087dd": {
      "content": "<<${1:id}>>${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "reference to anchor",
      "matches": {
        "ref": true
      }
    },
    "45448134-f9f4-35e3-ae9f-2c0bf165b35d": {
      "content": "import React from 'react'\n\nexport const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-component",
      "matches": {
        "rafc": true,
        "react component arrow function": true
      }
    },
    "4545a887-94de-3e49-8357-57e87a37e551": {
      "content": "border-right: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      }
    },
    "454bb342-56e2-3ec8-88f1-22aea162cca4": {
      "content": "\\${${0:interpolation${VISUAL}}\\}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "${interpolation}",
      "matches": {
        "int": true
      }
    },
    "454c3771-85d4-3b2b-b2ab-45cd6cf03b0e": {
      "content": "frame $1",
      "doc": "A frame of the components",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Frame",
      "matches": {
        "frame": true
      }
    },
    "4558b580-68c4-3a9d-bdd8-03ed80653385": {
      "content": "border-style dashed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      }
    },
    "45687823-f92c-3378-a8df-039e7c8b4372": {
      "content": "{\n\t\"type\": \"paragraph\",\n\t\"content\": \"$1\"\n},$2",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema paragraph",
      "matches": {
        "_paragraph": true
      }
    },
    "45707bf3-42ef-3693-975b-de10738b29f9": {
      "content": "${1:app}.get('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eget": true
      }
    },
    "4572534f-514f-3763-99bc-278477ff9a48": {
      "content": "MsgBox(${0:MsgType}, ${1:\"Title\"}, ${2:\"Message Text\"})",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msg": true
      }
    },
    "4578c3fa-471d-3cac-9336-cc28f6fd2e2b": {
      "content": "- (${1:id})${2:method}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "457e47db-2cb6-30c4-9a3c-e90fe768d800": {
      "content": "${1:FIELDNAME} = models.IntegerField($2)",
      "doc": "IntegerField (mint).\n\nAn integer. Values from -2147483648 to 2147483647 are safe in all databases supported by Django.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mint",
      "matches": {
        "mint": true
      }
    },
    "457f1e9f-9b6f-390c-bdc3-10f337449562": {
      "content": "SELECT DISTINCT ${1:attribute(s)}\n\tFROM ${2:tableName};",
      "doc": "Select Distinct",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "selectd",
      "matches": {
        "selectd": true
      }
    },
    "45848aa5-7d50-3210-839a-6f2e7632a48e": {
      "content": "{@inheritDoc",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{inheritDoc": true
      }
    },
    "4584bc54-c456-34e3-a188-ecaef412a58f": {
      "content": "for ${1:name} in [${2:start}..${3:finish}]\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "458b4c3e-ac6d-3e0b-9eaf-f2d82e6112c1": {
      "content": "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})",
      "doc": "Creates a React component class with connected redux and ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassComponentRedux",
      "matches": {
        "rcredux": true
      }
    },
    "458cca0e-05b6-30b7-ae00-7947c3b443c2": {
      "content": "#!/usr/bin/env python3\n$0",
      "doc": "Adds shebang line for default python 3 interpreter.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "#!/usr/bin/env python3",
      "matches": {
        "env3": true
      }
    },
    "4590da38-99f7-3abc-be90-84df28d0fb41": {
      "content": "{{ $1 }}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "variable",
      "matches": {
        "{{": true
      }
    },
    "459ae4e6-c2af-397a-88a9-858443512973": {
      "content": "justify-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content: space-between",
      "matches": {
        "jcsb": true
      }
    },
    "459d8819-0d4c-3d53-a021-1496a9a037d0": {
      "content": "${1:map}.resource :${0:resource}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapr": true
      }
    },
    "45a0f8b8-7378-3f56-b47d-252a0aa8a630": {
      "content": "${1:model/screen}${2:X}(${3:x}, ${4:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coord": true
      }
    },
    "45a36554-2a72-3252-81be-d9c994e92856": {
      "content": "${1:obj}.keydown(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kdown": true
      }
    },
    "45a473ca-14ef-37a4-9954-026dcf0acf11": {
      "content": "type(${1:type name})${2:, ${3:attributes}} :: ${4:name}",
      "doc": "Custom Type",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "typ",
      "matches": {
        "typ": true
      }
    },
    "45ac62ff-a383-3496-b929-83aabf6b8332": {
      "content": "{% when ${1:#:TARGET} %}\n  ${0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "45ad2cfd-09d6-3415-a638-caebc5214898": {
      "content": "_.has(${object}, ${path})",
      "doc": "var object = { 'a': { 'b': 2 } };\nvar other = _.create({ 'a': _.create({ 'b': 2 }) });\n\n_.has(object, 'a');\n// => true\n\n_.has(object, 'a.b');\n// => true\n\n_.has(object, ['a', 'b']);\n// => true\n\n_.has(other, 'a');\n// => false\n\nChecks if `path` is a direct property of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-has",
      "matches": {
        "lodash has": true
      }
    },
    "45b9a21a-238b-3c1c-b048-74f31c1858c8": {
      "content": "test('${1:should }', async () => {\n\t$0\n});",
      "doc": "creates an test block with async callback function",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-async",
      "matches": {
        "jest test async": true,
        "testa": true
      }
    },
    "45bce895-7086-3e78-862f-3d99564afa82": {
      "content": "function ${1} return ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function declaration",
      "matches": {
        "fund": true
      }
    },
    "45c7c211-2f93-3b69-9889-eea123571d4a": {
      "content": "grid-auto-columns: min-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      }
    },
    "45cba795-fc2a-3a9a-a854-4a4cadd9f9c3": {
      "content": "extern crate ${1:sync};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate",
      "matches": {
        "ec": true
      }
    },
    "45cfa4eb-22c6-3129-8c07-33c2ab6620e5": {
      "content": "logical :: ${1:fileExsit}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "logical",
      "matches": {
        "lo": true
      }
    },
    "45d095c4-c914-3fbc-8bdc-71be8fc983db": {
      "content": "concat_idents!(${1})",
      "doc": "concat_idents!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "concat_idents",
      "matches": {
        "concat_idents": true
      }
    },
    "45d4c06e-190e-30ee-837f-0d3ff55e20ac": {
      "content": "this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctor": true
      }
    },
    "45dd01ec-ba4e-3bfa-ab71-d8a9b07762a0": {
      "content": "arrayCopy(${1:src}, ${2:dest}, ${3:, }${0:length});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arrayCopy": true
      }
    },
    "45e26e58-14e7-3321-bbce-95b9f12b9dda": {
      "content": "font-stretch: ultra-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      }
    },
    "45e5ea1f-f61a-3212-b750-720ac25c5186": {
      "content": "// https://uniswap.org/docs/v2/smart-contracts/pair-erc-20/\r\n// https://github.com/Uniswap/uniswap-v2-core/blob/master/contracts/UniswapV2Pair.sol implementation\r\n// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.5.0;\r\n\r\ninterface IUniswapV2ERC20 {\r\n  event Approval(address indexed owner, address indexed spender, uint value);\r\n  event Transfer(address indexed from, address indexed to, uint value);\r\n\r\n  function name() external pure returns (string memory);\r\n  function symbol() external pure returns (string memory);\r\n  function decimals() external pure returns (uint8);\r\n  function totalSupply() external view returns (uint);\r\n  function balanceOf(address owner) external view returns (uint);\r\n  function allowance(address owner, address spender) external view returns (uint);\r\n\r\n  function approve(address spender, uint value) external returns (bool);\r\n  function transfer(address to, uint value) external returns (bool);\r\n  function transferFrom(address from, address to, uint value) external returns (bool);\r\n\r\n  function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n  function PERMIT_TYPEHASH() external pure returns (bytes32);\r\n  function nonces(address owner) external view returns (uint);\r\n\r\n  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\r\n}",
      "doc": "Uniswap Pair ERC20 Interface",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "uniV2PairERC20",
      "matches": {
        "uniV2PairERC20": true
      }
    },
    "45eac590-db5e-301e-936c-e16c5db45900": {
      "content": "class ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "45ef5871-e201-3389-8c17-4d531ef37413": {
      "content": "while (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "45f8e390-85b3-3e59-82c8-11881389acc3": {
      "content": "if (${1:condition}) {\n\t${2:# code...}\n} else {\n\t${3:# code...}\n}\n$0",
      "doc": "If Else block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "if … else …",
      "matches": {
        "ifelse": true
      }
    },
    "45ffaf13-1271-3be7-b972-1028a9e70741": {
      "content": "border-bottom-left-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      }
    },
    "46013d4d-8d73-3c0a-ad1c-4ea2df847be6": {
      "content": "System.Linq",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.l": true
      }
    },
    "460c0dca-f70c-31d5-8ffc-3c4a4a78a342": {
      "content": "padding ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      }
    },
    "460eb0fe-8164-319b-abef-6a099fb55a2c": {
      "content": "if (${1:condition}) {\n\t${2:println(\"Hello, world!\")}\n} else {\n\t${2:println(\"Hello, world!\")}\n}",
      "doc": "Branch based on conditions using if/else",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "ifelse",
      "matches": {
        "ifelse": true
      }
    },
    "46117623-a9cb-3ed2-ad8c-2ec5fd4d97c2": {
      "content": "for ${1:i}=${2:1},${3:10} do\n\t$0\nend",
      "doc": "for loop range",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "46181002-05df-30cc-b54b-7fb1a0a73043": {
      "content": "to=\"$1\"$0",
      "doc": "to=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "to",
      "matches": {
        "to": true
      }
    },
    "461acfdb-9252-3ad9-bf57-86d073c4766a": {
      "content": "text-justify: inter-cluster;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      }
    },
    "461c4766-e8e1-37dd-9aa8-cd7518cb2f8e": {
      "content": "const {${1:site}} = useStaticQuery(\n  graphql`${2:query}`\n);",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-usestatic-query",
      "matches": {
        "gatsby usestaticquery": true
      }
    },
    "462033c7-be0e-3751-883d-171a71f1f3ca": {
      "content": "${1:FIELDNAME} = forms.EmailField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "EmailField",
      "matches": {
        "fmail": true
      }
    },
    "46239d5d-249d-3276-be5b-999483b8e512": {
      "content": "#line ${0:#:number}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "line": true
      }
    },
    "46297b15-ae78-3173-8d78-1adacf17cf28": {
      "content": "align-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      }
    },
    "462ffbcd-69c1-3c61-af82-257a342a6d9f": {
      "content": "background-repeat repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      }
    },
    "4630cea5-5fcf-3dff-8419-7b4005ecb799": {
      "content": "${1:propName}: {\n  type: ${2:Number},\n  default: ${0}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vprops:d": true
      }
    },
    "46336212-e842-3db5-b85f-8cf736b18bce": {
      "content": "#!/usr/bin/env perl -w\n\nuse strict;\nuse Test::More tests => ${1:1};\nuse ${2:ModuleName};\n\nok(${3:assertion});",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Test",
      "matches": {
        "test": true
      }
    },
    "4640f365-e1ff-327c-8a61-9e7ddd2301c7": {
      "content": "text(${1:data}, ${2:x}, ${3:y}${4:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "data",
      "matches": {
        "text": true
      }
    },
    "4654642a-46b4-370e-b23e-c3c39ed423dd": {
      "content": "perform ${1:paragraph-name} ${2:value-1} times",
      "doc": "perform paragraph x times",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "perform",
      "matches": {
        "perform": true,
        "pt": true
      }
    },
    "46586927-d71e-3928-a40c-99a6cbb78ce8": {
      "content": "mixed.typeError()",
      "doc": "mixed.typeError(message: string): Schema\n\nDefine an error message for failed type checks. The ${value} and ${type} interpolation can\nbe used in the message argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-type-error",
      "matches": {
        "yup mixed typeerror": true
      }
    },
    "465b8c30-1d8c-3998-a1fc-5f1f98f1c228": {
      "content": "_.isMatchWith(${object}, ${source}, ${customizer})",
      "doc": "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, srcValue) {\n  if (isGreeting(objValue) && isGreeting(srcValue)) {\n    return true;\n  }\n}\n\nvar object = { 'greeting': 'hello' };\nvar source = { 'greeting': 'hi' };\n\n_.isMatchWith(object, source, customizer);\n// => true\n\nThis method is like `_.isMatch` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with five\narguments: (objValue, srcValue, index|key, object, source).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismatchwith",
      "matches": {
        "lodash ismatchwith": true
      }
    },
    "465d75d4-d8f0-3618-9c22-011aec7ac059": {
      "content": "\\cite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\cite": true,
        "cite": true
      }
    },
    "4660acd3-3a3d-3115-8229-df64b55c6620": {
      "content": "resize: horizontal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      }
    },
    "4662e50f-af76-3afa-9931-112aab606cc0": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tLEFT JOIN ${3:tableName2}\n\tON ${4:match};",
      "doc": "Left Join",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "ljoin",
      "matches": {
        "ljoin": true
      }
    },
    "4669219f-1b49-36a0-9fcb-5131ec65d694": {
      "content": "describe.skip('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-skip",
      "matches": {
        "descs": true,
        "jest describe skip": true
      }
    },
    "466a462e-b4fc-3081-8709-9ba4fd36cacd": {
      "content": "animation-fill-mode: ${1|forwards,backwards,both,none|};",
      "doc": "initial value: none",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-fill-mode",
      "matches": {
        "anifm": true
      }
    },
    "467e6b90-756b-3486-b85e-8aaf4dc085be": {
      "content": "eprint = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eprint": true
      }
    },
    "4681320e-83e1-33c8-897f-2c2a58bd8450": {
      "content": "<img id=\"${1}\" src=\"${2}\" alt=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img#": true
      }
    },
    "468816c4-23f2-37db-8452-df36a203995e": {
      "content": "${1:obj}.queue(${2:name}${3:, newQueue})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queue": true
      }
    },
    "468c5901-5af2-389a-9cd4-12e2d40aadc2": {
      "content": "if ${1:condition}, do: $2, else: $0",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "if .. do: .. else:",
      "matches": {
        "ife:": true
      }
    },
    "468fff68-7508-3b26-b092-1db898782092": {
      "content": "FUNCTION INTEGER-OF-DAY(${1:yyyymmdd})$0",
      "doc": "converts yyyymmdd to an internal integer-day",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER-OF-DAY",
      "matches": {
        "FUNCTION INTEGER-OF-DAY": true
      }
    },
    "46962fd2-7914-3b31-b0d4-dddcbf8f4b49": {
      "content": "#import \"${1}}\"",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Imp": true
      }
    },
    "46a054b6-54d7-3dc0-b4bc-73ac60c8a734": {
      "content": "-> { ${0} }.must_be_silent",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbsi": true
      }
    },
    "46a065fa-88de-3c81-944e-509bb2239d2b": {
      "content": "integer, dimension(${1::})${2:#:, allocatable} :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension",
      "matches": {
        "ind": true
      }
    },
    "46a8ef0c-4b82-34c1-9cf7-04777fdb5a0d": {
      "content": "<button id=\"${1}\" type=\"${2:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button#": true
      }
    },
    "46a95d18-7b02-394e-82cb-2169b14e1419": {
      "content": "${1|this,vm|}.\\$props$2",
      "doc": "Type: Object. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$props",
      "matches": {
        "vmProps": true
      }
    },
    "46acf793-671e-3e6c-b38d-6128ee990a80": {
      "content": "#+BEGIN_SRC dot :file ${1:file} :cmdline -T${2:pdf} :exports none :results silent\n$0\n#+END_SRC\n\n[[file:$1]]",
      "doc": "dot",
      "filetype": "org",
      "grammar": "lsp",
      "label": "dot",
      "matches": {
        "dot": true
      }
    },
    "46aebcdb-0d43-3c3c-9713-9a3c5df6e78e": {
      "content": "min-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      }
    },
    "46af83a3-3895-34e5-a0d4-b842a9d613b0": {
      "content": "overflow-x: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      }
    },
    "46bc06b5-a850-3bd5-9242-cd3eb8af47b5": {
      "content": "spyOn(${1:object}, '${2:method}').and.throwError(${3:exception});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and throw (js)",
      "matches": {
        "st": true
      }
    },
    "46bc8415-8df2-33fe-8bfa-b7dae5fac6d0": {
      "content": "program ${1:program_name} ();\n\t${0}\nendprogram : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prog": true
      }
    },
    "46bcce44-06d0-3fed-86b6-827bbed3efbf": {
      "content": "*ngIf=\"${1:expression};else ${2:templateName}\"",
      "doc": "Angular *ngIfElse",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngifelse",
      "matches": {
        "a-ngifelse": true,
        "angular ng if else": true
      }
    },
    "46bd902a-72dd-367a-9818-425e8c8125bd": {
      "content": "internal bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&": true
      }
    },
    "46c1f048-6a3d-3cbf-a8ab-0cf8e1787607": {
      "content": "componentWillUnmount () {\n\t$0\n}",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      }
    },
    "46c1fc17-0bfd-3922-91f3-81f5f066e436": {
      "content": "${1} : out std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "osv": true
      }
    },
    "46c32358-5fd8-36a2-a95d-700b02663f02": {
      "content": "private ${1:int} ${2:_myProperty};\n\npublic $1 ${3:MyProperty}\n{\n\tget { return $2; }\n\tset { $2 = value; }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Full property declaration",
      "matches": {
        "propfull": true
      }
    },
    "46c41134-875f-3d8f-9fe4-05de7e99abf1": {
      "content": "version(${1:Posix}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ver": true
      }
    },
    "46c608d9-3e93-3413-b604-47c232e15776": {
      "content": "(let ([${1}]) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "46c7ffe1-ce92-3b8c-a1f5-724d938c892d": {
      "content": "v-on:${1:event}=\"${2:handle}\"",
      "doc": "Expects: Function | Inline Statement",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-on",
      "matches": {
        "vOn": true
      }
    },
    "46ca4b07-0117-3aa5-bd3a-0d561b8340c8": {
      "content": "onDestroy(() => {\n\t${1:// content here}\n});",
      "doc": "onDestroy lifecycle function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-destroy",
      "matches": {
        "s-lifecycle-destroy": true
      }
    },
    "46cc8fd6-45ba-3cb1-98cd-8f5d68579c44": {
      "content": "${1:FIELDNAME} = forms.NullBooleanField($2, required=${3:False})",
      "doc": "NullBooleanField (fnullbool)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fnullbool",
      "matches": {
        "fnullbool": true
      }
    },
    "46cf36a4-b1aa-35a5-8366-65a95ba8d695": {
      "content": "onready var ${1:name} = get_node($2)",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "define onready variables",
      "matches": {
        "onready": true
      }
    },
    "46d640d9-992c-3072-87ce-62d9ff08dfca": {
      "content": "it { should respond_to :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isres": true
      }
    },
    "46da69bd-1230-39d5-a23f-19d265d5adfd": {
      "content": "content counter(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      }
    },
    "46dcfafb-c870-334c-9287-911204308e2a": {
      "content": "border: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border",
      "matches": {
        "bor": true
      }
    },
    "46e41093-870f-39d0-b24d-3dfb8eb98a65": {
      "content": "empty-cells ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "46ef8bdd-748e-34c5-a06d-39acd0056402": {
      "content": "v-text=\"${1:msg}\"",
      "doc": "Expects: string. Updates the element’s textContent.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-text",
      "matches": {
        "vText": true
      }
    },
    "46f4eb94-04f7-3979-a174-f65931a01007": {
      "content": "(letfn [(${1:name}) [${2:args}]\n\t${0:code})])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letfn": true
      }
    },
    "46f5da3c-c246-3625-8126-b9a9d03d3d8e": {
      "content": "text-decoration: ${1:none/underline/overline/line-through/blink};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "text-decoration: none:underline:overline:line-through:blink (text)",
      "matches": {
        "text": true
      }
    },
    "46fb57c9-803b-3f81-b3cd-8d1d1c799278": {
      "content": "if(${1:/*condition*/})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "if .. (if)",
      "matches": {
        "if": true
      }
    },
    "470b4e93-c389-3d26-8182-97db3daf93af": {
      "content": "paddingVertical: ${1},",
      "doc": "paddingVertical",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingVertical",
      "matches": {
        "padding": true
      }
    },
    "470bb459-992b-37a6-8a17-cdeaf201acac": {
      "content": "max-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      }
    },
    "470d5458-b600-386e-b613-fdf9ccdcfbb7": {
      "content": "real${1:(${2:kind})}${3:, ${4:attributes}} :: ${5:name}",
      "doc": "Real",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "rea",
      "matches": {
        "rea": true
      }
    },
    "470e8279-66f0-3bf9-bb05-42bfbe07aac1": {
      "content": "describe('${1:}', function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "describe('thing', function() { ... })",
      "matches": {
        "des": true
      }
    },
    "47131874-d276-3b39-af2b-138084c482fd": {
      "content": "font-stretch: ultra-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      }
    },
    "4713c377-b32e-39cc-a664-45b6f73ca690": {
      "content": "useEffect(() => {\n$0\n},[])",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffectDidMount",
      "matches": {
        "usfd": true
      }
    },
    "47146287-45ca-32c4-88ea-dc97797ffc23": {
      "content": "${1:emitter}.on('${2:event}', (${3:arguments}) => {\n\t${0}\n});",
      "doc": "event handler",
      "filetype": "base",
      "grammar": "lsp",
      "label": "event-handler",
      "matches": {
        "base event handler": true
      }
    },
    "47151240-2d2f-321f-81dc-ec5ec45e1c9f": {
      "content": "validates_acceptance_of :${1:terms}${2:${3:, accept: \"${4:1}\"}${5:, message: \"${6:You must accept the terms of service}\"}}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_acceptance_of if",
      "matches": {
        "vaoif": true
      }
    },
    "4715aa75-c535-35f5-b0f7-b41f26b0d7c5": {
      "content": "($0)",
      "doc": "Use case bubble",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Use case",
      "matches": {
        "(": true
      }
    },
    "471699a8-a592-3dfc-bc1a-f4ae3aabc0c7": {
      "content": "margin-top: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      }
    },
    "47193464-8f28-3aee-80bb-aeb0493e21e1": {
      "content": "background-color: #${1:fff};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      }
    },
    "471c5172-60e0-3548-b912-33407cd73b62": {
      "content": "this.${1:service}.${2:function}\n\t.subscribe(${3:arg} => this.${4:property} = ${3:arg});\n$0",
      "doc": "Angular observable subscribe",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Subscribe",
      "matches": {
        "a-subscribe": true
      }
    },
    "471d86e7-4d76-3a1b-b98d-49d0cff6e5c0": {
      "content": "switch (${1:switch_on})\n{\n    $0\n    default:\n}",
      "doc": "Switch statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Switch statement",
      "matches": {
        "switch": true
      }
    },
    "471ebdbf-25d8-3146-8799-f309dca24b53": {
      "content": "alt=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alt": true
      }
    },
    "47248368-c858-3208-ba0b-f8f3d28797b3": {
      "content": "Char",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chr": true
      }
    },
    "4731cd46-5f2a-327d-a262-cd5e74b8203e": {
      "content": "@#'",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "private": true
      }
    },
    "4743e321-fbbb-3fd9-aa97-240547666515": {
      "content": ":before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      }
    },
    "4745dae3-16c5-3e88-b306-ffcfb33bc8f8": {
      "content": "place-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      }
    },
    "474bb1d6-af64-3936-aa5e-79056f7d9357": {
      "content": "${1:expression} unless ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xunless": true
      }
    },
    "474fc09f-6599-3cc8-a7d5-1158b794fcfd": {
      "content": "<#function ${1:function_name} ${2:param1}>\n\t${0:${VISUAL}}\n</#function>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#function function_name param1>...</#function>",
      "matches": {
        "fun": true
      }
    },
    "475a72d4-dba9-3d80-a7b5-826d66961931": {
      "content": "import React, { PureComponent } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:$TM_FILENAME_BASE}",
      "doc": "Creates a React pure component class with ES7 module system export",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-pure-component",
      "matches": {
        "react component class export pure": true,
        "rpce": true
      }
    },
    "475bb450-af3a-3bc1-955e-797311f3aa6d": {
      "content": "if (${1}) {\n\t${2}\n}\nelse {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "475c41ca-bbe3-3de3-a9e0-d495365b5b05": {
      "content": "import Route from '@ember/routing/route';\n\nexport default Route.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Route from '@ember/routing/route';",
      "matches": {
        "eroute": true
      }
    },
    "4766a7c7-b145-3795-be6e-f065110ce0bf": {
      "content": "${1:private/public }${2:Object} ${3:o}${4: = new }$2(${0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      }
    },
    "47689b53-651a-35e3-96db-20cdaa951666": {
      "content": "justify-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      }
    },
    "476e96a5-9362-39bf-9876-9bea3a43779d": {
      "content": "print_r(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "4772c59a-314f-3d4a-9184-466eb73aa850": {
      "content": "grid-template-areas ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      }
    },
    "47734c29-01e0-31db-a747-4d874b2fa277": {
      "content": "\\begin{tabular}{${1}}\n\t${2:TARGET}\n\\end{tabular}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tabular} \\tabular": true,
        "tabular": true
      }
    },
    "477be8e3-9e7c-32de-9140-65893aec5ce0": {
      "content": "it.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\t${0:expect(double(input)).toBe(expected);}\n\t}\n);",
      "doc": "creates an it block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-each",
      "matches": {
        "ite": true,
        "jest it each": true
      }
    },
    "47846233-6efd-3c66-a100-6b619ce3f779": {
      "content": "&#x2303;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctrl": true
      }
    },
    "47885492-faa2-3b06-b24d-4a1aace7e734": {
      "content": "$display(\"${1}\", ${2});",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "$display(\"...\", ...);",
      "matches": {
        "display": true
      }
    },
    "478b8a25-bd9b-3860-a303-980353f3a529": {
      "content": "debug {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      }
    },
    "478c3de6-d725-382c-a327-2eda3fe370d3": {
      "content": "appear-active-class=\"$1\"$0",
      "doc": "appear-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-active-class",
      "matches": {
        "appearactiveclass": true,
        "vue appear-active-class": true
      }
    },
    "47966128-530d-396f-a953-93ffc5552196": {
      "content": "each_line { |${1:line}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eal": true
      }
    },
    "4796f3c4-28d1-39f6-b01b-30ef605a3a7b": {
      "content": "Wait Until Element Does Not Contain    ${1:${locator}}    ${2:${text}}    ${3:${timeout=None}}    ${4:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Does Not Contain",
      "matches": {
        "wuednc": true
      }
    },
    "47974339-7576-3653-b022-1fbe297fb9b0": {
      "content": "if ${1} then ${2} else ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if expression",
      "matches": {
        "ife": true
      }
    },
    "47991cee-5acc-33c7-9fe7-5ff69ef2f27b": {
      "content": "-export([${1:function}/${0:arity}]).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "479c7b08-b6d9-3f97-be05-52a58cdba4d6": {
      "content": "useEffect(() => {\n\t$1\n\n\treturn () => {\n\t\t$2\n\t}\n}, [${3:dependencies}])$0",
      "doc": "React useEffect() hook with a cleanup function",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useEffect with cleanup",
      "matches": {
        "uec": true
      }
    },
    "47a418a1-752b-3656-8597-c2d230f634c4": {
      "content": "class ${1:name} = object\n\t${2:methods}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "47a7c8b6-64d3-3cfa-a153-9b415bb6d2dd": {
      "content": "#!/bin/zsh",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "47ba4a69-ca5c-3880-b643-6feb9c417c67": {
      "content": "~w(${0})a",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "atom list",
      "matches": {
        "al": true
      }
    },
    "47bbb0b6-f16c-3a00-9026-fe413a0528f0": {
      "content": "if (${1:true})\n{\n    $0\n}",
      "doc": "if statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "47c48d16-1635-34df-b3f4-6380fa764172": {
      "content": "\\\\begin{block}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{block}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "block environment",
      "matches": {
        "block": true
      }
    },
    "47cbaa58-a82b-3faf-8201-477cead47b33": {
      "content": "if !ok {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if !ok { ... }",
      "matches": {
        "ok": true
      }
    },
    "47cc6570-1799-34ca-8914-a9232ecd61d3": {
      "content": "PropTypes.shape({\n  $0\n})",
      "doc": "An object taking on a particular shape",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      }
    },
    "47cda429-b89b-3836-a228-c4d85d35c766": {
      "content": "[${1:#:id}]: https://${2:#:url} \"${3:#:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[id]: url \"title\"",
      "matches": {
        "idurl": true
      }
    },
    "47d81713-766b-3e70-8d29-3b78e471b0f4": {
      "content": "| slice: ${at} }}",
      "doc": "String filter: slice with single parameter",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter slice single character",
      "matches": {
        "slice_single": true
      }
    },
    "47dd1fbd-022d-34ef-8d3c-0d412bfc8134": {
      "content": "class ${1:name} extends StatelessWidget {\n  const ${1:name}({Key? key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      child: ${2:null},\n    );\n  }\n}",
      "doc": "Create a Stateless widget",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Stateless Widget",
      "matches": {
        "statelessW": true
      }
    },
    "47e3a39d-ab87-380a-a8f8-b14c8f830ea8": {
      "content": "return null",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return null",
      "matches": {
        "rn": true
      }
    },
    "47e52d06-fc64-3632-881c-16cbd5ef4c30": {
      "content": "if ${1:condition}, do: $0",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "if .. do:",
      "matches": {
        "if:": true
      }
    },
    "47e79cd3-c594-3a5d-a4d8-7b8afc06676a": {
      "content": "max(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "array",
      "matches": {
        "max": true
      }
    },
    "47e96093-1168-3471-a665-d106e5976ee5": {
      "content": "assert_nothing_raised(${1:StandardError}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnr": true
      }
    },
    "47ecb419-bb9e-3db4-8d4a-7cc8cca9e452": {
      "content": "begin\n\t${1:block}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "beg",
      "matches": {
        "beg": true
      }
    },
    "47ee3d1c-495a-39b3-a81d-3f7dc23febc0": {
      "content": "grid-column: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      }
    },
    "47f2d252-20d8-3b95-9c1b-a735df7d2183": {
      "content": "@show",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@show directive",
      "matches": {
        "show": true
      }
    },
    "4802cc05-6c95-3545-9157-62e64a098508": {
      "content": "-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      }
    },
    "48074923-a070-32d5-b508-2de3ada503f7": {
      "content": "from django.conf.urls import ${1|static,url,handler400,handler403,handler404,handler500|}",
      "doc": "Utilityfunctions for use in URLconfs.",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "conf.urls (≥2.0)",
      "matches": {
        "iconf_urls": true
      }
    },
    "48082542-f6cb-316e-ba79-bc07caf64ab9": {
      "content": "<a href=\"http://${1:example.com}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a:ext": true
      }
    },
    "480f22fe-4525-35e6-8127-eb8b1a96fbfa": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if endif",
      "matches": {
        "if": true
      }
    },
    "48149fe4-7ffe-3249-96af-0c9f82897867": {
      "content": "% if ${1:condition}:\n\t${0:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "481b87a6-687e-397e-b441-51890e60e60b": {
      "content": "${1:obj}.load (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      }
    },
    "481d1d88-9912-374e-8157-34a2e3db72f7": {
      "content": "${1:router}.getMatchedComponents($2)$0",
      "doc": "router.getMatchedComponents()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerGetMatchedComponents",
      "matches": {
        "routerGetMatchedComponents": true
      }
    },
    "481f8963-d02b-3e12-8f85-30100a853c60": {
      "content": "_.mapKeys(${object}, ${iteratee})",
      "doc": "_.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n  return key + value;\n});\n// => { 'a1': 1, 'b2': 2 }\n\nThe opposite of `_.mapValues`; this method creates an object with the\nsame values as `object` and keys generated by running each own enumerable\nstring keyed property of `object` thru `iteratee`. The iteratee is invoked\nwith three arguments: (value, key, object).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mapkeys",
      "matches": {
        "lodash mapkeys": true
      }
    },
    "48201f28-806c-34d6-ac94-cb24fe45cdd2": {
      "content": "<section>\n\t$1\n</section>",
      "doc": "HTML - Defines a section",
      "filetype": "html",
      "grammar": "lsp",
      "label": "section",
      "matches": {
        "section": true
      }
    },
    "48206ffd-7b39-3350-b5cb-2ec2bc4f16c8": {
      "content": "$scope.$on '${1:eventName}', (event, ${2:args}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$on": true
      }
    },
    "4820b51f-de1e-3268-9fed-0add592ba1f1": {
      "content": "![${1:alttext}](${2:/images/image.jpg} \"${3:title}\")",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![\"": true
      }
    },
    "482f7d7b-b94e-3a2c-a3f2-954f23d708e6": {
      "content": "\\\\begin{multicols}{2}\n\t${1}\n\t\\columnbreak\n\t${0}\n\\\\end{multicols}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "two-column environment with multicol",
      "matches": {
        "multicol2": true
      }
    },
    "483d81a5-b780-3792-95ce-2808726c04a5": {
      "content": "switch (${1:#:variable}) {\ncase '${2:#:value}':\n\t${3:#:code...}\n\tbreak;\n${0}\ndefault:\n\t${4:#:code...}\n\tbreak;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "sw",
      "matches": {
        "switch": true
      }
    },
    "483f4616-53bf-3836-9cbf-0ee5755ec06f": {
      "content": "_.rest(${func}, ${start})",
      "doc": "var say = _.rest(function(what, names) {\n  return what + ' ' + _.initial(names).join(', ') +\n    (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n});\n\nsay('hello', 'fred', 'barney', 'pebbles');\n// => 'hello fred, barney, & pebbles'\n\nCreates a function that invokes `func` with the `this` binding of the\ncreated function and arguments from `start` and beyond provided as\nan array.\n\n**Note:** This method is based on the\n[rest parameter](https://mdn.io/rest_parameters).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rest",
      "matches": {
        "lodash rest": true
      }
    },
    "4842266f-e107-3f85-8347-65cf597bbdd4": {
      "content": "for (int ${1:i} = ${2}; $1 >= 0; $1--) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for (int x; ...; x--) {}",
      "matches": {
        "forri": true
      }
    },
    "48450c07-e590-3e3d-b8ae-28deea47a13d": {
      "content": "<hgroup class=\"${1}>\n\t${0}\n</hgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hgroup.": true
      }
    },
    "4845b7cf-40f4-38aa-a427-58819772248d": {
      "content": "_.takeRight(${array}, ${n})",
      "doc": "_.takeRight([1, 2, 3]);\n// => [3]\n\n_.takeRight([1, 2, 3], 2);\n// => [2, 3]\n\n_.takeRight([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.takeRight([1, 2, 3], 0);\n// => []\n\nCreates a slice of `array` with `n` elements taken from the end.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takeright",
      "matches": {
        "lodash takeright": true
      }
    },
    "48461fec-9b29-34bc-a7ee-6aa8afb39297": {
      "content": "\\textup{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textup": true,
        "textup \\textup{": true
      }
    },
    "48484f9f-063f-310a-b101-0c82d736d28f": {
      "content": "call random_number($0)",
      "doc": "Random Number",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "rn",
      "matches": {
        "rn": true
      }
    },
    "4855f422-72c3-312d-ac43-a08792fdd5c1": {
      "content": "| url_param_escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_param_escape": true
      }
    },
    "485a0222-2d93-33bf-8936-42260c28414e": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      }
    },
    "485c382e-1883-38c9-ba3a-d5d33c27911c": {
      "content": "text-align-last: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      }
    },
    "485fc3ed-51dd-3663-8982-de311f56e1ae": {
      "content": "= render :partial => \"${1:item}\", :object => ${0:@$1}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpo": true
      }
    },
    "48676250-0200-3868-b1a8-ed67b56ad10f": {
      "content": "export default ${1:first}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportDefault",
      "matches": {
        "exp": true
      }
    },
    "4869fdf9-760a-346c-9c20-b4e255237b19": {
      "content": "${1:FIELDNAME} = models.FileField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FileField",
      "matches": {
        "mfile": true
      }
    },
    "486aa820-b68a-3830-bbf7-ebd63b82ab51": {
      "content": "<datalist>\n\t${0}\n</datalist>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datalist": true
      }
    },
    "486add62-effc-34cc-8b20-9b8af2d3ca42": {
      "content": "img(:src=\"'/path/to/images/' + ${1:fileName}\" alt=\"${2:altText}\")",
      "doc": "image source binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Image Source Binding",
      "matches": {
        "vsrc": true
      }
    },
    "48712439-e7a6-37bf-8de3-6f6c2607d80b": {
      "content": "align-items: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      }
    },
    "4875991d-5243-3144-8e96-363fc6cf2cb4": {
      "content": "elseif (${1:#:condition}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      }
    },
    "48793fe6-f3d2-3791-9ec5-676aca24d0e1": {
      "content": "${1:FIELDNAME} = models.ImageField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ImageField",
      "matches": {
        "mimg": true
      }
    },
    "487e9d40-4a4e-3728-aa4f-15f643b70419": {
      "content": "logger.info",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.info",
      "matches": {
        "logi": true
      }
    },
    "488a716d-ab6c-321b-9c8a-a5095a8eabcd": {
      "content": "cursor: default;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      }
    },
    "488ced5e-d6e6-355e-9cd2-1ea061755e8f": {
      "content": "while ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "while ...: ...",
      "matches": {
        "while": true
      }
    },
    "4896c8e6-56f8-37b3-a9a6-52e3e382db96": {
      "content": "borderBottomColor: ${1},",
      "doc": "borderBottomColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderBottomColor",
      "matches": {
        "bor": true
      }
    },
    "489df900-06e9-3663-9aa0-4332ffe8cb92": {
      "content": "this.setState((state, props) => { return { $0 }})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      }
    },
    "48b096e3-267d-3207-8e5b-ed142deb0f4c": {
      "content": "expect { ${1:object} }.to raise_error ${2:StandardError}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert expect with raise_error",
      "matches": {
        "experr": true
      }
    },
    "48b46921-a4af-3cbd-a2e1-03e96fdb61c3": {
      "content": "grid-auto-columns: min-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      }
    },
    "48b864f9-1b80-3ed1-a502-6dab1f340b36": {
      "content": "${1:FIELDNAME} = models.NullBooleanField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nullbool": true
      }
    },
    "48bf6bc3-352b-3e95-832a-c24f08d163da": {
      "content": "|${1|preventDefault,stopPropagation,passive,capture,once|}",
      "doc": "modifier",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-modifiers",
      "matches": {
        "s-modifier": true
      }
    },
    "48c29bf1-bbee-3f3f-9f01-bdbe65e8063a": {
      "content": "// spush and pop the current matrix stack\ngl.glPushMatrix();\n${0}\ngl.glPopMatrix();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl push matrix",
      "matches": {
        "gl": true
      }
    },
    "48c541f2-95e5-37bf-972a-df054d89c277": {
      "content": "{% if $1 %}\n  \n{% else %}\n  \n{% endif %}",
      "doc": "if else tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ifelse",
      "matches": {
        "ifelse": true
      }
    },
    "48c71a76-ba5c-3ef2-9f91-815deb36d1fd": {
      "content": "def update\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\n\trespond_to do |format|\n\t\tif @$1.update($1_params)\n\t\t\tflash[:notice] = '$2 was successfully updated.'\n\t\t\tformat.html { redirect_to(@$1) }\n\t\t\tformat.json  { head :ok }\n\t\telse\n\t\t\tformat.html { render action: 'edit' }\n\t\t\tformat.json  { render json: @$1.errors, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defupdate": true
      }
    },
    "48c973ec-297c-3947-a94b-38d7809b57e9": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      }
    },
    "48d5b712-9dd2-3689-8ff4-ba21375da7a7": {
      "content": "background ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      }
    },
    "48da855e-c684-394c-849d-29f13406a000": {
      "content": "import { $0 } from \"${1:module}\";",
      "doc": "Import external module.",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Import external module.",
      "matches": {
        "import statement": true
      }
    },
    "48e3fb1a-13f0-3e06-8a08-b64daa083080": {
      "content": "if (${1:condition}) {\n\t$0\n} else {\n\t\n}",
      "doc": "If-Else Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "If-Else Statement",
      "matches": {
        "ifelse": true
      }
    },
    "48e42b0a-5861-3aa0-a614-f7235b0ad20d": {
      "content": "{% blockquote ${1:author} ${2:URL} ${3:link_text} %}\n${0:quote}\n{% endblockquote %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote-link": true
      }
    },
    "48f2f25a-b82e-35a4-a2be-9c22d07688e6": {
      "content": "batch(linecount=$1, fill_with=${2:None})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "batch items",
      "matches": {
        "batch": true
      }
    },
    "48f3248d-b41e-37b8-b9c7-cd01ff570c78": {
      "content": "import 'package:flutter/material.dart';",
      "doc": "Import flutter material package",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Material Package",
      "matches": {
        "importM": true
      }
    },
    "48ff4269-b24e-3e77-9525-bf0748ac3035": {
      "content": "_.iteratee(${func})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': true },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n// => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.filter(users, _.iteratee(['user', 'fred']));\n// => [{ 'user': 'fred', 'age': 40 }]\n\n// The `_.property` iteratee shorthand.\n_.map(users, _.iteratee('user'));\n// => ['barney', 'fred']\n\n// Create custom iteratee shorthands.\n_.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n  return !_.isRegExp(func) ? iteratee(func) : function(string) {\n    return func.test(string);\n  };\n});\n\n_.filter(['abc', 'def'], /ef/);\n// => ['def']\n\nCreates a function that invokes `func` with the arguments of the created\nfunction. If `func` is a property name, the created function returns the\nproperty value for a given element. If `func` is an array or object, the\ncreated function returns `true` for elements that contain the equivalent\nsource properties, otherwise it returns `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iteratee",
      "matches": {
        "lodash iteratee": true
      }
    },
    "490346f5-4755-3008-a6da-9f2d560f30b8": {
      "content": "typedef ${1:int} ${2:MyCustomType};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "490aa4a5-d1a9-30dd-bfa7-65a9206afd12": {
      "content": "echo CHtml::error(${1:model}, '${0:attribute}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yherr": true
      }
    },
    "4919aa5a-969d-3c9d-bc91-76792675dd1f": {
      "content": "{# ${1:comment} #}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      }
    },
    "491ff58a-36d8-3472-97a7-19a4fe5ceaa0": {
      "content": "_.noConflict()",
      "doc": "var lodash = _.noConflict();\n\nReverts the `_` variable to its previous value and returns a reference to\nthe `lodash` function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-noconflict",
      "matches": {
        "lodash noconflict": true
      }
    },
    "492887b3-3e9d-3acd-960e-4188a797cf8a": {
      "content": "display: list-item;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      }
    },
    "492dea06-40a9-3e82-aea7-29733db3c311": {
      "content": "var $1 = new sap.m.ResponsivePopover({\n\t\t\tplacement :$2 ,//sap.m.PlacementType (default: sap.m.PlacementType.Right)\n\t\t\tshowHeader :$3 ,//boolean (default: true)\n\t\t\ttitle : $4,//string\n\t\t\ticon :$5 ,//sap.ui.core.URI\n\t\t\tmodal :$6 ,// boolean\n\t\t\toffsetX :$7, //int\n\t\t\toffsetY :$8, //int\n\t\t\tcontentWidth : $9,//sap.ui.core.CSSSize\n\t\t\tcontentHeight :$10, //sap.ui.core.CSSSize\n\t\t\thorizontalScrolling :$11, //boolean\n\t\t\tverticalScrolling :$12, //boolean\n\t\t\tshowCloseButton :$13, //boolean (default: true)\n\t\t\t//Aggregations\n\t\t\tcontent :$14,  //sap.ui.core.Control[]\n\t\t\tcustomHeader :$15,  //sap.m.IBar\n\t\t\tsubHeader : $16, //sap.m.IBar\n\t\t\tbeginButton :$17,  //sap.m.Button\n\t\t\tendButton : $18, //sap.m.Button\n\t\t\t//Associations\n\t\t\tinitialFocus : $19, //string | sap.ui.core.Control\n\t\t\t//Events\n\t\t\tbeforeOpen :$20,  //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tafterOpen : $21, //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tbeforeClose : $22, //fnListenerFunction or [fnListenerFunction, oListenerObject] or [oData, fnListenerFunction, oListenerObject]\n\t\t\tafterClose : $23 //fnList\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmresponsivepopup": true
      }
    },
    "493ecace-a259-3cf2-ba5b-85efb5021815": {
      "content": "if (${1:condition}) {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "4941fc55-0a5e-323c-808a-52cdab546f75": {
      "content": ".. contents:: ${1:Table of Contents}\n\n\t${0:content}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con:": true
      }
    },
    "49481c30-b8a0-3a8f-90e4-1af57de11a5a": {
      "content": "enum ${1:MyEnum} { ${2:Item} };",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "enumeration",
      "matches": {
        "enum": true
      }
    },
    "494b34f0-1dfc-3942-8692-29dcc3072eed": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\param $5 ${6:Parameter description}\n * \\param $7 ${8:Parameter description}\n * \\return ${9:Return parameter description}\n */\n${10:void} ${11:function_name}(${12:Type} ${3:Parameter}, ${13:Type} ${5:Parameter}, ${14:Type} ${7:Parameter})\n{\n\t${15}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun3": true
      }
    },
    "49599525-800f-35a5-afba-f77dd5ff3f47": {
      "content": "DEFINE VARIABLE ${1:VariableName} AS ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defvar": true
      }
    },
    "49638685-b767-3bb1-a3a1-d68dd7cb8076": {
      "content": "function reverse(${1:string})$0",
      "doc": "reverse representation with same length of string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-reverse",
      "matches": {
        "function reverse": true
      }
    },
    "4964ea9b-045b-3395-87dd-6337bacac674": {
      "content": "attr_reader :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      }
    },
    "49656ece-32bc-3648-a3db-c9a140f1850d": {
      "content": "font-family: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      }
    },
    "4966451c-3ea5-3615-96f2-d5324a9997eb": {
      "content": "exit program returning ${1:0}",
      "doc": "exit program returning [0]",
      "filetype": "vscode_cobol-compound",
      "grammar": "lsp",
      "label": "ep0",
      "matches": {
        "ep0": true
      }
    },
    "4966c083-613f-35c7-98fc-960dae805840": {
      "content": "border-style solid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      }
    },
    "4966dff9-181d-3c10-bfc1-109ba0528610": {
      "content": "System.out.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true
      }
    },
    "49686ffc-af75-3a0e-9fa8-7af5e0d00b0a": {
      "content": "render file: '${1:filepath}', use_full_path: ${0:false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfu": true
      }
    },
    "496ea2e9-8f82-3df8-8a45-574648be37f5": {
      "content": "{{ $1 }}",
      "doc": "Output markup: {{ }}",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Show",
      "matches": {
        "show": true
      }
    },
    "4982f76c-0572-309d-a39a-667996c7682d": {
      "content": "font-family: ${0:Georgia,'Times New Roman'},serif",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      }
    },
    "498a8d96-28e9-3a73-be1c-7b9734c0505b": {
      "content": "log.Printf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log printf",
      "matches": {
        "lf": true
      }
    },
    "498c8764-3c6a-387a-bace-657318c9459f": {
      "content": "procedure ${1:name}(${0:args});",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pps": true
      }
    },
    "498e9c99-ecb6-33f2-9e8f-51a6543c7814": {
      "content": "linkage section.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "linkage section.",
      "matches": {
        "linkage section": true,
        "lks": true,
        "ls": true
      }
    },
    "49927042-d7c0-3616-9d13-6da20b3f95cd": {
      "content": "borderTopLeftRadius: ${1},",
      "doc": "borderTopLeftRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderTopLeftRadius",
      "matches": {
        "bor": true
      }
    },
    "4994d210-beae-339b-ac97-8b1d48d7cd39": {
      "content": "{\n\t\"type\": \"collection\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_collection": true
      }
    },
    "499c8628-eef7-3f65-ba7b-6fa09abad553": {
      "content": "${1:f} :: ${2:a} ${3:-> ${4:b}}\n$1 ${5:x} = ${6:undefined}$0\n\twhere\n\t\t${7:exprs}",
      "doc": "Function with where",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "fn_where",
      "matches": {
        "fnw": true,
        "where function": true
      }
    },
    "499d1672-eae4-34cd-8370-c884b7787024": {
      "content": "import { motion } from 'framer-motion'",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-import",
      "matches": {
        "framer-motion import": true
      }
    },
    "499dfda7-943b-3760-921b-fe7bbb5e9aab": {
      "content": "border-color: ${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-color: color (border)",
      "matches": {
        "border": true
      }
    },
    "499ed591-a56b-3d13-b3e5-fc6bf23b9dda": {
      "content": "${1:obj}.clone()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clone": true
      }
    },
    "49a7e0bc-4599-33be-bbe6-091c567c2e4a": {
      "content": "beforeAll(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "before all (js)",
      "matches": {
        "befa": true
      }
    },
    "49ab2ae4-17e7-37f0-8ee9-1e5780891ea1": {
      "content": "| truncatewords: ${length:5}, '${ellipsis:...}' }}",
      "doc": "String filter: truncatewords",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter truncatewords",
      "matches": {
        "truncatewords": true
      }
    },
    "49b1e23a-d0a1-31ca-93b0-e8f71707f416": {
      "content": "background-break: each-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      }
    },
    "49b76922-fa91-3c58-8dd5-c06dc69dcaf9": {
      "content": "Page Should Contain Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Button",
      "matches": {
        "pscb": true
      }
    },
    "49bde619-1bbc-37e6-ac37-164dc1c511f2": {
      "content": "$.ajaxPrefilter (${1:options}, ${2:originalOptions}, jqXHR) ->\n\t${0: // Modify options, control originalOptions, store jqXHR, etc}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxprefilter": true
      }
    },
    "49be50d1-2158-35dc-a70c-3c5e63b5de24": {
      "content": "else if ${1}\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "else if part of if statement",
      "matches": {
        "eif": true
      }
    },
    "49c3504a-d084-39ca-8031-e04e378863c8": {
      "content": "unreachable!(${1})",
      "doc": "unreachable!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "unreachable",
      "matches": {
        "unreachable": true
      }
    },
    "49c36422-b894-3e1c-b7e4-6b252a0a4c8d": {
      "content": "@before-leave=\"$1\"$0",
      "doc": "@before-leave=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "before-leave",
      "matches": {
        "beforeLeaveEvent": true
      }
    },
    "49c8b345-fb3a-3979-a7e3-c07f3eea1d23": {
      "content": "_.endsWith(${string}, ${target}, ${position})",
      "doc": "_.endsWith('abc', 'c');\n// => true\n\n_.endsWith('abc', 'b');\n// => false\n\n_.endsWith('abc', 'b', 2);\n// => true\n\nChecks if `string` ends with the given target string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-endswith",
      "matches": {
        "lodash endswith": true
      }
    },
    "49cf44ef-7e6d-38af-9f6e-21a3f93add48": {
      "content": "<ng-container $0></ng-container>",
      "doc": "Angular ng-container",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-container",
      "matches": {
        "a-ng-container": true
      }
    },
    "49d2a049-2212-3cd2-bd90-4d4cd56ab5a7": {
      "content": "<header>\n    ${1}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      }
    },
    "49d60a80-ae2e-343a-89c8-beb3c9551483": {
      "content": "::: nonincremental\n\n${1:${TM_SELECTED_TEXT}}$0\n\n:::",
      "doc": "Insert nonincremental fenced block",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert nonincremental fenced block",
      "matches": {
        "nonincremental fenced block": true
      }
    },
    "49dcc5a2-7e31-33c9-98df-24e1bfe988eb": {
      "content": "<%text>\n\t${0:}\n</%text>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      }
    },
    "49dfe1b7-7517-3ea7-8c0c-ab65bffacb8c": {
      "content": "{%- cycle '${1:odd}', '${2:even}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle-": true
      }
    },
    "49f0c009-2cf2-34dd-aac4-dbdecbf1f2f4": {
      "content": "when (${1:${VISUAL}}) {\n\t${2} -> ${3}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whe": true
      }
    },
    "49f6ed8e-dee3-3592-9f11-e8c049aa6762": {
      "content": "font-emphasize-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      }
    },
    "49f749b4-f049-3452-8fd0-977e88968183": {
      "content": "@enter='$1'$0",
      "doc": "@enter=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "enter",
      "matches": {
        "enterEvent": true
      }
    },
    "49f9202d-b9c5-371d-9ea7-ac8ccc00884a": {
      "content": "echo CHtml::css('${1:test}','${0:media}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcss": true
      }
    },
    "4a086bef-ceff-3a5d-8654-918f86313c2c": {
      "content": "<style lang=\"less\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with less",
      "matches": {
        "style_with_less": true
      }
    },
    "4a12a7fb-2863-301d-9529-1227d9b93b1f": {
      "content": "#+TITLE:     ${1:Untitled Document}\n#+AUTHOR:    ${2:Author}\n#+DATE:      ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      "doc": "org-file header",
      "filetype": "org",
      "grammar": "lsp",
      "label": "header",
      "matches": {
        "head": true
      }
    },
    "4a196836-82b6-3054-8b5a-3aa1dff122a5": {
      "content": "font-emphasize-style: accent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      }
    },
    "4a19bc89-b12f-31f1-a4a2-83560eee8fb1": {
      "content": "cmake_minimum_required(VERSION ${1:2.8.2})\nproject(${2:ProjectName})\n\nfind_package(${3:library})\n\ninclude_directories(${$3_INCLUDE_DIRS})\n\nadd_subdirectory(${0:src})\n\nadd_executable($2)\n\ntarget_link_libraries($2 ${$3_LIBRARIES})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      }
    },
    "4a1a467b-8780-3469-b0e8-a8d2170e3a3b": {
      "content": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nfinally:\n\t${5:pass}$0",
      "doc": "Code Snippet for a try/except/finally.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try:except:finally",
      "matches": {
        "tryf": true
      }
    },
    "4a1e4ac9-3ce4-3261-8732-84f3a12631be": {
      "content": "border-bottom-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbc": true,
        "border-bottom-color": true
      }
    },
    "4a2335df-ef2c-36e7-8594-86c2133319c9": {
      "content": "${1:f}: (${2:args}) =>\n  ${0:TARGET}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defm": true
      }
    },
    "4a243bf9-75a1-3cf6-bd38-a0047a7b416e": {
      "content": "include_directories(${${0:include_dir}})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "4a2dcddb-5d84-3f04-a641-95b885c0df1d": {
      "content": "/**\n * ${1}\n */\nclass ${2:#:ClassName}${3:#:extends}\n{\n\t$5\n\tfunction ${4:__construct}(${5:#:argument})\n\t{\n\t\t${0:# code...}\n\t}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class_with_constructor": true
      }
    },
    "4a300fd1-7065-3461-aff7-86ec2666d5ec": {
      "content": "grid-row-end: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      }
    },
    "4a34e36a-30a8-3d0c-9420-38675b129a4f": {
      "content": "Dir[${1:'glob/**/*.rb'}]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "Dir[\"..\"]",
      "matches": {
        "Dir": true
      }
    },
    "4a37107d-82a2-3eab-b3ef-0293f3814a5b": {
      "content": "assert_nothing_raised ${1:StandardError} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnrd": true
      }
    },
    "4a4f6705-f066-318b-bb1b-0452c3d6c15c": {
      "content": ":${1:field name}: ${0:field body}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":": true
      }
    },
    "4a501ca7-39b4-3397-9165-da9149ba1079": {
      "content": "@function ${1:name}(${2:args})\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "4a5e288e-a2e9-34ca-be6a-92a268349f5d": {
      "content": "-module(${1:module}).",
      "doc": "module",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "module",
      "matches": {
        "mod": true
      }
    },
    "4a6adf0f-b44e-3932-96a9-d01affca6e10": {
      "content": "(** ${0:TARGET} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "ocamldoc comment (** .. *)",
      "matches": {
        "oo": true
      }
    },
    "4a707c45-44bf-3de7-8957-da152006ff3d": {
      "content": "const [${1:x}, ${2:cycleX}] = useCycle(${3:0}, ${4:50}, ${5:100})",
      "doc": "useCycle(items): CycleState It works similar to useState in React. It is provided an initial array of possible states, and returns an array of two arguments.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-cycle",
      "matches": {
        "framer-motion use-cycle": true,
        "use-cycle": true
      }
    },
    "4a7082ca-4fa6-31f0-8ef8-3adf56c29001": {
      "content": "align-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "4a73055a-3194-3853-a9ea-6fe66e8bfda6": {
      "content": "#[derive(${1:Debug})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[derive(..)]",
      "matches": {
        "der": true
      }
    },
    "4a7306d2-e1ae-3b4c-aa4f-e315a4e4a803": {
      "content": "{% if $1 %}\n  \n{% else %}\n  \n{% endif %}",
      "doc": "if else tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ife",
      "matches": {
        "ife": true
      }
    },
    "4a76724e-0616-3d64-8e34-3d82eb9b396c": {
      "content": "import EmberObject from '@ember/object';\n\nexport default EmberObject.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import EmberObject from '@ember/object';",
      "matches": {
        "eobj": true
      }
    },
    "4a868557-1889-3e56-9d57-2130611712b4": {
      "content": "PRIMARY KEY(${1:attribute})",
      "doc": "Primary Key",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "primaryk",
      "matches": {
        "primaryk": true
      }
    },
    "4a891ada-372e-3573-90c4-7524b87ddea5": {
      "content": "import ${1:module} ${2:(${3:f})}$0",
      "doc": "Simple import",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "import simple": true
      }
    },
    "4a8cb719-8fdc-3c3e-a6c4-d1457c85cefd": {
      "content": "border-fit: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      }
    },
    "4a8ea522-9514-3ac4-a047-ea8b20f88030": {
      "content": "{% with ${1} as ${2} %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "4a8fbd61-0898-3547-a724-d82e473ccac9": {
      "content": "slot='$1'$0",
      "doc": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "slotA",
      "matches": {
        "slotA": true
      }
    },
    "4a9491c6-2f68-3b65-8f5d-9a80e5ca7cb9": {
      "content": "word-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      }
    },
    "4a951030-9b82-3981-83b8-703a976179f7": {
      "content": "[style.${1:property}]=\"${2:expression}\"",
      "doc": "Angular [style] binding",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "style",
      "matches": {
        "a-style": true,
        "angular style": true
      }
    },
    "4a998de1-458e-3618-bb38-fd698474adad": {
      "content": "namespace :${1} do\n\tdesc \"${2}\"\n\ttask ${3}: :environment do\n\t\t${4}\n\tend\nend",
      "doc": "Create a Rake Task",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Rake Task",
      "matches": {
        "rake": true
      }
    },
    "4aa04b2a-bf39-307e-9fa9-991e616a5647": {
      "content": "const ${1:elName}El = useRef(null)$0",
      "doc": "React useContext() hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useRef",
      "matches": {
        "ur": true
      }
    },
    "4aa22f61-1a8e-355c-bf99-a0a855314e0c": {
      "content": "<aside>\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside": true
      }
    },
    "4aa2ba70-8b66-30a3-bf55-e5cf485e5f3a": {
      "content": "foreach ( $${1:iterator} in $${2:collection} ) {\n\t${3:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      }
    },
    "4aa58090-e1cf-3dab-80ac-84b7a8cc35a3": {
      "content": "\\autocite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\autocite": true,
        "autocite": true
      }
    },
    "4aa724a4-8ee5-3dfc-a55a-9cf1e0d7afe2": {
      "content": "_.dropRight(${array}, ${n})",
      "doc": "_.dropRight([1, 2, 3]);\n// => [1, 2]\n\n_.dropRight([1, 2, 3], 2);\n// => [1]\n\n_.dropRight([1, 2, 3], 5);\n// => []\n\n_.dropRight([1, 2, 3], 0);\n// => [1, 2, 3]\n\nCreates a slice of `array` with `n` elements dropped from the end.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-dropright",
      "matches": {
        "lodash dropright": true
      }
    },
    "4aa8801a-09e4-3205-acf8-d94c6e4e455b": {
      "content": "<object data=\"${1}\" type=\"${2}\">\n\t${3}\n</object>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      }
    },
    "4aaf2d60-5215-3de7-8292-c5d1c6148f45": {
      "content": "import PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-types-import",
      "matches": {
        "impt": true,
        "prop-types import": true
      }
    },
    "4aaf4e9e-fe68-3d24-bdc3-8a8ab89441ed": {
      "content": "net.createServer(function(${1:socket}){\n\t$1.on('data', function(${3:data}){\n\t\t$4\n\t});\n\t$1.on('end', function(){\n\t\t$5\n\t});\n}).listen(${6:8124});",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "net.createServer",
      "matches": {
        "ncs": true
      }
    },
    "4ab2619b-ff6d-328f-822f-e59fa9496d60": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with CSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-css",
      "matches": {
        "vue base css": true
      }
    },
    "4ab43cec-8350-390a-8824-3ec760176b83": {
      "content": "${1:deferred}.resolve(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dres": true
      }
    },
    "4ab921d0-807d-3ff7-abb4-771cc8e4fc1a": {
      "content": "regsubst(${1:hay stack}, ${2:needle}, \"${3:replacement}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regsubst": true
      }
    },
    "4ab9d67d-ce04-39bd-8abf-2a83a6cb25df": {
      "content": "if ${1:true} do\n  ${2:ok}\nelse\n  ${3:ok}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. else .. end",
      "matches": {
        "ife": true
      }
    },
    "4abdbe75-3f5b-3697-a8ca-51c79ae4ea3f": {
      "content": "#lang racket/gui",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#rg": true
      }
    },
    "4abe1523-983e-3529-bbf6-c5c4d0c800f0": {
      "content": "def test_should_post_${1:action}\n\t${3:@$2 = ${4:$2s}(:${5:fixture_name})\n\t}post :$1${6:, id: @$2.to_param}, ${2:model}: { $0 }\n\tassert_response :redirect\n\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "def post request",
      "matches": {
        "deftp": true
      }
    },
    "4ac5a37b-2eb7-30ba-a6af-21756d00c0bf": {
      "content": "from ${1:package/module} import ${2:names}$0",
      "doc": "Import statement that allows individual objects from the module to be imported directly into the caller’s symbol table.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "from ... import ...",
      "matches": {
        "fim": true
      }
    },
    "4acae62b-d8bf-351e-963c-f9e19bc0693e": {
      "content": "switch(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "4acd6ed5-9e98-3623-ae3f-bf78c6364bb3": {
      "content": "${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attrm": true
      }
    },
    "4ad1fdc0-4731-3676-ab43-32aad2f5030d": {
      "content": ",$0,",
      "doc": "subscript",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "subscript",
      "matches": {
        "subscript": true
      }
    },
    "4ad4b649-cee8-36c1-8fe8-c0a27b8b3719": {
      "content": "<select [(ngModel)]=\"${1:model}\">\n\t<option *ngFor=\"let ${2:item} of ${3:list}\" [value]=\"${2:item}\">{{${2:item}}}</option>\n</select>",
      "doc": "<select> control with ngModel",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngSelect",
      "matches": {
        "a-select": true
      }
    },
    "4ad7b3ae-bf17-3b40-beff-b0fe4c40a4c3": {
      "content": "border-corner-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      }
    },
    "4ad92f67-9fb0-32aa-b3e8-148cdaffb8e0": {
      "content": "switch ${1:var} {\ncase ${2:value1}:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch x { ... }",
      "matches": {
        "switch": true
      }
    },
    "4adbe1b2-68ea-3efc-a715-46ed55224260": {
      "content": "_${1}_${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "_italic_",
      "matches": {
        "italic": true
      }
    },
    "4add5554-cd3b-30f3-a58b-809ceac0def5": {
      "content": "${1:obj}.slice(${2:start}${3:, end})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "4ae1af14-2c2d-310c-9dfd-7bb437ac287d": {
      "content": "<iframe class=\"${1}\" src=\"${2}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe.": true
      }
    },
    "4ae396c0-0bb2-3e30-8347-fe2b2dbd8ac0": {
      "content": "main(_) -> ${0}.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "4ae7ea39-c5e6-3e3e-8c99-9dc37e7cfaeb": {
      "content": "class ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}",
      "doc": "Creates a React component class with ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactJustClassComponent",
      "matches": {
        "rcjc": true
      }
    },
    "4af0d043-89ce-330f-8bf5-1aada988a9bd": {
      "content": "background-break: continuous;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      }
    },
    "4afde25e-3967-3e72-bb33-04f777ab329c": {
      "content": "namespace {\n\t${0}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ans": true
      }
    },
    "4b003677-f493-3632-9682-ae682186c4b3": {
      "content": "(${1:#:args}) =>\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      }
    },
    "4b00a921-a4b4-33e1-bf5a-6b9b87379cfb": {
      "content": "get ${1:property}() {\n\t${0}\n}\nset ${1:property}(${2:value}) {\n\t\n}",
      "doc": "getter and setter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "getter-and-setter-es6-syntax-",
      "matches": {
        "base getter setter": true
      }
    },
    "4b021a5d-073e-3a4c-ae70-f196aa4ae84a": {
      "content": "$this->${1:method}()->shouldNotHaveKey(${2:'key'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveKey('key')",
      "matches": {
        "snkey": true
      }
    },
    "4b054ab5-21be-37fd-9f15-7068b3d8efff": {
      "content": "subscribe",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "subscribe",
      "matches": {
        "subscribe": true
      }
    },
    "4b0cbbb3-e597-3492-818f-35258107e74c": {
      "content": "else if(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "4b0ee238-4ba5-3fcf-b451-b1c583d688c3": {
      "content": "${fn:startsWith(${1:string}, ${0:prefix})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "startswith": true
      }
    },
    "4b15acf0-8e03-3947-8f72-396919011a53": {
      "content": "<keygen name=\"$1\">$2",
      "doc": "HTML - Defines a generated key in a form",
      "filetype": "html",
      "grammar": "lsp",
      "label": "keygen",
      "matches": {
        "keygen": true
      }
    },
    "4b1cbe73-024c-39c9-a461-8dd4f5db4348": {
      "content": "# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cutf8": true
      }
    },
    "4b21b9ad-1006-38a1-a3d5-cad950dd7bf1": {
      "content": "${1:obj}.reset(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reset": true
      }
    },
    "4b259a8e-18cf-314a-ae8b-571d64cdb0ec": {
      "content": "_.identity(${value})",
      "doc": "var object = { 'a': 1 };\n\nconsole.log(_.identity(object) === object);\n// => true\n\nThis method returns the first argument it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-identity",
      "matches": {
        "lodash identity": true
      }
    },
    "4b28369e-f899-326f-94b6-c18dab33a7ed": {
      "content": "${1:FIELDNAME} = models.CommaSeparatedIntegerField(max_length=${2}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comma": true
      }
    },
    "4b2c84cb-e063-38f4-8649-ee6bb06044cf": {
      "content": "wont_be_within_epsilon ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbwe": true
      }
    },
    "4b37b075-756f-3c65-a38f-7a63a0e150d1": {
      "content": "<left>{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      }
    },
    "4b412d22-affe-3343-8962-64d7d62ceec1": {
      "content": ".. contents::\n\t:depth: ${1:2}\n\t${2::local:}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_content",
      "matches": {
        "content": true
      }
    },
    "4b48ae82-b69d-3b44-a09f-cd0964210556": {
      "content": "Run Keyword If Test Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Test Passed",
      "matches": {
        "rkitp": true
      }
    },
    "4b4aff6e-1438-3022-9e34-53d0943fa7dc": {
      "content": "List${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "4b4f8f54-9f56-32d5-aa4d-c4badc5a55e4": {
      "content": "bezier(${1:x1}, ${2:y1}, ${3:cx1}, ${4:cy1}, ${5:cx2}, ${6:cy2}, ${7:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezier": true
      }
    },
    "4b593c76-f9eb-3f38-ac05-6d78f3931f3d": {
      "content": "if __FILE__ == $PROGRAM_NAME\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "app": true
      }
    },
    "4b60d407-468d-3a19-8d67-527df8758ab0": {
      "content": "$this->renderText('${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrt": true
      }
    },
    "4b6c7ca4-81f8-3ea7-9a8b-f1f3b6fa53ac": {
      "content": "async for ${1:target} in ${2:iter}:\n\t${3:block}\nelse:\n\t${4:block}",
      "doc": "Code snippet for an async for statement with else",
      "filetype": "python",
      "grammar": "lsp",
      "label": "async/for/else",
      "matches": {
        "async/for/else": true
      }
    },
    "4b6dc8b5-57cf-3e95-9703-22a2332f3ab1": {
      "content": "defp ${1:name}(${2:args}) when ${3:guard}, do: ${4}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfpw": true
      }
    },
    "4b75ff59-6485-3320-8b6f-709479f06c92": {
      "content": "::: {.conjecture #${1:label} name=\"${2:conjecture name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown conjecture",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown conjecture",
      "matches": {
        "conjecture": true
      }
    },
    "4b76dc0d-6777-38f1-b215-18b0fb6037da": {
      "content": "display inline-block",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      }
    },
    "4b770538-30b8-3ad3-bb1e-86fe2ce8ba2f": {
      "content": "&nbsp;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nbs": true
      }
    },
    "4b85d64a-3901-30eb-9cf4-dae09b633206": {
      "content": "border none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      }
    },
    "4b8a8766-181f-3428-92b7-c4ce4ebd95f5": {
      "content": "it('${1:description}', (done) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "it with a callback",
      "matches": {
        "itd": true
      }
    },
    "4b8b0855-aa4f-3d82-aaa5-d9c4bd3f628b": {
      "content": "[${1:id}]: http://${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:": true
      }
    },
    "4b8da0f0-5766-34ea-8975-d096e289ef67": {
      "content": "for (int ${1:i} = 0; $1 < ${2:10}; $1++)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for loop",
      "matches": {
        "for": true
      }
    },
    "4b8e1580-2787-3865-9457-e3e5556c8c2d": {
      "content": "const mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\t${1:propName}: () => {\n\t\t\tdispatch(${2:actionName}());\n\t\t},\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdtp": true
      }
    },
    "4b9473f2-5eb4-3bdd-b8c7-e58947eeffe0": {
      "content": "assert(${1:false}, \"${2:TODO}\");",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "assert (ass)",
      "matches": {
        "ass": true
      }
    },
    "4ba16385-a214-3199-821f-e4172180e641": {
      "content": "<link rel=\"${1:stylesheet}\" href=\"${2}.css\"${3}>${4}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "link stylesheet css",
      "matches": {
        "link": true
      }
    },
    "4ba58bb1-ebd7-38ae-a12f-e8df778fcedc": {
      "content": "leave-active-class=\"$1\"$0",
      "doc": "leave-active-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-active-class",
      "matches": {
        "leaveactiveclass": true,
        "vue leave-active-class": true
      }
    },
    "4bbf04e6-ca17-366c-8e19-ea253d814caa": {
      "content": "align-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items: center",
      "matches": {
        "aic": true
      }
    },
    "4bd6e542-1ff8-35f8-8b40-6ce72e84b2ce": {
      "content": "v-on:${1:event}=\"${2:handle}\"",
      "doc": "Expects: Function | Inline Statement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-on",
      "matches": {
        "von": true,
        "vue v-on": true
      }
    },
    "4be18c05-5d1f-31bc-9099-cb81b6fb2253": {
      "content": "text-transform: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "4bf365b7-ecd4-374e-b6a6-fd8160f47e33": {
      "content": "if __name__ == '__main__':\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "if __name__ == '__main__': ...",
      "matches": {
        "ifmain": true,
        "main": true
      }
    },
    "4bf4c4f9-8b16-3727-9e68-76b2a26bee56": {
      "content": "<script lang=\"ts\">\nimport Vue from 'vue'\nexport default Vue.extend({\n  ${0}\n})\n</script>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <script> with TypeScript",
      "matches": {
        "script_with_TypeScript": true
      }
    },
    "4bfb85b1-9717-3594-96ec-f38c6c681412": {
      "content": "display: table-column-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      }
    },
    "4bfde3cd-4e1e-3f5e-87b3-9090a5877171": {
      "content": "position: sticky;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "position sticky",
      "matches": {
        "poss": true
      }
    },
    "4c0f6594-4184-3636-a111-f7523eae2d69": {
      "content": "int ${1:f}${2: = }${0:0};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      }
    },
    "4c1158fd-c2aa-32f3-bb63-517f757e042c": {
      "content": "position: ${1},",
      "doc": "position",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "position",
      "matches": {
        "pos": true
      }
    },
    "4c1503c5-4601-3ef0-863f-575d10d31017": {
      "content": "_.flip(${func})",
      "doc": "var flipped = _.flip(function() {\n  return _.toArray(arguments);\n});\n\nflipped('a', 'b', 'c', 'd');\n// => ['d', 'c', 'b', 'a']\n\nCreates a function that invokes `func` with arguments reversed.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flip",
      "matches": {
        "lodash flip": true
      }
    },
    "4c17033c-c196-389a-be68-fa0e7a364737": {
      "content": "%ul\n\t%li\n\t\t${0:item}\n\t%li",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul": true
      }
    },
    "4c1d7dc4-a87b-3683-9975-005d2aee66d4": {
      "content": "<returns>${1:description}</returns>\n*>> $0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "<returns>",
      "matches": {
        "<returns>": true
      }
    },
    "4c2800fb-8b72-39b3-afc5-fa761a170a33": {
      "content": "<strong>${0}</strong>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      }
    },
    "4c2e6c87-a932-32e3-b06f-1c504611556e": {
      "content": "assert_throws :${1:expected}, -> { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ast": true
      }
    },
    "4c34b160-16a6-3164-a390-9ce73d9694a7": {
      "content": "before_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_update",
      "matches": {
        "befu": true
      }
    },
    "4c34f936-2cc6-3858-b99b-cc26f677c2f0": {
      "content": "echo ${0};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "4c355555-2006-3f9e-bfe4-21cb12be67fa": {
      "content": "clear: both",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      }
    },
    "4c39b132-0790-3eed-84ed-359aa1b5314a": {
      "content": "@ManyToOne\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mo": true
      }
    },
    "4c3ac4eb-074e-343b-9119-e97272c98e0c": {
      "content": "raise (${1:Not_found})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "raise",
      "matches": {
        "rs": true
      }
    },
    "4c3f30f7-22d1-33ab-9fc8-fb391b67bade": {
      "content": "import { Injectable } from '@angular/core';\nimport { CanLoad, Route } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanLoad {\n\tconstructor() { }\n\n\tcanLoad(route: Route) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanLoad guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanLoad Guard",
      "matches": {
        "a-guard-can-load": true
      }
    },
    "4c457d43-c5e4-3991-8bb5-69768b311569": {
      "content": "display table-row-group",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      }
    },
    "4c4c74c0-1aac-3dcb-b643-07dfd3b44b04": {
      "content": "|> IO.inspect",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to inspect",
      "matches": {
        ">i": true
      }
    },
    "4c5a11e2-fbe0-35ea-9161-9cb9c1a8f770": {
      "content": "<c:import url=\"${1}\">\n\t<c:param name=\"${2}\" value=\"${3}\" />\n\tcparam+${0}\n</c:import>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cimport+": true
      }
    },
    "4c5cef8a-3dcf-3856-973d-d67dba596cef": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"sass\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with SASS",
      "matches": {
        "vbase-sass": true
      }
    },
    "4c62e1cf-704a-3203-aed5-9c49c19b5328": {
      "content": "<style lang=\"stylus\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with stylus scoped",
      "matches": {
        "style_with_stylus_scoped": true
      }
    },
    "4c6bf914-494c-380b-8605-d61f614cce15": {
      "content": "list-style-type: lower-roman",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:lr": true
      }
    },
    "4c6c7990-8835-3d51-a60b-c799446ccb95": {
      "content": "import ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      }
    },
    "4c6da87b-056b-37a9-95fa-2396af758070": {
      "content": "writeln(${1:/*args*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "writeln (wr)",
      "matches": {
        "wr": true
      }
    },
    "4c707d74-93e3-3a37-b2e2-f3cc6a347f00": {
      "content": "beforeEach(() => {\n\t$0\n});",
      "doc": "beforeEach function is called once before each spec",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-beforeeach",
      "matches": {
        "be": true,
        "jest beforeeach": true
      }
    },
    "4c794c42-2c1c-3ad7-a4d5-e52eb26edb57": {
      "content": "if ${1:condition}:\n\t${2:pass}\nelse:\n\t${3:pass}",
      "doc": "Code snippet for an if statement with else",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if/else",
      "matches": {
        "if/else": true
      }
    },
    "4c80c947-4adc-3ae9-a320-94f915667cb9": {
      "content": "action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "action:",
      "matches": {
        "action": true
      }
    },
    "4c82a6a8-48f7-3ed9-9645-31daab7c684d": {
      "content": "password(name: \"${1:PASSWORD}\" , defaultValue: \"${2:SECRET}\" , description: \"${3:Enter a password}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parampassword": true
      }
    },
    "4c8584f9-9431-37e9-ab32-a04a81e60403": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "4c85ad8d-af55-3b6c-92b4-319b03e9a2f2": {
      "content": "Double",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dbl": true
      }
    },
    "4c85f5be-f00f-39c2-a950-899b83b05de9": {
      "content": "{% cycle '${1:odd}', '${2:even}' %}",
      "doc": "Iteration tag: cycle",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag cycle",
      "matches": {
        "cycle": true
      }
    },
    "4c8bddc5-5231-3d48-8e49-4c1dc504ce8b": {
      "content": "${1:obj}.unload(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unload": true
      }
    },
    "4c8c7b23-ecba-3665-b2c8-011faed35f9f": {
      "content": "<div [ngSwitch]=\"${1:conditionExpression}\">\n\t<div *ngSwitchCase=\"${2:expression}\">${3:output}</div>\n\t<div *ngSwitchDefault>${4:output2}</div>\n</div>",
      "doc": "Angular ngSwitch",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngSwitch",
      "matches": {
        "a-ngSwitch": true
      }
    },
    "4c8d67aa-a3b7-3783-b3c3-2da9d3bf956e": {
      "content": "${1:obj}.pushStack(${2:elements})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushstack": true
      }
    },
    "4c8e4277-5e2d-3b47-94cb-2e9d262b4e27": {
      "content": "fn(${1:args}) -> ${2:TARGET} end",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "fn(..) -> .. end",
      "matches": {
        "fn": true
      }
    },
    "4c913e18-8888-39e2-8a6b-260c9d1ff882": {
      "content": "assert_no_match(/${1:unexpected_pattern}/, ${2:actual_string})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnm": true
      }
    },
    "4c9949a6-2d52-3212-8abe-0558ffede1dd": {
      "content": "${1} ->\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      }
    },
    "4ca19561-06eb-32b2-bc27-2acbf2b27c45": {
      "content": "_.isArray(${value})",
      "doc": "_.isArray([1, 2, 3]);\n// => true\n\n_.isArray(document.body.children);\n// => false\n\n_.isArray('abc');\n// => false\n\n_.isArray(_.noop);\n// => false\n\nChecks if `value` is classified as an `Array` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarray",
      "matches": {
        "lodash isarray": true
      }
    },
    "4cb8f3d5-0fda-3360-8f9e-daf5d044c491": {
      "content": "(${1:params}) => {\n\t${2}\n}",
      "doc": "Creates an anonymous function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "anonymousFunction",
      "matches": {
        "anfn": true
      }
    },
    "4cbf7f49-fd90-3694-875b-459c927f7e71": {
      "content": "<% ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "%": true
      }
    },
    "4cc1437e-29f1-3cc9-8ced-9fc8a697465e": {
      "content": "public static void ${1:index}(${2:args}) { ${0} }",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "action": true
      }
    },
    "4cdd0fd0-c8b1-3462-b87d-c18df3a0aa5a": {
      "content": "componentWillReceiveProps(nextProps) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      }
    },
    "4cde40da-24aa-3259-a4ba-8047b133c5ef": {
      "content": "${1:deferred}.done(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ddone": true
      }
    },
    "4ced2445-22f2-3613-b969-0790dfd614e8": {
      "content": "border-bottom-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      }
    },
    "4cf246c4-b82a-35c2-b9a5-fe1f79a49f00": {
      "content": "justify-content: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      }
    },
    "4cf3718b-7de0-3a82-87b2-39026338167d": {
      "content": "$this->${1:method}()->shouldNotBe(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBe('value')",
      "matches": {
        "snbe": true
      }
    },
    "4cf4b030-3c3f-3c07-b14d-706b169d0859": {
      "content": "for some ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for some",
      "matches": {
        "fors": true
      }
    },
    "4cf718fa-f9c6-3956-b828-8c777ece8cb0": {
      "content": "it { should ensure_length_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isel": true
      }
    },
    "4cfa7869-cc81-340b-b94b-ed3fc484d5eb": {
      "content": "each_pair { |${1:name}, ${2:val}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eap": true
      }
    },
    "4cfb86b8-8392-327e-a1f9-b01acc4caf6b": {
      "content": "line-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      }
    },
    "4cfd84ec-4bd2-32f3-b64c-2d8ffd6c3cf1": {
      "content": "(Thread/sleep ${1})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sleep": true
      }
    },
    "4d04a997-7ceb-3bc4-8f7e-bfe188358284": {
      "content": "logger.warn { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logw": true
      }
    },
    "4d0ad282-64f9-34f8-9ca7-0343eb49aa6d": {
      "content": "place-content start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      }
    },
    "4d0b2169-5a0e-3909-a105-cd7ae4d776fc": {
      "content": "place-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      }
    },
    "4d16f1e9-7fd9-3c9f-9173-d1237a013750": {
      "content": "${1:obj}.mousemove (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmove": true
      }
    },
    "4d1ae4a2-b11d-374f-99ca-857e42e891a1": {
      "content": "dist(${1:x1}, ${2:y1}, ${4:x2}, ${0:y2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dist": true
      }
    },
    "4d2057cd-16b3-3d33-8ae0-54009a2de26a": {
      "content": "<h4>${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4": true
      }
    },
    "4d248c84-3ded-3b78-a6c7-a1170f5d378f": {
      "content": "Yii::trace('${0:msg}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ytrace": true
      }
    },
    "4d26441b-6d40-3e27-b1db-c19c52df931b": {
      "content": "white-space-collapse ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      }
    },
    "4d272c80-6c34-3982-85a7-0f384bd8bed5": {
      "content": "font-emphasize-style: dot;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      }
    },
    "4d2d10f0-ff1c-3d45-a4d9-0c47afd6dfc4": {
      "content": "enum ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "4d385c82-340e-3719-aafa-171defdad3b3": {
      "content": "logical ::",
      "doc": "Quick Logical",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "l",
      "matches": {
        "l": true
      }
    },
    "4d39f60b-8c8f-3126-bf8c-336fa26db495": {
      "content": "${2:void} ${1:func}(${4:void})\n{\n\t$3\n}",
      "doc": "Creates a function",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create a function",
      "matches": {
        "func": true
      }
    },
    "4d3f7210-3f65-3fca-a4dd-d1c8c00dcba8": {
      "content": "<${1:div} :class=\"[${2:classNameA}, {${3:classNameB} : ${4:condition}}]\"></${1:div}>",
      "doc": "vue multiple conditional class bindings",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Multiple Conditional Class Bindings",
      "matches": {
        "vclass-obj-mult": true
      }
    },
    "4d4979de-6c97-331d-ae92-49155641a7c2": {
      "content": "border-style: solid;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      }
    },
    "4d4e310a-cdbe-3839-83a3-582622a8c8e7": {
      "content": "object.camelCase()",
      "doc": "object.camelCase(): Schema\n\nTransforms all object keys to camelCase",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-camel-case",
      "matches": {
        "yup object camelcase": true
      }
    },
    "4d5b83d1-e2c6-37c3-8856-69bf4e8e14ee": {
      "content": "checked\n{\n    $0\n}",
      "doc": "Checked block",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Checked block",
      "matches": {
        "checked": true
      }
    },
    "4d6f2f52-7cf2-3b1c-8518-1ce9e6bce290": {
      "content": "loadMovieNum(${1:url}, ${2:level}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ln": true
      }
    },
    "4d74c145-028e-384f-b634-7123524d022d": {
      "content": "if (${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifs": true
      }
    },
    "4d8783f7-d495-3cdb-89a8-872968d5d705": {
      "content": "-down->",
      "doc": "down arrow, format: box -down-> box 2 (it will point downwards to the box 2",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Arrow-down",
      "matches": {
        "down": true
      }
    },
    "4d89f742-fab2-3348-ba63-be12ce0fcd99": {
      "content": "-ifdef(TEST).\n-include_lib(\"eunit/include/eunit.hrl\").\n\n${0}\n\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ieunit": true
      }
    },
    "4d8fbb77-5b88-30c8-b4ec-68b7fde10cf8": {
      "content": "setMethod(\"${1:generic}\", ${2:class}, function(${2:x, ...}) {\n    ${0}\n})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "setMethod",
      "matches": {
        "sm": true
      }
    },
    "4d971b25-eb4d-3253-a1b1-28a86bfa4105": {
      "content": "mixed.validateAt()",
      "doc": "mixed.validateAt(path: string, value: any, options?: object): Promise<any, ValidationError>\n\nValidate a deeply nested path within the schema. Similar to how reach works,\nbut uses the resulting schema as the subject for validation.\nNote! The value here is the root value relative to the starting schema, not the value at the nested path.\nlet schema = object({\n  foo: array().of(\n    object({\n      loose: boolean(),\n      bar: string().when(\"loose\", {\n        is: true,\n        otherwise: s => s.strict()\n      })\n    })\n  )\n});\n\nlet rootValue = {\n  foo: [{ bar: 1 }, { bar: 1, loose: true }]\n};\n\nawait schema.validateAt(\"foo[0].bar\", rootValue); // => ValidationError: must be a string\n\nawait schema.validateAt(\"foo[1].bar\", rootValue); // => '1'",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-at",
      "matches": {
        "yup mixed validateat": true
      }
    },
    "4d997348-c452-3090-85e3-cbaa9b5d71e8": {
      "content": "fmt.Errorf(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Errorf(...)",
      "matches": {
        "fe": true
      }
    },
    "4d99abe9-ef0b-3789-929a-b53b6bbf1004": {
      "content": "border-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      }
    },
    "4d9bc2b7-d557-3d92-afa8-f1c89675047d": {
      "content": "clip: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      }
    },
    "4d9e34b6-4646-3743-8f4c-95b2ca9a5612": {
      "content": "/// @notice Explain to an end user what this does\r\n/// @dev Explain to a developer any extra details\r\n/// @return Documents the return variables of a contract’s function state variable\r\n/// @inheritdoc\tCopies all missing tags from the base function (must be followed by the contract name)",
      "doc": "natspec for state variable",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "natspec variable",
      "matches": {
        "///nat_statevariable": true
      }
    },
    "4da7a4d4-f7ac-35b1-8077-4d80229e7309": {
      "content": "border-left: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "4daa9c4f-e396-375c-b1ad-92b59ae0da79": {
      "content": "\\\\url{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "4db59492-17e2-3090-9978-d8ef1f722734": {
      "content": "''${1}''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "''": true
      }
    },
    "4dbbc2be-c1f5-3685-a941-6da66ff7c8be": {
      "content": "renderArgs.put(\"${1}\", ${2});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rena": true
      }
    },
    "4dbf3b6f-b9a8-3e88-95cc-668f29f675fa": {
      "content": "page-break-before right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      }
    },
    "4dc503cd-5a3f-3db0-b86e-00ed28856fe9": {
      "content": "if ${1:Cond} ->\n       ${2:todo};\n   true ->\n       ${3:todo}\nend$4",
      "doc": "if block",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "4dcab21f-ad86-30ff-9413-9a11107fbd81": {
      "content": "std::list<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "4dd20b99-0f39-3a48-acff-9a266f9f6e5c": {
      "content": "import React, { Component } from 'react'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithComponent",
      "matches": {
        "imrc": true
      }
    },
    "4dd4771e-62b7-3e0f-bc8d-f6d83b3feb73": {
      "content": "var ${1:function_name} = function(${2}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vaf": true
      }
    },
    "4dde5a23-8517-35a5-aadc-fa1bacdb14ab": {
      "content": "(when ${1:test} ${0:body})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "4de1c596-de0d-3a91-827e-a5cc7b70f49b": {
      "content": "| map: '${key}'",
      "doc": "Array filter: map",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter map",
      "matches": {
        "map": true
      }
    },
    "4de46e69-7b2c-3b9f-90cf-97eae2396d31": {
      "content": "import \"${1:import file}\"",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      }
    },
    "4dea0831-028e-34e4-80aa-e4c1c9c2f7cc": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% elif %}\n\t$3\n{% else %}\n\t$4\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if/elif/else",
      "matches": {
        "if": true
      }
    },
    "4ded6ff4-652b-3099-afbb-f575e0adb7d1": {
      "content": "class ${1:name} extends ${2:base} {\n\tconstructor(${3:arguments}) {\n\t\tsuper(${3:arguments});\n\t\t${0}\n\t}\n}",
      "doc": "child class (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "child-class-es6-",
      "matches": {
        "base child class": true
      }
    },
    "4df2b295-f703-3cf9-9480-8f94dfab27dd": {
      "content": "elevation: ${1},",
      "doc": "elevation",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "elevation",
      "matches": {
        "e": true
      }
    },
    "4df63ca9-09c8-33a1-a55a-27eb5b920d0f": {
      "content": "(- ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      }
    },
    "4df7cbb3-0619-3b9c-8837-d1a53e6c842c": {
      "content": "|> Enum.map(fn ${1} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to map",
      "matches": {
        ">m": true
      }
    },
    "4dff21ab-4904-3372-b464-1fde939c2539": {
      "content": "flex-direction: ${0:row};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd": true
      }
    },
    "4e01bac9-2eeb-3b60-8916-ededce1fc08b": {
      "content": "aggregate_failures '${1:message}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "agg": true
      }
    },
    "4e039b14-1248-3086-8786-65ea774baa69": {
      "content": "class ${1:Name}Serializer(serializers.Serializer):\n\t${2}",
      "doc": "Django-rest Serializers ``Serializer`` Class",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF Serializer (class)",
      "matches": {
        "serializer": true
      }
    },
    "4e1ce320-8a9a-36fa-832f-67a9c43d86ce": {
      "content": "<li>${1:TARGET}</li>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li": true
      }
    },
    "4e1f3f89-b350-3a36-96d3-d9dedd8664c7": {
      "content": "require 'pry'; binding.pry",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      }
    },
    "4e222820-238a-36d7-822e-c9f01dbbaf4d": {
      "content": "@after-appear=\"$1\"$0",
      "doc": "@after-appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-appear",
      "matches": {
        "afterappearevent": true,
        "vue after-appear": true
      }
    },
    "4e261a7c-a43c-3aea-bd62-c1c9c8aace85": {
      "content": "console.assert(${1:expression}, ${0:obj});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.assert",
      "matches": {
        "ca": true
      }
    },
    "4e2d29c5-75bd-3042-ba2c-76ae2dec4f24": {
      "content": "| escape",
      "doc": "String filter: escape",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter escape",
      "matches": {
        "escape": true
      }
    },
    "4e2d3387-ae82-3f9b-900f-cf23a9019706": {
      "content": "const ${1:function_name} = async (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casf": true
      }
    },
    "4e319eb5-ea30-3fd1-9527-10f43376b440": {
      "content": "this.${1:refName}Ref = React.createRef()",
      "doc": "Create ref statement used inside constructor",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-createref",
      "matches": {
        "cref": true,
        "react createref": true
      }
    },
    "4e32149a-fa47-3368-9ee2-bd66c4de5103": {
      "content": "{{- if .Values.$1.nodeSelector }}\n  nodeSelector:\n{{ toYaml .Values.${1:value_key}.nodeSelector | indent 8 }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nodeselector_spec": true
      }
    },
    "4e32f712-73bf-3f3f-bf8e-aee53bde99b2": {
      "content": "@for ($1)\n\t${2:${VISUAL}}\n@endfor",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@for directive",
      "matches": {
        "for": true
      }
    },
    "4e3490d1-42de-38d9-99a5-e778be0bb4d8": {
      "content": "border-bottom-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      }
    },
    "4e366a59-fa17-3476-9996-f30c31e83c59": {
      "content": "componentWillReceiveProps (nextProps) {\n\t$0\n}",
      "doc": "Invoked when a component is receiving new props. This method is not called for the initial render.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      }
    },
    "4e3fafc7-09bf-39f5-a4d2-e7313226d455": {
      "content": "${1:obj}.next('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "next": true
      }
    },
    "4e4145f8-ee83-33f7-bb77-17a69c8218dc": {
      "content": "${1:FIELDNAME} = serializers.DecimalField(max_digits=${2}, decimal_places=${3})",
      "doc": "Django-rest Serializers ``DecimalField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF DecimalField",
      "matches": {
        "sdecimal": true
      }
    },
    "4e46b6de-b383-3f44-9d52-7d40a4ab371b": {
      "content": "_.fill(${array}, ${value}, ${start}, ${end})",
      "doc": "var array = [1, 2, 3];\n\n_.fill(array, 'a');\nconsole.log(array);\n// => ['a', 'a', 'a']\n\n_.fill(Array(3), 2);\n// => [2, 2, 2]\n\n_.fill([4, 6, 8, 10], '*', 1, 3);\n// => [4, '*', '*', 10]\n\nFills elements of `array` with `value` from `start` up to, but not\nincluding, `end`.\n\n**Note:** This method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-fill",
      "matches": {
        "lodash fill": true
      }
    },
    "4e47761d-d861-3e00-ba7b-ca5183fad65a": {
      "content": "background-clip: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      }
    },
    "4e5da154-9b1c-3558-bf74-5e7c1309c9bd": {
      "content": "it { should set_the_flash('${0}') }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "issf": true
      }
    },
    "4e618fad-d910-33b1-9c3a-9ed4c02772ea": {
      "content": "${1:FIELDNAME} = forms.ModelChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelChoiceField",
      "matches": {
        "fmochoice": true
      }
    },
    "4e655e6d-a086-39e1-8869-56613928cb49": {
      "content": "try ($1) {\n\t$2\n} catch (${3:Exception} ${4:e}) {\n\t$5//${0:TODO}: handle exception\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "lsp",
      "label": "tryresources",
      "matches": {
        "try_resources": true
      }
    },
    "4e6ecdea-62e3-3628-9737-073e7ba62ddc": {
      "content": "<nuxt-link :to=\"{\t${1|name,path|}: '${2:value}', ${3|params,query|}: {\t${4:key}: '${5:value}'\t}\t}\">$6</nuxt-link>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-namedlinkto",
      "matches": {
        "nuxt namedlinkto": true
      }
    },
    "4e718d87-66f4-389d-8bb4-e94a9d28f91d": {
      "content": "_.remove(${array}, ${predicate})",
      "doc": "var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n\nconsole.log(array);\n// => [1, 3]\n\nconsole.log(evens);\n// => [2, 4]\n\nRemoves all elements from `array` that `predicate` returns truthy for\nand returns an array of the removed elements. The predicate is invoked\nwith three arguments: (value, index, array).\n\n**Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\nto pull elements from an array by value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-remove",
      "matches": {
        "lodash remove": true
      }
    },
    "4e75df10-bee2-3cd1-ac9d-3b66d2b72b6c": {
      "content": "shadowOpacity: ${1},",
      "doc": "shadowOpacity",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "shadowOpacity",
      "matches": {
        "sha": true
      }
    },
    "4e785c2d-f300-35d7-b7fd-7a03e11ae13d": {
      "content": "_.sample(${collection})",
      "doc": "_.sample([1, 2, 3, 4]);\n// => 2\n\nGets a random element from `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sample",
      "matches": {
        "lodash sample": true
      }
    },
    "4e798659-1e1a-303d-b61c-0d9a370ec6cb": {
      "content": "if ${1:condition}\n\t${2}\nelse\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "4e7a56a2-5189-3605-8879-c45932571235": {
      "content": "Throws:  $1Exception $2",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Throws (Thr)",
      "matches": {
        "Thr": true
      }
    },
    "4e7ab125-34e0-3b85-9494-8e427cbab10b": {
      "content": "{% ${1:#:tag} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% ... %}",
      "matches": {
        "%": true,
        "tag": true
      }
    },
    "4e82f517-63a9-3088-92e4-6d3c01c9e0bd": {
      "content": "If ${1:condition 1} Then\n\t${2:; True code}\nElseIf ${3:condition 2} Then\n\t${4:; True code}\nElse\n\t${0:; Else code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelif": true
      }
    },
    "4e8584cb-1936-37f7-a723-7ff3563f62da": {
      "content": "class ${1:FORMNAME}(forms.Form):\n\t\"\"\"${2:$1 definition}.\"\"\"\n\n\t${3:# TODO: Define form fields here}",
      "doc": "Form",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "Form",
      "matches": {
        "Form": true
      }
    },
    "4e8f49ee-cd75-3a06-8a92-770e71e1d020": {
      "content": "${1:FIELDNAME} = forms.ChoiceField($2, choices=[${3:CHOICES}], required=${4:False})",
      "doc": "ChoiceField (fchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fchoice",
      "matches": {
        "fchoice": true
      }
    },
    "4e952f3f-1c30-3646-a544-7da1f9053fa5": {
      "content": "vertical-align: middle;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "vertical-align: middle",
      "matches": {
        "vam": true
      }
    },
    "4e98c08e-df34-3ded-8a6b-f2ce0123ec67": {
      "content": "${1:FIELDNAME} = models.CommaSeparatedIntegerField($2)",
      "doc": "CommaSeparatedIntegerField (mcoseint).\n\nThis field is deprecated since 1.9 in favor of CharField with validators.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mcoseint",
      "matches": {
        "mcoseint": true
      }
    },
    "4e9aff67-2e95-33da-88ed-766223a07b8e": {
      "content": "{%- render '${0:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render-": true
      }
    },
    "4e9d330c-0dc3-313c-ba84-3de83e281466": {
      "content": "for ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "for ... end",
      "matches": {
        "for": true
      }
    },
    "4ea6539b-d302-33eb-8d5f-28e38f7563bc": {
      "content": "/**\n * {@inheritdoc}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "@inheritdoc docblock",
      "matches": {
        "inheritdoc": true
      }
    },
    "4eae2d37-5a30-360d-82d4-7ed6cf36fa47": {
      "content": "text-decoration: line-through;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      }
    },
    "4eae7e87-a4a6-37b9-b20a-1b88e88e013f": {
      "content": "render layout:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :layout",
      "matches": {
        "rl": true
      }
    },
    "4eb06da0-6612-3599-a1ce-f9c8848c23df": {
      "content": "str(\"${0:str}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      }
    },
    "4eb58940-d77c-3e23-9a70-f3f3d894d074": {
      "content": "import ${1:module}\n${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      }
    },
    "4eb8f4a1-414f-33dc-ac26-91b8906a1daa": {
      "content": "if ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "4ebaf2ff-0370-3850-9f68-5edf674f4252": {
      "content": "{% spaceless %}\n\t${0:TARGET}\n{% endspaceless %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% spaceless %} ... {% endspaceless %}",
      "matches": {
        "spaceless": true
      }
    },
    "4ebb4986-12a9-3fd7-85af-4ddeaf13d2c8": {
      "content": "resize: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      }
    },
    "4ebf573f-0537-3749-9308-1fa23384fea9": {
      "content": "$this->beConstructedWith($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->beConstructedWith($arg)",
      "matches": {
        "cw": true
      }
    },
    "4ebfd3fe-be4c-3ea3-9e30-6bab1f9b9a46": {
      "content": "sort(${1:x})",
      "doc": "Sort",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sor",
      "matches": {
        "sort": true
      }
    },
    "4ec2df40-e37d-3a63-9235-5d89e55cb88f": {
      "content": "| strip_newlines",
      "doc": "String filter: strip newlines",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter strip newlines",
      "matches": {
        "strip_newlines": true
      }
    },
    "4ec47a50-bb93-3292-941c-e14599118c60": {
      "content": "let ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts let",
      "matches": {
        "tlet": true
      }
    },
    "4ec591b6-ec88-328a-b8f6-88178c508e6f": {
      "content": "$this->shouldBeAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldBeAnInstanceOf('Type')",
      "matches": {
        "sbinstance": true
      }
    },
    "4ec7a5c8-a1a2-3ad8-90d8-a3da9159669a": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React Functional Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-component-with-proptypes",
      "matches": {
        "react component functional proptypes": true,
        "rfcp": true
      }
    },
    "4ec7c543-8a0b-3715-a15b-dfe58258500b": {
      "content": "it { should have_readonly_attribute :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishro": true
      }
    },
    "4ec8a254-6adc-3732-9388-30f29b3ebbe1": {
      "content": "| slice: ${1:0}, ${2:5}",
      "doc": "String filter: slice",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter slice",
      "matches": {
        "slice": true
      }
    },
    "4eccc17b-4726-3ebe-bc59-ee813f3a63e6": {
      "content": "$scope.${1:variable} = ${2:variable}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$va": true
      }
    },
    "4ecde541-d420-3da4-9699-613705bf025c": {
      "content": "<col>$2",
      "doc": "HTML - Defines attributes for table columns",
      "filetype": "html",
      "grammar": "lsp",
      "label": "col",
      "matches": {
        "col": true
      }
    },
    "4ed266c1-6abb-3133-8144-a8a83d06308a": {
      "content": "// rotate, x-axis, y-axis, z-axiz\ngl.glRotatef(${1:angle}, ${2:x}, ${3:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl rotate f",
      "matches": {
        "gl": true
      }
    },
    "4ed790ca-598e-34e8-8651-3b4396f8f817": {
      "content": "render layout: \"${1:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (layout) (rl)",
      "matches": {
        "rl": true
      }
    },
    "4ed8824a-976e-3069-9f3d-0d5b4e4865b9": {
      "content": "%__MODULE__{\n\t${1:key_name}: ${2:value}\n}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%M": true
      }
    },
    "4edd71f1-20ea-39fd-8904-32d638b67bc4": {
      "content": "Main.@bp",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "Debugger breakpoint",
      "matches": {
        "deb": true
      }
    },
    "4ede2596-96cc-31c1-ab11-44e0d6d393a0": {
      "content": "PropTypes.array.isRequired",
      "doc": "Array prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      }
    },
    "4ee12184-b8a9-39d6-a9d2-5e2699602bd2": {
      "content": "border-style: dashed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      }
    },
    "4f02ca5b-9ba9-307b-9e3b-d3b4b12a8e8e": {
      "content": "import React from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nexport const mapStateToProps = state => ({})\n\nexport const mapDispatchToProps = {}\n\nexport const ${1:first} = (WrappedComponent) => {\n  const hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n  hocComponent.propTypes = {}\n\n  return hocComponent\n}\n\nexport default WrapperComponent => connect(mapStateToProps, mapDispatchToProps)(${1:first}(WrapperComponent))",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "hocComponentWithRedux",
      "matches": {
        "hocredux": true
      }
    },
    "4f037439-144b-38aa-a0ec-37401e7fe752": {
      "content": "expect(${1:target}).not.toThrowError(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to throw error (js)",
      "matches": {
        "notthe": true
      }
    },
    "4f153b1f-f04c-34eb-a3a1-9e7221c40d19": {
      "content": "|> Array.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amap": true
      }
    },
    "4f1f6977-d45b-3c22-871e-943e82dd8f05": {
      "content": "${1:name}.foldLeft(${0:first}) {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fldl": true
      }
    },
    "4f202a82-7279-3e23-93fe-37dd4dea89b5": {
      "content": "NSMutableDictionary *${1:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dict": true
      }
    },
    "4f237ce5-4b1c-3fb7-b6ae-c76f0578fe9f": {
      "content": "static propTypes = {\n$0\n}",
      "doc": "",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-static",
      "matches": {
        "prop-types static": true,
        "ptypes": true
      }
    },
    "4f24e75b-4e98-37e2-b2f0-2d084cac185f": {
      "content": "overflow-x visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      }
    },
    "4f24ee61-6ca9-3e45-b8d5-379ec08e713f": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "4f2b66d5-fa0f-33a8-9626-eb3014e49f80": {
      "content": "border-corner-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      }
    },
    "4f31eed5-ad41-363a-8e25-7e7464dd997f": {
      "content": "const ${1:styles} = StyleSheet.create({\n    ${2:container}: {\n        ${3}\n    },\n});",
      "doc": "Create React Native Styled Components StyleSheet",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "StyleSheet",
      "matches": {
        "rn-stylesheet": true
      }
    },
    "4f345faa-d3a4-3723-8be3-6315fcee066a": {
      "content": "beforeMount () {\n\t${0};\n},",
      "doc": "beforeMount lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforemount",
      "matches": {
        "vbeforemount": true,
        "vue lifecycle beforemount": true
      }
    },
    "4f37e088-9e07-35b3-b6c6-b261e2453005": {
      "content": "float: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      }
    },
    "4f3a2189-748d-3558-97e1-5458be8015cc": {
      "content": "after_save :${0:method}",
      "doc": "after_create",
      "filetype": "rails",
      "grammar": "lsp",
      "label": " save",
      "matches": {
        "as": true
      }
    },
    "4f3a8e7e-a1e3-3787-a5e1-c49287142283": {
      "content": "after_validation $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation",
      "matches": {
        "aftv": true
      }
    },
    "4f3d3428-5569-3061-8fb5-ed3361773910": {
      "content": "try {\n  ${0:${VISUAL}}\n} catch (${1:Exception e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      }
    },
    "4f40da4f-0b99-3d38-8a7c-3756a831ded6": {
      "content": "text-wrap: suppress;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      }
    },
    "4f42c974-70ea-3021-b163-1d1ef9d77c7f": {
      "content": "this.state.${1:first}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "state": true
      }
    },
    "4f445a57-e92e-35e8-b9b6-2d6c66930ef9": {
      "content": "font-size-adjust: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      }
    },
    "4f453c0a-599e-3880-b291-7b6cebdd4502": {
      "content": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = (props) => (\n\t\t\t$0\n\t);\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component without PropTypes and ES6 module system but with Implicit Return and props",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessImplicitReturn",
      "matches": {
        "rsi": true
      }
    },
    "4f455862-0976-3c09-a1df-a68d065f014b": {
      "content": "arc(${1:x}, ${2:y}, ${3:width}, ${4:height}, ${5:start}, ${0:stop});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arc": true
      }
    },
    "4f46faad-78c7-3f44-8d88-2348d1a27187": {
      "content": "\\begin{list}\n\t${1:TARGET}\n\\end{list}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{list} \\list": true,
        "list": true
      }
    },
    "4f497813-14f2-32f3-b655-3a03ae0f828d": {
      "content": "<figure id=\"${1}\">\n\t${0}\n</figure>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "figure#": true
      }
    },
    "4f498932-4324-35de-8c66-2e216974f588": {
      "content": "import ${1:package/module}$0",
      "doc": "Import a package or module",
      "filetype": "base",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "im": true
      }
    },
    "4f4e7b3d-1eb1-3883-8fab-fb96e50ebd33": {
      "content": "(defun $1 ($2)\n\t$0)",
      "doc": "",
      "filetype": "lfe",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "4f4fc9db-879d-36bd-8d74-12fdc2edc55d": {
      "content": "before_save :${0:method}",
      "doc": "before_save",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before save",
      "matches": {
        "bs": true
      }
    },
    "4f58bde1-ffc4-3639-961f-6655f504acd6": {
      "content": "import { ${2:second} } from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importDestructing",
      "matches": {
        "imd": true
      }
    },
    "4f59cec7-f77e-315d-8645-595712022183": {
      "content": "${1:FIELDNAME} = forms.FloatField($2, required=${3:False})",
      "doc": "FloatField (ffloat)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ffloat",
      "matches": {
        "ffloat": true
      }
    },
    "4f5abb21-d3ab-3808-a3c8-7c3206e1c44a": {
      "content": "set xtics ${1:#:start}, ${2:#:incr}, ${3:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set xtics start, incr, end",
      "matches": {
        "xtics": true
      }
    },
    "4f615edf-2ff4-3a78-965e-d7a786f69ffe": {
      "content": "<html>\n\t$1\n</html>",
      "doc": "HTML - Defines an html document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "html",
      "matches": {
        "html": true
      }
    },
    "4f7617cf-3847-36eb-bd77-b5c23b4c3657": {
      "content": "${1:FIELDNAME} = forms.FloatField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FloatField",
      "matches": {
        "ffloat": true
      }
    },
    "4f7bc7bc-5356-3b3e-9062-bc04a7a74b34": {
      "content": "${0:obj}.toArray()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toarr": true
      }
    },
    "4f891b4c-1034-3eda-86e0-eeb8a15e57fa": {
      "content": "background-repeat: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backrepeat": true,
        "br": true
      }
    },
    "4f8963ef-0cb8-34da-9b85-694901988a21": {
      "content": "${1:void} ${2:function_name}()\n{\n\t${3}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun0": true
      }
    },
    "4f8976e2-da3e-3b4e-a170-4a729c296663": {
      "content": "$.contains(${1:container}, ${0:contents})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      }
    },
    "4f946629-a777-36b6-b335-11a056f57594": {
      "content": "perform ${1}\n\t${2}\nend-perform\n${0}",
      "doc": "perform .. end-perform",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "perform-end-perform",
      "matches": {
        "pe": true,
        "perform": true
      }
    },
    "4f9993de-b6e9-3b77-99cf-edd689684860": {
      "content": "border-style: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      }
    },
    "4f9e63da-d6c5-3029-b329-196033f0e7db": {
      "content": "{% else %}\n\t$0",
      "doc": "else",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "4fa0f08e-8b72-3b61-ba4a-fd689a4b73b8": {
      "content": "_.uniqBy(${array}, ${iteratee})",
      "doc": "_.uniqBy([2.1, 1.2, 2.3], Math.floor);\n// => [2.1, 1.2]\n\n// The `_.property` iteratee shorthand.\n_.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n// => [{ 'x': 1 }, { 'x': 2 }]\n\nThis method is like `_.uniq` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nuniqueness is computed. The order of result values is determined by the\norder they occur in the array. The iteratee is invoked with one argument:\n(value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqby",
      "matches": {
        "lodash uniqby": true
      }
    },
    "4fac0300-0f3a-3f29-8069-bbd024a2dc23": {
      "content": "function lowercase(${1:string})$0",
      "doc": "character string that contains string with any uppercase letters replaced by their corresponding lowercase letters",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-lowercase",
      "matches": {
        "function lowercase": true
      }
    },
    "4facdad6-8ad8-315d-8617-f0eb2ddf86fe": {
      "content": "#[cfg(${1})]",
      "doc": "#[cfg(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "cfg",
      "matches": {
        "cfg": true
      }
    },
    "4faefe72-5996-3e74-ad4c-1064c13692db": {
      "content": "font-stretch extra-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      }
    },
    "4fafcea9-2eb8-31e6-a1f5-89c399d2a0f9": {
      "content": "each_byte {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_byte": true
      }
    },
    "4fb19a6b-778d-3612-9c8b-a1efde5de8a3": {
      "content": "from django.views.generic import ${1|CreateView,DetailView,FormView,ListView,TemplateView,UpdateView|}",
      "doc": "Generic class-based views",
      "filetype": "views",
      "grammar": "lsp",
      "label": "igenericviews",
      "matches": {
        "igenericviews": true
      }
    },
    "4fb89652-49ca-33c3-8d48-994848217c8d": {
      "content": "${1:slice} = append($1, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "slice = append(slice, value)",
      "matches": {
        "ap=": true
      }
    },
    "4fb8a4c8-1134-3d9f-bdee-e52fa2db2859": {
      "content": "const ${1:actionName} = (${2:arg}) => {\n\treturn {\n\t\ttype: ${3:VISUAL},\n\t\t$2\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "act": true
      }
    },
    "4fbbd975-4bde-3000-a853-3e3e2fc6da8a": {
      "content": "${1:void} ${2:#:method}(${3}) ${4:throws} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      }
    },
    "4fc68703-bc4a-3f8e-adec-275fb7f67e38": {
      "content": "function ${1}(${2})\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function ... end",
      "matches": {
        "function": true
      }
    },
    "4fd29655-bfc2-3a0c-9366-4951d022efa9": {
      "content": "page-break-before always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      }
    },
    "4fd3926e-c155-3135-8d44-407f94a97938": {
      "content": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "catch /pattern/",
      "matches": {
        "catch": true
      }
    },
    "4fd8dbf3-3fc2-38db-b737-aba93696bd41": {
      "content": "<em>$1</em>$2",
      "doc": "HTML - Defines emphasized text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "em",
      "matches": {
        "em": true
      }
    },
    "4fd90344-9d6a-3430-81c0-71449eea9488": {
      "content": "${1:ModelName}::model()->findAllByPk(${2:pk}, ${3:condition},array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindabp": true
      }
    },
    "4fdb3aa2-d421-397f-8504-62ce03774977": {
      "content": "call themis#log(${TARGET})",
      "doc": "",
      "filetype": "vimspec",
      "grammar": "snu",
      "label": "p",
      "matches": {
        "themis#log": true
      }
    },
    "4fdbaf0b-66c7-38a1-aedb-eed4f7cb782d": {
      "content": "const ${1:results} = await ${2:client}.request(\n  ${3:query},\n  ${4:variables}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client-request-variables",
      "matches": {
        "graphql-request client request variables": true
      }
    },
    "4fdfdf9f-f487-3f38-aeee-dc9103d86ec4": {
      "content": "if defined(${1:Resource}[\"${2:name}\"]) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifd": true
      }
    },
    "4fdfe7f5-ec64-3b89-b511-fd1a7a32de0e": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\return ${3:Return parameter description}\n */\n${4:void} ${5:function_name}()\n{\n\t${6}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun0": true
      }
    },
    "4fe269f7-30ae-31d5-a3b4-8e098ef1a284": {
      "content": "\\\\paragraph{${1:paragraph name}}%\n\\\\label{par:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\paragraph",
      "matches": {
        "par": true
      }
    },
    "4fe363eb-069a-3d86-b55f-c14e32e2e982": {
      "content": "${1:obj}.promise(${2:'fx'}, ${3:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "promise": true
      }
    },
    "4fe4204b-e06a-381e-aa62-c176f4729022": {
      "content": "\\\\${1:x} -> ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "λ",
      "matches": {
        "lambda": true
      }
    },
    "4fe4eb01-cda2-363d-a433-40372da4f9ea": {
      "content": "for ${1:name} in [${2:start}...${3:finish}]\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrex": true
      }
    },
    "4feb8dcc-54ed-3b7c-bbcf-125e9d6ec2f6": {
      "content": "&#x2325;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      }
    },
    "4fece24f-7927-343d-af62-12fcf4f998f6": {
      "content": "${1:callbacks}.fired()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfired": true
      }
    },
    "4feef713-ade8-3030-b932-89bdb552ad97": {
      "content": "renderError(h, err) {\n\t$1\n},",
      "doc": "Provide an alternative render output when the default render function encounters an error.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "renderError",
      "matches": {
        "renderError": true
      }
    },
    "4fef67ef-af92-3625-aa8b-2400c1199ecd": {
      "content": "border-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      }
    },
    "4ff1bbba-d662-3f0c-bedc-63d37e9ad31e": {
      "content": "{%- when ${1:condition} -%}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when-": true
      }
    },
    "4ff6edfe-250f-3e44-9eb0-8401ade29b0e": {
      "content": "<input class=\"${1}\" type=\"${2:text/submit/hidden/button/image}\" name=\"${3}\" id=\"${4:$3}\" value=\"${5}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input.": true
      }
    },
    "4ff788d8-b242-3892-b8dc-318c8188def3": {
      "content": "#ifdef ${1:#:SYMBOL}\n${0}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "#ifdef ... #endif",
      "matches": {
        "#ifdef": true,
        "ifdef": true
      }
    },
    "4ffa5610-b67d-3dfc-86d2-a8d967b67a4a": {
      "content": "<svelte:window />",
      "doc": "svelte:window",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window",
      "matches": {
        "s-window": true
      }
    },
    "500466ba-d088-3304-ad3b-c6cc9ecc16fc": {
      "content": "function ord-min(${1:char},${2:...})$0",
      "doc": "min. ordinal position in the program character set corresponding to list of chars",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-ord-min",
      "matches": {
        "function ord-min": true
      }
    },
    "50081c55-6ea3-3555-94a3-ed96a98d6db5": {
      "content": "[Obsolete(\"${1:#:description}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obs dep deprecated": true,
        "obsolete": true
      }
    },
    "50085b45-a60e-3e4d-b547-9f4030b9f345": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "501528a7-eddb-3b1a-b639-f9d0cc598a44": {
      "content": "echo CHtml::script('${0:test}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhjs": true
      }
    },
    "501ccb78-bf9b-3873-8ed6-4c8f35e98c93": {
      "content": "asin($2)",
      "doc": "float asin(float x)\nvec2 asin(vec2 x)\nvec3 asin(vec3 x)\nvec4 asin(vec4 x)\n\nThe asin function returns the arcsine of an angle in radians. It is the inverse function of sine. The input parameter can be a floating scalar or a float vector. In case of a float vector the arcsine is calculated separately for every component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "asin",
      "matches": {
        "asin": true
      }
    },
    "501d03f8-8a98-3cfb-94f0-d73ca7fd1a33": {
      "content": "(${1:name} [${2:this} ${0:args}])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pmethod": true
      }
    },
    "501d2c2b-611c-3fa0-bcd7-6f8c36317b35": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as $4} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      }
    },
    "50207fba-2b50-320f-8e78-cd6769b2b471": {
      "content": "const ${1:name} = ref(${2:initialValue})",
      "doc": "Vue Ref",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Vue ref",
      "matches": {
        "v3ref": true
      }
    },
    "5024a719-2c9b-38c6-bb8b-b348fe19e72f": {
      "content": "v-for=\"${1:item} in ${2:items}\"",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-for-without-key",
      "matches": {
        "vforwithoutkey": true,
        "vue v-for-without-key": true
      }
    },
    "502a481e-d8f0-3e6b-8bd4-f80efa342cd2": {
      "content": "if ${1}\n\t${2}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "full if-else statement",
      "matches": {
        "ife": true
      }
    },
    "5030a003-4fab-34bf-8f0c-c19ca97c5fc9": {
      "content": "{!! $1 !!}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{!! !!} statement",
      "matches": {
        "{!": true
      }
    },
    "5031859d-be8a-3f74-ba31-d3760931495d": {
      "content": "<samp>\n\t${0}\n</samp>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "samp": true
      }
    },
    "5038cc28-2aea-3a03-aad6-54975eb56822": {
      "content": "image::${1:example.jpg}[${2:Description},align=\"center\"]\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Centered image::file[desc]",
      "matches": {
        "imagecenter": true
      }
    },
    "503b76ea-5243-3d66-9ad5-f93993b6dfc6": {
      "content": "font-stretch: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      }
    },
    "504039b8-89eb-34a3-a130-ab76ce012ef7": {
      "content": "@enter-cancelled=\"$1\"$0",
      "doc": "@enter-cancelled=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-cancelled",
      "matches": {
        "entercancelledevent": true,
        "vue enter-cancelled": true
      }
    },
    "504c112f-416e-346f-a171-b66ccb03be10": {
      "content": "${1:key}: {\n\tdeep: ${2:true},\n\timmediate: ${3:true},\n\thandler: function (${4:val}, ${5:oldVal}) {\n\t\t$6\n\t}\n},$0",
      "doc": "Vue Watcher with options.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "watchWithOptions",
      "matches": {
        "watchWithOptions": true
      }
    },
    "5051d5a6-2741-308a-ba1e-7fc6b84bdced": {
      "content": "{{ $1 }}$2",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      }
    },
    "505760ec-734d-3094-8b4c-7a0d99f56479": {
      "content": "render partial:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :partial",
      "matches": {
        "rp": true
      }
    },
    "506a4768-335b-3aca-a418-095c3d368a06": {
      "content": "border-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      }
    },
    "506cc7a8-194c-3ac8-8f76-faddef474861": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor(private httpClient: HttpClient) { }\n\t$0\n}",
      "doc": "Angular service with HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpClient Service",
      "matches": {
        "a-service-httpclient": true
      }
    },
    "50705022-6719-322e-9bac-72136d347f6c": {
      "content": "list-style-type: decimal-leading-zero",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      }
    },
    "507324e1-c850-35e1-9367-e7625887c04c": {
      "content": "lambda {|${1:#:args}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda-keyword": true
      }
    },
    "50736639-b182-33ff-9942-8209276a412a": {
      "content": "grid-template: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      }
    },
    "5073dc0b-ed4d-3d0a-83c1-9189e985042a": {
      "content": "intercept[${1:IllegalArgumentException}] {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intercept": true
      }
    },
    "5077edf2-4734-32bc-ab7e-56ad659679d7": {
      "content": "flexBasis: '${1}',",
      "doc": "flexBasis",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flexBasis",
      "matches": {
        "flex": true
      }
    },
    "507d5862-3edd-34ac-9d3d-47d36b97c82d": {
      "content": "@tag :pending",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tp": true
      }
    },
    "5086f060-ff50-31ae-8969-20a5fdac9aca": {
      "content": "if err != nil {\n\treturn ${1:nil}, err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { return [...], err }",
      "matches": {
        "errn,": true
      }
    },
    "508b3d69-77ad-371d-845b-652103b9f82c": {
      "content": "grid-auto-columns max-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      }
    },
    "509dfcf3-0b24-3e37-9452-0e734613160a": {
      "content": "class ${1:#:name}(${2:object}):\n\t\"\"\"${3:#:class documentation}\"\"\"\n\n\tdef __init__(self, ${4}):\n\t\t\"\"\"${5:#:__init__ documentation}\"\"\"\n\t\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "class Class(...): \"...\"",
      "matches": {
        "classd": true
      }
    },
    "50a20d6c-1fee-323c-a681-93f13a7026e2": {
      "content": "{% macro ${1:#:name}(${2:#:args}) %}\n\t${0:TARGET}\n{% endmacro %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% macro ...(...) %} ... {% endmacro %}",
      "matches": {
        "macro": true
      }
    },
    "50a7d758-0df9-3e1a-a947-eaab69fe1ea0": {
      "content": "this.props.${1:first}",
      "doc": "Access component's props",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "props": true
      }
    },
    "50a980ac-f6d8-3cc3-8600-d3aac173f9fd": {
      "content": "<img src=\"${1}\" alt=\"${2}\">${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "50adf4f5-1115-39f2-aa5a-2d3dd53343d5": {
      "content": "{% spaceless %}$1{% endspaceless %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      }
    },
    "50b3a8c7-92c1-3d99-8575-6bf25625f6dd": {
      "content": "border-right: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      }
    },
    "50b58b32-85c8-3529-aa04-adc419c3e2e3": {
      "content": "border-bottom-right-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      }
    },
    "50c08d5f-470d-3435-92f6-93c2fec05fe8": {
      "content": "<option value=\"${1}\">${2:$1}</option>\nopt+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt+": true
      }
    },
    "50c17148-f6e6-3721-8051-162a78da6082": {
      "content": "useEffect(() => {\n\t$1\n}, [${3:dependencies}])$0",
      "doc": "React useEffect() hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "ue": true
      }
    },
    "50c6213f-8188-3c2b-9369-979da79a29be": {
      "content": "word-break: keep-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      }
    },
    "50c8f054-43cb-392d-9535-8d3ef4bc3e8f": {
      "content": "expect(${1:target}).toBeLessThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be less than (js)",
      "matches": {
        "el": true
      }
    },
    "50cc62f2-9bfb-351e-9291-103108c01d15": {
      "content": "truncatewords:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      }
    },
    "50ccf623-1683-3959-afdc-b383ca4c8ccb": {
      "content": "text-justify: kashida",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      }
    },
    "50d13f7d-4784-3c02-8b0c-0611daa087c5": {
      "content": "(sizeof(${1:#:array}) / sizeof(*($1)))",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array_size": true,
        "sizeof_array": true
      }
    },
    "50d54aac-cc31-3a5a-821b-650aa7272abc": {
      "content": "ambient(${1:value1}, ${2:value2}, ${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ambient": true
      }
    },
    "50d58ff7-f8d3-3d81-a9c3-64f327d88791": {
      "content": "(unless ${1} ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "50d83d22-b9a2-3f9c-9296-a8b13df6e236": {
      "content": "fmt.Printf(\"$1\", ${2:var})",
      "doc": "Snippet for fmt.Printf()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "fmt.Printf",
      "matches": {
        "ff": true
      }
    },
    "50dee70e-d094-3d6e-8046-0661059c7771": {
      "content": "{% from \"${1:template}\" import \"${2:macro}\" %}$0",
      "doc": "from",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "from",
      "matches": {
        "from": true
      }
    },
    "50e125c0-61d6-3010-b04a-b0d9e9765622": {
      "content": "\\addbibresource{${1:resource}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\addbibresource": true,
        "addbibresource": true
      }
    },
    "50e8ea0e-b216-3eea-9506-3165bb35685d": {
      "content": "if ${1}\n\t${2}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "if ... else",
      "matches": {
        "ife": true
      }
    },
    "50f1af78-45d8-3cc5-9594-c632e782e266": {
      "content": "elsif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "elsif",
      "matches": {
        "eif": true
      }
    },
    "50f21cc8-dd11-3408-a78c-78283977fa8d": {
      "content": "transaction(${1:true}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tra": true
      }
    },
    "50f4e8b6-8ad0-3387-9d17-699107b078fd": {
      "content": "REXML::Document.new(File.read('${1:path/to/file}'))",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml-": true
      }
    },
    "50f5fe91-e0f1-3d48-ab5f-791de783e140": {
      "content": "visibility: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      }
    },
    "50f9b938-bb10-34c4-86b5-7d104947594a": {
      "content": "cat(${1:file}, ${2:sep = ${3:\"\"}}, ${4:fill = ${5:FALSE}}, ${6:labels = ${7:NULL}}, ${8:append = ${9:FALSE}})",
      "doc": "Cat",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cat",
      "matches": {
        "cat": true
      }
    },
    "51075f92-7d1f-31e5-95dc-53b88ad700f3": {
      "content": "color: ${1:red};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-name (color)",
      "matches": {
        "color": true
      }
    },
    "510ad54a-4707-37b3-a395-23429f6b3958": {
      "content": "{% $1 %}$2",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      }
    },
    "510f64b5-0199-3666-80df-59f50fbadd20": {
      "content": "[NSGraphicsContext saveGraphicsState];\n${0}\n[NSGraphicsContext restoreGraphicsState];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "save": true
      }
    },
    "51133f17-4e80-3d94-80df-9775d28529e8": {
      "content": "$.map ${1:arrayOrObject}, (${2:value}, ${3:indexOrKey}) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapp": true
      }
    },
    "51142374-03cb-3d43-9519-20a0883e67d8": {
      "content": "border-length: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      }
    },
    "511504be-75ac-3ce4-b434-359c0ed29ba5": {
      "content": "<input type=\"button\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:button": true
      }
    },
    "511a5f84-c06b-316b-b13d-0b61297a3394": {
      "content": "\\begin{align*}\n\t${1:TARGET}\n\\end{align*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{align*} \\align*": true,
        "align*": true
      }
    },
    "5122c180-e88f-3e9f-a711-f9364b2ab35c": {
      "content": "{% endif %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endif",
      "matches": {
        "endif": true
      }
    },
    "512385c4-3fd3-31a3-893b-700f1da6799c": {
      "content": "use { '$1' }",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "Use",
      "matches": {
        "use": true
      }
    },
    "5130a1d4-7f80-349c-a03a-912c0ecebbea": {
      "content": "chan ${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "channel",
      "matches": {
        "ch": true
      }
    },
    "5139e8e0-bc75-3c36-982d-7dd830b84931": {
      "content": "loadVariables(${1:url}, ${2:target}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lv": true
      }
    },
    "513f94e6-7862-3d50-be42-c68bf83bef1c": {
      "content": "box-sizing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      }
    },
    "5140c931-9c51-3d0f-825a-27f6741fe4ea": {
      "content": "${1:obj}.slice(${2:start}${3:, end})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "5145bee8-5b30-3e08-b2c6-b8be08a33c67": {
      "content": "${1:deferred}.progress(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprog": true
      }
    },
    "514c2f37-8a7a-3d0e-8e65-d1da550cf894": {
      "content": "{\n\t\"type\": \"color\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_color": true
      }
    },
    "51509460-e952-3f24-8b08-8b49ad3caa1d": {
      "content": "_.stubFalse()",
      "doc": "_.times(2, _.stubFalse);\n// => [false, false]\n\nThis method returns `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubfalse",
      "matches": {
        "lodash stubfalse": true
      }
    },
    "5151844a-5ac7-3617-b4d7-348edb8c4333": {
      "content": "main = do\n  ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "main = do",
      "matches": {
        "main": true
      }
    },
    "51688573-dbf2-3265-9400-ac42c6459d89": {
      "content": "abstract class ${1:name}${2:(arg)}${3: extends }${4: with} {\n\t${5:override def toString = \"$1\"}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abstract": true
      }
    },
    "516b657c-b808-3aa2-bfb5-3e84bac6159b": {
      "content": "class ${1:FORMNAME}(forms.Form):\n\n\t${2:# TODO: Define form fields here}",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Form",
      "matches": {
        "form": true
      }
    },
    "516bf1b3-44ff-3615-8f53-208a20da0441": {
      "content": "useEffect(() => {\n\t$1\n}, [${3:dependencies}])$0",
      "doc": "React useEffect() hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "ue": true
      }
    },
    "517237dc-3f7e-3a59-b4fc-574bc543b861": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdownc": true
      }
    },
    "5179929b-2f77-3c08-b7da-eb6dd94aa4c9": {
      "content": "v-else-if=\"${1:condition}\"",
      "doc": "Expects: any. previous sibling element must have v-if or v-else-if.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-else-if",
      "matches": {
        "velseif": true,
        "vue v-else-if": true
      }
    },
    "517ea41a-6299-3431-8bdb-3b541e1d01d7": {
      "content": "{% autoescape ${1:true} %}\n\t$2\n{% endautoescape %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "autoescape",
      "matches": {
        "autoescape": true
      }
    },
    "5183180b-1181-3515-9eb6-569e522835f9": {
      "content": "{#each ${1:items} as ${2:item}, (${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-key-block",
      "matches": {
        "sveach-key": true,
        "svelte each key": true
      }
    },
    "51872178-16f5-3351-bc36-70a8c48e7696": {
      "content": "map do |${1:e}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert map multiline block",
      "matches": {
        "mapd": true
      }
    },
    "518b7e57-62fc-39ca-8e73-8b924c38c3f7": {
      "content": "with ${1:item} <- ${2:items} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wi": true
      }
    },
    "518e513e-4af7-35fc-ae8b-adfafede572b": {
      "content": "class:${1:name}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class-short",
      "matches": {
        "svcls": true,
        "svelte class short": true
      }
    },
    "5196f1f9-c7ff-3490-b4a0-7c4cf7aca7df": {
      "content": "[formGroup]=\"${1:form}\"",
      "doc": "Angular formGroup",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformgroup",
      "matches": {
        "a-formgroup": true,
        "angular ng form group": true
      }
    },
    "519b9088-3cd3-3d5a-8c57-97387f4256f6": {
      "content": "{{ STATIC_URL }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "staticu": true
      }
    },
    "519c0964-e5e9-3736-8fcd-d0dd151e74ef": {
      "content": "{% assign ${1:#:var} = ${2:#:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign": true
      }
    },
    "519c3504-3ebe-3a2d-91c0-843e605d2efe": {
      "content": "$this->shouldNotBe$1();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotBeXYZ()",
      "matches": {
        "snbstate": true
      }
    },
    "519f3778-33d0-323f-baca-43e4bd89e8be": {
      "content": "dictsort:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      }
    },
    "51acd46f-6fce-3c58-befb-e02b36f91d03": {
      "content": "function ${1:name}(${2:type} ${3:name}) view public returns (${4:type} ${5:name}) {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "function view declaration",
      "matches": {
        "funcrview": true
      }
    },
    "51b11fcb-f1a1-37aa-855a-8d8f1757da15": {
      "content": "<base href=\"${1}\" target=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "base": true
      }
    },
    "51b3849d-2c19-318e-83cf-d8c54719e9d2": {
      "content": "async function ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "async function",
      "matches": {
        "asf": true
      }
    },
    "51bb207b-3bd4-3e7c-8e05-e049bcb1db31": {
      "content": "var ${1} ${2} = ${3}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variable declaration",
      "matches": {
        "var": true
      }
    },
    "51ca970b-12d2-3553-8b6c-db19a4d05272": {
      "content": "<button type=\"${1:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button": true
      }
    },
    "51d5497f-e7ac-30e8-9d15-ecd37e9cf37b": {
      "content": "continue;",
      "doc": "The keyword continue is used inside the body of a loop to abort a single pass of the loop. All statements in the body after the continue statement are ignored and the next iteration of the loop is executed immediately.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "continue",
      "matches": {
        "continue": true
      }
    },
    "51d5e4a4-4be7-310f-b203-ae672976533e": {
      "content": "{% ifchanged $1 %}\n  \n{% endifchanged %}",
      "doc": "ifchanged tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ifchanged",
      "matches": {
        "ifchanged": true
      }
    },
    "51d603c1-3e71-3289-8a90-3f350de0e5bf": {
      "content": "__MODULE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "MOD": true
      }
    },
    "51da9ec4-5643-3c11-8d36-89b58cf94ffe": {
      "content": "static if(${1}) {\n\t${2}\n} else {\n\t${3}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sife": true
      }
    },
    "51dead5b-c8bb-3271-9df1-7378bbef9807": {
      "content": "useImperativeHandle(\n  ${1:first},\n  () => {\n    ${2:second}\n  },\n  [${3:third}],\n)",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useImperativeHandle",
      "matches": {
        "useImperativeHandleSnippet": true
      }
    },
    "51dfc65a-361d-3835-bf9e-035a9ce77af7": {
      "content": "place-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      }
    },
    "51e0f6b4-38b0-398a-a2f9-fa071a6da271": {
      "content": "debug(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "51e12499-98c6-3c37-90c7-9ff03877a9a8": {
      "content": "apply(${1:X}, ${2:MARGIN}, ${3:FUN}, ${4:...})",
      "doc": "Apply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "app",
      "matches": {
        "apply": true
      }
    },
    "51e4652a-b9ee-3070-bc31-b44f4519df1b": {
      "content": "refute_instance_of ${1:UnexpectedClass}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfio": true
      }
    },
    "51e880c3-47c6-3f18-ac19-ca745583ba55": {
      "content": "${1:FIELDNAME} = models.AutoField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "auto": true
      }
    },
    "51eccba6-9c76-31f9-8c20-224b4f6ba0c7": {
      "content": "outline ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      }
    },
    "51ecd262-ffc8-37ef-8e44-47767f8f2733": {
      "content": "@doc \"\"\"\n${1:doc}\n\"\"\"\ndef ${2:name} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "def + doc",
      "matches": {
        "defd": true
      }
    },
    "51f55138-ebee-3ed4-8454-68b161afc85b": {
      "content": "${1:obj}.remove()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rem": true
      }
    },
    "51f71618-5537-396d-bf6c-7d09be111720": {
      "content": "background: #${1:fff} url('${2}') ${3:0} ${4:0} ${0:no-repeat}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      }
    },
    "52009940-29bb-32a7-a41f-5703f2f55f75": {
      "content": "vertical-align: super;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      }
    },
    "52018cf9-35aa-3a37-aebd-61c8e9229454": {
      "content": "cor.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cor": true
      }
    },
    "520448ce-52de-3e6b-ab13-7140f8294af1": {
      "content": "${0:// Parameters are the same for glGenBuffers}\ngl.glDeleteBuffers(${1:4}, ${2:bufferObjects});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl delete buffers",
      "matches": {
        "gl": true
      }
    },
    "520451d7-0a08-3e4e-a46d-c50fb0dbc5dc": {
      "content": "{% for ${1:item} in ${2:collection} %}\n\t$3\n{% endfor %}",
      "doc": "Iteration tag: for",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag for",
      "matches": {
        "for": true
      }
    },
    "520c8bc8-6803-3b3d-867c-3ae6868e4ee5": {
      "content": "CustomScrollView(\n  slivers: <Widget>[\n  ${0:}\n  ],\n),",
      "doc": "Creates a `ScrollView` that creates custom scroll effects using slivers. If the `primary` argument is true, the `controller` must be null.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Custom Scroll View",
      "matches": {
        "customScrollV": true
      }
    },
    "520e5825-3093-3beb-b761-2627dc0f3949": {
      "content": "{\n\t\"type\": \"blog\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema blog dropdown",
      "matches": {
        "_blog": true
      }
    },
    "5215fec0-3bc0-37fa-9a15-fee360e7757e": {
      "content": "<meta name=\"author\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaauthor": true
      }
    },
    "521ef312-b6e4-3b47-8cee-b8f88bdc1572": {
      "content": "for (let ${1:prop} in ${2:object}) {\n\t${0:$2[$1]}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "5222f635-f4ae-36c7-8b57-64bde61c5d76": {
      "content": "(condp ${1:pred} ${2:expr}\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "condp": true
      }
    },
    "52329546-31f8-3297-bec6-c0e17ae8b58a": {
      "content": "apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: {{ template \"$2.fullname\" . }}-data-pv\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n\tid: {{ template \"${2:chartName}.name\" . }}-data-pv\n\ttype: nfs-volume\nspec:\n  capacity:\n\tstorage: {{ .Values.$1.persistence.nfs.capacity }}\n  accessModes:\n  - ReadWriteOnce\n  persistentVolumeReclaimPolicy: Retain\n  nfs:\n\tserver: {{ .Values.$1.persistence.nfs.ip }}\n\tpath: \"{{ .Values.${1:value_key}.persistence.nfs.haDataMount }}\"\n\treadOnly: false\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pv_nfs_spec": true
      }
    },
    "523d1e82-dc2d-34c7-9eb5-2ffe77950aae": {
      "content": "${1:app}.get('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express GET",
      "matches": {
        "eget": true
      }
    },
    "5262e54f-83d8-319e-b72f-8ad70ff32784": {
      "content": "text-justify: distribute;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      }
    },
    "526775e6-3731-340c-971d-f45a46216a8f": {
      "content": "destroyed () {\n\t${0};\n},",
      "doc": "destroyed lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle destroyed",
      "matches": {
        "vdestroyed": true
      }
    },
    "526c9f3e-f28c-3d53-9fa8-7a79a6588d3e": {
      "content": "@override",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@override",
      "matches": {
        "@over": true
      }
    },
    "527876da-ea68-3c50-b87b-7d597c6d7825": {
      "content": "while ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "527f335c-997d-3d8e-8950-65c9932165b8": {
      "content": "font-stretch: condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      }
    },
    "52807757-20f5-3a9d-b9ba-8abd57d5846e": {
      "content": "println(${1})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "println()",
      "matches": {
        "p": true
      }
    },
    "52891995-9e33-3eed-afee-790ce63a55ec": {
      "content": "if err != nil {\n\t${1:return ${2:nil, }${3:err}}\n}",
      "doc": "Snippet for if err != nil",
      "filetype": "go",
      "grammar": "lsp",
      "label": "if err != nil",
      "matches": {
        "ir": true
      }
    },
    "528a4d56-a1c3-32f0-b676-bc0264dcc9da": {
      "content": "assert_operator ${1:left}, :${2:operator}, ${3:right}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aso": true
      }
    },
    "528ff3d1-d023-3706-9aa2-9e6e359ad323": {
      "content": "self.${1:var_name} = kwargs.get('$1', ${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kwg": true
      }
    },
    "529116a3-da23-30f1-ab57-d5c9e93765d0": {
      "content": "it '${1:description}', ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "it (coffee)",
      "matches": {
        "it": true
      }
    },
    "5291a989-f714-385e-9282-c02304246919": {
      "content": "axios.interceptors.request.use(function (config) {\n\t${1:do something}\nreturn config;\n}, function (error) {\n\t${2:do something}\n$return Promise.reject(error);\n});",
      "doc": "You can intercept requests before they are handled by then or catch.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-interceptors-request",
      "matches": {
        "axios interceptors request": true
      }
    },
    "52921cc6-9773-3e6d-b2c1-453edf5722fe": {
      "content": "componentWillUpdate (nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked immediately before rendering when new props or state are being received.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentWillUpdate",
      "matches": {
        "cwup": true
      }
    },
    "5293a048-707a-3efe-a67b-8498cdf6be77": {
      "content": "source(\"${1:file.R}\")",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "source",
      "matches": {
        "src": true
      }
    },
    "5293f195-fd29-36a1-b88e-84997f2bb849": {
      "content": "while (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "52969c9b-42f9-3350-afcc-0ebce2115729": {
      "content": "flex-wrap: wrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:w": true
      }
    },
    "529cbb4d-ff65-360b-ae9e-076ed24b04c6": {
      "content": "dlply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      }
    },
    "52a12d56-49c8-331a-8025-5a59ffe85b7f": {
      "content": "std::unordered_map<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "umap": true
      }
    },
    "52a2116d-2362-37a1-9aac-ab35d08402ea": {
      "content": "import ${1|onBeforeMount,onMounted,onBeforeUpdate,onUpdated,onBeforeUnmount,onUnmounted,,onActivated,onDeactivated,onErrorCaptured,onRenderTracked,onRenderTriggered|} from '${2|vue,@vue/composition-api|}'",
      "doc": "Import Lifecycle hooks to use in file",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3lifecyclehook-import",
      "matches": {
        "vue v3 importlifecyclehook": true
      }
    },
    "52a211f7-a80c-3672-8e3e-6e71366fdc82": {
      "content": "else if ($1)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "elseif": true
      }
    },
    "52a22473-3284-3d3f-9173-5f81320f1da4": {
      "content": "string.url()",
      "doc": "string.url(message?: string | function): Schema\n\nValidates the value as a valid URL via a regex.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-url",
      "matches": {
        "yup string url": true
      }
    },
    "52a406f6-c930-399d-8c6c-caf99491eb6c": {
      "content": "enforce(${1:/*condition*/},\n\tnew $2Exception(${3:/*args*/}));",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "enforce (enf)",
      "matches": {
        "enf": true
      }
    },
    "52ab944e-4f3f-3370-9e31-486e57f49326": {
      "content": "-ifdef(TEST).\n\n${1}_test() ->\n\t${0}\n\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itest": true
      }
    },
    "52ac47b6-5107-33f7-a5e8-488e379ed002": {
      "content": "import _root_.net.liftweb.http._\nimport S._\nimport _root_.net.liftweb.util._\nimport Helpers._\nimport _root_.scala.xml._",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liftimports": true
      }
    },
    "52aca8a1-0084-3065-9d7b-7f171e58925a": {
      "content": "margin-left: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-left: length (margin)",
      "matches": {
        "margin": true
      }
    },
    "52ad1bef-cc0f-3e3c-8cce-ec7f420ec062": {
      "content": "spec:\n  type: \"{{ .Values.$1.service.type }}\"\n  clusterIP: \"{{ .Values.$1.service.clusterIP }}\"\n{{- if .Values.$1.service.externalIPs }}\n  externalIPs:\n{{ toYaml .Values.$1.service.externalIPs | indent 4 }}\n{{- end }}\n{{- if .Values.$1.service.loadBalancerIP }}\n  loadBalancerIP: \"{{ .Values.$1.service.loadBalancerIP }}\"\n{{- end }}\n{{- if .Values.$1.service.loadBalancerSourceRanges }}\n  loadBalancerSourceRanges:\n{{ toYaml .Values.$1.service.loadBalancerSourceRanges | indent 4 }}\n{{- end }}\n{{- if and (semverCompare \">=1.7-0\" .Capabilities.KubeVersion.GitVersion) (.Values.$1.service.externalTrafficPolicy) }}\n  externalTrafficPolicy: \"{{ .Values.$1.service.externalTrafficPolicy }}\"\n{{- end }}\n{{- if and (semverCompare \">=1.7-0\" .Capabilities.KubeVersion.GitVersion) (.Values.$1.service.healthCheckNodePort) }}\n  healthCheckNodePort: {{ .Values.${1:value_key}.service.healthCheckNodePort }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_spec": true
      }
    },
    "52addb5e-4956-3bb9-b659-4798e1b46943": {
      "content": "afterUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "afterUpdate lifecycle function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-after-update",
      "matches": {
        "s-lifecycle-after-update": true
      }
    },
    "52ae2219-dceb-3e1c-b7d7-8c9ae180e924": {
      "content": "if (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "52ae9a61-aa59-3801-a4a1-3a26160415ef": {
      "content": "enum ${1:Name}\n{\n    $0\n}",
      "doc": "Enum",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Enum",
      "matches": {
        "enum": true
      }
    },
    "52b51bab-18e6-31cb-b9eb-3c2c97897170": {
      "content": "xhr :post, :${1:create}, ${2:object}: ${3:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xpost": true
      }
    },
    "52b8c995-7dfd-3b59-b802-1374db000b0c": {
      "content": "_.invoke(${object}, ${path}, ${args})",
      "doc": "var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\n_.invoke(object, 'a[0].b.c.slice', 1, 3);\n// => [2, 3]\n\nInvokes the method at `path` of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invoke",
      "matches": {
        "lodash invoke": true
      }
    },
    "52b9d029-6818-3a16-81a4-9426854cfd48": {
      "content": "PERFORM ${1:paragraph-name} VARYING ${2:field-1}\n FROM ${3:value-1} BY ${4:value-2}\n UNTIL ${5:condition}\n$0",
      "doc": "INLINE PERFORM VARYING",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "PERFORM VARYING",
      "matches": {
        "PERFORM": true,
        "PV": true
      }
    },
    "52bc3b1b-c859-3076-977d-d9ea658503e2": {
      "content": "${1:deferred}.progress(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprog": true
      }
    },
    "52bea315-f17e-3b50-baa5-f6b96e5b2218": {
      "content": "switch (${1:switch_on}) {\n\tdefault:\n\t\t$0\n\t\tbreak;\n}",
      "doc": "Code snippet for switch statement",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "52c8f782-356d-3656-9b9a-c262e8b974a4": {
      "content": "{% endembed %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endembed",
      "matches": {
        "endembed": true
      }
    },
    "52cada7b-c1d0-3a29-986e-d6a7a51be4d7": {
      "content": "<header>\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header": true
      }
    },
    "52ce470d-2bae-3359-aa76-1ecda5cbce0b": {
      "content": "useMemo(() => ${1:first}, [${2:second}])",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useMemo",
      "matches": {
        "useMemoSnippet": true
      }
    },
    "52d0e782-5e9e-3ddd-9edb-d41199190f00": {
      "content": "add_executable(${1:bin})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bin": true
      }
    },
    "52d754bc-405d-3711-87c7-044d530f7c9f": {
      "content": "@staticmethod\ndef ${1:funcname}(${2:parameter_list}):\n\t${3:pass}",
      "doc": "Code snippet for a static class method",
      "filetype": "python",
      "grammar": "lsp",
      "label": "def(static class method)",
      "matches": {
        "def static class method": true
      }
    },
    "52d8e8bc-1d67-3477-981b-b68374e7310c": {
      "content": "<map name=\"${1}\">\n\t<area shape=\"${2}\" coords=\"${3}\" href=\"${4}\" alt=\"${5}\" />${6}\n</map>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map+": true
      }
    },
    "52e11f45-2d03-31c0-8803-1930e03dbb52": {
      "content": "@impl true\ndef ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      }
    },
    "52e52164-7975-3900-a905-86b19f8fea75": {
      "content": "__import__('nose').tools.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nosetrace": true
      }
    },
    "52e5f27b-f000-3b9b-beb5-be6cf24da7df": {
      "content": "hsla(${1:360}, ${2:100}%, ${3:100}%, ${4:0.5})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color hsla",
      "matches": {
        "hsla": true
      }
    },
    "52e63479-4a01-3e53-a0a6-30fe6aa998b8": {
      "content": "border-top-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti": true
      }
    },
    "52e6c0db-85b7-3a10-bdc5-1a8ddff02619": {
      "content": "hue(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hue": true
      }
    },
    "52eacb4a-ae93-304f-854e-0cbfdf362ff0": {
      "content": "trait ${1:name}${2: extends }${3: with} {\n\t${0:}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trait": true
      }
    },
    "52ebd0a9-3ec2-372c-ba9b-a4d516547024": {
      "content": "point(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "point": true
      }
    },
    "52f1993b-99d6-34af-894b-f1e8ac87244a": {
      "content": "text-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh": true
      }
    },
    "52f5a44f-aa8c-35b0-b950-28c55e7dd496": {
      "content": "echo CHtml::hiddenField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhhf": true
      }
    },
    "5300732d-86db-3278-b753-933c662c7b71": {
      "content": "visibility: collapse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      }
    },
    "530c56a2-908d-3db7-b31e-d0001e9cada4": {
      "content": "font-emphasize-position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      }
    },
    "5313b76c-481e-35cd-b07b-e73a0f83714e": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dec": true
      }
    },
    "53195dbf-556a-3ff1-b631-d23f2eb757e4": {
      "content": "import '${1:module}';$0",
      "doc": "Imports entire module in ES6 syntax without module name",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importnomodulename",
      "matches": {
        "base import no module name": true
      }
    },
    "531b6434-ccf4-39c0-bdd4-10f6063f6dfd": {
      "content": "const [${1:state}, ${2:dispatch}] = useReducer(${3:reducer});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useReducer",
      "matches": {
        "userd": true
      }
    },
    "531ba37d-69b0-3aed-96af-7b8ca6ac75fd": {
      "content": "{% include '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% include '...' %}",
      "matches": {
        "include": true
      }
    },
    "5324d1d4-c896-3b40-9f84-917643c05d06": {
      "content": "pub struct ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub struct",
      "matches": {
        "pubstruct": true
      }
    },
    "53263063-2eec-331f-8bd8-ab9b485d00cd": {
      "content": "'''''${1}'''''",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "'''''": true
      }
    },
    "532a5b46-e82d-334a-b485-f437fde235ff": {
      "content": "import { useStaticQuery, graphql } from \"gatsby\"",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-usestaticquery-import",
      "matches": {
        "gatsby import usestaticquery": true
      }
    },
    "532aef94-3c78-3fa0-bf5e-472a7385e8e3": {
      "content": "-webkit-border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      }
    },
    "532bbca0-9b5c-33c0-900e-a5b415c90655": {
      "content": "kv.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kvt": true
      }
    },
    "532ede57-6d30-3063-985c-c833097ddd89": {
      "content": "<dialog>$1</dialog>$2",
      "doc": "HTML - Defines a dialog (conversation)",
      "filetype": "html",
      "grammar": "lsp",
      "label": "dialog",
      "matches": {
        "dialog": true
      }
    },
    "532eea57-707b-3a76-bf6b-eba1cb841c4e": {
      "content": "borderLeftColor: ${1},",
      "doc": "borderLeftColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderLeftColor",
      "matches": {
        "bor": true
      }
    },
    "533173bf-e14c-38ca-91e5-a5de51f56c58": {
      "content": "each_byte { |${1:byte}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eab": true
      }
    },
    "53346b76-110e-3a97-b791-b6df44dcacb3": {
      "content": "real, intent(in)  ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real intent(in)",
      "matches": {
        "rei": true
      }
    },
    "5340b0e3-172d-35b0-a508-2b1a66d3bc2a": {
      "content": "on (${1}) {\n\t${2}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      }
    },
    "5349daf4-d4ca-35bd-a6c7-276e573421e4": {
      "content": "${1}\t=> ${0}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        ">": true
      }
    },
    "534d533b-f3c8-3281-8a42-005a91d8b430": {
      "content": "data() {\n\treturn {\n\t\t$1\n\t}\n},$0",
      "doc": "The data object for the Vue instance.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "data",
      "matches": {
        "data": true
      }
    },
    "534fb3b5-0326-3a38-8c73-81e6975a2f64": {
      "content": "while (${1:obj}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "5352d6ac-39f0-3a71-9bc6-2e4ab5bc1941": {
      "content": "[${1:text}](${2:link})$0",
      "doc": "Insert link",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert link",
      "matches": {
        "link": true
      }
    },
    "535a4681-12c4-33a1-b244-2fa9914a9af5": {
      "content": "import std.stdio, std.string, std.array;\nimport std.traits, std.conv, std.algorithm;\nimport std.math, std.regex;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "theusual": true
      }
    },
    "535afc88-bfd5-3e7b-a56d-98729127706b": {
      "content": "align-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      }
    },
    "535b6b1d-6772-30a1-bec6-d8528a3073e8": {
      "content": "font-style: oblique;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      }
    },
    "5370db95-5a9a-33df-9890-782e987a76f4": {
      "content": "${1:FIELDNAME} = models.FilePathField(path=${2:\"/abs/path/to/dir\"}${3:, max_length=100}${4:, match=\"*.ext\"}${5:, recursive=True}${0:, blank=True, })",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filepath": true
      }
    },
    "53815d0a-f913-30f9-844d-4238bc5b1c7d": {
      "content": "Object.entries(${1:obj})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.entries",
      "matches": {
        "oe": true
      }
    },
    "538781b1-120e-31d5-8127-774b740f0636": {
      "content": "widows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      }
    },
    "538a3403-e0c5-3f19-9579-30d86b8cc8fe": {
      "content": "if ${1:condition}\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "538d6f6a-3f97-3f74-879a-67189d050c2e": {
      "content": "_.overSome(${predicates})",
      "doc": "var func = _.overSome([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => true\n\nfunc(NaN);\n// => false\n\nCreates a function that checks if **any** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-oversome",
      "matches": {
        "lodash oversome": true
      }
    },
    "538f8fe1-79d7-3e96-a51a-d02ca6e3798b": {
      "content": ".not.",
      "doc": "Not",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "not",
      "matches": {
        "not": true
      }
    },
    "538fefc1-3ea4-3eb5-890d-406dd34001d0": {
      "content": "\\\\left( ${0:${VISUAL}} \\\\right)",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left( right)",
      "matches": {
        "lr(": true
      }
    },
    "53907480-7ae1-31dc-a6f2-04f894b1e774": {
      "content": "PropTypes.string",
      "doc": "String prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      }
    },
    "53942ba3-1b55-3815-8d72-bfd6df5f0670": {
      "content": ":after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":a": true
      }
    },
    "53949958-22a3-397c-9f29-70be978ee460": {
      "content": "<c:otherwise>\n\t${0}\n</c:otherwise>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cother": true
      }
    },
    "5398c353-17c7-3c5c-a3b6-45e825ccd2b3": {
      "content": "NSLog(@\"${1:%@}\"${2});",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "5399b5f9-f6a1-3387-8217-c08f12a0156f": {
      "content": "\\\\begin{split}\n\t${0:${VISUAL}}\n\\\\end{split}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "split environment",
      "matches": {
        "spl": true
      }
    },
    "539b4867-ac7d-3d58-97e6-6075fb1d68e4": {
      "content": "border-style dot-dash",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      }
    },
    "539d389e-64a4-329c-9023-fcfea808e8b6": {
      "content": "justify-content flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      }
    },
    "539d99c9-816f-33b6-8237-d27ceaf0309f": {
      "content": "if ${1:condition} {\n\t$2\n} else {\n\t$0\n}",
      "doc": "Snippet for if else",
      "filetype": "go",
      "grammar": "lsp",
      "label": "if else statement",
      "matches": {
        "ife": true
      }
    },
    "53a0f4d0-fc65-318b-8b87-7440712f89b2": {
      "content": "mat2($2, $3)",
      "doc": "The data type mat2 is used for floating point matrices with two times two components in column major order. There are several ways to initialize a matrix:\n• Components are specified by providing a scalar value for each component (first example). The matrix is filled column by column.\n• Components are specified by providing one scalar value. This value is used for the components on the main diagonal (the second example is equivalent to the first).\n• Components are specified by providing a combination of vectors and scalars. The respective values are used to initialize the components column by column. The arguments of the constructor must have at least as many components as the matrix that is initialized.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mat2",
      "matches": {
        "mat2": true
      }
    },
    "53aa410b-c91f-3d78-b969-d95c9652ccd3": {
      "content": "expect(${1:target}).not.toHaveBeenCalled();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to have been called (js)",
      "matches": {
        "nthbc": true
      }
    },
    "53ae1c8a-5b10-362b-9245-1ce1e6c4d3e8": {
      "content": "<%= link \"${1:Submit}\", to: ${2:\"/users\"}, method: ${3::delete} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "link",
      "matches": {
        "lin": true
      }
    },
    "53ae8b23-34ef-32f9-b0a2-c4be7c10ed9f": {
      "content": "\\\\cdot {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "dot product",
      "matches": {
        ".": true
      }
    },
    "53bb252b-7d68-3222-ade2-8665e876b2c3": {
      "content": "static public final ${1:String} ${2:var} = ${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      }
    },
    "53bb9e8c-9bcd-3b36-8721-12c357362fa7": {
      "content": "bind:${1:property}={${2:variable}}",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-property",
      "matches": {
        "s-bind-property": true
      }
    },
    "53bd29c2-006c-3dff-a8f9-fe761a97f808": {
      "content": "{% include \"$1\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "53c6fdaf-de9c-3cbb-93fe-330fc6d661cc": {
      "content": "import ${0:Data.Text}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      }
    },
    "53cc4a9c-a253-3c6b-ac3a-759ecaaf621e": {
      "content": "&#x2190;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "left": true
      }
    },
    "53cfa2a6-d9ab-3efb-bc1f-1bd575f247c2": {
      "content": "{% do view.registerCssFile(\"${1:/resources/css/global.css}\") %}\n$0",
      "doc": "registerCssFile",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "css1",
      "matches": {
        "css": true
      }
    },
    "53d3ff02-81bd-3bbb-8cc7-ffbd61d4121d": {
      "content": "grid-auto-rows: max-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      }
    },
    "53d78ca6-40dc-37ff-b95a-166396670f2f": {
      "content": "def __getattr__(self, name):\n\t${1:pass}\n\ndef __setattr__(self, name, value):\n\t${2:pass}\n\ndef __delattr__(self, name):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for customizing attribute access",
      "matches": {
        "attr": true
      }
    },
    "53d84dd1-4f9f-3e8e-bfd4-b490caccaf05": {
      "content": "<%= password_input ${1:f}, :${2:password} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "password_input",
      "matches": {
        "pi": true
      }
    },
    "53d999e6-0d67-3697-ba7a-84b09ec9fdd7": {
      "content": "v-html=\"${1:html}\"",
      "doc": "Expects: string. Updates the element’s innerHTML.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-html",
      "matches": {
        "vhtml": true,
        "vue v-html": true
      }
    },
    "53db3597-393b-3666-b7cb-25a2a1186184": {
      "content": "white-space-collapse: break-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      }
    },
    "53e1e278-2535-39f1-91e3-319a8dff35dc": {
      "content": "${1:condition} ?? ${2:value-if-true} !! ${3:value-if-false};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true
      }
    },
    "53e2d9d7-382c-36e2-bbfe-0103467288e4": {
      "content": "# File resource\nfile ${1:\"/path/to/file\"} do # Path to the file\n\t${2:#}backup ${3:5} # How many backups of this file to keep. Set to false if you want no backups.\n\t${4:#}owner ${5} # The owner for the file\n\t${6:#}group ${7} # The group owner of the file (string or id)\n\t${8:#}mode ${9} # The octal mode of the file (4-digit format)\n\t${10:#}content ${11:nil} # A string to write to the file. This will replace any previous content if set\n\n\t${12:#}${13:action :create} # Create this file (Default)\n\t${14:#}${15:action :delete} # Delete this file\n\t${16:#}${0:action :touch} # Touch this file (update the mtime/atime)\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      }
    },
    "53e33505-b71b-3c5f-852b-cdba0e0135e2": {
      "content": "it { should have_one :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isho": true
      }
    },
    "53e5b31d-9eca-3f08-b998-0815cc721818": {
      "content": "interface ${1} ${2:#:extends}{\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true
      }
    },
    "53ede426-fb09-367b-ae27-46fffdd5ade6": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\" class=\"${3}>\n\t${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select.": true
      }
    },
    "53f2f6ec-283c-36f3-901b-5193af6b8389": {
      "content": "try {\n\t${1:TARGET}\n} catch (${2:#:Exception} $e) {\n\t${3:#:code}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "5403004e-f5c7-3c25-99ab-5662625e7e14": {
      "content": "import { NavLink } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importRouterNavLink",
      "matches": {
        "imbrnl": true
      }
    },
    "54033bfd-b87a-3158-916e-73665b88ecb5": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}\nend if;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "540bd2e3-0153-3bf8-a2cb-a1efde24a086": {
      "content": "{% with ${1} as ${2} %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "540f8d88-d274-37e4-8fb1-240bc9847637": {
      "content": "table-layout ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      }
    },
    "540f958f-a64a-3b11-a198-706ad82bd987": {
      "content": "<style lang=\"scss\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with scss",
      "matches": {
        "style_with_scss": true
      }
    },
    "541529f0-fa27-3b8e-89d9-5ddfdb42bdb6": {
      "content": "gl_FrontFacing",
      "doc": "The built-in variable gl_FrontFacing is used by the OpenGL ES 2.0 pipeline to hand over the information to the fragment shader if the fragment is part of a front-facing primitive (triangle). The variable is read-only and the value is assigned by the OpenGL ES 2.0 pipeline.\nThe front-facing variable has a boolean value.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_FrontFacing",
      "matches": {
        "gl_FrontFacing": true
      }
    },
    "541b66c7-6663-3a64-98f4-656df807ccb7": {
      "content": "Vue.config.devtools = ${1:true}",
      "doc": "Vue.config.devtools",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "devtools",
      "matches": {
        "VueConfigDevtools": true
      }
    },
    "541c020f-a257-32bf-9b0f-5e14b88bac97": {
      "content": "mixins: [${1:mixinName}],",
      "doc": "vue use mixin",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Use Mixin",
      "matches": {
        "vmixin-use": true
      }
    },
    "541c7905-d5b4-3a1e-a699-204406682898": {
      "content": "padding-right: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-right: length (margin)",
      "matches": {
        "padding": true
      }
    },
    "541f376a-78ac-3f43-beed-090d2714503b": {
      "content": "do {\n\t$0\n} while (${1:condition});",
      "doc": "Do-While Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Do-While Statement",
      "matches": {
        "dowhile": true
      }
    },
    "54204d2b-6796-3db9-93dc-edfcaf04902d": {
      "content": "_.takeRightWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.takeRightWhile(users, function(o) { return !o.active; });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeRightWhile(users, ['active', false]);\n// => objects for ['fred', 'pebbles']\n\n// The `_.property` iteratee shorthand.\n_.takeRightWhile(users, 'active');\n// => []\n\nCreates a slice of `array` with elements taken from the end. Elements are\ntaken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takerightwhile",
      "matches": {
        "lodash takerightwhile": true
      }
    },
    "54311c5d-65eb-3cda-91a8-a1571b4b54a7": {
      "content": "font-emphasize-position: before;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      }
    },
    "5434460c-cd4d-38f3-8278-d18ca440db7a": {
      "content": "it { should redirect_to ${0:url} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrt": true
      }
    },
    "543df660-8823-370f-b523-f73768c36045": {
      "content": ":host(${1}) {\n\t${2:${VISUAL}}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "host(": true
      }
    },
    "54521760-9f47-30fd-9ae5-09f46e739b9b": {
      "content": "expect(${1:target}).toThrow(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to throw (js)",
      "matches": {
        "eth": true
      }
    },
    "5456a86e-22e2-3c22-a598-b8df30d67a66": {
      "content": "{\n\t\"type\": \"select\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"options\": [\n\t\t{\n\t\t\t\"group\": \"${5}\",\n\t\t\t\"value\": \"${6}\",\n\t\t\t\"label\": \"${0}\"\n\t\t}\n\t],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_select": true
      }
    },
    "5458bba4-d4f0-3aae-8148-5fd90be24f05": {
      "content": "\\\\begin{align${1:ed}}\n\t\\\\label{eq:${2}}\n\t${0:${VISUAL}}\n\\\\end{align$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "align(ed) environment",
      "matches": {
        "ali": true
      }
    },
    "545e5dfc-3bd4-3e36-9d29-e54e2cd29b3f": {
      "content": "background ${1} url(${2}) ${3:0} ${4:0} ${0:no-repeat}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      }
    },
    "545fa484-1e8a-33b8-977e-3ffd5ec758c5": {
      "content": "${1:FIELDNAME} = serializers.EmailField(${2})",
      "doc": "Django-rest Serializers ``EmailField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF EmailField",
      "matches": {
        "semail": true
      }
    },
    "5468105f-f6ff-30c2-a97a-662b4c89980c": {
      "content": "<slot$1>$2</slot>$0",
      "doc": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "slotE",
      "matches": {
        "slotE": true
      }
    },
    "54699843-4f57-3fb2-9448-467e1de36218": {
      "content": "text-height max-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:m": true
      }
    },
    "5469fd9a-0468-303c-9ac8-7b92ccbb5bbc": {
      "content": "{\n\t\"type\": \"html\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": \"<div>$3</div>\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema html",
      "matches": {
        "_html": true
      }
    },
    "546c1206-5614-3834-a0fc-fb469cc8c22e": {
      "content": "<form>\n${1:TARGET}\n</form>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      }
    },
    "546cd20b-0b3c-3e46-83b4-66b10f732064": {
      "content": "<?php\n\tnamespace Models;\n\n\tuse Core\\Model;\n\n\tclass ${1:class_name} extends Model\n\t{\n\t\tprivate $${2:table};\n\t\tfunction __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\n\t\tpublic function getRow($where)\n\t\t{\n\t\t\treturn $this->db->select('SELECT * FROM '.$table.' WHERE ${3:where}', $data);\n\t\t}\n\n\t\tpublic function getRows($where)\n\t\t{\n\t\t\treturn $this->db->select('SELECT * FROM '.$table.');\n\t\t}\n\n\t\tpublic function insert($data)\n\t\t{\n\t\t\t$this->db->insert($table, $data);\n\t\t}\n\n\t\tpublic function update($data, $where)\n\t\t{\n\t\t\t$this->db->update($table ,$data, $where);\n\t\t}\n\n\t\tpublic function delete($where)\n\t\t{\n\t\t\t$this->db->delete($table, $where);\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_model_crud": true
      }
    },
    "546fb64f-77f4-3c9b-8efe-78b516895a2f": {
      "content": "slot-scope=\"$1\"$0",
      "doc": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slotscope",
      "matches": {
        "slotscope": true,
        "vue slotscope": true
      }
    },
    "54703133-cf7c-3c19-9c8e-022db1cdafb0": {
      "content": "def edit\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\nend",
      "doc": "def edit",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Edit action",
      "matches": {
        "edit": true
      }
    },
    "5473a4ec-ff3c-3787-82de-dad49a07d539": {
      "content": "\\SI{${1:${VISUAL}}}{${2}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "SI-Unit",
      "matches": {
        "SI": true
      }
    },
    "547b097a-cc69-3ff4-89c7-fff4dfa0123c": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "547e930f-09c6-3b99-befe-37107e42cd9f": {
      "content": "```${1:language}\n$0\n```",
      "doc": "Insert fenced code block",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert fenced code block",
      "matches": {
        "fenced codeblock": true
      }
    },
    "5480be41-fb39-333a-b75e-0fb943dee361": {
      "content": "border-length: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      }
    },
    "54827aaa-6939-3bab-9d10-d579d9aaff17": {
      "content": "Run Keyword If Any Critical Tests Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Any Critical Tests Failed",
      "matches": {
        "rkiactf": true
      }
    },
    "548f90df-c022-31ee-8e5c-e483a32875cd": {
      "content": "private static immutable ${1:int} ${2:Constant} = ${3:1};\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psi": true
      }
    },
    "5494cd60-40eb-3e0e-b699-ad9a17a3c116": {
      "content": "${1:obj}.toggle(function (${2:e}) {\n\t${3:// event handler}\n}, function ($2) {\n\t${4:// event handler}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tog": true
      }
    },
    "5497d42a-d21a-37f5-830f-a9b679157b13": {
      "content": "${1:FIELDNAME} = models.SmallIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smallint": true
      }
    },
    "549a1f78-a329-39b4-bb9c-2117d2d6101d": {
      "content": "import Controller from '@ember/controller';\n\nexport default Controller.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Controller from '@ember/controller';",
      "matches": {
        "econtroller": true
      }
    },
    "549f32c6-9859-332b-ac76-95313aa0d4ef": {
      "content": "expect($1).toBe($0);",
      "doc": "expects the first argument to be equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobe",
      "matches": {
        "jest expect tobe": true,
        "tb": true
      }
    },
    "54a6d719-8d14-3679-8f0c-ceb6089e4c02": {
      "content": "LRECL=${2|80,132|}",
      "doc": "LRECL Parameter",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/LRECL",
      "matches": {
        "LRECL": true
      }
    },
    "54ad4b00-00ba-326b-98e1-534d66e8c219": {
      "content": "cursor hand",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      }
    },
    "54aeb4f0-762c-3686-a1bf-a883143a571c": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      }
    },
    "54b20b92-4f93-37d1-96f1-a2607c720000": {
      "content": "${1:obj}.ajaxSend (${1:request, settings}) ->\n\t${2:// error callback}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsend": true
      }
    },
    "54b54922-8c72-3e2c-be74-f47e35aa3da7": {
      "content": "for (auto ${1:i} = ${2:container}.begin(); $1 != $2.end(); ++$1) {\n\t${3:std::cout << *$1 << std::endl;}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itera": true
      }
    },
    "54b6767e-ebd9-3e7f-b67c-b963bc54c0c9": {
      "content": "grid-column: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      }
    },
    "54b9c480-533d-35d3-9b5b-dea2686b0e02": {
      "content": "loadVariables(${1:url}, ${2:level}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vn": true
      }
    },
    "54bb73ad-a224-3e1e-863f-262c9b2bca7b": {
      "content": "else\n{\n\t${VISUAL}$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "else (el)",
      "matches": {
        "el": true
      }
    },
    "54c75958-a3cb-3063-a33f-f03cb13214f8": {
      "content": "def get_queryset(self):\n\tqueryset = super(${1:CLASS_NAME}, self).get_queryset()\n\tqueryset = queryset${3: # TODO}\n\treturn queryset",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "get_queryset",
      "matches": {
        "get_queryset": true
      }
    },
    "54c8956d-6627-3a3a-a097-c658508f8a8c": {
      "content": "enum ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "54ca64e8-a194-305e-9c7a-c2617c1144ce": {
      "content": "printf(\"${1:} = %f\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prf": true
      }
    },
    "54cdef88-e089-3d17-a9d4-5dff55590b53": {
      "content": "float right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      }
    },
    "54d65be2-daa4-3fbb-aac5-7466a97bf4d5": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:e}) {\n\t${2:/* handle error */}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "try { ... } catch(e) { ... }",
      "matches": {
        "try": true
      }
    },
    "54d6c9fb-3c71-384e-ace5-0682e8c8a6da": {
      "content": "- ${1:first}\n- ${2:second}\n- ${3:third}\n$0",
      "doc": "Insert unordered list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert unordered list",
      "matches": {
        "unordered list": true
      }
    },
    "54d880be-2028-3245-b896-410c7a4f0f22": {
      "content": "vertical-align: text-bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      }
    },
    "54e2c63e-5245-3d8d-aa7a-0fc6d5de634a": {
      "content": "all(${1:mask}${2:, dim=${3:1}})",
      "doc": "all",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "all",
      "matches": {
        "all": true
      }
    },
    "54e65acb-42a9-38dd-82ce-efb5b7c61fcc": {
      "content": "&#x232B;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backspace": true
      }
    },
    "54e6e675-8da3-3b85-8fa9-903766dc6f94": {
      "content": "grid-column-start: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      }
    },
    "54fa754e-e769-3426-84d6-ac2373f54a6b": {
      "content": "for ${2:i} := 0; $2 < ${1:count}; $2${3:++} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for int loop",
      "matches": {
        "fori": true
      }
    },
    "55011023-780d-32ea-9c7c-e9bb2b41c683": {
      "content": "<details>${0}</details>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "details": true
      }
    },
    "5501b280-6853-33c1-b6b4-f1dd47f991a7": {
      "content": "z-index: $1;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "z-index: index (z)",
      "matches": {
        "z": true
      }
    },
    "55026d84-4100-39cd-a4c4-3a4549e13615": {
      "content": "case ${1:/* variable case */}:\n\t${2}\n\t${3:break;}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "5510325d-6e41-3033-823e-eda04d7d3c31": {
      "content": "width: ${1},",
      "doc": "width",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "width",
      "matches": {
        "w": true
      }
    },
    "55143a7e-3f09-37da-8ecc-f1c7a99522b1": {
      "content": "beforeEach ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "before each (coffee)",
      "matches": {
        "bef": true
      }
    },
    "551915b7-094f-36d7-aa25-8e514968cd46": {
      "content": "display: -moz-inline-stack;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      }
    },
    "551b9533-c722-3929-87e6-d8ce3d5ed47e": {
      "content": "${1:obj}.unload (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unload": true
      }
    },
    "5523db48-8cb8-3f1b-8847-3aaf988739df": {
      "content": "justify-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:e": true
      }
    },
    "552b5ddc-ff1d-38a8-8899-78e7161da0cf": {
      "content": "text-justify tibetan",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      }
    },
    "553d71ab-4d19-3dc3-afb1-e30041ebac1c": {
      "content": "<%include file=\"${1:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "include",
      "matches": {
        "include": true
      }
    },
    "553fb2df-d807-35a6-86c4-5988b8b183fe": {
      "content": "module ${1} = struct\n\t${0}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "5540e158-2b9d-375d-9a70-44e137d1fb2a": {
      "content": "border-bottom: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb:n": true
      }
    },
    "55457033-b5b5-306f-b8ec-e5e49bcada01": {
      "content": "wants.${1:js|json|html}${2: { $0 }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "wants_format",
      "matches": {
        "wants": true
      }
    },
    "5549b4d2-99d2-39e0-8134-bb75b9873cc9": {
      "content": "align-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:st": true
      }
    },
    "5550ee33-bc34-3cae-9a67-42260ffe2827": {
      "content": "floatformat:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      }
    },
    "5551cff8-ab26-31d4-9c9b-3b0d1d5b6140": {
      "content": "render :update do |${1:page}|\n\t$1.${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ru": true
      }
    },
    "555698ed-ca29-3a94-97da-b7bdb044eda1": {
      "content": "borderLeftWidth: ${1},",
      "doc": "borderLeftWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderLeftWidth",
      "matches": {
        "bor": true
      }
    },
    "55596f3f-14d0-32f4-b9ce-9cbdfca95fbb": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tupdate(${2:parameters}) {\n\t\t\t// the value of `${2:parameters}` has changed\n\t\t}\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-update",
      "matches": {
        "svactionu": true,
        "svelte action update": true
      }
    },
    "555a8dee-1ec1-302f-b510-f46c050637f8": {
      "content": "class ${1:class_name}:\n\t\"\"\"${0:description}\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      }
    },
    "555b9647-60ba-351f-b6e5-683a3a82bb8f": {
      "content": "<VirtualHost ${1:*}:${2:80}>\n\tServerAdmin ${3:webmaster@example.com}\n\tDocumentRoot ${4:/www/example.com}\n\tServerName ${0:www.example.com}\n</VirtualHost>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "virtualhost": true
      }
    },
    "55651639-f41e-3b88-a5ee-77f759f60530": {
      "content": "| uniq",
      "doc": "Array filter: uniq",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter uniq",
      "matches": {
        "uniq": true
      }
    },
    "556c0402-41dc-3ded-9e7c-1292fba29214": {
      "content": "PropTypes.func.isRequired",
      "doc": "Func prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      }
    },
    "5571de93-7f47-31d2-9051-3dce162b2b26": {
      "content": "if (${1:true}) {${2}}\nelse{${0}}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "55782355-b550-369d-8e3a-9a106db5729c": {
      "content": "import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  ${1:Model1}: {},${0}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};",
      "doc": "NgRx Data Entity Metadata",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Entity Metadata",
      "matches": {
        "a-ngrx-data-entity-metadata": true
      }
    },
    "557fdfc7-8dd5-3544-a2c6-b19f3e046251": {
      "content": "<svelte:head>\n\t${1:<!-- head content -->}\n</svelte:head>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-head",
      "matches": {
        "svelte head": true,
        "svh": true
      }
    },
    "558667e4-8fb9-3ccd-a4ea-a9e6554a28f9": {
      "content": "$.isArray(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isarr": true
      }
    },
    "55881978-4958-33ad-9404-7011374b4c7d": {
      "content": "unicode-bidi: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ub": true,
        "unicode-bidi": true
      }
    },
    "558a4fd8-040f-3d30-b8c9-09d74b2bdaa2": {
      "content": "${1:obj}.bind('${2:event name}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      }
    },
    "559081f9-29c3-310a-9a04-ce7d147160c9": {
      "content": "// https://eips.ethereum.org/EIPS/eip-173\r\n// https://github.com/0xcert/ethereum-erc721/blob/master/src/contracts/ownership/ownable.sol (this example)\r\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\r\n// https://github.com/FriendlyUser/solidity-smart-contracts//blob/v0.2.0/contracts/other/CredVert/Ownable.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/**\r\n * @dev The contract has an owner address, and provides basic authorization control whitch\r\n * simplifies the implementation of user permissions. This contract is based on the source code at:\r\n * https://github.com/OpenZeppelin/openzeppelin-solidity/blob/master/contracts/ownership/Ownable.sol\r\n */\r\ncontract Ownable\r\n{\r\n\r\n  /**\r\n   * @dev Error constants.\r\n   */\r\n  string public constant NOT_CURRENT_OWNER = \"018001\";\r\n  string public constant CANNOT_TRANSFER_TO_ZERO_ADDRESS = \"018002\";\r\n\r\n  /**\r\n   * @dev Current owner address.\r\n   */\r\n  address public owner;\r\n\r\n  /**\r\n   * @dev An event which is triggered when the owner is changed.\r\n   * @param previousOwner The address of the previous owner.\r\n   * @param newOwner The address of the new owner.\r\n   */\r\n  event OwnershipTransferred(\r\n    address indexed previousOwner,\r\n    address indexed newOwner\r\n  );\r\n\r\n  /**\r\n   * @dev The constructor sets the original `owner` of the contract to the sender account.\r\n   */\r\n  constructor()\r\n    public\r\n  {\r\n    owner = msg.sender;\r\n  }\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner.\r\n   */\r\n  modifier onlyOwner()\r\n  {\r\n    require(msg.sender == owner, NOT_CURRENT_OWNER);\r\n    _;\r\n  }\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param _newOwner The address to transfer ownership to.\r\n   */\r\n  function transferOwnership(\r\n    address _newOwner\r\n  )\r\n    public\r\n    onlyOwner\r\n  {\r\n    require(_newOwner != address(0), CANNOT_TRANSFER_TO_ZERO_ADDRESS);\r\n    emit OwnershipTransferred(owner, _newOwner);\r\n    owner = _newOwner;\r\n  }\r\n\r\n}",
      "doc": "Draft: EIP-173: Implementation example, Contract Ownership Standard, A standard interface for ownership of contracts.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc173",
      "matches": {
        "erc173-draft": true
      }
    },
    "55924746-11b1-3fa8-8a99-b96853d083cb": {
      "content": "@require '${0}'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@r": true
      }
    },
    "5592aa71-0c29-3774-8d91-47fb26321044": {
      "content": "for ${1:_, }${2:v} := range ${3:v} {\n\t$0\n}",
      "doc": "Snippet for a for range loop",
      "filetype": "go",
      "grammar": "lsp",
      "label": "for range statement",
      "matches": {
        "forr": true
      }
    },
    "5595207a-05aa-3bc0-a185-930bccb54b17": {
      "content": "word-break: ${1|break-all,keep-all,break-word,normal|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "word-break",
      "matches": {
        "wb": true
      }
    },
    "559a5978-1fe9-37f1-b1cf-51031c7ed376": {
      "content": "@foreach ($$1 as $$2)\n\t${3:${VISUAL}}\n@endforeach",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@foreach directive",
      "matches": {
        "foreach": true
      }
    },
    "559a7f91-299f-3355-bf23-2f4cd10f2a9a": {
      "content": "_.create(${prototype}, ${properties})",
      "doc": "function Shape() {\n  this.x = 0;\n  this.y = 0;\n}\n\nfunction Circle() {\n  Shape.call(this);\n}\n\nCircle.prototype = _.create(Shape.prototype, {\n  'constructor': Circle\n});\n\nvar circle = new Circle;\ncircle instanceof Circle;\n// => true\n\ncircle instanceof Shape;\n// => true\n\nCreates an object that inherits from the `prototype` object. If a\n`properties` object is given, its own enumerable string keyed properties\nare assigned to the created object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-create",
      "matches": {
        "lodash create": true
      }
    },
    "559f2926-e077-31d0-8eae-68084034857e": {
      "content": "overflow: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      }
    },
    "55a409ef-6ed6-37c4-bb0f-2dcf746a1bd0": {
      "content": "{%- cycle '${1:group name}': '${2:odd}', '${3:even}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cyclegroup-": true
      }
    },
    "55a4b0b3-61d3-3b14-a77e-1713a0b9f879": {
      "content": "NSMutableArray *${1:array} = [NSMutable array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "55a50b27-5095-333d-945a-af554f4ea9b7": {
      "content": "${1|this,vm|}.\\$listeners$2",
      "doc": "Type: { [key: string]: Function | Array<Function> }. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$listeners",
      "matches": {
        "vmListeners": true
      }
    },
    "55bd1c04-0181-3322-9d28-349324712130": {
      "content": "Mouse Down On Link    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Down On Link",
      "matches": {
        "mdol": true
      }
    },
    "55c01813-4c76-3ac7-b767-cf76223ceacb": {
      "content": "${1:FIELDNAME} = models.TextField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TextField",
      "matches": {
        "mtext": true
      }
    },
    "55c083d5-7e83-31d3-aafd-709c9aaf7d35": {
      "content": "const ${0} = ${1:cond} ? ${2:true} : ${3:false}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "ternary assignment",
      "matches": {
        "ta": true
      }
    },
    "55d73544-baef-3864-8e4d-9e3564b63533": {
      "content": "Object.assign(${1:dest}, ${2:source})",
      "doc": "Object.assign",
      "filetype": "base",
      "grammar": "lsp",
      "label": "object-assign",
      "matches": {
        "base object assign": true
      }
    },
    "55d879fa-5687-3908-98e7-583c9a698391": {
      "content": "<svelte:component this={${1:component}} />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component",
      "matches": {
        "svc": true,
        "svelte component": true
      }
    },
    "55db8b9c-715f-3bdd-8223-5dc839cd3f8f": {
      "content": "print ${1:\"${2}\"}${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "pri": true
      }
    },
    "55dbb03b-d519-3f00-9fef-cc1b30a609d9": {
      "content": "(:use [${1:namespace} :only [${0}]])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "use": true
      }
    },
    "55dd34fe-ce2d-3031-a594-65bd7a18d63e": {
      "content": "place-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      }
    },
    "55dfb65a-4c9d-3066-aa17-61e70b3deecb": {
      "content": "{% if ${1:condition} %}$0{% endif %}",
      "doc": "if",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "if1",
      "matches": {
        "if": true
      }
    },
    "55e638c9-1360-31f1-ac40-e7cbeb013eed": {
      "content": "_.ceil(${number}, ${precision})",
      "doc": "_.ceil(4.006);\n// => 5\n\n_.ceil(6.004, 2);\n// => 6.01\n\n_.ceil(6040, -2);\n// => 6100\n\nComputes `number` rounded up to `precision`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ceil",
      "matches": {
        "lodash ceil": true
      }
    },
    "55eddd3e-4692-32ff-af70-3e2eecdfc85f": {
      "content": "export interface ${1:first} {${2:second}}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportInterface",
      "matches": {
        "expint": true
      }
    },
    "55ee2367-6997-3cd3-9c28-90e46689605d": {
      "content": "leave-class=\"$1\"$0",
      "doc": "leave-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-class",
      "matches": {
        "leaveclass": true,
        "vue leave-class": true
      }
    },
    "55ee3b93-0d76-3bca-a4f3-4ee5ad4509e4": {
      "content": "border: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border: none",
      "matches": {
        "born": true
      }
    },
    "5600757f-5ab6-3399-b194-2d04bdc0b470": {
      "content": "validates :${1:attribute}, inclusion: { in: %w(${0: mov avi }) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vi": true
      }
    },
    "56024507-f7a9-3ffd-b437-b7fe4112fb23": {
      "content": "# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "# -*- coding ...",
      "matches": {
        "coding": true
      }
    },
    "56050cc3-6603-3cf2-9bda-c41f0688ec81": {
      "content": "set ${1:#:axis}range [${2:*}:${3:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set x/y range.",
      "matches": {
        "range": true
      }
    },
    "5605572e-7528-3586-b89f-dd86468c1704": {
      "content": "grid-auto-columns auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      }
    },
    "5609fa74-3e36-39a0-96b6-840a3d1904f1": {
      "content": "font-emphasize-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      }
    },
    "560e0c3e-ba0b-377f-8eec-788e34a0369a": {
      "content": "<% else %>",
      "doc": "else",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "560edbe7-8f8b-353d-9b73-26e4eee42e55": {
      "content": "#+CAPTION: ${1:caption}\n#+ATTR_LATEX: ${2:scale=0.75}\n#+LABEL: fig:${3:label}",
      "doc": "figure",
      "filetype": "org",
      "grammar": "lsp",
      "label": "figure",
      "matches": {
        "fig": true
      }
    },
    "560f35a7-4cbd-3f61-a9d7-d7de7ff439b4": {
      "content": "console.trace(${1:object});",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletrace",
      "matches": {
        "base console trace": true
      }
    },
    "5610a091-1b90-31fe-9c48-7b86d441fb83": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon} ${3:1}\n\tbuttons {\"${4:OK}\"} default button 1",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK": true
      }
    },
    "5615f1e8-f604-3025-be37-fc76c67a1b33": {
      "content": "${1:FIELDNAME} = serializers.ModelField(model_field=${2})",
      "doc": "Django-rest Serializers `ModelField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ModelField",
      "matches": {
        "smodel": true
      }
    },
    "561d6dac-6829-3e64-9816-55348768926e": {
      "content": "it { expect(${1:object}).${2} ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iexp": true
      }
    },
    "561f0cc4-aafc-3ef1-a67a-e11334b695e7": {
      "content": "evaluate $1\n    when $2\n       $0\n    when other\n       continue\nend-evaluate",
      "doc": "evaluate",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "evaluate",
      "matches": {
        "ee": true,
        "evaluate": true
      }
    },
    "562043a2-3d8e-3a71-ace0-0a99a747c140": {
      "content": "text-height auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      }
    },
    "562aa4a5-4157-3da9-a8ec-b70ea5e4357c": {
      "content": "getter ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      }
    },
    "562fc620-72d8-37fd-ae3d-c7986a60dc79": {
      "content": "join:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "563c72d5-05cc-3fdb-a43a-dc752dc735ec": {
      "content": "get ${1:property}() {\n\t${0}\n}",
      "doc": "getter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "getter-es6-syntax-",
      "matches": {
        "base getter": true
      }
    },
    "5640791f-9221-309c-a14c-85379acca8ea": {
      "content": "${1:obj}.slideUp '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "supc": true
      }
    },
    "56409fb5-b547-3ff9-911f-ec2fdc58a832": {
      "content": "${1|transition,in,out|}:${2:name}",
      "doc": "transition",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition",
      "matches": {
        "s-transition": true
      }
    },
    "56469cf6-00a5-3dc8-8225-88df8dc70557": {
      "content": "\\${1:x} -> ${2:undefined}$0",
      "doc": "lambda function",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "lambda",
      "matches": {
        "\\": true,
        "lambda": true
      }
    },
    "56636561-3c65-3bc9-8451-10a6f40678a4": {
      "content": "_.replace(${string}, ${pattern}, ${replacement})",
      "doc": "_.replace('Hi Fred', 'Fred', 'Barney');\n// => 'Hi Barney'\n\nReplaces matches for `pattern` in `string` with `replacement`.\n\n**Note:** This method is based on\n[`String#replace`](https://mdn.io/String/replace).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-replace",
      "matches": {
        "lodash replace": true
      }
    },
    "566b103a-6bcf-3a6b-ae30-48b1a3e1b7c1": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React component class with PropTypes and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-proptypes",
      "matches": {
        "rccp": true,
        "react component class proptypes": true
      }
    },
    "5670254d-1da2-36fd-9a0f-ca1c1cea4701": {
      "content": "t.timestamp :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create timestamp column",
      "matches": {
        "tcts": true
      }
    },
    "56763172-d8ab-321e-b42e-5415f53fa018": {
      "content": "border-bottom-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      }
    },
    "56799147-73ac-37e2-926a-6c1351ecf624": {
      "content": "<${1:div} :class=\"{ ${2:className}: ${3:data} }\"></${1:div}>",
      "doc": "vue class binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Class Binding",
      "matches": {
        "vclass": true
      }
    },
    "5679a57e-3761-3df1-9612-127cda1a4498": {
      "content": "(${1:x}) => ${2:x}${0:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      }
    },
    "567f375a-d738-3d14-bb72-90817f1d6397": {
      "content": "Run Keyword If Timeout Occurred    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Timeout Occurred",
      "matches": {
        "rkito": true
      }
    },
    "5684402a-e3f1-3c4d-a9ac-05819adffab8": {
      "content": "border-left none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl:n": true
      }
    },
    "5684bad3-3285-3edd-954d-3c72af7df884": {
      "content": "Session::set(${1:key}, ${2:value});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_set": true
      }
    },
    "56852f5c-af44-34c6-b425-fd046bec40db": {
      "content": "return true;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rett": true
      }
    },
    "568d7895-8c66-394f-917a-54d587d8e07f": {
      "content": "validates_length_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of",
      "matches": {
        "vl": true
      }
    },
    "568efc47-4f95-31b6-9b7b-0e296291a20d": {
      "content": "${1:deferred}.rejectWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drejw": true
      }
    },
    "569253f7-903d-342f-9c2a-5ceb4cff53d0": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:parent}_${3:child}_path(${4:@$2}, ${0:@$3}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "linp": true
      }
    },
    "56944320-e605-327d-a9be-e3db1cde8542": {
      "content": "render file:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :file",
      "matches": {
        "rf": true
      }
    },
    "56980500-1492-39a6-afc1-619cc6ab21a4": {
      "content": "| money_without_trailing_zeros",
      "doc": "Money filter: money without trailing zeros",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter money without trailing zeros",
      "matches": {
        "money_without_trailing_zeros": true
      }
    },
    "569a559f-b7a3-3a60-8e52-1ab4d72e02ba": {
      "content": "<ruby>\n$1\n</ruby>",
      "doc": "HTML - Defines ruby annotations",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ruby",
      "matches": {
        "ruby": true
      }
    },
    "569aa3f0-df46-312c-9225-f2b9d23023e0": {
      "content": "background-origin: ${1|border-box,padding-box,content-box|};",
      "doc": "initial value: padding-box",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-origin",
      "matches": {
        "bgo": true
      }
    },
    "569ca14b-e138-34c5-a9c4-adb41e516fe7": {
      "content": "Page Should Contain    ${1:${text}}    ${2:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain",
      "matches": {
        "psc": true
      }
    },
    "569da948-c126-39b2-9501-422817d2ff2b": {
      "content": "belongs_to :${0:association}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bt": true
      }
    },
    "569ff6e7-4734-3359-b142-8f0c890f671a": {
      "content": "define('${1:VARIABLE_NAME}', ${2:'definition'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "define('VARIABLE_NAME', 'definition')",
      "matches": {
        "def": true
      }
    },
    "56a01caf-3fa3-30aa-905f-dca20b82fade": {
      "content": "__import__('pudb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pudb": true
      }
    },
    "56a5412a-3027-3fec-aee8-f19bba3f1b00": {
      "content": "#+BEGIN_QUOTE\n$0\n#+END_QUOTE",
      "doc": "#+BEGIN_QUOTE block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "quote block",
      "matches": {
        "<q": true
      }
    },
    "56a6aff0-0f2a-3e38-9c62-eac11ca83a9b": {
      "content": "${1|this,vm|}.\\$emit('${2:event}'${3:, […args]})$4",
      "doc": "vm.$emit( event, […args] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$emit",
      "matches": {
        "vmEmit": true
      }
    },
    "56ab74e0-bd60-367d-8bc7-0b4e3c5437c5": {
      "content": "describe('$1', () => {\n  $0\n})",
      "doc": "Testing `describe` block",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "describeBlock",
      "matches": {
        "desc": true
      }
    },
    "56b2098c-3bd5-3044-b6d8-d6d3dcfbac16": {
      "content": "import $1 from '$2'",
      "doc": "import ... from ...",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "import": true
      }
    },
    "56b4bf5c-10ba-3cc7-8ae9-11373b2a6d15": {
      "content": "namespace ${1:MyNamespace}\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "namespace",
      "matches": {
        "namespace": true
      }
    },
    "56b6a227-d05f-302b-b034-187151c250d2": {
      "content": "Vue.directive(${1:id}${2:, [definition]})",
      "doc": "Vue.directive( id, [definition] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "directive",
      "matches": {
        "VueDirective": true
      }
    },
    "56b6fc00-9946-3966-8529-73cd8ae46101": {
      "content": "fun render : Html {\n\t$0\n}",
      "doc": "The render function renders the component into an HTML tree.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Render",
      "matches": {
        "render": true
      }
    },
    "56b84e52-53b7-39ed-8eba-2d44086ecd33": {
      "content": "self.assertNotIn(${1:needle}, ${2:haystack}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert not in",
      "matches": {
        "asni": true
      }
    },
    "56b9008b-8019-3f7a-89d5-e9c4be7929c9": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Imp": true
      }
    },
    "56bda09d-2a14-3c4b-9506-c4e5f0e74320": {
      "content": "-> { throw :${1:error} }.must_throw :${2:error}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mthrow": true
      }
    },
    "56c34be7-8584-38eb-9fec-33ae5567c817": {
      "content": "srand(time(NULL));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seed_rand": true
      }
    },
    "56cbb6e0-88d7-318b-8476-2664a7f6db86": {
      "content": "grid-column-gap: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      }
    },
    "56d73386-32bd-3bc5-a794-9b912070d9aa": {
      "content": "$.Deferred()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "D": true
      }
    },
    "56d8bb5f-d1db-344b-a081-f6b31229d023": {
      "content": "\\\\subparagraph{${1:subparagraph name}}%\n\\\\label{subp:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subparagraph",
      "matches": {
        "subp": true
      }
    },
    "56db916f-483f-3ad4-8ea4-af95af291737": {
      "content": "| join: '${seperator:, }}'",
      "doc": "Array filter: join",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter join",
      "matches": {
        "join": true
      }
    },
    "56e3783f-b528-3df1-898b-7ee9d526a13c": {
      "content": "before_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbs": true
      }
    },
    "56e80ea5-7a9c-3185-b073-7ad9b98699e3": {
      "content": "panic(\"$0\")",
      "doc": "Snippet for panic",
      "filetype": "go",
      "grammar": "lsp",
      "label": "panic(...)",
      "matches": {
        "pn": true
      }
    },
    "56eaa08d-10dd-3b17-893f-50b6c2422b46": {
      "content": "if ${1:condition}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do: ..",
      "matches": {
        "if:": true
      }
    },
    "56ec389a-817d-3b18-a673-ce5d7ce3cf0b": {
      "content": "foreach_reverse(${1:elem}; ${2:range}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fer": true
      }
    },
    "56f25ad7-abca-3f38-82ea-db55d2fac5b7": {
      "content": "display: compact;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      }
    },
    "56fcfda8-659b-3d29-8af0-f7a46e374aa4": {
      "content": "require('dotenv-safe').config();",
      "doc": "As early as possible in your application, require and configure dotenv-safe. This will load environment variables from .env as usual, but will also read any variables defined in .env.example. If any variables are already defined in the environment before reading from .env, they will not be overwritten. If any variables are missing from the environment, a MissingEnvVarsError will be thrown, which lists the missing variables.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-require",
      "matches": {
        "dotenv-safe require": true
      }
    },
    "56ff531e-0f6d-3222-9804-c5631bbe08ac": {
      "content": "<router-link :to=\"{name: '${1:name}'}\">${2:LinkTitle}</router-link>",
      "doc": "Named routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Routing Link",
      "matches": {
        "vroutename": true
      }
    },
    "57041e88-0ab6-36d8-a445-e96725587758": {
      "content": "@system",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "system": true
      }
    },
    "570688f5-456b-3272-a3de-e4dc3cb7d2bf": {
      "content": "do |${1:variable}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert do |variable| … end block",
      "matches": {
        "dop": true
      }
    },
    "570d212b-fa53-3561-aa77-c48f28a8886f": {
      "content": "select case ($1:variable)\r\n\tcase ($2:values)\r\n\t\t$0\r\nend select",
      "doc": "select case",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "sel",
      "matches": {
        "sel": true
      }
    },
    "57117bbc-1bac-33cc-8a86-1cf95080baa0": {
      "content": "\\part{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\part": true,
        "part \\part{": true
      }
    },
    "57156e37-bedf-302d-9f46-1257be7656c2": {
      "content": "do ${1}\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "do",
      "matches": {
        "do": true
      }
    },
    "571851fd-d4cb-3868-9bef-4c492f1e9a24": {
      "content": "hmap",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "HashMap",
      "matches": {
        "T": true
      }
    },
    "571af9b8-36c1-37bd-a8a8-e8048df5875c": {
      "content": "<ul>\n\t$1\n</ul>",
      "doc": "HTML - Defines an unordered list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ul",
      "matches": {
        "ul": true
      }
    },
    "57217921-728c-3e68-a319-cf427f5cb860": {
      "content": "display: block;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      }
    },
    "572bc0e5-357a-3e03-8a1a-6f3385105227": {
      "content": "console.log(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true,
        "console-log": true
      }
    },
    "572ea51f-d947-334f-9899-38fded1b31b4": {
      "content": "${1:name}=\"${2:something}\"",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "var-assign",
      "matches": {
        "assign": true
      }
    },
    "572f0686-0c75-3cb9-910e-61e210c4b965": {
      "content": "#+BEGIN_EXPORT ${1:type}\n$0\n#+END_EXPORT",
      "doc": "export",
      "filetype": "org",
      "grammar": "lsp",
      "label": "export",
      "matches": {
        "export": true
      }
    },
    "57325ac5-4e0a-3707-b66a-e01db45b727e": {
      "content": "import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\ntype Props = {}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}\n\nconst styles = StyleSheet.create({})",
      "doc": "Creates a React Native Arrow Function Component with ES7 module system, TypeScript interface and StyleSheet",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactNativeArrowFunctionComponentWithStyles",
      "matches": {
        "tsrnfs": true
      }
    },
    "57381794-2c73-3851-b59b-c2e75950845c": {
      "content": ".and.",
      "doc": "And",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "and",
      "matches": {
        "and": true
      }
    },
    "5740ac8a-d74b-3738-b7ab-660e058f9df3": {
      "content": "const ${controls} = useAnimation()",
      "doc": "useAnimation()\nuseAnimation hook can be used to create a set of imperative AnimationControls with a start and stop method.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-animation",
      "matches": {
        "framer-motion use-animation": true,
        "use-animation": true
      }
    },
    "574222dd-c28b-3cc5-8d3d-59be00af1871": {
      "content": "Run Keyword And Continue On Failure    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Continue On Failure",
      "matches": {
        "rkacof": true
      }
    },
    "57445eb5-cd54-3b44-9e27-b68683258138": {
      "content": "page-break-after: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:r": true
      }
    },
    "57469bf0-06a1-36e0-a09f-bbbe6097878f": {
      "content": "#+BEGIN_EXPORT ascii\n$0\n#+END_EXPORT",
      "doc": "#+BEGIN_EXPORT ascii",
      "filetype": "org",
      "grammar": "lsp",
      "label": "export ascii",
      "matches": {
        "<a": true
      }
    },
    "57477154-4e63-3f14-9d4b-65ab1aa18bf1": {
      "content": "render action:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :action",
      "matches": {
        "ra": true
      }
    },
    "57567ec5-9d49-3b12-8550-622ed96e89b4": {
      "content": "created () {\n\t${0};\n},",
      "doc": "created lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle created",
      "matches": {
        "vcreated": true
      }
    },
    "5756bd13-500a-3f6a-a300-15ada1153606": {
      "content": "(binding [*out* *err*]\n  (println ${0:TARGET}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      }
    },
    "5758de79-9d4a-3255-bbb6-012d5e4b09e2": {
      "content": "describe(${1:#:message}, function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "describe(message, func)",
      "matches": {
        "describe": true
      }
    },
    "575a9557-9365-3266-8139-0d09e9552ce4": {
      "content": "${1:obj}.parent('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      }
    },
    "57608c29-cb2c-3601-bd12-6361160d858e": {
      "content": "\\\\begin{equation*}\n\\\\begin{tikzcd}\n\t${1}\n\\\\end{tikzcd}\n\\\\end{equation*}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tikzcd environment in equation*",
      "matches": {
        "tikzcd*": true
      }
    },
    "5765f331-3ce1-367d-90e0-73696ca469eb": {
      "content": "for ${1:idx},${2:val} in ipairs(${3:table_name}) do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "ipair for foop",
      "matches": {
        "fori": true
      }
    },
    "576cc35d-7835-344b-a8d0-475aebdba2f7": {
      "content": "{% filter $1 %}\n\t$2\n{% endfilter %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "5770618c-a96a-3fdc-8e22-cbfc727b4d44": {
      "content": "{% ifchanged %}${1}{% endifchanged %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      }
    },
    "5782dd62-a40b-3651-8286-6b926a09a0d4": {
      "content": "margin: ${1:20px} ${2:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin: V H (margin)",
      "matches": {
        "margin": true
      }
    },
    "57911ac6-5644-3f0e-917a-5cb27b88c44b": {
      "content": "import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport ${1:rootReducer} from '${1:./reducers/index}';\n\nconst store = createStore(\n  ${1:rootReducer},\n  applyMiddleware(thunk)\n);",
      "doc": "Create store with thunk template",
      "filetype": "redux-thunk",
      "grammar": "lsp",
      "label": "redux-thunk-store",
      "matches": {
        "redux-thunk createstore": true
      }
    },
    "5791c779-be21-37e0-9d40-02248d0e66f9": {
      "content": "do begin\n\t${0}\nend while (${1});",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      }
    },
    "579a48bb-66b2-3232-b327-09cd1acbd599": {
      "content": "assert_not_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnn": true
      }
    },
    "579ab089-f79e-3be2-a38b-45e5f744e3d6": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default (WrappedComponent) => {\n  const hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n  hocComponent.propTypes = {}\n\n  return hocComponent\n}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "hocComponent",
      "matches": {
        "hoc": true
      }
    },
    "579d2593-7667-3e7e-9d6d-522454966435": {
      "content": "try {\n  ${0:${VISUAL}}\n} catch (${1:Exception e}) {\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "579f5e52-3083-3f2f-a582-9e7a1fbb6486": {
      "content": "self.assertTrue(${1:actual}${2:, '${3:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert True",
      "matches": {
        "ast": true
      }
    },
    "57a2daaf-5da9-30cc-9107-070e63814809": {
      "content": "require_once '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqo": true
      }
    },
    "57a92f0a-bb16-32e1-a187-60578b8ef408": {
      "content": "${1:FIELDNAME} = models.PositiveIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "posint": true
      }
    },
    "57a9d5bd-ff93-3fd4-98ad-a7f970c8d572": {
      "content": "expect(${1:target}).not.toMatch(${2:pattern})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to match (coffee)",
      "matches": {
        "notm": true
      }
    },
    "57b38f06-e9ec-3364-8dfb-3e4617997c2d": {
      "content": "overflow-y scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      }
    },
    "57b709ae-5f24-374e-bf48-8523d723b2b5": {
      "content": "expect($1).toMatchObject($0);",
      "doc": "returns true if the argument matches the second object",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchobject",
      "matches": {
        "jest expect tomatchobject": true,
        "tmo": true
      }
    },
    "57bc634a-7a30-3f13-b6a7-ca1e71e067c0": {
      "content": "#ifndef $1\n#define ${1:SYMBOL} ${2:value}\n#endif /* ifndef $1 */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ndef": true
      }
    },
    "57bceec2-c6a8-3e52-b332-e7fe64a658a9": {
      "content": "{% verbatim %}\n  $1\n{% endverbatim %}",
      "doc": "verbatim tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "verbatim",
      "matches": {
        "verbatim": true
      }
    },
    "57cae46d-43c7-39a3-a7ad-b2be11abd5bd": {
      "content": "static_assert( ${1}, \"${2}\" );${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "static_assert(,\"\")",
      "matches": {
        "static_assert": true
      }
    },
    "57d39343-3d67-3cca-8bf9-99ebfe0e9230": {
      "content": "[${0:foo} autorelease];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arel": true
      }
    },
    "57d53e19-1b73-3f28-bf4d-933c4c7949da": {
      "content": "render text: \"${1:text to render...}\", status: ${2:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,status) (rts)",
      "matches": {
        "rts": true
      }
    },
    "57d7e165-ba3b-39d5-bfd3-5699e1b15cc2": {
      "content": "{${1:array}.map((item) => <${2:elementName} key={item.id}>\n\t$0\n</${2}>)}",
      "doc": "an element self closed",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "jsx elements map",
      "matches": {
        "jm": true
      }
    },
    "57dd6d81-21bd-3236-a0b3-828676e17fef": {
      "content": "{%- if ${condition} -%}\n\t${code:}\n{%- endif -%}",
      "doc": "Control flow tag: if",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag if",
      "matches": {
        "if": true
      }
    },
    "57e0dabe-630e-35a2-9c84-9f867a1efb69": {
      "content": "=>",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "57e21605-4638-337a-a8a5-3737e84f49ca": {
      "content": "import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\n\n// avoid typing issues for now\nexport declare var navigator;\n\n@Injectable({ providedIn: 'root' })\nexport class NetworkAwarePreloadStrategy implements PreloadingStrategy {\n\tpreload(route: Route, load: () => Observable<any>): Observable<any> {\n\t\treturn this.hasGoodConnection() ? load() : EMPTY;\n\t}\n\n\thasGoodConnection(): boolean {\n\t\tconst conn = navigator.connection;\n\t\tif (conn) {\n\t\t\tif (conn.saveData) {\n\t\t\t\treturn false; // save data mode is enabled, so dont preload\n\t\t\t}\n\t\t\tconst avoidTheseConnections = ['slow-2g', '2g' /* , '3g', '4g' */];\n\t\t\tconst effectiveType = conn.effectiveType || '';\n\t\t\tif (avoidTheseConnections.includes(effectiveType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}",
      "doc": "Angular network aware preload strategy",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Network-Aware Preload Strategy",
      "matches": {
        "a-preload-network-strategy": true
      }
    },
    "57e261aa-4caf-3912-be90-915ea5711121": {
      "content": "border-top: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-top",
      "matches": {
        "bort": true
      }
    },
    "57e69fe5-9c69-3568-9db3-ba4f74ed146c": {
      "content": "BEGIN TRANSACTION;\n${0:TARGET}\nCOMMIT;",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "BEGIN TRANSACTION": true,
        "TRANSACTION": true
      }
    },
    "57e95ef1-9db6-356d-ab7a-ae8195a02482": {
      "content": "@each ${1:$item} in ${2:items} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "57e97ed9-b1dc-30d9-a356-9758c3354b40": {
      "content": "<option value=\"${1}\">${0:$1}</option>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      }
    },
    "57ee7381-3f81-3f55-b4c6-c1efff8c4842": {
      "content": "sort_by { rand }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ran": true
      }
    },
    "57ef4199-34db-3efd-9bd7-0a8481898087": {
      "content": "<audio src=\"${1}\">${0}</audio>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "audio": true
      }
    },
    "57efa1bf-2995-3b4d-8fcb-aedd19a81813": {
      "content": "[${1:value} if ${2:condition} else ${3:condition} for ${4:value} in ${5:iterable}]$0",
      "doc": "List comprehension for creating a list based on existing lists, with conditional if-else statement.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "List comprehension if else",
      "matches": {
        "lcie": true
      }
    },
    "57eff385-b24d-3518-aa14-97e599e559cc": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      }
    },
    "57f67970-5607-32fd-a9dc-414e53370c81": {
      "content": "with ${1:expr} as ${2:var}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "57faa0a8-28da-3064-b228-5a53d70408e0": {
      "content": "fieldset\n\tlegend ${1}",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      }
    },
    "57fba71c-69d6-3be7-9e99-440aa0de35e0": {
      "content": "\\\\subsection*{${1:subsection name}}%\n\\\\label{sub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsection*",
      "matches": {
        "sub*": true
      }
    },
    "57fbe99c-1c02-3258-97a4-f850bd7b6d8d": {
      "content": "create_table :${1:table_name} do |t|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mct": true
      }
    },
    "581f871f-6b11-37c3-8fe3-be684988f885": {
      "content": "<dfn>${0}</dfn>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfn": true
      }
    },
    "582869e9-4700-31c2-9e3e-87c8f41ac913": {
      "content": "Option<${1:i32}>",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Option<T>",
      "matches": {
        "opt": true
      }
    },
    "582c8068-5619-3d69-b5f8-bb31d302ca61": {
      "content": "package { \"${1:package name}\":\n\tensure\t=> ${0:present},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      }
    },
    "582c94eb-d1a3-323f-a358-fbdac9394e93": {
      "content": "extends ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      }
    },
    "582cbe24-261a-398f-a43e-fea7e04b4395": {
      "content": "justify-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      }
    },
    "5830dff8-5d09-3b51-96b8-f8c845761873": {
      "content": "Element Should Contain    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Contain",
      "matches": {
        "esc": true
      }
    },
    "583542c7-088e-30b1-8267-27cdc9cd24f8": {
      "content": "font-smooth: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      }
    },
    "58469e45-09ab-38b7-9e73-c9dea6300b01": {
      "content": "-webkit-border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      }
    },
    "584f070a-1a41-3936-9c10-ab8b21943385": {
      "content": "assert_eq!(${1}, ${2});",
      "doc": "assert_eq!(…, …);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "assert_eq",
      "matches": {
        "assert_eq": true
      }
    },
    "58511a39-c6c5-3eb5-8c52-d8c51e8f8147": {
      "content": "repeat (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      }
    },
    "5861f79e-4be2-39a7-b994-7b547540bccd": {
      "content": "beforeCreate () {\n\t${0};\n},",
      "doc": "beforeCreate lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeCreate",
      "matches": {
        "vbeforecreate": true
      }
    },
    "58620493-e8bc-3ea1-8ecb-ce78533392a4": {
      "content": "${1:FIELDNAME} = HStoreField()",
      "doc": "HStoreField (mstore).\n\n*PostgreSQL specific model fields*.\n\nA field for storing key-value pairs. The Python data type used is a dict.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mstore",
      "matches": {
        "mstore": true
      }
    },
    "586e835e-b4b4-314a-a939-f0c954b22fa3": {
      "content": "${1:FIELDNAME} = forms.RegexField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "RegexField",
      "matches": {
        "freg": true
      }
    },
    "586eed3b-4619-3ec5-a82e-fc1375d4c011": {
      "content": "createWriter(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "createWriter": true
      }
    },
    "58700b73-15e6-3551-8093-8c81ddc7dfa0": {
      "content": "<%= link_to ${1:model}.${2:name}, ${3:$1}_path(${0:$1}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lim": true
      }
    },
    "5870b045-a4a8-35d3-8d90-4112996ae813": {
      "content": "${1}_test() ->\n\t${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "58734432-1fb1-3548-a16b-2ff4521194e5": {
      "content": "${1:expression} unless ${2:condition};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xunless": true
      }
    },
    "58756822-e606-3647-a86e-2e3930f33caa": {
      "content": "margin-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      }
    },
    "589a16c5-309d-3e09-aaf2-9502a338820d": {
      "content": "wont_be_kind_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbko": true
      }
    },
    "58a76b51-92ef-3a43-82c0-fc5ecfa22878": {
      "content": "// enable or disable writing into the depth buffer\ngl.glDepthMask(${0:flag});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl depth mask",
      "matches": {
        "gl": true
      }
    },
    "58a8ae63-0e77-351f-a1d4-5ef5e793ab15": {
      "content": "private bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb-": true
      }
    },
    "58b0713d-048a-326a-b4c0-d3f5a6e79906": {
      "content": "::after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      }
    },
    "58b3f58c-e0f0-368f-aabb-793b4df38e15": {
      "content": "place-items: ${1:stretch} ${2:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      }
    },
    "58b778cd-fc60-3def-aa41-591a6d2b15b5": {
      "content": "def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "58b82536-6cfe-3738-be2c-ed2609b6de11": {
      "content": "v-for='${1:item} in ${2:items}' :key='${3:item.id}'",
      "doc": "Expects: Array | Object | number | string",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-for",
      "matches": {
        "vFor": true
      }
    },
    "58bae9cf-5bac-39b6-8ddb-24bac535b3d3": {
      "content": "*>> <summary>enum-id $1</summary>\nenum-id. $1 as \"Status\".\n    78 ${2:Item}  value ${3:1}.\nend enum $1.",
      "doc": "enum-id",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "enum-id",
      "matches": {
        "ei": true,
        "enum-id": true
      }
    },
    "58bb6f2f-64b0-390c-a0c2-4c0e6d051630": {
      "content": "scan(${1:/pattern/}) do |${2:match}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scad": true
      }
    },
    "58bc0f12-e6b4-334a-bb24-e7522f6b5d08": {
      "content": "dynamic_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dca": true
      }
    },
    "58c04619-3e49-3755-8055-2799f91bdc94": {
      "content": "{% verbatim %}\n\t$0\n{% endverbatim %}",
      "doc": "verbatim",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "verbatim",
      "matches": {
        "verbatim": true
      }
    },
    "58c1e3eb-bf32-3437-b4b8-9ed05f891e8c": {
      "content": "marginHorizontal: '${1}',",
      "doc": "marginHorizontal",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginHorizontal",
      "matches": {
        "mar": true
      }
    },
    "58c3831b-7d75-37d1-95cc-624daf8a91f4": {
      "content": "$.hasData('${0:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasd": true
      }
    },
    "58c6d34c-5317-346b-8279-8c5b6ba90c73": {
      "content": "catch (${1:Exception} ${2:e}) {\n    ${0:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      }
    },
    "58c86336-9e68-363d-870f-88c3faf57d63": {
      "content": "- [${1| ,x|}] ${2:text}\n- [${3| ,x|}] ${4:text}\n${0}",
      "doc": "Insert task list with 2 tasks",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert task list 2",
      "matches": {
        "task2": true
      }
    },
    "58c86e74-cd6f-3505-bf4e-2ce1ba44b09e": {
      "content": "$this->render('${1:view}',array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yr": true
      }
    },
    "58cc3001-5129-38f5-b27b-f3eb58636e8d": {
      "content": "font-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      }
    },
    "58d41aed-fd1e-3b4d-aabf-eea47a0c4291": {
      "content": "for ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for ... { ... }",
      "matches": {
        "for": true
      }
    },
    "58e5169b-5c27-36f3-b6f3-2a95f9ae7229": {
      "content": "address = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "address": true
      }
    },
    "58e5ecae-0539-369e-b89b-12a557fc3706": {
      "content": "${1:move }|$2| {\n\t$3\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Closure, anonymous function (block)",
      "matches": {
        "|}": true
      }
    },
    "58ece209-91c3-3b85-9d7b-fe12fa4f7f73": {
      "content": "public ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts public method",
      "matches": {
        "tpmet": true
      }
    },
    "58edb45e-ab71-3eed-8780-a69f85b87413": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;",
      "doc": "Create React Native Styled Components file",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-rn": true
      }
    },
    "58f01f09-8153-3792-8b45-ec3a7e5b51c9": {
      "content": "<command type=\"checkbox\" label=\"${1}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command:c": true
      }
    },
    "58f5e999-467d-3faa-9f27-d27913fef7ab": {
      "content": "class ${1:#:Name} ${2::} ${3:Parent}${4:,} ${5:Interface} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      }
    },
    "58f72d1d-5643-3d32-becd-3b37f3ed9ae3": {
      "content": "${1} ? ${2} : ${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      }
    },
    "58f8accb-69aa-3728-a88b-8ada5b6b4b4f": {
      "content": "[quote, ${1:Name}, ${2:Occasion}}]\n____\n${0}\n____",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "quote block --- text ---",
      "matches": {
        "block-quote": true,
        "quote": true
      }
    },
    "58fc7f51-8252-34af-8e5e-0cd0c2b60ad4": {
      "content": "format.${1:js|xml|html} { ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      }
    },
    "58fd206a-3a71-354e-a170-e087cb709a09": {
      "content": "width: ${1:auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "width",
      "matches": {
        "w": true
      }
    },
    "58fe6ca3-8ef5-3819-8a1b-51d93a752659": {
      "content": "/*\n * ${1}\n*/",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      }
    },
    "59077165-0022-3ee2-9040-2e5afdb5d1cc": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun3": true
      }
    },
    "590c6c60-19a6-315d-b674-4ce436f1cd36": {
      "content": "onMount(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-mount",
      "matches": {
        "svelte lifecycle mount": true,
        "svlfm": true
      }
    },
    "5912d819-36dd-3310-9e46-2f9665b3200b": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      }
    },
    "5922bb17-ebbd-370b-a746-6f3d59ae26c6": {
      "content": "$.isNumeric(${1:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      }
    },
    "592d1739-a023-3a5a-b807-47d6998b7f61": {
      "content": "-webkit-border-image: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      }
    },
    "592d35d2-5141-32af-bbf1-a56ae9157e15": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "5930e44c-bc01-3aeb-b294-3931aabf5765": {
      "content": "FUNCTION PI()$0",
      "doc": "pi",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-PI",
      "matches": {
        "FUNCTION PI": true,
        "PI": true
      }
    },
    "593a6331-39d2-3886-a8cf-90141b129fa7": {
      "content": "import { $0 } from \"${1:module}\";",
      "doc": "Import external module.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Import external module.",
      "matches": {
        "import statement": true
      }
    },
    "594461ae-84bd-37e8-85a7-f474621f5703": {
      "content": "IDENTIFICATION DIVISION. \n        PROGRAM-ID. $1.\n        DATA DIVISION.\n        WORKING-STORAGE SECTION. \n        01 OUT-MSG.\n         02 FILLER PIC X(6) VALUE \"Hello \". \n         02 MSG    PIC X(20).\n        01 INP-MSG PIC X(20) VALUE \"What is your name? \".     \n        PROCEDURE DIVISION.\n        PARA1.\n            EXEC CICS\n                 SEND FROM(INP-MSG)\n                 ERASE\n            END-EXEC\n\n            EXEC CICS\n                 RECEIVE INTO (MSG)\n            END-EXEC\n\n       *\n            EXEC CICS\n                 SEND FROM (OUT-MSG)\n                 ERASE\n            END-EXEC\n\n            EXEC CICS\n                 RETURN\n            END-EXEC.\n\n       *\n        END PROGRAM $1.",
      "doc": "Template for program (CICS)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "IDENTIFICATION (CICS)",
      "matches": {
        "IDENTIFICATION": true
      }
    },
    "59512080-5e0f-3793-9a17-97e8ac3ceb89": {
      "content": "(unless=${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "59623369-f2da-38c3-bd67-2054f195ab4f": {
      "content": "${1:emitter}.on('${2:event}', (${3:arguments}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "event handler",
      "matches": {
        "on": true
      }
    },
    "596318e1-73aa-30d4-8c26-d41c5b1b908c": {
      "content": "(${1:a}, ${2:b}, ${3:c}, ${0:d})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup3": true
      }
    },
    "596a560c-81e0-3d32-b8c1-e02bd28bb8a9": {
      "content": "{{#if ${1:value}}}\n${0:${VISUAL}}\n{{/if}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#if value}} ... {{/if}}",
      "matches": {
        "if": true
      }
    },
    "596bd3b6-106f-3b05-99f1-6d6cc3286841": {
      "content": "TESTS = ${1:10_000}\nBenchmark.bmbm do |results|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bm-": true
      }
    },
    "596dfe54-e2f5-32a6-a224-719e1fe6dcc6": {
      "content": "font-stretch: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      }
    },
    "596e0b3a-a716-3402-b490-3d4d1ef9047f": {
      "content": "<video\nsrc={${1:clip}}\nbind:${2:duration}\nbind:${3:buffered}\nbind:${4:played}\nbind:${5:seekable}\nbind:${6:seeking}\nbind:${7:ended}\nbind:${8:currentTime}\nbind:${9:playbackRate}\nbind:${10:paused}\nbind:${11:volume}\nbind:${12:muted}\nbind:${13:videoWidth}\nbind:${14:videoHeight}\n></video>",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-video",
      "matches": {
        "s-bind-video": true
      }
    },
    "596f3f53-9977-31d4-adac-f3b344b775cd": {
      "content": "let ${1:name} = ref ${2:val} in\n${3:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "ref",
      "matches": {
        "ref": true
      }
    },
    "59706dd0-cadf-3e7d-a4af-3905622d9912": {
      "content": "#define",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "59714dc3-ed0c-373a-99ab-97a172d142d4": {
      "content": "if ${1:condition}\n\t$0\nend",
      "doc": "Code snippet for if statement.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "597ef41d-022b-3918-9f7b-394eaad733b4": {
      "content": "FUNCTION MAX(${1:number},${2:...})$0",
      "doc": "Alphanumeric/Index/Integer/National/Numeric maximum value from the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MAX",
      "matches": {
        "FUNCTION MAX": true
      }
    },
    "5987d478-198d-3864-9680-e8bd908c838f": {
      "content": "${1:classname}Class = React.createClass\n\tdisplayName: \"$1\"\n\trender: ->\n\t\t$2\n$1 = React.createFactory($1)",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define Class",
      "matches": {
        "createClass": true
      }
    },
    "59901db4-f744-3da4-ac05-20d8b48cd65e": {
      "content": "vapply(${1:list}, ${2:function}, ${0:type})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vapply": true
      }
    },
    "599279fa-11b1-3175-8672-d3d97ca2a3cd": {
      "content": "private ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p-": true
      }
    },
    "59a466b3-15b7-3dbe-a8de-f6c71db917e6": {
      "content": "$.inArray(${1:value}, ${0:array});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inarr": true
      }
    },
    "59a9cbb8-0939-3893-84ee-707695e2672d": {
      "content": "{% schema %}\n\t{\n\t\t\"name\": \"$1\",\n\t\t\"class\": \"$2\",\n\t\t\"settings\": [\n\t\t$3\n\t\t]\n\t}\n{% endschema %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema",
      "matches": {
        "_schema": true
      }
    },
    "59aecc1b-5a80-397c-a6ef-36c74059e727": {
      "content": "func ${1:name}(${2:parameters}) -> ${3:Type} {\n\t$0\n}",
      "doc": "function declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "func",
      "matches": {
        "func": true
      }
    },
    "59af88aa-7fd8-3772-900b-7d813f95d519": {
      "content": "unimplemented!()",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "unimplemented!()",
      "matches": {
        "unim": true
      }
    },
    "59bb5cac-2bda-3a80-929e-0fc2be3ee641": {
      "content": "text-replace: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "59bc35d1-0e76-3f12-8fe4-7efa4bf76941": {
      "content": "<h1 class=\"${1}\">${0}</h1>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h1.": true
      }
    },
    "59be6e3f-3d6b-3557-b1f1-bebfb918fc9f": {
      "content": "_.minBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.minBy(objects, function(o) { return o.n; });\n// => { 'n': 1 }\n\n// The `_.property` iteratee shorthand.\n_.minBy(objects, 'n');\n// => { 'n': 1 }\n\nThis method is like `_.min` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-minby",
      "matches": {
        "lodash minby": true
      }
    },
    "59c4f344-66a6-3d3e-acf9-f1b37c099da7": {
      "content": "\\begin{slshape}\n\t${1:TARGET}\n\\end{slshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{slshape} \\slshape": true,
        "slshape": true
      }
    },
    "59ceb0e4-1626-3116-a019-e5166be8c8bc": {
      "content": "_.toUpper(${string})",
      "doc": "_.toUpper('--foo-bar--');\n// => '--FOO-BAR--'\n\n_.toUpper('fooBar');\n// => 'FOOBAR'\n\n_.toUpper('__foo_bar__');\n// => '__FOO_BAR__'\n\nConverts `string`, as a whole, to upper case just like\n[String#toUpperCase](https://mdn.io/toUpperCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toupper",
      "matches": {
        "lodash toupper": true
      }
    },
    "59cf16c8-a703-3543-984b-328481e752e4": {
      "content": "text-decoration: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-decoration: none",
      "matches": {
        "tdn": true
      }
    },
    "59cfad71-7142-3246-af5e-f3306193fc12": {
      "content": "try\n\t${0:TARGET}\non error\n\t-- error handling\nend try",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "59d21018-000d-3dc7-aad8-29cb85c9d372": {
      "content": "else if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "59d21752-bf2d-38c8-a014-7dac476a9438": {
      "content": "procedure ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure declaration",
      "matches": {
        "procd": true
      }
    },
    "59d3ad08-3c4e-3a6b-bbde-c022bda9375f": {
      "content": "Ada.Text_IO.New_Line(${1:1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.New_Line",
      "matches": {
        "newline": true
      }
    },
    "59d54f93-f72b-31cb-a276-4cbb1ba0d568": {
      "content": "SingleChildScrollView(\n  controller: ${1:controller,}\n  child: Column(\n    ${0:}\n  ),\n),",
      "doc": "Creates a scroll view with a single child",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Single Child ScrollView",
      "matches": {
        "singleChildSV": true
      }
    },
    "59dc8ba6-3aba-3ebf-9009-a7a5c462e15b": {
      "content": "python << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "python <<EOF | EOF",
      "matches": {
        "py": true,
        "python": true
      }
    },
    "59e02c30-edc5-3cdd-9d85-b33d44877abf": {
      "content": "{% for block in ${1:entry.matrixFieldHandle}.all() %}\n\n\t{% if block.type == \"${2:blockHandle}\" %}\n\t\t{{ block.${3:fieldHandle} }}\n\t{% endif %}\n\n\t{% if block.type == \"${4:blockHandle}\" %}\n\t\t{{ block.${5:fieldHandle} }}\n\t{% endif %}\n\n{% endfor %}\n$0",
      "doc": "matrixif",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "matrixif",
      "matches": {
        "matrixif": true
      }
    },
    "59e1fe01-61d2-37e3-9c61-60ab1d62dbd1": {
      "content": "white-space-collapse: break-strict",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      }
    },
    "59f06464-6b37-34cb-8ca1-024e56f5fbc7": {
      "content": "<sup>${1:TARGET}</sup>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      }
    },
    "59f3bba7-1559-3090-a212-b4a0e6a78813": {
      "content": "while(${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "59fdd88e-b8ab-387d-9350-17a147bcd7f0": {
      "content": "({${1:arguments}}) => ${1:arguments}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "arrow function with destructuring returning destructured",
      "matches": {
        "fdr": true
      }
    },
    "5a006496-2352-3250-ae93-fe9a00115a6f": {
      "content": "blockDim.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Block Dimension",
      "matches": {
        "bdim": true
      }
    },
    "5a0110c2-974e-3dd7-8f32-6867ababb284": {
      "content": "<dd class=\"${1}\">${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd.": true
      }
    },
    "5a06bede-1db7-3e3f-8970-2999b6264a05": {
      "content": "$.data('${1:selector expression}', '${2:key}'${3:, 'value'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dataa": true
      }
    },
    "5a0af627-18c3-3091-8546-9c48b83a0fb7": {
      "content": "try\n{\n\t${VISUAL}${1:/*code to try*/}\n}\ncatch($2Exception e)\n{\n\t${3:/*handle exception*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "try/catch (try)",
      "matches": {
        "try": true
      }
    },
    "5a0d6b07-eb95-386d-afdd-349598d10a6e": {
      "content": "$ENV{TEST_METHOD} = '${0:regex}';",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tmeths": true
      }
    },
    "5a0f5bf0-cc3e-33ac-a848-af12942ca01d": {
      "content": "border-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      }
    },
    "5a1dfe46-efeb-3fc8-8e94-d53ee2f79a1c": {
      "content": "<${1:elementName}>\n\t$0\n</${1}>",
      "doc": "an element",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "jsx element",
      "matches": {
        "j": true
      }
    },
    "5a2decd5-aeb0-3e53-b6b5-286570a80054": {
      "content": "allow(${1:object}).to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "allow": true
      }
    },
    "5a2f09cb-29d6-32ad-ab9b-ecd7a72409e2": {
      "content": "link(${1:url}${2:, }${0:target});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      }
    },
    "5a302aca-b131-3931-b23d-7bb8a9c5ed7b": {
      "content": "\\${3:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:TARGET}",
      "matches": {
        "3T": true,
        "3t": true
      }
    },
    "5a318b1d-0e15-30ea-b593-4a9de81c10ad": {
      "content": "\\begin{document}\n\t${1:TARGET}\n\\end{document}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{document} \\document": true,
        "document": true
      }
    },
    "5a392dcc-4119-3343-9e79-ecb1b7426186": {
      "content": "*${1:${TM_SELECTED_TEXT}}*$0",
      "doc": "Insert italic text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert italic text",
      "matches": {
        "italic": true
      }
    },
    "5a39ab65-0e20-33d7-8a69-ae381afc1a18": {
      "content": "try (${1:#:Resources}) {\n    ${0:TARGET}\n} catch (${2:Exception} ${3:e}) {\n    ${4:e.printStackTrace();}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_resources": true
      }
    },
    "5a3c4c66-61eb-3f73-9160-ca00e3522492": {
      "content": "Object.create(${1:obj})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.create",
      "matches": {
        "oc": true
      }
    },
    "5a3f313e-4485-3ae3-933d-535cf7389a20": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      }
    },
    "5a428249-7524-30b3-917f-bdf0b29108dd": {
      "content": "font-weight: bold;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-weight: bold",
      "matches": {
        "fwb": true
      }
    },
    "5a464c79-de8d-3a49-9727-4998bb18f96e": {
      "content": "expect(${1:target}).not.toBeTruthy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be truthy (coffee)",
      "matches": {
        "nott": true
      }
    },
    "5a48d556-d180-30ab-9658-29a78438f772": {
      "content": "while (${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "5a5b0bb6-f692-3377-8a41-3a21ab015709": {
      "content": "[${1}]",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "5a5d5285-51af-3133-b6a8-75b0099dc5ff": {
      "content": "(ns ${0:name})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      }
    },
    "5a5e6ff0-2b3a-32a4-8b36-64e0203d1be0": {
      "content": "adply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ad": true
      }
    },
    "5a62305b-cd3e-375a-9058-9f7404523c34": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      }
    },
    "5a62cda4-a42b-3c16-87fc-1b41fb3ef96c": {
      "content": "http.Redirect(${1:w}, ${2:r}, \"${3:/}\", ${4:http.StatusFound})",
      "doc": "Snippet for http.Redirect()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http.Redirect",
      "matches": {
        "rd": true
      }
    },
    "5a65cb6c-0660-3e05-8d47-756c43192bdc": {
      "content": "library ${1:Name} {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "library declaration",
      "matches": {
        "lib": true
      }
    },
    "5a689f59-a5c6-30ca-9360-419273d1d577": {
      "content": "function seconds-from-formatted-time(${1:format},${2:time})$0",
      "doc": "decode time according to format (a time format or a combined date and time format)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-seconds-from-formatted-time",
      "matches": {
        "function seconds-from-formatted-time": true
      }
    },
    "5a694376-89f7-30fd-9d11-6970f32cd8fd": {
      "content": "{% when ${1:condition} %}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "5a6b362f-1e5f-3062-9db1-78225dc4c92a": {
      "content": "\\begin{filecontents}\n\t${1:TARGET}\n\\end{filecontents}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{filecontents} \\filecontents": true,
        "filecontents": true
      }
    },
    "5a778ce6-4f5f-37f7-9665-14c7fa5b9052": {
      "content": "${1:/*return type*/} opDispatch(string s)()\n{\n\t$2;\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opDispatch (opDis)",
      "matches": {
        "opDis": true
      }
    },
    "5a7b0857-78c8-303a-bb80-1f8a21a45333": {
      "content": "vertical-align: bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      }
    },
    "5a840745-0559-3c73-8f0f-d9bc64fddfad": {
      "content": "dispatch_sync(${1:dispatch_queue_t  _Nonnull queue}, ${2:^(void)block})",
      "doc": "Create a dispatch_sync",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch sync",
      "matches": {
        "dispatchsync": true
      }
    },
    "5a862d80-7f05-3caa-9b6e-2591ca76d8b7": {
      "content": "class $1Inline(admin.StackedInline):\n\t'''\n\tStacked Inline View for $1\n\t'''\n\tmodel = ${2:$1}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = ($6,)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Stacked Inline",
      "matches": {
        "stackedinline": true
      }
    },
    "5a873502-cd22-3c5c-92e6-4bef143c41d1": {
      "content": "/**\n * ${1:description}\n *\n * @${0}\n */\n${2:protected} $${3:foo};\n\npublic function get${4:$3}()\n{\n\treturn $this->$3;\n}\n\npublic function set$4(${5:$4 }$${6:$3})\n{\n\t$this->$3 = $$6;\n\treturn $this;\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ags": true
      }
    },
    "5a8888dc-46e5-3612-82ac-72f84dff8564": {
      "content": "| stylesheet_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet_tag": true
      }
    },
    "5a9675ed-9408-305c-a164-061802db8aa0": {
      "content": "${1:FIELDNAME} = forms.TypedChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TypedChoiceField",
      "matches": {
        "ftchoice": true
      }
    },
    "5aa618fc-df87-3762-9129-02a67cf44ec3": {
      "content": "if ${1} then\n\t${2}\nend if;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "5aa67a54-0ad9-3ec6-895d-c27610de7406": {
      "content": "func (${1:receiver} ${2:type}) ${3:funcName}(${4:w} http.ResponseWriter, ${5:r} *http.Request) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http handler function on receiver",
      "matches": {
        "fumh": true
      }
    },
    "5aa86818-8c76-3182-bcf4-0c6de71ceb8e": {
      "content": "append(${1:slice}, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "append",
      "matches": {
        "ap": true
      }
    },
    "5aadd11a-f48e-32db-9d47-d2d1f3238f9b": {
      "content": "it { should have_and_belong_to_many :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishbtm": true
      }
    },
    "5aaf7700-f24d-3b9d-bad0-e7c79779689f": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switchndef": true
      }
    },
    "5ab34629-8a24-333b-9616-079a9661e8d8": {
      "content": "mixed.strict()",
      "doc": "mixed.strict(isStrict: boolean = false): Schema\n\nSets the strict option to true. Strict schemas skip coercion and transformation attempts,\nvalidating the value \"as is\".",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-strict",
      "matches": {
        "yup mixed strict": true
      }
    },
    "5ac1a28a-a383-351b-be13-8338d19e5e8a": {
      "content": "<optgroup>\n\t$1\n</optgroup>",
      "doc": "HTML - Defines an option group",
      "filetype": "html",
      "grammar": "lsp",
      "label": "optgroup",
      "matches": {
        "optgroup": true
      }
    },
    "5ac1bc68-1db6-39e9-a109-bc35bd01c2a3": {
      "content": "message(WARNING \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(WARNING \"...\")",
      "matches": {
        "warning_message": true
      }
    },
    "5ac3825d-2d13-38b2-946b-328597f8664d": {
      "content": "{% set ${1:var} %}\n\t$0\n{% endset %}",
      "doc": "set (block)",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "setb",
      "matches": {
        "setb": true
      }
    },
    "5ac97879-5d35-30a9-8191-78033d40af4f": {
      "content": "internal bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&-": true
      }
    },
    "5ad164a8-3ba0-3cfd-be6a-b3cec562f824": {
      "content": "{% with $1 as  %}\n  \n{% endwith %}",
      "doc": "with tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "with",
      "matches": {
        "with": true
      }
    },
    "5ad2f87c-c40d-324c-996f-41f59f48e028": {
      "content": "$this->${1:method}()->shouldNotContain(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotContain('value')",
      "matches": {
        "sncontain": true
      }
    },
    "5adc2aa6-0c8f-3a1c-a428-cb13baf0a3aa": {
      "content": "import { Switch } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importRouterSwitch",
      "matches": {
        "imbrs": true
      }
    },
    "5adc82f6-e0cb-38cb-94c6-8bb4bf88bb9b": {
      "content": "NSString ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nss": true
      }
    },
    "5ae0b27f-9561-3972-aa75-40b30ea727a7": {
      "content": "COPY \"${1:SUBPROG.CPY}\"\n    REPLACING ==${2:()}== BY ==${3:lnk-}==.",
      "doc": "COPY REPLACING",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "COPY",
      "matches": {
        "COPY": true
      }
    },
    "5ae82774-f222-31f7-bdf0-f2b31d8cc2fa": {
      "content": "_.pullAllBy(${array}, ${values}, ${iteratee})",
      "doc": "var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\n_.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\nconsole.log(array);\n// => [{ 'x': 2 }]\n\nThis method is like `_.pullAll` except that it accepts `iteratee` which is\ninvoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The iteratee is invoked with one argument: (value).\n\n**Note:** Unlike `_.differenceBy`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullallby",
      "matches": {
        "lodash pullallby": true
      }
    },
    "5ae8edb4-4107-3324-ab4c-f483cf9cb2d7": {
      "content": "vec4($2, $3, $4, $5)",
      "doc": "The data type vec4 is used for floating point vectors with four components. There are several ways to initialize a vector:\n• Components are specified by providing a scalar value for each component (first example).\n• Components are specified by providing one scalar value. This value is used for all components (the second example is equivalent to the first).\n• Components are specified by providing a combination of vectors and scalars. The respective values are used to initialize the components (the third and fourth example are equivalent). The arguments of the constructor must have at least as many components as the vector that is initialized.\n\nSide note: The vector constructors can be used to cast between different vector types since type conversions are done automatically for each component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "vec4",
      "matches": {
        "vec4": true
      }
    },
    "5ae98970-9c6d-3251-b232-b6d6937b4f99": {
      "content": "(for/foldr\n\t([${1}])\n\t([${2}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/foldr",
      "matches": {
        "forfr": true
      }
    },
    "5af7cec7-d85c-3ca0-8c83-a1363b5ddfc1": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "5af8af09-655f-38db-b487-d63ab6989527": {
      "content": "@override\nvoid initState() { \n  super.initState();\n  ${0:}\n}",
      "doc": "Called when this object is inserted into the tree. The framework will call this method exactly once for each State object it creates.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "InitState ",
      "matches": {
        "initS": true
      }
    },
    "5afe9f67-2344-3566-a1e6-65fd18593966": {
      "content": "bezier(${1:x1}, ${2:y1}, ${3:z1}, ${4:cx1}, ${5:cy1}, ${6:cz1}, ${7:cx2}, ${8:cy2}, ${9:cz2}, ${10:x2}, ${11:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "bezier": true
      }
    },
    "5b0043e3-45d4-3a3b-83d7-a0cf480935d5": {
      "content": "<div class=\"${1}\">${2:TARGET}</div>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divclass": true
      }
    },
    "5b01238e-47e5-3727-8cab-2d1ae671f213": {
      "content": "package ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package {NAME} is {...} end",
      "matches": {
        "package": true
      }
    },
    "5b02b46d-c2d7-3c7f-bdc9-96ca73c80776": {
      "content": "<p>${1}</p>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "5b0530dc-e402-30c1-b3b5-eb7ccce470de": {
      "content": "scope :${1:name}, lambda do |${2:value}|\n\twhere('${3:field = ?}', ${0:value})\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sl": true
      }
    },
    "5b0a3643-de64-3a2d-b04e-cf42139428a3": {
      "content": "get ${1:property} () {\n\t${0}\n}\nset ${1:property} (${2:value}) {\n\t\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getter + setter",
      "matches": {
        "gs": true
      }
    },
    "5b158d0d-bf20-32a6-b414-18122961ab96": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      }
    },
    "5b1770bd-6966-3e13-96a1-dfc0c0ce7ed0": {
      "content": "PropTypes.node",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      }
    },
    "5b1b1eea-ca77-3e83-b8ae-b5628104c5bf": {
      "content": "class ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      }
    },
    "5b1c26e2-0137-373c-9e67-3ef35b728475": {
      "content": "justify-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      }
    },
    "5b1e8168-3ce5-3286-95f1-f18202755ea7": {
      "content": "<textarea name=\"${1}\" id=\"${2:$1}\" rows=\"${3:8}\" cols=\"${4:40}\">${5}</textarea>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      }
    },
    "5b1f108b-26fa-3edb-b7e9-7a83aad6ed6e": {
      "content": "border-top-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      }
    },
    "5b1f4af1-7457-388c-b2b0-66f296a97f2f": {
      "content": "CREATE TABLE ${1:cities} (\n  ${0:name varchar(80), country_name text}\n);",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "CREATE TABLE { ... }",
      "matches": {
        "CREATE_TABLE": true
      }
    },
    "5b2e75aa-bfcd-3b37-8161-2754f96581b2": {
      "content": "for (${1:auto&& }${2:var} : ${3:container}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "for (:) {}",
      "matches": {
        "for_CPP11": true
      }
    },
    "5b32e609-e208-3834-ae6b-5170f9d54df1": {
      "content": "round($2)",
      "doc": "find the nearest integer less than or equal to the parameter - The fraction 0.5 will round in a direction chosen by the implementation, presumably the direction that is fastest. This includes the possibility that round(x) returns the same value as roundEven(x) for all values of x",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "round",
      "matches": {
        "round": true
      }
    },
    "5b49023e-dac5-37fe-8cbb-f6e633d6b419": {
      "content": "order('${0:field} DESC')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "od": true
      }
    },
    "5b4a3812-c69f-38f5-b6dc-a2ead8257516": {
      "content": "clear none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      }
    },
    "5b55b719-8d76-34e7-b963-5e4fd3875d47": {
      "content": "${1:FIELDNAME} = forms.URLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "URLField",
      "matches": {
        "furl": true
      }
    },
    "5b5b7474-f575-3d1b-90ca-85ba0a02f9dc": {
      "content": "<c:forEach items=\"\\${${1}}\" var=\"${2}\" varStatus=\"${3}\">\n\t${0:<c:out value=\"$2\" />}\n</c:forEach>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfore": true
      }
    },
    "5b5c783b-2465-3a06-96f6-b4464c6ba276": {
      "content": "border-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr": true
      }
    },
    "5b6093ed-e647-388f-874e-e9e0c1f48c42": {
      "content": "wont_be_within_delta ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbwd": true
      }
    },
    "5b64dad4-8bb4-31d6-a5ea-2cfdd5d2bed1": {
      "content": "uniform samplerCube ${NAME};",
      "doc": "uniform samplerCube texture;\n\nThe data type samplerCube is used to provide access to a cubemap texture. It can only be declared as a uniform variable since it is a reference to data that has been loaded to a texture unit.\n\nSide note: On iOS devices this data type can only be used in the fragment shader since they don't have texture image units that can be accessed by the vertex shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "samplerCube",
      "matches": {
        "samplerCube": true
      }
    },
    "5b6a6749-4b4e-3381-acba-c6bd0d061585": {
      "content": "import React from 'react'\n\ntype Props = {}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactArrowFunctionExportComponent",
      "matches": {
        "tsrafce": true
      }
    },
    "5b6af51a-7606-3335-842d-3047e309b749": {
      "content": "bundleRenderer.renderToString",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "bundleRenderer.renderToString",
      "matches": {
        "bundleRendererRenderToString": true
      }
    },
    "5b7048c3-7ef1-3d80-8c36-6e341e6c34dd": {
      "content": "implicit none",
      "doc": "implicit none",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "imp",
      "matches": {
        "imp": true
      }
    },
    "5b74e6fc-e400-3040-84e6-5952a632a196": {
      "content": "font-style: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      }
    },
    "5b769adc-1de0-3bff-8c54-8f7ad35c05fa": {
      "content": "mixed.oneOf()",
      "doc": "mixed.oneOf(arrayOfValues: Array<any>, message?: string | function): Schema Alias: equals\n\nWhitelist a set of values. Values added are automatically removed from any blacklist if they are in it.\nThe ${values} interpolation can be used in the message argument.Note that undefined does not fail this validator, even when undefined is not included in arrayOfValues.\nIf you don't want undefined to be a valid value, you can use mixed.required.let schema = yup.mixed().oneOf([\"jimmy\", 42]);\n\nawait schema.isValid(42); // => true\nawait schema.isValid(\"jimmy\"); // => true\nawait schema.isValid(new Date()); // => false",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-one-of",
      "matches": {
        "yup mixed oneof": true
      }
    },
    "5b7c7bb3-cbb2-3fc5-9b84-c5a2d4837c03": {
      "content": "${1:obj}.outerHeight()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerh": true
      }
    },
    "5b7d869f-da8f-3623-b1c8-13a01862bc73": {
      "content": "protocol ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "protocol": true
      }
    },
    "5b8056ef-18fe-3999-b839-94e5f034137d": {
      "content": "each_with_object(${1:init}) do |${2:e}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawod": true
      }
    },
    "5b83f853-b029-39c4-b080-9e2831efface": {
      "content": "border-style: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:h": true
      }
    },
    "5b8b09cf-1934-31d2-9a2b-41bd0f4a3dec": {
      "content": "console.clear();",
      "doc": "Clears the console",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleclear",
      "matches": {
        "base console clear": true
      }
    },
    "5b90f390-3a76-3d0b-8e34-f29bd66dee19": {
      "content": "text-emphasis: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      }
    },
    "5b93e4e4-1152-30bd-a80d-8fc73fac9ebe": {
      "content": "::: {.theorem #${1:label} name=\"${2:theorem name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown theorem",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown theorem",
      "matches": {
        "theorem": true
      }
    },
    "5b943d72-ca0b-349c-8bc4-4ddc57967311": {
      "content": "\\${3:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3:default}",
      "matches": {
        "3:": true
      }
    },
    "5b982da8-ec99-3480-8c9d-b1edb12d91ed": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${3:100} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      }
    },
    "5b9a53f4-8669-3966-bd8e-0b93b12eaea8": {
      "content": "echo CHtml::passwordField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhpf": true
      }
    },
    "5b9f86a1-033c-362a-87b8-32053bc7dc57": {
      "content": "const axios = require('axios').default;",
      "doc": "require axios",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-require",
      "matches": {
        "axios require": true
      }
    },
    "5ba0810d-0e96-35b2-bda8-9a26a6e73513": {
      "content": "| round: ${1:0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "round": true
      }
    },
    "5ba75789-8f34-3956-92f5-57f4deed0dc8": {
      "content": "font-emphasize-style circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      }
    },
    "5ba99707-e859-3879-a6ac-245db1e3a103": {
      "content": "Promise.reject(${1:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise.reject",
      "matches": {
        "prj": true
      }
    },
    "5bba3e9f-357f-3326-b759-6fbe1ebae421": {
      "content": "{% endautoescape %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endautoescape",
      "matches": {
        "endautoescape": true
      }
    },
    "5bbf3588-a80e-322e-8d96-693a0ae6b1bf": {
      "content": "${1:obj}.width(${2:integer})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      }
    },
    "5bc4f801-6452-3f3c-9276-5db4affbe7d3": {
      "content": "choice(name: \"${1:CHOICE}\" , choices: [\"${2:Choices}\",] , description: \"${3:Pick something}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramchoice": true
      }
    },
    "5bc91ba2-9f79-3f83-951a-6e5175f4ad0c": {
      "content": "if ${1} do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. end",
      "matches": {
        "if": true
      }
    },
    "5bc9b6f1-e095-38d7-898e-c4fdc1b7bfd2": {
      "content": "${1:deferred}.notifyWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dnotifyw": true
      }
    },
    "5bdb41f0-5987-3926-830d-8c6fc5791de3": {
      "content": "let ${1:TARGET} in ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let..in",
      "matches": {
        "let": true
      }
    },
    "5bdbee55-5584-3bc0-a8b0-93aa8bdaedec": {
      "content": "display -moz-inline-stack",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      }
    },
    "5bdc7efc-b924-3866-a444-18aa01c5e598": {
      "content": "border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      }
    },
    "5bdd0b83-754e-35f1-8c89-3febe7e2a80d": {
      "content": "public ${1:int} ${2:MyProperty} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Property with a private setter",
      "matches": {
        "propg": true
      }
    },
    "5bdd7836-f8b3-302c-80fa-fa8165707b04": {
      "content": "__import__('pdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdb": true
      }
    },
    "5be6466e-2416-37e1-83cb-3edb79474b9c": {
      "content": "@techreport{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    institution = {${4}},\n    year = {${5}},\n    memo = {type, number, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@techreport": true,
        "techreport": true
      }
    },
    "5be7dfee-9f13-3c97-a6ed-60873862b7eb": {
      "content": "padding-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      }
    },
    "5bead34c-7838-3bdf-8b55-526f01771a3b": {
      "content": "ARGF.each_line${1} do |${2:line}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unif": true
      }
    },
    "5bf0ec11-fc72-3ea5-839b-3d22a1d65d7e": {
      "content": "grid-auto-flow: column",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      }
    },
    "5bfc4e13-143b-3a33-a298-368d9f945c66": {
      "content": "select ${1:variable}\n\tcase ${2:TypeSpec}\n\tcase ${0:TypeSpec}\n\tdefault\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "5c011d63-da85-3c2d-a005-1704af3d9a9b": {
      "content": "var $1 = new sap.m.VBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmvbox": true
      }
    },
    "5c0219aa-9ddf-3c08-9ae3-7449d02a718e": {
      "content": "middleware ({ store, redirect }) {\n\t${1:data}\n},",
      "doc": "Set the middleware for a specific page of the application.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-middleware",
      "matches": {
        "nuxt middleware": true
      }
    },
    "5c0a1ee8-ff6a-3012-9a22-1eb41595cf38": {
      "content": "protocol ${1:Name} {\n\n\t$0\n}",
      "doc": "protocol declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "protocol",
      "matches": {
        "protocol": true
      }
    },
    "5c0d41b2-cc9f-3061-a64f-7c2b0465984d": {
      "content": "quote\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "quote ... end",
      "matches": {
        "quote": true
      }
    },
    "5c0ea9b8-8591-317c-a344-f6d709df6633": {
      "content": "justify-content right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:r": true
      }
    },
    "5c0f3a69-23e2-3c2d-858a-e1be4907e70b": {
      "content": "afterEach(() => {\n\t$0\n});",
      "doc": "afterEach function is called once after each spec",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-aftereach",
      "matches": {
        "ae": true,
        "jest aftereach": true
      }
    },
    "5c1d0dfa-c7ae-3e7f-9a6d-15526ce4f66c": {
      "content": "export default function ${1:${TM_FILENAME_BASE}}(${2:params}) {\n\t$0\n};",
      "doc": "Export default function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportDefaultFunction",
      "matches": {
        "edf": true
      }
    },
    "5c2299f4-4b77-37d7-b396-52d85fed52c8": {
      "content": "-define(${1:macro}, ${2:body}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "5c22aef6-898f-3428-bc35-d6c600698136": {
      "content": "t.binary :${1:title}, limit: ${2:2}.megabytes\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcbi": true
      }
    },
    "5c26d2b3-f244-3862-bd05-a535d0cc11b2": {
      "content": "<input type=\"number\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:number": true
      }
    },
    "5c272efb-9b9d-3f60-8dd6-ef28025123d8": {
      "content": "/*! TODO: ${1:Todo description here} */",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      }
    },
    "5c28a2aa-1ba8-3e4d-8a47-86d9eb6d47b2": {
      "content": "try:\n\t${1:pass}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}$0",
      "doc": "Code Snippet for a try and except blocks.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try:except:",
      "matches": {
        "try": true
      }
    },
    "5c2e4613-7f83-338c-a0ff-c42d432b8c25": {
      "content": "| newline_to_br",
      "doc": "String filter: newline to br",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter newline to br",
      "matches": {
        "newline_to_br": true
      }
    },
    "5c305c4b-a47f-3e4a-a0ab-5e2656eba2e2": {
      "content": "-moz-border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      }
    },
    "5c39bc85-6ddc-3823-b995-038103ccc255": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      }
    },
    "5c3d790f-6446-39a5-a01f-e21fd1fe3e10": {
      "content": "class ${1:name} {\n\tconstructor(${2:arguments}) {\n\t\t${0}\n\t}\n}",
      "doc": "class (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "class-es6-",
      "matches": {
        "base class": true
      }
    },
    "5c3f5604-4036-3cc0-83d5-a0ade401275e": {
      "content": "strokeWeight(${0:1});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strokeWeight": true
      }
    },
    "5c40de4d-2fd3-32e8-980e-273ad0deae19": {
      "content": "watch: {\n\t$1\n},$0",
      "doc": "An object where keys are expressions to watch and values are the corresponding callbacks. The value can also be a string of a method name, or an Object that contains additional options. Note that you should not use an arrow function to define a watcher.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "watch",
      "matches": {
        "watch": true
      }
    },
    "5c4c7adf-d631-3e68-b1b1-dffd45ffb86c": {
      "content": "for ${1:item} <- ${2:items} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "5c4c9aa1-b9dc-3f3a-afd8-f92985a5ea08": {
      "content": "else if ($1) {\n\t$0\n}",
      "doc": "Code snippet for else-if statement",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "else if": true
      }
    },
    "5c515b4f-35b2-3268-b1ff-2b2381bb723a": {
      "content": "display: table-footer-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      }
    },
    "5c58836b-26fc-34d9-8c9c-557e5459029d": {
      "content": "background-image: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-image:  url (background)",
      "matches": {
        "background": true
      }
    },
    "5c5ea4e7-36dd-30c9-980f-e41dffd992dc": {
      "content": "@inproceedings{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    booktitle = {${4}},\n    year = {${5}},\n    memo = {editor, volume, number, series, pages, address, month,\n        organization, publisher, note}\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@inproceedings @conference conference": true,
        "inproceedings": true
      }
    },
    "5c626bc0-d9cc-3ed7-8994-36df2236a0d0": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n\t${1} res = [super ${2:#:method}]\n\treturn res;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "SubMethod",
      "matches": {
        "sm": true
      }
    },
    "5c62fbbb-89f5-3575-b6ea-e3b554db65bb": {
      "content": "_.fromPairs(${pairs})",
      "doc": "_.fromPairs([['a', 1], ['b', 2]]);\n// => { 'a': 1, 'b': 2 }\n\nThe inverse of `_.toPairs`; this method returns an object composed\nfrom key-value `pairs`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-frompairs",
      "matches": {
        "lodash frompairs": true
      }
    },
    "5c644749-fd2d-3633-b1c1-864875e64e9c": {
      "content": "{\n\t\"type\": \"page\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_page": true
      }
    },
    "5c6b5284-0280-371e-bf44-9c4154a0de06": {
      "content": "_.updateWith(${object}, ${path}, ${updater}, ${customizer})",
      "doc": "var object = {};\n\n_.updateWith(object, '[0][1]', _.constant('a'), Object);\n// => { '0': { '1': 'a' } }\n\nThis method is like `_.update` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-updatewith",
      "matches": {
        "lodash updatewith": true
      }
    },
    "5c6dc24c-33cf-3950-af42-f0960cd266a5": {
      "content": "char ${1:m}${2: = \"}${0:char\"};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "char": true
      }
    },
    "5c765eeb-bac7-3ba3-bdc6-96e3e39ffba1": {
      "content": "Vue.directive('${1:directiveName}', {\n\tbind(el, binding, vnode) {\n\t\tel.style.${2:arg} = binding.value.${2:arg};\n\t}\n});",
      "doc": "vue custom directive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Custom Directive",
      "matches": {
        "vc-direct": true
      }
    },
    "5c7a355a-63c3-391b-affb-99e1b86717ac": {
      "content": "{% endcss %}$0",
      "doc": "endcss",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endcss",
      "matches": {
        "endcss": true
      }
    },
    "5c8800b0-6757-34ff-8aa8-b654ebfed2fb": {
      "content": "_.multiply(${multiplier}, ${multiplicand})",
      "doc": "_.multiply(6, 4);\n// => 24\n\nMultiply two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-multiply",
      "matches": {
        "lodash multiply": true
      }
    },
    "5c8ca440-c81e-3305-9d8a-a1686803e9dd": {
      "content": "display: block;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: block (display)",
      "matches": {
        "display": true
      }
    },
    "5c951798-0c71-3166-9fd5-4d4fdb6e6eed": {
      "content": "fun ${1:function_name}($2)\n\t${3:\" code}\nendf",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "f": true
      }
    },
    "5c9d74e2-e6f2-3d11-b262-4047b6b859dc": {
      "content": "{% spaceless %}${0}{% endspaceless %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      }
    },
    "5ca30adc-d367-3523-aa2c-9a86c3fa2b2a": {
      "content": "${1:f} :: ${2:a} ${3:-> ${4:b}}\n$1 ${5:pattern} = ${7:undefined}\n$1 ${6:pattern} = ${8:undefined}$0",
      "doc": "Clause function",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "fn_clause",
      "matches": {
        "clause function": true,
        "fnc": true
      }
    },
    "5ca40d4a-48a8-3a04-97d4-2930575c5e32": {
      "content": "expect(${1:target}).toBeHidden();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be hidden (js)",
      "matches": {
        "eh": true
      }
    },
    "5ca9b173-a703-32c9-8a69-cd40d7084f2f": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      }
    },
    "5ca9c7e0-8468-3aef-aa6c-1bb16e13cfaa": {
      "content": "// TODO: $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "TODO comment",
      "matches": {
        "todo": true
      }
    },
    "5ca9fe9a-b7fe-3f12-b9be-7991f2eb7283": {
      "content": "import Mixin from '@ember/object/mixin';\n\nexport default Mixin.create({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "App.MixinName = Ember.Model.extend({...});",
      "matches": {
        "emix": true
      }
    },
    "5cb0d912-9b7f-3ac7-9128-e9b093cc1e50": {
      "content": "[#${1:Id}] ${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "[#anchor] #text#, itemize, ...",
      "matches": {
        "anchorblock": true,
        "block-anchor": true
      }
    },
    "5cb29de4-5d01-3313-bec5-876821506f3d": {
      "content": "normalize($2)",
      "doc": "float normalize(float x)\nvec2 normalize(vec2 x)\nvec3 normalize(vec3 x)\nvec4 normalize(vec4 x)\n\nThe normalize function returns a vector with length 1.0 that is parallel to x, i.e. x divided by its length. The input parameter can be a floating scalar or a float vector. In case of a floating scalar the normalize function is trivial and returns 1.0.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "normalize",
      "matches": {
        "normalize": true
      }
    },
    "5cb60d4c-5368-3835-a4a8-d946ace93678": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst headers = req.headers\n\t\t\t.set('Content-Type', 'application/json');\n\t\tconst authReq = req.clone({ headers });\n\t\treturn next.handle(authReq);\n\t}\n}",
      "doc": "Angular HttpInterceptor for headers HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpinterceptor-for-headers",
      "matches": {
        "a-http-interceptor-headers": true,
        "angular http interceptor headers": true
      }
    },
    "5cbab679-ba22-314d-8bdc-e3c7a2f8c976": {
      "content": "function let()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "function let() { ... }",
      "matches": {
        "let": true
      }
    },
    "5cc0306c-ed2b-3284-a1f7-41a63171b9a9": {
      "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xml": true
      }
    },
    "5cc3f750-b66b-38de-b84e-230fd65f4c4e": {
      "content": "list-style-type square",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:s": true
      }
    },
    "5cc4f3e9-f49b-3165-b998-615544696a0b": {
      "content": "else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if () {}",
      "matches": {
        "elif": true,
        "elseif": true
      }
    },
    "5cc60cf3-1ddb-3088-9fa3-9faa8891420a": {
      "content": "on:${1:eventname}={${2:handler}}",
      "doc": "on event",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event",
      "matches": {
        "s-on-event": true
      }
    },
    "5cc61e74-558d-3de0-ae18-527d993440bc": {
      "content": "asyncData ({isDev, route, store, env, params, query, req, res, redirect, error}) {\n\treturn { ${1:data} }\n\n},",
      "doc": "Fetch and pre-render data on the server without using a store. The result from asyncData will be merged with data",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-async-data",
      "matches": {
        "nuxt asyncdata": true
      }
    },
    "5cc699c3-9c0d-3ffe-8585-f93d39b8c4b6": {
      "content": "throw new $1Exception(\"$2\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "throw",
      "matches": {
        "throw": true
      }
    },
    "5cc7a28b-8deb-3645-9419-ea2694a412b2": {
      "content": "if ${1:condition}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "If",
      "matches": {
        "if": true
      }
    },
    "5ccc9f91-0f8a-3af1-80ca-35d73d9b4079": {
      "content": "overflow-x: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:v": true
      }
    },
    "5cce12f9-04ba-3549-93a2-c344bea9b4ea": {
      "content": "process (${1})\nbegin\n\t${2}\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "5ccf1662-8b46-3456-8940-1aea15c12435": {
      "content": "formArrayName=\"${1:control}\"",
      "doc": "Angular formArrayName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormArrayName",
      "matches": {
        "a-formArrayName": true
      }
    },
    "5cd0a402-9b43-3ae3-93a0-ff759b34b234": {
      "content": "${1:deferred}.fail(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dfail": true
      }
    },
    "5cd18c5b-9bbc-3dba-8f2f-087e88d9526c": {
      "content": "for (${1:size_t} ${2:i} = ${3:length} - 1; $2 >= ${4:0}; $2--) {\n\t$0\n}",
      "doc": "Code snippet for reverse 'for' loop",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "forr",
      "matches": {
        "forr": true
      }
    },
    "5cd6ce15-ad01-35d8-9122-7960a499fa20": {
      "content": "${1:public} ${2:void} ${3:MyMethod}(${4})\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "mth": true
      }
    },
    "5ce80098-31ba-3445-8dc7-2fa95053cad3": {
      "content": "console.info(${1:first})",
      "doc": "Displays a message in the console but also displays a blue information icon along with the logged message",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleInfo",
      "matches": {
        "cin": true
      }
    },
    "5cec2a92-d6f1-34bf-941a-3e5251a1638e": {
      "content": "text-decoration: overline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      }
    },
    "5cfaf8e0-c8a5-3c41-ba37-9a229b0ed047": {
      "content": "printf(\"${1:} = %d\\n\", $1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prd": true
      }
    },
    "5cfd7be8-d1de-3a10-97f9-77d35f7c9997": {
      "content": "[super ${1:init}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "su": true
      }
    },
    "5d01d8af-5824-3cde-ad19-12f137454faf": {
      "content": "box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      }
    },
    "5d0835d5-5305-3e2d-95bc-21650f15829a": {
      "content": "def __eq__(self, other):\n\t${1:pass}\n\ndef __ne__(self, other):\n\t${2:pass}\n\ndef __lt__(self, other):\n\t${3:pass}\n\ndef __le__(self, other):\n\t${4:pass}\n\ndef __gt__(self, other):\n\t${5:pass}\n\ndef __ge__(self, other):\n\t${6:pass}\n\ndef __cmp__(self, other):\n\t${7:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing rich comparison",
      "matches": {
        "cmp": true
      }
    },
    "5d0f0738-ed06-31ea-8de7-ff5559bac145": {
      "content": "background-position: ${1:left} ${2:top};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-position",
      "matches": {
        "bgp": true
      }
    },
    "5d108628-382b-3309-aedf-915935909a3a": {
      "content": "If ${1:condition} Then\n\t${0:; True code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "5d134a97-6674-383b-a4cd-f01808ca8bec": {
      "content": "data-${1}=\"${2:$1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      }
    },
    "5d13e4ad-4bbb-3ec4-b34f-472f04675fc5": {
      "content": "; http://editorconfig.org\n\nroot = true\n\n[*]\nindent_style = ${1:space_or_tab}\nindent_size = ${2:indent_size}\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true",
      "doc": "",
      "filetype": "dosini",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "5d189865-d99f-3c11-8e38-a25d4c2a177a": {
      "content": "${1:name}_UI <- function(id) {\n  ns <- NS(id)\n  tagList(\n    ${0}\n  )\n}\n\n${1:name} <- function(input, output, session) {\n  \n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "shinymod",
      "matches": {
        "shinymod": true
      }
    },
    "5d192080-0a8a-3ea0-a77b-6ccdb5fce245": {
      "content": "{% load staticfiles %}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "lstatic",
      "matches": {
        "lstatic": true
      }
    },
    "5d1ffbcf-caf6-3856-a7c9-a11b5a7f372c": {
      "content": "switch (${1}) {\n| ${2} => ${0}\n}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "5d23fac1-db77-3d3c-b312-ebbb7b1d786f": {
      "content": "import logging\nLOGGER = logging.getLogger(${0:__name__})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glog": true
      }
    },
    "5d2583de-f039-3437-af39-e0b5cc346fbf": {
      "content": "void mouseMoved(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseMoved": true
      }
    },
    "5d259b08-4ba1-3f07-bb08-8604f82c83eb": {
      "content": "<meta name=\"description\" content=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:d": true
      }
    },
    "5d29747e-6bea-3641-8885-1bdf7dcfb8db": {
      "content": "constructor( @Optional() @SkipSelf() parentModule: ${1:ModuleName} {\n\tif (parentModule) {\n\t\tconst msg = `${1:ModuleName} has already been loaded. \n\t\t\tImport ${1:ModuleName} once, only, in the root AppModule.`;\n\t\tthrow new Error(msg);\n\t}\n}",
      "doc": "Angular Module SkipSelf constructor",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-module-skipself-constructor",
      "matches": {
        "a-ctor-skip-self": true,
        "angular module skip self constructor": true
      }
    },
    "5d2aa8ea-9c2c-3ebf-b085-c329d0ec418c": {
      "content": "${1:obj}.scroll(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scroll": true
      }
    },
    "5d2bb311-4aa8-3497-bdfa-740fd847f396": {
      "content": "flex-flow: ${1|row,row-reverse,column,column-reverse|} ${2|wrap,wrap-reverse,nowrap|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex-flow",
      "matches": {
        "flf": true
      }
    },
    "5d30d77a-91a9-352c-a1eb-abddf40454a6": {
      "content": "enum ${1:MyEnum} {\n\t$0\n};",
      "doc": "Code snippet for enum",
      "filetype": "c",
      "grammar": "lsp",
      "label": "enum",
      "matches": {
        "enum": true
      }
    },
    "5d3cbce1-08ae-3afe-8a48-4ac95d9685f7": {
      "content": ":yields: ${0:arguments}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "y": true
      }
    },
    "5d3f164b-908a-3fc7-bee0-36eb57d22103": {
      "content": "${1:promise}.catch(error => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise.catch",
      "matches": {
        "pc": true
      }
    },
    "5d3fa8a1-c4ba-3295-8944-ed244ce6d64b": {
      "content": "border ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      }
    },
    "5d426269-d5bd-38bd-a5bb-f2ce3bb67585": {
      "content": "data division.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "data division",
      "matches": {
        "data division": true,
        "dd": true
      }
    },
    "5d541d17-7137-30ac-b0cb-b46634593bd2": {
      "content": "await Promise.all(${1:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "await Promise.all",
      "matches": {
        "apa": true
      }
    },
    "5d60464e-cbab-3ef1-bbae-cdb25ab9fa01": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Template;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Template",
      "matches": {
        "usetemplate": true
      }
    },
    "5d645edb-7909-3d33-be44-370761e214c0": {
      "content": "[self lockFocus];\n${0}\n[self unlockFocus];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      }
    },
    "5d66abc6-ced8-3fee-8b98-edf13b19c50e": {
      "content": "require ${0:Logger}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "req": true
      }
    },
    "5d67bc48-c2ef-3a33-98c0-81aa5c1e8f37": {
      "content": "scanf(\"$1\"$0);",
      "doc": "Generic scanf() snippet",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "scanf",
      "matches": {
        "scanf": true
      }
    },
    "5d6c7d5f-6b05-3568-ad12-2abc05c16016": {
      "content": "| append: '${string}' }}",
      "doc": "String filter: append",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter append",
      "matches": {
        "append": true
      }
    },
    "5d71b406-98cc-3cea-b031-013e5cd969a5": {
      "content": "${1:obj}.prop('${2:property name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      }
    },
    "5d71e208-57ac-3c7c-a5ce-8a8a836ccf0a": {
      "content": "__LINE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "LINE": true
      }
    },
    "5d76999f-4142-3aff-b728-58ce412dd487": {
      "content": "${1:callbacks}.empty()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cempty": true
      }
    },
    "5d7d94b7-1e5e-3c94-b109-41b96a72cbef": {
      "content": "http.Serve(\"${1::8080}\", ${2:nil})",
      "doc": "Snippet for http.Serve",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http.Serve",
      "matches": {
        "sv": true
      }
    },
    "5d7fc426-8e09-3984-8a2e-d57f17dfef15": {
      "content": "require '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "5d812411-e15a-3223-9921-b72c21e71a5e": {
      "content": "<track src=\"$1\" kind=\"$2\" srclang=\"$3\" label=\"$4\">$5",
      "doc": "HTML - Defines a table row",
      "filetype": "html",
      "grammar": "lsp",
      "label": "track",
      "matches": {
        "track": true
      }
    },
    "5d8b3705-004a-37e0-ad33-5f9eea241dc2": {
      "content": "private string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms-": true
      }
    },
    "5d8b53e8-1c0a-3df6-bfe5-3c25eaa299c8": {
      "content": "setup do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "setup do..end",
      "matches": {
        "setup": true
      }
    },
    "5d970694-c3f8-3aa1-ab82-83b64c64a001": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "5d9b6f64-4edc-3ffd-a337-6a606a69a26a": {
      "content": "<ol>${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true
      }
    },
    "5d9d5e31-5e13-3761-a9bf-db2d291adef7": {
      "content": "overflow-y: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      }
    },
    "5da02b83-1af4-367c-8020-cb95ef6f47a2": {
      "content": "@doc \"\"\"\n${1:doc}\n\"\"\"\n@spec ${2:name}(${3:args}) :: ${4:no_return}\ndef $2{5:args} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "def + doc + spec",
      "matches": {
        "defsd": true
      }
    },
    "5da746ff-176c-37a9-a702-215f09da1bba": {
      "content": "**kwargs${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kwargs": true
      }
    },
    "5daf5f11-8caf-3e50-98ce-4519e18c1a70": {
      "content": "{% apply ${1} %}\n\t${0}\n{% endapply %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig apply",
      "matches": {
        "apply": true
      }
    },
    "5daf80df-1f0c-33b8-ac27-88cdcc2c6ee2": {
      "content": "list-style-position: outside",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      }
    },
    "5dbcca86-43c8-338d-acfb-3a2730529d28": {
      "content": "| img_tag",
      "doc": "HTML filter: img tag",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter img tag",
      "matches": {
        "img_tag": true
      }
    },
    "5dc408f4-fd7a-3814-9e18-4c55e7cfbbb7": {
      "content": "[formGroupName]=\"${1:name}\"",
      "doc": "Angular formGroupName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformgroupname",
      "matches": {
        "a-formgroupname": true,
        "angular ng form group name": true
      }
    },
    "5dc53ec8-3a1a-37e9-9d40-3039d45e8cff": {
      "content": "// https://uniswap.org/docs/v2/smart-contracts/router01/\r\n// https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/UniswapV2Router01.sol implementation\r\n// UniswapV2Router01 is deployed at 0xf164fC0Ec4E93095b804a4795bBe1e041497b92a on the Ethereum mainnet, and the Ropsten, Rinkeby, Görli, and Kovan testnets\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.2;\r\n\r\ninterface IUniswapV2Router01 {\r\n  function factory() external pure returns (address);\r\n  function WETH() external pure returns (address);\r\n\r\n  function addLiquidity(\r\n      address tokenA,\r\n      address tokenB,\r\n      uint amountADesired,\r\n      uint amountBDesired,\r\n      uint amountAMin,\r\n      uint amountBMin,\r\n      address to,\r\n      uint deadline\r\n  ) external returns (uint amountA, uint amountB, uint liquidity);\r\n  function addLiquidityETH(\r\n      address token,\r\n      uint amountTokenDesired,\r\n      uint amountTokenMin,\r\n      uint amountETHMin,\r\n      address to,\r\n      uint deadline\r\n  ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\r\n  function removeLiquidity(\r\n      address tokenA,\r\n      address tokenB,\r\n      uint liquidity,\r\n      uint amountAMin,\r\n      uint amountBMin,\r\n      address to,\r\n      uint deadline\r\n  ) external returns (uint amountA, uint amountB);\r\n  function removeLiquidityETH(\r\n      address token,\r\n      uint liquidity,\r\n      uint amountTokenMin,\r\n      uint amountETHMin,\r\n      address to,\r\n      uint deadline\r\n  ) external returns (uint amountToken, uint amountETH);\r\n  function removeLiquidityWithPermit(\r\n      address tokenA,\r\n      address tokenB,\r\n      uint liquidity,\r\n      uint amountAMin,\r\n      uint amountBMin,\r\n      address to,\r\n      uint deadline,\r\n      bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n  ) external returns (uint amountA, uint amountB);\r\n  function removeLiquidityETHWithPermit(\r\n      address token,\r\n      uint liquidity,\r\n      uint amountTokenMin,\r\n      uint amountETHMin,\r\n      address to,\r\n      uint deadline,\r\n      bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n  ) external returns (uint amountToken, uint amountETH);\r\n  function swapExactTokensForTokens(\r\n      uint amountIn,\r\n      uint amountOutMin,\r\n      address[] calldata path,\r\n      address to,\r\n      uint deadline\r\n  ) external returns (uint[] memory amounts);\r\n  function swapTokensForExactTokens(\r\n      uint amountOut,\r\n      uint amountInMax,\r\n      address[] calldata path,\r\n      address to,\r\n      uint deadline\r\n  ) external returns (uint[] memory amounts);\r\n  function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n      external\r\n      payable\r\n      returns (uint[] memory amounts);\r\n  function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\r\n      external\r\n      returns (uint[] memory amounts);\r\n  function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\r\n      external\r\n      returns (uint[] memory amounts);\r\n  function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\r\n      external\r\n      payable\r\n      returns (uint[] memory amounts);\r\n\r\n  function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\r\n  function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\r\n  function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\r\n  function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\r\n  function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\r\n}",
      "doc": "Uniswap Router01",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "uniV2Router01",
      "matches": {
        "uniV2Router01": true
      }
    },
    "5dcb2006-386b-37ca-92dd-be5cc0f79c66": {
      "content": "border-top-left-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      }
    },
    "5dcfb02e-b716-3668-b08f-bc7e0b56f0be": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "5dd79316-c5e2-317d-ad1b-a3b2d8aa7f5f": {
      "content": "package ${1:main}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package",
      "matches": {
        "pa": true
      }
    },
    "5ddefceb-091f-35e2-8534-657e3d2041ec": {
      "content": "float $1 ()\n{\n\tfloat $2 = $3;$4\n\treturn $2;\n}",
      "doc": "Creates a function that returns the float type",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create float function",
      "matches": {
        "flfunc": true
      }
    },
    "5de474e9-34b6-357b-91af-631874702471": {
      "content": "{% paginate ${1:elements} as ${2:pageInfo}, ${3:pageEntries} %}\n\n{% for item in ${3:pageEntries} %}\n\t$0\n{% endfor %}\n\n{% if ${2:pageInfo}.prevUrl %}<a href=\"{{ ${2:pageInfo}.prevUrl }}\">Previous Page</a>{% endif %}\n{% if ${2:pageInfo}.nextUrl %}<a href=\"{{ ${2:pageInfo}.nextUrl }}\">Next Page</a>{% endif %}",
      "doc": "paginate simple",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "paginate",
      "matches": {
        "paginate": true
      }
    },
    "5de939b6-edf4-36be-8adb-159dea0dab26": {
      "content": "text-justify: tibetan;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      }
    },
    "5de95015-8307-309e-b944-3364624ba926": {
      "content": "text-align-last right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      }
    },
    "5df7d74b-6d9c-3944-97df-60ea7133ed40": {
      "content": "if ${1:value}, ok := ${2:map}[${3:key}]; ok == true {\n\t${4:/* code */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if key in a map",
      "matches": {
        "om": true
      }
    },
    "5dfaf4d0-c758-3e25-91a7-58573fdd6f65": {
      "content": "deep",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "deep",
      "matches": {
        "deep": true
      }
    },
    "5e098696-3be6-358a-ac4f-d6e6c2248338": {
      "content": "${1:router}.replace($2)$0",
      "doc": "router.replace()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerReplace",
      "matches": {
        "routerReplace": true
      }
    },
    "5e0cc53d-3d3e-33af-9e65-c0232293dccd": {
      "content": "module ${1:Mod} = ${2:Functor}(${3:Arg})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module instantiantion with functor",
      "matches": {
        "ml": true
      }
    },
    "5e0ce563-c9c9-3873-a04a-44f0f848cbc5": {
      "content": "d_ply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d_": true
      }
    },
    "5e0def73-3108-3799-b9dd-2d1c130c6b4b": {
      "content": "\\$\\{VISUAL${1:${2:default}${3:/transform/}}\\}",
      "doc": "",
      "filetype": "snippets",
      "grammar": "snu",
      "label": "${VISUAL}",
      "matches": {
        "vis": true
      }
    },
    "5e12cc5d-cfd4-3250-8263-1efac52646f2": {
      "content": "limit: ${1:5}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "limit": true
      }
    },
    "5e17fabe-7ec8-39a9-921e-85938decaf62": {
      "content": "# (APPENDIX) Appendix {-}$0",
      "doc": "Insert bookdown appendix",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown appendix",
      "matches": {
        "appendix": true
      }
    },
    "5e206d4d-eaa6-39ca-be26-7afbb2604a1e": {
      "content": "folder $1",
      "doc": "A folder for project organization",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Folder",
      "matches": {
        "fol": true
      }
    },
    "5e21ef5b-c885-3ed6-9911-0c8322e701a2": {
      "content": "import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = memo((props) => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n});\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a memoized stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactMemoProps",
      "matches": {
        "rscpm": true
      }
    },
    "5e22f189-f6b9-3418-bfa9-ce6080f7e19a": {
      "content": "return render_to_response('${1:template.html}', {\n\t\t${2}\n\t}${0:, context_instance=RequestContext(request)}\n)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r2r": true
      }
    },
    "5e288ef2-2325-3f35-831e-b1d18f55d957": {
      "content": "grid-row-start: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      }
    },
    "5e30ae0c-09e1-3686-9eec-c4fc128271c0": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "Base for Vuex store",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Store",
      "matches": {
        "vstore": true
      }
    },
    "5e32a3d9-7970-3388-8523-2a3c944a80c4": {
      "content": "expect(${1:target}).toContain(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to contain (js)",
      "matches": {
        "ec": true
      }
    },
    "5e334424-da4e-3772-90a5-d2e736b9bb74": {
      "content": "=> $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "=> ",
      "matches": {
        "=": true
      }
    },
    "5e3a4ed2-e055-365c-aec3-ffa25258233f": {
      "content": "\\\\href{${1}}{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "href": true
      }
    },
    "5e3cbc9e-185b-3a7c-92d2-47e62e262cc8": {
      "content": "<?php if (${1}): ?>\n\t${0:${VISUAL}}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php if (condition): ?> ... <?php endif; ?>",
      "matches": {
        "ifil": true
      }
    },
    "5e400c2c-2a3a-3f50-8e2e-e7c242a3ccd9": {
      "content": "<?php foreach ($${1:variable} as $${2:value}): ?>\n\t${0:${VISUAL}}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php foreach ($var as $value): ?>  ... <?php endforeach; ?>",
      "matches": {
        "foreachil": true
      }
    },
    "5e4024f5-c95c-3acb-9995-d4bf5471a9df": {
      "content": "expect(${1:target}).not.toBeFalsy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be falsy (js)",
      "matches": {
        "notf": true
      }
    },
    "5e42ba8e-652d-3c50-8260-d1c896152cc5": {
      "content": "${1:callbacks}.locked()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clocked": true
      }
    },
    "5e437d10-a90b-355d-b247-26c83991b64c": {
      "content": "page-break-after: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      }
    },
    "5e46777d-121c-3c5e-82d4-663b136240f5": {
      "content": "#!/usr/bin/env ruby",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "5e4935bc-1427-3080-9033-f795c3deee0a": {
      "content": "${1:expression} unless ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional one-line (unless)",
      "matches": {
        "xunless": true
      }
    },
    "5e4cc0d7-3866-376f-84f2-20c7c7fbebb9": {
      "content": "lowp",
      "doc": "The qualifier lowp is used to specify the lowest available precision for a variable. The variable has to be an integer or a floating point scalar or a vector or matrix based on these types. The precision qualifier precedes the type in the variable declaration.\nIn the vertex shader the use of a precision qualifier is optional. If no qualifier is given all variables are of highest precision. In the fragment shader a precision qualifier has to be used when declaring a variable unless a default precision has been defined for the specific type.\n\nvarying lowp vec4 colorVarying;\n\nThe actual range corresponding to a precision qualifier is dependent on the specific OpenGL ES implementation. Using a lower precision might have a positive effect on performance (frame rates) and power efficiency but might also cause a loss in rendering quality. The appropriate trade-off can only be determined by testing different precision configurations.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "lowp",
      "matches": {
        "lowp": true
      }
    },
    "5e4e761a-d458-3ff8-87da-4824db185203": {
      "content": "source(${1:'${2:}'}${3:, chdir = ${4:TRUE}})",
      "doc": "Source",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sou",
      "matches": {
        "source": true
      }
    },
    "5e598589-f1f9-36c6-8cc6-a8719505fb17": {
      "content": "componentWillMount() {\n\t$0\n}",
      "doc": "DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillmount",
      "matches": {
        "cwm": true,
        "react componentwillmount": true
      }
    },
    "5e59eb74-80db-3d49-9b91-7d8505ff8551": {
      "content": "place-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      }
    },
    "5e62baea-180b-361c-9a6b-e7e3e72b402a": {
      "content": "PropTypes.objectOf($0).isRequired",
      "doc": "An object with property values of a certain type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      }
    },
    "5e69cbff-1b46-3eb8-ae2a-e49d2f02cb1e": {
      "content": "my $${1:var} = do { local $/; open my $file, '<', \"${2:file}\"; <$file> };\n${0}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slurp": true
      }
    },
    "5e6b5fd7-c785-3be1-b7be-0fdbb39ec029": {
      "content": "import \"${1:package}\"",
      "doc": "Snippet for import statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "single import",
      "matches": {
        "im": true
      }
    },
    "5e6d3b59-038c-33e0-ba51-bb80dc437dae": {
      "content": "list-style-type: decimal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      }
    },
    "5e727474-d8e2-336c-88eb-71950d4cf0a8": {
      "content": "${1:ModelName}::model()->exists(${2:condition}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yexists": true
      }
    },
    "5e72f626-3a13-3a09-9e32-f1a50a2fcfcb": {
      "content": "/**\n * ${1:${VISUAL}}$0\n */",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "A JSDoc comment",
      "matches": {
        "/*": true
      }
    },
    "5e73cbe6-8074-38cb-b66e-9bc6e2058d4a": {
      "content": "**${1}**${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "**strong**",
      "matches": {
        "strong1": true
      }
    },
    "5e761d9f-de1f-327e-bb51-d196fb5fff9c": {
      "content": "{% trans \"$1\" %}",
      "doc": "trans tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "trans",
      "matches": {
        "trans": true
      }
    },
    "5e774bd5-108d-3bc0-9755-653058de3648": {
      "content": "try {\n  $0\n} catch (${1:e}) {\n}",
      "doc": "Insert a try/catch block.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "5e827fa9-82e0-3bbf-a8fc-af3e5e2d0fa3": {
      "content": "cursor text",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      }
    },
    "5e8f1182-460b-3798-a93b-0e980b453016": {
      "content": "try ${1:e}\nwith ${2:Not_found} -> ${3:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "5e92be93-bed0-3403-a959-d7a633b5ea9e": {
      "content": "echo CHtml::activeRadioButton(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yharb": true
      }
    },
    "5e948473-7884-38c1-abe1-5adaab4559e8": {
      "content": "for ${1} (${2:#:expression}){\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "5e95a55f-a636-3a2e-8116-82196f5a4a26": {
      "content": "$.when(${1:deferreds})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dwhen": true
      }
    },
    "5e95ac88-5727-3faa-a96b-970731bcf2b7": {
      "content": "protected bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb|-": true
      }
    },
    "5e9a31fa-311b-310a-8d89-8bf1f4795a54": {
      "content": "yield ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "yield",
      "matches": {
        "y": true
      }
    },
    "5e9bffea-915c-321d-ae72-e25ab0e0d849": {
      "content": "import PropTypes from 'prop-types';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import PropTypes",
      "matches": {
        "irp": true
      }
    },
    "5e9d9699-1c25-38e9-90f0-de611eda18ac": {
      "content": "in_array(${1:needle}, ${2:haystack})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "in_array",
      "matches": {
        "ia": true
      }
    },
    "5eaa108b-d3ee-3550-8d9d-0e063c58e9bb": {
      "content": "place-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      }
    },
    "5eb074e3-cada-3ec1-a908-23b7cdb6c370": {
      "content": "pgl.beginGL();\n\t${0}\npgl.endGL();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "begin gl",
      "matches": {
        "gl": true
      }
    },
    "5eb342cd-d84f-3a06-9945-c4bafd901f2e": {
      "content": "mixed.transform()",
      "doc": "mixed.transform((currentValue: any, originalValue: any) => any): Schema\n\nAdds a transformation to the transform chain. Transformations are central to the casting process,\ndefault transforms for each type coerce values to the specific type (as verified by isType()).\ntransforms are run before validations and only applied when strict is true. Some types have built in transformations.Transformations are useful for arbitrarily altering how the object is cast, however, you should take care\nnot to mutate the passed in value. Transforms are run sequentially so each value represents the\ncurrent state of the cast, you can use the originalValue param if you need to work on the raw initial value.let schema = string().transform(function(value, originalvalue) {\n  return this.isType(value) && value !== null ? value.toUpperCase() : value;\n});\n\nschema.cast(\"jimmy\"); // => 'JIMMY'\nEach types will handle basic coercion of values to the proper type for you, but occasionally\nyou may want to adjust or refine the default behavior. For example, if you wanted to use a different\ndate parsing strategy than the default one you could do that with a transform.module.exports = function(formats = \"MMM dd, yyyy\") {\n  return date().transform(function(value, originalvalue) {\n    // check to see if the previous transform already parsed the date\n    if (this.isType(value)) return value;\n\n    // the default coercion failed so lets try it with Moment.js instead\n    value = Moment(originalValue, formats);\n\n    // if its valid return the date object, otherwise return an `InvalidDate`\n    return value.isValid() ? value.toDate() : new Date(\"\");\n  });\n};\nstringDefine a string schema. Supports all the same methods as mixed.let schema = yup.string();\n\nawait schema.isValid(\"hello\"); // => true\nBy default, the cast logic of string is to call toString on the value if it exists.\nempty values are not coerced (use ensure() to coerce empty values to empty strings).Failed casts return the input value.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-transform",
      "matches": {
        "yup mixed transform": true
      }
    },
    "5ebcf1d2-3d6b-36a2-8ab8-6f3a9fae4776": {
      "content": "<div id=\"${1}\">${2:TARGET}</div>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divid": true
      }
    },
    "5ebd3693-5413-3fd6-8439-26ecbf594f70": {
      "content": "- (void) dealloc\n{\n\t${0:deallocations}\n\t[super dealloc];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dealloc": true
      }
    },
    "5ebd68a1-8b1f-3e35-b508-934063bf6cc2": {
      "content": "display: table-footer-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbfg": true
      }
    },
    "5ebe4b28-c1ec-35c9-831b-dd25600cf62a": {
      "content": "$.hasData('${0:selector expression}');",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasd": true
      }
    },
    "5ec87b97-bc40-3619-b27f-8681fbf3a905": {
      "content": "<xsl:text>${0}</xsl:text>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      }
    },
    "5eca1026-7719-34fb-8c77-bfb4134659d2": {
      "content": "| url_escape",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_escape": true
      }
    },
    "5eca787a-72c9-3384-b6b5-670ae9da2cfe": {
      "content": "else",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "5ecee1f0-3bf1-32d1-9e3d-cb92832e207f": {
      "content": "<%= link_to '${1:link text...}', controller: '${2:items}', action: '${0:index}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lica": true
      }
    },
    "5ed2e595-f620-3088-84fa-d2080fb2bc8c": {
      "content": "status(${0:text});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "status": true
      }
    },
    "5ed32f97-3e7b-3163-a1a4-81bd9bab653e": {
      "content": "<li><a href=\"${2:#}\">${1}</a></li>\nlia+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia+": true
      }
    },
    "5ed45e57-c119-3203-a9d6-2ebeeb9b968f": {
      "content": "package ${1:packageName}",
      "doc": "Snippet for package statement",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "package",
      "matches": {
        "package": true
      }
    },
    "5ed66557-825b-3bab-9271-acc6a6362826": {
      "content": "arr",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Array",
      "matches": {
        "T": true
      }
    },
    "5ee08fad-402d-39c7-87cc-bbabef820088": {
      "content": "<article>\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article": true
      }
    },
    "5ee65879-30ed-3ead-8451-771df6fe056d": {
      "content": "background-image: url('${0:background.jpg}');",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-image",
      "matches": {
        "bgi": true
      }
    },
    "5ef2797e-4bc9-3dc4-aacd-03b9234a09fa": {
      "content": "$this->shouldThrow(${1:'\\Exception'})->duringInstantiation();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldThrow('\\Exception')->duringInstantiation()",
      "matches": {
        "sthrowi": true
      }
    },
    "5ef588b7-251b-3567-bb84-b6e31412bcf4": {
      "content": "console.error($1);\n$0",
      "doc": "Log error to the console",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Log error to console",
      "matches": {
        "error": true
      }
    },
    "5ef8d56f-01fd-35dd-8676-31d08f6658be": {
      "content": "_.capitalize(${string})",
      "doc": "_.capitalize('FRED');\n// => 'Fred'\n\nConverts the first character of `string` to upper case and the remaining\nto lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-capitalize",
      "matches": {
        "lodash capitalize": true
      }
    },
    "5efd5632-7a2e-3634-a6bb-203b7a265345": {
      "content": "yup.ref()",
      "doc": "yup.ref(path: string, options: { contextPrefix: string }): Ref\n\nCreates a reference to another sibling or sibling descendant field. Refs are resolved\nat validation/cast time and supported where specified. Refs are evaluated in the proper order so that\nthe ref value is resolved before the field using the ref (be careful of circular dependencies!).let schema = object({\n  baz: ref(\"foo.bar\"),\n  foo: object({\n    bar: string()\n  }),\n  x: ref(\"$x\")\n});\n\nschema.cast({ foo: { bar: \"boom\" } }, { context: { x: 5 } });\n// => { baz: 'boom',  x: 5, foo: { bar: 'boom' } }",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-ref",
      "matches": {
        "yup ref": true
      }
    },
    "5effaafc-c945-3ce5-b58b-24ed74c30f2b": {
      "content": "${1:expression} while ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Loop one-line (xwhile)",
      "matches": {
        "xwhile": true
      }
    },
    "5f01baa1-c292-3296-bf12-8e6e82c1ae1f": {
      "content": "shadowOffset: ${1},",
      "doc": "shadowOffset",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "shadowOffset",
      "matches": {
        "sha": true
      }
    },
    "5f01c29a-9bda-3432-ab46-6bdf5f87424d": {
      "content": "on ${1:#:functionName}(${2:#:arguments})\n\t${3:TARGET}\nend ${1}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      }
    },
    "5f052333-64ef-32d0-a105-e708edbb6d4d": {
      "content": "text-justify inter-word",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      }
    },
    "5f0e9d42-9b77-3a31-8a9f-fdc13085b452": {
      "content": "expect($1).rejects$0",
      "doc": "expect promise rejects to",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-rejects",
      "matches": {
        "exprj": true,
        "jest expect rejects": true
      }
    },
    "5f0fe3cc-f6b8-3c13-908f-318f597e764b": {
      "content": "{% elseif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig elseif",
      "matches": {
        "eif": true
      }
    },
    "5f12de3f-37b4-39d1-9eda-187ad7c90ba0": {
      "content": "repeat ${1:integer}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      }
    },
    "5f1d537f-36d1-30b0-a595-5330d7f3a2aa": {
      "content": "cy.scrollTo(${1:x}, ${2:y});",
      "doc": "Scroll to a position defined by the distance in pixels from window/element’s x and y or percentage of the window/element’s width and height.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-scroll-to-coordinates",
      "matches": {
        "cypress scroll to coordinates": true
      }
    },
    "5f29a2a5-f311-3157-b315-3e1121662b50": {
      "content": "flex-flow: ${1:row} ${0:nowrap};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxf": true
      }
    },
    "5f38c7e2-7d7a-3f65-b48f-99563bf567b5": {
      "content": "vertical-align: ${1:baseline/sub/super/top/text-top/middle/bottom/text-bottom/length/%};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "vertical-align: type (vertical)",
      "matches": {
        "vertical": true
      }
    },
    "5f3ec776-7e59-3cea-accd-7456a1a4f495": {
      "content": "<% } else if ({$1:condition}) { %>\n $2",
      "doc": "EJS if statement",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Else If Statement",
      "matches": {
        "ejselif": true
      }
    },
    "5f4cf037-9965-3afe-a5e9-a84de62a9ccf": {
      "content": "{\n\t\"type\": \"blog\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_blog": true
      }
    },
    "5f4eda49-3209-3ac5-a639-a73b3c9d8713": {
      "content": "justify-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      }
    },
    "5f622508-47a2-33e3-810d-a9f3b3a62fa8": {
      "content": "bind:${1|duration,buffered,played,seekable,seeking,ended,currentTime,playbackRate,paused,volume,muted,videoWidth,videoHeight|}",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-media-elements",
      "matches": {
        "s-bind-media-elements": true
      }
    },
    "5f66951a-489f-30c7-9023-f3a1ac3fedc5": {
      "content": "if ${1:condition}\n   $0\nelse\n   \nend-if",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "if else",
      "matches": {
        "iee": true,
        "if": true
      }
    },
    "5f69d760-4d22-3354-9ee2-c66f7629eefc": {
      "content": "SELECT ${1:attribute(s)} FROM ${2:tableName}\nUNION ALL\nSELECT ${3:attribute(s)} FROM ${4:tableName2};",
      "doc": "All union",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "uniona",
      "matches": {
        "uniona": true
      }
    },
    "5f6c099d-400e-3c9e-b079-1e17647bd16b": {
      "content": "new RegExp(r'${1}')",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rgx": true
      }
    },
    "5f6df7bc-2e81-3bbe-9118-eefe483d3f71": {
      "content": "_.intersectionWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.intersectionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }]\n\nThis method is like `_.intersection` except that it accepts `comparator`\nwhich is invoked to compare elements of `arrays`. The order and references\nof result values are determined by the first array. The comparator is\ninvoked with two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersectionwith",
      "matches": {
        "lodash intersectionwith": true
      }
    },
    "5f72e4a5-5d0b-30c8-a2a0-37d29d708565": {
      "content": "grid-row-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      }
    },
    "5f8b3858-f672-35f4-9570-bc63b59176fd": {
      "content": "border-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      }
    },
    "5f9089ed-bb2d-3193-9ce2-0d890c44828c": {
      "content": "for ${2:k}, ${3:v} := range ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for k, v := range items { ... }",
      "matches": {
        "forr": true
      }
    },
    "5f90f988-bf89-308d-9c11-804842129813": {
      "content": "const ${1:name} = reactive({\n\t${2:count}: ${3:0}\n})",
      "doc": "Set reactive property - Vue Composition API",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3reactive",
      "matches": {
        "vue v3 reactive": true
      }
    },
    "5f936c8a-9ec3-39dc-b528-ca1fa409ddee": {
      "content": "{% use \"${1:template}\" %}$0",
      "doc": "use",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "use",
      "matches": {
        "use": true
      }
    },
    "5f9c7f55-d08d-39c0-8c44-56079eb93379": {
      "content": "*ngIf=\"${1:expression}\"",
      "doc": "Angular *ngIf",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngif",
      "matches": {
        "a-ngif": true,
        "angular ng if": true
      }
    },
    "5f9e431b-e715-338b-aca5-83906431b749": {
      "content": "namespace current",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsc": true
      }
    },
    "5f9f7726-3467-3819-b1d4-d50ae1d1f41a": {
      "content": "/**\n * ${3:undocumented class variable}\n *\n * @var ${4:string}\n */\n${1:var} $${2};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_v": true
      }
    },
    "5fa431de-b649-3e00-8dc7-ce7be9c80016": {
      "content": "zoom 1",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      }
    },
    "5fa6b195-7502-39f4-9db9-e8a9e085f385": {
      "content": "border-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      }
    },
    "5fa86434-c83b-32c2-a97d-af3d38af4047": {
      "content": "expect(${1:target}).toBeUndefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (js)",
      "matches": {
        "eud": true
      }
    },
    "5fac8c3b-d27a-3c7e-a437-5c68b6261d61": {
      "content": "require('svelte/register');\nconst ${1:App} = require('${2:./App.svelte}').default;",
      "doc": "svelte register",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-register",
      "matches": {
        "s-register": true
      }
    },
    "5fba66ff-7dee-3b64-9eac-857334bac365": {
      "content": "cursor: move",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      }
    },
    "5fba6c8b-5994-3c2c-934b-874f9ef1b590": {
      "content": "const ${1:name} = reactive({\n\t${2:count}: ${3:0}\n})",
      "doc": "Vue Composition api - reactive",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - Reactive",
      "matches": {
        "v3reactive": true
      }
    },
    "5fc74435-fb4f-3e48-899d-b009f0449474": {
      "content": "match ${1:object}\n| ${2:value} => ${3}\n| otherwise => void",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      }
    },
    "5fc87e43-0325-33b1-be31-add7cbce4b92": {
      "content": "it('should $1', () => {\n  $0\n})",
      "doc": "Testing `it` block",
      "filetype": "react",
      "grammar": "lsp",
      "label": "itBlock",
      "matches": {
        "tit": true
      }
    },
    "5fcf1b77-6499-3296-ac6e-5b0061f58ffe": {
      "content": "form_textarea(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_textarea": true
      }
    },
    "5fd02527-654f-3db2-b86a-7ff42e9581f6": {
      "content": "_.overArgs(${func}, ${transforms})",
      "doc": "function doubled(n) {\n  return n * 2;\n}\n\nfunction square(n) {\n  return n * n;\n}\n\nvar func = _.overArgs(function(x, y) {\n  return [x, y];\n}, [square, doubled]);\n\nfunc(9, 3);\n// => [81, 6]\n\nfunc(10, 5);\n// => [100, 10]\n\nCreates a function that invokes `func` with its arguments transformed.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-overargs",
      "matches": {
        "lodash overargs": true
      }
    },
    "5fd095ea-af12-35e1-8447-6e888ef4f64a": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}');",
      "doc": "Creates an NgRx Action",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Action",
      "matches": {
        "a-ngrx-create-action": true
      }
    },
    "5fd14326-a63a-366e-a9bc-24f663c8050a": {
      "content": "==== ${1} ====\n\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "====": true
      }
    },
    "5fd1707a-b7bf-3aee-b7d9-63fbd5ea0377": {
      "content": "${1:name}.flatMap${0:[T]}(a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flatmap": true
      }
    },
    "5fd4096d-f8c1-32eb-b44a-c6ae053cb3ac": {
      "content": "${1:obj}.hover (${2:e}) ->\n\t${3:// event handler}\n, ($2) ->\n\t${4:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hover": true
      }
    },
    "5fd557c3-34b6-3c43-adf4-931770e88147": {
      "content": "FUNCTION HIGHEST-ALGEBRAIC(${1:numeric-identifier})$0",
      "doc": "highest value that could possibly be stored in the specified numeric-identifier",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-HIGHEST-ALGEBRAIC",
      "matches": {
        "FUNCTION HIGHEST-ALGEBRAIC": true
      }
    },
    "5fd8d19a-a997-3c06-8656-59813f0436fb": {
      "content": "${1:FIELDNAME} = models.TextField($2)",
      "doc": "TextField (mtext).\n\nA large text field.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mtext",
      "matches": {
        "mtext": true
      }
    },
    "5fda0b97-96e4-3510-8b72-98c8114b94d7": {
      "content": "<dl>\n\t<dt>${1}</dt>\n\t<dd>${2}</dd>\n\tdt+${0}\n</dl>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl+": true
      }
    },
    "5fdefa47-7266-3cce-9e2c-65049be66f80": {
      "content": "word-wrap: unrestricted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      }
    },
    "5fed248f-4626-33a3-b0c6-68a2f1aff559": {
      "content": "<xsl:import href=\"${1:stylesheet}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      }
    },
    "5ff3df21-82fa-374d-88ce-616e869f23d3": {
      "content": "table-layout auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      }
    },
    "5ff7c7a4-9b64-3c3f-8076-3bb23dfb23ef": {
      "content": "cast(${1:T})(${2:val});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cast": true
      }
    },
    "5ff9d94c-db61-33c6-977e-c1598fc7f5af": {
      "content": "\\\\begin{figure}[htpb]\n\\\\begin{center}\n\\\\begin{tikzpicture}[scale=${1:1}, transform shape]\n\t${2}\n\\\\end{tikzpicture}\n\\\\end{center}\n\\\\caption{${3}}%\n\\\\label{fig:${4}}\n\\\\end{figure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "figure environment (tikzpicture)",
      "matches": {
        "tikz": true
      }
    },
    "5ffb9e33-a792-3892-81c1-530e5082f886": {
      "content": "expect(${1:target}).toBeFalsy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be falsy (coffee)",
      "matches": {
        "ef": true
      }
    },
    "6002c3d9-29e0-3a6e-bc1f-a1b86f166e00": {
      "content": "maxWidth: ${1},",
      "doc": "maxWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "maxWidth",
      "matches": {
        "max": true
      }
    },
    "60066a36-2460-3731-ae15-3bbb45ec6cab": {
      "content": "DELIMITED BY SPACE",
      "doc": "DELIMITED BY SPACE (string)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "DELIMITED_SPACE",
      "matches": {
        "DELIMITED BY SPACE": true,
        "DS": true
      }
    },
    "60082701-16f2-349e-af77-3deafea2cc5f": {
      "content": "$.grep(${1:array}, function (item, index) {\n\t${2}\n}${0:, true});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grep": true
      }
    },
    "60085ce6-903b-3912-86ba-b83bd2e73440": {
      "content": "alignItems: '${1:center}',",
      "doc": "alignItems",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "alignItems",
      "matches": {
        "align": true
      }
    },
    "600c135c-cdd7-344a-9e32-5ef877359bac": {
      "content": "useLayoutEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t};\n}, [${3:input}])",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-uselayouteffect",
      "matches": {
        "react uselayouteffect": true,
        "uselayouteffect": true
      }
    },
    "600cdcc8-626b-3745-b2b1-d64f40c4fed5": {
      "content": "set ${1:first}(${2:second}) {${3:third}}",
      "doc": "Creates a setter property inside a class",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propertySet",
      "matches": {
        "pse": true
      }
    },
    "600d2982-fa33-396e-8f98-c073d131548c": {
      "content": "// Package $1 provides ...\npackage ${1:main}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Package declaration",
      "matches": {
        "/^package/": true
      }
    },
    "601bb04a-6acb-36ea-8501-daed4ef35f45": {
      "content": "<nav>\n\t$1\n</nav>",
      "doc": "HTML - Defines navigation links",
      "filetype": "html",
      "grammar": "lsp",
      "label": "nav",
      "matches": {
        "nav": true
      }
    },
    "601e17f8-3ebd-39df-a870-35fe99610e77": {
      "content": "{% endjs %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endjs",
      "matches": {
        "endjs": true
      }
    },
    "60208392-e238-3179-baac-815cf541b671": {
      "content": "${1:callbacks}.lock()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clock": true
      }
    },
    "60255b29-1a57-3d12-89d7-7b11c092a090": {
      "content": "@${1:variable_name} ||= ${0:cached_value}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert inctance variable cache",
      "matches": {
        "ivc": true
      }
    },
    "602836f8-53f7-3180-9ba5-18d76286043b": {
      "content": "pow($2, $3)",
      "doc": "float pow(float x, float y)\nvec2 pow(vec2 x, vec2 y)\nvec3 pow(vec3 x, vec3 y)\nvec4 pow(vec4 x, vec4 y)\n\nThe power function returns x raised to the power of y. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "pow",
      "matches": {
        "pow": true
      }
    },
    "6028c522-fa20-37f2-93f0-a7c350baef39": {
      "content": "#!/usr/bin/env perl",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "602c00f1-acd6-323d-85c5-c693a3003d76": {
      "content": "{% endmacro %}$0",
      "doc": "endmacro",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endmacro",
      "matches": {
        "endmacro": true
      }
    },
    "6038cd53-ff0e-39d6-ad45-ae0f27403a36": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithMemoAndPropTypes",
      "matches": {
        "imrmp": true
      }
    },
    "603b3f1b-08a2-37ca-94e5-7a34dce698bd": {
      "content": "overflow-x: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      }
    },
    "6045893a-aeec-3365-a40d-437348eb3af5": {
      "content": "# Service resource\nservice ${1:\"service_name\"} do # Name of the service\n\t${2:#}enabled ${3:nil} # Whether the service is enabled at boot time\n\t${4:#}running ${5:nil} # Make sure the service is running. Start if stopped\n\t${6:#}pattern ${7} # Pattern to look for in the process table\n\t${8:#}start_command ${9:nil} # Command used to start this service\n\t${10:#}stop_command ${11:nil} # Command used to stop this service\n\t${12:#}status_command ${13:nil} # Command used to check the service run status\n\t${14:#}restart_command ${15:nil} # Command used to restart this service\n\t${16:#}reload_command ${17:nil} # Command used to tell this service to reload its configuration\n\t${18:#}supports ${19:false} # Features this service supports, ie :restart, :reload, :status\n\n\t${20:#}${21:action :enable} # Enable this service\n\t${22:#}${23:action :disable} # Disable this service\n\t${24:#}${25:action :nothing} # Don't do anything with this service (Default)\n\t${26:#}${27:action :start} # Start this service\n\t${28:#}${29:action :stop} # Stop this service\n\t${30:#}${31:action :restart} # Restart this service\n\t${32:#}${0:action :reload} # Reload the configuration for this service\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service": true
      }
    },
    "604b624c-dc26-39e3-89e9-44917a84d9a0": {
      "content": "<tbody>\n\t${0}\n</tbody>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbody": true
      }
    },
    "60639a01-6fb1-32eb-8bd5-663e209e16d0": {
      "content": "font-size: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-size": true,
        "fs": true
      }
    },
    "60696125-2680-3e48-ad29-096ad0139041": {
      "content": "~w(${0})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "word list",
      "matches": {
        "wl": true
      }
    },
    "606e192b-b551-3fbe-ac41-7c19ed36431a": {
      "content": "pointLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pointLight": true
      }
    },
    "6070b269-f295-35d2-ba73-2d395eacb3d0": {
      "content": "expect(() => {\n\t$0\n}).toThrowErrorMatchingInlineSnapshot();",
      "doc": "expects that the method will throw an error matching the inline snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerrormatchinginlinesnapshot",
      "matches": {
        "jest expect tothrowerrormatchinginlinesnapshot": true,
        "ttemis": true
      }
    },
    "60749171-3f15-343e-83e7-ab2ee0b44a99": {
      "content": "place-self ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "60757882-4e0e-3947-bffb-d795a359b5b2": {
      "content": "@enter-cancelled='$1'$0",
      "doc": "@enter-cancelled=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "enter-cancelled",
      "matches": {
        "enterCancelledEvent": true
      }
    },
    "607cbe84-78a5-3bdd-9649-7cc5e131a6c5": {
      "content": "${1:fn} :: ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      }
    },
    "60882e99-ea54-3b59-98db-34c78dbc6df6": {
      "content": "def ${1:methodName}(${2:argName}: ${3:ArgType}): ${4:ReturnType} = ${5:println(\"Hello, world!\")}",
      "doc": "Method as one-liner",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "def_short",
      "matches": {
        "def_short": true
      }
    },
    "6088dbba-5d73-35f2-b49f-5c97163a755f": {
      "content": "try\n\t$1\ncatch ${2:error}\n\t$3",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Try .. Catch",
      "matches": {
        "try": true
      }
    },
    "608cfcf2-fca8-3cdb-8242-4da18cf1f5b5": {
      "content": ".. code-block:: ${1:#:filetype}\n\n${2:#:content}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "code",
      "matches": {
        "code_block": true
      }
    },
    "608eeaef-60fc-3fb3-8e7d-c3a2ca92088c": {
      "content": "${1:obj}.size()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true
      }
    },
    "6090789d-7774-31f2-97e5-f57df6db9798": {
      "content": "|> Enum.reduce(${1:acc}, fn ${2}, ${3:acc} -> ${0} end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to reduce",
      "matches": {
        ">r": true
      }
    },
    "609c35aa-5bc0-38fa-8241-7f22b5b14918": {
      "content": "crit(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crit": true
      }
    },
    "609d64f1-ab16-37ce-a873-fe045f379173": {
      "content": "${1:obj}.undelegate(${2:selector expression}, ${3:event}, ${4:handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undele": true
      }
    },
    "60a22693-4778-316f-8c9e-04d65dff6eca": {
      "content": "display: run-in;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      }
    },
    "60a4a28c-c1e2-3c6a-925e-312f27ae34da": {
      "content": "for {\n\tselect {\n\t\tcase ${2:${1:result} := }<- ${3:channel}:\n\t\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for select",
      "matches": {
        "forsel": true
      }
    },
    "60b3662d-558a-3b45-8b66-e65c2153eb4d": {
      "content": "belongs_to :${1:association}, polymorphic: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "btp": true
      }
    },
    "60b96c93-2ffd-39d5-93b9-fcbe5b77ab72": {
      "content": "import ${1:package}: ${2:exports} as ${3:name}",
      "doc": "Code snippet for import something from a package and rename.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "import from as",
      "matches": {
        "as": true,
        "from": true,
        "im": true,
        "import": true
      }
    },
    "60bff6ab-9183-332b-8a27-340e3d3b89da": {
      "content": "System.out.format(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      }
    },
    "60c19e00-1c91-316e-b350-75c978cda70b": {
      "content": "fn main() {\n    ${1:unimplemented!();}\n}",
      "doc": "fn main() { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "60c2e421-ae24-3678-8db3-033ea53c1a3a": {
      "content": "justify-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      }
    },
    "60c93a9c-26e3-3484-bde3-6fd868e45d3f": {
      "content": "<dt>${1}</dt>\n<dd>${2}</dd>\ndt+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt+": true
      }
    },
    "60c9670a-9be2-3b53-a197-29b5b1e0ad4b": {
      "content": "{% ifchanged %}$1{% endifchanged %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      }
    },
    "60cd3049-af28-3c80-8314-421bd53eff47": {
      "content": "#[cfg_attr(${1}, ${2})]",
      "doc": "#[cfg_attr(…, …)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "cfg_attr",
      "matches": {
        "cfg_attr": true
      }
    },
    "60d02887-f197-357a-9d38-6dd0e6ea73b0": {
      "content": "import React from 'react'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-export-component",
      "matches": {
        "rafce": true,
        "react component arrow function export": true
      }
    },
    "60d448e0-433c-3575-84ba-f92ccff39d9d": {
      "content": "var name value)",
      "doc": "Create a variable with var",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "var",
      "matches": {
        "var": true
      }
    },
    "60e19d4c-3015-31de-a4c7-9984a6e458bb": {
      "content": "Vue.version$0",
      "doc": "Vue.version.split('.')[]",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "version",
      "matches": {
        "VueVersion": true
      }
    },
    "60e3f0eb-7f92-3d77-9794-209156341804": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script setup lang=\"ts\">\n\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Setup Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Setup Composition API with Typescript",
      "matches": {
        "vbase-3-ts-setup": true
      }
    },
    "60f7eeb7-ccaa-3849-aa6f-2e85f16364ef": {
      "content": "public ${1:Name}Iterator ${1:Name}\n{\n    get\n    {\n        return new ${1:Name}Iterator(this);\n    }\n}\n\npublic class ${1:Name}Iterator\n{\n    readonly ${2:ClassName} outer;\n    \n    internal ${1:Name}Iterator(${2:ClassName} outer)\n    {\n        this.outer = outer;\n    }\n    \n    // TODO: provide an appropriate implementation here\n    public int Length { get { return 1; } }\n    \n    public ${3:ElementType} this[int index]\n    {\n        get\n        {\n            //\n            // TODO: implement indexer here\n            //\n            // you have full access to ${2:ClassName} privates\n            //\n            ${4:throw new System.NotImplementedException();}\n            return default(${3:ElementType});\n        }\n    }\n    \n    public System.Collections.Generic.IEnumerator<${3:ElementType}> GetEnumerator()\n    {\n        for (int i = 0; i < this.Length; i++)\n        {\n            yield return this[i];\n        }\n    }\n}",
      "doc": "Named iterator/indexer pair using a nested class",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Named iterator/indexer pair using a nested class",
      "matches": {
        "iterindex": true
      }
    },
    "60fc10b7-910e-3f3c-8f65-e2f023332b5e": {
      "content": "<button type=\"$1\">$2</button>$3",
      "doc": "HTML - Defines a push button",
      "filetype": "html",
      "grammar": "lsp",
      "label": "button",
      "matches": {
        "button": true
      }
    },
    "60fd9ef3-603b-3930-b854-37397454e286": {
      "content": "outline-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outline-width": true,
        "ow": true
      }
    },
    "610efed7-db1b-3923-98b2-6b11d9fe61f1": {
      "content": "${1:name}\tdate\t${3:default sysdate}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dcol": true
      }
    },
    "6110d232-9589-3d62-8cb1-faffb4d0fe15": {
      "content": "${1:obj}.focusOut (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusout": true
      }
    },
    "6110ea29-0ebf-3680-876e-8b7b7001035c": {
      "content": "beforeEnter(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router per-route guard beforeEnter",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeEnter",
      "matches": {
        "vbeforeenter": true
      }
    },
    "6111e028-4cf3-3bf7-af72-8b0efb74d190": {
      "content": "text-transform capitalize",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:c": true
      }
    },
    "61145223-e061-337e-80dc-72fd9c3351e8": {
      "content": "protected",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "po": true
      }
    },
    "6117a50d-6e33-3b88-ab87-70463d67ed5d": {
      "content": "_.now()",
      "doc": "_.defer(function(stamp) {\n  console.log(_.now() - stamp);\n}, _.now());\n// => Logs the number of milliseconds it took for the deferred invocation.\n\nGets the timestamp of the number of milliseconds that have elapsed since\nthe Unix epoch (1 January 1970 00:00:00 UTC).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-now",
      "matches": {
        "lodash now": true
      }
    },
    "6128a147-222a-32df-93c2-2dd2bd3e15b3": {
      "content": "grid-auto-rows: max-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mac": true
      }
    },
    "613401d1-9abb-38f6-aa7a-3d49aa2ffc07": {
      "content": "# https://kubernetes.io/docs/concepts/services-networking/service/\napiVersion: v1\nkind: Service\nmetadata:\n  name: ${1:myjob}\n  namespace: ${2:default}\nspec:\n  selector:\n    app: ${1:myjob}\n  type: ${3|ClusterIP,NodePort,LoadBalancer|}\n  ports:\n  - name: ${1:myjob}\n    protocol: ${4|TCP,UDP|}\n    port: ${5:80}\n    targetPort: ${6:5000}\n    nodePort: ${7:30001}\n---\n$0",
      "doc": "k8s Service",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Service",
      "matches": {
        "k-service": true
      }
    },
    "61340741-836d-37a1-958a-e277b7218c78": {
      "content": "font-stretch: extra-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      }
    },
    "613b9d0a-96da-35a0-bed3-5d64883eaa75": {
      "content": "type tr_${1:name} is record (${0:/* columns */});",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "6141a507-09c1-396e-a41b-1674924f3cf3": {
      "content": "quotes '\\00AB' '\\00BB' '\\201E' '\\201C'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      }
    },
    "6145c944-e1cf-3e4f-924f-438c4cab4fcc": {
      "content": "{%- section '${1:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section-": true
      }
    },
    "6148d9b9-2c42-3c2f-923f-07db2b82e801": {
      "content": "${1:obj}.insertAfter('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insa": true
      }
    },
    "6149f1d2-c330-3406-b427-a499aae7815f": {
      "content": "case ${1} is\n\twhen ${2} => ${3},${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case expression",
      "matches": {
        "casex": true
      }
    },
    "61520f03-cbfc-3266-9253-674b099c683a": {
      "content": "try\n{\n\t${VISUAL}$0\n}\ncatch (${1:Exception} ${2:e})\n{\n\tthrow;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try catch block",
      "matches": {
        "try": true
      }
    },
    "615404e0-450e-382e-8b06-a0777332b586": {
      "content": "<c:param name=\"${1}\" value=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cparam": true
      }
    },
    "6155e71f-dfbb-33b0-bc5c-6a0e3caad52e": {
      "content": "for ${1:#:key}, ${2:#:value} of ${3:#:object}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      }
    },
    "615cbefd-1eaa-3b86-8437-f63a1e1e5b52": {
      "content": "outline-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true,
        "outline-color": true
      }
    },
    "615d3cef-ec02-3204-8ca3-21b1daee5c25": {
      "content": "text-transform: uppercase",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      }
    },
    "615d44e4-434a-3a1e-bd71-bb717a88a036": {
      "content": "${1:FIELDNAME} = models.ForeignKey($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ForeignKey",
      "matches": {
        "fk": true
      }
    },
    "616d650b-6428-3c55-aae7-04ef36f6a3aa": {
      "content": "[[${1:foo} alloc] init${2}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alloc": true
      }
    },
    "616e18f7-a7e4-32e7-8327-2679d0143e13": {
      "content": "|> Enum.map($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "pipe into map",
      "matches": {
        ">m": true
      }
    },
    "6171d46f-4e16-36ce-be4d-f5ca546554e1": {
      "content": "const [ref, inView, entry] = useInView(options)",
      "doc": "The new React Hooks make it easier than ever to monitor the inView state of your components. Call the useInView hook with the (optional) options you need. It will return an array containing a ref, the inView status and the current IntersectionObserverEntry. Assign the ref to the DOM element you want to monitor, and the hook will report the status. \n\nOptions\nroot(type: Element, default: window, required: false)\nThe Element that is used as the viewport for checking visibility of the target. Defaults to the browser viewport (window) if not specified or if null.\n\nrootMargin(type: String, default: '0px', required: false)\nMargin around the root. Can have values similar to the CSS margin property.\n\nthreshold(type: Number, default: 0, required: false)\nNumber between 0 and 1 indicating the percentage that should be visible before triggering. Can also be an array of numbers, to create multiple trigger points.\n\ntriggerOnce(type: Boolean, default: false, required: false)\nOnly trigger this method once",
      "filetype": "react-intersection-observer",
      "grammar": "lsp",
      "label": "react-intersection-observer-use-in-view",
      "matches": {
        "react-intersection-observer useinview": true,
        "rio useinview": true
      }
    },
    "61822929-1da1-3419-9efe-1919af17ccda": {
      "content": "t.references :${0:model}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tref": true
      }
    },
    "61831019-51c8-35ae-a574-f92fba046740": {
      "content": "justify-content: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      }
    },
    "61894f69-93d8-3c90-a88e-5b4bcf9df06f": {
      "content": "content: no-close-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      }
    },
    "618973c4-746b-3383-b14c-b544d6c2cc9d": {
      "content": "forceUpdate(${1:callback});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fup": true
      }
    },
    "618b00d6-9c5e-3abf-9e9b-70a01bf3ab91": {
      "content": "\\nocite{${1}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\nocite": true,
        "nocite": true
      }
    },
    "618e8526-6ed6-3e70-bcb9-17760c8bfdb4": {
      "content": "axios.defaults.${1:key} = '${2:value}';",
      "doc": "Define global axios defaults, eg. baseURL, headers etc.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-defaults",
      "matches": {
        "axios defaults": true
      }
    },
    "61904d76-7503-3609-b04a-d7609cbdc7cf": {
      "content": "crossref = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crossref": true
      }
    },
    "61944dc5-7f02-3bad-a900-772bc73445de": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "619e3ce0-b238-3b75-a107-ec68f7f68b42": {
      "content": "assert!(${1:predicate});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "assert!",
      "matches": {
        "as": true
      }
    },
    "61a1801c-f07b-331b-9b75-c8d4467e739f": {
      "content": "\\\\[\n\t${0:${VISUAL}}\n\\\\]",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "unnumbered equation: \\[ ... \\]",
      "matches": {
        "\\": true
      }
    },
    "61a5ef18-16f5-3b44-8970-c4b7fd5a399d": {
      "content": "for ${1:key}, ${2:value} of ${3:object}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      }
    },
    "61a6bba6-2c08-3819-b8b5-6c77bd7258f7": {
      "content": "on:${1:eventname}",
      "doc": "on event foward",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-forward",
      "matches": {
        "s-on-event-foward": true
      }
    },
    "61a7c2cf-c91f-3191-8e76-7f93e298add6": {
      "content": "_.findLast(${collection}, ${predicate}, ${fromIndex})",
      "doc": "_.findLast([1, 2, 3, 4], function(n) {\n  return n % 2 == 1;\n});\n// => 3\n\nThis method is like `_.find` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlast",
      "matches": {
        "lodash findlast": true
      }
    },
    "61ab235f-ca8a-30e1-8430-22ed4c3b7efe": {
      "content": "list-style-type: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: circle",
      "matches": {
        "listc": true
      }
    },
    "61b0da28-598a-3d59-a806-a15157348a99": {
      "content": "\\\\frac{\\\\partial {$1}}{\\\\partial {$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "partial derivation",
      "matches": {
        "pdv": true
      }
    },
    "61b96d38-913f-3421-b7e5-bb733be56228": {
      "content": "sort {|${1:x}, ${2:y}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      }
    },
    "61bec3fe-35f2-39d8-991f-ffe2e38a16c8": {
      "content": "class ${1:ClassName}\n\tdef initialize\n\t\t$0\n\tend\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Class definition with initialize",
      "matches": {
        "class init": true
      }
    },
    "61c06d56-737d-3a2c-8caf-ba39314ece1a": {
      "content": "PropTypes.string.isRequired",
      "doc": "String prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeStringRequired",
      "matches": {
        "ptsr": true
      }
    },
    "61c0b04c-4034-372c-81c5-f24dafdccb48": {
      "content": "const ${1:first} = useRef(${2:second})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useRef",
      "matches": {
        "useRefSnippet": true
      }
    },
    "61c1b45d-a9f5-3da0-b112-e79b1eeb36a3": {
      "content": "for ${1:needle} in ${2:haystack}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "61c554d4-0340-3f58-b4a1-fd8a1dfb234d": {
      "content": "/**\n * ${1}\n *\n * @author ${2}\n * @version ${3}\n * @copyright ${4}\n * @package ${5:default}\n **/\n\n/**\n * Define DocBlock\n **/",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doch": true
      }
    },
    "61c622a8-5c6e-3165-a66a-12d7c16f3afc": {
      "content": "bind:${1|clientWidth,clientHeight,offsetWidth,offsetHeight|}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-block-level",
      "matches": {
        "svbind-level": true,
        "svelte bind level": true
      }
    },
    "61e9c049-e5cf-395b-a6b1-a6a7dae3e814": {
      "content": "private int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi-": true
      }
    },
    "61e9f7e8-750c-31aa-8184-86c094a18054": {
      "content": "vertical-align: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      }
    },
    "61ece1b5-60a6-3722-9a5d-94651f4fbdbe": {
      "content": "pluralize:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      }
    },
    "61f7289d-d16e-340a-8525-29a506f1d658": {
      "content": "css: ['assets/${1:normalize.css}'],",
      "doc": "link to css assets such as normalize",
      "filetype": "nuxt-config",
      "grammar": "lsp",
      "label": "Nuxt Use CSS File",
      "matches": {
        "ncss": true
      }
    },
    "61fd0927-00b2-3c2c-a029-75836850d6e2": {
      "content": "${1:obj}.trigger('${2:event name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trig": true
      }
    },
    "620a669b-ce69-3453-bfbb-21e7f96ae6ef": {
      "content": "parameters{\n\t${1}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parameters": true
      }
    },
    "6212cc53-9d78-3887-86d9-d0065687b1a2": {
      "content": "fmt.Println(${0:TARGET})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true,
        "println": true
      }
    },
    "621a152d-8953-3070-b169-83753b185119": {
      "content": "<form action=\"${1}\" method=\"${2:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form": true
      }
    },
    "621a8dea-d7ee-34ed-838f-0b7f8952520f": {
      "content": "while ($1) {\n\t$0\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "6228e287-a1f0-3132-919f-37a64f56a2d2": {
      "content": "v-model=\"${1:something}\"",
      "doc": "Expects: varies based on value of form inputs element or output of components",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-model",
      "matches": {
        "vmodel": true,
        "vue v-model": true
      }
    },
    "62363b2a-e8fa-3a7f-9437-47069aee5e54": {
      "content": "import { NgModule } from '@angular/core';\n\nimport { ${1:Name}Component } from './${2:name}.component';\n\n@NgModule({\n\timports: [],\n\texports: [],\n\tdeclarations: [${1:Name}Component],\n\tproviders: [],\n})\nexport class ${1:Name}Module { }\n$0",
      "doc": "Angular Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Module",
      "matches": {
        "a-module": true
      }
    },
    "6236fba2-cc3d-3c74-b7dc-5520b6d9bfc2": {
      "content": "printf(\"${1:} = %d\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prd": true
      }
    },
    "6239b509-70b5-3c14-bb0b-337de3fd01d1": {
      "content": "import React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassComponent",
      "matches": {
        "rcc": true
      }
    },
    "623d3b22-1d42-38d0-b5cd-aae54932ba55": {
      "content": "set multiplot\n${1:#:plot code}\nunset multiplot",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set multiplot ... unset multiplot",
      "matches": {
        "multiplot": true
      }
    },
    "623d9ef2-f7c8-308d-9a2f-f71eedf47b51": {
      "content": "tapply(${1:vector}, ${2:index}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tapply": true
      }
    },
    "623e924d-8536-3477-8d5d-495c3320b7ca": {
      "content": "for (final ${2:item} in ${1:itemList}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "62402cbd-b0fc-3026-9fe2-40de5067d129": {
      "content": "floatformat:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floatformat": true
      }
    },
    "62435a8a-2319-344c-a45f-ff8b7bc0b653": {
      "content": "<%= text_input ${1:f}, :${2:field} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "text_input",
      "matches": {
        "ti": true
      }
    },
    "6249f052-a979-3d6e-9fb7-1bf69c9f764d": {
      "content": "| camelcase",
      "doc": "String filter: camelcase",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter camelcase",
      "matches": {
        "camelcase": true
      }
    },
    "624a3854-2b47-3e2a-8d39-4c5decdaf76e": {
      "content": "_.lowerCase(${string})",
      "doc": "_.lowerCase('--Foo-Bar--');\n// => 'foo bar'\n\n_.lowerCase('fooBar');\n// => 'foo bar'\n\n_.lowerCase('__FOO_BAR__');\n// => 'foo bar'\n\nConverts `string`, as space separated words, to lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lowercase",
      "matches": {
        "lodash lowercase": true
      }
    },
    "624c43a6-292a-38ed-ada4-a188a69e7f37": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2}\n\t${0}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try ... catch statement",
      "matches": {
        "t": true
      }
    },
    "624ce94c-045a-3466-8790-f13fd84d8291": {
      "content": "shared_examples ${0:'shared examples name'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shared": true
      }
    },
    "624d81fc-f4d4-3b8c-a98b-d75702accac6": {
      "content": "struct ${1:MyStruct}\n{\n\t$0\n};",
      "doc": "Code snippet for struct",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "62525463-c636-31be-83fe-49b75740f14d": {
      "content": "local ok, err = pcall(${1:your_function})\nif not ok then\n\thandler(${2:ok, err})\n${3:else\n\tsuccess(${4:ok, err})\n}end",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "pcall statement",
      "matches": {
        "pcall": true
      }
    },
    "6253270c-a0c3-33d8-a295-723486a54e58": {
      "content": "free(${1:ptr});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fre": true
      }
    },
    "625582fc-0ee7-34c0-b648-e28779ad195d": {
      "content": "def __init__(self, ${1:args}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defi": true
      }
    },
    "6258393b-45b0-3189-b691-d1f130e6a834": {
      "content": "_.forInRight(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forInRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\nThis method is like `_.forIn` except that it iterates over properties of\n`object` in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forinright",
      "matches": {
        "lodash forinright": true
      }
    },
    "625a0ebc-22ae-3bac-8023-27326f17a066": {
      "content": "private",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pri": true
      }
    },
    "6265edc0-7c00-3b42-98ea-db27730839ac": {
      "content": "RSpec.describe ${1:described_class} do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert RSpec.describe class",
      "matches": {
        "rdesc": true
      }
    },
    "62673f1e-bf40-3738-b84d-be03dc3f9ea1": {
      "content": "FUNCTION INTEGER-OF-BOOLEAN(${1:boolean-item})$0",
      "doc": "numeric value of boolean-item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER-OF-BOOLEAN",
      "matches": {
        "FUNCTION INTEGER-OF-BOOLEAN": true
      }
    },
    "6268cfad-93df-3480-b5d3-555d4dfeac78": {
      "content": "Ada.Text_IO.Put(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put",
      "matches": {
        "put": true
      }
    },
    "62698335-a531-3585-9ce5-13d4f43134f4": {
      "content": "expect($1).toMatchSnapshot($0);",
      "doc": "returns true if the argument matches the most recent snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchsnapshot",
      "matches": {
        "jest expect tomatchsnapshot": true,
        "tms": true
      }
    },
    "626cefcc-3bbc-3264-9fef-17a5a7fb045a": {
      "content": "\\${1:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:default}",
      "matches": {
        "1:": true
      }
    },
    "62731e65-fff0-3874-9a17-058459e5420a": {
      "content": "<%page args=\"${0:}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "page": true
      }
    },
    "6273e4dc-0a60-363f-9a47-0783df829b9d": {
      "content": "while ${1:condition} {\n\t$0\n}",
      "doc": "while statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "6276bf7e-939c-3c79-9d42-0c5a6568d397": {
      "content": "expect(${1:target}).toBeFalsy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be falsy (js)",
      "matches": {
        "ef": true
      }
    },
    "62774a2e-36af-39bb-b211-52f1801d590a": {
      "content": "assert_includes ${1:collection}, ${2:object}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asi": true
      }
    },
    "6278b978-8356-338e-9f0a-92a8fee2fd8c": {
      "content": "grid-gap ${1} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg+": true
      }
    },
    "6278f429-65ef-3452-8302-965a90a44c78": {
      "content": "${1:FIELDNAME} = models.BooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BooleanField",
      "matches": {
        "mbool": true
      }
    },
    "627e12b7-423b-32ca-b9f8-d0de0cd849ee": {
      "content": "{% for user in craft.users.group(\"${1:userGroupHandle}\").all() %}\n\t{{ user.firstName }} {{ user.lastName }}\n{% endfor %}\n$0",
      "doc": "craft.users",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "users",
      "matches": {
        "users": true
      }
    },
    "627f566a-859d-34b1-97d6-7e9af148c169": {
      "content": "elif ${1:expression}:\n\t${2:pass}",
      "doc": "Code snippet for an elif",
      "filetype": "base",
      "grammar": "lsp",
      "label": "elif",
      "matches": {
        "elif": true
      }
    },
    "6287517b-70a0-3503-ae52-0bbc8f2cd231": {
      "content": "{% endwith %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endwith",
      "matches": {
        "endwith": true
      }
    },
    "62893e08-cafd-3321-a55e-0797b46746a9": {
      "content": "import React, { PureComponent } from 'react'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithPureComponent",
      "matches": {
        "imrpc": true
      }
    },
    "628d5e3a-ad28-334a-a990-2de03ec276cc": {
      "content": "<nuxt name=\"$1\">$2</nuxt>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-namedview",
      "matches": {
        "nuxt namedview": true
      }
    },
    "628f4a48-70bd-3dd8-833e-842001e4517c": {
      "content": "import React, { memo } from 'react'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-memo",
      "matches": {
        "imrm": true,
        "react import memo": true
      }
    },
    "628fa662-703a-31f1-9647-c200b852eb6a": {
      "content": "control $0",
      "doc": "Models a loop back for control",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Control",
      "matches": {
        "ctrl": true
      }
    },
    "6292a8a7-dd88-38d7-8eac-c763dacf40d5": {
      "content": "${1:/*condition*/} ? ${2:/*then*/} : ${3:/*else*/}$4",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "ternary operator (?:)",
      "matches": {
        "?:": true
      }
    },
    "6293dbed-c4e5-3bd6-8735-dbd9bb6723f1": {
      "content": "text-align=\"center\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignc": true
      }
    },
    "629672a6-c54a-3172-860e-ab2ab924b186": {
      "content": "{% block ${1:name} %}\n\t\t$2\n{% endblock $1 %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "block",
      "matches": {
        "block": true
      }
    },
    "629df58a-b3d4-3316-a9cf-fa49f257a079": {
      "content": "subject.${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.": true
      }
    },
    "629e9f58-5827-3db6-bb11-a13120d361e8": {
      "content": "END {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "END { ... }",
      "matches": {
        "end": true
      }
    },
    "62a34f04-210f-337a-942a-6471f0368c56": {
      "content": "set ytics ${1:#:start}, ${2:#:incr}, ${3:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set ytics start, incr, end",
      "matches": {
        "ytics": true
      }
    },
    "62a3bc77-07ce-30d3-a0bf-dd73c6f0044c": {
      "content": "realize(${1:Resource}[${2:name}])",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "realize": true
      }
    },
    "62a52855-c5a5-33a2-92e2-869d5afd875b": {
      "content": "import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\nimport { ${1:Model} } from '${2:../core}';\n\n@Injectable({ providedIn: ${3:'root'} })\nexport class ${1:Model}Service extends EntityCollectionServiceBase<${1:Model}> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('${1:Model}', serviceElementsFactory);\n  }\n}",
      "doc": "NgRx Data Entity Collection Data Service",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Entity Collection Data Service",
      "matches": {
        "a-ngrx-data-entity-collection-data-service": true
      }
    },
    "62b278ca-21de-35ae-b87d-7fefb6e0deb7": {
      "content": "afterAll(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "after all (js)",
      "matches": {
        "afta": true
      }
    },
    "62b31542-100f-3b82-931a-785606c8d9c9": {
      "content": "margin: ${1:0} ${2:0} ${3:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      }
    },
    "62b643e4-cf7e-3c84-8a27-3212e0b48435": {
      "content": "_.conformsTo(${object}, ${source})",
      "doc": "var object = { 'a': 1, 'b': 2 };\n\n_.conformsTo(object, { 'b': function(n) { return n > 1; } });\n// => true\n\n_.conformsTo(object, { 'b': function(n) { return n > 2; } });\n// => false\n\nChecks if `object` conforms to `source` by invoking the predicate\nproperties of `source` with the corresponding property values of `object`.\n\n**Note:** This method is equivalent to `_.conforms` when `source` is\npartially applied.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-conformsto",
      "matches": {
        "lodash conformsto": true
      }
    },
    "62b9845c-782f-3ab5-a78a-92ea462d4e43": {
      "content": "${1:obj}.appendTo('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "appendTo": true
      }
    },
    "62c6e9c4-94e0-3f53-bcde-bb9ff5710f86": {
      "content": "[formGroup]=\"${1:form}\"",
      "doc": "Angular formGroup",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormGroup",
      "matches": {
        "a-formGroup": true
      }
    },
    "62c9e9fa-7893-37d5-93e5-5a029d67384c": {
      "content": "merge(${1:x}, ${2:y}, ${3:by = ${4:intersect(names(x), names(y))}}, ${5:all = ${6:FALSE}})",
      "doc": "Merge",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "mer",
      "matches": {
        "merge": true
      }
    },
    "62d5e8de-43b1-3150-ac94-01c79f39f510": {
      "content": "-> { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->": true
      }
    },
    "62dba5ae-6cc9-3875-8e92-847195b17fcb": {
      "content": "Vue.nextTick({\n\t$1\n})",
      "doc": "Vue.nextTick( callback, [context] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "nextTick",
      "matches": {
        "VueNextTick": true
      }
    },
    "62e2cf90-b7c6-3e91-8446-bd1945bdb87e": {
      "content": "const float PI = 3.14159265359;",
      "doc": "PI setup",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "PI",
      "matches": {
        "PI": true
      }
    },
    "62f28786-ee0c-39ed-8249-54dfce65a62e": {
      "content": "Console.WriteLine(${1:#:message});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println p": true,
        "writeline": true
      }
    },
    "62f4b5ab-100c-3c17-8bf1-b093f694046a": {
      "content": "fmt.Printf(\"${1} = %+v\\n\", $1)\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(...)",
      "matches": {
        "ff": true
      }
    },
    "62f677a9-08f4-33e5-8945-bfe5659ebd0c": {
      "content": "gotoAndStop(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gs": true
      }
    },
    "62f701d1-32b1-3042-94ce-448d646b3cf8": {
      "content": "text-wrap normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      }
    },
    "62f7a96f-3dc6-3d07-915a-00b680559a3a": {
      "content": "asyncData({${1:isDev}${2:, route}${3:, store}${4:, env}${5:, params}${6:, query}${7:, req}${8:, res}${9:, redirect}${10:, error}}) {\n\t$11\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "asyncData",
      "matches": {
        "asyncData": true
      }
    },
    "62f84d1f-809d-3648-a341-4107105cb115": {
      "content": "<aside id=\"${1}\">\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside#": true
      }
    },
    "62f9213e-3c41-351a-8c92-3198faa4cc94": {
      "content": "make(${1:[]string}, ${0:0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "make",
      "matches": {
        "mk": true
      }
    },
    "62fd759c-86da-32a2-9bf8-47b4c37d81af": {
      "content": "letter-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      }
    },
    "6302fda0-8a00-31ee-8d1a-84e3047e652c": {
      "content": "trim(${0:str});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trim": true
      }
    },
    "6309b59f-6371-3239-9eea-37c3b3912887": {
      "content": "it '${1:spec_name}' do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert it block",
      "matches": {
        "it": true
      }
    },
    "630aa34d-eb69-33cd-8e81-db89d2fe8eb9": {
      "content": "font-family: ${0:'Monotype Corsiva','Comic Sans MS'},cursive;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      }
    },
    "631341f4-b302-3692-8cdb-21b521aa420f": {
      "content": "if __name__ == \"__main__\":\n    ${1:pass}",
      "doc": "Code snippet for a `if __name__ == \"__main__\": ...` block",
      "filetype": "python",
      "grammar": "lsp",
      "label": "if(main)",
      "matches": {
        "__main__": true
      }
    },
    "6313ef01-4eb4-30fa-a8f9-b6141053b6ac": {
      "content": "paddingTop: ${1},",
      "doc": "paddingTop",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingTop",
      "matches": {
        "padding": true
      }
    },
    "631b7843-542f-3858-95f2-3fcb41499f2f": {
      "content": "${1:FIELDNAME} = forms.RegexField($2, regex=${3:REGEX}, required=${4:False})",
      "doc": "RegexField (fregex)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fregex",
      "matches": {
        "fregex": true
      }
    },
    "631ba1d6-1161-3059-8a00-bc42cf93ed10": {
      "content": "${1:callbacks}.fire(${2:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfire": true
      }
    },
    "63206432-177f-38cb-a33e-d98e09ba0ff3": {
      "content": "<IfModule ${1:module_name}>\n        ${2}\n</IfModule>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmodule": true
      }
    },
    "632ea837-5600-3d31-8b99-6c80914b8ffd": {
      "content": "$1.propTypes = {\n\t$2\n}",
      "doc": "Creates empty propTypes declaration",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypes",
      "matches": {
        "rpt": true
      }
    },
    "63312016-ff02-3305-8e67-09e8ac37a2db": {
      "content": "for ${1} in ${2}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "for loop iterating over iterable container",
      "matches": {
        "forc": true
      }
    },
    "63489fb1-e36d-3bca-9162-97a8043348ae": {
      "content": "t.timestamps\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create timestamps columns",
      "matches": {
        "tctss": true
      }
    },
    "634e507b-7982-3516-8589-84f045aff35b": {
      "content": "background-color: transparent;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  transparent (background)",
      "matches": {
        "background": true
      }
    },
    "63520ba0-93a6-3ce5-b8cb-9947b5714f9d": {
      "content": "use:action={${1:parameters}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use-parameters",
      "matches": {
        "svelte use parameters": true,
        "svupar": true
      }
    },
    "63664433-c265-3651-b08b-5eb95776ee04": {
      "content": "grid-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg": true
      }
    },
    "6371585c-3782-388d-a8f0-5f8a74544fbd": {
      "content": "${1:obj}.scrollTop(${2:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrollt": true
      }
    },
    "6373ed99-07ab-3dff-965c-6b479fe18bbd": {
      "content": "for(let ${1:first} of ${2:second}) {${3:third}}",
      "doc": "Iterating over property names of iterable objects",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "forOf",
      "matches": {
        "fof": true
      }
    },
    "6373f8d0-dbf8-32ee-ae5b-9b68a3cc1bb7": {
      "content": "logger.debug { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logd": true
      }
    },
    "63759cb1-cd1b-34a0-9808-0d971a236bbb": {
      "content": "${1:obj}.last('${1:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      }
    },
    "6376e82e-7302-378f-9640-ce469ec90b61": {
      "content": "@before-appear='$1'$0",
      "doc": "@before-appear=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "before-appear",
      "matches": {
        "beforeAppearEvent": true
      }
    },
    "6376f8b1-368f-39fa-b6eb-b74abd1ab810": {
      "content": "require 'debug'; debugger",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dbg": true
      }
    },
    "637ca66c-dd6e-32c4-8eba-4748c4bdfa2a": {
      "content": "IDENTIFICATION DIVISION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "IDENTIFICATION DIVISION",
      "matches": {
        "ID": true,
        "IDENTIFICATION DIVISION": true
      }
    },
    "637cdb11-c1a7-32cf-8aaa-882d1ce2038a": {
      "content": "@mixin ${1:name} {\n  $0\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "@mixin",
      "matches": {
        "mix": true
      }
    },
    "638227cf-0456-3b5b-8f87-fed19710e4cd": {
      "content": "$this->input->is_ajax_request();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-is_ajax_request": true
      }
    },
    "638ead4b-afe4-31c2-b62f-b805b89c093d": {
      "content": "lapply(${1:X}, ${2:FUN}, ${3:...})",
      "doc": "Lapply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "lap",
      "matches": {
        "lapply": true
      }
    },
    "63917d88-1b75-3ec7-8f37-6b017c2c80fa": {
      "content": "border-collapse: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      }
    },
    "639aef23-ab08-3284-90be-5a8ccf6a89b7": {
      "content": "@interface ${1} : ${2:NSObject}\n{${3}\n}\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassInterface",
      "matches": {
        "cli": true
      }
    },
    "639b347f-467f-3fc8-b6e0-476e9ec6294f": {
      "content": "# given: ${1}\n# when: ${2}\n# then: ${3}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tgwt": true
      }
    },
    "63a416bb-1896-34dc-a07b-ff12d5cf7bda": {
      "content": "data ${1:Type} = $1\n\t{ ${2:field} :: ${3:Type}\n\t, ${4:field} :: ${5:Type}$0\n\t} ${6:deriving (${7:Show, Eq})}",
      "doc": "Data record",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "data_record",
      "matches": {
        "data record": true
      }
    },
    "63a7d69f-3975-3d0e-bad5-e2fa956d64c8": {
      "content": "quad(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:x4}, ${0:y4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "quad": true
      }
    },
    "63a92de4-6bfd-36ab-922a-dd52afc924ac": {
      "content": "<sub>$1</sub>$2",
      "doc": "HTML - Defines sub-scripted text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "sub",
      "matches": {
        "sub": true
      }
    },
    "63ab63b0-df75-3edb-9d68-bd3b99fb6a12": {
      "content": "border-right-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      }
    },
    "63adc1c3-1c12-3815-a6e6-5468f4ce10a6": {
      "content": "borderTopColor: ${1},",
      "doc": "borderTopColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderTopColor",
      "matches": {
        "bor": true
      }
    },
    "63ae68bc-bc60-3d21-a860-752b25d86b08": {
      "content": "elseif ${1}\n\t${0}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "elsif",
      "matches": {
        "eif": true
      }
    },
    "63b419d1-cb64-31ed-a01e-4d40d6a4cad5": {
      "content": "animation-duration: ${0:1s};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-duratuion",
      "matches": {
        "anidu": true
      }
    },
    "63b76c3d-3be1-3be5-9e8c-3932c49f7641": {
      "content": "align-items: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      }
    },
    "63bd4f6f-ca23-334f-8518-b0d2a9756653": {
      "content": "replaceState",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "replaceState",
      "matches": {
        "replaceState": true
      }
    },
    "63bf9c12-eba8-33ba-bf8e-9c4a227d9a64": {
      "content": "@appear=\"$1\"$0",
      "doc": "@appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear",
      "matches": {
        "appearevent": true,
        "vue appear": true
      }
    },
    "63c7cecb-bf41-3e38-92db-6722973aecfa": {
      "content": "pinMode(${1}, INPUT);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pinin": true
      }
    },
    "63cab4e7-97ef-314c-bdda-b7fa65c9fd8d": {
      "content": "it('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it",
      "matches": {
        "it": true,
        "jest it": true
      }
    },
    "63d1d0ab-4aca-3cbc-a614-fa526700f359": {
      "content": "if (${1:condition}) {\n\t${0:# code...}\n}",
      "doc": "If block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "if …",
      "matches": {
        "if": true
      }
    },
    "63d1fac4-e0ff-3e83-b880-c20af0cea5cf": {
      "content": "${1:obj}.keydown (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kdown": true
      }
    },
    "63d3a4ee-7ed0-32cd-8545-2de5f4c11ac9": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) => {\n\t\tstate.${2:value} = $3;\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmutations": true
      }
    },
    "63d85fb0-40f5-30f2-9abe-36df572424d0": {
      "content": "case ${1:condition}:$0",
      "doc": "Snippet for case clause",
      "filetype": "go",
      "grammar": "lsp",
      "label": "case clause",
      "matches": {
        "cs": true
      }
    },
    "63dc914a-e63e-3a96-8a92-76e00d009ec3": {
      "content": "${0:// A buffer ID of zero unbinds a buffer object}\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, ${1:0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl bind buffer",
      "matches": {
        "gl": true
      }
    },
    "63e0d327-c608-30ae-90e1-2e98ecefda17": {
      "content": "text-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "63e40ca5-3f6d-3009-89e9-43a18a9b4fb6": {
      "content": "#!/usr/bin/env lua\n$0",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "#!/usr/bin/env lua",
      "matches": {
        "#!": true
      }
    },
    "63e55897-abee-3b7d-a16d-a5c96abf324a": {
      "content": "{% with %}\n\t${0}\n{% endwith %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig with",
      "matches": {
        "with": true
      }
    },
    "63e5e0f1-4eb0-3c9a-96a9-10a4b01c306e": {
      "content": "unbinary(\"${0:str}\"});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbinary": true
      }
    },
    "63e822a4-a09c-315d-9b0e-473b1ab40e89": {
      "content": "${1:obj}.before('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      }
    },
    "63f1a44f-72d9-36c1-8f1b-a2f801c1b112": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else}\n\t${3: <!-- else content here -->}\n{/if}",
      "doc": "if else block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-block",
      "matches": {
        "s-if-else-block": true
      }
    },
    "63f9a8e1-ac64-30fa-9d78-bab5223e5e7c": {
      "content": "if (${1}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "63fa695d-bd98-3aaa-a079-77e6a4b5d7f5": {
      "content": "(provide ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prov": true
      }
    },
    "63fdb2df-64ec-3807-8380-dd6f15b395f8": {
      "content": "-webkit-border-image ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      }
    },
    "640128cb-6979-3d7a-9769-f061e2cac3cb": {
      "content": "sap.ui.layout.HorizontalLayout.extend(\"$1\", {\n    metadata: {\n\tproperties: {\n\t  \t$2\n\t},\n\taggregations: {\n\t\t$3\n\t},\n\tevents: {\n\t\t$4\n\t}\n    },\n   init: function(){\n\t$5\n    },\n\n    renderer: \"$6\"\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extendHorizontalL": true
      }
    },
    "6406eb15-dcda-3e2b-b509-e14ec02a55fe": {
      "content": "import { ${1:map} } from 'rxjs/operators';\n$0",
      "doc": "RxJs import",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "rxjs-operator-import",
      "matches": {
        "a-rxjs-operator-import": true,
        "angular import rx js operator": true
      }
    },
    "6408b231-1514-39e6-92ea-55a16c67846a": {
      "content": "[%header,format=csv]\n|===\n${0}\n|===",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "CSV table",
      "matches": {
        "csvtable": true,
        "tablecsv": true
      }
    },
    "640983f2-0542-3ef2-a603-a7e7321a2730": {
      "content": "place-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      }
    },
    "64098dcc-edd2-3dd3-bfa3-da061d61d478": {
      "content": "else if (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "else if ()",
      "matches": {
        "elseif": true
      }
    },
    "640a5036-2040-383a-8a12-01d2ce4393f4": {
      "content": "{% render '${0:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "render": true
      }
    },
    "641512c9-f81f-3602-89b4-9d4f974fdcf5": {
      "content": "_.maxBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 1 }, { 'n': 2 }];\n\n_.maxBy(objects, function(o) { return o.n; });\n// => { 'n': 2 }\n\n// The `_.property` iteratee shorthand.\n_.maxBy(objects, 'n');\n// => { 'n': 2 }\n\nThis method is like `_.max` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the criterion by which\nthe value is ranked. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-maxby",
      "matches": {
        "lodash maxby": true
      }
    },
    "641899fc-0f85-3f1b-9c1a-125cb2824a29": {
      "content": "add:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "641b74cb-7eb2-3820-b134-5e8642f55d0c": {
      "content": "${1:obj}.hide('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      }
    },
    "641d38fa-0c8d-35bd-9260-65a1a62513ad": {
      "content": "delete_if { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deli": true
      }
    },
    "641eb9ad-d246-31bb-a057-c605f1875d45": {
      "content": "FUNCTION MEDIAN(${1:number},${2:...})$0",
      "doc": "statistical median value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MEDIAN",
      "matches": {
        "FUNCTION MEDIAN": true
      }
    },
    "641f95d9-c2d3-34b8-839a-77c1ff6992f1": {
      "content": "_.sortedLastIndexOf(${array}, ${value})",
      "doc": "_.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n// => 3\n\nThis method is like `_.lastIndexOf` except that it performs a binary\nsearch on a sorted `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindexof",
      "matches": {
        "lodash sortedlastindexof": true
      }
    },
    "6422c2d9-f309-384c-aaa7-fb6603b1e4fb": {
      "content": "font-family: ${0:arial};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-family",
      "matches": {
        "ff": true
      }
    },
    "6427d284-77a0-3bfc-8bf6-2acd4f6112df": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "64295235-0816-32e4-a555-2a53e6c66332": {
      "content": "cummax(${1:x}",
      "doc": "Cummulative max",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cuma",
      "matches": {
        "cumaax": true
      }
    },
    "6429eece-a3bc-32be-be09-2ae7d0d287b2": {
      "content": "NSMutableArray * array;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      }
    },
    "642e25e7-4cc2-32c9-80b9-d0cbd4c5b789": {
      "content": "quotes: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      }
    },
    "643d78d2-fcb3-3043-9d17-9d0a39397f64": {
      "content": "(\\\\${1:x} -> ${0:expression})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(\\": true
      }
    },
    "643e2787-98e0-3a0e-8d0a-aa0da382ae1e": {
      "content": "background-size: cover;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      }
    },
    "643e4cf1-bcdc-35fd-b3ed-f771d5be8412": {
      "content": "{-# OPTIONS_GHC ${0:-fno-warn-unused-imports} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ghc": true
      }
    },
    "643fa4fc-22de-31f2-8fcf-fdd412dc84a3": {
      "content": "$this->assertNotNull(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotNull($a)",
      "matches": {
        "asnnu": true
      }
    },
    "64437c91-a399-374e-80b3-8a6eaeda4301": {
      "content": "$this->${1:method}()->shouldBe(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBe('value')",
      "matches": {
        "sbe": true
      }
    },
    "64463f85-fd68-3757-b290-520c806154b0": {
      "content": "-webkit-box-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      }
    },
    "6447c2ab-ee54-30c0-a6ee-253479a1d624": {
      "content": "{\n\t:f${0}\n}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eventsmap": true
      }
    },
    "644b9026-1aad-38f3-8ff1-3c0e99c91fe8": {
      "content": "<transition$1>\n$2\n</transition>$0",
      "doc": "transition element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "transition",
      "matches": {
        "transition": true
      }
    },
    "645d9286-7b96-3183-b3a9-a91876cfe5de": {
      "content": "- (id)init\n{\n\tif (self = [super init]) {\n\t\t${0}\n\t}\n\treturn self;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "init": true
      }
    },
    "645f0b9c-6a27-32e2-b819-675530a14f13": {
      "content": "${1:FIELDNAME} = forms.NullBooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "NullBooleanField",
      "matches": {
        "fnullbool": true
      }
    },
    "646399de-57db-39a5-9f90-3a43b338ab6a": {
      "content": "before_validation_on_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation_on_create",
      "matches": {
        "befvoc": true
      }
    },
    "646e5cc3-b961-3ca5-932d-fa2094dd5cb1": {
      "content": "!${1:url}(${2:title}):${0:link}!",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "646e8368-1515-3543-85e2-fa6c9d0c4f4e": {
      "content": "hotUpdate",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "hotUpdate",
      "matches": {
        "hotUpdate": true
      }
    },
    "646e9199-3996-3e44-849a-a826ad132060": {
      "content": "float ${NAME} = $3;",
      "doc": "float aFloat = 1.0;\nfloat bFloat = float(aBool);\nfloat cFloat = float(aInt);\n\nThe data type bool is used for boolean values (true or false).\n\nSide note: Implicit type conversions are not supported. Type conversions can be done using constructors as shown in the second and third example.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "float",
      "matches": {
        "float": true
      }
    },
    "6470fbae-58cd-3c4f-99e3-1473feda2df8": {
      "content": "_.min(${array})",
      "doc": "_.min([4, 2, 8, 6]);\n// => 2\n\n_.min([]);\n// => undefined\n\nComputes the minimum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-min",
      "matches": {
        "lodash min": true
      }
    },
    "6471e415-607b-3d03-930d-530e57d6e4f0": {
      "content": "<!--${1:TARGET}-->${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "6475ce81-860b-3052-9974-d147e2766cf1": {
      "content": "{@linkplain ${1:#:target} ${0:#:label}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{linkplain": true
      }
    },
    "647d7c37-ddd5-3176-ad1b-e04b8944ede4": {
      "content": "if ($1) {\n\t${2:# body...}\n}\nelse {\n\t${3:# else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional if..else (ife)",
      "matches": {
        "ife": true
      }
    },
    "647f9345-cf5a-3ec7-a769-7b3d8e94107c": {
      "content": "_.uniq(${array})",
      "doc": "_.uniq([2, 1, 2]);\n// => [2, 1]\n\nCreates a duplicate-free version of an array, using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons, in which only the first occurrence of each element\nis kept. The order of result values is determined by the order they occur\nin the array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniq",
      "matches": {
        "lodash uniq": true
      }
    },
    "648ba22d-7e05-3719-9e75-8c46a62793fd": {
      "content": "borderWidth: ${1},",
      "doc": "borderWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderWidth",
      "matches": {
        "bor": true
      }
    },
    "6495b5b2-426d-37a1-9d22-c96959c4e902": {
      "content": "t.timestamps\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.timestamps (tctss)",
      "matches": {
        "t.": true
      }
    },
    "6495de1f-7690-3744-aba4-c51ebff4fa26": {
      "content": "background-break each-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      }
    },
    "64999bb8-0ab3-3b7f-aea2-9c64194dd876": {
      "content": "$this->load->view(\"${1:view_name}\", $${2:data});${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_load-view": true
      }
    },
    "649ea469-2780-3264-b628-a0362b3b5eac": {
      "content": "stopPropagation();\n$1",
      "doc": "stopPropagation()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "stopPropagation",
      "matches": {
        "stopPropagation": true
      }
    },
    "64a466a4-3792-36c1-b944-37a437bab7c5": {
      "content": "var ${1}:${2};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vr": true
      }
    },
    "64ab0a06-1cc2-3677-bb84-b9ac8760e8aa": {
      "content": "{:else if ${1: otherCondition}}\n\t${2: <!-- else if content here -->}",
      "doc": "else if block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-if-block",
      "matches": {
        "s-else-if-block": true
      }
    },
    "64b2366d-2b36-3af1-ac70-a23d7534c7d2": {
      "content": "object.noUnknown()",
      "doc": "object.noUnknown(onlyKnownKeys: boolean = true, message?: string | function): Schema\n\nValidate that the object value only contains keys specified in shape, pass false as the first\nargument to disable the check. Restricting keys to known, also enables stripUnknown option, when not in strict mode.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-no-unknown",
      "matches": {
        "yup object nounknown": true
      }
    },
    "64bbb60d-2513-37fb-96a8-2d1bddcfc5b4": {
      "content": "list-style-type decimal-leading-zero",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      }
    },
    "64be7e0b-dd62-390e-ab47-db8949f98659": {
      "content": "switch ${1:value} {\ncase ${2:pattern}:\n\t$0\ndefault:\n\t\n}",
      "doc": "switch statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "64c052f7-2d9f-399a-b5a4-23ffe318b069": {
      "content": "<script context=\"module\">\n\t${1:// your script goes here}\n</script>",
      "doc": "add a script with context=\"module\" to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-context",
      "matches": {
        "s-script-context": true
      }
    },
    "64c318d3-725f-3990-9c92-481961c2dd75": {
      "content": "{ ${1:#capture}(${2:#:arguments}) -> ${3:Void} in\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "{ (...) -> Type in ... }",
      "matches": {
        "closure": true
      }
    },
    "64c4ba77-f436-3747-96e0-d7db956fbaf0": {
      "content": "${1:auto} ${2:func}(${3:params}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "64cea8db-314d-3d64-a1e5-03b7d022d370": {
      "content": "font-stretch: ultra-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ue": true
      }
    },
    "64d06501-07ef-365a-a3f0-410ae187896e": {
      "content": "else {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "64d08153-2d95-3f88-994a-8c814e4431df": {
      "content": "{%- render '${1:snippet}', ${2:variable}: ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renderwith-": true
      }
    },
    "64d18103-26aa-3b94-8aaa-21e9ef716d8a": {
      "content": "${1:expression} while ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xwh": true
      }
    },
    "64d37587-0ad3-3d44-89ec-c85c6790e046": {
      "content": "content: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true,
        "content": true
      }
    },
    "64dbf0b0-176d-3a0e-800e-5ad5d3f189fd": {
      "content": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\n  return filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "customlist complete function",
      "matches": {
        "customlist": true
      }
    },
    "64ea06c4-ef4c-39e6-a0ce-daae16863353": {
      "content": "namespace ${1} {\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "nspc": true
      }
    },
    "64ea5b9f-d121-3818-a09f-00b83b711d07": {
      "content": "assert_throws :${1:expected} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "astd": true
      }
    },
    "64fc5f65-c2ad-37a4-9e5c-39108f1ff2d3": {
      "content": "newtype ${1:Type} ${2:a} = $1 { un$1 :: ${3:a} } ${4:deriving (${5:Show, Eq})}$0",
      "doc": "Newtype definition",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "newtype",
      "matches": {
        "new": true
      }
    },
    "64fe9a74-df92-3358-89f4-f4fc8a9809f5": {
      "content": "grid-column ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gc": true
      }
    },
    "6508ee96-d261-3ffe-bf79-965420f60669": {
      "content": "@article{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tjournaltitle={${4:journal}},\n\tvolume={${5:NN}},\n\tnumber={${6:NN}},\n\tyear={${7:YYYY}},\n\tpages={${8:NN}--${9:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Article reference",
      "matches": {
        "article": true
      }
    },
    "650a331a-766c-3bdf-88e7-e672429c07f8": {
      "content": "IO.inspect ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.inspect",
      "matches": {
        "ins": true
      }
    },
    "65148e30-a31b-343b-935c-b5fd6f038a52": {
      "content": "border-right-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      }
    },
    "652b0675-866f-3166-8b31-ed66e9a7cfbb": {
      "content": "left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      }
    },
    "6534929b-807e-3781-9bbc-fb29ce39fd0e": {
      "content": "try\n{\n\t${VISUAL}${1:/*code to try*/}\n}\ncatch($2Exception e)\n{\n\t${3:/*handle exception*/}\n}\nfinally\n{\n\t${4:/*cleanup*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "try/catch/finally (tryf)",
      "matches": {
        "tryf": true
      }
    },
    "653b6005-1d66-338f-b2df-69e0151bf777": {
      "content": "background-attachment scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      }
    },
    "6540a77b-c84e-3021-ad55-d46f224a5072": {
      "content": "each_pair {|${1:#:key}, ${2:value}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_pair": true
      }
    },
    "654204d3-d854-3917-a193-2b905c4d2eb4": {
      "content": "{% set ${1:var} = ${2:value} %}$0",
      "doc": "set",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "set",
      "matches": {
        "set": true
      }
    },
    "654d5b1f-6671-3a64-b106-8643da4b4d15": {
      "content": "_.cond(${pairs})",
      "doc": "var func = _.cond([\n  [_.matches({ 'a': 1 }),           _.constant('matches A')],\n  [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n  [_.stubTrue,                      _.constant('no match')]\n]);\n\nfunc({ 'a': 1, 'b': 2 });\n// => 'matches A'\n\nfunc({ 'a': 0, 'b': 1 });\n// => 'matches B'\n\nfunc({ 'a': '1', 'b': '2' });\n// => 'no match'\n\nCreates a function that iterates over `pairs` and invokes the corresponding\nfunction of the first predicate to return truthy. The predicate-function\npairs are invoked with the `this` binding and arguments of the created\nfunction.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-cond",
      "matches": {
        "lodash cond": true
      }
    },
    "654e060c-d571-3ac5-9c08-95941127c947": {
      "content": "do {\n    ${0:TARGET:code}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true,
        "do_while": true
      }
    },
    "655322f1-72a7-37b3-bbb8-69818a747d3c": {
      "content": "widows: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      }
    },
    "6553a93f-ee79-3e46-ac2a-f0046c75e3d1": {
      "content": "must_be_instance_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbio": true
      }
    },
    "655b09ce-2795-303b-a2d9-0900e646806f": {
      "content": "({${1:arguments}}) => ${2:statement}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "arrow function with destructuring",
      "matches": {
        "fd": true
      }
    },
    "655e521e-cfa4-31eb-b166-bb197379b537": {
      "content": "${1:obj}.slideToggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stoggle": true
      }
    },
    "6560a723-6a2f-3ed9-b784-c9548eafd11a": {
      "content": "<% $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "%": true
      }
    },
    "6566b90a-55ed-3023-b4bb-1a5fc98be42b": {
      "content": "loadImage(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadImage": true
      }
    },
    "656ba6d3-4a20-317c-8dad-82391f2869ba": {
      "content": "echo CHtml::radioButton('${1:name}', ${2:false},array(${3:optionName}=>${0:optionValue} );",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrb": true
      }
    },
    "656cb049-9e39-365c-ac41-c458499af567": {
      "content": "import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: ${1},\n});\n\nexport default api;",
      "doc": "Create Axios Configuration file",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "api",
      "matches": {
        "api": true
      }
    },
    "65757b16-3b4e-30d0-bf14-60098856ec11": {
      "content": "number = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "number": true
      }
    },
    "65836259-3248-3d62-b108-13c106c135b9": {
      "content": "print(\"$1\")\n$0",
      "doc": "print(\"...\")",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "print",
      "matches": {
        "print": true
      }
    },
    "658cc8a0-7651-374d-8c60-26b7aab9a74e": {
      "content": "<<\"${0:TARGET}\">>",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "<<\"...\">>",
      "matches": {
        "bs": true
      }
    },
    "659f399d-fd01-3cf4-ae90-1d23e4c24474": {
      "content": "<h3>${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3": true
      }
    },
    "65a76510-a657-38d8-9684-853934e1b61a": {
      "content": "string.ensure()",
      "doc": "string.ensure(): Schema\n\nTransforms undefined and null values to an empty string along with\nsetting the default to an empty string.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-ensure",
      "matches": {
        "yup string ensure": true
      }
    },
    "65adf1cf-8f84-32ee-81c5-95d19ab9ccdb": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X index (1D)",
      "matches": {
        "ix": true
      }
    },
    "65af2a52-ab70-33bd-8298-506df31cc6e1": {
      "content": "FUNCTION COS(${1:angle})$0",
      "doc": "function trigonometric cosine of angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-COS",
      "matches": {
        "FUNCTION COS": true
      }
    },
    "65b19c6c-8108-3eef-9424-1828c90b5205": {
      "content": "- name: http\n  port: 80\n  protocol: TCP\n  targetPort: {{ .Values.$1.service.targetPorts.http }}\n  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.http))) }}\n  nodePort: {{ .Values.${1:value_key}.service.nodePorts.http }}\n  {{- end }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portHTTP_spec": true
      }
    },
    "65b26fe6-a4f0-32f8-b147-85fcbd8ef8a6": {
      "content": "border-left-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      }
    },
    "65c5e4e2-f188-3295-a5d5-86a41955ad2f": {
      "content": "function object(o) {\n\tfunction F() {}\n\tF.prototype = o;\n\treturn new F();\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      }
    },
    "65ca01c4-5769-309a-8cd4-95453c308722": {
      "content": "echo CHtml::cdata(${0:text});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhc": true
      }
    },
    "65cb7518-d499-3331-8df2-982e963aa19a": {
      "content": "<link rel=\"$1\" type=\"$2\" href=\"$3\">$4",
      "doc": "HTML - Defines a resource reference",
      "filetype": "html",
      "grammar": "lsp",
      "label": "link",
      "matches": {
        "link": true
      }
    },
    "65ceb9cd-db92-3fd2-9bde-3486aa4f1c8d": {
      "content": "switch ${1:expression} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "65d0165c-2d75-3012-8a6a-84b52ceead22": {
      "content": "if ( ${1:condition} ) {\n\t${2}\n}\nelse {\n\t${3}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "65d28794-2a9e-313a-b2de-1f87976e0a9a": {
      "content": "leave-active-class=\"$1\"$0",
      "doc": "leave-active-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "leave-active-class",
      "matches": {
        "leaveActiveClass": true
      }
    },
    "65d7be43-5bac-381d-8b2a-91351aa3b453": {
      "content": "background-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      }
    },
    "65d84df7-7698-3c23-a840-cde18875fa77": {
      "content": "border-right-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      }
    },
    "65e79c2a-7f63-3ced-bb5d-217ee6fb803f": {
      "content": ";(async (${1:arguments}) => {\n\t${0}\n})(${2})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "async immediately-invoked function expression",
      "matches": {
        "aiife": true
      }
    },
    "65f3bed2-6883-37e7-87c2-e6e29a4ac032": {
      "content": "cursor: crosshair",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      }
    },
    "65f51abe-863c-3310-8fa1-d47707604f1b": {
      "content": "grid-auto-flow: column dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      }
    },
    "65fbcefd-1057-3a93-a797-c3d3049857d6": {
      "content": "align-self: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      }
    },
    "65fe3387-b75b-3553-a7ae-c56d9bdbc3e0": {
      "content": "alias ${1:value} this;\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alth": true
      }
    },
    "66080a35-7cad-31a8-bd22-00c2550a0560": {
      "content": "$this->db->insert(${1:table}, ${2:data});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_insert": true
      }
    },
    "660ba4b3-2ba5-3fc8-bc75-860ddbebb89f": {
      "content": "{% filter ${1} %}\n\t${0:TARGET}\n{% endfilter %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% filter ... %} ... {% endfilter %}",
      "matches": {
        "filter": true
      }
    },
    "6613c384-cbed-3ae2-ae9a-b64de44b24e7": {
      "content": "if __FILE__ == \\$0\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "6616e8a2-d7e9-3bab-8b1b-a360071efb6a": {
      "content": "PropTypes.oneOf(['$0'])",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      }
    },
    "6618c900-88ce-356e-ae42-14be46ab9121": {
      "content": "checked\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "checked block",
      "matches": {
        "checked": true
      }
    },
    "66192c57-6c30-3ba1-8b90-0339409d4542": {
      "content": "console.time('${1:first}')",
      "doc": "Console time wrapper",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleTime",
      "matches": {
        "ctm": true
      }
    },
    "6619e23b-2c74-3401-b2cc-66ec736e69b7": {
      "content": "<transition\n  @before-enter=\"beforeEnter\"\n  @enter=\"enter\"\n  @after-enter=\"afterEnter\"\n  @enter-cancelled=\"enterCancelled\"\n\n  @before-Leave=\"beforeLeave\"\n  @leave=\"leave\"\n  @after-leave=\"afterLeave\"\n  @leave-cancelled=\"leaveCancelled\"\n  :css=\"false\">\n\n </transition>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vanim:js:el": true
      }
    },
    "661f1b07-0bdd-3a0f-8fa5-894802d0a33b": {
      "content": "namespace ${1:Name}\n{\n    $0\n}",
      "doc": "Namespace",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Namespace",
      "matches": {
        "namespace": true
      }
    },
    "66236282-feab-31a4-88b4-23968e0716e1": {
      "content": "<% require 'pry'; binding.pry %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      }
    },
    "6627a2d9-1d98-339d-8036-aefc38406b1d": {
      "content": "${1:obj}.toggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togsh": true
      }
    },
    "662bd763-f1af-3e22-bef8-bdeff01073dc": {
      "content": "print(${1:#:string}}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "print": true
      }
    },
    "662c4bd6-e476-3705-ad8e-9482c0a5bc2c": {
      "content": "import { store } from './store/index';",
      "doc": "import vuex store into main.js",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-import-store",
      "matches": {
        "vstore-import": true,
        "vuex import store": true
      }
    },
    "662e3464-75a5-3fe5-8aa7-982d8543de06": {
      "content": "param(${0:s});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "662fe94d-8953-3490-9b5c-091af431ca62": {
      "content": "// Typedef is deprecated. Use alias instead.\ntypedef",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "6636067f-4553-3c3c-b672-78fe773af0ee": {
      "content": "<nuxt-link to=\"$1\">$2</nuxt-link>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-linkto",
      "matches": {
        "nuxt linkto": true
      }
    },
    "663a0a20-e856-37e7-a43e-e0fa8f4ac014": {
      "content": "border-right-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-style": true,
        "brs": true
      }
    },
    "663a721a-402a-3f86-9a1a-384575aade47": {
      "content": "word-break: loose;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      }
    },
    "663e59f3-a9da-3498-8028-4f483338db9d": {
      "content": "{% comment %}\n\t${0}\n{% endcomment %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "66432b21-fd79-3193-8fc7-829cca9f5e61": {
      "content": "add_column :${1:table_name}, :${2:column_name}, :${0:data_type}",
      "doc": "Migration add column",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Migration add column",
      "matches": {
        "mac": true
      }
    },
    "6643ebe9-22e1-3b1c-bade-ff6a7b0adf8e": {
      "content": "console.profile(\"${1:label}\");\n${0:${VISUAL}}\nconsole.profileEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.profile",
      "matches": {
        "cprof": true
      }
    },
    "6645b7b3-76ad-35eb-b91b-d34de8fd6e66": {
      "content": "${1:obj}.mousedown (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdown": true
      }
    },
    "665096bf-7c44-3849-a956-402de946d80a": {
      "content": "<style>\n\t${1:/* your styles go here */}\n</style>",
      "doc": "add styles to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-style-tag",
      "matches": {
        "svelte style": true,
        "svstyle": true
      }
    },
    "6655430f-2509-3723-9461-aab6a9b96684": {
      "content": "<datalist>\n\t$1\n</datalist>",
      "doc": "HTML - Defines a dropdown list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "datalist",
      "matches": {
        "datalist": true
      }
    },
    "665881da-7e9a-3edc-aafb-03e803bdca15": {
      "content": "${1:f} = (${2:args}) ->\n  ${0:TARGET}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      }
    },
    "665bc50f-ca27-3804-9ebf-f089f677a46d": {
      "content": "type(${1:name})\n\t${0}\nend type",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      }
    },
    "66608cdf-99f2-32eb-b5eb-9d690ca9877a": {
      "content": "<pre>{{${1:model} | async | json}}</pre>$0",
      "doc": "Angular pre debug | async | json",
      "filetype": "html",
      "grammar": "lsp",
      "label": "pre w/ async json",
      "matches": {
        "a-preja": true
      }
    },
    "6661e272-dc75-3373-86e3-71f981c2d8f9": {
      "content": "{\n\t\"type\": \"font_picker\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\",\n\t\"default\": \"${4|Abel,Abril Fatface,Agmena,Akko,Alegreya,Alegreya Sans,Alfie,Americana,Amiri,Anonymous Pro,Antique Olive,Arapey,Archivo Narrow,Arimo,Armata,Arvo,Asap,Assistant,Asul,Avenir Next,Avenir Next Rounded,Azbuka,Basic Commercial,Basic Commercial Soft Rounded,Baskerville No 2,Bauer Bodoni,Beefcakes,Bembo Book,Bernhard Modern,Bio Rhyme,Bitter,Bodoni Poster,Burlingame,Cabin,Cachet,Cardamon,Cardo,Carter Sans,Caslon Bold,Caslon Old Face,Catamaran,Centaur,Century Gothic,Chivo,Chong Modern,Claire News,Cooper BT,Courier New,Crimson Text,DIN Neuzeit Grotesk,DIN Next,DIN Next Slab,Daytona,Domine,Dosis,Electra,Eurostile Next,FF Meta,FF Meta Serif,FF Tisa,FF Tisa Sans,FF Unit,FF Unit Rounded,FF Unit Slab,Fette Gotisch,Fira Sans,Fjalla One,Friz Quadrata,Frutiger Serif,Futura,Garamond,Geometric 415,Georgia Pro,Gill Sans Nova,Glegoo,Goudy Old Style,Harmonia Sans,Helvetica,Humanist 521,IBM Plex Sans,ITC Avant Garde Gothic,ITC Benguiat,ITC Berkeley Old Style,ITC Bodoni Seventytwo,ITC Bodoni Twelve,ITC Caslon No 224,ITC Charter,ITC Cheltenham,ITC Clearface,ITC Conduit,ITC Esprit,ITC Founders Caslon,ITC Franklin Gothic,ITC Galliard,ITC Gamma,ITC Goudy Sans,ITC Johnston,ITC Mendoza Roman,ITC Modern No 216,ITC New Baskerville,ITC New Esprit,ITC New Veljovic,ITC Novarese,ITC Officina Sans,ITC Officina Serif,ITC Stepp,ITC Stone Humanist,ITC Stone Informal,ITC Stone Sans II,ITC Stone Serif,ITC Tapioca,Inconsolata,Joanna Nova,Joanna Sans Nova,Josefin Sans,Josefin Slab,Kairos,Kalam,Karla,Kreon,Lato,Laurentian,Libelle,Libre Baskerville,Libre Franklin,Linotype Didot,Linotype Gianotten,Linotype Really,Linotype Syntax Serif,Lobster,Lobster Two,Lora,Lucia,Lucida Grande,Luthersche Fraktur,Madera,Malabar,Mariposa Sans,Maven Pro,Megrim,Melior,Memphis,Memphis Soft Rounded,Mentor Sans,Merriweather Sans,Metro Nova,Modern No 20,Monaco,Monotype Baskerville,Monotype Bodoni,Monotype Century Old Style,Monotype Goudy,Monotype Goudy Modern,Monotype Italian Old Style,Monotype New Clarendon,Monotype News Gothic,Monotype Sabon,Montserrat,Mouse Memoirs,Muli,Mundo Sans,Neo Sans,Neue Aachen,Neue Frutiger 1450,Neue Haas Unica,Neue Swift,Neuton,Neuzeit Office,Neuzeit Office Soft Rounded,Neuzeit S,New Century Schoolbook,News 702,News 705,News Cycle,News Gothic No 2,News Plantin,Nobile,Noticia Text,Noto Serif,Nunito,Nunito Sans,Old Standard TT,Open Sans,Open Sans Condensed,Optima nova,Oswald,Ovo,Oxygen,PMN Caecilia,PT Mono,PT Sans,PT Sans Narrow,PT Serif,Pacifico,Palatino,Parma,Perpetua,Plantin,Playfair Display,Poppins,Prata,Prompt,Quantico,Quattrocento,Quattrocento Sans,Questrial,Quicksand,Quire Sans,Rajdhani,Raleway,Really No 2,Righteous,Roboto,Roboto Condensed,Roboto Mono,Roboto Slab,Rockwell,Rubik,Sabon Next,Sackers Square Gothic,Sagrantino,Scene,Scherzo,Shadows Into Light,Slate,Soho,Soho Gothic,Source Code Pro,Source Sans Pro,Stempel Schneidler,Swiss 721,Swiss 721 Rounded,Tenor Sans,Tiemann,Times New Roman,Tinos,Titillium Web,Trade Gothic,Trade Gothic Next,Trebuchet MS,Twentieth Century,Ubuntu,Unica One,Univers Next,Univers Next Typewriter,Unna,Vala,Varela,Varela Round,Verdana Pro,Volkhov,Vollkorn,Waza,Wola,Work Sans,Ysobel|}\"\n},$5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema font picker",
      "matches": {
        "_font": true
      }
    },
    "666b7f70-9732-3c9d-95c2-7c41468d36c4": {
      "content": "align-content: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:lb": true
      }
    },
    "6671e8c1-bd43-3784-a036-e3af0408aeca": {
      "content": "display: table-cell",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      }
    },
    "6673353a-6ba5-3bba-aaa7-5d91f28802d2": {
      "content": "FUNCTION INTEGER-OF-DATE(${1:yyyymmdd})$0",
      "doc": "converts yyyymmdd to an internal integer-date",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER-OF-DATE",
      "matches": {
        "FUNCTION INTEGER-OF-DATE": true
      }
    },
    "66734ef9-039b-358c-9c3b-d16fb90e6f9a": {
      "content": "% try:\n\t${1:}\n% except${2:}:\n\t${3:pass}\n% endtry",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "6676bfa3-5790-3c97-a180-99cdd23d555b": {
      "content": "font-style: italic",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      }
    },
    "667871b2-9b61-3ee2-aa36-5ad6ae440ffd": {
      "content": "export ${1:member}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module export",
      "matches": {
        "e": true
      }
    },
    "667e61e7-dac3-3ea2-8566-7b363de8ec8a": {
      "content": "CREATE TABLE ${1:tableName} (\n\t${2:attribute(s)}\n);",
      "doc": "Create regular table",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "createt",
      "matches": {
        "createt": true
      }
    },
    "668386ae-304b-3659-bcf9-e63702e799bb": {
      "content": "background-attachment: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga": true
      }
    },
    "668606c2-9ddd-3d80-bee8-f50a26c6aa7a": {
      "content": "void main(void);",
      "doc": "void main(void);\nint aFunction(void);\nvoid bFunction(float);\n\nThe data type void is used when the parameter list of a function is empty and when a function does not return a value.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "void",
      "matches": {
        "void": true
      }
    },
    "6691e8b5-f8e3-36f1-985e-4f3a8f805601": {
      "content": "<param name=\"${1}\">${2}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML pramameter comment",
      "matches": {
        "<p": true
      }
    },
    "66992606-31d0-39a1-b6cd-7746701f5fce": {
      "content": "<%= radio_button ${1:f}, :${2:field},  ${3:\"value\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "radio_button",
      "matches": {
        "rb": true
      }
    },
    "66997248-45fc-3a10-84c2-82592d5afa72": {
      "content": "if [ \\$(id -u) -ne 0 ]; then exec sudo \\$0; fi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "root": true
      }
    },
    "66a28ebc-b536-37ec-9a29-0e557fc80400": {
      "content": "| remove: '${1:string}'",
      "doc": "String filter: remove",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter remove",
      "matches": {
        "remove": true
      }
    },
    "66ace098-7a95-3b57-a7f0-99ca7f3fd016": {
      "content": "java.net",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.n": true
      }
    },
    "66bfa742-64d7-31e9-82d0-f8c198b129cb": {
      "content": "reg${1:#: nbit} ${2:reg}_r, $2_w;${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "reg [] _r, _w;",
      "matches": {
        "rw": true
      }
    },
    "66c1d726-b825-394a-816f-2ebca0db9511": {
      "content": "text-wrap: unrestricted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      }
    },
    "66ca00b5-3cb9-3c22-955c-ac7c4782482b": {
      "content": "${1:FIELDNAME} = forms.ModelMultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelMultipleChoiceField",
      "matches": {
        "fmomuchoice": true
      }
    },
    "66d8525a-e04a-32f9-8549-4c768d4e5600": {
      "content": "background-color: ${1:red};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-name (background)",
      "matches": {
        "background": true
      }
    },
    "66e0e6b4-8ea5-315d-9c41-1e68facc1b26": {
      "content": "\\$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b} ;",
      "doc": "Ternary conditional assignment",
      "filetype": "php",
      "grammar": "lsp",
      "label": "$… = ( … ) ? … : …",
      "matches": {
        "if?": true
      }
    },
    "66f171cf-cac4-3e84-903c-330bf74b455e": {
      "content": "const ${1:store} = readable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "svelte readable (set function required)",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-readable",
      "matches": {
        "s-readable": true
      }
    },
    "66f2d218-3082-3806-815b-facf074a128b": {
      "content": "${1:FIELDNAME} = serializers.RegexField(regex=${2})",
      "doc": "Django-rest Serializers `RegexField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF RegexField",
      "matches": {
        "sregex": true
      }
    },
    "66f9c68d-e80c-3aa8-85b6-9a97f88626db": {
      "content": "${1:obj}.andSelf()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "andself": true
      }
    },
    "66fa9034-54aa-33db-8b38-a543c31f407b": {
      "content": "font-weight: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      }
    },
    "67024a65-39ef-3047-a7de-058049193685": {
      "content": "function locale-date(${1:yyyymmdd},${2:locale-optional})$0",
      "doc": "format yyyymmd; according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-locale-date",
      "matches": {
        "function locale-date": true
      }
    },
    "670b1e70-5610-3716-9206-f50151d1789f": {
      "content": "<xsl:template name=\"${1:name}\">${0}\n</xsl:template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "named",
      "matches": {
        "template": true
      }
    },
    "670dc6e7-eeee-30d4-a0c9-a4d24b7f2295": {
      "content": "var (\n\t${1} ${2} = ${3}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variables declaration",
      "matches": {
        "vars": true
      }
    },
    "6712edee-12f8-3ccf-b9e6-30e4506b469a": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      }
    },
    "6714028f-cb8f-32fa-9c9f-dde8de220199": {
      "content": "place-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      }
    },
    "67170c5b-aea2-31c3-824c-c8b6533aaa5d": {
      "content": "<input type=\"submit\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:submit": true
      }
    },
    "672f62c3-545c-3621-bcee-930f1665b868": {
      "content": "unchecked\n{\n    $0\n}",
      "doc": "Unchecked block",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Unchecked block",
      "matches": {
        "unchecked": true
      }
    },
    "673204bc-62e7-3233-942e-e2029dd1902b": {
      "content": "<%= ${1:TARGET} -%>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%= -%>",
      "matches": {
        "ruby_print_nonl": true
      }
    },
    "673aac0c-308d-306f-b1e1-c35919a6dfc9": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-one-of-type",
      "matches": {
        "prop-types oneoftype": true,
        "ptet": true
      }
    },
    "673acae3-b095-3abd-84a2-46323dff8b1e": {
      "content": "flexDirection: '${1:column}',",
      "doc": "flexDirection",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flexDirection",
      "matches": {
        "flex": true
      }
    },
    "673e052b-ba7b-3dda-8cf0-bb330062385e": {
      "content": "/// <reference path=\"${0:#:TARGET}\" />",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "/// <reference path=\"...\" />",
      "matches": {
        "reference": true
      }
    },
    "67429c65-0d3b-304a-91f8-f3a286dd5c0a": {
      "content": "{% exit ${1} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig exit",
      "matches": {
        "exit": true
      }
    },
    "674e7352-f557-3c52-81d6-74637101337a": {
      "content": "<!DOCTYPE html>\n<html lang=\"$1en\">\n\t<head>\n\t\t<title>$2</title>\n\t\t<meta charset=\"UTF-8\">\n\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\t\t<link href=\"$3css/style.css\" rel=\"stylesheet\">\n\t</head>\n\t<body>\n\t$4\n\t</body>\n</html>",
      "doc": "HTML - Defines a template for a html5 document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "html5",
      "matches": {
        "html5": true
      }
    },
    "67510b12-3035-384d-814e-e8899370856c": {
      "content": "box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh": true
      }
    },
    "675b6aa5-7276-3c31-af1e-4f96b266db54": {
      "content": "{% requireLogin %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requirelogin",
      "matches": {
        "requirelogin": true
      }
    },
    "675c4092-e369-34a1-b4fd-949e3f5e5326": {
      "content": "<?php if (${1:#:condition}): ?>\n${0:TARGET}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pif": true
      }
    },
    "675ea6e5-b51f-3684-b026-ee512fa782a9": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tORDER BY ${3:attribute(s)} ${4:ASC|DESC};",
      "doc": "Select with order",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "selector",
      "matches": {
        "selector": true
      }
    },
    "675ecd70-26c6-3c37-9a6d-74e878a3707e": {
      "content": "text-align-last: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      }
    },
    "676cc058-b097-3182-97f9-260eecc275d3": {
      "content": "$this->shouldNotHaveType($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotHaveType('Type')",
      "matches": {
        "sntype": true
      }
    },
    "6771b21b-e50c-330c-881f-b36f0e13e3de": {
      "content": "class ${0:ModelName}Inline(admin.TabularInline):\n\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tabularinline": true
      }
    },
    "677f228c-ab0d-38be-afbd-1491de2cd55a": {
      "content": "${1:obj}.hide '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hidec": true
      }
    },
    "677f6d82-a7df-32f5-bf5d-2afa38d3505b": {
      "content": "foreign import ${1} :: ${2}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      }
    },
    "6787996a-f348-3687-a29b-8607869d3330": {
      "content": "try:\n  ${1:pass}\nexcept ${2:#:ExceptionClass}:\n  ${3:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "try: ... except ...: ...",
      "matches": {
        "tryexcept": true
      }
    },
    "678812be-8d0c-3f2f-b8d3-a00a3ff6c6bf": {
      "content": "<% for (let ${1:i = 0}; ${2:i<arr.length}; ${3:i++}) { %>\n\t${0:body}\n<% } %>",
      "doc": "",
      "filetype": "ejs",
      "grammar": "snu",
      "label": "ejs for loop",
      "matches": {
        "for": true
      }
    },
    "67897b11-35a4-3534-b767-3c55ede042d9": {
      "content": "${1:obj}.find('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      }
    },
    "6791f484-915c-3b09-a904-0d19265e22e6": {
      "content": "text-indent ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      }
    },
    "679405ab-d498-31f2-b348-9772d3ea81c4": {
      "content": "_.isArrayBuffer(${value})",
      "doc": "_.isArrayBuffer(new ArrayBuffer(2));\n// => true\n\n_.isArrayBuffer(new Array(2));\n// => false\n\nChecks if `value` is classified as an `ArrayBuffer` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraybuffer",
      "matches": {
        "lodash isarraybuffer": true
      }
    },
    "6798045a-de39-3f1d-9dc1-dd629ce3c214": {
      "content": "\\begin{tikzpicture}[${1}]\n\t${2:TARGET}\n\\end{tikzpicture}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tikzpicture}": true,
        "tikzpicture": true
      }
    },
    "679b4f22-13e3-30ff-88ac-d74bf2a2f3be": {
      "content": "[ngClass]=\"{${1:cssClass}: ${2:expression}}\"",
      "doc": "Angular ngClass",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngClass",
      "matches": {
        "a-ngClass": true
      }
    },
    "679bc393-f0f7-37ec-b602-e7d265cb556b": {
      "content": "switch (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "679c2b00-e201-3f64-afd9-d2c53d81a992": {
      "content": "Switch (${1:condition})\nCase ${2:case1}:\n\t${3:; Case 1 code}\nCase Else:\n\t${0:; Else code}\nEndSwitch",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "67a18461-dcb8-3b6a-beb6-16012bbaf340": {
      "content": "do\n{\n\t$1\n} while($2);",
      "doc": "Code snippet for do...while loop",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "do",
      "matches": {
        "do": true
      }
    },
    "67a1b0a4-c405-31f2-8a47-f2e867094c6d": {
      "content": "l_${1}\t\t${0:number};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l": true
      }
    },
    "67a25d44-4919-3c2a-8f72-80e0600ced3a": {
      "content": "\\begin{verse}\n\t${1:TARGET}\n\\end{verse}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verse} \\verse": true,
        "verse": true
      }
    },
    "67a86eb1-c1a7-3020-bcb0-ed6563f48072": {
      "content": "${1:FIELDNAME} = models.DecimalField($2, max_digits=${3:5}, decimal_places=${4:2})",
      "doc": "DecimalField (mdecimal).\n\nA fixed-precision decimal number, represented in Python by a Decimal instance.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mdecimal",
      "matches": {
        "mdecimal": true
      }
    },
    "67adca5f-2eef-3e1e-84f8-30726d6423e3": {
      "content": "bezierVertex(${1:cx1}, ${2:cy1}, ${3:cx2}, ${4:cy2}, ${5:x}, ${0:y});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierVertex": true
      }
    },
    "67af4a5c-2b3f-3220-a05f-314b6d6fac77": {
      "content": "${1:/* condition */} ? ${2:a} : ${3:b}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "67b1cca7-4c0f-36c7-aab1-be8d859eb8d6": {
      "content": "<Location ${1:location}>\n        ${2:config}\n</Location>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "location": true
      }
    },
    "67b1e031-e8f4-36a5-84fa-2cf2c78fbc44": {
      "content": "place-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      }
    },
    "67b52f54-0b16-3c7a-82d5-812aec29f215": {
      "content": "const_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cca": true
      }
    },
    "67b62631-28ef-3f4b-812c-f1ce9ec32bee": {
      "content": "function boolean-of-integer(${1:integer},${2:length})$0",
      "doc": "function boolean item of usage bit representing the binary value of integer; with the given length",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-boolean-of-integer",
      "matches": {
        "function boolean-of-integer": true
      }
    },
    "67b78a53-3ffb-3862-92ce-9f4eda8dfbf8": {
      "content": "value>${1:property-description}</value>\n*>> $0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "<value",
      "matches": {
        "<value>": true
      }
    },
    "67c832f5-9115-3f64-8bfb-7b7e7a4b5ce7": {
      "content": "{\n\t\"type\": \"product\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema product dropdown",
      "matches": {
        "_product": true
      }
    },
    "67cc4bd9-f132-36a8-aae7-3696c3f70b0f": {
      "content": "scope :${1:name}, -> { where(${2:field}: ${0:value}) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sc": true
      }
    },
    "67d28ecc-4899-3d41-8224-e00dbd9185d6": {
      "content": "do {\n\t$1\n} while($2);",
      "doc": "Creates a do...while loop",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Do...while loop",
      "matches": {
        "do": true
      }
    },
    "67d32f56-095d-3907-b394-6b3d6a98756c": {
      "content": "[${1:text}](https://${2:address} \"${3:title}\")",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[\"": true
      }
    },
    "67dc304d-ba9d-3462-837c-59b686a0ee46": {
      "content": "$this->assertContains(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContains($needle, $haystack)",
      "matches": {
        "ascon": true
      }
    },
    "67e08914-5245-3381-be85-49d5946800fd": {
      "content": "validates_format_of :${1:attribute}, with: /${2:^[${3:\\w\\d}]+\\$}/${4:, on: :${5:create}, message: \"${6:is invalid}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of",
      "matches": {
        "vf": true
      }
    },
    "67e89d64-2dfc-3d7b-bdcd-1e5e96e8410b": {
      "content": "export const Global${1} = createGlobalStyle`\n  ${2}\n`;",
      "doc": "Export createGlobalStyle",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-create-global-style",
      "matches": {
        "exscg": true,
        "styled-components export createglobalstyle": true
      }
    },
    "67e8c1ac-6733-3f51-b55d-e104178742c1": {
      "content": "[${0:TARGET} for ${1:x} in ${2:xs}]",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "67eb3a6e-4e63-306a-adef-8fc8d29f13bf": {
      "content": "?assertException(${1:Class}, ${2:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asexc": true
      }
    },
    "67ed8255-7d5b-34cf-9633-e6d24e18c901": {
      "content": "repeat {\n\t$0\n} while ${1:condition}",
      "doc": "repeat-while statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "repeat-while",
      "matches": {
        "repeat": true
      }
    },
    "67fcd027-2a5d-3f39-a2f4-6752d2865e9c": {
      "content": "display: table-row-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      }
    },
    "680a5d52-1e4f-358d-b3e6-7407c724282e": {
      "content": "routes: [$1]$0",
      "doc": "routes: []",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routes",
      "matches": {
        "routes": true
      }
    },
    "681061a7-a0b1-374b-8478-67c11806f5e9": {
      "content": "import (\n  \"${1:fmt}\"\n)\n${0:TARGET}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true,
        "import": true
      }
    },
    "6815653f-b76e-3141-b475-b90c50ab4c87": {
      "content": "if (${1})\n\t${2:${VISUAL}}\nelse if (${3})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelif": true
      }
    },
    "68158805-4be0-3212-a4a4-94ffb11d3a77": {
      "content": "<svelte:head>\n\t${1:<!-- head content -->}\n</svelte:head>",
      "doc": "svelte:head",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-head",
      "matches": {
        "s-head": true
      }
    },
    "681b1140-2d43-3875-a230-765c9203dd42": {
      "content": "notFound(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rnf": true
      }
    },
    "681b8a6f-9a00-387b-b135-0b3f47fdcc2f": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      }
    },
    "681e696f-dccb-35a2-8ae1-13f36e62b64f": {
      "content": "#define $0",
      "doc": "Code snippet for #define \" \"",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#def",
      "matches": {
        "def": true
      }
    },
    "6821edbe-554c-3da1-92ba-7729a12415b1": {
      "content": "letter-spacing: $1px;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "letter-spacing:   length-px (letter)",
      "matches": {
        "letter": true
      }
    },
    "68274c28-1b53-3ff1-a43b-d667226eab6e": {
      "content": "stopDrag();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sd": true
      }
    },
    "6828b08c-de5d-36b9-b52c-78d326b40e12": {
      "content": "default_scope ${1:order(${2:'${3:created_at DESC}'})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "default_scope",
      "matches": {
        "dscope": true
      }
    },
    "68292e37-3386-3073-a93d-31f6f1803210": {
      "content": "it \"${1}\" $ property $\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itp": true
      }
    },
    "682f4bf7-9ec2-3d00-98ff-9233a7c2b32c": {
      "content": "#include <${1:stdio}.h>${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc, #include": true,
        "inc": true
      }
    },
    "682fd965-164f-394c-a3b4-ae087ad673ae": {
      "content": "padding-top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      }
    },
    "6830b0be-208e-3089-b677-1202407385c6": {
      "content": "${1:name}.reduceLeft[${0:T}] {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redl": true
      }
    },
    "6833b9b9-1c77-382c-a631-f33b9cd5f4a6": {
      "content": "Wait Until Element Is Not Visible    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Not Visible",
      "matches": {
        "wueinv": true
      }
    },
    "6834f0bf-a45d-39d2-ad5f-5a9a98dca154": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\"\n\"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docx": true
      }
    },
    "6838d1a7-728f-3787-a83f-578bdaf96c8c": {
      "content": "for ${1:i} := ${2:0}; $1 < ${3:count}; $1${4:++} {\n\t$0\n}",
      "doc": "Snippet for a for loop",
      "filetype": "go",
      "grammar": "lsp",
      "label": "for n statement",
      "matches": {
        "fori": true
      }
    },
    "68402731-3b5a-33fa-bb9b-cb4c00bf2d7e": {
      "content": "<menu type=\"context\">\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu:c": true
      }
    },
    "6842c94a-8d17-3855-bc39-e9cb177d83f7": {
      "content": "_.escapeRegExp(${string})",
      "doc": "_.escapeRegExp('[lodash](https://lodash.com/)');\n// => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\nEscapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-escaperegexp",
      "matches": {
        "lodash escaperegexp": true
      }
    },
    "68450ffa-a291-3a42-adea-2801204d05b6": {
      "content": "cy.get('${1:selector}');",
      "doc": "Get one or more DOM elements by selector or alias",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-get",
      "matches": {
        "cypress get": true
      }
    },
    "68466b60-6cc6-3c2c-8481-578522a55bf3": {
      "content": "std::unordered_multiset<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "umset": true
      }
    },
    "68497055-e0be-3c79-9721-14f40279a4e5": {
      "content": "place-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "684c725f-1343-3feb-8e0e-9f3e08425fd7": {
      "content": "spyOn(${1:object}, \"${2:method}\").andCallThrough()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and call through (coffee)",
      "matches": {
        "sct": true
      }
    },
    "6851f42f-39c1-3623-a916-82172ad31949": {
      "content": "| split: '${splitter:,}' }}",
      "doc": "String filter: split",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter split",
      "matches": {
        "split": true
      }
    },
    "685675a1-f56e-378a-a469-ab810f290e89": {
      "content": "receive\n${1:\t${2:pattern}${3: when ${4:guard}} ->\n\t\t${5:body}}\n${6:after\n\t${7:expression} ->\n\t\t${8:body}}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Receive Expression",
      "matches": {
        "rcv": true
      }
    },
    "6859d37d-97bc-3196-9373-1304c118fa8e": {
      "content": "\\begin{displaymath}\n\t${1:TARGET}\n\\end{displaymath}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{displaymath} \\displaymath": true,
        "displaymath": true
      }
    },
    "685e0577-f5e9-3a4a-b592-b56d0e26452b": {
      "content": "do {\n\t${1}\n} while(${2});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      }
    },
    "685e5a41-10e2-34da-a351-b16df58ca73d": {
      "content": "let ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "6862cee7-2744-35de-ac2b-92f5b2379149": {
      "content": "width: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w:a": true
      }
    },
    "68675a85-af4f-3435-bca0-9c3d8b074b82": {
      "content": "console.time(${1:object});",
      "doc": "Sets starting point for execution time measurement",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTime",
      "matches": {
        "cti": true
      }
    },
    "6873b1ac-645d-3844-a737-e263e7114aab": {
      "content": "margin-right: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-right": true,
        "mr": true
      }
    },
    "687d6347-cd14-34c0-ac5a-eb0b849b4e24": {
      "content": "{% static \"${VISUAL}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static": true
      }
    },
    "687dcd00-7171-3563-a0ef-d8564943cbe0": {
      "content": "${1:obj}.mouseout (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      }
    },
    "687e9064-e4fa-3d3c-a804-aa749efbc3e4": {
      "content": "background-clip: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      }
    },
    "6882c18c-7637-37dd-9667-a21584e97ae9": {
      "content": "def ${1:mname}(self, ${2:arg}) -> ${3:return_type}:\n\t${4:pass}$0",
      "doc": "Code snippet for a class method definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New method w/ return",
      "matches": {
        "defst": true
      }
    },
    "6884e86f-3377-39ce-b23d-6521202ca3e0": {
      "content": "enum ${1:Name} {\n\t${2},\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "enum definition",
      "matches": {
        "enum": true
      }
    },
    "6885d1d9-a221-30e9-8dc2-0f05511ba63e": {
      "content": "${1:#:set the_filename to }choose file name with prompt \"${2:#:Name this file:}\"\n\tdefault name \"${3:untitled}\" default location ${4:#:path to home folder}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_NewFile": true
      }
    },
    "688d9b54-69b0-3d73-a94c-da98c1c2f80e": {
      "content": "assert_redirected_to ${0:model}s_path",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "artpp": true
      }
    },
    "688fb3a8-9d6f-3601-a3da-aa8c0ee94502": {
      "content": "when (${1:case}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "68936ae4-2b1b-3d39-b6f1-01b20408449e": {
      "content": "background-repeat: repeat-y;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      }
    },
    "68970290-8990-311b-a9f7-14656f37468e": {
      "content": "<img :src=\"'/path/to/images/' + ${1:fileName}\" alt=\"${2:altText}\"/>",
      "doc": "image source binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Image Source Binding",
      "matches": {
        "vsrc": true
      }
    },
    "689d4ff3-a1b2-3ea2-9664-9dc1240820a8": {
      "content": "public ${1:int} ${2:MyProperty} { get; set; }$0",
      "doc": "An automatically implemented property. C# 3.0 or higher",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "prop",
      "matches": {
        "prop": true
      }
    },
    "68a30f04-0bc9-3f79-9889-802fed7e2d09": {
      "content": "border-style: dot-dash",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      }
    },
    "68aa3e92-b254-3a21-82c9-5187275f7f7d": {
      "content": "border-left: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      }
    },
    "68ace78c-b2dd-3449-afa1-c44a15b15400": {
      "content": "$1-EP SECTON.\nENTRY \"$1\".\n    $0\t\n    GOBACK.",
      "doc": "ENTRY statement",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ENTRY",
      "matches": {
        "ENTRY": true,
        "GB": true
      }
    },
    "68ae907c-26d8-381c-aa71-779369631a3b": {
      "content": "TRUNCATE TABLE ${1:table};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "TRUNCATE TABLE ...",
      "matches": {
        "TRUNCATE_TABLE": true
      }
    },
    "68af562f-bfe3-3a9b-9bea-d90a4c25b528": {
      "content": "project(${0:Name})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proj": true
      }
    },
    "68b16492-0026-3567-833e-ae9fdb502b30": {
      "content": "padding-bottom: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-bottom: length (margin)",
      "matches": {
        "padding": true
      }
    },
    "68b4f9e5-5ff3-349b-a0f2-52771a5de14c": {
      "content": "${${0:0}:TARGET}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${*:TARGET}",
      "matches": {
        "T": true,
        "TARGET": true
      }
    },
    "68b668e5-ff4c-3c7a-b132-edd3fd3f2e50": {
      "content": "<!% ${0:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<!%": true
      }
    },
    "68b74f4e-4c83-3c1a-aea0-018a50eadf11": {
      "content": "assert_eq!(${1:expected}, ${2:actual});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "assert_eq!",
      "matches": {
        "ase": true
      }
    },
    "68b9d1d9-2476-32ce-96a9-d6e1b30ebff2": {
      "content": "import { Routes } from '@angular/router';\n\nexport const routes: Routes = [${0}]",
      "doc": "Route definitions",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "route-definitions",
      "matches": {
        "a-routes": true,
        "angular route definitions": true
      }
    },
    "68ba7fad-9a6a-32b3-955f-abbe451ff6e3": {
      "content": "apiVersion: v1\nkind: Service\nmetadata:\n{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.$1.service.annotations | indent 4 }}\n{{- end }}\n  labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"$2.$1.fullname\" . }}\nspec:\n  clusterIP: \"{{ .Values.$1.service.clusterIP }}\"\n{{- if .Values.$1.service.externalIPs }}\n  externalIPs:\n{{ toYaml .Values.$1.service.externalIPs | indent 4 }}\n{{- end }}\n{{- if .Values.$1.service.loadBalancerIP }}\n  loadBalancerIP: \"{{ .Values.$1.service.loadBalancerIP }}\"\n{{- end }}\n{{- if .Values.$1.service.loadBalancerSourceRanges }}\n  loadBalancerSourceRanges:\n{{ toYaml .Values.$1.service.loadBalancerSourceRanges | indent 4 }}\n{{- end }}\n  healthCheckNodePort: {{ .Values.$1.service.healthCheckNodePort }}\n  ports:\n\t- name: http\n\t  port: 80\n\t  protocol: TCP\n\t  targetPort: {{ .Values.$1.service.targetPorts.http }}\n\t  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.http))) }}\n\t  nodePort: {{ .Values.$1.service.nodePorts.http }}\n\t  {{- end }}\n\t- name: https\n\t  port: 443\n\t  protocol: TCP\n\t  targetPort: {{ .Values.$1.service.targetPorts.https }}\n\t  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.https))) }}\n\t  nodePort: {{ .Values.$1.service.nodePorts.https }}\n\t  {{- end }}\n  {{- range $key, $value := .Values.tcp }}\n\t- name: \"{{ $key }}-tcp\"\n\t  port: {{ $key }}\n\t  protocol: TCP\n\t  targetPort: \"{{ $key }}-tcp\"\n  {{- end }}\n  {{- range $key, $value := .Values.udp }}\n\t- name: \"{{ $key }}-udp\"\n\t  port: {{ $key }}\n\t  protocol: UDP\n\t  targetPort: \"{{ $key }}-udp\"\n  {{- end }}\n  selector:\n\tapp: {{ template \"${2:chartName}.name\" . }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\trelease: {{ .Release.Name }}\n  type: \"{{ .Values.${1:value_key}.service.type }}\"",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_sample_spec": true
      }
    },
    "68c0c8f0-45a6-3fdc-83c3-1b4eaaa65efb": {
      "content": "for ${1:i} in ${2:startValueInclusive} to ${3:endValueInclusive} {\n\t${4:Js.log(${1:i})}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "For Loop",
      "matches": {
        "for": true
      }
    },
    "68c75f55-3bac-3415-b22b-a60b8b0bdab0": {
      "content": "flex: ${1:0} ${2:1} ${0:auto};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fx": true
      }
    },
    "68cf3e0c-c786-3a43-8763-41c604100e6b": {
      "content": "if err != nil {\n\t${1}\n\treturn\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error handle and return",
      "matches": {
        "errh": true
      }
    },
    "68d04a90-7238-3a50-8c01-17bbf2f74303": {
      "content": "function formatted-datetime(${1:date-and-time-format},${2:integer-date},${3:standard-numeric-time},${4:offset_or_system_offset})$0",
      "doc": "function formatted-datetime",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-formatted-datetime",
      "matches": {
        "function formatted-datetime": true
      }
    },
    "68d7f7d1-adb8-3595-8f71-bd0325ea40d9": {
      "content": "go ${1:funcName}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "goroutine named function",
      "matches": {
        "g": true
      }
    },
    "68d98807-1f3b-3af0-a4b7-58252dd8d9ef": {
      "content": "outline-color invert",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      }
    },
    "68ddd510-cbf6-3129-98af-77b783dfae4f": {
      "content": "find_all do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "finad": true
      }
    },
    "68e33e46-268f-3ae6-a6ab-cf51c0681cf2": {
      "content": "write(unit = ${1:fp}, file = ${2:filename}, iostat = ${3:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "write": true
      }
    },
    "68e9229a-0634-3a82-a6ed-cb477b87c163": {
      "content": "function* (${1:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "generator function",
      "matches": {
        "gf": true
      }
    },
    "68ed262f-facf-388f-adfd-a25429cc7443": {
      "content": "import PropTypes from 'prop-types'\nimport React from 'react'\nimport { connect } from 'react-redux'\n\nexport const ${1:${TM_FILENAME_BASE}} = (props) => {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n  ${2:second}: PropTypes.${3:third}\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})",
      "doc": "DEPRECATED: Creates a React functional component with PropTypes with connected redux and ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionalComponentReduxPropTypes",
      "matches": {
        "rfcreduxp": true
      }
    },
    "68ef7c01-ac6f-3877-8572-5f24d2d28e2b": {
      "content": "require '${1}'$0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert require",
      "matches": {
        "req": true
      }
    },
    "68f60cb5-d5ac-3581-a35d-36a14a2f0837": {
      "content": "border-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      }
    },
    "68f6e4a9-33a0-3969-b91f-4606742b84b6": {
      "content": "mixed.validateSyncAt()",
      "doc": "mixed.validateSyncAt(path: string, value: any, options?: object): any\n\nSame as validateAt but synchronous.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-sync-at",
      "matches": {
        "yup mixed validatesyncat": true
      }
    },
    "68f70375-ea4a-3640-97ae-456027dfa66f": {
      "content": "font ${1:1em} ${2:Arial},${0:sans-serif}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      }
    },
    "690558ee-5f8e-3dbe-9baf-3745d19a3fa2": {
      "content": "${1:controllerName} = (${2:scope}, ${3:injectables}) ->\n\t${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngc": true
      }
    },
    "6906e72f-a9e8-3a4f-8231-631fd3c3827f": {
      "content": "rapply(${1:list}, ${2:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "rapply",
      "matches": {
        "rapply": true
      }
    },
    "6909552a-cfad-345b-85e9-8dcf4c26919f": {
      "content": "@if ${1:condition} {\n\t${2}\n} @else {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "69186947-fba1-3133-ac17-a5f0d696e7d0": {
      "content": "import { ${1:libName} } from '${1:libName}'",
      "doc": "import a library",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-library",
      "matches": {
        "vimport-lib": true,
        "vue import library": true
      }
    },
    "691f0f60-c8ba-3a0e-bedf-7a1f00e47874": {
      "content": "when {\n\tnot '${1:not}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whennot": true
      }
    },
    "6924acad-ec90-3ace-b5df-12754f5096af": {
      "content": "wordwrap:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      }
    },
    "692ace60-11d9-3be1-a271-4f561c5563a0": {
      "content": "module ${1} : sig\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module signature",
      "matches": {
        "mos": true
      }
    },
    "692c1a67-89e7-3b2d-b7a1-6d65b6877227": {
      "content": "expect(${1:target}).wasCalledWith(${2:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was called with (coffee)",
      "matches": {
        "escw": true
      }
    },
    "6930e0b5-009c-3b41-bcec-550210c326b7": {
      "content": "${1:obj}.one '${2:event name}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "one": true
      }
    },
    "6933a6f7-581a-33b2-afb4-e934359822c8": {
      "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n${0}\n</html>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xhtml": true
      }
    },
    "69353ac3-7cb7-3fa6-87cc-5b51ec89d129": {
      "content": "font-stretch semi-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      }
    },
    "693f5c31-6a6e-3f99-a054-42fd406bfcf5": {
      "content": "${1:FIELDNAME} = models.AutoField($2)",
      "doc": "AutoField (mauto).\n\nAn IntegerField that automatically increments according to available IDs.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mauto",
      "matches": {
        "mauto": true
      }
    },
    "693fe13a-c5c6-3797-a229-8c28cdf5a7e1": {
      "content": "private:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "private (priv)",
      "matches": {
        "priv": true
      }
    },
    "6941ceeb-5a34-3148-a868-83a19a99c654": {
      "content": "\\${0:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:#optional}",
      "matches": {
        "0#": true
      }
    },
    "6951fa3f-d78f-3aaf-88c7-ee2f9f989973": {
      "content": "using (${1:#:resource}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "using () {}",
      "matches": {
        "using resource": true,
        "using_resource": true
      }
    },
    "695458a3-b3c1-3d49-9a1e-db313e23adeb": {
      "content": "$.getScript '${1:mydomain.com/url}', (script, textStatus, jqXHR) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getscript": true
      }
    },
    "69568b0c-04e1-3974-8abb-5cddf2deb045": {
      "content": "match ${1:expr} {\n    ${2:Some(expr)} => ${3:expr},\n    ${4:None} => ${5:expr},\n}",
      "doc": "match … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "695d4ee6-e6bd-36a7-b607-ee6da10f822b": {
      "content": "border-collapse: separate",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      }
    },
    "695dd15f-65a2-3256-9dd6-e9aff4c2842d": {
      "content": "panic(\"${0:msg}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic",
      "matches": {
        "pn": true
      }
    },
    "695e4bf2-53c1-33d8-bd50-a8435f299d78": {
      "content": "func Test${1:name}(t *testing.T) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "test function",
      "matches": {
        "test": true
      }
    },
    "695f2fef-d578-3e01-aba8-9ed00a4887b9": {
      "content": "const Global${1} = createGlobalStyle`\n  ${2}\n`;",
      "doc": "createGlobalStyle",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-create-global-style",
      "matches": {
        "scg": true,
        "styled-components createglobalstyle": true
      }
    },
    "696c08b3-561f-3cd7-87e8-371fe30777e7": {
      "content": "map { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "696d3dfb-9242-3823-8e67-98f0a084949b": {
      "content": "${1:FIELDNAME} = models.OneToOneField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "OneToOneField",
      "matches": {
        "o2o": true
      }
    },
    "697202d6-9d1e-3050-a762-819211d5d0dd": {
      "content": "${1:obj}.fadeTo('slow/400/fast', ${2:0.5}, function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadetoc": true
      }
    },
    "69746761-cf12-3b64-a8ee-7594c354f859": {
      "content": "import { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../../environments/environment';\n\n@NgModule({\n  imports: [\n    StoreModule.forRoot({}),\n    EffectsModule.forRoot([]),\n    environment.production ? [] : StoreDevtoolsModule.instrument()\n  ]\n})\nexport class $1StoreModule {}",
      "doc": "NgRx Store Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Store Module",
      "matches": {
        "a-ngrx-store-module": true
      }
    },
    "697661f6-dcac-3d57-a31f-e8fce8e101ac": {
      "content": "border-width: ${1:1px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-width: width (border)",
      "matches": {
        "border": true
      }
    },
    "69781c44-11e4-3b95-acab-779bef557da7": {
      "content": "<Helmet>\n${1:example}\n</Helmet>",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-component",
      "matches": {
        "react-helmet component": true
      }
    },
    "69885999-7d74-36c5-a0ab-81b3909b4f99": {
      "content": "// https://eips.ethereum.org/EIPS/eip-173\r\n// https://github.com/0xcert/ethereum-erc721/blob/master/src/contracts/ownership/ownable.sol (this example)\r\n// https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/access/Ownable.sol\r\n// https://github.com/FriendlyUser/solidity-smart-contracts//blob/v0.2.0/contracts/other/CredVert/Ownable.sol\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/// @title ERC-173 Contract Ownership Standard\r\n/// @dev See https://github.com/ethereum/EIPs/blob/master/EIPS/eip-173.md\r\n///  Note: the ERC-165 identifier for this interface is 0x7f5828d0\r\ninterface ERC173 /* is ERC165 */ {\r\n    /// @dev This emits when ownership of a contract changes\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /// @notice Get the address of the owner\r\n    /// @return The address of the owner.\r\n    function owner() external view returns (address);\r\n    /// @notice Set the address of the new owner of the contract\r\n    /// @dev Set _newOwner to address(0) to renounce any ownership.\r\n    /// @param _newOwner The address of the new owner of the contract\r\n    function transferOwnership(address _newOwner) external;\r\n}\r\n\r\ninterface ERC165 {\r\n    /// @notice Query if a contract implements an interface\r\n    /// @param interfaceID The interface identifier, as specified in ERC-165\r\n    /// @dev Interface identification is specified in ERC-165. This function\r\n    ///  uses less than 30,000 gas.\r\n    /// @return `true` if the contract implements `interfaceID` and\r\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}",
      "doc": "Draft: EIP-173 Interface for Contract Ownership Standard, A standard interface for ownership of contracts.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc173i",
      "matches": {
        "erc173i-draft": true
      }
    },
    "698a2d5b-3e4e-345e-b261-ce71d8ec4844": {
      "content": "background-clip: border-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:bb": true
      }
    },
    "6991dcf1-9a13-345e-bba5-3a416a9904df": {
      "content": "loadStrings(\"${0:filename}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadStrings": true
      }
    },
    "699880a1-3934-3219-bd5e-8ccd3c68f91d": {
      "content": "backgroundColor: ${1},",
      "doc": "backgroundColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "backgroundColor",
      "matches": {
        "bac": true
      }
    },
    "699d47be-c7ea-340d-8b3a-15498e8c3bc1": {
      "content": "{% elsif ${1:condition} %}",
      "doc": "Control flow tag: elsif",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag elsif",
      "matches": {
        "elsif": true
      }
    },
    "69a3f66c-7e1a-3ba6-bc85-54e005a5e8ab": {
      "content": "Page Should Not Contain    ${1:${text}}    ${2:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain",
      "matches": {
        "psnc": true
      }
    },
    "69a6f779-e56d-35e3-a298-cde03d68611d": {
      "content": "@class ${1:Foo};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "69b1678a-9809-3b1a-97e4-b94e48ca2b87": {
      "content": "border-style: dotted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      }
    },
    "69b1d0ff-c4e8-3999-b677-3c891baf8229": {
      "content": "#include <$0>",
      "doc": "Code snippet for #include < >",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#inc<",
      "matches": {
        "#inc<": true
      }
    },
    "69b21ce0-a7b2-3828-baa9-745d49e48ba2": {
      "content": "<xsl:template match=\"${1:*}\">${0}\n</xsl:template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      }
    },
    "69b95767-45cf-34d2-a80a-5c9fec37d6d2": {
      "content": "import ${1:Json.Encode} as ${2:Encode} exposing (${0:Value})",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impae": true
      }
    },
    "69bbc6c8-0545-3de1-b18e-b749ae7c752c": {
      "content": "display: list-item",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:li": true
      }
    },
    "69be2924-259b-38d4-ac16-cacfb8980e0d": {
      "content": "echo CHtml::encode(${0:text});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhec": true
      }
    },
    "69c09238-dc3a-365f-990c-5593889d7862": {
      "content": "$this->${1:method}()->shouldNotStartWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotStartWith('string')",
      "matches": {
        "snstart": true
      }
    },
    "69c395cc-2256-3516-9d7d-7aa57d9a2fde": {
      "content": "<% end %>",
      "doc": "end",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "end",
      "matches": {
        "end": true
      }
    },
    "69c654ac-d9ba-36fe-8ee6-3b3c09a367e8": {
      "content": "scale(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "size",
      "matches": {
        "scale": true
      }
    },
    "69c72371-bf25-3626-8e3a-96a0c916fbfa": {
      "content": "${1:fn}.call(${2:this}, ${3:arguments})",
      "doc": "function call",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-call",
      "matches": {
        "base function call": true
      }
    },
    "69d062ba-a0f2-3a35-8a83-21f83903b47e": {
      "content": "@slot('$1')\n\t${2:${VISUAL}}\n@endslot",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@slot directive",
      "matches": {
        "slot": true
      }
    },
    "69dcc8a4-0434-3eed-8ef4-14c275f9abb3": {
      "content": "let ${1:name} = await ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "let assignment awaited",
      "matches": {
        "la": true
      }
    },
    "69e0653a-27ed-3d88-9027-7fecdc0304a7": {
      "content": "list-style-position: inside;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      }
    },
    "69e95185-21f5-3eb6-90fb-fecdb7ed8513": {
      "content": "get ${1:#:NAME}(): ${2:#:TYPE} {\n  ${3:#:TARGET}\n}\n\nset $1(${4:value}: $2) {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "accessor": true
      }
    },
    "69efda70-c1e8-3b62-83c9-2b1b9ec33db8": {
      "content": "${1:obj}.children('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "children": true
      }
    },
    "69f83336-eb69-3d6c-9173-6de91dcc5bf6": {
      "content": "::before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::b": true
      }
    },
    "69ff183e-473a-32d8-aaa0-b4bd6358d00f": {
      "content": "try {\n  ${1:TARGET}\n} catch (${2:e}) {\n  ${3}\n} finally {\n  ${4}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_finally": true
      }
    },
    "6a00be03-2053-305c-8e63-3be937f4d954": {
      "content": "background-attachment: scroll",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      }
    },
    "6a01e9cf-a97c-369c-9f6d-fe90beb93d01": {
      "content": "@empty(${1})\n    ${2}\n@endempty",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@empty ... @endempty",
      "matches": {
        "empty": true
      }
    },
    "6a02d58c-9874-301d-87ea-d4878d2cc030": {
      "content": "${1:obj}.after('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "after": true
      }
    },
    "6a03586d-e60d-330b-b72b-42fb9e88e69b": {
      "content": "font-variant: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      }
    },
    "6a041092-a503-3dee-8fe9-3b205fce646a": {
      "content": "unauthorized(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ru": true
      }
    },
    "6a05d438-8692-38fd-8df7-fa25208a2c1e": {
      "content": "assertTrue(\"${1:Failure message}\", ${2:condition});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "at": true
      }
    },
    "6a075d01-a9df-3666-a693-bf4e8fc64080": {
      "content": "sscanf($1, \"$2\"$0);",
      "doc": "Generic sscanf() snippet",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "sscanf",
      "matches": {
        "sscanf": true
      }
    },
    "6a0f53f2-3194-3944-b3eb-308fb44ab56e": {
      "content": "<pre>\n\t{{ dump(${0:TARGET}) }}\n</pre>",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "<pre> {{ dump(...) }} </pre>",
      "matches": {
        "dump": true
      }
    },
    "6a0f94cc-ba1b-3389-a537-96a53a49b893": {
      "content": "it(${1:#:message}, function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "it(message, func)",
      "matches": {
        "it": true
      }
    },
    "6a17ebef-16fc-3599-9632-213eb1370b16": {
      "content": "Console.WriteLine(${1});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cw": true
      }
    },
    "6a199b81-5eaf-3566-898d-ad970bb8441a": {
      "content": "${2:$1} = require '${1:sys}'",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "6a1bfd65-69d2-3e83-b089-6f043104fc28": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig block",
      "matches": {
        "block": true
      }
    },
    "6a1df9bf-b0c2-33f6-987d-ea9e6c2e26eb": {
      "content": "sum(${1:source}${2:, dim=${3:1}}${4:, mask=${5:($1>0)}})",
      "doc": "Sum of Elements",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "sum",
      "matches": {
        "sum": true
      }
    },
    "6a219d47-e471-388d-a99f-cdbb824edd0a": {
      "content": "margin-right: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin-right",
      "matches": {
        "marr": true
      }
    },
    "6a2a449a-4089-3d06-bb68-2a994c28ca48": {
      "content": "place-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      }
    },
    "6a2a4bdb-6d16-37c0-b57a-e76298f85ee4": {
      "content": "group { \"${1:group}\":\n\tensure => ${0:present},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "group": true
      }
    },
    "6a2f33aa-79b1-3fc2-ba1a-40f41e9f3194": {
      "content": "console.error(${1:object});",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleerror",
      "matches": {
        "base console error": true
      }
    },
    "6a360c2e-887a-3a3f-835d-53c7aad84c81": {
      "content": "import ${1:String}\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "imp": true,
        "import": true
      }
    },
    "6a3650c8-1b03-3ca7-918b-39653e931f82": {
      "content": "padding: ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      }
    },
    "6a398700-d926-35d5-a733-b61313f621d8": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      }
    },
    "6a411220-981b-3796-83ec-63d668cf85a4": {
      "content": "z-index: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      }
    },
    "6a440679-b934-3025-824a-15cd2b6f1e28": {
      "content": "else {\n    ${1:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "6a44750b-39db-3d1f-83b4-df1170c15661": {
      "content": "FUNCTION ORD-MAX(${1:char},${2:...})$0",
      "doc": "max. ordinal position in the program character set corresponding to list of chars",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ORD-MAX",
      "matches": {
        "FUNCTION ORD-MAX": true
      }
    },
    "6a45be8e-909b-3e67-9b06-4a069e7c9b27": {
      "content": "#!/usr/bin/env node",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "6a51df6d-ac9b-3c0e-95b4-2649dad0fc25": {
      "content": "if (${1:condition}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "6a591bc8-75cd-38aa-8c6b-ad9cdb569d51": {
      "content": "if ${1:#:condition}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "if ...: ...",
      "matches": {
        "if": true
      }
    },
    "6a6ac7db-3298-391e-8af5-f3c7428656a1": {
      "content": "position: relative",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      }
    },
    "6a735891-c8e8-3e26-9eaa-f34f023c14b8": {
      "content": "<output>${0}</output>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "output": true
      }
    },
    "6a7507d0-abaf-3e5a-8d5f-b1d96c062c99": {
      "content": "clear: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "6a79732e-6a72-3c77-a9d4-e7d6dfef3763": {
      "content": "it { should render_template ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrtp": true
      }
    },
    "6a7b14f2-5ccb-37f6-90b7-937ebb5a4994": {
      "content": "${1:this}.set('${2:property}', ${3:value});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "this.set('property', value);",
      "matches": {
        "eset": true
      }
    },
    "6a7dc683-523f-3f78-a7ff-15cb1a968eb1": {
      "content": "outline-color: invert",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      }
    },
    "6a83e13d-1a58-3de0-9e55-dfd4322b7072": {
      "content": "for [${1:i} = ${2:#:start}, ${3:#:end}, ${4:1}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "for [intvar = start, end, incr]",
      "matches": {
        "fori": true
      }
    },
    "6a90dea7-b843-3b54-82cc-45096750ad37": {
      "content": "${1:name}.asInstanceOf[${2:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "6a91ef30-ddd2-37fc-97d4-d7ada8dd07ea": {
      "content": "setImmediate(() => {\n\t${0}\n});",
      "doc": "setImmediate",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setimmediate",
      "matches": {
        "base set immediate": true
      }
    },
    "6a91f58d-1d1f-36c2-9811-d6c687676313": {
      "content": "this.props.${1};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "this props",
      "matches": {
        "tp": true
      }
    },
    "6a929889-7565-37da-a734-07474ba1741c": {
      "content": "${1:public} string ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "6a97d0bd-c9cf-3d21-8c21-833094edef4f": {
      "content": "<div id=\"${1}\">\n\t${0}\n</div>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "div#": true
      }
    },
    "6a9c7962-d8a3-31a4-ae8c-2843fb8813cb": {
      "content": "${TM_SELECTED_TEXT} {#${1:label}}$0",
      "doc": "Insert bookdown section label",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown section label",
      "matches": {
        "section label": true
      }
    },
    "6aa1ce59-4137-3c76-9ea5-32c312dea245": {
      "content": "FUNCTION REM(${1:number},${2:divisor})$0",
      "doc": "remainder of number divided by divisor",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-REM",
      "matches": {
        "FUNCTION REM": true
      }
    },
    "6aa28782-ff75-3b55-88b4-83c29b3bc5dc": {
      "content": "${1:method_name}: function (${2:attribute}) {\n\t${0:${VISUAL}}\n},",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":f": true
      }
    },
    "6aabce04-7a35-303b-bb16-cab2a1b7ec9c": {
      "content": "{% if ${1:condition} %}\n\t$0\n{% endif %}",
      "doc": "if (block)",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "ifb",
      "matches": {
        "ifb": true
      }
    },
    "6ab76315-2599-31c6-904a-d2bba03478ff": {
      "content": "expect(${1:list}).toContainEqual($0);",
      "doc": "expects the list contains the item (equals)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tocontainequal",
      "matches": {
        "jest expect tocontainequal": true,
        "tce": true
      }
    },
    "6abcde16-c9c0-337b-ba1a-4b08ab1982c9": {
      "content": "{%- case ${variable} -%}\n\t{%- when ${condition} -%}\n\t\t${code1:}\n\t{%- else -%}\n\t\t${code2:}\n{%- endcase -%}",
      "doc": "Control flow tag: case",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag case",
      "matches": {
        "case": true
      }
    },
    "6ac1b121-f76b-3a0b-bc5d-a21742f6efd1": {
      "content": "{%- paginate ${1:collection.products} by ${2:12} -%}\n\t{%- for ${3:product} in $1 -%}\n\t\t${0}\n\t{%- endfor -%}\n{%- endpaginate -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paginate-": true
      }
    },
    "6ad0cec2-2fb7-321b-a1ab-e58690f77f6f": {
      "content": "<${1:elementName} />",
      "doc": "an element self closed",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "jsx element self closed",
      "matches": {
        "jc": true
      }
    },
    "6ad3a258-7502-34f8-a455-888b2acda0fe": {
      "content": "${1:key}->${2:val}${0:, keyval}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyval": true
      }
    },
    "6ad8100f-8e91-3470-96d8-7d71c29a7662": {
      "content": "min($2, $3)",
      "doc": "float min(float x, float y)\nvec2 min(vec2 x, vec2 y)\nvec3 min(vec3 x, vec3 y)\nvec4 min(vec4 x, vec4 y)\n\nThe min function returns the smaller of the two arguments. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\nfloat min(float x, float y)\nvec2 min(vec2 x, float y)\nvec3 min(vec3 x, float y)\nvec4 min(vec4 x, float y)\n\nThere is also a variation of the min function where the second parameter is always a floating scalar.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "min",
      "matches": {
        "min": true
      }
    },
    "6adc5f8e-c826-38d9-b0b5-4caf34322f10": {
      "content": "${1:Title}\n=====${2:=}\n${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=": true
      }
    },
    "6adcd53e-f5fc-3959-a07d-e50d7ac6d448": {
      "content": "<% for( let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++ ) { %>\n$3\n<% } %>",
      "doc": "EJS For Loop",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS For Loop",
      "matches": {
        "ejsfor": true
      }
    },
    "6ade9872-b522-3f2c-9184-cb07116a161d": {
      "content": "let\n\t${1} = ${2}\nin\n\t${3}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "6ae0ad30-f510-3399-873b-e6224fb532c6": {
      "content": "randomSeed(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "randomSseed": true
      }
    },
    "6ae105f0-3e7d-3373-8024-418086d583b5": {
      "content": "import ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ip": true
      }
    },
    "6af4ef12-dc03-35ec-9057-4f9e46151a2d": {
      "content": "background-break: each-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:eb": true
      }
    },
    "6af55569-966d-3e90-8531-91537704ddfa": {
      "content": "expect(${1:target}).not.toBeVisible()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be visible (coffee)",
      "matches": {
        "notv": true
      }
    },
    "6af617b4-b032-34ed-8d83-50894dd68862": {
      "content": "ACCEPT ${1:variable} ${2|FROM DATE,FROM DAY,FROM DAY-OF-WEEK,TIME|}\n$0",
      "doc": "ACCEPT FROM DATE/DAY/WEEK/TIME",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ACCEPT FROM",
      "matches": {
        "ACCEPT": true
      }
    },
    "6af96a8d-1ecb-32e1-809a-f7f9be01b3d1": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter})\n{\n\t${7}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun2": true
      }
    },
    "6aff66c0-10c8-3435-92db-7e7b4a419622": {
      "content": "=begin rdoc\n\t${0}\n=end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=b": true
      }
    },
    "6b01e902-72d6-33e5-8362-fec802e5d860": {
      "content": "/// <reference path=\"$1\" />\n$0",
      "doc": "Triple-slash reference",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Triple-slash reference",
      "matches": {
        "ref": true
      }
    },
    "6b06d877-b6b1-3562-8e45-dddfe3067082": {
      "content": "type ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type",
      "matches": {
        "ty": true
      }
    },
    "6b0a1bb7-f1b9-3258-b46a-7ded76d87c14": {
      "content": "proc ${1:#:name}(${2}):${3:#:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procgt": true
      }
    },
    "6b16de1b-e551-3b26-a7e1-39fdbfcb2442": {
      "content": "\\\\lim_{{$1}} {{$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "limit",
      "matches": {
        "lim": true
      }
    },
    "6b17d311-345a-3f28-94ca-1bb7d5bdbca4": {
      "content": "println!(${1:\"\\{\\}\"}, ${0:TARGET});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println!",
      "matches": {
        "pln": true
      }
    },
    "6b1cd434-4171-3f8e-9a7b-375ec04b4e45": {
      "content": "<em>${1:TARGET}</em>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "em": true
      }
    },
    "6b28ca0a-e6d2-350b-ae81-e44a0c5a14b0": {
      "content": "elements.each('${1://Xpath}') do |${2:node}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xpa": true
      }
    },
    "6b2c9a31-120e-3ab9-872a-1eb8d674af9c": {
      "content": "{% endcache %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endcache",
      "matches": {
        "endcache": true
      }
    },
    "6b2ef698-d32c-3170-88f2-acf30d2641e3": {
      "content": "case '${1:value}':\n\t${0:${VISUAL}}\n\tbreak;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "case 'value': ... break",
      "matches": {
        "case": true
      }
    },
    "6b37eb0a-ad0e-31c7-a6cd-e49533411b59": {
      "content": "{% debug %}",
      "doc": "debug tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "debug",
      "matches": {
        "debug": true
      }
    },
    "6b3a3275-98d6-3d71-9f72-95d3bdb4c5b8": {
      "content": "font-family: ${1:Arial, \"MS Trebuchet\"}, ${2:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-family:   family (font)",
      "matches": {
        "font": true
      }
    },
    "6b3c9e62-f40b-3cd1-81c7-c2a42d11db06": {
      "content": "find do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      }
    },
    "6b3e6957-b6b9-3ee1-b056-d88602180790": {
      "content": "form_input(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_input": true
      }
    },
    "6b447b71-26aa-3b9b-8e65-8054ca43951a": {
      "content": "ENVIRONMENT DIVISION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ENVIRONMENT DIVISION",
      "matches": {
        "ED": true,
        "ENVIRONMENT DIVISION": true
      }
    },
    "6b466b32-d810-37e9-941e-edb5920f204b": {
      "content": "background: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      }
    },
    "6b47a2b9-5dd5-38d5-bd5c-bde64ac92e7d": {
      "content": "<style lang=\"stylus\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with stylus",
      "matches": {
        "style_with_stylus": true
      }
    },
    "6b4951e2-879b-3a3f-a3d8-6f039cfec335": {
      "content": "text-decoration none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      }
    },
    "6b49806e-f18d-366b-a39f-a7223fcad3a5": {
      "content": "text-align-last: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      }
    },
    "6b4fe25f-0615-3c01-a9d9-49c474dc6f37": {
      "content": "outline: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      }
    },
    "6b51329e-4f82-375f-9dfd-64117e05776b": {
      "content": "case ${1} do\n  ${2} -> ${3}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "case .. end",
      "matches": {
        "case": true
      }
    },
    "6b52edcf-7634-30c5-8374-df2ebff61207": {
      "content": "lightSpecular(${1:v1}, ${2:v2}, ${0:v3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lightSpecular": true
      }
    },
    "6b606469-23ef-35b0-b2ff-d6c81c134416": {
      "content": "static getDerivedStateFromProps(nextProps, prevState) {\n\t$0\n}",
      "doc": "Invoked after a component is instantiated as well as when it receives new props. It should return an object to update state, or null to indicate that the new props do not require any state updates.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentGetDerivedStateFromProps",
      "matches": {
        "cgd": true
      }
    },
    "6b6abb18-7826-39ed-ac5b-8cd2e7b2ac04": {
      "content": "when {\n\texpression '${1:expression}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenexpression": true
      }
    },
    "6b6e5813-de26-3379-a65f-c1690fe0120c": {
      "content": "console.table(${1:object});",
      "doc": "Displays tabular data as a table.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletable",
      "matches": {
        "base console table": true
      }
    },
    "6b705c85-c421-3c60-91d9-6d71d06c2ee6": {
      "content": "{{ ${1} }}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      }
    },
    "6b742b37-2106-39d3-86b8-229e7c2a8921": {
      "content": "${1:FIELDNAME} = models.SmallIntegerField($2)",
      "doc": "SmallIntegerField (msmallint).\n\nLike an IntegerField, but only allows values under a certain (database-dependent) point.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "msmallint",
      "matches": {
        "msmallint": true
      }
    },
    "6b776985-5bff-34ea-b3fc-a515dbc31198": {
      "content": "set datafile separator '${1:#:separator}'",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set datafile separator 'separator'",
      "matches": {
        "datasep": true
      }
    },
    "6b77a113-4291-3838-961a-0cdd0826914b": {
      "content": "maxHeight: ${1},",
      "doc": "maxHeight",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "maxHeight",
      "matches": {
        "max": true
      }
    },
    "6b7c7a4e-632e-3273-9f70-1076b4bfaba5": {
      "content": "\\begin{scope}[${1}]\n\t${2:TARGET}\n\\end{scope}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{scope}": true,
        "scope": true
      }
    },
    "6b7f97a8-33c8-3d40-915c-e75ddcf76c4b": {
      "content": "t.rename(:${1:old_column_name}, :${2:new_column_name})\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Table column(s) rename",
      "matches": {
        "tre": true
      }
    },
    "6b84f01c-5856-36dd-9827-aa9f87d7bd22": {
      "content": "<canvas>\n\t${0}\n</canvas>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "canvas": true
      }
    },
    "6b88bdeb-5654-3ded-bfd5-52fa4851b62e": {
      "content": "${1:obj}.end()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      }
    },
    "6b8a3346-880e-3ab6-8fc4-d7cd9a177686": {
      "content": "<dd>${0}</dd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      }
    },
    "6b975b6d-53a1-3d7a-a826-176fe14acd7a": {
      "content": "if ${1:a} {${2:b}} else {${3:c}}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "if inline",
      "matches": {
        "ifi": true
      }
    },
    "6b9928b8-1b72-3555-98af-9638a55c15d0": {
      "content": "func Benchmark${1:Method}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "benchmark": true
      }
    },
    "6ba5335e-f731-347b-b1ce-78bbd2e32e48": {
      "content": "public static void main (String[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "6baac31e-8c14-386e-b70e-07efff0e8e50": {
      "content": "print 'Hello world!'",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "6bac08b9-c39d-3e7a-8770-68b7603408fa": {
      "content": "if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if () {}",
      "matches": {
        "if": true
      }
    },
    "6bac8021-ae9a-3e9f-bae6-fac18da0441e": {
      "content": "function random(${1:seed})$0",
      "doc": "pseudo-random number 0> <1 from a rectangular distribution with optional seed",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-random",
      "matches": {
        "function random": true
      }
    },
    "6bb286c1-d59e-35ad-b417-9017464f0f59": {
      "content": "render () {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "When called, it should examine this.props and this.state and return a single child element.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentRender",
      "matches": {
        "ren": true
      }
    },
    "6bbf5671-7955-3def-9517-d89af98b095f": {
      "content": "try do\n\t${1:${VISUAL}}\nrescue\n\t${2} -> ${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "try .. rescue .. end",
      "matches": {
        "try": true
      }
    },
    "6bc16587-26d5-3c47-86d2-f9a3b7d8176c": {
      "content": "private\n\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "priv": true
      }
    },
    "6bc4d337-558c-30fc-9f2a-1260383c953f": {
      "content": "store ${1:StoreName}.Store {\n\t$0\n}",
      "doc": "Stores are global containers of application specific data.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Store",
      "matches": {
        "store": true
      }
    },
    "6bc5d655-4360-3863-83cd-ef0d25b49eac": {
      "content": "// multiply the current matrix by a translation matrix\ngl.glTranslatef(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl translate f",
      "matches": {
        "gl": true
      }
    },
    "6bd76b45-8ae8-3919-ac56-c4797deb0eea": {
      "content": "expect($1).toBeInstanceOf($0);",
      "doc": "expects the argument is less than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobeinstanceof",
      "matches": {
        "jest expect tobeinstanceof": true,
        "tbi": true
      }
    },
    "6bd7c8c1-2510-3f00-b28d-85c772f220c7": {
      "content": "def get_absolute_url(self):\n\tfrom django.core.urlresolvers import reverse\n\treturn reverse('$1', kwargs={'pk': self.pk})",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "get_absolute_url",
      "matches": {
        "get_absolute_url": true
      }
    },
    "6bd99177-4fc3-306b-8f5f-5d9884c85257": {
      "content": "System.Windows.Forms.MessageBox.Show(\"${1:Text}\");$0",
      "doc": "MessageBox.Show",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "MessageBox.Show",
      "matches": {
        "mbox": true
      }
    },
    "6bde99b1-672c-3ebb-befb-4c5c9e9683b5": {
      "content": "before :${1:each} do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert before block",
      "matches": {
        "bef": true
      }
    },
    "6bdf8204-22ba-3ad4-8fd9-22523e8e104c": {
      "content": "<dfn>$1</dfn>$2",
      "doc": "HTML - Defines a definition term",
      "filetype": "html",
      "grammar": "lsp",
      "label": "dfn",
      "matches": {
        "dfn": true
      }
    },
    "6be4c0c0-bc05-3150-ae65-a2d03329357c": {
      "content": "font-stretch condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:c": true
      }
    },
    "6be746f7-0565-3b61-afa6-3153bca1714b": {
      "content": "path(\n\t'${1:ROUTE}/',\n\t${2:VIEW}${3:.as_view()},\n\tname='$4'\n),",
      "doc": "path(route, view, kwargs=None, name=None)",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "path_stack",
      "matches": {
        "path_stack": true
      }
    },
    "6bea0f77-fb60-35b3-a9d9-6bac1e060dc6": {
      "content": "try {\n\t${1:TARGET}\n} catch {\n\tcase e${2:: Exception} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "try {} catch { case ... }",
      "matches": {
        "try": true
      }
    },
    "6beb9b0e-8b67-35d9-bfa9-9eb1819b020d": {
      "content": "color ${1:c}${2: = color(}${3:value1, }${4:value2, }${0:value3)};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "color": true
      }
    },
    "6bef533d-6d7d-3df8-bd35-9b0722d2b961": {
      "content": "${1:FIELDNAME} = models.BigAutoField($2)",
      "doc": "BigAutoField (mbigauto).\n\n[New in Django 1.10.]\n\nA 64-bit integer, much like an AutoField.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mbigauto",
      "matches": {
        "mbigauto": true
      }
    },
    "6c04de0d-6a10-318f-84ff-42a3ef272e9b": {
      "content": "before_update :${0:method}",
      "doc": "before_update",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before update",
      "matches": {
        "bu": true
      }
    },
    "6c0e9361-e480-3909-9cf5-15875d947ae8": {
      "content": "flex: ${1:1} ${2:1} ${3:auto};",
      "doc": "flex: grow shrink basis",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex",
      "matches": {
        "flex": true
      }
    },
    "6c0f08d2-822d-3608-b562-b651b5312a09": {
      "content": "DEFINE OUTPUT PARAMETER ${1:ParamName} AS ${0:ParamType}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "output": true
      }
    },
    "6c15514f-3250-3660-88c9-f64dd781ac62": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare block",
      "matches": {
        "declare": true
      }
    },
    "6c16dd47-9f16-3398-b2f4-55363b7ebdbf": {
      "content": "#include <${1:stdio}.h>",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "6c16e252-e10c-368a-a4df-d2fe5fe7cf1d": {
      "content": "// multiply the current matrix by a general scaling matrix\ngl.glScalef(${1:x}, ${2:y}, ${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl scale f",
      "matches": {
        "gl": true
      }
    },
    "6c1daaaa-e846-34cd-8577-9925b8ef9ca5": {
      "content": "$.ajaxSuccess (${1:e}, xhr, settings) ->\n\t${2:// handler for when any AJAX call is successfully completed}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsuccess": true
      }
    },
    "6c23ad47-f2c2-38af-b03b-f820c95e870c": {
      "content": "type ${1:Type} =\n\t${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "6c263094-4cd9-32ab-812a-c6eb2ae668cf": {
      "content": "crossTable <- xtabs(~${1:varNames}, data= ${2:dataName}, exclude = c(${3:exclude}), subset = ${4:subset})\nftable(crossTable)  # print crosstabs\nsummary(crossTable) # chi-square tests",
      "doc": "Crosstabulations for variables in a data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Crosstabs",
      "matches": {
        "xtabs": true
      }
    },
    "6c2785e9-405d-357d-a5e3-2436ab1654f7": {
      "content": "Yii::t('${1:category}', '${2:message}',array(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yt": true
      }
    },
    "6c2b6d5b-a0f6-3a5a-a339-75b4a543c734": {
      "content": "page-break-inside: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      }
    },
    "6c33be36-7a37-38c2-a49b-92fef009cc30": {
      "content": "for ${1} of ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "for_each": true
      }
    },
    "6c33c3ba-6d86-3b4e-beb9-5746f04a45f5": {
      "content": "log.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log println",
      "matches": {
        "lp": true
      }
    },
    "6c3c13de-4d68-30d6-bcd6-d2e0dc7459bb": {
      "content": "{% else %}\n\t${0:TARGET}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% else %} ...",
      "matches": {
        "else": true
      }
    },
    "6c3d8a52-0f76-33a9-84db-ed83d54f6970": {
      "content": "align-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      }
    },
    "6c3dec6f-1f93-3cfa-b3de-af4ec712a0fa": {
      "content": ":nth-last-child(${0})",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nlc": true
      }
    },
    "6c3ec87c-aa91-34e2-88be-bc406f900642": {
      "content": "place-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      }
    },
    "6c3f403a-1a63-34fc-9b0c-51e062b6ae14": {
      "content": "switch ${1:expression} {\ncase ${2:condition}:\n\t$0\n}",
      "doc": "Snippet for switch statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "switch statement",
      "matches": {
        "switch": true
      }
    },
    "6c43ec55-499d-31c8-a65d-3bf0211fe269": {
      "content": "${1} : in std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isv": true
      }
    },
    "6c4a9321-424c-3494-a4a9-82b0e6d463f2": {
      "content": "componentWillUnmount() {${1:first} }",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      }
    },
    "6c53375a-7aee-36f9-9bf9-e368c5209b55": {
      "content": "\\\\frac{${1:num}}{${2:denom}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\frac{}{}",
      "matches": {
        "frac": true
      }
    },
    "6c56d467-9db9-3edc-933b-dafb9eb73629": {
      "content": "class $1Admin(admin.ModelAdmin):\n\t'''\n\t\tAdmin View for $1\n\t'''\n\tlist_display = ('$2',)\n\tlist_filter = ('$3',)\n\tinlines = [\n\t\t$4Inline,\n\t]\n\traw_id_fields = ('$5',)\n\treadonly_fields = ('$6',)\n\tsearch_fields = ['$7']\nadmin.site.register($1, $1Admin)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model Admin View",
      "matches": {
        "adminview": true
      }
    },
    "6c60bbc0-4909-3c54-8490-c8d843fabbbd": {
      "content": "${1:_} => ${2:expression}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Case clause of pattern match",
      "matches": {
        "case": true
      }
    },
    "6c66a8d9-2c43-3ce1-98ce-f0bbde4d3227": {
      "content": "${1:FIELDNAME} = models.FileField(upload_to=${2:path/for/upload}${0:, max_length=100})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      }
    },
    "6c66ac1e-ef10-398d-90c2-c117023e8923": {
      "content": "import React from 'react'\n\nexport const ${1:${TM_FILENAME_BASE}} = () => {\n  return (\n    <div>${1:first}</div>\n  )\n}",
      "doc": "Creates a React Arrow Function Component with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactArrowFunctionComponent",
      "matches": {
        "rafc": true
      }
    },
    "6c67323c-a5fe-36fd-b433-32429cdd0ba1": {
      "content": "white-space pre",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      }
    },
    "6c7330b3-2ca5-343f-9ea5-eb2c62b36aaf": {
      "content": "cursor: text;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      }
    },
    "6c73be28-eb82-3e6d-b817-494f899ca69d": {
      "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\n\t\t}\n\t}\n\n\tstatic getDerivedStateFromProps() {\n\t\treturn null\n\t}\n\n\tcomponentDidMount() {\n\t\t\n\t}\n\n\t// shouldComponentUpdate(nextProps, nextState) {}\n\n\tgetSnapshotBeforeUpdate(prevProps, prevState) {\n\t\treturn null\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\t\n\t}\n\n\tcomponentWillUnmount() {\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with PropTypes and all lifecycle methods and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponentWithMethods",
      "matches": {
        "rcfc": true
      }
    },
    "6c74b6d8-4411-35c0-9246-9dea9aa1757d": {
      "content": "bottom: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      }
    },
    "6c86f566-05e7-3e9c-8d2e-04aea56f562d": {
      "content": "case (${1})\n    ${2:'b0}: begin\n        ${3}\n    end\n    default : begin\n        ${4}\n    end\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "case () ... endcase",
      "matches": {
        "case": true
      }
    },
    "6c897a06-ec12-3f95-9fc8-464095f84b19": {
      "content": "<#-- ${0:comment${VISUAL}} -->",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#-- comment -->",
      "matches": {
        "com": true
      }
    },
    "6c8cc2fd-bf70-3035-bb65-cab7c79387d8": {
      "content": "FUNCTION REVERSE(${1:string})$0",
      "doc": "reverse representation with same length of string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-REVERSE",
      "matches": {
        "FUNCTION REVERSE": true
      }
    },
    "6c8fafd8-1d63-3c78-848d-40ed3b451d96": {
      "content": "each_with_index do |${1:e}, ${2:i}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawid": true
      }
    },
    "6c9025b3-dc65-369a-b2e7-e130accc00d5": {
      "content": "overflow-style: move;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      }
    },
    "6c96605e-ce62-302c-967e-0aed7f8b5c81": {
      "content": "<menu type=\"toolbar\">\n\t${0}\n</menu>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menu:t": true
      }
    },
    "6c96835c-8cdb-35b9-b646-bba4105aa542": {
      "content": "#!/usr/bin/env python3\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python3",
      "matches": {
        "#!3": true
      }
    },
    "6c9818d8-9151-38ce-93e7-be696332f6d3": {
      "content": "each_line {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_line": true
      }
    },
    "6c9c7c7c-c5bb-3e73-9a59-a5e160c4974a": {
      "content": "has_many :${1:objects}, through: :${2:join_association}${3:, source: :${4:$2_table_foreign_key_to_$1_table}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_many (through)",
      "matches": {
        "hmt": true
      }
    },
    "6c9db9b6-a24f-3ba1-b9f8-f487c3ade9e2": {
      "content": "padding ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      }
    },
    "6cc6ef6c-7e79-3af8-9cce-4292bcc9c4ce": {
      "content": "word-break: keep-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      }
    },
    "6ccf746e-3f0f-3705-8f8b-a60f27f9917a": {
      "content": "//#region ${1}\n${2}\n//#endregion",
      "doc": "Create region",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "region",
      "matches": {
        "region": true
      }
    },
    "6ce21f45-ea2f-3ce5-8c2c-c76b9b71dce1": {
      "content": "<ng-content select=\"${0:selector}\"></ng-content>",
      "doc": "Angular ng-content",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-content",
      "matches": {
        "a-ng-content": true
      }
    },
    "6cfa15c3-d11a-3977-9e94-befa8a9fc4f5": {
      "content": "expect(${1:target}).toContain(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to contain (coffee)",
      "matches": {
        "ec": true
      }
    },
    "6cfc0cfa-d6a9-369e-91f6-49951dee102a": {
      "content": "[...Array(${1:length}).keys()]",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "generate array of integers starting with 0",
      "matches": {
        "gari0": true
      }
    },
    "6d0398cc-e224-3152-a420-990fca285711": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "r": true
      }
    },
    "6d05da43-19db-3d4b-b2d5-31aef9eee56f": {
      "content": "let ${1:array}Index = ${1:array}.length\nwhile (${1:array}Index--) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "while iteration decrementing",
      "matches": {
        "wid": true
      }
    },
    "6d0a7836-40a3-3712-a886-9acf8e953491": {
      "content": "public ${1:int} ${2:MyProperty} { get; private set; }$0",
      "doc": "An automatically implemented property with a 'get' accessor and a private 'set' accessor. C# 3.0 or higher",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "propg",
      "matches": {
        "propg": true
      }
    },
    "6d0ab80f-bf1a-374e-81d1-06f52c29b97a": {
      "content": "white-space: nowrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      }
    },
    "6d0e708e-4195-3c5a-891a-b8d4beebae45": {
      "content": "{% load i18n %}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "li18n",
      "matches": {
        "li18n": true
      }
    },
    "6d10954d-86e6-3a97-b4a7-d547d971dcc9": {
      "content": "| prepend: '${string}' }}",
      "doc": "String filter: prepend",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter prepend",
      "matches": {
        "prepend": true
      }
    },
    "6d10adac-c6b1-3e54-a475-cecf44f10446": {
      "content": "def ${1:name}, do: ${2}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      }
    },
    "6d10f1c7-4019-3cf4-b0e0-6f99ca44565e": {
      "content": "#+BEGIN_EXAMPLE\n$0\n#+END_EXAMPLE",
      "doc": "#+BEGIN_EXAMPLE block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "example block",
      "matches": {
        "<e": true
      }
    },
    "6d167f8b-4c53-3d60-90fd-487d75937e05": {
      "content": "${1:#:set the_application to }choose application with prompt \"${2:#:Choose an application:}\"${3:#:with multiple selections allowed}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Applications": true
      }
    },
    "6d17b215-1f92-3237-966c-0ef048ae7468": {
      "content": "{% break %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      }
    },
    "6d1ab9a1-1881-3f51-8d10-29b0f48ef938": {
      "content": "animation-iteration-count: ${0:infinite};",
      "doc": "initial value: 1",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-iteration-count",
      "matches": {
        "aniic": true
      }
    },
    "6d1e3dd0-154b-3174-81b0-9ebddf62e5c3": {
      "content": "import ${1:defaultMember}, { ${2:MEMBERS} } from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import defaultMember, { member, ... } from \"module-name\";",
      "matches": {
        "import-default-member": true
      }
    },
    "6d28b506-b022-3979-9b3c-455bacb72d90": {
      "content": "${0:sub_parser} = parser.add_subparsers().add_parser(\"${1:name}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addsp": true
      }
    },
    "6d2c5f82-bd3b-3389-af75-e81a35fc9118": {
      "content": "<td>${1}</td>\ntd+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td+": true
      }
    },
    "6d2d72ba-0af8-3da8-99e0-c0a3baf68423": {
      "content": "# coding: utf-8\nfrom __future__ import absolute_import, division, print_function, unicode_literals",
      "doc": "Import future statement definitions for python3.x scripts using utf-8 as encoding.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "from future import ... v1",
      "matches": {
        "fenco": true
      }
    },
    "6d325161-875d-3b35-9915-ea0b838866a3": {
      "content": "subtype ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtype": true
      }
    },
    "6d39a77a-40fc-3566-bf80-cf700ab1531c": {
      "content": "class Migration${1:class_name} < ApplicationRecord\n\tself.table_name = :${2:model_name}s\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "class Migration... < ApplicationModel .. self.table_name .. end",
      "matches": {
        "cmm": true
      }
    },
    "6d3bb282-c65f-3ba7-aeb2-2984310750e2": {
      "content": "(* ${0:TARGET} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "comment",
      "matches": {
        "cc": true
      }
    },
    "6d3ce1eb-be48-3db8-b6d4-53fc9b0965c0": {
      "content": "std::cin >> ${1};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cin": true
      }
    },
    "6d4514da-559f-3766-88a4-6308769bbbdd": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React Arrow Function Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-arrow-function-component-proptypes",
      "matches": {
        "rafcp": true,
        "react component arrow function proptypes": true
      }
    },
    "6d49fb0a-cdba-3c4d-876d-82c857800d84": {
      "content": "overflow-y: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      }
    },
    "6d4ccb90-4ff3-3bd6-a04b-4d22d98da707": {
      "content": "final ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      }
    },
    "6d5046b0-602c-3ffe-a502-8bfbc2d43f36": {
      "content": "url = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "6d50d723-4bb1-3e16-ab97-918280203d50": {
      "content": "import ${1:Img} from 'gatsby-image';",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-import",
      "matches": {
        "gatsby-image import": true
      }
    },
    "6d5cf3ca-cfcd-38cb-ab31-f7e50ec2bb75": {
      "content": "{% load $1 %}",
      "doc": "load tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "load",
      "matches": {
        "load": true
      }
    },
    "6d5d404a-16fb-355b-abb6-521e8c7e4b7e": {
      "content": "#!/usr/bin/env tclsh",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "6d5fd4f1-ae0f-3723-aa28-9f91b4efbe7b": {
      "content": "\\begin{bfseries}\n\t${1:TARGET}\n\\end{bfseries}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{bfseries} \\bfseries": true,
        "bfseries": true
      }
    },
    "6d627753-cf64-3661-90f9-8eb5bd890c82": {
      "content": "sub {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asub": true
      }
    },
    "6d69dc3c-4354-37ba-b18b-ac7ce419e1fa": {
      "content": "\\\\newunicodechar{${1}}{${2:\\\\ensuremath}${3:tex-substitute}}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\newunicodechar",
      "matches": {
        "nuc": true
      }
    },
    "6d6dc287-64cc-362c-aa65-079a1de96d53": {
      "content": ":first-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      }
    },
    "6d6df56f-f83a-3e5f-936c-ba3404905d41": {
      "content": "vertical-align: middle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      }
    },
    "6d7184e4-5eea-3016-9347-4fcc26c0d569": {
      "content": "justify-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      }
    },
    "6d795477-b4ee-3201-a214-c74f5c6993af": {
      "content": "$_GET['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "get",
      "matches": {
        "get": true
      }
    },
    "6d7b4be0-5f3b-338e-870e-1267e5a2cf2d": {
      "content": "--> $1",
      "doc": "Object A uses -> () <That is our use case notation to the left>",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Use Arrow (left)",
      "matches": {
        ">": true
      }
    },
    "6d7be565-eb12-3dd2-8b7e-b07f8584acaa": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Y index (2D)",
      "matches": {
        "ixy": true
      }
    },
    "6d7f1d1a-7b88-3624-8959-41ff50fba00d": {
      "content": "== ${1} ==\n\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "==": true
      }
    },
    "6d85a0f4-de02-3941-96ed-4d56cfd1d7bb": {
      "content": "@safe const pure nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@safe const pure nothrow (scpn)",
      "matches": {
        "scpn": true
      }
    },
    "6d8877e8-e215-3bd9-a7c1-c6207b9a6ba4": {
      "content": "[${1}](${2})${3}{ ${4:TARGET} }${0:;}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "[](){}",
      "matches": {
        "lambda": true
      }
    },
    "6d88f72c-1a6c-3fb3-aa86-a6d811a99a6d": {
      "content": "<time datetime=\"${1}\" pubdate=\"${2:$1}\">${0:$1}</time>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      }
    },
    "6d94822d-b13b-3403-8033-533251b31f6b": {
      "content": "function formatted-time(${1:time-format},${2:standard-numeric-time},${3:offset_or_system_offset})$0",
      "doc": "function formatted-time",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "Function-formatted-time",
      "matches": {
        "function formatted-time": true
      }
    },
    "6d9769e8-635f-34f8-8775-2b393b1df294": {
      "content": "@val external ${1:setTimeout}: ${2:(unit => unit, int) => float} = \"${3:setTimeout}\"",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Global External Object",
      "matches": {
        "@bs": true,
        "external": true
      }
    },
    "6d988b60-90e3-3647-8f26-04aa9af1435d": {
      "content": "def ${1:VIEWNAME}(request):",
      "doc": "View",
      "filetype": "views",
      "grammar": "lsp",
      "label": "view",
      "matches": {
        "view": true
      }
    },
    "6d9de72f-6ef5-393a-8af8-c02f67a11d5a": {
      "content": "require('${1:package}');",
      "doc": "Require a package",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "rqr": true
      }
    },
    "6d9e03b6-45ac-3045-a84d-65b0ed3ff3ce": {
      "content": "{% header \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig header",
      "matches": {
        "header": true
      }
    },
    "6da662f3-89a0-3933-ac19-6fb62844e836": {
      "content": "list-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      }
    },
    "6da74ea9-4dfd-38b5-9968-447cc10bc78d": {
      "content": "border-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      }
    },
    "6db35cfe-38de-3db5-ae77-e4a8f08685bd": {
      "content": "v-show=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-show",
      "matches": {
        "vshow": true,
        "vue v-show": true
      }
    },
    "6dbbcd0c-af5e-3924-ab52-43ff153d1805": {
      "content": "overflow: '${1}',",
      "doc": "overflow",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "overflow",
      "matches": {
        "over": true
      }
    },
    "6dbe336a-c8b3-3f75-8fc7-72ffc0013ddf": {
      "content": "for (int ${1:i} = ${2}; $1 < ${3}; ${4:do what}) begin\n    ${5:TARGET}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "6dbfc108-b1c4-311d-8c6e-f9e71ace3518": {
      "content": "class:${1:name}}",
      "doc": "class shorthand",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class-short",
      "matches": {
        "s-class-short": true
      }
    },
    "6dc8426e-7a1d-35e0-be02-44957cccf029": {
      "content": "System.out.println(Arrays.toString(${0}));",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printlna": true
      }
    },
    "6dc9cc31-a486-3d57-ad87-4e858db9ceaf": {
      "content": "case ${1} is\n\twhen ${2} => ${3},${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case expression",
      "matches": {
        "case_expression": true
      }
    },
    "6dcec290-1e5d-326d-9389-b3300a87eb8b": {
      "content": "vertical-align ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      }
    },
    "6dd3e3df-861b-302f-b727-1fafefdc700f": {
      "content": "<figure>\n\t$1\n</figure>",
      "doc": "HTML - Defines a group of media content, and their caption",
      "filetype": "html",
      "grammar": "lsp",
      "label": "figure",
      "matches": {
        "figure": true
      }
    },
    "6de330fb-0c9c-3f58-980d-4e2be30fa336": {
      "content": "string.max()",
      "doc": "string.max(limit: number | Ref, message?: string | function): Schema\n\nSet a maximum length limit for the string value. The ${max} interpolation can be used in the message argument",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-max",
      "matches": {
        "yup string max": true
      }
    },
    "6de6e769-56e4-3232-96dc-4f3ebfcf3e23": {
      "content": "<param name=\"$1\" value=\"$2\">$3",
      "doc": "HTML - Defines a parameter for an object",
      "filetype": "html",
      "grammar": "lsp",
      "label": "param",
      "matches": {
        "param": true
      }
    },
    "6de84814-2b6a-34c5-9bc4-c8995379a442": {
      "content": "font-variant: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      }
    },
    "6de94c77-4d92-394f-9b56-c4bd23206bd0": {
      "content": "validates_uniqueness_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of",
      "matches": {
        "vu": true
      }
    },
    "6deeb4f5-dd72-3b9d-9c4b-038b1d678ed0": {
      "content": "export default (${1:first}) => {${2:second}}",
      "doc": "Export default function",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportDefaultFunction",
      "matches": {
        "edf": true
      }
    },
    "6df824a4-b7e4-35f3-a29c-3a048a2f22d2": {
      "content": "expect($1).toBeCloseTo(${2:number}, ${3:delta});$0",
      "doc": "expects the first argument to be close to the second one base on the delta",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobecloseto",
      "matches": {
        "jest expect tobecloseto": true,
        "tbct": true
      }
    },
    "6dfcc0f4-36ce-3bf5-8d57-cdcce0deaef4": {
      "content": "enum struct ${1:#:name} { ${2:#:TARGET} };",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "enum struct {};",
      "matches": {
        "enum_scoped": true
      }
    },
    "6e0fb569-377d-3378-8c69-4d907cb43d07": {
      "content": "marginBottom: ${1},",
      "doc": "marginBottom",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginBottom",
      "matches": {
        "mar": true
      }
    },
    "6e12a973-8a9b-3750-8849-57d540b2ca2b": {
      "content": "{% ${1:tag_name} %}\n${0}\n{% end$1 %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      }
    },
    "6e13c82f-418b-3d7d-beb8-71822f6a73ff": {
      "content": "\\fill[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\fill": true,
        "fill": true
      }
    },
    "6e181a91-f10a-3281-9f3e-8d47646fe169": {
      "content": "normal(${1:nx}, ${2:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "normal": true
      }
    },
    "6e1f645f-096e-3fb0-83a1-24631fe2a4c9": {
      "content": "<th>${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "6e26b08d-caac-3884-96d9-5d2505dbf893": {
      "content": "@section('${1:section name}')\n    ${2}\n@endsection",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section ... @endsection",
      "matches": {
        "section": true
      }
    },
    "6e2b46e7-8e35-3dab-8998-bae4694823c7": {
      "content": "# -*- coding: utf-8 -*-\nfrom __future__ import absolute_import, division, print_function, unicode_literals",
      "doc": "Import future statement definitions for python2.x scripts using utf-8 as encoding.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "from future import ...",
      "matches": {
        "fenc": true
      }
    },
    "6e374e01-5ae9-355d-8cb3-582f8bd86214": {
      "content": "@moduletag :${1:module tag}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mtag": true
      }
    },
    "6e3bc423-8672-3e67-921c-b811d0bcfce6": {
      "content": "useDebugValue(${1:value})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usedebugvalue",
      "matches": {
        "react usedebugvalue": true,
        "usedebugvalue": true
      }
    },
    "6e41a3c3-35b7-32d4-b08e-cc4b48ed85ce": {
      "content": "justify-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:se": true
      }
    },
    "6e41f9ee-8c29-3da0-87e4-187991388fa2": {
      "content": "<input type=\"text\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:text": true
      }
    },
    "6e43c400-31ad-3764-aec7-b31619f63ca9": {
      "content": "border-right-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      }
    },
    "6e4bba14-1465-37b8-b364-8c77c3aaf8e8": {
      "content": "loop { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loo": true
      }
    },
    "6e4fe9d0-9f80-3be2-bdd2-01f178cbf766": {
      "content": "from django.conf.urls import ${1|static,url,include,handler400,handler403,handler404,handler500|}",
      "doc": "Utility functions for use in URLconfs.",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "conf.urls (≤1.11)",
      "matches": {
        "iconf_urls": true
      }
    },
    "6e509db9-ef95-3a39-b95b-c9b37c708cea": {
      "content": "{-# LANGUAGE ${1} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "{-# LANGUAGE ... #-}",
      "matches": {
        "language": true
      }
    },
    "6e5668fd-4e38-3936-88e5-bb367a4b4daa": {
      "content": "${1:obj}.offsetParent()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offsetp": true
      }
    },
    "6e5a4f0d-fba3-3b13-914d-4db1989a6d2c": {
      "content": "gl.glVertex2f(${1:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl vertex 2f",
      "matches": {
        "gl": true
      }
    },
    "6e5a9200-a7a3-316f-a4de-29956c45eb45": {
      "content": "{% unless ${1:condition} %}\n\t${0:${VISUAL}}\n{% endunless %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "6e5ad851-d8c6-3b23-85fc-2b614c859b5f": {
      "content": "FUNCTION INTEGER(${1:number})$0",
      "doc": "greatest integer value that is less than or equal to number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER",
      "matches": {
        "FUNCTION INTEGER": true
      }
    },
    "6e5cc4ff-2c4c-38e6-9bd0-c2f77f3bbc0f": {
      "content": "on('${1:event_name}', function(${2:stream}) {\n  ${3}\n});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      }
    },
    "6e5e097a-c6f9-31cf-8ac0-40b76ed5a8ed": {
      "content": "<xsl:call-template name=\"${1:template}\">\n\t<xsl:with-param name=\"${2:param}\">${3}</xsl:with-param>${4}\n</xsl:call-template>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "with-param",
      "matches": {
        "call-template": true
      }
    },
    "6e66b9c7-0a29-3507-81a6-6ea20ac72f2a": {
      "content": "header (\"HTTP/1.1 301 Moved Permanently\");\nheader (\"Location: \".URL);\nexit();",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "http_redirect": true
      }
    },
    "6e804e2e-0b7c-30c8-852c-190063097690": {
      "content": "function main()\n\t$0\nend\n\nmain()",
      "doc": "Code snippet to create a main block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "6e84690d-744a-350b-b877-74ffdac32e33": {
      "content": "<input type=\"range\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:range": true
      }
    },
    "6e867417-b3db-326f-8e92-d1512fa5ee59": {
      "content": "/**\n * ${1:undocumented function summary}\n *\n * ${2:Undocumented function long description}\n *\n${3: * @param ${4:Type} \\$${5:var} ${6:Description}}\n${7: * @return ${8:type}}\n${9: * @throws ${10:conditon}}\n **/\n${11:public }function ${12:FunctionName}(${13:${14:${4:Type} }\\$${5:var}${15: = ${16:null}}})\n{\n\t${0:# code...}\n}",
      "doc": "Documented function",
      "filetype": "php",
      "grammar": "lsp",
      "label": "PHPDoc function …",
      "matches": {
        "doc_f": true
      }
    },
    "6e9341e5-550d-3882-8778-2c4f769142ad": {
      "content": "[(ngModel)]=\"${1:binding}\"",
      "doc": "Angular ngModel",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngmodel",
      "matches": {
        "a-ngmodel": true,
        "angular ng model": true
      }
    },
    "6e97c9a5-5bd5-3b73-91ff-1ad5b50263e5": {
      "content": "Vue.observable({${1:object}})",
      "doc": "Vue.observable( object )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "observable",
      "matches": {
        "VueObservable": true
      }
    },
    "6e9d30ab-4d32-3b65-be24-dbee1a87a321": {
      "content": "for ${1:item} in ${2:list}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "6eab9c5d-db5b-34e8-b79b-bab19c27f0b7": {
      "content": "<%= ${1:f}.check_box :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffcb": true
      }
    },
    "6eb17fad-aa99-3c94-81c8-e2f5596e5b0e": {
      "content": "contract ${1:Name} {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "contract declaration",
      "matches": {
        "con": true
      }
    },
    "6eb706b7-3f8f-34fb-abe8-67605c2c2e4a": {
      "content": "border-break: close;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk:c": true
      }
    },
    "6eb80d5e-37e0-3f67-ba48-9b6403780d26": {
      "content": "${1|transition,in,out|}:${2:name}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition",
      "matches": {
        "svelte transition": true,
        "svt": true
      }
    },
    "6ebb4499-eede-38e0-b8e6-06a0ea5cd59e": {
      "content": "$this->shouldBe$1();",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldBeXYZ()",
      "matches": {
        "sbstate": true
      }
    },
    "6ec4be57-bff2-390c-a34a-2fd40886f3b1": {
      "content": "overflow: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      }
    },
    "6ece591a-3bfa-3f93-930a-c41d70a1cdb0": {
      "content": "${1:fn} : ${2:a}\n$1 =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      }
    },
    "6ed5d1b6-d850-3017-b821-8bd65824fdae": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "do { ... } while (condition)",
      "matches": {
        "do": true
      }
    },
    "6ee5985c-a6cd-36ab-981c-0c12023ee35a": {
      "content": "library(${0:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      }
    },
    "6eedd420-2a87-306b-a8d8-29c67e412474": {
      "content": "expect(${1:target}).toBeNull()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be null (coffee)",
      "matches": {
        "en": true
      }
    },
    "6eeece1d-b4ec-31f6-b090-23b5563fe442": {
      "content": "display: block",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:b": true
      }
    },
    "6ef02c23-5f53-37ae-97e0-749405988484": {
      "content": "font-smooth always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      }
    },
    "6ef1e3d9-faeb-315f-93dd-c4dfbba9ccd9": {
      "content": "assert_difference \"${1:Model}.${2:count}\", ${3:1} do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_difference",
      "matches": {
        "asd": true
      }
    },
    "6ef43242-c74d-338e-aeba-8c33c88f7e31": {
      "content": "debug_assert!(${1});",
      "doc": "debug_assert!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "debug_assert",
      "matches": {
        "debug_assert": true
      }
    },
    "6f06b798-2d75-362a-a387-b41334243db3": {
      "content": "import qualified ${1:Data.Text} as ${0:T}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "importq": true
      }
    },
    "6f0850a6-23c2-3ac9-bef1-8884b394e83b": {
      "content": "attach(${1:frame})",
      "doc": "Attach",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "att",
      "matches": {
        "attach": true
      }
    },
    "6f09efe4-333d-3e4f-b9e3-c86ca6b11db5": {
      "content": "font-family ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      }
    },
    "6f0f2d64-5d10-306f-946c-dacacb986e4b": {
      "content": "padding: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   T R B L (padding)",
      "matches": {
        "padding": true
      }
    },
    "6f0fd40e-0b7d-3e04-b404-80442f9c10f8": {
      "content": "<del>${0}</del>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      }
    },
    "6f1a12b0-1da6-3460-be71-e0f3316108e7": {
      "content": "align-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:c": true
      }
    },
    "6f1b0242-cd5d-3620-b105-39dd95e45257": {
      "content": "| handleize",
      "doc": "String filter: handleize",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter handleize",
      "matches": {
        "handleize": true
      }
    },
    "6f23def6-06a9-3caa-8e12-9b7e353844fc": {
      "content": "text-align: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      }
    },
    "6f24897a-f081-3fa4-8539-991e6299f53a": {
      "content": "vertical-align: text-bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tb": true
      }
    },
    "6f2751a5-f908-33f8-929a-d5c5be784617": {
      "content": "border-spacing: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      }
    },
    "6f27f707-e50f-3077-9258-5554ef36ca05": {
      "content": "beforeEach(async () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeEach",
      "matches": {
        "bfe": true
      }
    },
    "6f2ec23b-02d5-3ad1-a814-646913c4632b": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      }
    },
    "6f3000ae-c64b-3d9e-9b70-e016b97a45cd": {
      "content": "_.pullAt(${array}, ${indexes})",
      "doc": "var array = ['a', 'b', 'c', 'd'];\nvar pulled = _.pullAt(array, [1, 3]);\n\nconsole.log(array);\n// => ['a', 'c']\n\nconsole.log(pulled);\n// => ['b', 'd']\n\nRemoves elements from `array` corresponding to `indexes` and returns an\narray of removed elements.\n\n**Note:** Unlike `_.at`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullat",
      "matches": {
        "lodash pullat": true
      }
    },
    "6f3565d4-a179-37e2-83e6-afe50020ec8c": {
      "content": "=== ${1} ===\n\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "===": true
      }
    },
    "6f385176-afbb-310e-aeed-0777fc760729": {
      "content": "this.state.$0",
      "doc": "Access component's state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "ts": true
      }
    },
    "6f3a417b-459e-333d-aba2-4cfb4c7348ec": {
      "content": "set the_result to display dialog \"${1:#:text}\"\n\tdefault answer \"${2:#:type here}\"\n\t${3:#:with icon}\n\tbuttons {\"${4:Cancel}\", \"${5:OK}\"}\n\tdefault button \"${5}\"\nset button_pressed to button returned of the_result\nset text_typed to text returned of the_result\nif button_pressed is \"${5}\" then\n\t${6:#:TARGET}\nelse\n\t-- action for cancel button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_TextFierld": true
      }
    },
    "6f3c450b-6ef3-3942-a190-82f5b6e78137": {
      "content": "text-emphasis: after;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      }
    },
    "6f3d2217-31a1-3ad0-852d-db7a06032d30": {
      "content": "{ path: '**', component: ${1:PathNotFoundComponent} }$0",
      "doc": "Angular 404 route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-404-route-path",
      "matches": {
        "a-route-path-404": true,
        "angular 404 route path": true
      }
    },
    "6f3f30c9-de35-3b89-b49f-ffc33762045a": {
      "content": "(*$T ${1:name}\n\t${2:test}\n*)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "inline qtest",
      "matches": {
        "qt": true
      }
    },
    "6f44ae79-2473-3526-8c69-d38d19e210ff": {
      "content": "__PACKAGE__->${0:package_method}()",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgm": true
      }
    },
    "6f4bc703-5035-3a98-a932-21f073a778fb": {
      "content": "dialect\"${2|ans85,bs2000,bs2000-offload,cob370,cob371,cob372,entcobol,mf,mvs,os390,osvs,vsc21,vsc22,vsc23,vsc24|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "dialect",
      "matches": {
        "dialect": true
      }
    },
    "6f549b46-f82d-370f-955b-d8986913d77c": {
      "content": "export default ${1:member}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module default export",
      "matches": {
        "ed": true
      }
    },
    "6f55eff8-3382-38c1-8e59-81d85345fe39": {
      "content": "(if ${1} ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "6f58ba20-eb85-3b5b-aaeb-cff849a34aa5": {
      "content": "console.error($1);\n$0",
      "doc": "Log error to the console",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Log error to console",
      "matches": {
        "error": true
      }
    },
    "6f5a629f-d364-3542-aa5e-c2e9a892c48f": {
      "content": "@import '${0}';",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "6f5eff46-8a03-3fcc-98c1-c6665b8629f7": {
      "content": "font-emphasize-position: before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      }
    },
    "6f630fb9-3be6-34fa-9fb4-4ed67e91d0f8": {
      "content": "componentDidMount() {\n\t$0\n}",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentdidmount",
      "matches": {
        "cdm": true,
        "react componentdidmount": true
      }
    },
    "6f64d721-2a59-3f20-a641-b46510f36c45": {
      "content": "__import__('ptpython.repl', fromlist=('repl')).embed(globals(), locals(), vi_mode=${1:False}, history_filename=${2:None})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ptpython": true
      }
    },
    "6f6ab63e-d84b-3f60-ae68-1f0c1f3e316e": {
      "content": "${${1:0}#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${X#optional}",
      "matches": {
        "$#": true
      }
    },
    "6f6c2661-a0ee-33aa-a6ae-155e8bdf0021": {
      "content": "{% url ${1} as ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "6f73f7a2-1264-3f94-97ca-24d06167fad8": {
      "content": "class ${1:#:name} {\n    ${2}\npublic:\n    $1(${3});\n};\n$1::$1($3) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class": true
      }
    },
    "6f74c20b-ab17-3145-8287-b903806f73dc": {
      "content": "return new Promise((resolve, reject) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return promise",
      "matches": {
        "rp": true
      }
    },
    "6f778679-a56f-3f0f-ae79-a69b643e9e57": {
      "content": "rgba(${1:255}, ${2:255}, ${3:255}, ${4:0.5})$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color rgba",
      "matches": {
        "rgba": true
      }
    },
    "6f7d644f-a611-3acd-b405-0c9c5a1ea644": {
      "content": "${1:FIELDNAME} = models.PhoneNumberField($2)",
      "doc": "PhoneNumberField (mphone).\n\n*external package: django-phonenumber-field*",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mphone",
      "matches": {
        "mphone": true
      }
    },
    "6f81ba22-4a43-369b-a652-97de379a7a93": {
      "content": "Stream<${1:type}> get ${2:name} => _${2:name}Controller.stream;\nfinal _${2:name}Controller = StreamController<${1:type}>();",
      "doc": "A source of asynchronous data events. A stream can be of any data type <T>",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Stream",
      "matches": {
        "strm": true
      }
    },
    "6f8a1c19-58af-3421-a8ef-35a4f9dfab2a": {
      "content": "<section>\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section": true
      }
    },
    "6f8cddda-f84e-37d5-ac7d-1f0b59f179bb": {
      "content": "elsif (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "6f8fa30d-eb3c-38ec-8308-9ea3762fae0b": {
      "content": "=head2 $1\n\nSummary of $1\n\n=cut\n\nsub ${1:subroutine_name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subpod": true
      }
    },
    "6f939e65-6f6a-30b6-9105-bd65bcce71e0": {
      "content": "_.once(${func})",
      "doc": "var initialize = _.once(createApplication);\ninitialize();\ninitialize();\n// => `createApplication` is invoked once\n\nCreates a function that is restricted to invoking `func` once. Repeat calls\nto the function return the value of the first invocation. The `func` is\ninvoked with the `this` binding and arguments of the created function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-once",
      "matches": {
        "lodash once": true
      }
    },
    "6f9768e9-1d69-324c-acb6-aa016c52cfd0": {
      "content": "<input type=\"date\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:date": true
      }
    },
    "6f983456-1d33-352b-983b-2c03d2859195": {
      "content": "class ${1:ModelName}Admin(admin.ModelAdmin):\n\t${0}\n\nadmin.site.register($1, $1Admin)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "modeladmin": true
      }
    },
    "6f9a04d5-439b-3092-9784-e204159a812a": {
      "content": "list-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      }
    },
    "6f9b6ade-b145-30e6-bb0d-51bd777c05df": {
      "content": "it { should respond_to(:${1}).with(${0}).arguments }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isresw": true
      }
    },
    "6f9d129a-6351-3abb-87ff-b09b62e5faa6": {
      "content": "http.createServer($1).listen($2);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "http.createServer",
      "matches": {
        "hcs": true
      }
    },
    "6fac8358-cd00-3775-a2c3-4facfe828238": {
      "content": "<#local ${1:variable_name} = ${0:value${VISUAL}} />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#local variable_name = value />",
      "matches": {
        "loc": true
      }
    },
    "6fb1d3fb-e41b-30e1-ae77-7e5679645d5f": {
      "content": "t.boolean :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcb": true
      }
    },
    "6fb34ed6-8cd2-3e49-8fae-fac505427be9": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}})",
      "doc": "Grep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grep",
      "matches": {
        "grep": true
      }
    },
    "6fbcf4cc-8d3c-3283-86d0-953abaf81eb2": {
      "content": "${1:ModelName}::model()->count(${2:condition}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycountm": true
      }
    },
    "6fc92329-6738-3d26-84af-ab9a295f2cdc": {
      "content": "it { should ensure_exclusion_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isee": true
      }
    },
    "6fcf5258-c02c-3599-ab1b-975bd934c6dc": {
      "content": "border-bottom-left-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      }
    },
    "6fcf5d05-a963-3cc5-a8ec-b528db11cdf8": {
      "content": "{%- elsif ${condition} -%}",
      "doc": "Control flow tag: elsif",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag elsif",
      "matches": {
        "elsif": true
      }
    },
    "6fd07717-b523-3448-9c16-18196fcae567": {
      "content": "-export([${0:f/1}]).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-export": true
      }
    },
    "6fd423a1-9776-3cac-9ed4-0186abaedcb2": {
      "content": "<base href=\"$1\" target=\"$2\">$3",
      "doc": "HTML - Defines a base URL for all the links in a page",
      "filetype": "html",
      "grammar": "lsp",
      "label": "base",
      "matches": {
        "base": true
      }
    },
    "6fd76c4e-ba9a-374f-b683-b52bd5aa691f": {
      "content": "const ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "const (con)",
      "matches": {
        "con": true
      }
    },
    "6fd9422d-d35e-378a-8fbe-c9ea80d81907": {
      "content": "<%= ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "=": true
      }
    },
    "6fda8017-b2a7-377a-b4af-bb54d6c273a1": {
      "content": "${1:name} ${2:in} ${3:type} ${0: := null}",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "6fdd95ce-5684-3c91-8a46-da1317399e2a": {
      "content": "<span>$1</span>$2",
      "doc": "HTML - Defines a section in a document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "span",
      "matches": {
        "span": true
      }
    },
    "6fe84e2b-bed7-3074-a64a-70cdad0ed092": {
      "content": "while (${1:condition}) {\n\t$0\n}",
      "doc": "While Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "While Statement",
      "matches": {
        "while": true
      }
    },
    "6fec0b1f-d455-36e0-85bd-b54d1b963e66": {
      "content": "/**\n * ${2:#:undocumented class}\n *\n * @package ${3:default}\n * @author ${4}\n **/\ninterface ${1}\n{\n\t${0:TARGET}\n} // END interface $1",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doci": true
      }
    },
    "6fec89b3-e183-3ee9-bee0-9164ee3b64c2": {
      "content": "alignContent: '${1}',",
      "doc": "alignContent",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "alignContent",
      "matches": {
        "align": true
      }
    },
    "6fee72c8-945e-3bd9-86d4-75457faa7ba3": {
      "content": "{-# LANGUAGE ${1:extension} #-}$0",
      "doc": "Language extension pragma",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "pragma",
      "matches": {
        "lang": true
      }
    },
    "6ff5e5a8-5c3e-32a1-a436-8b62be51df47": {
      "content": "for ${1:#:value} in ${2:#:list}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "for ... in ...: ...",
      "matches": {
        "for": true
      }
    },
    "6ffc75ca-14d0-3cff-b7cf-676065fd212c": {
      "content": "export default class ${1:className} extends ${2:baseclassName} {\n\t$0\n};",
      "doc": "Export default class which extends a base one in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportclassextends",
      "matches": {
        "base export class extends": true
      }
    },
    "7034af80-a89b-33be-8f82-d04af7c824f0": {
      "content": "<fieldset>\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      }
    },
    "7035ee52-184f-3cee-b7dd-0e601464bbfd": {
      "content": "(${1:args}) ->\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "70396c6a-472f-3ad3-b604-ae6b423bee13": {
      "content": "{#each ${1:items} as ${2:item},(${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "each index block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-key-block",
      "matches": {
        "s-each-key-block": true
      }
    },
    "703b1c0e-8a0f-376a-8be7-6af868faa0e4": {
      "content": "clean:\n  rm -f ${0}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clean:": true
      }
    },
    "703cbd60-55e8-32fc-a7a9-98c3c0eb32c6": {
      "content": "while ${1:condition} do\n\t${0:--body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "703d6c2e-102b-344f-b32f-6797b599a9b3": {
      "content": "grid-auto-columns min-content",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mic": true
      }
    },
    "703e31a5-5863-3b22-ad8a-702ef7ee7abd": {
      "content": "border-length ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      }
    },
    "7043c19f-564d-310c-87ce-03cc6471d9ee": {
      "content": "${1:obj}.data(${2:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      }
    },
    "70453a70-8499-31cb-a402-56329e73bd1c": {
      "content": "const { ${1:first} } = this.props",
      "doc": "Creates and assigns a local variable using props destructing",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "destructProps",
      "matches": {
        "cp": true
      }
    },
    "704f25c6-484e-3a29-b2e8-246f4e97f41a": {
      "content": "${1:FIELDNAME} = models.FloatField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "float": true
      }
    },
    "705377c2-950e-3fb5-bbef-c7a73413aa42": {
      "content": "tapply(${1:X}, ${2:INDEX}, ${3:FUN = ${4:NULL}}, ${5:...}, ${6:simplify = ${7:TRUE}})",
      "doc": "Tapply",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "tap",
      "matches": {
        "tapply": true
      }
    },
    "705e2570-8c3c-31d2-a7fc-057f233e925d": {
      "content": "${1:key}: ${2:value}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert key: value",
      "matches": {
        ":": true
      }
    },
    "70623dcd-3820-3fc1-a7e8-d305e463c140": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "70633b48-fd11-33d7-a0e5-c01d3ac87525": {
      "content": "writeln!(${1}, \"${2}\")",
      "doc": "writeln!(…, …)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "writeln",
      "matches": {
        "writeln": true
      }
    },
    "7064089e-b4a0-3279-a454-49279ccba3ee": {
      "content": "for (var ${1} = 0; $1 < ${2}.length; $1++) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "fr",
      "matches": {
        "for": true
      }
    },
    "70648c48-d2a8-397b-a234-c805aaa4b688": {
      "content": "// MARK: - Public",
      "doc": "Create a MARK: - Data",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - Data",
      "matches": {
        "markdata": true
      }
    },
    "7065bb37-a73d-3c7d-a12a-bcfd9ff921ff": {
      "content": "function ${1:foo}(node) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "action function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action",
      "matches": {
        "s-action": true
      }
    },
    "706788c4-6cbd-3e75-bb65-ffb44e3187a3": {
      "content": "line(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "line": true
      }
    },
    "70686b0e-8ee7-3f07-afd2-ddbc3f240940": {
      "content": "type ${1:name} func($3) $4",
      "doc": "Snippet for a type function declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "type function declaration",
      "matches": {
        "tyf": true
      }
    },
    "706c6826-27ab-36b7-89aa-8ded154305e5": {
      "content": "tanh($2)",
      "doc": "return the hyperbolic tangent of the parameter",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "tanh",
      "matches": {
        "tanh": true
      }
    },
    "7074f931-34ab-373c-ae6e-55d98f023edc": {
      "content": "\\$GLOBALS['${1:#:variable}']${2: = }${3:#:something}${4:;}${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gloabals": true
      }
    },
    "707e5166-5dca-311d-aa10-4a3e04bb7188": {
      "content": "cloud $1",
      "doc": "Model the cloud servers",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Cloud",
      "matches": {
        "cl": true
      }
    },
    "70876d9f-8bcd-3222-8fa3-7fb4f4b617f3": {
      "content": "useLayoutEffect(() => {\n  ${1:first}\n\n  return () => {\n    ${2:second}\n  };\n}, [${3:third}])",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useLayoutEffect",
      "matches": {
        "useLayoutEffectSnippet": true
      }
    },
    "708a1377-b5cc-32d3-910b-0cc7a50a36c8": {
      "content": "<p id=\"${1}\">${2:TARGET}</p>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pid": true
      }
    },
    "709b296b-8b25-3d2c-980d-870e8ee897ad": {
      "content": "border-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      }
    },
    "709bb935-6859-3150-8843-58e5e53f4a73": {
      "content": "{% nav ${1} in ${2} %}\n\t${0}\n{% endnav %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig nav",
      "matches": {
        "nav": true
      }
    },
    "70a48355-c37f-3bf4-97b0-88ba6b09cf52": {
      "content": "uniform",
      "doc": "The qualifier uniform is used to declare variables that are shared between a shader and the OpenGL ES environment.\nUniforms can be used in the vertex shader and the fragment shader and they must have global scope. The same uniform variable can be used in the vertex and the fragment shader, but since both shaders share the same name space the declaration has to be identical. Uniforms are used to specify properties of the object that is rendered. Examples are the projection matrix, the light position or the material color of the object. Uniforms are read-only variables, i.e. their value can not be changed in the shader.\nSide note: Since a uniform is never initialized in the shader it has to be loaded with data by the application executing the shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "uniform",
      "matches": {
        "uniform": true
      }
    },
    "70a6c1cd-c342-3c36-8a6f-840a8b22bd33": {
      "content": "import { mapState } from 'vuex';\n\nexport default {\n\tcomputed: {\n\t\t...mapState([\n\t\t\t${1:'nameOfState'},\n\t\t])\n\t},\n};",
      "doc": "map getters inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapState",
      "matches": {
        "vmapstate": true
      }
    },
    "70a74edc-2041-3032-af02-a3ac89110167": {
      "content": "assert!(${1});",
      "doc": "assert!(…);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "assert",
      "matches": {
        "assert": true
      }
    },
    "70acc82e-6dd2-3e73-afe2-c30718c1edec": {
      "content": "float ${NAME}(vec2 position, float radius, float sides){\n\tposition = position * 2.0 - 1.0;\n\tfloat angle = atan(position.x, position.y);\n\tfloat slice = PI * 2.0 / sides;\n\treturn step(radius, cos(floor(0.5 + angle / slice) * slice - angle) * length(position));\n}",
      "doc": "polygon shape",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "polygon shape",
      "matches": {
        "polygon shape": true
      }
    },
    "70b26fd5-e393-3adc-93ca-0e553eee7f93": {
      "content": "grid-auto-flow dense",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      }
    },
    "70b6a929-5347-3204-a563-234c224b8321": {
      "content": "FUNCTION ASIN(${1:sine})$0",
      "doc": "function trigonometric arc-sine, or inverse sine, of sine",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ASIN",
      "matches": {
        "FUNCTION ASIN": true
      }
    },
    "70ba10ab-6050-3920-b701-66d492b29e56": {
      "content": "const ${1:name} = new ${2:type}(${3:arguments});$0",
      "doc": "New Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "New Statement",
      "matches": {
        "new": true
      }
    },
    "70c07fff-1d85-3074-9c8a-453a7b655d46": {
      "content": "flex-wrap: wrap-reverse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxw:wr": true
      }
    },
    "70c269bd-5787-3c5b-97d8-c58363531feb": {
      "content": "for ${1:i},${2:v} in pairs(${3:table_name}) do\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forp": true
      }
    },
    "70cbfee8-7b5f-35c6-ac88-7c82a0381b73": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ${2:ComponentName}Component } from './${3:filename}.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable({providedIn: ${4:'root'}})\nexport class ${1:Name}Guard implements CanDeactivate<${2:ComponentName}Component> {\n\tcanDeactivate(\n\t\tcomponent: ${2:ComponentName}Component,\n\t\tcurrentRoute: ActivatedRouteSnapshot, \n\t\tcurrentState: RouterStateSnapshot\n\t): Observable<boolean>|Promise<boolean>|boolean {\n\t\treturn false;$0\n\t}\n}",
      "doc": "Angular CanDeactivate guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-candeactivate-guard",
      "matches": {
        "a-guard-can-deactivate": true,
        "angular can deactivate guard": true
      }
    },
    "70d32cb5-677e-37e1-bf95-881a05498d79": {
      "content": "@else if ($1)\n\t${2:${VISUAL}}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@else if directive",
      "matches": {
        "eif": true
      }
    },
    "70d80080-7007-37ca-a768-2b7514e17e70": {
      "content": "beforeDestroy () {\n\t${0};\n},",
      "doc": "beforeDestroy lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforedestroy",
      "matches": {
        "vbeforedestroy": true,
        "vue lifecycle beforedestroy": true
      }
    },
    "70d82b69-4b1b-3937-b2c3-e4ac7ad0f49b": {
      "content": "font-size-adjust none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      }
    },
    "70db074a-6511-3eb6-a848-e6dcc99a4f81": {
      "content": "throw ${0:#:exception}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      }
    },
    "70dcd9a8-ef5e-3186-92b9-e1b750d81579": {
      "content": "$t('$1', { $2: $3 })",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "transc": true
      }
    },
    "70e7644c-26d5-374c-b3c3-c85363f71e90": {
      "content": "int ${1:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Z index (1D)",
      "matches": {
        "iz": true
      }
    },
    "70f1b605-7796-3ed9-9225-59cf728bd1ae": {
      "content": "import { useInView } from 'react-intersection-observer';",
      "doc": "",
      "filetype": "react-intersection-observer",
      "grammar": "lsp",
      "label": "react-intersection-observer-import",
      "matches": {
        "react-intersection-observer import": true,
        "rio import": true
      }
    },
    "7102043e-820c-3492-b70b-76ec0cf6ac0f": {
      "content": "imap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      }
    },
    "7109227d-ab57-32f4-b4ae-1bf64025b38e": {
      "content": "<ul id=\"${1}\">\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul#": true
      }
    },
    "711760bc-a463-35ef-a190-6fd8637afbf9": {
      "content": "<Link href=\"${1:/path/[id]}\" as=\"${2:/path/${id}}\">\n  <a>${3:content}</a>\n</Link>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link-dynamic-route",
      "matches": {
        "next link dynamic route": true
      }
    },
    "7129a58a-6e41-3f15-8990-e26b5c49e67c": {
      "content": "$this->${1:method}()->shouldNotBeLike(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeLike('value')",
      "matches": {
        "snblike": true
      }
    },
    "712b4886-62a8-3194-9d33-4ee04e498866": {
      "content": "__import__('IPython').embed()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iem": true
      }
    },
    "712e1ca1-53cf-3c82-9121-94e7d8c2f575": {
      "content": "noremap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "no": true
      }
    },
    "713871b0-7d48-3fb7-90e6-7b1ae3a3f95c": {
      "content": "class << ${1:self}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "class << self .. end",
      "matches": {
        "claself": true
      }
    },
    "713f480c-906f-3616-b806-115855ac8d16": {
      "content": "else\n{\n\t${1:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "71424342-e0d3-32a7-8315-36c610cb6a2a": {
      "content": "<input type=\"text\" name=\"${1:user}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputtext": true
      }
    },
    "7142e562-4add-3d88-bac4-e33392aaa6fb": {
      "content": "for (${1:1}, ${2:10}) {${3: |i}|}\n\t$0\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "71481e17-0c81-357b-9c66-96b0492e906c": {
      "content": "if ${1:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "714ab9ff-0a5b-3609-8b78-2fadbd068231": {
      "content": "Mouse Out    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Out",
      "matches": {
        "mout": true
      }
    },
    "71531fe7-f73c-37ea-8f8a-2b3662e04212": {
      "content": "${1:map}.${2:connect} '${3::controller/:action/:id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.named_route",
      "matches": {
        "map": true
      }
    },
    "7156b494-f0c6-3805-bbf3-2b3ae40befd7": {
      "content": "render text: '${1:text to render}', status: ${0:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rts": true
      }
    },
    "715a9351-8718-3f45-a8e4-cfde8d41eecd": {
      "content": "for (my $${1:var} = 0; $$1 < ${2:expression}; $$1++) {\n\t${3:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "715d37cb-2c97-3417-af11-3ed33cebd894": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChild, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivateChild {\n\tconstructor() { }\n\n\tcanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivateChild guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanActivateChild Guard",
      "matches": {
        "a-guard-can-activate-child": true
      }
    },
    "715ec6de-db58-3320-b985-528584128be1": {
      "content": ".. figure:: ${1:img}\n\t:alt: ${2:alter text}\n\n\t$0",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fig:": true
      }
    },
    "715f15fa-175d-306e-87a1-2caa032a099c": {
      "content": "display: inline-table",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      }
    },
    "716195c7-3207-3128-9be3-dc890fe2667d": {
      "content": "INSERT INTO ${1:tableName} (\n\t${2:attribute(s)}\n) VALUES ( ${3:values} )",
      "doc": "Insert value(s)",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "insert",
      "matches": {
        "insert": true
      }
    },
    "7166b012-728c-321e-a83c-8cc2e6de579e": {
      "content": "import ${1:package}: ${2:exports}",
      "doc": "Code snippet for import something from a package.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "import from",
      "matches": {
        "from": true,
        "im": true,
        "import": true
      }
    },
    "7169c93e-4a59-3da4-908b-65bcdaaea4f2": {
      "content": "{% use \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig use",
      "matches": {
        "use": true
      }
    },
    "716a5632-500c-3ad6-a068-128d5c033f74": {
      "content": "LOGICAL",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "7171026a-22af-39c1-9d80-cdecddaf7a91": {
      "content": "throw \"$1\";\n$0",
      "doc": "Throw Exception",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Throw Exception",
      "matches": {
        "throw": true
      }
    },
    "7175d163-202c-3b54-b15f-b0841c028fee": {
      "content": "padding-top: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-top": true,
        "pt": true
      }
    },
    "7177da6d-f89b-3296-8fac-53424c843039": {
      "content": "default :\n\t${1:TARGET}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      }
    },
    "718d8a60-db14-34b4-bad7-a18b744c70dd": {
      "content": "std.traits",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "traits": true
      }
    },
    "718f2fe6-a409-37ab-a0f0-92c33114a9b2": {
      "content": "{% embed \"${1}\" %}\n\t${0}\n{% endembed %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig embed",
      "matches": {
        "embed": true
      }
    },
    "7196e944-1cfd-3c9b-8236-bec54acbf050": {
      "content": "grid-template ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      }
    },
    "7197d4eb-8478-3b9c-9688-3ced108e4c55": {
      "content": "text-replace: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "719ac495-ef61-3c26-9c48-0df126fc0015": {
      "content": "${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "animate": true
      }
    },
    "71a09e87-10b5-3868-b764-a28975f00ad2": {
      "content": "<area shape=\"$1\" coords=\"$2\" href=\"$3\" alt=\"$4\">$5",
      "doc": "HTML - Defines an area inside an image map",
      "filetype": "html",
      "grammar": "lsp",
      "label": "area",
      "matches": {
        "area": true
      }
    },
    "71a51727-65a1-3067-8e27-d46d54fa3748": {
      "content": "<svelte:self />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self",
      "matches": {
        "svelte self": true,
        "svse": true
      }
    },
    "71a7fabc-7716-3d75-8ff7-d6effa0f6b16": {
      "content": "nf(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nf": true
      }
    },
    "71aaf820-b49a-3866-930b-689ee1048ece": {
      "content": "unless ${1:condition}, do: ${2}, else: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do: .. else:",
      "matches": {
        "unlesse:": true
      }
    },
    "71ac659d-0c2d-35de-8721-dbbc2bfbb744": {
      "content": "[${1}](${2}){\n\t${3}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lld": true
      }
    },
    "71b7db63-4951-3e83-a776-2c75046adea9": {
      "content": "${1:obj}.attr('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      }
    },
    "71bea101-5235-3615-b952-4de8ed0b71e8": {
      "content": "import ${1:Name} from './components/$1.vue';\n\nexport default {\n\tcomponents: {\n\t\t$1\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vimport:c": true
      }
    },
    "71cb12fd-19d5-304a-a8d9-12ef806bdab2": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      }
    },
    "71ce70f2-3363-38bf-8ac5-ca78c545cd0f": {
      "content": "@impl true",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      }
    },
    "71d4dba9-8a42-3585-8c49-ce97bb9e4780": {
      "content": "stringify!(${1})",
      "doc": "stringify!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "stringify",
      "matches": {
        "stringify": true
      }
    },
    "71d61f7e-33a3-35c8-a1ec-a2cb05f6a9c0": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "(condition) { ... }",
      "matches": {
        "wh": true
      }
    },
    "71d6dbe7-af35-3a6b-862d-6a890a1294a0": {
      "content": "int opCmp($1 rhs) @safe const pure nothrow\n{\n\t$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "opCmp (opCmp)",
      "matches": {
        "opCmp": true
      }
    },
    "71e49018-fc52-311b-b0d2-44b5e5af9eb7": {
      "content": "{@html ${1:expression}}",
      "doc": "html content expression",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-html",
      "matches": {
        "s-expression-html": true
      }
    },
    "71ea2b94-9a89-3ffa-a44b-7ba42b0e1db2": {
      "content": "${1:p}\n{\n\tsolver          GAMG;\n\ttolerance       1e-${2:6};\n\trelTol          ${0:0.0};\n\tsmoother        GaussSeidel;\n\tcacheAgglomeration true;\n\tnCellsInCoarsestLevel 10;\n\tagglomerator    faceAreaPair;\n\tmergeLevels     1;\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gamg": true
      }
    },
    "71eb97cb-400b-3478-9d29-72d9baa53218": {
      "content": "${1:FIELDNAME} = models.AutoField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "AutoField",
      "matches": {
        "mauto": true
      }
    },
    "71f8f395-a78c-38c1-9dc6-842e0467b487": {
      "content": "/**\n * ${1:first}\n */",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "commentBigBlock",
      "matches": {
        "cmmb": true
      }
    },
    "71f94b62-a67b-3795-b376-4b2c7cc99553": {
      "content": "$1 -> $2",
      "doc": "An arrow for the message sent on a Sequence diagram",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Sequence Message",
      "matches": {
        "mess": true
      }
    },
    "71fcc38d-f948-3dd7-9ad3-b5f460ba0210": {
      "content": "string.trim()",
      "doc": "string.trim(message?: string | function): Schema\n\nTransforms string values by removing leading and trailing whitespace. If\nstrict() is set it will only validate that the value is trimmed.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-trim",
      "matches": {
        "yup string trim": true
      }
    },
    "7205017a-afc4-3d56-9199-31a12084ad90": {
      "content": "goto case ${1:#:Val};${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "goto": true
      }
    },
    "7205677f-8baf-33da-b0a0-a6040d549729": {
      "content": "ALTER DATABASE ${1:dbName}\n\tCHARACTER SET ${2:charset}\n\tCOLLATE ${3:utf8_unicode_ci};",
      "doc": "Alter database",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "alterdb",
      "matches": {
        "alterdb": true
      }
    },
    "720a4a31-c62d-3809-8883-0d980660a3de": {
      "content": "before_each(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "before_each(func)",
      "matches": {
        "before_each": true
      }
    },
    "720d4c75-2c73-3985-9373-7f8f27b5c5b3": {
      "content": "<meta name=\"theme-color\" content=\"#${1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metatheme": true
      }
    },
    "7214362d-ada3-3856-9bfd-3abba73380b8": {
      "content": "border-style: groove;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      }
    },
    "7215e75b-7705-39c8-8377-c33e1d5473a7": {
      "content": "@before-leave='$1'$0",
      "doc": "@before-leave=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "before-leave",
      "matches": {
        "beforeLeaveEvent": true
      }
    },
    "7216b5c9-9460-3ed1-b89e-6f689edc1405": {
      "content": "package $1 {\n$2\n}",
      "doc": "Package UML structure",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Package",
      "matches": {
        "pa": true
      }
    },
    "721932ae-6a24-360b-8df6-ddbdc8661cd3": {
      "content": "printfn \"${1}\" ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "721cd247-2a1f-3b60-a340-cf7d538ec290": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Method;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Method",
      "matches": {
        "usemethod": true
      }
    },
    "722427c4-5a50-32ff-95e4-33aaa459896f": {
      "content": "position static",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      }
    },
    "722494f2-f629-3b53-9602-215a7aaf1776": {
      "content": "stages {\n\tstage('${1:Build}') {\n\t\tsteps {\n\t\t\tsh '${2:make}'\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sss": true
      }
    },
    "722895cc-23b6-3a7e-9f73-a52f1714799d": {
      "content": "mutable",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mu": true
      }
    },
    "722a0216-e571-3d1b-86d9-61122196f52b": {
      "content": "quotes: '\\201C' '\\201D' '\\2018' '\\2019'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      }
    },
    "7233c014-eb46-3547-bd93-62ecdf992bd6": {
      "content": "<%= ${1} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rce": true
      }
    },
    "72356756-1dd6-3b97-95b7-ccfd8467b0f7": {
      "content": "func Fuzz${1}(${2:f *testing.F}) {\n  f.Fuzz(func(t *testing.T, ${3:b []byte}) {\n    ${4}\n  })\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func Fuzz...(f *testing.F) { ... }",
      "matches": {
        "funcfuzz": true
      }
    },
    "72384590-4c96-389e-ad51-5f673342f568": {
      "content": "max-width: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      }
    },
    "72388b27-fbbb-3689-a748-9fdf1901af55": {
      "content": "<xsl:apply-templates select=\"${1:*}\">\n\t<xsl:with-param name=\"${2:param}\">${3}</xsl:with-param>${4}\n</xsl:apply-templates>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "with-param",
      "matches": {
        "apply-templates": true
      }
    },
    "723f7c85-5811-3fc1-a7f4-00295433fecf": {
      "content": "-ifndef(${1:TEST}).\n${0}\n-endif.",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnd": true
      }
    },
    "72567320-8d73-39a0-8810-6fc8251b238c": {
      "content": "methods: {\n\t$1\n},$0",
      "doc": "Methods to be mixed into the Vue instance.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "methods",
      "matches": {
        "methods": true
      }
    },
    "725c68b6-a9b2-3931-bf6d-66947e03f22f": {
      "content": "<a href=\"${1}\" target=\"_blank\" rel=\"noopener\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_blank": true
      }
    },
    "726191db-a4f8-32ed-b418-c68aac8bc138": {
      "content": "console.time(${1:object});",
      "doc": "Sets starting point for execution time measurement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletime",
      "matches": {
        "base console time": true
      }
    },
    "726841b5-e4d6-3a26-bd32-958a5b5d4e2a": {
      "content": "Plug '${1}', { 'for': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'for': '' }",
      "matches": {
        "plugfor": true
      }
    },
    "7269b2d6-c952-39d1-bd0f-838c33912bd3": {
      "content": "font-size: ${0:12px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-size",
      "matches": {
        "fz": true
      }
    },
    "726d9a09-2cc5-3e52-9342-a95ffdf533b0": {
      "content": "fail(\"${1:Failure message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fa": true
      }
    },
    "7274244b-ce58-3d58-97c6-d5b4c57d588a": {
      "content": "justify-self: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      }
    },
    "72761a0b-b799-3cd2-8ead-c597770ad481": {
      "content": "else:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "else: ...",
      "matches": {
        "else": true
      }
    },
    "7279186b-2fe3-3bdc-94c9-0290eef86cd9": {
      "content": "proc ${1:#:name}(${2}) =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procg": true
      }
    },
    "72796c1a-653d-3068-9020-ad583dfc086e": {
      "content": "else {\n\t$0\n}",
      "doc": "else clause",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "727e4b36-e0e3-305e-a2de-f1e7ff970ac5": {
      "content": "background:${6: #${1:DDD}} url($2) ${3:repeat/repeat-x/repeat-y/no-repeat} ${4:scroll/fixed} ${5:top left/top center/top right/center left/center center/center right/bottom left/bottom center/bottom right/x-% y-%/x-pos y-pos};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background:  color image repeat attachment position (background)",
      "matches": {
        "background": true
      }
    },
    "727ef52a-703b-3e52-a369-81b89eafc636": {
      "content": "{\n\t\"type\": \"radio\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"options\": [\n\t\t{ \"value\": \"${5}\", \"label\": \"${0}\" }\n\t],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_radio": true
      }
    },
    "7280c286-ceb9-3326-83a7-47f09989c8bc": {
      "content": "import ${1:New} from '@/components/${1:New}.vue';",
      "doc": "Import one component into another",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import File",
      "matches": {
        "vimport": true
      }
    },
    "728b562b-2f3b-32c0-a994-b7732332f2d8": {
      "content": "<dt>${1:TARGET}</dt>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      }
    },
    "728c7c42-5922-3ccc-9bf2-ad049abe0459": {
      "content": "#+ATTR_HTML: :alt $2 :align ${3:left} :class img\n[[${1:src}]${4:[${5:title}]}]\n$0",
      "doc": "img",
      "filetype": "org",
      "grammar": "lsp",
      "label": "image",
      "matches": {
        "img": true
      }
    },
    "728cd110-54b8-3843-87c7-f4aa455221ec": {
      "content": "data ${1:Type} =\n\t${0:$1}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "da": true
      }
    },
    "72953941-5fe6-3a7b-ba70-7c5a461539d2": {
      "content": "on:${1|introstart,introend,outrostart,outroend|}=\"{() => status = '${1|introstart,introend,outrostart,outroend|}'}\"",
      "doc": "transition-events",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-events",
      "matches": {
        "s-transition-events": true
      }
    },
    "729d7fa3-c45f-3aa0-ace6-59ccf7c401e7": {
      "content": "| camelcase",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "camelcase": true
      }
    },
    "729df855-b3f3-3647-8616-595b28c4b9e3": {
      "content": "function sin(${1:angle})$0",
      "doc": "trigonometric sine of the specified angle",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-sin",
      "matches": {
        "function sin": true
      }
    },
    "72a25424-666d-33f8-9386-b7b2325782d3": {
      "content": "\\\\documentclass{${1:class}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\documentclass{}",
      "matches": {
        "dcl": true
      }
    },
    "72b447ab-f3ce-36b2-a292-c7568d892c51": {
      "content": "_.isDate(${value})",
      "doc": "_.isDate(new Date);\n// => true\n\n_.isDate('Mon April 23 2012');\n// => false\n\nChecks if `value` is classified as a `Date` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isdate",
      "matches": {
        "lodash isdate": true
      }
    },
    "72bc7200-d5e0-39f9-9a6e-65c0f87e446c": {
      "content": "background-position: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      }
    },
    "72bc7be3-9046-3082-b569-5a2cbc6d090a": {
      "content": "file(glob ${1:srcs} *.${0:cpp})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glob": true
      }
    },
    "72c0d8b8-eb79-35b8-9b76-5b055f0714b5": {
      "content": "#ifdef ${1:DEBUG}\n$0\n#endif /* $1 */",
      "doc": "Code snippet for #ifdef",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#ifdef",
      "matches": {
        "#ifdef": true
      }
    },
    "72c340af-dc57-3147-a233-3855a8dc920b": {
      "content": "find_package(${1:library} ${0:REQUIRED})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      }
    },
    "72c68582-78e8-36a3-903f-9770b3354303": {
      "content": "__global__ void ${1:kernel}(${2:void}) {\n\t${0:// TODO: Implement}\n}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Kernel definition",
      "matches": {
        "kern": true
      }
    },
    "72c7caee-d099-3811-9b60-028e77d52aa9": {
      "content": "std::forward_list<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flist": true
      }
    },
    "72d2de95-fa38-386f-b5a8-fdd733f9ca8f": {
      "content": "echo CHtml::statefulForm(array('${1}'), '${2:post}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhsform": true
      }
    },
    "72d2e0e8-1f4d-351f-964a-7e41e5aee356": {
      "content": "/**\n * ${1:name}\n */\npublic ${1:name}() {\n\t$0\n}",
      "doc": "Public Method Definition",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Public Method Definition",
      "matches": {
        "public method": true
      }
    },
    "72e8ad37-a665-3211-b499-ba2ad64871dd": {
      "content": "character(len=*) ::",
      "doc": "Quick Character",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "c",
      "matches": {
        "c": true
      }
    },
    "72fc79de-f385-31ac-b121-11c16b2f4134": {
      "content": "${1:obj}.prevAll('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "preva": true
      }
    },
    "72fca89b-b340-30db-9575-b19c5f3a29da": {
      "content": "textLeading(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textLeading": true
      }
    },
    "7317c8ca-560c-36c3-aae3-39370c8f112e": {
      "content": "<typeparam name=\"${1:#:name}\">${0:#:description}</typeparam>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<typeparam name=\"\"></typeparam>",
      "matches": {
        "typeparam": true
      }
    },
    "731bfa5a-d74e-3b40-8c25-076b9fc5999f": {
      "content": "def ${1:name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "def .. do .. end",
      "matches": {
        "def": true
      }
    },
    "731d8613-7e71-3ea8-bb0c-16a6556d1ce2": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ${2:Your}Interceptor implements HttpInterceptor {\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\treturn next.handle(req);\n\t}\n}",
      "doc": "Empty Angular HttpInterceptor for HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor - Empty",
      "matches": {
        "a-http-interceptor": true
      }
    },
    "732968b5-5887-3037-b161-0600eec66d89": {
      "content": "lock (${1:this})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lock": true
      }
    },
    "732e1aa2-dc1c-3d33-a67d-42d49e8007d1": {
      "content": "if [ ${1:#:condition} ]; then\n\t${0:TARGET}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "732e9780-02a1-324f-8b8a-f429970686fa": {
      "content": "Console.ReadLine();",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Console.ReadLine",
      "matches": {
        "cr": true
      }
    },
    "7332c910-2b74-35d9-a294-a3b042d3702c": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "7336e80d-1940-3a9a-9a0f-1a8ee2736ce3": {
      "content": "overflow-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      }
    },
    "73432d73-af9d-3c95-8875-dafb0da8f001": {
      "content": "elsif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true,
        "elseif": true
      }
    },
    "734c827c-8633-3569-8cb6-7af49daf6167": {
      "content": "border-style inset",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      }
    },
    "73514a1f-683e-31bb-b9e5-ad170021e6a4": {
      "content": "border-corner-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      }
    },
    "73518852-41a3-3b14-b933-b2f219979d1d": {
      "content": "template",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "template",
      "matches": {
        "template": true
      }
    },
    "7359b3c3-3e50-3ba7-8495-5b4927d80f54": {
      "content": "{% case \"${1:value}\" %}\n\t$0",
      "doc": "case",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "735c30cc-a801-3a32-ab47-868fac67867f": {
      "content": "\\${${1:name}}=    Set Variable    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Variable",
      "matches": {
        "sv": true
      }
    },
    "735d9925-9507-3197-85a1-93441b9034ba": {
      "content": "matrix(NA, nrow = ${1:}, ncol = ${2:})",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ma": true
      }
    },
    "7369b3e6-985a-3808-8a8b-3483da58ea33": {
      "content": "use:action",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use",
      "matches": {
        "svelte use": true,
        "svu": true
      }
    },
    "736bed65-6d71-372a-bb40-7e1e3c563373": {
      "content": "mapply(${1:function}, ${0:...})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapply": true
      }
    },
    "73708c08-b4c1-3b40-b4dd-b1f02a0b0f98": {
      "content": "class ${1:class_name};\n\t// data or class properties\n\t${0}\n\n\t// initialization\n\tfunction new();\n\tendfunction : new\n\nendclass : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "73723389-3e7d-3f5b-9fa4-4598843318da": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/pods/\napiVersion: v1\nkind: Pod\nmetadata:\n  name: \"${1:myapp}\"\n  namespace: ${2:default}\n  labels:\n    app: \"${1:myapp}\"\nspec:\n  containers:\n  - name: ${1:myapp}\n    image: \"${3:debian-slim:latest}\"\n    resources:\n      limits:\n        cpu: 200m\n        memory: 500Mi\n      requests:\n        cpu: 100m\n        memory: 200Mi\n    env:\n    - name: DB_HOST\n      valueFrom:\n        configMapKeyRef:\n          name: myapp\n          key: DB_HOST\n    ports:\n    - containerPort: ${4:80}\n      name:  http\n    volumeMounts:\n    - name: localtime\n      mountPath: /etc/localtime\n  volumes:\n    - name: localtime\n      hostPath:\n        path: /usr/share/zoneinfo/Asia/Taipei\n  restartPolicy: Always\n---\n$0",
      "doc": "k8s Pod",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Pod",
      "matches": {
        "k-pod": true
      }
    },
    "7373ea40-d721-3696-a53c-b1ee73d6e427": {
      "content": "fwrite(${1:ARRAY}, sizeof(${2:TYPE}), ${3:N_MEMBERS}, ${4:FILE})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fwrite(......, file)",
      "matches": {
        "fwrite": true
      }
    },
    "73742e29-6022-371d-9f67-46d1df674b7f": {
      "content": "STRING ${1:item1} DELIMITED BY SIZE\n       ${2:item2} DELIMITED BY SIZE\n       INTO ${3:result}\nEND-STRING\n$0",
      "doc": "string delimited by size",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "STRING",
      "matches": {
        "STRING": true
      }
    },
    "7376d079-feb2-3a22-9528-888da6974372": {
      "content": "$this->${1:method}()->shouldStartWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldStartWith('string')",
      "matches": {
        "sstart": true
      }
    },
    "737a9ff9-65d7-3452-9471-20d6a5567945": {
      "content": "table-layout fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      }
    },
    "73874fe9-431c-386a-9b5d-fdd41349b017": {
      "content": "console.trace(${1:first})",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleTrace",
      "matches": {
        "ctr": true
      }
    },
    "739095df-0b4f-3499-b7b8-7fd9900db207": {
      "content": "_.zip(${arrays})",
      "doc": "_.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n\nCreates an array of grouped elements, the first of which contains the\nfirst elements of the given arrays, the second of which contains the\nsecond elements of the given arrays, and so on.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zip",
      "matches": {
        "lodash zip": true
      }
    },
    "73930fc4-6304-3d0c-8d34-5694ab3ccaf4": {
      "content": "return ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      }
    },
    "73975d1f-9b7a-3522-8b71-1deb57f4bc14": {
      "content": "<code>${0:#:content}</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<code></code>",
      "matches": {
        "code": true
      }
    },
    "739eb4ed-3e72-313c-b530-0c4b0cee0d1a": {
      "content": "try {\n    ${1:#:TARGET}\n} catch (${2:...}) {\n    ${3}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "try catch",
      "matches": {
        "try": true
      }
    },
    "73be6cf4-6c1c-3d60-a264-c9776a40ee21": {
      "content": "<%= fields_for :${1:model}, @$1 do |${2:f}| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fields": true
      }
    },
    "73c02d82-324c-3ddc-9b0e-98b4436511ed": {
      "content": "if (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "73c080ad-9b22-3556-b8ee-3f45a6625a49": {
      "content": "grid-auto-flow: ${1:row} ${2:dense};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      }
    },
    "73d697c7-b31c-384a-86e5-99978a9356d5": {
      "content": "list-style-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      }
    },
    "73da551c-706d-3284-a6c5-93208d4a8f0f": {
      "content": "expect(${1:target}).not$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not (coffee)",
      "matches": {
        "notx": true
      }
    },
    "73e088e1-c051-3a65-a9c8-92e4a83bb371": {
      "content": "\\\\noindent\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\noindent",
      "matches": {
        "ni": true
      }
    },
    "74013a7f-2ef8-3fcc-a5cd-37de9ecc1885": {
      "content": "<%page args=\"${1:}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "page",
      "matches": {
        "page": true
      }
    },
    "7403eb7b-24a0-351c-866c-9299517d51f8": {
      "content": "resize: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      }
    },
    "74077a34-2157-3a6c-b1f1-0fe88b0e667b": {
      "content": "_.map(${collection}, ${iteratee})",
      "doc": "function square(n) {\n  return n * n;\n}\n\n_.map([4, 8], square);\n// => [16, 64]\n\n_.map({ 'a': 4, 'b': 8 }, square);\n// => [16, 64] (iteration order is not guaranteed)\n\nvar users = [\n  { 'user': 'barney' },\n  { 'user': 'fred' }\n];\n\n// The `_.property` iteratee shorthand.\n_.map(users, 'user');\n// => ['barney', 'fred']\n\nCreates an array of values by running each element in `collection` thru\n`iteratee`. The iteratee is invoked with three arguments:\n(value, index|key, collection).\n\nMany lodash methods are guarded to work as iteratees for methods like\n`_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\nThe guarded methods are:\n`ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n`fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n`sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n`template`, `trim`, `trimEnd`, `trimStart`, and `words`",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-map",
      "matches": {
        "lodash map": true
      }
    },
    "740830cf-33e9-3190-ab8f-3c50dc565493": {
      "content": "require ${0:Logger}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "740c1a92-e9ae-3c5b-b729-8d23ed510885": {
      "content": "background-attachment: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ba": true,
        "backattachment": true
      }
    },
    "740e7fe3-acf7-3603-9cab-5e7bb0f0fe67": {
      "content": "${1:args}: ${0:T}*",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args": true
      }
    },
    "74104383-dbc2-3f60-bfb9-96e47b3c2b70": {
      "content": "<svelte:options ${1|immutable,accessors,namespace,tag|}={${2:value}}/>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-options",
      "matches": {
        "svelte options": true,
        "svop": true
      }
    },
    "7410cc5d-0e49-3d00-bef3-3de8a84ac572": {
      "content": "max-height: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      }
    },
    "7419dde7-d487-388d-adde-636ee13af6c8": {
      "content": "<u>$1</u>$2",
      "doc": "HTML - Used to define underlined text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "u",
      "matches": {
        "u": true
      }
    },
    "741b0f68-5554-3c6a-b214-5370043aa9a1": {
      "content": "{\n\t\"type\": \"video_url\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"accept\": [$7\"youtube\", \"vimeo\"],\n\t\"default\": \"$3\",\n\t\"info\": \"$4\",\n\t\"placeholder\": \"$5\"\n},$6",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema video",
      "matches": {
        "_video": true
      }
    },
    "7427b017-ebc6-3f61-af7a-afd15bcefa9c": {
      "content": "<li><a href=\"${0:#}\">${1}</a></li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia": true
      }
    },
    "742cd069-b0de-3a1f-990d-05773a1f8c35": {
      "content": "${1:type} ${2:ptr} = ($1*) calloc(${3:size}, sizeof($1));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clcd": true
      }
    },
    "742cf274-c517-31d6-a4d8-063f90f8b8be": {
      "content": "trait ${1:Name} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Trait definition",
      "matches": {
        "trait": true
      }
    },
    "742d00a1-e38b-3fd2-9786-d882e89ff675": {
      "content": "{% js %}\n\t${0}\n{% endjs %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig js",
      "matches": {
        "js": true
      }
    },
    "7431a089-0cfb-3963-a939-892c5b660ae8": {
      "content": "render action: '${0:action}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ra": true
      }
    },
    "7435292c-3673-3022-8ef4-9bce07f62d86": {
      "content": "{%- else -%}",
      "doc": "Control flow tag: else, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag else, whitespaced",
      "matches": {
        "else-": true
      }
    },
    "7441479a-c34c-3e7d-9807-b80998b8d756": {
      "content": "class ${1:ClassName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t${2}\n\t\t\t</>\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rcla": true
      }
    },
    "7444339e-234d-33b0-a209-a167f5a7acb6": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as ${4}} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      }
    },
    "744483d5-95aa-3aff-a7c6-8a0a3b858a75": {
      "content": "(${1}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "() => {}",
      "matches": {
        "afb": true
      }
    },
    "74498467-c415-3986-a9cd-82835dc70be4": {
      "content": "while ${1:#:condition}\n  ${0:TARGET}\nendwhile",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "while endwhile",
      "matches": {
        "while": true
      }
    },
    "7450879f-657f-3591-944d-f14565cf6435": {
      "content": "grid-auto-flow: row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      }
    },
    "74515b8b-c21c-3093-b9fa-f6cd9bc961d3": {
      "content": "while ${1:condition} {\n    ${2:unimplemented!();}\n}",
      "doc": "while … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "7454e0bb-242f-341e-b471-878bd70c361d": {
      "content": "{% else %}$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ielse": true
      }
    },
    "745642fb-5a79-3b22-8e79-7f27b240ae64": {
      "content": "import { Route, Switch, NavLink, Link } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importRouterSetup",
      "matches": {
        "imbrc": true
      }
    },
    "74590254-4d27-3890-8410-22184aa5b171": {
      "content": "format!(\"${1}\")",
      "doc": "format!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "format",
      "matches": {
        "format": true
      }
    },
    "745ee1c8-104c-3c90-a9b5-ae853067cf4f": {
      "content": "PERFORM ${1:paragraph-name} ${2:value-1} TIMES",
      "doc": "PERFORM paragraph x TIMES",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "PERFORM",
      "matches": {
        "PE": true,
        "PERFORM": true
      }
    },
    "746590f2-efda-3b0d-8b88-ebc2a85bee71": {
      "content": "overflow: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      }
    },
    "7465c0e7-aa3f-34ed-8cf9-52c24ce735d1": {
      "content": "each_slice(${1:2}) do |${2:group}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "easd-": true
      }
    },
    "746a600f-4c2b-37fe-91c2-347eaedd5032": {
      "content": "(let/cc here (set! ${1} here) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letcc": true
      }
    },
    "746a8dcf-010a-373a-ba5e-c4126eea7707": {
      "content": "_.forOwnRight(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forOwnRight(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\nThis method is like `_.forOwn` except that it iterates over properties of\n`object` in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forownright",
      "matches": {
        "lodash forownright": true
      }
    },
    "746fc2b7-3dd6-3933-87dc-955a42779649": {
      "content": "connect(${1:mapStateToProps}, ${2:mapDispatchToProps})(<${3:VISUAL}/>);",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      }
    },
    "74704269-d152-3f78-9b8c-c1c677ecee95": {
      "content": "!define $1 $2",
      "doc": "$1 is param name, $2 is param value",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Constant",
      "matches": {
        "const": true
      }
    },
    "74734c35-736a-3de3-a194-9c7183061e70": {
      "content": "__import__('bpdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bpdb": true
      }
    },
    "747ce957-200b-3808-ac9a-abadc7d8ac6d": {
      "content": "border-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      }
    },
    "7483b39e-61f4-3f72-87f8-e2abcba65389": {
      "content": "for ${1:name} in ${2:array}\n\tlet $1\n\t\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forinlet": true
      }
    },
    "74882b25-7751-3910-ad42-afcef0e91c17": {
      "content": "place-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:st": true
      }
    },
    "748b4ff9-11be-380d-afcd-725c4664587e": {
      "content": "type ${1:parentType}Alias $1\n\nfunc (p *$1) MarshalJSON() ([]byte, error) {\n\treturn json.Marshal(&struct{ *$1Alias }{(*$1Alias)(p)})\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Marshalable json alias",
      "matches": {
        "ja": true
      }
    },
    "7495b54e-7d79-30ea-ade4-7e53699fe5b5": {
      "content": "font-emphasize-style: dot",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:dt": true
      }
    },
    "749715e8-0136-3814-a49c-2fdd28b68a3b": {
      "content": "submethod ${1:submethod_name}(${2:$attr}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smth": true
      }
    },
    "749c0f9d-a2cb-354c-8e10-4179e5a34abf": {
      "content": "border-color: ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-color",
      "matches": {
        "borc": true
      }
    },
    "749de78f-4a9e-3986-b7f6-41aa004df740": {
      "content": "ADDRSPC=${2|VIRT,REAL|}${3|\\,|}",
      "doc": "ADDRSPC Parameter",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/ADDRSPC",
      "matches": {
        "ADDRSPC": true
      }
    },
    "74a0947b-61b0-3359-9f8d-889257d4cf77": {
      "content": "(${1:arguments}) => {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "arrow function with body",
      "matches": {
        "f": true
      }
    },
    "74a1eaf2-49d2-3c0a-954e-bd6d445493fd": {
      "content": "validates_associated",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated",
      "matches": {
        "va": true
      }
    },
    "74a3b09e-3971-3433-a9a7-441dbe7417cf": {
      "content": "| money",
      "doc": "Money filter: money",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter money",
      "matches": {
        "money": true
      }
    },
    "74a9602a-0852-3442-ba27-edc2560a4700": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t${2:# TODO: Define fields here}\n\n\tclass Meta:\n\t\tverbose_name = \"$1\"\n\t\tverbose_name_plural = \"$1s\"\n\n\tdef __str__(self):\n\t\treturn super($1, self).__str__()\n\n\tdef save(self):\n\t\treturn super($1, self).save()\n\n\tdef get_absolute_url(self):\n\t\treturn ('')\n\n\t${3:# TODO: Define custom methods here}",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model",
      "matches": {
        "modelfull": true
      }
    },
    "74afb96d-f960-3b06-b9bb-daa38fb37da9": {
      "content": "for ${1:name} from ${2:start} to ${3:finish} by ${4:step}\n\t${5}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrb": true
      }
    },
    "74afe29e-4707-3ccc-88e8-44be6644e2bc": {
      "content": "${1:obj}.ajaxError (${1:e}, xhr, settings, thrownError) ->\n\t${2:// error callback}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxerror": true
      }
    },
    "74bbc648-3203-3fa5-8690-f1fbcc3025db": {
      "content": "import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <View>\n        <Text>${1:first}</Text>\n      </View>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeComponentExport",
      "matches": {
        "rnce": true
      }
    },
    "74bd3f86-0899-3e10-b71d-5997e67d9ab5": {
      "content": "switch (${1:expression}) {\n\tcase '${3:case}':\n\t\t${4}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${2}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "74c3f6f1-6d72-3c19-acde-5e31cb9abe8a": {
      "content": "add:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "74c4424c-1f56-372a-9237-97ee8629cb87": {
      "content": "@media ${1:print} {\n\t${2:${VISUAL}}\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media mediatype { }",
      "matches": {
        "@m": true
      }
    },
    "74c5a266-61e1-3b3a-9e53-70bf55ed5fed": {
      "content": "drop_table :${1:table}${2: [press tab twice to generate create_table]}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Drop Create Table (mdct)",
      "matches": {
        "mtab": true
      }
    },
    "74c83324-bcdc-3838-80fd-76522f39c546": {
      "content": "def initialize(${1:args})\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "initialize method definition",
      "matches": {
        "definit": true
      }
    },
    "74ce17b5-fa6a-3efc-8eef-259dd51dfa2a": {
      "content": "margin ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      }
    },
    "74d36b4a-23ef-3f4e-8527-f72a73e8d5b7": {
      "content": "<p class=\"${1}\">${2:TARGET}</p>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pclass": true
      }
    },
    "74d37dfc-9b8d-3e7b-aece-befb009555f0": {
      "content": "${1:FIELDNAME} = models.IntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IntegerField",
      "matches": {
        "mint": true
      }
    },
    "74d7e8af-1f86-35cb-ae51-fe1da426efb7": {
      "content": "![${1:#:alt}][${2:#:id}]${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt][id]",
      "matches": {
        "altid": true
      }
    },
    "74da65db-e24a-30bb-ba45-5178f4da0a85": {
      "content": "unsafe\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unsafe",
      "matches": {
        "unsafe": true
      }
    },
    "74db3647-0466-3515-b1ec-de7c7a506204": {
      "content": "def create(self, validated_data):\n\treturn ${1:super().create(validated_data)}",
      "doc": "Django-rest Serializers ``Create`` Method",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF Create (serializers-method)",
      "matches": {
        "screate": true
      }
    },
    "74e6af70-6784-354e-9e2d-fd8448741323": {
      "content": "${1:document}.querySelector('${0:CSS selector}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qs": true
      }
    },
    "74e98c0c-3af2-3794-a7ed-5c7670d3099f": {
      "content": "(scope, element, attrs${1:ctrl}) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdlf": true
      }
    },
    "74f3efcb-30e8-3070-9ad4-3ef250dc74ca": {
      "content": "accepts_nested_attributes_for :${1:association_name}${2:${3:, allow_destroy: true}${4:, reject_if: proc \\{ |obj| ${5:obj.blank?} \\}}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "accepts_nested_attributes_for",
      "matches": {
        "anaf": true
      }
    },
    "74f64cd9-9d4d-3a8a-bbc3-0b574b4a12b6": {
      "content": "${1:obj}.offset()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      }
    },
    "74f65a2e-e479-3fbf-b27c-f82126fbe939": {
      "content": "std::cout << ${0:TARGET} << std::endl;",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "74f84169-ff0d-3517-b25e-10e38dba2fbb": {
      "content": "snippet     ${1:#:trigger}\nabbr        ${2:#:abbr}\noptions     head\n    ${3:#:TARGET}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "snippet abbr options <snippet code>",
      "matches": {
        "snip": true,
        "snippet": true
      }
    },
    "74fbe028-1188-3344-8495-d31929af249c": {
      "content": "page-break-before: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      }
    },
    "750156ba-da75-3e0c-86bf-93c3a34fe316": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      }
    },
    "75038b8a-4a0e-387c-80f2-2bd8f9f51109": {
      "content": "{% img ${1:class} ${2:URL} ${3:width} ${4:height} ${5:title_text} ${0:alt_text} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "7506a9a6-b1d9-3e6b-9cea-04ad84e06205": {
      "content": "type tt_${1:name} is table of tr_${0:name};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "750d0987-f4b9-3285-ab1c-d192d9f2ce07": {
      "content": "integer ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer",
      "matches": {
        "in": true
      }
    },
    "7511f165-8e2b-3e1f-a445-3f2b0443ab2a": {
      "content": "matrix(${1:data}, nrow = ${2:rows}, ncol = ${0:cols})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      }
    },
    "75132b72-dde9-39ed-a96b-831d494817d7": {
      "content": "func _draw():\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_draw method of Node",
      "matches": {
        "draw": true
      }
    },
    "7514bc16-9531-350a-a3cb-0d6aa9f13df1": {
      "content": "(fun ${1:x} -> ${2:x})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "(fun x -> ..)",
      "matches": {
        "fun": true
      }
    },
    "751cfd12-b746-3847-8393-12215e7c292a": {
      "content": "@version ${1:0.1.0}$0",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@version Semantic version",
      "matches": {
        "@ver": true
      }
    },
    "75290a2f-2d3d-3155-9568-0f9e5d717ab1": {
      "content": "ev.preventDefault()\nev.stopPropagation()\nreturn false",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "dom event cancel default and propagation",
      "matches": {
        "evc": true
      }
    },
    "752e58cf-f4c6-31af-91a5-bf4460e59086": {
      "content": "$.cssHooks['${1:CSS prop}'] = {\n\tget: function (elem, computed, extra) {\n\t\t${2: // handle getting the CSS property}\n\t},\n\tset: function (elem, value) {\n\t\t${0: // handle setting the CSS value}\n\t}\n};",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csshooks": true
      }
    },
    "753081b1-e0a5-3b41-bb85-cfc37cca4c46": {
      "content": "<component :is=\"${1:componentId}\"></component>$0",
      "doc": "component element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-component",
      "matches": {
        "component": true,
        "vue component": true
      }
    },
    "75353cbe-9c72-3c9e-9b0e-4e0ab810a2e9": {
      "content": "refute_in_delta ${1:unexpected_float}, ${2:actual_float}, ${3:2**-20}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfid": true
      }
    },
    "75359a7f-5f95-3957-bcba-4cc690b102f5": {
      "content": "letter-spacing: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "letter-spacing: normal",
      "matches": {
        "lsn": true
      }
    },
    "7536d927-52fe-3830-9d54-cfca29953468": {
      "content": "_.isSymbol(${value})",
      "doc": "_.isSymbol(Symbol.iterator);\n// => true\n\n_.isSymbol('abc');\n// => false\n\nChecks if `value` is classified as a `Symbol` primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-issymbol",
      "matches": {
        "lodash issymbol": true
      }
    },
    "753a595a-d9dd-346c-85ad-522b5f21697b": {
      "content": ":${1:tag}:${3}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": ":tag1:tag2:",
      "matches": {
        "tag": true
      }
    },
    "753d2473-80e6-36f3-b6e8-a92be45916f0": {
      "content": "expect { ${1:object} }.to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert expect with block",
      "matches": {
        "expb": true
      }
    },
    "754726cf-d781-3796-93fc-07e9ee85b683": {
      "content": "do while (${1:condition})\n\t$2\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dow": true
      }
    },
    "754a3388-5212-350f-90da-87770b93d984": {
      "content": "border-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      }
    },
    "7555afe2-664e-3052-9ed6-9d5925f0af1b": {
      "content": "<exception cref=\"${1:member}\">${2:description}</exception>\n*>> $0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "<exception",
      "matches": {
        "<exception": true
      }
    },
    "755b9a37-d906-36cf-9eac-fa5845b1e926": {
      "content": "must_be_kind_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbko": true
      }
    },
    "7563af70-f3cb-3ba1-8433-7e7f9d9d0c3c": {
      "content": "EntityDataModule.forRoot(${1:entityConfig}),",
      "doc": "Import NgRx Entity Data Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Data Import Entity Data Module",
      "matches": {
        "a-ngrx-data-entity-data-module-import": true
      }
    },
    "75688e51-20c8-30be-8b8e-de6044dbd73a": {
      "content": "{% for ${1:#:value} in ${2:#:list} %}\n\t${0:TARGET}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% for ... in ... %} ... {% endfor %}",
      "matches": {
        "for": true
      }
    },
    "7569a37e-15fd-3af8-887a-90718f358a94": {
      "content": "{% render '${1:snippet}', ${2:variable}: ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renderwith": true
      }
    },
    "756b4b1a-bc5c-3d22-b50b-71f9b1ac36f9": {
      "content": "protected ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p|": true
      }
    },
    "757ad062-4b2a-3d47-a891-d4d402c4b72e": {
      "content": "test.only('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block  that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-only",
      "matches": {
        "jest test only": true,
        "testo": true
      }
    },
    "7581baeb-a5f9-369a-9331-cd2efa16dc34": {
      "content": "modf($2, $3)",
      "doc": "separate a value into its integer and fractional components",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "modf",
      "matches": {
        "modf": true
      }
    },
    "7581ca41-b2da-3414-8863-554ca6921840": {
      "content": "max-width none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      }
    },
    "7582746d-86f5-356d-a57b-7d3686262b05": {
      "content": "FUNCTION LENGTH(${1:item})$0",
      "doc": "returns the length (in character positions) of the specified item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LENGTH",
      "matches": {
        "FUNCTION LENGTH": true
      }
    },
    "7582cfa5-adc7-3d85-8fe4-544a200788f4": {
      "content": "watch: {\n\t${1:data}: {\n\t\timmediate: ${2:true},\n\t\tdeep: ${3:true},\n\t\thandler(${4:newValue}, ${5:oldValue}) {\n\t\t\t${0}\n\t\t}\n\t}\n},",
      "doc": "vue watcher with options",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-watchers-with-options",
      "matches": {
        "vue watchers with options": true,
        "vwatcher-options": true
      }
    },
    "758455ef-71df-3eda-b812-123221408080": {
      "content": "deactivated() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "deactivated",
      "matches": {
        "deactivated": true
      }
    },
    "758515a9-6482-391c-a0e6-be5961da2d3f": {
      "content": "spotLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:x}, ${5:y}, ${6:z}, ${7:nx}, ${8:ny}, ${9:nz}, ${10:angle}, ${0:concentration});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spotLight": true
      }
    },
    "75865417-21f4-3028-a6dc-696c804b5122": {
      "content": "<c>${1:#:text}</c>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<c></c>",
      "matches": {
        "c": true
      }
    },
    "758f1fab-335f-37a6-92e5-bcbbc822d336": {
      "content": "func ${1:method}(${2:args}):\n\t${3:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "function define",
      "matches": {
        "func": true
      }
    },
    "75931c82-54db-316c-8df1-d2715d6a7ef4": {
      "content": "list-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      }
    },
    "7597a814-ee6d-3f43-b037-e96b4eae1e0e": {
      "content": "appear-active-class='$1'$0",
      "doc": "appear-active-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "appear-active-class",
      "matches": {
        "appearActiveClass": true
      }
    },
    "759a8579-6403-3c4c-9a62-221f2f03d161": {
      "content": "| first",
      "doc": "Array filter: first",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter first",
      "matches": {
        "first": true
      }
    },
    "759aa327-817b-3709-a377-3fc767aa0f6c": {
      "content": "mlply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      }
    },
    "75a54cce-4cdd-3bf6-8477-151fbf54e5d8": {
      "content": "_.bindAll(${object}, ${methodNames})",
      "doc": "var view = {\n  'label': 'docs',\n  'click': function() {\n    console.log('clicked ' + this.label);\n  }\n};\n\n_.bindAll(view, ['click']);\njQuery(element).on('click', view.click);\n// => Logs 'clicked docs' when clicked.\n\nBinds methods of an object to the object itself, overwriting the existing\nmethod.\n\n**Note:** This method doesn't set the \"length\" property of bound functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bindall",
      "matches": {
        "lodash bindall": true
      }
    },
    "75b0f0ba-c2e6-318c-8992-43c786b27cbe": {
      "content": "border-top-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      }
    },
    "75b3f23d-9fcc-39ec-80be-57a6160d789b": {
      "content": "<keep-alive>\n\t<component :is=\"\">\n\t\t<p>default</p>\n\t</component>\n</keep-alive>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vkeep": true
      }
    },
    "75b5b709-fb96-3575-b72b-9f3fdbbfe153": {
      "content": "var (\n\t${1:x} ${2:Type}${3: = ${0:value}}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var ( ... )",
      "matches": {
        "vars": true
      }
    },
    "75b6a762-7825-3997-8685-4bc0f636a681": {
      "content": "saturation(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saturation": true
      }
    },
    "75b87f14-e637-3c6a-858f-f1bb003ec1c3": {
      "content": ":last-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      }
    },
    "75b91ac7-064f-394a-a90f-1dcfe077b41d": {
      "content": "each_key {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_key": true
      }
    },
    "75bca912-494a-367f-a9a1-25db6393e977": {
      "content": "<caption>$1</caption>$2",
      "doc": "HTML - Defines a table caption",
      "filetype": "html",
      "grammar": "lsp",
      "label": "caption",
      "matches": {
        "caption": true
      }
    },
    "75befaa8-39b1-3b53-9dda-377780e047a1": {
      "content": "t.integer :lock_version, null: false, default: 0\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create lock_version column",
      "matches": {
        "tcl": true
      }
    },
    "75c1c781-77c0-384c-b9ff-bfb3666f3aab": {
      "content": "::: {.definition #${1:label} name=\"${2:definition name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown definition",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown definition",
      "matches": {
        "definition": true
      }
    },
    "75c599ff-aa65-3dd9-a406-87930af3dd91": {
      "content": "define([\n\t'require',\n\t'${1:dependency}'\n], function(require, ${2:factory}) {\n\t'use strict';\n\t$0\n});",
      "doc": "define module",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "define module",
      "matches": {
        "define": true
      }
    },
    "75c5bcd8-025c-342e-bfa0-a8bbc7dccee4": {
      "content": "export default class ${1:className} extends ${2:baseclassName} {\n\t$0\n};",
      "doc": "Export default class which extends a base one in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportClassExtends",
      "matches": {
        "ece": true
      }
    },
    "75c73537-867b-399f-aee6-5de41d177499": {
      "content": "instance ${1:Class} ${2:Data} where\n\t${3:f} = ${4:undefined}$0",
      "doc": "typeclass instance",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "instance",
      "matches": {
        "inst": true
      }
    },
    "75c88af4-d3d1-305e-a11f-e31ebf3b6ca1": {
      "content": "namespace ${1:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "namespace {}",
      "matches": {
        "name": true,
        "namespace": true
      }
    },
    "75d48b1b-42fe-3677-8666-596f16cf8cd3": {
      "content": "while ${1:conidition}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "75dbbab2-8892-3970-851f-20d81086e6ab": {
      "content": "class ${1:#:NAME} {\n  constructor(${2:#:Args}) {\n    ${3:#:TARGET}\n  }\n\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "class NAME {...}",
      "matches": {
        "class": true
      }
    },
    "75e27dcc-4ba3-3524-94bf-c21651d8230f": {
      "content": "import ReactDOM from 'react-dom';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import ReactDOM",
      "matches": {
        "ird": true
      }
    },
    "75e4a20b-16c5-3421-9eb9-c4bef947e518": {
      "content": "if(${1}) {\n\t${2}\n} else if(${3}) {\n\t${4}\n} else {\n\t${5}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "75e4f9eb-2641-37ee-b5b9-e3944df3b31c": {
      "content": "ls",
      "doc": "",
      "filetype": "vimshell",
      "grammar": "snu",
      "label": "=> ls?",
      "matches": {
        "sl": true
      }
    },
    "75e6f190-fa85-32a6-a7a3-8b02cad611d6": {
      "content": "===== ${1} =====\n\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=====": true
      }
    },
    "75ef1c38-89d7-312c-ae24-9c3d6596226d": {
      "content": "v-pre",
      "doc": "Does not expect expression",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-pre",
      "matches": {
        "vPre": true
      }
    },
    "75f23d20-d94c-3dac-84e7-a2c5831f85aa": {
      "content": "splitTokens(${1:str}${2:, }${0:tokens});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splitTokens": true
      }
    },
    "75f75931-194e-3824-9275-40bc83943a0e": {
      "content": "float noise1d(float v){\n\treturn cos(v + cos(v * 90.1415) * 100.1415) * 0.5 + 0.5;\n}",
      "doc": "noise1d function",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "noise1d",
      "matches": {
        "noise1d": true
      }
    },
    "760bc21f-991c-3fa4-a7e1-2fe9d189f3b9": {
      "content": "text-decoration: overline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:o": true
      }
    },
    "76107205-bf89-38e4-8b24-5f728f5e0d31": {
      "content": "protected:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "protected (prot)",
      "matches": {
        "prot": true
      }
    },
    "761791fc-eba0-35f2-9d3c-0f3feb83fe83": {
      "content": "module ${1:ModuleName} {\n\t$0\n}",
      "doc": "Modules are kind of containers for a set of relatable functions, usually used to gather functions that relate to a specific type.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Modules",
      "matches": {
        "mod": true
      }
    },
    "76179fb8-c7c7-3f2d-b33c-249fbdd4c463": {
      "content": "beforeEach(inject(function($1) {\n\t$0\n}));",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "before each (js, inject)",
      "matches": {
        "befi": true
      }
    },
    "761f0119-e606-3706-be4f-bf1f004be114": {
      "content": "\" vim: ${0:foldmethod=marker}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "\" vim: {modeline}",
      "matches": {
        "modeline": true
      }
    },
    "7621480b-0083-3884-bb37-d9cb5320ad88": {
      "content": "@warn \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@w": true
      }
    },
    "76264561-a976-3bae-b64e-9724cdebc5e3": {
      "content": "$.Callbacks()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      }
    },
    "76270ad6-1fdd-3c78-9f0b-1b8173580380": {
      "content": "begin\n\t$0\nend",
      "doc": "Code snippet to create a begin block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "begin",
      "matches": {
        "be": true,
        "begin": true
      }
    },
    "7628840c-7d3f-3501-9c88-cf5bdf3c39a7": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Cache;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Cache",
      "matches": {
        "usecache": true
      }
    },
    "762b3cfa-f3af-3339-b846-d53d0ad886bf": {
      "content": "border-left-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      }
    },
    "762fed03-55e6-36a3-9063-49a1fcedaecf": {
      "content": "after(function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "after(function() { ... })",
      "matches": {
        "aft": true
      }
    },
    "7633f0d5-b9ca-332e-9767-4dd0b7beb7dc": {
      "content": "find_all { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fina": true
      }
    },
    "763b3863-1020-3767-82d0-0b32437bed5e": {
      "content": "<!-- ${1} -->${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "//": true
      }
    },
    "763c13b1-134f-367e-b8c8-3eacca1f0250": {
      "content": "after_each(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "after_each(func)",
      "matches": {
        "after_each": true
      }
    },
    "76451025-a6a5-3133-a3eb-e3f0f33b8d4c": {
      "content": "#define $0",
      "doc": "Code snippet for #define \" \"",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#def",
      "matches": {
        "def": true
      }
    },
    "764aca8e-3f93-38dd-9057-1ec2e2fefaef": {
      "content": "{% load ${0} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      }
    },
    "764cc520-1f5f-3919-8835-2e3985887eb8": {
      "content": "RAILS_DEFAULT_LOGGER.${1:debug} ${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log2": true
      }
    },
    "7655bd7e-5c46-3498-8249-3a5d4916a516": {
      "content": "text-outline: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      }
    },
    "7657084e-58b7-3cf6-b508-2f3c2328d80b": {
      "content": "case ${1:object}\nwhen ${2:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "7657c712-8657-33da-9f19-fd7cec6daf1c": {
      "content": "clear both",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      }
    },
    "765b7d38-9a83-32c5-8159-b8c89a04f594": {
      "content": "nextFrame();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nf": true
      }
    },
    "765eaa5b-49ff-304d-a659-a2d99c369f98": {
      "content": "\\${4}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4}",
      "matches": {
        "4": true
      }
    },
    "7663f7c8-3ccc-362b-ad04-d9d8e256fc3f": {
      "content": "{% endverbatim %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endverbatim",
      "matches": {
        "endverbatim": true
      }
    },
    "76658235-57cf-3773-92bd-e5c1c33a5b91": {
      "content": "console.dir(${1:object});",
      "doc": "Prints a JavaScript representation of the specified object",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoledir",
      "matches": {
        "base console dir": true
      }
    },
    "766eabd7-c0ab-35b5-89fe-bafd128d0f6e": {
      "content": "call random_seed(${1:size=${2:<int>}}${3:put=(/$4/)})",
      "doc": "Random Seed",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "rs",
      "matches": {
        "rs": true
      }
    },
    "76762d0a-2fc8-3d8f-85f5-b4df3ed87d29": {
      "content": "computed: {\n\t${1:name}() {\n\t\treturn this.${2:data} ${0}\n\t}\n},",
      "doc": "computed value",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Computed",
      "matches": {
        "vcomputed": true
      }
    },
    "767b156a-9e09-33c1-be54-6f728b0ddab7": {
      "content": "if ${1:condition} then ${2:undefined} else ${3:undefined}$0,",
      "doc": "If inline",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "if_inline",
      "matches": {
        "if inline": true
      }
    },
    "767df2ca-1ef8-3cd1-8877-53156997b189": {
      "content": "console.log(${1:object});",
      "doc": "Displays a message in the console",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLog",
      "matches": {
        "clg": true
      }
    },
    "76801736-de04-3c95-a820-1811faf74538": {
      "content": "function ${1}(${3})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      }
    },
    "7681ef6e-5425-3db9-93c6-de586d409447": {
      "content": "for ($${1:i}=${2:0}; $$1 < ${3}; $$1++) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "769007b4-9903-3cc2-8fc2-d704d9e71cd4": {
      "content": "border-top ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      }
    },
    "76969057-7e7c-3471-9b43-e3cd1bd3f985": {
      "content": "#!/bin/${1:sh}\n${0}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "#!/bin/sh",
      "matches": {
        "#!": true,
        "shebang": true
      }
    },
    "769abf47-e305-3e93-93e7-3fd88a5761b9": {
      "content": "green(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "green": true
      }
    },
    "769f0e55-7c6d-3c5e-94f6-04e2d5726bcb": {
      "content": "enum_with_index.map { |${1:e}, ${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapwi-": true
      }
    },
    "76a55f07-d590-37ff-bb63-3f7ba28e079d": {
      "content": "```{r}\n${TM_SELECTED_TEXT}$0\n```",
      "doc": "Insert R code chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert R code chunk",
      "matches": {
        "r code chunk": true
      }
    },
    "76a77ba2-7755-3308-be8b-24f918500ab1": {
      "content": "implicit none\n\t${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      }
    },
    "76a8a798-f8b4-3e9e-a1b2-e15fbab38084": {
      "content": "@serialField ${1:#:name} ${2:#:type} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sf": true
      }
    },
    "76ab1ca4-74aa-35a1-9428-86a8f2f8a2dd": {
      "content": "subscript(${1:index: Int}) -> ${2:Int} {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subscript": true
      }
    },
    "76acda0e-73bb-39bb-b546-2263ef5ba5c3": {
      "content": "validates_numericality_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of",
      "matches": {
        "vn": true
      }
    },
    "76b0873c-99fe-36b7-ae14-ff88fa23e566": {
      "content": "<var>${0}</var>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "76b8aa2d-9118-3045-b9f1-087f3b481bd3": {
      "content": "${1:obj}.before('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "before": true
      }
    },
    "76b90d9e-70de-3196-8d64-49472657b206": {
      "content": "import { ${1:MEMBERS} } from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import { member, ... } from \"module-name\";",
      "matches": {
        "import": true
      }
    },
    "76bf3cb6-02c7-3dc5-830e-826e12126e06": {
      "content": "<mark>$1</mark>$2",
      "doc": "HTML - Defines marked text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "mark",
      "matches": {
        "mark": true
      }
    },
    "76d12e95-a626-3f54-8002-1ef202f796c1": {
      "content": "pushMatrix();\n${0:};\npopMatrix();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pushMatrix": true
      }
    },
    "76d39b75-cee0-3afe-aae6-2ddf87eed271": {
      "content": "for (const ${1:key} in ${2:object}) {\n\tif (${2:object}.hasOwnProperty(${1:key})) {\n\t\tconst ${3:element} = ${2:object}[${1:key}];\n\t\t$0\n\t}\n}",
      "doc": "For-In Loop",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "For-In Loop",
      "matches": {
        "forin": true
      }
    },
    "76d5d2b5-58dc-3376-bd86-38cca58ae2e7": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      }
    },
    "76d73996-e7e4-3dfe-a1a2-5bef114fded6": {
      "content": "redirect_to(${2:${10:parent}_${11:child}_path(${12:@}${13:$10})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (nested path plural)",
      "matches": {
        "renpp": true
      }
    },
    "76dbf3a8-311f-3f40-b90e-ba091e1b56fe": {
      "content": "<xsl:with-param name=\"${1:name}\">${0}</xsl:with-param>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with-param": true
      }
    },
    "76e36a75-37d7-3a0b-9881-87bff55545d2": {
      "content": "{% endcache %}$0",
      "doc": "endcache",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endcache",
      "matches": {
        "endcache": true
      }
    },
    "76e5268e-913e-376d-aa4a-956561986104": {
      "content": "number.positive()",
      "doc": "number.positive(message?: string | function): Schema\n\nValue must be a positive number.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-positive",
      "matches": {
        "yup number positive": true
      }
    },
    "76ec10c3-2b9f-3562-a8e7-f9f75532e1f1": {
      "content": "validates :${1:attribute}, format: { with: /${0:regex}/ }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vf": true
      }
    },
    "76ec3848-5fea-38a6-9e01-2a08fe83ff6e": {
      "content": "catch ($1) {\n\t$2\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "ch",
      "matches": {
        "catch": true
      }
    },
    "76f7d075-dabe-3306-82f0-47b13a1829d6": {
      "content": "export type ${1:first} = {${2:second}}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportType",
      "matches": {
        "exptp": true
      }
    },
    "76f8e4f5-774e-3cd6-a440-0ad341d6b912": {
      "content": "(deftype ${1:Name} [${2:fields}]\n\t${3:Protocol}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defty": true
      }
    },
    "76fc17b5-6103-3165-8736-583e64c9f8e7": {
      "content": "after_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_create",
      "matches": {
        "aftc": true
      }
    },
    "76fce455-a48a-34fb-8a61-b4ec7c28136d": {
      "content": "background-repeat: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      }
    },
    "7706710e-8c80-3e83-9acd-9e7445fc09fb": {
      "content": "background: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      }
    },
    "770abae0-61d8-3964-9dcd-f6c8f4cfa13c": {
      "content": "if err != nil {\n\treturn errors.Wrap(err, \"${1:message}\")\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrap",
      "matches": {
        "errnw": true
      }
    },
    "770b678a-2762-342a-81e3-c61d23520856": {
      "content": "bgcolor=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcolor": true
      }
    },
    "7715ddfa-1d56-3820-8c86-f9d19aab51a8": {
      "content": "def destroy\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\t@$1.destroy!\n\tredirect_to $1s_path, notice: '$2 removed'\nend",
      "doc": "def destroy",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Destroy action",
      "matches": {
        "destroy": true
      }
    },
    "77166267-0f90-3afd-932e-f4b12ffadc9b": {
      "content": "digitalWrite(${1}, HIGH);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dwHigh": true
      }
    },
    "7719d173-5a8b-3ea1-971a-79b0b54c846e": {
      "content": "counter-increment: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      }
    },
    "771edc38-5a97-328d-8154-d6a39ed28e07": {
      "content": "&#x2305;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enter": true
      }
    },
    "77281632-6f37-3653-b101-3503a8929233": {
      "content": "@leave-cancelled='$1'$0",
      "doc": "@leave-cancelled='' (v-show only)",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "leave-cancelled",
      "matches": {
        "leaveCancelledEvent": true
      }
    },
    "772a4d61-1c75-38ac-b88b-d1c0cd9f678c": {
      "content": "$this->assertClassHasAttribute(${1:$attributeName}, ${2:Example}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertClassHasAttribute($name, Example::class)",
      "matches": {
        "ascha": true
      }
    },
    "7733e716-3ebe-3d05-a27c-b679520eb949": {
      "content": "${1:obj}.insertBefore('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insb": true
      }
    },
    "7738a782-7195-311d-a409-57fc7d9c1bbd": {
      "content": "let ${1:doSomeStuff} = (${2}) => {\n\t${0}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "function": true
      }
    },
    "7745a746-fb69-3f19-85e9-1225fa361315": {
      "content": "$this->redirect($this->generateUrl('$1', $2));",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 redirect",
      "matches": {
        "redir": true
      }
    },
    "775244de-335b-3524-b7c4-748473d9ba0b": {
      "content": "else {\n    ${1:unimplemented!();}\n}",
      "doc": "else { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "775d30f4-4a69-3e72-ad4c-21db8c861fcf": {
      "content": "@interface ${1} : ${2:NSObject}\n{\n}\n@end\n\n@implementation ${1}\n- (id)init\n{\n\tif((self = [super init]))\n\t{${0}\n\t}\n\treturn self;\n}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Class",
      "matches": {
        "cl": true
      }
    },
    "7760dc49-854b-3c74-b60f-abbc83bd4ffb": {
      "content": "\\\\left${1} ${0:${VISUAL}} \\\\right$1",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left right",
      "matches": {
        "lr": true
      }
    },
    "776a5fbe-f373-38c6-a412-4c82d539568c": {
      "content": "${1:obj}.ajaxComplete(function (${1:e}, xhr, settings) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxcomplete": true
      }
    },
    "776a72d3-6ae2-3049-b1a4-3df814999cd7": {
      "content": "static int Main(string[] args)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "static int main",
      "matches": {
        "sim": true
      }
    },
    "776b88b9-1ee8-36a3-83a5-c9918f847890": {
      "content": "if ${1:condition}\n\t${0}\nelse\n    ${1}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "777b7c28-5818-3d02-8d99-e4948e10a9c7": {
      "content": "white-space: pre-wrap",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      }
    },
    "7781dae8-79f2-37e9-81bc-9572a64d2c85": {
      "content": "<footer>\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer": true
      }
    },
    "7783daed-5049-30c4-b6a4-9163b2ca23df": {
      "content": "\\\\dot{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "dot",
      "matches": {
        "dot": true
      }
    },
    "778766e4-7b91-329d-b2df-28e8b23f65fc": {
      "content": "$.removeData(${1:element}${2:, 'key name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remdd": true
      }
    },
    "779076b8-c591-3577-9ff7-02614f6430fd": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "return ...",
      "matches": {
        "return": true,
        "rt": true
      }
    },
    "7794d6c4-3524-3532-882b-50115b683798": {
      "content": "@push('$1')\n\t${2:${VISUAL}}\n@endpush",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@push directive",
      "matches": {
        "push": true
      }
    },
    "7794d7d3-70ce-3e5d-8f53-7eaf95be5df0": {
      "content": "function ${1:fname}(${2:...})\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "779dbf3b-8edb-3d99-89e9-e941fd4e2045": {
      "content": "/// ${1:description}\n///\n/// ${2:Params:  ${3:param} = ${4:param description}\n///\t\t\t $5}\n///\n/// ${6:Returns: ${7:return value}}\n///\n/// ${8:Throws:  $9Exception $10}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "function ddoc block (fdoc)",
      "matches": {
        "fdoc": true
      }
    },
    "77a1573e-39e5-3747-b6de-696364cc801a": {
      "content": "attr_accessible :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ata": true
      }
    },
    "77a30634-bdb4-3c86-aa1f-7ce74236c018": {
      "content": "{% firstof ${1} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      }
    },
    "77a8fe41-f277-3cf6-8c1f-cef379ae0620": {
      "content": "[NSString stringWithFormat:@\"${1}\", ${2}]${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "format": true
      }
    },
    "77a98dc1-7f06-3fc8-9b21-18c83eac7da9": {
      "content": "match ${1} {\n\t${2} => ${3}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "match pattern",
      "matches": {
        "mat": true
      }
    },
    "77adb9c4-1122-37fa-9199-c5ef9df02543": {
      "content": "attr_protected :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atp": true
      }
    },
    "77af38be-c6a2-3cab-a0d2-20186d0b8a9c": {
      "content": "#!/usr/bin/env ${1}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "env": true
      }
    },
    "77afa5af-2b85-3d10-8c01-95022852e1b9": {
      "content": "{%- comment -%}$1{%- endcomment -%}",
      "doc": "Comment tag: comment, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag comment, whitespaced",
      "matches": {
        "comment-": true
      }
    },
    "77b4e301-4d1f-3362-af91-36e6fef8f9bd": {
      "content": "before_destroy $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_destroy",
      "matches": {
        "befd": true
      }
    },
    "77c0e84d-3b75-38b0-96ff-453588c2b751": {
      "content": "${fn:substringAfter(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr:a": true
      }
    },
    "77c68d72-a07f-3032-9689-595840591490": {
      "content": "border-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      }
    },
    "77e10f70-91c8-35ce-be81-13b7f49bdbe5": {
      "content": "#[test]\nfn ${1:#:test_function_name}() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "77f9c6b7-9415-3f1f-9d80-4269f936e2a5": {
      "content": "func ${1:function}(${2}) ${3:error }{\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func function(...) [error] { ... }",
      "matches": {
        "func": true
      }
    },
    "77fa699e-9081-3a93-a056-9c7661891c75": {
      "content": "#include <stdio.h>\n#include <stdlib.h>\n\nint main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard starter template for a C program with stdlib included",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Stdlib Variant Starter Template",
      "matches": {
        "libsst": true
      }
    },
    "7801a0ac-a643-3ef1-9d92-d880b08a56fd": {
      "content": "parser.add_argument(\"${0:arg}\", nargs=\"${1:*}\", default=${2:None}, help=\"${3:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addnarg": true
      }
    },
    "7809666c-6312-3733-9c12-cfffe29c061a": {
      "content": "has_many :${1:other}s, class_name: '${2:$1}', foreign_key: '${3:$1}_id', dependent: :destroy",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmd": true
      }
    },
    "780d2248-10fa-3014-b84c-73eef4c7949e": {
      "content": "${1:ModelName}::model()->deleteByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydelbp": true
      }
    },
    "780f5344-1bcc-3f0c-9f1a-47e509d92767": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"stylus\" scoped>\n\n</style>",
      "doc": "Base for Vue File with Stylus",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Stylus",
      "matches": {
        "vbase-styl": true
      }
    },
    "781001c3-8d3a-3e68-b01c-d60654bf0f6a": {
      "content": "<link rel=\"manifest\" href=\"${1:manifest.json}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "manifest": true
      }
    },
    "7811cc83-00d3-3a9f-812c-f243433e1dda": {
      "content": "| img_tag: '${1:alt}', '${2:class}'",
      "doc": "HTML filter: img tag with parameters",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter img tag with parameters",
      "matches": {
        "img_tag_param": true
      }
    },
    "7815fb29-c597-3454-bfce-e766a5ac812c": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-func",
      "matches": {
        "prop-types func": true,
        "ptf": true
      }
    },
    "781791cf-a14c-311a-aef3-e8cfe4bf4b90": {
      "content": "{% exit ${1:404} %}",
      "doc": "exit",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "exit",
      "matches": {
        "exit": true
      }
    },
    "781a1a3f-d632-3d15-a819-f8917e81beb6": {
      "content": "<caption>${0}</caption>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caption": true
      }
    },
    "781cb509-6cc5-335b-9e00-a7e17002fed8": {
      "content": "${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parentsu": true
      }
    },
    "7820e90d-c905-3d44-88f8-2b0fd94511cf": {
      "content": "border-bottom: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      }
    },
    "782258bd-8440-337a-bb92-51e184bbf3da": {
      "content": "page-break-before: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      }
    },
    "7827031e-e2ac-3d0e-8ff3-f73d5cb0c6f8": {
      "content": "while ${1:condition}\n\t$0\nend",
      "doc": "Code snippet to create a while loop.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "7829deb7-02ae-3a22-9b97-b919018a7a14": {
      "content": "export default function ${1:${TM_FILENAME_BASE}}(${2:params}) {\n\t$0\n};",
      "doc": "Export default function in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportdefaultfunction",
      "matches": {
        "base export default function": true
      }
    },
    "782ad684-d4da-3cb8-960c-93617b87bff4": {
      "content": "truncatewords:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      }
    },
    "782b0719-425d-3067-9ee6-d54784598473": {
      "content": "_.transform(${object}, ${iteratee}, ${accumulator})",
      "doc": "_.transform([2, 3, 4], function(result, n) {\n  result.push(n *= n);\n  return n % 2 == 0;\n}, []);\n// => [4, 9]\n\n_.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n  (result[value] || (result[value] = [])).push(key);\n}, {});\n// => { '1': ['a', 'c'], '2': ['b'] }\n\nAn alternative to `_.reduce`; this method transforms `object` to a new\n`accumulator` object which is the result of running each of its own\nenumerable string keyed properties thru `iteratee`, with each invocation\npotentially mutating the `accumulator` object. If `accumulator` is not\nprovided, a new object with the same `[[Prototype]]` will be used. The\niteratee is invoked with four arguments: (accumulator, value, key, object).\nIteratee functions may exit iteration early by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-transform",
      "matches": {
        "lodash transform": true
      }
    },
    "78313950-bf0c-3eda-b4be-0f7bc99b4653": {
      "content": "jasmine.arrayContaining([${1:value1}]);",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "array containing (js)",
      "matches": {
        "arrc": true
      }
    },
    "78344207-21c0-38de-8b88-502a6fe47340": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      }
    },
    "783c1333-7d05-3a72-b064-bf1b20c8c66f": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      }
    },
    "783de1a3-4e50-3168-9075-105b470bd709": {
      "content": "for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {\n\tconst ${3:element} = ${2:array}[${1:index}];\n\t$0\n}",
      "doc": "For Loop",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "For Loop",
      "matches": {
        "for": true
      }
    },
    "7841c8a6-c0f5-35b5-aa22-22a9f12b246f": {
      "content": "$this->${1:method}()->shouldContain(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldContain('value')",
      "matches": {
        "scontain": true
      }
    },
    "7843e4a8-3e02-3e43-bcc5-5ce8e6204450": {
      "content": "${1:void/private/protected/public}${2: static} ${3:name}(${4}) {\n\t${5://if not void return null;}\n}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "784493aa-5ca3-30ef-933d-373606cbc9ab": {
      "content": "<svelte:self />",
      "doc": "svelte:self",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self",
      "matches": {
        "s-self": true
      }
    },
    "7848d2ef-1e00-3930-b5fe-04827503eaf7": {
      "content": "'''\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "horizontal rule",
      "matches": {
        "hrule": true
      }
    },
    "784c5cb8-4a77-3034-a24d-c659281e4dc0": {
      "content": "${1:obj}.hide('${2:slow/400/fast}', function () {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hidec": true
      }
    },
    "7856a3f6-19d9-30fe-8548-c9577416385c": {
      "content": "grid-auto-flow: row",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      }
    },
    "78594aab-0a54-3ec1-8a5d-77268eea541b": {
      "content": "find { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fin": true
      }
    },
    "785c2b49-4530-3304-b239-ca006c698596": {
      "content": "t.Logf(\"$1\", ${2:var})",
      "doc": "Snippet for t.Logf()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "t.Logf",
      "matches": {
        "tlf": true
      }
    },
    "785ebf89-6eeb-3c22-8986-a2027872631f": {
      "content": "echo CHtml::activePasswordField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhapf": true
      }
    },
    "786216b8-88c5-35d9-aa0b-7d7125d5e1c6": {
      "content": "def ${1:#:name}(self, ${2}):\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def method(self, ...): ...",
      "matches": {
        "defm": true
      }
    },
    "7862b2b5-d0e7-3303-bcef-2430c8036018": {
      "content": "${1:attribute}=\"${2:property}\" attr+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr+": true
      }
    },
    "7862d766-dabf-33dd-8a25-c435a130e3f4": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "78716ce8-91a8-3195-9c79-4fc71fdd463c": {
      "content": "[${1:#:link}](${2:#:url} \"${3:#:title}\")${4}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](url \"title\")",
      "matches": {
        "linkurltitle": true
      }
    },
    "78759a5d-30af-3862-b827-2c6c9a1c76d3": {
      "content": "{ path: '${1:path}', component: ${2:Name}Component },$0",
      "doc": "Angular eager route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Eager Route Path",
      "matches": {
        "a-route-path-eager": true
      }
    },
    "78799292-9f84-3569-94c2-d002d770cdb8": {
      "content": "<summary>\n\t${0}\n</summary>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "summary": true
      }
    },
    "787b5e52-4824-36e2-9749-fc01e8344f45": {
      "content": "flexGrow: '${1}',",
      "doc": "flexGrow",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flexGrow",
      "matches": {
        "flex": true
      }
    },
    "787c46a2-dec7-37a2-8bb5-987840768dad": {
      "content": "reverse_each do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reved": true
      }
    },
    "787c61f9-49e8-3c4b-b430-c843ad48b666": {
      "content": "$this->session->set_flashdata(\"${1:item}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_set_flashdata": true
      }
    },
    "78832fcf-caa9-39a5-89d5-2f94dc09aac0": {
      "content": "#### ${0}",
      "doc": "Add header level 4",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 4",
      "matches": {
        "h4": true
      }
    },
    "7883fe69-2b81-37ae-bc39-89044c4e4b95": {
      "content": "node $1",
      "doc": "A cube modelling a node in the system",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Node",
      "matches": {
        "no": true
      }
    },
    "7887f0bd-0d83-30f4-a75e-74c574a38b8a": {
      "content": "if($2){\n\t\n}",
      "doc": "if(){\n\t//code\n}\n\nThe keyword if is used to describe the conditional execution of a statement. The parentheses enclose the expression that defines the condition. The curly braces enclose the statements that are executed if the condition evaluates as true.\n\nif(i != 0){\n\taFunction();\n}\n\nIn contrast to a loop the statements in curly braces are executed only one time or not at all.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "7893c15a-c6a2-3657-a565-03ed8c034197": {
      "content": "hsl(${1:360}, ${2:100}%, ${3:100}%)$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color hsl",
      "matches": {
        "hsl": true
      }
    },
    "78948eeb-4384-3303-bfab-39ef3023782a": {
      "content": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpr": true
      }
    },
    "78965566-5b9c-3662-81ea-aee965b259c8": {
      "content": "beforeUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-before-update",
      "matches": {
        "svelte lifecycle before update": true,
        "svlfbu": true
      }
    },
    "7899db2f-bbfb-363c-912b-5fc31628b7f5": {
      "content": "_.gte(${value}, ${other})",
      "doc": "_.gte(3, 1);\n// => true\n\n_.gte(3, 3);\n// => true\n\n_.gte(1, 3);\n// => false\n\nChecks if `value` is greater than or equal to `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-gte",
      "matches": {
        "lodash gte": true
      }
    },
    "789ecbe0-c3d7-34ae-a83a-eec28df47a2b": {
      "content": "${1:obj}.offset()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      }
    },
    "789f5779-2e34-3d29-a06e-3753b8e1228b": {
      "content": "__device__ ${1:int} ${2:foo}(${3:void}) {\n\t${0:// TODO: Implement}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Device function definition",
      "matches": {
        "dev": true
      }
    },
    "78a11530-f7a0-3ea1-b68a-5be6ea6f4387": {
      "content": "background-clip: no-clip;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      }
    },
    "78a947eb-dca7-31b3-8761-6846eb8113bc": {
      "content": "(define (${1})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun": true
      }
    },
    "78c10128-f7fc-3bbd-81b9-0d437891b793": {
      "content": "clear: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      }
    },
    "78c97c20-766b-35f7-938a-ea1afe41597b": {
      "content": "async def ${1:fname}(${2:arg}):\n\t${3:pass}$0",
      "doc": "Code snippet for async function definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New async function",
      "matches": {
        "adef": true
      }
    },
    "78d208c4-8a89-3003-a03a-e70852c0a671": {
      "content": "inject(${1:init}) do |${2:mem}, ${3:var}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "injd": true
      }
    },
    "78d34989-b0f0-3649-a256-33dd0dc9a508": {
      "content": "@doc ~S\"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docs": true
      }
    },
    "78ddf6d1-737d-35b3-bfce-2728ac9e4b7f": {
      "content": "integer, dimension(${1}), intent(in)  :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "integer dimension intent(in)",
      "matches": {
        "indi": true
      }
    },
    "78e10f82-1167-355d-ba0e-659741382c85": {
      "content": "@isset(${1})\n    ${2}\n@endisset",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@isset ... @endisset",
      "matches": {
        "isset": true
      }
    },
    "78e27bb4-84d7-3f91-989f-b1b2dc8305ab": {
      "content": "fisher.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fis": true
      }
    },
    "78e59c91-5d5c-35c2-b3af-fab01ae3f6cd": {
      "content": "should \"${1}\" in {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "should-scalatest": true
      }
    },
    "78e8b425-bef0-3dcb-85a6-604b50e2f989": {
      "content": "display grid",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      }
    },
    "78e99b46-c70b-3168-a3d4-a00dbf26eff2": {
      "content": "defrecord ${1:record_name}, ${0:fields}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      }
    },
    "78ee1417-8cbd-3fb9-b587-4646e25b25ea": {
      "content": "private ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m-": true
      }
    },
    "78fc03db-11df-38df-be70-d57eab4597b2": {
      "content": "function abs(${1:number})$0",
      "doc": "function absolute value of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-abs",
      "matches": {
        "function abs": true
      }
    },
    "79074b83-9b81-372a-99c4-936fdee5bbd5": {
      "content": "allocate(${1:array}, stat=${2:err})\nif ($2 /= 0) print *, \"$1: Allocation request denied\"\n\nif (allocated($1)) deallocate($1, stat=$2)\nif ($2 /= 0) print *, \"$1: Deallocation request denied\"",
      "doc": "Allocate and Deallocate array",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "alloc",
      "matches": {
        "alloc": true
      }
    },
    "7908111c-b87a-3765-9239-b1af12a416d9": {
      "content": "font-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      }
    },
    "790d31da-a606-3e30-a7cf-5db6d9f88d54": {
      "content": "augroup ${1:AU_NAME}\n\tautocmd!\n\tautocmd ${2:BufRead,BufNewFile} ${3:*.ext,*.ext3|<buffer[=N]>} ${0}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroup ... autocmd block",
      "matches": {
        "au": true
      }
    },
    "791038f9-af86-3bdc-928c-bd81ad54355a": {
      "content": "func Test$1(t *testing.T) {\n\ttestCases := []struct {\n\t\tdesc\tstring\n\t\t$2\n\t}{\n\t\t{\n\t\t\tdesc: \"$3\",\n\t\t\t$4\n\t\t},\n\t}\n\tfor _, tC := range testCases {\n\t\tt.Run(tC.desc, func(t *testing.T) {\n\t\t\t$0\n\t\t})\n\t}\n}",
      "doc": "Snippet for table driven test",
      "filetype": "go",
      "grammar": "lsp",
      "label": "table driven test",
      "matches": {
        "tdt": true
      }
    },
    "7913121c-0c7f-3b3b-ab00-34bdc46dd848": {
      "content": "${1:deferred}.reject(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drej": true
      }
    },
    "792bbf68-baa1-32ed-94f4-a6111a39596c": {
      "content": "respond_to do |format|\n\tformat.${1:html} { ${0} }\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rest": true
      }
    },
    "792e69e3-43a6-3d84-bfae-0db16a22d866": {
      "content": ".. todo::\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tod:": true
      }
    },
    "793297fb-22b6-30b5-9965-f92c2211ad9d": {
      "content": "{% set users = craft.users({\n\tgroup: \"${1:userGroupHandle}\"\n}).all() %}\n\n{% for user in users %}\n\t{{ user.firstName }} {{ user.lastName }}\n{% endfor %}\n$0",
      "doc": "craft.users - object syntax",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "userso",
      "matches": {
        "userso": true
      }
    },
    "793f652c-f852-3f1d-9898-7cd6abe0b040": {
      "content": "if err != nil {\n\tt.Fatal(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatal(err) }",
      "matches": {
        "errt": true
      }
    },
    "7941330a-5938-3886-b2da-8d05f71f2306": {
      "content": "kmeans(${1:x}, ${2:centers}, ${3:iter.max = ${4:10}}, ${5:nstart = ${6:1}}, ${7:algorithm = ${8:c(\"Hartigan-Wong\", \"Lloyd\", \"Forgy\",\"MacQueen\")}}, ${9:trace = ${10:FALSE}})",
      "doc": "Kmeans",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "km",
      "matches": {
        "kmeans": true
      }
    },
    "7947c9a0-b2e6-3d67-87a6-abd788b5a9f2": {
      "content": "${1:condition} && ${2:expression}",
      "doc": "In the expression a && b, the subexpression b is only evaluated if a evaluates to true.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "and short-circuit evaluation",
      "matches": {
        "&&": true
      }
    },
    "7960fdf4-a83b-36b3-96a7-b6bb06fa50e4": {
      "content": "for (int ${1:i} = ${2:length}; $1 >= 0; $1--)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "796191d4-998f-39ba-aa61-59041fdcc8e5": {
      "content": "open",
      "doc": "Snippet for open keyword",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "open keyword",
      "matches": {
        "open": true
      }
    },
    "796246fc-a5e0-31a5-b5ab-1a3bec2009ef": {
      "content": "casez (${1:/* variable */})\n\t${2:/* value */}: begin\n\t\t${3}\n\tend\n\tdefault: begin\n\t\t${4}\n\tend\nendcase",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casez": true
      }
    },
    "79657162-2ac4-3c2d-a5e4-f790bd4dc8b6": {
      "content": "line-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true
      }
    },
    "7966d2a5-e205-3e58-af8c-77cfa203a56e": {
      "content": "for (${1:size_t} ${2:i} = ${3:length} - 1; $2 >= ${4:0}; $2--) {\n\t$0\n}",
      "doc": "Code snippet for reverse 'for' loop",
      "filetype": "c",
      "grammar": "lsp",
      "label": "forr",
      "matches": {
        "forr": true
      }
    },
    "796abe43-e4e6-36fe-ac22-06b5bb2b9239": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object",
      "matches": {
        "prop-types object": true,
        "pto": true
      }
    },
    "796af686-93fc-3426-91d7-3a9ac2efe9b5": {
      "content": "$this->${1:method}()->shouldHaveKeyWithValue(${2:'key'}, ${3:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveKeyWithValue('key', 'value')",
      "matches": {
        "skeyvalue": true
      }
    },
    "796b6561-93de-3063-a39e-dfe11a1f33dc": {
      "content": "while ${1:expression}:\n\t${2:pass}\nelse:\n\t${3:pass}",
      "doc": "Code snippet for a while loop with else",
      "filetype": "base",
      "grammar": "lsp",
      "label": "while/else",
      "matches": {
        "while/else": true
      }
    },
    "796fe95b-5927-3ff2-9131-fc696d689128": {
      "content": "align-self: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      }
    },
    "7971fe3b-1ec5-3ddb-bed7-7207aab9823d": {
      "content": "export async function getStaticProps(${1:context}) {\n  return {\n    props: {}, \n  }\n}",
      "doc": "If you export an async function called getStaticProps from a page, Next.js will pre-render this page at build time using the props returned by getStaticProps. The context parameter is an object containing the following keys: params, preview, previewData.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-static-props",
      "matches": {
        "next getstaticprops": true
      }
    },
    "79743774-f6dc-389f-99ab-1d9eb6aa839b": {
      "content": "local name value)",
      "doc": "Create a variable with local",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "local",
      "matches": {
        "local": true
      }
    },
    "797466ed-0183-3cb7-92af-c77813cdd4fc": {
      "content": "function(${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anf": true
      }
    },
    "79758adb-0d36-34d4-87d1-a3747c254e20": {
      "content": "min(${1:$2, $3})$0",
      "doc": "min",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "min",
      "matches": {
        "min": true
      }
    },
    "79762ca9-a98a-369f-8601-77bfbc9d363b": {
      "content": "font-weight: bold",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      }
    },
    "7979bb73-d746-39f8-abf3-59414f6ae0f7": {
      "content": "image::${1:example.jpg}[${2:Description}]\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "image::file[desc]",
      "matches": {
        "image": true
      }
    },
    "797ed0e6-9f26-330c-8d43-e840c483bac5": {
      "content": "($2 *)malloc(${1:N_MEMBERS} * sizeof(${2:TYPE}));\n${0}\nfree(${3:MEM});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "malloc(size)",
      "matches": {
        "malloc": true
      }
    },
    "7980a4ce-e632-3fe0-97f1-e2e731edb934": {
      "content": "border-style: solid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:s": true
      }
    },
    "7987f7ba-2cfd-3b8f-9731-974ae859320a": {
      "content": "for ${1:i},${2:v} in ipairs(${3:table_name}) do\n\t${0:-- body}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "798985d5-9ff3-3071-9e6c-ad6ea15d949c": {
      "content": "word-break ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      }
    },
    "7989ed59-6a9f-3a7b-95a6-76cfbbf77002": {
      "content": "${1:methodName}(${2:params}) {\n\t${0}\n}",
      "doc": "Creates a method inside a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "method",
      "matches": {
        "met": true
      }
    },
    "798c7065-b021-3d14-ba19-8712cd06b0c6": {
      "content": "padding-right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "798df704-8211-3a30-820e-ada14d09a5de": {
      "content": "format.${1:html|xml|json|js|any} { $0 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "format (respond_with)",
      "matches": {
        "format": true
      }
    },
    "798e2b66-a674-3a13-ae17-4ed3cac29c36": {
      "content": "minHeight: ${1},",
      "doc": "minHeight",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "minHeight",
      "matches": {
        "min": true
      }
    },
    "799039d8-0e56-318c-85bd-dc9a11a9e36f": {
      "content": "form_password(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_password": true
      }
    },
    "79907547-dc14-3d63-84aa-fb6f3bf3dfe8": {
      "content": "paddingBottom: ${1},",
      "doc": "paddingBottom",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingBottom",
      "matches": {
        "padding": true
      }
    },
    "7990eb52-285e-3f21-a4ed-ac64c255ef13": {
      "content": "console.error(${1:object});",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleError",
      "matches": {
        "cer": true
      }
    },
    "79913003-4f8c-3bae-b54e-77b1505e558a": {
      "content": "white-space: pre-wrap;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      }
    },
    "79998fa8-6f91-3697-979c-2d63d7ddc984": {
      "content": "redirect_to(${2:${12:parent}_${13:child}_path(${14:@}${15:$12}, ${16:@}${17:$13})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (nested path)",
      "matches": {
        "renp": true
      }
    },
    "799f336d-7bba-35ea-9dac-d552b38daed6": {
      "content": "list-style-type decimal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      }
    },
    "799fa453-7088-3272-8c57-e70387e313ce": {
      "content": "when ${1:condition}\n\t${0}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "79a23ac7-a9ee-38e1-b1a8-b6eb60955f03": {
      "content": "{%- post_url ${url:} -%}",
      "doc": "Tag: post_url",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag Post URL",
      "matches": {
        "posturl": true
      }
    },
    "79a8da6d-a43c-3103-8d88-2ce2fb77003c": {
      "content": "\\subsection{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subsection": true,
        "subsection \\subsection{": true
      }
    },
    "79b62e3a-9d70-3623-baa9-fcb24536c697": {
      "content": "if ${1:(* condition *)} then\n\t${2:(* A *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "If",
      "matches": {
        "If": true
      }
    },
    "79be328c-14b3-3793-95e8-eaa50f6f2e40": {
      "content": "margin-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      }
    },
    "79c21334-33ca-38f9-9e25-663706cc2ac3": {
      "content": "{% autoescape \"${1:type}\" %}\n\t$0\n{% endautoescape %}",
      "doc": "autoescape",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "autoescape",
      "matches": {
        "autoescape": true
      }
    },
    "79cba742-b387-3848-a4d8-91079cd07283": {
      "content": "'use strict';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "us": true
      }
    },
    "79cd95be-64ce-3730-b122-5e148dba198f": {
      "content": "function char-national(${1:integer})$0",
      "doc": "function character in the ordinal position specified by &lt;integer&gt; from the current national collating sequence",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-char-national",
      "matches": {
        "function char-national": true
      }
    },
    "79d76fa2-35a3-38c7-af27-03ee163e819a": {
      "content": "def __unicode__(self):\n\t${0:representation}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uni": true
      }
    },
    "79ddf3b6-d8df-3954-b3af-a5bcc5c6cfcd": {
      "content": "%table\n\t%tr\n\t\t%th\n\t\t\t${1:headers}\n\t%tr\n\t\t%td\n\t\t\t${0:headers}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "79e493bf-6650-3143-af25-a8456886885c": {
      "content": "${1:FIELDNAME} = models.IPAddressField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ip": true
      }
    },
    "79eec619-4ee2-3c76-a6d1-31d42062f8f6": {
      "content": "{% regroup $1 by  as  %}",
      "doc": "regroup tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "regroup",
      "matches": {
        "regroup": true
      }
    },
    "79ef64ff-ab40-36f1-ba53-570efd7888b8": {
      "content": "{%- continue -%}",
      "doc": "Iteration tag: continue",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag continue",
      "matches": {
        "continue": true
      }
    },
    "79f33627-582f-37ba-823b-d11306102c47": {
      "content": "<c:choose>\n\t${0}\n</c:choose>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cchoose": true
      }
    },
    "7a06d8fe-76dc-3bf6-990e-f8209e148fba": {
      "content": "if (${1:true}) {\n  ${2}\n} else {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "7a072161-1eab-369f-bb4a-0e7279e994ff": {
      "content": "${1:FIELDNAME} = forms.DateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateField",
      "matches": {
        "fdate": true
      }
    },
    "7a0b8b98-58b9-3fe3-ba13-9d9e89d4cfff": {
      "content": "<!DOCTYPE HTML>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doct5": true
      }
    },
    "7a0dabaa-2b0a-396e-a092-142006dcf227": {
      "content": "import React, { PureComponent } from 'react'\n\ntype Props = {}\n\nclass ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React pure component class with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactClassExportPureComponent",
      "matches": {
        "tsrpce": true
      }
    },
    "7a0f7932-209f-3138-a49f-75a9753091ba": {
      "content": "position: absolute;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      }
    },
    "7a133b46-2722-3578-b0c7-707be04304b2": {
      "content": "${1:FIELDNAME} = models.USStateField($2)",
      "doc": "USStateField (musstate).\n\n*external package: django-localflavor*",
      "filetype": "models",
      "grammar": "lsp",
      "label": "musstate",
      "matches": {
        "musstate": true
      }
    },
    "7a134add-8a8a-352f-8fd2-eed5652bb3b8": {
      "content": "${fn:substring(${1:string}, ${2:begin}, ${0:end})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr": true
      }
    },
    "7a168ad9-a64e-3c2b-a9e4-3b38f4e1eaba": {
      "content": "$this->assertCount(${1:$expectedCount}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertCount($count, $haystack)",
      "matches": {
        "asco": true
      }
    },
    "7a1917ac-4393-3de3-9ff1-f980788b2e68": {
      "content": "{% autoescape ${1:off} %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      }
    },
    "7a1b9d40-1160-3e41-b965-0beaafde56de": {
      "content": "${1:app}.put('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express PUT",
      "matches": {
        "eput": true
      }
    },
    "7a1bbb95-45ec-3200-ad38-ed3e2cc731e9": {
      "content": "<%def name=\"${1:name}\">\n\t${2:}\n</%def>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "def": true
      }
    },
    "7a22b1e3-6f6f-3a1a-be7b-2fc279678b49": {
      "content": "each_cons(${1:2}) { |${2:group}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "each_cons(..) { |group| .. }",
      "matches": {
        "eac-": true
      }
    },
    "7a24cdc0-9d54-31f7-8dd1-36a3356fd12f": {
      "content": "background-origin padding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:pb": true
      }
    },
    "7a2604d1-cd67-30c3-8873-6c57c02c68dc": {
      "content": "_.defaultTo(${value}, ${defaultValue})",
      "doc": "_.defaultTo(1, 10);\n// => 1\n\n_.defaultTo(undefined, 10);\n// => 10\n\nChecks `value` to determine whether a default value should be returned in\nits place. The `defaultValue` is returned if `value` is `NaN`, `null`,\nor `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaultto",
      "matches": {
        "lodash defaultto": true
      }
    },
    "7a35241b-ec75-3a90-9bac-a165161aaedb": {
      "content": "${1:FIELDNAME} = models.TimeField($2, auto_now=${4:False}, auto_now_add=${5:False})",
      "doc": "TimeField (mtime).\n\nA time, represented in Python by a datetime.time instance.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mtime",
      "matches": {
        "mtime": true
      }
    },
    "7a40d1c8-ae21-342f-874d-bc2512b2d417": {
      "content": "(${1:Expand acronym})",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(": true
      }
    },
    "7a4277e5-2227-3316-a2c0-e286103f074e": {
      "content": "import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React component class with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactClassComponentPropTypes",
      "matches": {
        "rccp": true
      }
    },
    "7a4bd26f-df6b-3917-b89c-be49aea6cb14": {
      "content": "shadowColor: '${1:none}',",
      "doc": "shadowColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "shadowColor",
      "matches": {
        "sha": true
      }
    },
    "7a506476-aac5-3933-a423-f715bd44e9c3": {
      "content": "if err := ${1:condition}; err != nil {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err := ...; err != nil { ... }",
      "matches": {
        "ife": true
      }
    },
    "7a510ec0-c8bd-3a80-89ef-9bca502c0366": {
      "content": "${1:obj}.prepend('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      }
    },
    "7a5188c3-a72f-31be-91d7-ccdd465f99c6": {
      "content": "import { css } from 'styled-components';",
      "doc": "import { css } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-css-from-styled-components",
      "matches": {
        "imsccss": true,
        "styled-components import css": true
      }
    },
    "7a5bfe96-53da-3d89-b21e-a794223bc00d": {
      "content": "(${1:args}) ~>\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      }
    },
    "7a6002da-559c-3f35-b2d6-70cb3c08b6e2": {
      "content": "_.set(${object}, ${path}, ${value})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.set(object, 'a[0].b.c', 4);\nconsole.log(object.a[0].b.c);\n// => 4\n\n_.set(object, ['x', '0', 'y', 'z'], 5);\nconsole.log(object.x[0].y.z);\n// => 5\n\nSets the value at `path` of `object`. If a portion of `path` doesn't exist,\nit's created. Arrays are created for missing index properties while objects\nare created for all other missing properties. Use `_.setWith` to customize\n`path` creation.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-set",
      "matches": {
        "lodash set": true
      }
    },
    "7a62288d-5c45-3e66-9cba-c03fd2d610e3": {
      "content": "while ${1:false} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "7a651a35-3476-3bcb-adc9-b5cb7048982a": {
      "content": "unset grid",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "unset grid",
      "matches": {
        "grid!": true
      }
    },
    "7a65d8ae-ee16-361a-80db-51d3d838b35a": {
      "content": "cum${1:max}(${2:x})",
      "doc": "Cummulative",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cum",
      "matches": {
        "cum": true
      }
    },
    "7a68238f-3df9-3885-8337-8171a2d08e2a": {
      "content": "display table-caption",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      }
    },
    "7a69cef9-0570-3a1b-8845-a3d799dc0610": {
      "content": "{let $${1:identifier}: ${2:expression} /}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "let command",
      "matches": {
        "let": true
      }
    },
    "7a7195e6-6bac-39e5-a1b3-f03003a46ae5": {
      "content": "::: {.exercise #${1:label} name=\"${2:exercise name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown exercise",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown exercise",
      "matches": {
        "exercise": true
      }
    },
    "7a74542e-216b-337e-bdb3-2762587b1ab1": {
      "content": "struct ${1:MyStruct} {\n\t$0\n};",
      "doc": "Code snippet for struct",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "7a76648a-750b-354d-b92b-68871aad8359": {
      "content": "_.without(${array}, ${values})",
      "doc": "_.without([2, 1, 2, 3], 1, 2);\n// => [3]\n\nCreates an array excluding all given values using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.pull`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-without",
      "matches": {
        "lodash without": true
      }
    },
    "7a81cf49-5941-3a9e-9a1b-20b3d4070766": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "end": true
      }
    },
    "7a8c993c-8fc0-3fde-80f9-0a33abc8bfee": {
      "content": "{{- if .Values.$1.enabled }}\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n# spec\n\t# containers_spec\n\t# livenessProbe_spec\n\t# PersistentVolumeClaim_spec\n\t# initContainers_spec\n\t# resources_spec\n\t# nodeselector_spec\n\t# tolerations_spec\n\t# affinity_spec\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_spec": true
      }
    },
    "7a8e3212-e88c-3b1a-a84a-5ade4e7bd61d": {
      "content": "<link rel=\"stylesheet\" href=\"${1:style.css}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:s": true
      }
    },
    "7a8e3ec4-2bd3-3d56-9711-b593881ff87b": {
      "content": "for (let ${1:i} = 0, ${2:len} = ${3:iterable}.length; ${1:i} < ${2:len}; ${1:i}++) {\n\t${0}\n}",
      "doc": "for loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-loop",
      "matches": {
        "base for": true
      }
    },
    "7a904962-2e18-395d-8e3d-ebb72a52cd84": {
      "content": "expect(${1:target}).toBeHidden()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be hidden (coffee)",
      "matches": {
        "eh": true
      }
    },
    "7a9cce2c-49fb-33e4-9d42-5d95f21604bb": {
      "content": "{% endtrans %}$0",
      "doc": "endtrans",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endtrans",
      "matches": {
        "endtrans": true
      }
    },
    "7a9ea8a7-1a0f-384f-a2f6-dd33e11284de": {
      "content": "let ${1} =\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "7aa2424f-b953-3db8-88eb-3a60aac1c980": {
      "content": "const ${1:module} = require('./${1:module}');",
      "doc": "require assignment local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-assignment-local",
      "matches": {
        "base require assignment local": true
      }
    },
    "7aae2297-713b-3e16-ad43-adc223608491": {
      "content": "<% ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<% %>",
      "matches": {
        "ruby_code": true
      }
    },
    "7aae2d64-f2eb-3e7c-8f0d-33a988fb04de": {
      "content": "expect(${1:})${0};",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...)",
      "matches": {
        "exp": true
      }
    },
    "7aaf5904-452f-3afa-bc4b-6e437da84eb6": {
      "content": "opacity: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      }
    },
    "7ab1e5b3-28b8-39c4-b5e6-b9d9a47470c6": {
      "content": "function ${1:name}(${2:type} ${3:name}) {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "function declaration",
      "matches": {
        "func": true
      }
    },
    "7ab479a6-bfee-3ed5-87f5-a8884be09bfa": {
      "content": "${1:definiendum}::\n${2:definiens}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "def": true
      }
    },
    "7ab53fc8-cd64-3fab-bf45-5087272d8a96": {
      "content": "has_one :${1:object}, dependent: :${0:destroy}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hod": true
      }
    },
    "7abc3e14-1c13-36c0-9c20-2991f2f3965a": {
      "content": "@online{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tdate={${4:date}},\n\turl={${5:url}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Online resource",
      "matches": {
        "online": true
      }
    },
    "7abc86e4-d766-3bb4-ba87-23e55ef9ea95": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!')\n\t},\n}\nconst ${2:Component} = Vue.extend({\n\tmixins: [$1]\n})",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmixin": true
      }
    },
    "7abe47fc-01dd-34a4-8aed-6ec6b1e43d9e": {
      "content": "${1|this,vm|}.\\$delete(${2:target}, ${3:key}). This is the alias of the global Vue.delete.",
      "doc": "vm.$delete( target, key )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$delete",
      "matches": {
        "vmDelete": true
      }
    },
    "7abf414b-7058-3475-bc1b-ab058709514f": {
      "content": "#![allow(${1})]",
      "doc": "#![allow(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "allow",
      "matches": {
        "allow": true
      }
    },
    "7ac5f4d8-6fde-3e51-951c-5798fd593556": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!')\n\t},\n}",
      "doc": "vue mixin",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mixin",
      "matches": {
        "vmixin": true,
        "vue mixin": true
      }
    },
    "7ac8ff1f-9b2f-3217-a4b6-d8ec54ccfbb5": {
      "content": "Execute Javascript    ${1:${code line 1}}    ${2:${code line 2}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Execute Javascript",
      "matches": {
        "ej": true
      }
    },
    "7ade207b-f3db-35a1-9630-faafb9821362": {
      "content": "function locale-time(${1:yyyymmdd},${2:locale-optional})$0",
      "doc": "format time; according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-locale-time",
      "matches": {
        "function locale-time": true
      }
    },
    "7adfdd73-3cd8-3aa8-a06e-514dbf5f6e1c": {
      "content": "<legend>${1:TARGET}</legend>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend": true
      }
    },
    "7ae670ab-2da0-30bc-9774-11c47aacf0e4": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tRIGHT JOIN ${3:tableName2}\n\tON ${4:match};",
      "doc": "Right Join",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "rjoin",
      "matches": {
        "rjoin": true
      }
    },
    "7aefa5b0-3f25-3d16-9236-b2e400ee4342": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch(${2:Exception} ${3:e}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "7af31597-e618-33c8-806e-39f883485b58": {
      "content": "@param ${1:#:var} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "7aff06cb-720f-3a84-8045-4f7357c7077d": {
      "content": "border-right-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      }
    },
    "7b0122b6-aa6d-37d2-8a75-5268e66afe6c": {
      "content": "{% schema %}\n\t{\n\t\t$1\n\t}\n{% endschema %}",
      "doc": "Schema tag: schema",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag schema",
      "matches": {
        "schema": true
      }
    },
    "7b01b80a-9278-3796-ac77-008a1cb814ab": {
      "content": "$.isPlainObject(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isobj": true
      }
    },
    "7b0359df-1635-3422-92a1-0810af48a7ee": {
      "content": "(doseq [${1:elem} ${2:coll}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doseq": true
      }
    },
    "7b061f50-255d-3a7e-bf00-9cdec7353f09": {
      "content": "${1:#:NAME}(${2:#:Args}): ${3:#:TYPE} {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "method": true
      }
    },
    "7b0686c6-98d1-3264-a29c-89f534ef6685": {
      "content": "font-stretch expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      }
    },
    "7b0a674b-4b42-3032-9727-76e810e7c6bb": {
      "content": "orphans: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      }
    },
    "7b117ddf-424d-3f40-9fb6-f771ea7b0327": {
      "content": "number.max()",
      "doc": "number.max(limit: number | Ref, message?: string | function): Schema\n\nSet the maximum value allowed. The ${max} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-max",
      "matches": {
        "yup number max": true
      }
    },
    "7b14af2f-368e-36b2-9dae-28b352b1fdb7": {
      "content": "guard let ${1} = ${2} else {\n    ${0:TARGET}\n}\n${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "guard let ... else { ... }",
      "matches": {
        "guard": true
      }
    },
    "7b18318b-c5d8-3ae8-89a3-068f7038c853": {
      "content": "functional",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "functional",
      "matches": {
        "functional": true
      }
    },
    "7b203770-fd1c-3105-b8ba-5bb02c0cf603": {
      "content": "(${1:a}, ${0:b})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup": true
      }
    },
    "7b243d0f-70ff-3bf6-a202-52a61be50383": {
      "content": "each_index { |${1:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eai": true
      }
    },
    "7b2c9a99-3513-3294-935c-bbd76977fdfe": {
      "content": "(${1:#:condition}) ? ${2:#:a} : ${3:#:b}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conditional": true
      }
    },
    "7b2d10f1-71bb-341a-b9e1-705f29240ea9": {
      "content": "text-transform: uppercase;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      }
    },
    "7b2fd6ca-f94d-3ff9-932b-0d5c2e4dd202": {
      "content": "v-bind$1=\"${2}\"",
      "doc": "Expects: any (with argument) | Object (without argument)",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-bind",
      "matches": {
        "vBind": true
      }
    },
    "7b306cf7-570f-32ee-8dbb-2d675a3e83b9": {
      "content": "import ${2:moduleName} from '${1:module}';$0",
      "doc": "Imports entire module statement in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "imp": true
      }
    },
    "7b33228d-3210-3668-a956-144be971ac04": {
      "content": "<h3>$1</h3>$2",
      "doc": "HTML - Defines header 3",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h3",
      "matches": {
        "h3": true
      }
    },
    "7b357eb4-4fa6-38e6-8f6d-58296f988dad": {
      "content": "notFoundIfNull(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rnfin": true
      }
    },
    "7b3a2f08-a612-37d8-8fed-48e00ea78151": {
      "content": "$this->db->delete(${1:table});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_db_truncate": true
      }
    },
    "7b3af954-5b15-34e5-b528-001aa7f2e51d": {
      "content": "shadowOffset: ${1},",
      "doc": "shadowOffset",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "shadowOffset",
      "matches": {
        "sha": true
      }
    },
    "7b40070c-5a07-3bcc-ba2e-251e20e52093": {
      "content": "sub ${1:#:function_name} {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "7b40a390-6f1c-3df3-897a-48445ef166d4": {
      "content": "case ${1} do\n\t${2} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "7b485a5c-36f3-3b28-a089-7dc841d72de2": {
      "content": "-> { $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert lambda arrow",
      "matches": {
        "->": true
      }
    },
    "7b48a7f7-23e8-39f7-b4c1-2253df139d50": {
      "content": "class ${1:MODEL_NAME}DetailView(DetailView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Detail View",
      "matches": {
        "detailview": true
      }
    },
    "7b4bfa87-22af-3f3e-8ce9-8bf8ac442c9d": {
      "content": "@moduledoc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "moduledoc false",
      "matches": {
        "mdocf": true
      }
    },
    "7b4df6a0-c0c0-3c69-a8c8-2b3f7c60ba53": {
      "content": "impl$4 ${1:Type/Trait}${2: for ${3:Type}}${4:<${5:T}>} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct/Trait implementation",
      "matches": {
        "impl": true
      }
    },
    "7b4ec2b9-c405-3ba1-853f-029ad1a0ad30": {
      "content": "number.integer()",
      "doc": "number.integer(message?: string | function): Schema\n\nValidates that a number is an integer.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-integer",
      "matches": {
        "yup number integer": true
      }
    },
    "7b52755a-524e-321d-b6be-2de8e2e8e91b": {
      "content": "<${1:elementName}>\n\t{$TM_SELECTED_TEXT}\n</${1}>",
      "doc": "an element",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "jsx element wrap selection",
      "matches": {
        "jsx wrap selection with element": true
      }
    },
    "7b55bfb8-0567-34be-9cc6-51341c6fb187": {
      "content": "| stylesheet_tag",
      "doc": "HTML filter: stylesheet tag",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter stylesheet tag",
      "matches": {
        "stylesheet_tag": true
      }
    },
    "7b5debf6-2310-3b55-8be2-fb09785fef07": {
      "content": "do for ${1:#:iter} {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "do for <iter> {...}",
      "matches": {
        "do": true
      }
    },
    "7b5e6d12-0087-343a-be81-fa8d185c6918": {
      "content": "${1:FIELDNAME} = forms.ModelChoiceField($2)",
      "doc": "ModelChoiceField (fmochoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fmochoice",
      "matches": {
        "fmochoice": true
      }
    },
    "7b61551b-f468-3898-88e8-503e00b7c8b8": {
      "content": "std::unordered_multimap<${1:Key}, ${2:T}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ummap": true
      }
    },
    "7b63becd-f1c4-32ce-8029-5ef5419cbe4c": {
      "content": "printNum(${1:#:level}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pn": true
      }
    },
    "7b681488-bf56-3d8e-88cc-8131a96c775f": {
      "content": "floor($1)$0",
      "doc": "floor",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "floor",
      "matches": {
        "floor": true
      }
    },
    "7b6fd9e4-bfdc-32cc-8218-388035be9695": {
      "content": "(${1:Class} ${2:a}) => $2",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Type constraint",
      "matches": {
        "=>": true
      }
    },
    "7b6ff63a-31bc-3042-969f-cf124b8eb495": {
      "content": "cy.request({\n\tmethod: '${1:METHOD}',\n\turl: '${2:url}',\n\tbody: ${3:body}\n});",
      "doc": "Make an HTTP request.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-request",
      "matches": {
        "cypress request": true
      }
    },
    "7b72f050-1545-3548-a97b-a369677bf5b2": {
      "content": "_.forIn(${object}, ${iteratee})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.forIn(new Foo, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\nIterates over own and inherited enumerable string keyed properties of an\nobject and invokes `iteratee` for each property. The iteratee is invoked\nwith three arguments: (value, key, object). Iteratee functions may exit\niteration early by explicitly returning `false`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-forin",
      "matches": {
        "lodash forin": true
      }
    },
    "7b7a0059-0d24-3470-a665-0f92ef6cf078": {
      "content": "style(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "style conventional commit",
      "matches": {
        "style": true
      }
    },
    "7b83c26c-0a5c-3b46-9013-bf13b2657ab8": {
      "content": "continue;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "continue (cont)",
      "matches": {
        "cont": true
      }
    },
    "7b92a55c-0d39-3202-89f0-f914bc6512a0": {
      "content": "text-decoration line-through",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:l": true
      }
    },
    "7b9af0ad-e5c5-3d7b-a8c2-b9cb8402c055": {
      "content": "border-left-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      }
    },
    "7b9c69b1-fab9-3d0c-8ca9-3f86b094925c": {
      "content": "${1:router}.onError($2)$0",
      "doc": "router.onError()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerOnError",
      "matches": {
        "routerOnError": true
      }
    },
    "7b9cd604-7552-3dd0-8a0b-0ef000a3f8a5": {
      "content": "=${1:name}(${2})\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      }
    },
    "7b9e70dd-da30-3cdd-ba24-c9807959e531": {
      "content": "_.differenceBy(${array}, ${values}, ${iteratee})",
      "doc": "_.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n// => [1.2]\n\n// The `_.property` iteratee shorthand.\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n// => [{ 'x': 2 }]\n\nThis method is like `_.difference` except that it accepts `iteratee` which\nis invoked for each element of `array` and `values` to generate the criterion\nby which they're compared. The order and references of result values are\ndetermined by the first array. The iteratee is invoked with one argument:\n(value).\n\n**Note:** Unlike `_.pullAllBy`, this method returns a new array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-differenceby",
      "matches": {
        "lodash differenceby": true
      }
    },
    "7ba122b2-3243-395f-8604-6ebce0cf0a46": {
      "content": "resize vertical",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      }
    },
    "7baeeda2-baa1-35d4-a641-861cefb41870": {
      "content": "@startuml\nAlice -> Bob\nBob -> Alice\n@enduml",
      "doc": "Simple example to get started with PlantUML",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Example",
      "matches": {
        "example": true
      }
    },
    "7bb65b1c-7d89-3e98-9a27-de4eeabfc158": {
      "content": "useEffect(() => {\n\t$1\n\n\treturn () => {\n\t\t$2\n\t}\n}, [${3:dependencies}])$0",
      "doc": "React useEffect() hook with return statement",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useEffect with return",
      "matches": {
        "uer": true
      }
    },
    "7bb76f62-5626-3669-8012-5c02ef009846": {
      "content": "return ${0:this}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return this",
      "matches": {
        "rt": true
      }
    },
    "7bbb1a28-8360-3ceb-a1a8-1769e2eb7bb0": {
      "content": "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}])$0",
      "doc": "React useMemo() hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useMemo",
      "matches": {
        "ume": true
      }
    },
    "7bc10e32-4844-3368-be99-688f58f0bb4f": {
      "content": "validates_inclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not included in the list}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of if",
      "matches": {
        "viif": true
      }
    },
    "7bcd2c72-9c4f-306d-8cf7-505c93745c7a": {
      "content": "defer ${0:func}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer",
      "matches": {
        "df": true
      }
    },
    "7bcf2d2e-8b8f-3afd-ae11-a6fb1365a242": {
      "content": "until [[ ${1:condition} ]]; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      }
    },
    "7bd1ded0-02f5-358c-b3bb-52c5b1cad111": {
      "content": "(if ${1}\n\t(begin\n\t\t${2})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifb": true
      }
    },
    "7bd48d92-b505-38b6-97d8-338c43f5af6d": {
      "content": "export const ${1:action} = createAction('[${2:Source}] ${3:Event}', props<{${4:key}: ${5:type}}>());",
      "doc": "Creates an NgRx Action with Props",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Action w/ Props",
      "matches": {
        "a-ngrx-create-action-props": true
      }
    },
    "7bdd1cb7-01fe-3be6-b971-58ef65d449e3": {
      "content": "instance ${1:Monoid} ${2:Type} where\n\t${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inst": true
      }
    },
    "7bdd4351-e5ff-3119-8366-de6c239f6c02": {
      "content": "use JMS\\SecurityExtraBundle\\Annotation\\Secure;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use JMS\\..\\Secure",
      "matches": {
        "usesecure": true
      }
    },
    "7be1436f-d9f6-3ecf-bff7-e4dfb50d8343": {
      "content": "${1:FIELDNAME} = models.SlugField($2)",
      "doc": "SlugField (mslug).\n\nA slug is a short label for something, containing only letters, numbers, underscores or hyphens. They’re generally used in URLs.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mslug",
      "matches": {
        "mslug": true
      }
    },
    "7be32bde-4b05-3411-ba3a-304aeaaff7bf": {
      "content": "Url:templatePath();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_templatepath": true
      }
    },
    "7bf01a3b-8c7e-3029-93a8-805678f8445c": {
      "content": "admin.site.register($1, $1Admin)",
      "doc": "register the model class providing a ModelAdmin description",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "registermadmin",
      "matches": {
        "registermadmin": true
      }
    },
    "7bf0f0fa-31d3-39e7-80e5-aea3ae395d7b": {
      "content": "{% layout none %}",
      "doc": "Theme tag: layout none",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag no layout",
      "matches": {
        "layoutnone": true
      }
    },
    "7bf2d2b2-9e26-3b76-b537-769d74ae0f15": {
      "content": "\\\\left[ ${0:${VISUAL}} \\\\right]",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left[ right]",
      "matches": {
        "lr[": true
      }
    },
    "7bf3bb31-644d-30bc-8047-37a23a0baf9c": {
      "content": "_.drop(${array}, ${n})",
      "doc": "_.drop([1, 2, 3]);\n// => [2, 3]\n\n_.drop([1, 2, 3], 2);\n// => [3]\n\n_.drop([1, 2, 3], 5);\n// => []\n\n_.drop([1, 2, 3], 0);\n// => [1, 2, 3]\n\nCreates a slice of `array` with `n` elements dropped from the beginning.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-drop",
      "matches": {
        "lodash drop": true
      }
    },
    "7bf6512c-2275-33e1-bb2c-542fbe5c4748": {
      "content": "subroutine ${1:name}($2)\n\t${0}\nend subroutine $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "7bfa92a0-64a7-310c-acf6-c41de6e7aa2a": {
      "content": "function integer(${1:number})$0",
      "doc": "greatest integer value that is less than or equal to number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer",
      "matches": {
        "function integer": true
      }
    },
    "7bfc334b-d3b9-303a-9be4-7daf90b246b1": {
      "content": "open(unit = ${1:fp}, file = ${2:filename}, status = ${3:unknown}, iostat = ${4:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "open": true
      }
    },
    "7bfd14c3-86ec-3682-8f95-972290d93c92": {
      "content": "IBOutlet ${1}${2: *}${3};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "IBOutlet",
      "matches": {
        "ibo": true
      }
    },
    "7bfed4a2-e03e-3ca0-a9b8-c79435c1437a": {
      "content": "function ${1:#:function_name}(${2:#:argument}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "func",
      "matches": {
        "function": true
      }
    },
    "7c00bf7b-1aff-322f-a4bd-a41c41c09946": {
      "content": "$this->assertTrue(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertTrue($a)",
      "matches": {
        "ast": true
      }
    },
    "7c083d8c-a8a4-30dd-89a6-b41873f740ae": {
      "content": "componentWillMount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillMount",
      "matches": {
        "componentWillMount": true
      }
    },
    "7c0c59db-4b42-36ab-aed8-ecbd8fbe2e12": {
      "content": "const [ ${2:prop} ] = ${1:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const statement from array destructuring",
      "matches": {
        "cad": true
      }
    },
    "7c25883c-7be5-3f44-889f-fc8c4135a5a7": {
      "content": "using ${1:package} as ${2:name}",
      "doc": "Code snippet for using a package and rename.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "using as",
      "matches": {
        "as": true,
        "us": true,
        "using": true
      }
    },
    "7c2686b9-f7a3-37e9-9a7c-d6b9124026f8": {
      "content": "<?php if ($${1:var}): ?>\n\t${0:${VISUAL}}\n<?php endif ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?i": true
      }
    },
    "7c27ebaf-e9ed-345e-aa04-079c43140e14": {
      "content": "if err != nil {\n\tt.Fatal(err)\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error test fatal ",
      "matches": {
        "errt": true
      }
    },
    "7c2f74dc-64fe-397e-9b2a-24fecdaafcfe": {
      "content": "resize: both;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      }
    },
    "7c30e9a8-fee2-31c1-add9-87c614be1c2a": {
      "content": "school = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "school": true
      }
    },
    "7c30f8cf-9f6c-3cf7-a6c5-ca09b6ad3858": {
      "content": "struct ${1:Name} {\n\n\t$0\n}",
      "doc": "struct declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "7c3351fb-3d9d-3846-ae0d-78de091f4ccd": {
      "content": "place-content ${1} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      }
    },
    "7c392ebd-c215-35ec-af3e-aadf70b7428c": {
      "content": "test.todo('${1:should }');",
      "doc": "creates a test placeholder",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-todo",
      "matches": {
        "jest test todo": true,
        "testt": true
      }
    },
    "7c3c67d8-8f58-3269-aca9-dd0ec85c7eaf": {
      "content": "add_test(${1:ATestName} ${0:testCommand --options})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "7c406aa1-db40-3e2c-85ab-376ab08b8582": {
      "content": "<xsl:if test=\"${1:test}\">${2}\n</xsl:if>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7c413848-208e-3913-a6bd-4f7687b1206d": {
      "content": "str_replace(${1:search}, ${2:replace}, ${3:subject})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "str_replace",
      "matches": {
        "sr": true
      }
    },
    "7c4418cb-14bd-3041-a784-226691f21d6a": {
      "content": "/**\n * ${4:#:undocumented function}\n *\n * @return ${5:void}\n * @author ${6}\n **/\n${1}function ${2}(${3});${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_interface_function": true
      }
    },
    "7c45bbb6-2d68-3209-822d-6f6c2f758a84": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", type: ${0::rxml}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rit": true
      }
    },
    "7c48f505-b2b5-334d-84c7-108926456683": {
      "content": "\\$${1:arrayName} = array('$2' => $3${4:,} $0);",
      "doc": "Array initializer",
      "filetype": "php",
      "grammar": "lsp",
      "label": "$… = array (…)",
      "matches": {
        "array": true
      }
    },
    "7c4eedba-902c-3320-a93b-b7f1983db2d9": {
      "content": "this.setState((state, props) => { return { $0 }})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-set-state-func",
      "matches": {
        "react component setstate func": true,
        "ssf": true
      }
    },
    "7c53d252-0ced-3a30-b815-0f782fe8f369": {
      "content": "<c:remove var=\"${1}\" scope=\"${0:page}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cremove": true
      }
    },
    "7c54d3de-e99c-3d40-828c-0c6c85ce3512": {
      "content": "constructor(props) {\n\tsuper(props)\n\n\tthis.state = {\n\t\t $0\n\t}\n}",
      "doc": "Adds a default constructor for it('', () => {})the class that contains props as arguments",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-constructor",
      "matches": {
        "rconst": true,
        "react class constructor": true
      }
    },
    "7c577654-93fc-3bdd-abf8-91c61bf2eeb7": {
      "content": "module.exports = {\n\t${1:member}\n};",
      "doc": "module exports object",
      "filetype": "base",
      "grammar": "lsp",
      "label": "module-exports-object",
      "matches": {
        "base module exports object": true
      }
    },
    "7c5841f5-447f-363f-bb4d-237f4fb2c4ac": {
      "content": "${1:obj}.select(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "7c5c41c8-85fa-3728-8732-fe00b37ea6a0": {
      "content": "word-wrap: ${1|break-word,break-spaces,normal|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "word-wrap",
      "matches": {
        "ww": true
      }
    },
    "7c698507-fc89-3d20-9f96-b0fb9eb6b592": {
      "content": "console.count(${1:first})",
      "doc": "Writes the the number of times that count() has been invoked at the same line and with the same label",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleCount",
      "matches": {
        "cco": true
      }
    },
    "7c6be7c7-7772-34ab-9840-6674ef070f1e": {
      "content": "if (${1}) {\n\t${2}\n}\nelsif (${3}) {\n\t${4:# elsif...}\n}\nelse {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "7c727d56-bc4c-372f-91d3-e5efb52b652d": {
      "content": "setup_all do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setupa": true
      }
    },
    "7c72aaf1-a1d9-3ff6-aa53-224566aa2efb": {
      "content": "${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prevu": true
      }
    },
    "7c72f50a-461b-3541-a072-9dfd195f0289": {
      "content": "public static ${1:void} ${2:name}(${3}) {\n\t$0\n}",
      "doc": "public static method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Public static method",
      "matches": {
        "public_static_method": true
      }
    },
    "7c74fee3-757a-3aa7-a302-feed1c2c95a6": {
      "content": "help: ## Prints help for targets with comments\n\t@cat $(MAKEFILE_LIST) | grep -E '^[a-zA-Z_-]+:.*?## .*$$' | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $\\$1, $\\$2}'\n${0}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "help": true
      }
    },
    "7c775298-a84d-3d3b-8a3f-8291295a4f3f": {
      "content": "_.isBoolean(${value})",
      "doc": "_.isBoolean(false);\n// => true\n\n_.isBoolean(null);\n// => false\n\nChecks if `value` is classified as a boolean primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isboolean",
      "matches": {
        "lodash isboolean": true
      }
    },
    "7c7bd434-3d8d-399c-89f7-fde5ee1fb8c4": {
      "content": "_.isInteger(${value})",
      "doc": "_.isInteger(3);\n// => true\n\n_.isInteger(Number.MIN_VALUE);\n// => false\n\n_.isInteger(Infinity);\n// => false\n\n_.isInteger('3');\n// => false\n\nChecks if `value` is an integer.\n\n**Note:** This method is based on\n[`Number.isInteger`](https://mdn.io/Number/isInteger).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isinteger",
      "matches": {
        "lodash isinteger": true
      }
    },
    "7c820da0-a558-38ba-a8a6-c8084bc06bb0": {
      "content": "image(${1:img}, ${2:x}, ${3:y}${4:, }${5:width}${6:, }${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      }
    },
    "7c8ae766-1b84-309c-be22-939c31c60046": {
      "content": "{%- case ${1:variable} -%}\n\t{%- when ${2:condition} -%}\n\t\t${3}\n\t{%- else -%}\n\t\t${0}\n{%- endcase -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case-": true
      }
    },
    "7c9bc1b7-f56b-3f91-a476-5ac0725b77ad": {
      "content": "${1:promise}.then((${2:value}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise.then",
      "matches": {
        "pt": true
      }
    },
    "7c9bedfb-173d-39c2-9ea2-7799d41ebb48": {
      "content": "NO-LOCK",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nl": true
      }
    },
    "7ca17dbf-df36-3aa3-a125-f3353c48791e": {
      "content": "${1:FIELDNAME} = SplitArrayField()",
      "doc": "SplitArrayField (fsplitarray).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fsplitarray",
      "matches": {
        "fsplitarray": true
      }
    },
    "7ca4e8fa-82dc-397f-99da-29e0ab4f2861": {
      "content": "beforeEach(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "before each (js)",
      "matches": {
        "bef": true
      }
    },
    "7ca7ba64-a4f2-3924-8e00-8d367eba7e0a": {
      "content": "package ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package",
      "matches": {
        "pac": true
      }
    },
    "7ca98981-881a-3902-bf4c-b1aab484728d": {
      "content": "$.trim('${1:string}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eltrim": true
      }
    },
    "7caf7417-dbf6-3e04-ae35-3cd812b3543c": {
      "content": "considering ${1:#:case}\n\t${0:TARGET}\nend considering",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "con": true
      }
    },
    "7cb16597-de7f-3ccb-807e-b9697d25d334": {
      "content": "{% autoescape ${off} %}\n  \n{% autoescape %}",
      "doc": "autoescape tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "autoescape",
      "matches": {
        "autoescape": true
      }
    },
    "7cb269aa-e5d6-35cc-8700-48214759b4a5": {
      "content": "getters",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getters",
      "matches": {
        "getters": true
      }
    },
    "7cb57816-f3cc-3a3a-95c4-17ff5b20caa9": {
      "content": "background: #${1:fff} url(${2}) ${3:0} ${4:0} ${5:no-repeat};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg+": true
      }
    },
    "7cb626c0-e563-32f6-80b1-8ae8a3a798e8": {
      "content": "assert_not_equal ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asne": true
      }
    },
    "7cb6a11e-638b-3b53-89de-dbeb8bc17e2e": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplateUrl: '${2:name}.component.html'\n})\n\nexport class ${3:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }$0\n}",
      "doc": "Angular component",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-component",
      "matches": {
        "a-component": true,
        "angular component": true
      }
    },
    "7cb920f4-afaa-393e-bac9-0984e68df310": {
      "content": "try {\n    ${0:TARGET}\n} catch {\n    ${1}\n} finally {\n    ${2}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch {} finally {}",
      "matches": {
        "try_catch_n_finally": true,
        "try_cnf": true
      }
    },
    "7cb9d0a8-ef25-3eda-a55d-f2673eb940f5": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdown": true
      }
    },
    "7cbba853-7a79-37b6-b063-042dafd07e55": {
      "content": "export ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "7cbc7afb-db7b-3281-b881-90c3b52a5ed4": {
      "content": "while (${1:#:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "while": true
      }
    },
    "7cbe4ac5-b30b-381f-a2f6-1ebe7dda3c6b": {
      "content": "floor(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floor": true
      }
    },
    "7cc55dcc-c8fc-3485-9e6d-c9bbb2b00e23": {
      "content": "{#await ${1:promise}}\n\t${2: <!-- content when promise is pending -->}\n{:then ${3:value}}\n\t${4: <!-- content when promise was fulfilled -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-then-block",
      "matches": {
        "svawait": true,
        "svelte await then": true
      }
    },
    "7cd4da3b-8b1c-3dc9-b342-c5f8ca07db88": {
      "content": "visibility hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      }
    },
    "7ce10e61-a803-3229-ac1e-494fd20bf6d1": {
      "content": "case ${1}:\n    ${2:TARGET}\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "7ce38e39-3ecf-388f-8873-6adbffae0d05": {
      "content": "justify-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      }
    },
    "7ce572d6-7a1f-3944-8c0c-2b284bd7c025": {
      "content": "cursor: ${1:default/auto/crosshair/pointer/move/*-resize/text/wait/help};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "cursor: type (cursor)",
      "matches": {
        "cursor": true
      }
    },
    "7ce618b1-cc1f-3ea9-b9ae-df13e0972cd0": {
      "content": "bool ${NAME} = $3;",
      "doc": "bool aBool = true;\nbool bBool = bool(aInt);\nbool cBool = bool(aFloat);\n\nThe data type bool is used for boolean values (true or false).\n\nSide note: Implicit type conversions are not supported. Type conversions can be done using constructors as shown in the second and third example.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "bool",
      "matches": {
        "bool": true
      }
    },
    "7ceb75c6-44e2-3cf2-ab9e-2e4f98a86f2c": {
      "content": "${1:obj}.mouseleave(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mleave": true
      }
    },
    "7cee4cab-3e86-3c32-b70d-97d60d7d34a9": {
      "content": "$this->db->select(\"${1:id, ...}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-select": true
      }
    },
    "7cee91f2-2609-37bf-9ba0-c6047f2ba865": {
      "content": "border-style: dot-dot-dash;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      }
    },
    "7cf5927d-0fd4-3f88-9e17-fdf3f9ffd835": {
      "content": "${1:callbacks}.add(${2:callbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cadd": true
      }
    },
    "7cfce6bf-b1c0-3c17-86ee-d01626010564": {
      "content": "Yii::app()->clientScript->registerCssFile('${0:file}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregcf": true
      }
    },
    "7d03c6bf-5fb9-3ea4-808e-ab68945c49b6": {
      "content": "after idle ${0:script}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afi": true
      }
    },
    "7d04e226-476d-35ab-8a5a-b17f139f7962": {
      "content": "font ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      }
    },
    "7d0a6ce2-3cd7-3f9f-a9e1-4488e3b5ad54": {
      "content": "from .managers import $1QuerySet",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "fmai",
      "matches": {
        "fmai": true
      }
    },
    "7d11cdf2-a31f-3d1d-ba7f-026170b96a1d": {
      "content": "| round: ${round:0}",
      "doc": "Math filter: round",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter round",
      "matches": {
        "round": true
      }
    },
    "7d13b639-4d31-3ff2-851f-64753ecc0201": {
      "content": "text-height: text-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      }
    },
    "7d140324-5c02-3174-8efd-38bffc7ecfcd": {
      "content": "if (${1:condition}) {\n   ${2:selected}\n} else {\n   \n}",
      "doc": "Code snippet for 'if-else' conditional block",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "if-else block",
      "matches": {
        "ifelse": true
      }
    },
    "7d151dd0-a865-3d58-9db7-79b360027195": {
      "content": "console.log ${0}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "7d15ae2e-3374-39ca-9c8b-d5b7a9146821": {
      "content": "${1:public }function ${2:#:FunctionName}(${3})\n{\n\t${4:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "public function () {}",
      "matches": {
        "function": true
      }
    },
    "7d2b337e-da70-38b9-b2eb-0f1e5a044905": {
      "content": "<% if ${1} %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7d2cd5b1-1d75-357f-b080-fff1ede6c0b5": {
      "content": "background-origin: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:cb": true
      }
    },
    "7d390736-cb6f-39bc-8693-1eae5d27394c": {
      "content": "<#assign ${1:variable_name} = ${0:value${VISUAL}} />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#assign variable_name = value />",
      "matches": {
        "ass": true
      }
    },
    "7d3ba529-5b56-39f3-b0dc-e2160e3b0f70": {
      "content": "{% cycle ${1:val1} ${2:val2} ${3:as ${4}} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cycle": true
      }
    },
    "7d3f8c5c-8a32-39b4-b85a-99f9a7646a91": {
      "content": "<h4 id=\"${1}\">${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4#": true
      }
    },
    "7d45b1c2-5926-3304-b0ff-61e7fdf93923": {
      "content": "echo CHtml::activeHiddenField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhahf": true
      }
    },
    "7d4bb0ad-2a36-36b4-9284-853c93276729": {
      "content": "text-emphasis: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      }
    },
    "7d50414b-167f-3a36-b13e-435eea7f5225": {
      "content": "$1::-moz-selection,\n$1::selection {\n\tcolor: ${2:inherit};\n\tbackground: ${3:inherit};\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "selection",
      "matches": {
        "selection": true
      }
    },
    "7d58f82e-4d3f-39f7-8fcd-395b98c2477e": {
      "content": "${1:callbacks}.disable()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cdis": true
      }
    },
    "7d62c73d-f407-39aa-b324-a3fc1d0af5e5": {
      "content": "center:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      }
    },
    "7d64fad9-0c91-35b0-bc10-6b51ea71ab1f": {
      "content": "<span class=\"${1}\">${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span.": true
      }
    },
    "7d69e693-9926-3e2f-9425-3f2492153371": {
      "content": "<style>\n$1\n</style>",
      "doc": "HTML - Defines a style definition",
      "filetype": "html",
      "grammar": "lsp",
      "label": "style",
      "matches": {
        "style": true
      }
    },
    "7d6e26e1-8c5a-378f-938c-07c306a5e3f2": {
      "content": "round(precision=${1:0}, method=${2:'common|ceil|floor'})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "round number",
      "matches": {
        "round": true
      }
    },
    "7d6fdd35-0c16-3a16-8a9c-6a22b16c6959": {
      "content": "#include <iostream>\n\nint main(int argc, char* argv[])\n{\n    std::cout << \"hello, world!\" << std::endl;\n    return 0;\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "#include<iostream> int main...",
      "matches": {
        "helloworld": true
      }
    },
    "7d726743-e975-3551-b503-9600952a4ef5": {
      "content": "background-position-x: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      }
    },
    "7d742863-392c-30ab-bddd-5db922d52d72": {
      "content": "overflow-y: visible",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      }
    },
    "7d77ffcd-f9b4-369a-9329-6bc8dc547443": {
      "content": "alias ${1:b} = ${2:a};\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      }
    },
    "7d7debd9-d0c9-3553-bf7c-91e817f18824": {
      "content": "justify-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      }
    },
    "7d815cd5-d345-3860-a5b4-bacb665f6ed7": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      }
    },
    "7d846f64-009d-3ac5-b89d-2619d36ac735": {
      "content": "import { connect } from 'react-redux'\nimport React, { Component } from 'react'\n\ntype Props = {}\n\ntype State = {}\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n  state = {}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})",
      "doc": "Creates a React component class with connected redux and ES7 module system and TypeScript interfaces",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactClassComponentRedux",
      "matches": {
        "tsrcredux": true
      }
    },
    "7d8cbc83-30ae-3e88-988b-111a7b86e35b": {
      "content": "right: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      }
    },
    "7d8fc9c4-6474-3376-93de-4683811a022c": {
      "content": "border-left-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      }
    },
    "7d929598-f5cb-39dd-9f69-36baeabce9ff": {
      "content": "borderColor: ${1},",
      "doc": "borderColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderColor",
      "matches": {
        "bor": true
      }
    },
    "7d973b97-0693-3092-8295-cdff449a0209": {
      "content": "el",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "el",
      "matches": {
        "el": true
      }
    },
    "7d9b4479-4cf7-3ca0-adcb-a72d7f987cb3": {
      "content": "+ (${1:#:id})${0:#:method};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "InterfaceClassMethod",
      "matches": {
        "icm": true
      }
    },
    "7d9e4f79-b1e8-3a34-8539-3c3fb8ea082b": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-string",
      "matches": {
        "prop-types string": true,
        "pts": true
      }
    },
    "7da4eaca-2829-3a2b-996b-fa028fac7f42": {
      "content": "extends ${0:what}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      }
    },
    "7da7f7af-2c66-33ea-af84-aeefe505a6c4": {
      "content": "print(\"${1:string}\")",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "7daa5015-8672-3bfc-826f-01c6017cafd2": {
      "content": "| replace_first: '${1:target}', '${2:replace}'",
      "doc": "String filter: replace first",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter replace first",
      "matches": {
        "replace_first": true
      }
    },
    "7dadd5a4-f703-3720-8643-0e106ac460f9": {
      "content": "function ${1:name}(${2:arguments}) {\n\t${0}\n}",
      "doc": "named function",
      "filetype": "base",
      "grammar": "lsp",
      "label": "named-function",
      "matches": {
        "base function named": true
      }
    },
    "7db33978-fa17-3fe0-b3d5-5a8c124e128a": {
      "content": "1. ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert ordered item",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert ordered item",
      "matches": {
        "ordered item": true
      }
    },
    "7db82178-b518-352b-90d7-16956eadd555": {
      "content": "cursor: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      }
    },
    "7dba4492-9f15-3e84-9e93-a3c11429f577": {
      "content": "title = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title": true
      }
    },
    "7dbdb6a2-db09-3197-8574-d0fe142fdc9a": {
      "content": "PropTypes.number.isRequired",
      "doc": "Number prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      }
    },
    "7dc641e1-06d0-39e3-8914-6a78a642c337": {
      "content": "concat(${1:array1}, ${0:array2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "concat": true
      }
    },
    "7dc6b9f5-f05b-3d9d-a81c-cfa7a82af7ed": {
      "content": "DO${1: Clauses}:\n\t${0}\nEND.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "7dcb9464-5d97-3d6a-8ac2-a702c8346fbb": {
      "content": "always @(${1:/* sensitive list */}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      }
    },
    "7dcb9a9b-84e7-3dac-b0eb-d0991ac88346": {
      "content": "print(${0})",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "print",
      "matches": {
        "p": true
      }
    },
    "7dcbe1e9-d092-341b-834b-1855b7dbaf2f": {
      "content": "def __add__(self, other):\n\t${1:pass}\n\ndef __sub__(self, other):\n\t${2:pass}\n\ndef __mul__(self, other):\n\t${3:pass}\n\ndef __div__(self, other):\n\t${4:pass}\n\ndef __truediv__(self, other):\n\t${5:pass}\n\ndef __floordiv__(self, other):\n\t${6:pass}\n\ndef __mod__(self, other):\n\t${7:pass}\n\ndef __divmod__(self, other):\n\t${8:pass}\n\ndef __pow__(self, other):\n\t${9:pass}\n\ndef __lshift__(self, other):\n\t${10:pass}\n\ndef __rshift__(self, other):\n\t${11:pass}\n\ndef __and__(self, other):\n\t${12:pass}\n\ndef __xor__(self, other):\n\t${13:pass}\n\ndef __or__(self, other):\n\t${14:pass}\n\ndef __neg__(self):\n\t${15:pass}\n\ndef __pos__(self):\n\t${16:pass}\n\ndef __abs__(self):\n\t${17:pass}\n\ndef __invert__(self):\n\t${18:pass}\n\ndef __complex__(self):\n\t${19:pass}\n\ndef __int__(self):\n\t${20:pass}\n\ndef __long__(self):\n\t${21:pass}\n\ndef __float__(self):\n\t${22:pass}\n\ndef __oct__(self):\n\t${22:pass}\n\ndef __hex__(self):\n\t${23:pass}\n\ndef __index__(self):\n\t${24:pass}\n\ndef __coerce__(self, other):\n\t${25:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for emulating a numeric type",
      "matches": {
        "numeric": true
      }
    },
    "7dcde105-1749-3ab6-b233-b3f29aa55ef9": {
      "content": "border-style: double;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:db": true
      }
    },
    "7dd53ffb-7807-3c7a-818d-660eb54b8cb5": {
      "content": "export default function ${1:first}(${2:second}) {${3:third}}",
      "doc": "Export default named function",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportDefaultNamedFunction",
      "matches": {
        "ednf": true
      }
    },
    "7dd915f3-1c83-3913-b623-126be3245e3e": {
      "content": "overflow-x: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      }
    },
    "7ddab7a7-276c-3a7e-b41d-bab01046bc7d": {
      "content": "<% content_for :${1:head} do %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conf": true
      }
    },
    "7ddc2fb1-59bf-37f6-a80f-26944a004863": {
      "content": "render text: '${1:text to render}', layout: ${0:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rtlt": true
      }
    },
    "7deb6ca8-fe03-3895-af0a-c95fba8c62f5": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      }
    },
    "7ded83ac-f30d-3be7-8ad8-68af0c0d9d50": {
      "content": "$.isXMLDoc(${1:node})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isxml": true
      }
    },
    "7df001b4-b03e-3f1b-abd7-406fdb9bcad1": {
      "content": "<%= ${1:f}.radio_button :${2:attribute}, :${0:tag_value} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffrb": true
      }
    },
    "7df7d8dc-0e5a-39b7-80fd-a812d6a3136c": {
      "content": "# encoding: utf-8$0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert encoding comment",
      "matches": {
        "enc": true
      }
    },
    "7dfb0529-98ed-3071-9107-932bb9d41034": {
      "content": "display: block;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "display: block",
      "matches": {
        "disb": true
      }
    },
    "7dfd774c-178d-324a-b263-2fb1b30812df": {
      "content": "quantile(${1:x}, ${2:probs = ${3:seq(0, 1, 0.25)}}, ${4:na.rm = ${5:FALSE}}, ${6:names = ${7:TRUE}}, ${8:type = ${9:7}}, ${10:...})",
      "doc": "Quantile",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "qua",
      "matches": {
        "quantile": true
      }
    },
    "7e0a3552-0850-390f-af95-a092e48fb663": {
      "content": "display: -moz-inline-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      }
    },
    "7e177c80-6486-39d8-afb0-d2536f816087": {
      "content": "// https://eips.ethereum.org/EIPS/eip-2019\r\n// https://github.com/IoBuilders/fundable-token (example)\r\n// SPDX-License-Identifier: MIT\r\n/*\r\nAn extension to the ERC-20 standard token that allows Token wallet owners to request a wallet to be funded, by calling the smart contract and attaching a fund instruction string.\r\n\r\nToken wallet owners (or approved addresses) can order tokenization requests through blockchain.\r\nThis is done by calling the orderFund or orderFundFrom methods,\r\nwhich initiate the workflow for the token contract operator to either honor or reject the fund request.\r\nIn this case, fund instructions are provided when submitting the request,\r\nwhich are used by the operator to determine the source of the funds to be debited in order to do fund the token wallet (through minting).\r\n*/\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface IFundable /* is ERC-20 */ {\r\n    enum FundStatusCode {\r\n        Nonexistent,\r\n        Ordered,\r\n        InProcess,\r\n        Executed,\r\n        Rejected,\r\n        Cancelled\r\n    }\r\n    function authorizeFundOperator(address orderer) external returns (bool);\r\n    function revokeFundOperator(address orderer) external returns (bool) ;\r\n    function orderFund(string calldata operationId, uint256 value, string calldata instructions) external returns (bool);\r\n    function orderFundFrom(string calldata operationId, address walletToFund, uint256 value,\r\n                                        string calldata instructions) external returns (bool);\r\n    function cancelFund(string calldata operationId) external returns (bool);\r\n    function processFund(string calldata operationId) external returns (bool);\r\n    function executeFund(string calldata operationId) external returns (bool);\r\n    function rejectFund(string calldata operationId, string calldata reason) external returns (bool);\r\n\r\n    function isFundOperatorFor(address walletToFund, address orderer) external view returns (bool);\r\n    function retrieveFundData(address orderer, string calldata operationId) external view returns (address walletToFund,\r\n    uint256 value, string memory instructions, FundStatusCode status);\r\n\r\n    event FundOrdered(address indexed orderer, string indexed operationId, address indexed , uint256 value, string instructions);\r\n    event FundInProcess(address indexed orderer, string indexed operationId);\r\n    event FundExecuted(address indexed orderer, string indexed operationId);\r\n    event FundRejected(address indexed orderer, string indexed operationId, string reason);\r\n    event FundCancelled(address indexed orderer, string indexed operationId);\r\n    event FundOperatorAuthorized(address indexed walletToFund, address indexed orderer);\r\n    event FundOperatorRevoked(address indexed walletToFund, address indexed orderer);\r\n}",
      "doc": "Draft: EIP-2019: Fundable Token. An extension to the ERC-20 standard token that allows Token wallet owners to request a wallet to be funded, by calling the smart contract and attaching a fund instruction string.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc2019i",
      "matches": {
        "erc2019i-draft": true
      }
    },
    "7e1f2852-d3b4-3351-a973-d8eb3ef408a7": {
      "content": "import React, { memo } from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = memo(() => {\n  return (\n    <div>${1:first}</div>\n  )\n})\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Memo Function Component with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionMemoComponent",
      "matches": {
        "rmc": true
      }
    },
    "7e226e26-e06e-3698-af02-5d3ccd6edea9": {
      "content": "<kbd>${0}</kbd>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kbd": true
      }
    },
    "7e310c70-a1b8-3408-99e1-5b33403f7b22": {
      "content": "${1:FIELDNAME} = models.NullBooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "NullBooleanField",
      "matches": {
        "mnullbool": true
      }
    },
    "7e4271af-ca3b-324f-ada2-9225d39e1c16": {
      "content": "curve(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${6:z2}, ${7:x3}, ${8:y3}, ${9:z3}, ${10:x4}, ${11:y4}, ${0:z4});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "curve": true
      }
    },
    "7e484790-b236-3f86-80d1-e3716cf7247a": {
      "content": "dist(${1:x1}, ${2:y1}, ${3:z1}, ${4:x2}, ${5:y2}, ${0:z2});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "dist": true
      }
    },
    "7e4a5038-6b58-3fa3-976a-17d573582a06": {
      "content": "warning(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warning": true
      }
    },
    "7e4c2979-dc53-34b2-8672-815794d1f739": {
      "content": "ref=\"${1:reference}\"$0",
      "doc": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ref",
      "matches": {
        "ref": true
      }
    },
    "7e510590-7fcf-37d2-ba5e-1fc343b229ff": {
      "content": "<nuxt-link ${1|to,:to|}=\"$2\">$0</nuxt-link>",
      "doc": "This component is used to provide navigations between page components.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "nuxtLink",
      "matches": {
        "nuxtLink": true
      }
    },
    "7e518378-3cbf-3c12-8c6b-ed512e788202": {
      "content": "${1:FIELDNAME} = forms.SplitDateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SplitDateTimeField",
      "matches": {
        "fsdatetime": true
      }
    },
    "7e54536a-77a8-3c0e-9112-7cd875e2002c": {
      "content": "dictsort:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsort": true
      }
    },
    "7e5490fa-7e7d-3e80-9bc4-4971b7e442b7": {
      "content": "border-collapse ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      }
    },
    "7e5a2558-8649-3f35-a93f-a8085e65c53d": {
      "content": "margin: ${1:20px} ${2:0px} ${3:40px} ${4:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin: T R B L (margin)",
      "matches": {
        "margin": true
      }
    },
    "7e5b75a4-dfe5-3960-bc65-b7705480de44": {
      "content": "{:then ${1:value}}\n\t<!-- promise was fulfilled -->",
      "doc": "then block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-then-block",
      "matches": {
        "s-then-block": true
      }
    },
    "7e5ffadf-1937-3e32-a4e5-2c24af7127bc": {
      "content": "[routerLink]=\"['/${1:routePath}']\" routerLinkActive=\"${2:router-link-active}\" $0",
      "doc": "Angular routerLink",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrouterlink",
      "matches": {
        "a-routerlink": true,
        "angular ng router link": true
      }
    },
    "7e650c75-0e07-3e38-9aa9-7bdc608d3a7b": {
      "content": "class ${1:Model}Controller < ApplicationController\n\tbefore_action :find_${2:model}\n\n\t$0\n\n\tprivate\n\tdef find_$2\n\t\t@$2 = ${3:$1}.find(params[:id]) if params[:id]\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create controller class",
      "matches": {
        "clac": true
      }
    },
    "7e6575eb-49f3-389e-b3a5-aaed5f9991b7": {
      "content": "internal bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb&": true
      }
    },
    "7e6e55ff-6712-30e8-a922-aa8cb82fa0ef": {
      "content": "<#\n.SYNOPSIS\n\t${1:Short Description}\n.DESCRIPTION\n\t${2:Full Description}\n.PARAMETER ${3:Param1}\n\t${4: $3 usage}\n.EXAMPLE\n\t${5:Example}\n.NOTES\n\t${6:notes}\n.LINK\n\t${7:online help}\n#>",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "help": true
      }
    },
    "7e6fac2b-5772-32fe-8a54-0eccd3925d1b": {
      "content": "{{ head() }}\n$0",
      "doc": "head",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "head",
      "matches": {
        "head": true
      }
    },
    "7e785cb7-d91d-3945-b270-68bd0dd1be1c": {
      "content": "${1:value_key}:\nrbac:\n  create: true\nserviceAccount:\n  create: true\n  name:\nimagePullSecrets: []\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rbac_values": true
      }
    },
    "7e7b04e3-9a74-3d6e-8145-be7a1e2b3839": {
      "content": "padding ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "7e7f27a9-e126-3e45-a4a3-f2ea12118639": {
      "content": "border-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      }
    },
    "7e847b02-0e7d-37ab-ba06-6155d9afb26d": {
      "content": "case ${1:expression} of\n\t${2:pattern} ->\n\t\t${0:body};\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "7e9b9e91-2eb0-3ef4-95cd-caf0f8be29a0": {
      "content": "remove_column :${1:table_name}, :${0:column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrc": true
      }
    },
    "7e9c92d1-8c57-3afd-9769-f78deb9e12c0": {
      "content": "useCallback(\n  () => {\n    ${1:first}\n  },\n  [${2:second}],\n)",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "useCallback",
      "matches": {
        "useCallbackSnippet": true
      }
    },
    "7ea42cf0-b886-35d2-8d27-696e09a6f0ee": {
      "content": "background-position-y: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      }
    },
    "7eac3684-7f2f-3855-a444-d114e1c6167e": {
      "content": "\\$_GET['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "7eadccc4-4742-31c1-9ced-f2d8054dd214": {
      "content": "${1:obj}.css('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      }
    },
    "7eb0c02a-b153-32be-9073-514c5787a826": {
      "content": "filter progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      }
    },
    "7eb20a5a-c949-3e29-821f-27a930afa930": {
      "content": "#!/usr/bin/env python2\n# -*- coding: utf-8 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!2": true
      }
    },
    "7eb41652-4b0d-35e5-b046-c4d904775b89": {
      "content": ":${1:#:text}:\n: :\n: :\n: :",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "simple_table",
      "matches": {
        "table_simple": true
      }
    },
    "7eb62feb-5867-3f20-af8f-9905114cb210": {
      "content": "if ${1}\n\t${2:${VISUAL}}\nelse\n\t${0}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if ... else statement",
      "matches": {
        "ife": true
      }
    },
    "7eb7395f-a266-33d4-8bc4-7c3062394f15": {
      "content": "function ord(${1:char},${2:...})$0",
      "doc": "ordinal position in the program character set corresponding to char",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-ord",
      "matches": {
        "function ord": true
      }
    },
    "7ebd1727-d9f7-37da-8abd-eb03c763d40b": {
      "content": "attr_writer :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      }
    },
    "7ec38582-d1c5-3524-9907-847895f3fd08": {
      "content": "$_SERVER['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "S": true
      }
    },
    "7ec75061-b03e-3ff9-b2d4-38ac47f44aeb": {
      "content": "import React, { memo } from 'react'\n\nexport default memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})",
      "doc": "Creates a React Memo Function Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-function-memo-component",
      "matches": {
        "react component function memo": true,
        "rmc": true
      }
    },
    "7ed1604f-6390-306a-9b77-cf6b44cff941": {
      "content": "<style lang=\"sass\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with sass scoped",
      "matches": {
        "style_with_sass_scoped": true
      }
    },
    "7ed305ad-02bf-32a2-90be-69b4695eae4c": {
      "content": "text-shadow: ${1:0} ${2:0} ${3:0} #${4:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      }
    },
    "7ed5cee6-9b42-3351-99b2-c8f8a7bfad72": {
      "content": "console.info(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.info",
      "matches": {
        "ci": true
      }
    },
    "7ee3f071-09e5-3700-b679-8249b9c70fca": {
      "content": "${1:FIELDNAME} = serializers.DictField(child=${2})",
      "doc": "Django-rest Serializers ``DictField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF DictField",
      "matches": {
        "sdict": true
      }
    },
    "7ee63185-f77e-3929-901a-72413add38ea": {
      "content": "font-stretch: expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:e": true
      }
    },
    "7ee87b22-7987-38ac-ae90-2c1ace4b7e95": {
      "content": "if ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7ef0f1e9-7d14-3f6b-b899-5a5ccf6c9613": {
      "content": "Digest::SHA1.hexdigest(${0:string})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sha1": true
      }
    },
    "7ef132c6-12be-395e-951e-eaaac23b474a": {
      "content": "while ${1:condition} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      }
    },
    "7ef40fdd-d760-3dfe-ad43-56dbcaa0b5b5": {
      "content": "do |${1:v}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert do block with variables",
      "matches": {
        "dov": true
      }
    },
    "7ef63483-8a0f-3dbd-8f0f-df903ce384f6": {
      "content": "case ${1} is\n\twhen ${2} => ${3};${0}\nend case;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "7ef66ba8-5de6-30bb-92f7-67f0f10dd585": {
      "content": "var $1 = new sap.m.FlexBox({\n\t\t\tvisible : $2,\n\t\t\theight : $3,\n\t\t\twidth : $4,\n\t\t\tdisplayInline :$5,\n\t\t\tdirection :$6,\n\t\t\tfitContainer : $7,\n\t\t\trenderType : $8,\n\t\t\tjustifyContent :$9,\n\t\t\talignItems : $10,\n\t\t\titems:[]\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmflexbox": true
      }
    },
    "7effbb50-02e8-30c5-b777-62d5fb0a42e7": {
      "content": "set oldDelims to AppleScript's text item delimiters\nset AppleScript's text item delimiters to {\"${1:,}\"}\n${0:#:TARGET}\nset AppleScript's text item delimiters to oldDelims",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delim": true
      }
    },
    "7f05d4a3-71f5-3a14-beca-c02b9daa556b": {
      "content": "render partial: '${1:item}', object: ${0:@$1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpo": true
      }
    },
    "7f084a38-605f-3157-a712-d10299b03a6a": {
      "content": "align-self: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      }
    },
    "7f1c877a-f610-3db0-974d-7229e780d746": {
      "content": "Ada.Text_IO.Put_Line(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put_Line",
      "matches": {
        "putl": true
      }
    },
    "7f1c953f-fccd-308b-af43-1ecf44f148ac": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7f1f2637-1359-3bcc-a91d-555051d9fc8e": {
      "content": "${1:type}, intent(inout) :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intent": true
      }
    },
    "7f270b48-7fa0-322a-a1c3-98a1f99370bc": {
      "content": "<pre>\n\t${0}\n</pre>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      }
    },
    "7f28ea35-5a11-3f58-982f-e405122e373b": {
      "content": "def dispatch(self, request, *args, **kwargs):\n\treturn super(${1:CLASS_NAME}, self).dispatch(request, *args, **kwargs)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Dispatch View method",
      "matches": {
        "dispatch": true
      }
    },
    "7f2aca2f-b77a-383e-b7d5-0ae8530da130": {
      "content": "| capitalize }}",
      "doc": "String filter: capitalize",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter capitalize",
      "matches": {
        "capitalize": true
      }
    },
    "7f2d37d0-6bbd-30fe-a4eb-6a24a5f5ece1": {
      "content": "type ${1:name} struct {\n\t$0\n}",
      "doc": "Snippet for a struct declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "type struct declaration",
      "matches": {
        "tys": true
      }
    },
    "7f33d92a-dc23-3c4b-a800-afbdae4e9827": {
      "content": "for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "7f3abd80-1abe-36af-a143-b1dfed153cd2": {
      "content": "precision",
      "doc": "The keyword precision is used in conjunction with a precision qualifier and a data type to specify the default precision for that data type. The type has to be an integer or a floating point scalar or a vector or matrix based on these types.\nIn the vertex shader all variables are of highest precision by default. The default can be changed defining another default precision. In the fragment shader a precision qualifier has to be used when declaring a variable unless a default precision has been defined for the specific type.\n\nprecision highp float;\n\nThe actual range corresponding to a precision qualifier is dependent on the specific OpenGL ES implementation. Using a lower precision might have a positive effect on performance (frame rates) and power efficiency but might also cause a loss in rendering quality. The appropriate trade-off can only be determined by testing different precision configurations.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "precision",
      "matches": {
        "precision": true
      }
    },
    "7f3ad3b8-9264-3419-9fd0-ff38c6b61ea8": {
      "content": "redirect(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rr": true
      }
    },
    "7f3c1f7d-b7a2-355b-b547-5aa02229959a": {
      "content": "with (${1:#:target});\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wt": true
      }
    },
    "7f3eda47-1a89-3182-9946-551bfb7f0cb7": {
      "content": "trunc($2)",
      "doc": "find the nearest integer less than or equal to the parameter",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "trunc",
      "matches": {
        "trunc": true
      }
    },
    "7f482b5f-f2ef-320a-a3ef-360b009284b4": {
      "content": "shared_examples '${0:shared examples name}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert shared_examples",
      "matches": {
        "shared": true
      }
    },
    "7f4cdec6-98fe-36bb-a9f9-cbe0ab92c1a6": {
      "content": "<%= gettext(\"$0\") %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "gettext",
      "matches": {
        "gt": true
      }
    },
    "7f4cf651-b23d-322b-96bd-3168608fa76d": {
      "content": "return new Promise((resolve, reject) => {\n\t${0}\n});",
      "doc": "return Promise (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return-promise-es6-",
      "matches": {
        "base return promise": true
      }
    },
    "7f4dc194-19ed-319c-955d-da09701d1ad7": {
      "content": "if (${1:true}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7f523959-5c71-3a9a-87b8-c2c2c14318b2": {
      "content": "extern crate ${1:name};",
      "doc": "extern crate …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "extern-crate",
      "matches": {
        "extern-crate": true
      }
    },
    "7f54f5ca-8805-32e4-96e9-11b754ef305e": {
      "content": "border-style: ${1|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-style",
      "matches": {
        "bors": true
      }
    },
    "7f6a2d3a-db59-367b-89d5-8f07f5737404": {
      "content": ".. warning::\n\t${0:attention!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "war:": true
      }
    },
    "7f6e09a8-b74a-3bcd-ae87-b9c78583e222": {
      "content": "align-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      }
    },
    "7f7068c7-3874-32f8-8366-daa2f42b0508": {
      "content": "margin-right: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      }
    },
    "7f70ad99-a4b7-364b-92e3-0d37f31d5f04": {
      "content": "for ${1:item} in ${2:items}:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "7f9bc3d3-c4b6-391d-8e2b-3a877819b4a1": {
      "content": "_.invert(${object})",
      "doc": "var object = { 'a': 1, 'b': 2, 'c': 1 };\n\n_.invert(object);\n// => { '1': 'c', '2': 'b' }\n\nCreates an object composed of the inverted keys and values of `object`.\nIf `object` contains duplicate values, subsequent values overwrite\nproperty assignments of previous values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invert",
      "matches": {
        "lodash invert": true
      }
    },
    "7fa06bae-e9d6-308c-8362-73012339af97": {
      "content": "overflow: '${1}',",
      "doc": "overflow",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "overflow",
      "matches": {
        "over": true
      }
    },
    "7fa8945c-f57e-37c9-b24f-217fff43d3e6": {
      "content": "@if ($1)\n\t${2:${VISUAL}}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@if directive",
      "matches": {
        "if": true
      }
    },
    "7fad9867-f0e4-313c-9c0c-fa4d070f3b4a": {
      "content": "align-self baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      }
    },
    "7faead6f-83cc-307b-8d07-34e90d51f1a3": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked before rendering when new props or state are being received.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      }
    },
    "7fb8768c-f700-330a-8451-4e467be5d499": {
      "content": "border-corner-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      }
    },
    "7fb9af04-4d14-3d98-ae70-298691693c00": {
      "content": "if ${1:#:condition} then\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7fc5274c-05ff-325b-9ab5-fb0fd9c61fa0": {
      "content": "<template>\n\t<${1:div}$2>\n\t\t$0\n\t</${1:div}>\n</template>",
      "doc": "template element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "template",
      "matches": {
        "template": true
      }
    },
    "7fca635d-45ef-3383-9657-d293759f262e": {
      "content": "grid-auto-flow: column dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:cd": true
      }
    },
    "7fd2d2d0-e0a5-3eaa-a14e-ae77523a8987": {
      "content": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: '${1:selector-name}'\n})\n\nexport class ${2:Name}Pipe implements PipeTransform {\n\ttransform(value: any, ...args: any[]): any {\n\t\t$0\n\t}\n}",
      "doc": "Angular pipe",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-pipe",
      "matches": {
        "a-pipe": true,
        "angular pipe": true
      }
    },
    "7fdd5270-8aef-3d1a-81d7-92488472e87a": {
      "content": "if (${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "7fe598c8-df5e-36c1-b8de-bc14f2551350": {
      "content": "{% extends \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig extends",
      "matches": {
        "extends": true
      }
    },
    "7fe796d3-8ca2-3004-a38e-34941742d246": {
      "content": "using (${1:resource})\n{\n    $0\n}",
      "doc": "Using statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Using statement",
      "matches": {
        "using": true
      }
    },
    "7feb4f64-96bd-3373-a93f-374daf3fff95": {
      "content": "<router-link to=\"${1:path}\">${2:LinkTitle}</router-link>",
      "doc": "Path routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Path Routing Link",
      "matches": {
        "vroutepath": true
      }
    },
    "7ff29059-ab74-3fbb-bb66-eccdefb97abd": {
      "content": "find!(${1:p})($2:xs);\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      }
    },
    "7ff473f2-107d-3055-bd2a-8a2b57a32b90": {
      "content": "\\\\int_{{$1}}^{{$2}} {$3} \\\\: d{$4} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "integral",
      "matches": {
        "int": true
      }
    },
    "7ffa33f1-8262-3038-b76c-6cd32b1c4199": {
      "content": "for ${1:e} := range ${2:collection} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for range loop",
      "matches": {
        "forr": true
      }
    },
    "80013c2e-c6b9-3a0c-9ae3-673f3b2fd200": {
      "content": "<ng-template [ngTemplateOutlet]=\"${1:outlet}\" [ngOutletContext]=\"${2:context}\"></ng-template>",
      "doc": "Angular ng-template",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ng-template",
      "matches": {
        "a-ng-template": true
      }
    },
    "80059077-ea75-34c2-8fe9-2f84f5dc8982": {
      "content": "background-color: #${0:fff}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc": true
      }
    },
    "80187f73-691f-3c4c-8a8b-b6e59750c807": {
      "content": "#include <stdio.h>\nint main(int argc, char* argv[])\n{\n    puts(\"hello, world!\");\n    return 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "801fe5d3-8f50-3e5b-af99-81b77a16a241": {
      "content": "expect(() => {\n\t$0\n}).toThrowErrorMatchingSnapshot();",
      "doc": "expects that the method will throw an error mathing the snapshpot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerrormatchingsnapshot",
      "matches": {
        "jest expect tothrowerrormatchingsnapshot": true,
        "ttems": true
      }
    },
    "802025f7-aca5-39dd-b4f9-e4e8b0dd61e9": {
      "content": "borderRightWidth: ${1},",
      "doc": "borderRightWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderRightWidth",
      "matches": {
        "bor": true
      }
    },
    "8022c6f9-732d-354e-9756-a4f417b23ff2": {
      "content": "string",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "string",
      "matches": {
        "sr": true
      }
    },
    "8027958b-3953-3d05-a544-c5922a4256e2": {
      "content": ".attr(\"${1}\", ${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".attr": true
      }
    },
    "802bca93-2197-3bf9-90b0-4e78fde99e0b": {
      "content": "matmul($1,$2)",
      "doc": "Matrix Multiplication",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "mat",
      "matches": {
        "mat": true
      }
    },
    "802cbe1b-e50e-3430-954a-ba72d1843f5a": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent } from 'vue'\n\nexport default defineComponent({\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API with Typescript",
      "matches": {
        "vbase-3-ts": true
      }
    },
    "802da6e0-6879-3cfb-a10d-dd3f4951a4d5": {
      "content": "type ${1:Struct} struct {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Struct declaration",
      "matches": {
        "struct": true
      }
    },
    "8037d204-b010-3e5e-9e52-05bf14f00ae5": {
      "content": "msgid \"${1}\"\nmsgstr \"${2}\"\n\n${0}",
      "doc": "",
      "filetype": "po",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msg": true
      }
    },
    "803a5c30-4120-3590-b1b1-a82e1e322b4f": {
      "content": "case ${1:expression} of\n\t${2:case1} -> ${3:result}\n\t${4:case2} -> ${5:result}$0",
      "doc": "Case statement",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "803f740f-d476-3398-b1ba-cc469e2015bc": {
      "content": "$.parseJSON(${1:data})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsejson": true
      }
    },
    "80426f46-818b-3e30-944e-831723072f7a": {
      "content": "<a id=\"${1}\" href=\"${2:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a#": true
      }
    },
    "804501cb-21f9-3c48-bd8b-c2e43909959e": {
      "content": "${1:obj}.removeClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remc": true
      }
    },
    "804c4a39-58fb-34b8-994b-f917be55c45d": {
      "content": "word-break: break-all;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      }
    },
    "8051cdf6-c1da-3bd9-b5f1-3e11dde9be10": {
      "content": "${1:dfname} <- data.frame(${2:a} = character(), ${3:b} = character())",
      "doc": "Code snippet for an empty character data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Empty data frame (character)",
      "matches": {
        "df2c": true
      }
    },
    "8055a1c8-622f-34d9-8506-ed129ab24cdc": {
      "content": "elseif (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "elseif(condition) { ... }",
      "matches": {
        "eif": true
      }
    },
    "80639d6b-47e3-37ae-99b9-3488febd6d07": {
      "content": "$.getJSON('${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (data, textStatus, jqXHR) {\n\t\t${0:// success callback}\n\t}\n);",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getjson": true
      }
    },
    "80676ed4-0b24-31bd-a3d7-9679b65fcb08": {
      "content": "[${1}]",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "806812d0-1768-3c81-94b3-17209486732b": {
      "content": "on:${1:eventname}|${2|preventDefault,stopPropagation,passive,capture,once|}={${3:handler}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-modifiers",
      "matches": {
        "svelte on event modifiers": true,
        "svon-modifiers": true
      }
    },
    "806a95cc-e23d-3c83-9a1f-12117e55c73d": {
      "content": "function* ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun*": true
      }
    },
    "8071894a-b472-3c9e-856b-5ea3ef25f748": {
      "content": "<ol type=\"A\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "olA": true
      }
    },
    "80719827-6135-3a55-9655-d6b65bdc3f85": {
      "content": "else if (${1:/* condition */}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "8075208c-06fa-304a-94ff-b60c99164950": {
      "content": "map {  ${0: body }    }  ${1: @array } ;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "8076b9b9-3e0d-3ba5-be8a-c84cd347c351": {
      "content": "${1:deferred}.isResolved()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disres": true
      }
    },
    "807b5177-94fe-3e04-87c7-97002a7da045": {
      "content": "outline-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      }
    },
    "807f861a-dd80-3427-b437-40f456a90296": {
      "content": "while (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "while () {}",
      "matches": {
        "while": true
      }
    },
    "80835334-9d13-3556-8432-ec6dec5ef768": {
      "content": "let ${1}: ${2} = ${3};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let variable declaration with explicit type annotation",
      "matches": {
        "lett": true
      }
    },
    "80844829-1b23-3614-b8db-387705c78d94": {
      "content": "font-effect outline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      }
    },
    "8087f34c-81bd-3a7b-8df4-c136dd615700": {
      "content": "#![feature(phase)]\n#[phase(plugin, link)] extern crate log;",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate log",
      "matches": {
        "ecl": true
      }
    },
    "8089ed11-f586-3794-b027-d7ce3f385d58": {
      "content": "\\chapter{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\chapter": true,
        "chapter \\chapter{": true
      }
    },
    "808acd78-e706-3b86-90fb-4109464bcc24": {
      "content": "public static ${1}(${2}): ${3:any} {\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts public static method",
      "matches": {
        "tpsmet": true
      }
    },
    "808b9a10-d01b-35b3-a2c6-cff6cd105ba4": {
      "content": "default_if_none:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      }
    },
    "80911c21-9d99-3154-a546-f842c73386ce": {
      "content": "repeat ${1} times}\n\t${0:TARGET}\nend repeat",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "rep",
      "matches": {
        "rept": true
      }
    },
    "809120b7-2f62-3019-8e7d-93ab09eb0f4d": {
      "content": "border-right-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      }
    },
    "80920002-4ea8-3e30-ad65-58169faa8069": {
      "content": "bind:this={${1:dom_node}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-this",
      "matches": {
        "svbind-this": true,
        "svelte bind this": true
      }
    },
    "809491fe-3778-3c77-9c30-bda4610ecaa9": {
      "content": "<router-view>$1</router-view>$0",
      "doc": "router-view element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "routerView",
      "matches": {
        "routerView": true
      }
    },
    "809c854e-4586-3dfd-81ee-efd0769b131e": {
      "content": "${1|transition,in,out|}:${2:name}={${3:params}}",
      "doc": "transition-params",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-params",
      "matches": {
        "s-transition-params": true
      }
    },
    "809dd0ae-dc59-3d85-8080-24b6b2533052": {
      "content": "self.assertIs(${1:expected}, ${2:actual}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert is",
      "matches": {
        "asi": true
      }
    },
    "80a3f200-b99a-33db-a4fc-35fc3c4e4d89": {
      "content": "elseif ${1:condition}\n\t${2:block}\nend",
      "doc": "Code snippet for elseif statement.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "elseif": true
      }
    },
    "80a614ff-c75b-3114-b9ff-ac1f35c7c0c4": {
      "content": "prop parent : app \"${1}\"",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      }
    },
    "80ab6579-1e41-3901-acd5-d4fa722b76a9": {
      "content": "${1:FIELDNAME} = forms.SplitDateTimeField($2)",
      "doc": "SplitDateTimeField (fsdatetime)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fsdatetime",
      "matches": {
        "fsdatetime": true
      }
    },
    "80ae41c7-add5-35eb-b7ee-ca4c5100bb06": {
      "content": "{% endfor %}$0",
      "doc": "endfor",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endfor",
      "matches": {
        "endfor": true
      }
    },
    "80b23da3-1265-3665-a18b-d15d19b55263": {
      "content": "text-justify: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      }
    },
    "80b58752-6940-34fa-ba46-0dc1295191ba": {
      "content": "const {${1:module}} = require('./${1:module}');",
      "doc": "destructuring require assignment local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-require-assignment-local",
      "matches": {
        "base require assignment local destruct": true
      }
    },
    "80b5dc08-baf7-37ac-912e-fff1dd720a24": {
      "content": "test '${1:should do something}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "80b6cc64-2565-3d4e-ae59-1ad1566a87b3": {
      "content": "= ${1:Document Name}\n${2:Alice <alice@example.com>}\n${3:Revision line}\n:toc:\n:imagesdir: img/\n:homepage: https://www.example.com\n:icons: font\n:data-uri:\n\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Start a new document",
      "matches": {
        "doc": true,
        "title": true
      }
    },
    "80b72a92-f68c-3c62-9904-8c121c24d38e": {
      "content": "border-fit: repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      }
    },
    "80b9e8b2-10dd-3576-98ce-0c0f83cbd96f": {
      "content": "_.isMatch(${object}, ${source})",
      "doc": "var object = { 'a': 1, 'b': 2 };\n\n_.isMatch(object, { 'b': 2 });\n// => true\n\n_.isMatch(object, { 'b': 1 });\n// => false\n\nPerforms a partial deep comparison between `object` and `source` to\ndetermine if `object` contains equivalent property values.\n\n**Note:** This method is equivalent to `_.matches` when `source` is\npartially applied.\n\nPartial comparisons will match empty array and empty object `source`\nvalues against any array or object value, respectively. See `_.isEqual`\nfor a list of supported value comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ismatch",
      "matches": {
        "lodash ismatch": true
      }
    },
    "80c5b03d-f2ea-37be-8688-78c60895d7fe": {
      "content": "accepts_nested_attributes_for :${0:association}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ana": true
      }
    },
    "80cb790a-1f26-328f-a3b4-b2277b1e1dc0": {
      "content": "fscanf($1, \"$2\"$0);",
      "doc": "Generic fscanf() snippet",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "fscanf",
      "matches": {
        "fscanf": true
      }
    },
    "80cc6d9e-5db3-3321-a5a5-cc6812683c4b": {
      "content": "@section('${1:section name}')\n    @parent\n\n    ${2}\n@endsection",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section @parent ... @endsection",
      "matches": {
        "section-parent": true
      }
    },
    "80d19b5f-5454-3df7-a106-b8bb5d10ad3a": {
      "content": "set ${1:#:axis}tics ${2:#:start}, ${3:#:incr}, ${4:#:end}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set x/y tics start, incr, end",
      "matches": {
        "tics": true
      }
    },
    "80d9606f-12ef-3001-aabf-732d9ce52ed6": {
      "content": "quotes: '\\201C' '\\201D' '\\2018' '\\2019';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:en": true
      }
    },
    "80dc95cf-edc0-392a-8f2d-ae9331d45169": {
      "content": "after_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mau": true
      }
    },
    "80dd2a58-6454-3cba-9f58-fae4bf42c258": {
      "content": "list-style-type: upper-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      }
    },
    "80df4148-eeaa-3cb6-80f8-440d90d5951c": {
      "content": "ignoring ${1:#:application responses}\n\t${0:TARGET}\nend ignoring",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ign": true
      }
    },
    "80e87537-5e3f-3ff5-96cc-b0ebc472aa70": {
      "content": "INSPECT $1 CONVERTING '${2:ABCDEFGHIJKLMNOPQRSTUVWXYZ}' to '${3:abcdefghijklmnopqrstuvwxyz}'",
      "doc": "INSPECT CONVERTING",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "INSPECT CONVERTING",
      "matches": {
        "INSPECT": true
      }
    },
    "80ebdb88-8bff-3a91-9f8d-665fce17765a": {
      "content": "switch ${1:var} {\n\t${3:pattern 1} {\n\t\t${0:#do something}\n\t}\n\tdefault {\n\t\t${2:#do something}\n\t}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "80f09a13-0eff-382b-ae6b-873e2af092ed": {
      "content": "$_SESSION['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "session",
      "matches": {
        "session": true
      }
    },
    "80f0cdb7-dba7-33e5-b62b-4fae331102c0": {
      "content": "switch ( ${1:#:condition} ) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "80f0d31f-ae3d-3496-b72d-3a17f39d7715": {
      "content": "function numeric-thousands-separator()$0",
      "doc": "character used to separate the thousands digit groupings in a numeric value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-numeric-thousands-separator",
      "matches": {
        "function numeric-thousands-separator": true
      }
    },
    "80f1120b-77f3-3459-ac4c-14f0f8715f9a": {
      "content": "vertical-align: bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "vertical-align: bottom",
      "matches": {
        "vab": true
      }
    },
    "80f82985-61d5-3045-880d-b876e22e295f": {
      "content": "console.debug(${1:object});",
      "doc": "Displays a message in the console. Also display a blue right arrow icon along with the logged message in Safari",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleDebug",
      "matches": {
        "cdb": true
      }
    },
    "80f8eef8-978e-3028-9d96-3d03c398f17a": {
      "content": "it { should ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      }
    },
    "8105544a-83d6-3a0b-a7fe-027b4141ed8e": {
      "content": "const ${1:CONST}: ${2:Type} = ${4:init};",
      "doc": "const …: … = …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "const",
      "matches": {
        "const": true
      }
    },
    "810ab06c-d3c6-3ef0-8664-4460308562f8": {
      "content": "font: ${0:12px/1.5};",
      "doc": "font: [weight style variant stretch] size/line-height family",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font",
      "matches": {
        "ft": true
      }
    },
    "811478b9-aeb1-3acb-9204-46618c2344f7": {
      "content": "${1:obj}.delegate '${2:selector expression}', '${3:event name}', (${4:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dele": true
      }
    },
    "8115336a-f7c6-34a3-a2c5-e293ff97df54": {
      "content": "${1:name} <- function (${2:variables}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "811e7f28-4b5d-3c31-9fdf-f343bfb6ef5f": {
      "content": "font-emphasize ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      }
    },
    "8120c234-4bf5-330c-8899-18f7cfba62fd": {
      "content": "PropTypes.oneOfType([\n\t$0\n]),",
      "doc": "An object that could be one of many types",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeOneOfType",
      "matches": {
        "ptet": true
      }
    },
    "81282d6e-f66e-3753-9d67-50cc1033fdf1": {
      "content": "before_validation :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbv": true
      }
    },
    "812e4895-90ba-3343-b45d-ffc62a1d729e": {
      "content": "<%= ${1:f}.file_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffff": true
      }
    },
    "813f9387-01e5-3463-ae8c-6268d07a6212": {
      "content": "const { ${1:name} } = this.props",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "destructuring of props",
      "matches": {
        "dp": true
      }
    },
    "813ff7ef-f1e6-3790-b9fa-304a200f83e0": {
      "content": "(map ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "81478fc2-c9d1-3de0-9415-7ca18e0b639b": {
      "content": "saveFrame(\"${1:filename-####}${0:.ext}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveFrame": true
      }
    },
    "814cb5b0-b5dd-394e-b17b-1f03904ee544": {
      "content": "__import__('wdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wdb": true
      }
    },
    "81523e1c-5c84-306a-a05f-7208b9a4b631": {
      "content": "for $1 in $2:\n\t${3:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "for loop",
      "matches": {
        "for": true
      }
    },
    "815bd862-3f6d-3501-a987-047f176eba1a": {
      "content": "display: flex",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      }
    },
    "815db6ae-1bc3-30fe-a736-00ae7302a3ce": {
      "content": "_.every(${collection}, ${predicate})",
      "doc": "_.every([true, 1, null, 'yes'], Boolean);\n// => false\n\nvar users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.every(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.every(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.every(users, 'active');\n// => false\n\nChecks if `predicate` returns truthy for **all** elements of `collection`.\nIteration is stopped once `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index|key, collection).\n\n**Note:** This method returns `true` for\n[empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n[everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\nelements of empty collections.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-every",
      "matches": {
        "lodash every": true
      }
    },
    "815f78e5-2201-354f-b822-b133cd041be1": {
      "content": "<video src=\"${1}\" height=\"${2}\" width=\"${3}\" preload=\"${4:none}\" autoplay=\"${5:autoplay}\">${6}</video>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "video": true
      }
    },
    "8165cf20-2b8c-3c25-a7cd-1d595e9174f1": {
      "content": ".TRUE.",
      "doc": ".TRUE.",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "T",
      "matches": {
        "T": true
      }
    },
    "81664f88-a370-351d-bc2e-703d4aa79a59": {
      "content": "<menuitem>$1</menuitem>$2",
      "doc": "HTML - Defines a menu item [firefox only]",
      "filetype": "html",
      "grammar": "lsp",
      "label": "menuitem",
      "matches": {
        "menuitem": true
      }
    },
    "8169f780-f001-358b-88f2-5f59d63f7914": {
      "content": "ListView.builder(\n  itemCount: ${1:1},\n  itemBuilder: (BuildContext context, int index) {\n  return ${2:};\n },\n),",
      "doc": "Creates a scrollable, linear array of widgets that are created on demand.Providing a non-null `itemCount` improves the ability of the [ListView] to estimate the maximum scroll extent.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "ListView.Builder",
      "matches": {
        "listViewB": true
      }
    },
    "816f1cc1-922c-34b4-a862-0cd826398dcd": {
      "content": "pub fn new(${1}) -> ${2:#:Name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub fn new() {}",
      "matches": {
        "pubnew": true
      }
    },
    "81718239-9f64-343b-b144-91a13d1c8240": {
      "content": "<i>$1</i>$2",
      "doc": "HTML - Defines italic text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "i",
      "matches": {
        "i": true
      }
    },
    "8173e2d9-cdde-3119-a5b7-2ed1ecb22d64": {
      "content": "//#endregion",
      "doc": "Folding Region End",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      }
    },
    "8179f2a1-2ed1-3122-ab59-31cdc38b400c": {
      "content": "_.lastIndexOf(${array}, ${value}, ${fromIndex})",
      "doc": "_.lastIndexOf([1, 2, 1, 2], 2);\n// => 3\n\n// Search from the `fromIndex`.\n_.lastIndexOf([1, 2, 1, 2], 2, 2);\n// => 1\n\nThis method is like `_.indexOf` except that it iterates over elements of\n`array` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lastindexof",
      "matches": {
        "lodash lastindexof": true
      }
    },
    "817ed49e-132c-3131-ac9d-5471585a6af1": {
      "content": "font-emphasize: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      }
    },
    "817f526b-65f7-35c7-9f3e-ad51ed36f672": {
      "content": "{% include \"$1\" %}",
      "doc": "include tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "inc",
      "matches": {
        "inc": true
      }
    },
    "8180cb19-ab79-35d2-8f8a-d16dd06cffcc": {
      "content": "word-break: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      }
    },
    "8183a49b-4cfa-3f29-86a2-6b515e67d30b": {
      "content": "get() ${1:value}",
      "doc": "Snippet for get block",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "get",
      "matches": {
        "get": true
      }
    },
    "81848b0d-9b50-3abb-8094-b3fa720b5395": {
      "content": "friend",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fr": true
      }
    },
    "818c89da-ff3a-3758-8ca6-56dc4ffb09a7": {
      "content": "padding: ${1:0} ${2:0} ${3:0} ${4:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:4": true
      }
    },
    "818d183b-d0e6-3e2a-bee9-f3de6f8a331d": {
      "content": "${1:router}.addRoutes($2)$0",
      "doc": "router.addRoutes()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerAddRoutes",
      "matches": {
        "routerAddRoutes": true
      }
    },
    "818e4cd8-39be-3542-a236-0d16271145bc": {
      "content": "let ${1} = ${2} in\n${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "818fcb2c-be71-39a8-a429-74a50ec979b1": {
      "content": "component ${1:ComponentName} {\n\t$0\n}",
      "doc": "Components are reusable pieces of code that have specific behavior, styles and content.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Components",
      "matches": {
        "com": true
      }
    },
    "8198390f-f7a7-3a3d-a930-0d0013e81e9a": {
      "content": "${1}.forEach((${2:item}) => {\n\t${0}\n});",
      "doc": "forEach loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "foreach-loop",
      "matches": {
        "base foreach": true
      }
    },
    "81a709e6-63e1-3a77-b134-235201f98e5d": {
      "content": "padding: ${1},",
      "doc": "padding",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "padding",
      "matches": {
        "padding": true
      }
    },
    "81a77080-6f7f-3525-94fe-4fff72d0e125": {
      "content": "switch (${1:switch_on})\n{\n\t${0}\n\tdefault:\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "81a78eaa-ea82-31a6-aab2-f28e187af227": {
      "content": "has_many :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hm": true
      }
    },
    "81aa3952-7d1c-315f-874c-88fbb25f6e33": {
      "content": "grid: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "g": true
      }
    },
    "81adc9be-db39-325b-bb35-da513a4034bb": {
      "content": "this.setState($0)",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      }
    },
    "81adf3e8-9904-3ed3-b6f2-33e76788d238": {
      "content": "with open(${1:#:file}, '${2:r}') as ${3:f}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fileidiom": true,
        "with_open": true
      }
    },
    "81b2431f-c410-3f83-9a8f-ac7f5e46b0d4": {
      "content": "white-space-collapse: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc": true
      }
    },
    "81b51069-9f54-3c9a-bd0e-3313c5971d93": {
      "content": "t.Run(\"${0}\", func(t *testing.T){\n\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "t.Run(\"test name\", func(t *testing.T){ ... })",
      "matches": {
        "tr": true
      }
    },
    "81b5ab01-0d82-3e5f-afd7-c015e8d243ae": {
      "content": "@implementation ${1:$TM_FILENAME_BASE}\n\n${2:methods}\n\n@end",
      "doc": "Create an Objc Class implementation",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create Class implementation",
      "matches": {
        "@implementation": true
      }
    },
    "81bb6177-4b78-3be2-8d23-5c7d20f3ecd1": {
      "content": "JSON.parse(${0:jstr});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsonp": true
      }
    },
    "81bdcd5a-2240-326d-ac0a-73c85357dff4": {
      "content": "$this->session->set_userdata($${1:array});${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_set_userdata": true
      }
    },
    "81c3e9ba-c51d-3590-9f9c-935ba4a8528d": {
      "content": "${1:FIELDNAME} = serializers.DateTimeField(${2})",
      "doc": "Django-rest Serializers ``DateTimeField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF DateTimeField",
      "matches": {
        "sdatetime": true
      }
    },
    "81cbedac-c6e9-320c-90d3-27957c81c2df": {
      "content": "# ${CURRENT_DAY_NAME_SHORT} ${CURRENT_MONTH_NAME_SHORT} ${CURRENT_DATE} ${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND} ${CURRENT_YEAR} ------------------------------",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "timestamp",
      "matches": {
        "ts": true
      }
    },
    "81cffdd0-508e-3d2e-a32a-a9e3f7b35371": {
      "content": "else {\n\t${0}\n}",
      "doc": "else statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "else-statement",
      "matches": {
        "base else": true
      }
    },
    "81d2a4b4-61c0-3b7f-ae41-c23c9328c0b3": {
      "content": "var $1 = new sap.m.Label({\n\t\t\tdesign : $2,\n\t\t\ttext : $3,\n\t\t\tvisible : $4,\n\t\t\ttextAlign : $5,\n\t\t\ttextDirection : $6,\n\t\t\twidth : $7,\n\t\t\trequired : $7\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmlabel": true
      }
    },
    "81d2b3be-34a4-3799-b9ba-c198a28bf771": {
      "content": "${1:FIELDNAME} = models.CharField($2, max_length=${3:50})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CharField",
      "matches": {
        "mchar": true
      }
    },
    "81d682b9-68c0-3a38-aee5-694ac58bfa3f": {
      "content": "text-align-last: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      }
    },
    "81f14bf6-8963-35a8-ae82-f3df724c05fc": {
      "content": "resize: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      }
    },
    "81f471f0-4219-3d9e-a906-cd0bfa9f7ff5": {
      "content": "@after-enter=\"$1\"$0",
      "doc": "@after-enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-enter",
      "matches": {
        "afterenterevent": true,
        "vue after-enter": true
      }
    },
    "81fc956d-5a74-3132-8446-9dbde7da661e": {
      "content": "require([\"${1:#dependencies1}\"], function (${2:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqjs": true
      }
    },
    "81fcd5ef-071e-3f14-a29c-728f78947962": {
      "content": "ifel ensuring(${1:a}==${0:b})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ensuring": true
      }
    },
    "8202b2ed-896e-3ed6-85a3-48acc9d47333": {
      "content": "margin-bottom: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      }
    },
    "8209dcfa-3983-382e-a262-f74b58417abf": {
      "content": "<table class=\"${1}\">\n\t${0}\n</table>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "table.": true
      }
    },
    "820bd027-ad41-357d-ae7a-afa969833adf": {
      "content": "function upper-case(${1:string})$0",
      "doc": "character string that contains string with any lowercase letters replaced by their corresponding uppercase letters",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-upper-case",
      "matches": {
        "function upper-case": true
      }
    },
    "820cfc9f-e818-343a-9bb2-6a7566f58ad3": {
      "content": "impl ${1:Trait} for ${2:Type} {\n    ${3:// add code here}\n}",
      "doc": "impl … for … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "impl-trait",
      "matches": {
        "impl-trait": true
      }
    },
    "820e9297-3db7-3801-afeb-e055bbdf8ccf": {
      "content": "text-emphasis accent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      }
    },
    "8212feee-1059-392e-8d63-befd572947c8": {
      "content": "process.nextTick(() => {\n\t${0}\n});",
      "doc": "process nextTick",
      "filetype": "base",
      "grammar": "lsp",
      "label": "process-nexttick",
      "matches": {
        "base process next tick": true
      }
    },
    "821324ef-aa44-317f-a83d-0008893d76a8": {
      "content": "%% @private",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%p": true
      }
    },
    "821849a5-75a1-3bf5-8fec-92e72bf1ea27": {
      "content": "font: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true,
        "font": true
      }
    },
    "821fec4a-5db2-31b3-a818-6d0c1d3e0268": {
      "content": "\\${5:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${5:#optional}",
      "matches": {
        "5#": true
      }
    },
    "82242f90-0cdb-32c4-9f75-83375059a7d8": {
      "content": "place-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      }
    },
    "8225154f-f0d1-3438-8fd6-26a8cc5b650b": {
      "content": "if ${1} then\n\t${0:${VISUAL}}\nend if;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "82274b29-565f-3749-80ff-37758d46f37d": {
      "content": "text-height: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      }
    },
    "8227c6c0-f213-324f-ae64-d6058ac50e1a": {
      "content": "for(int ${1:i} = 0; $1 < ${2:count}; $1++) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "8228a09c-c779-3324-8bf3-22734e433f5b": {
      "content": "class ${1:#:name} {\n    ${2}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "class {}",
      "matches": {
        "class-without-constructor": true
      }
    },
    "822936e2-133b-39a1-a2dc-61ab2b69df1e": {
      "content": "grid-auto-flow ${1:row} ${0:dense}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      }
    },
    "822c22d1-23f4-3cd9-8477-46eb42ee7a3c": {
      "content": "import 'package:${1}/${2}.dart';\n${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "im": true
      }
    },
    "822e03ff-bd3e-381f-8037-7a9431c451bd": {
      "content": "${1:obj}.find('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "find": true
      }
    },
    "82366f5d-c8d2-3c82-b985-8d3d9233278e": {
      "content": "{%- if ${condition} -%}\n\t${code1:}\n{%- else -%}\n\t${code2:}\n{%- endif -%}",
      "doc": "Control flow tag: if else",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag if else",
      "matches": {
        "ifelse": true
      }
    },
    "8243f45b-a7ea-355f-8247-f56183c882b7": {
      "content": "try\n{\n\t${0:${VISUAL}}\n}\nfinally\n{\n\t${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      }
    },
    "8249e8b7-0d01-3aee-9534-db5461699ddc": {
      "content": "&#x2318;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmd": true
      }
    },
    "824cb9c2-7347-341e-84ae-6e56418bc46b": {
      "content": "bezierPoint(${1:a}, ${2:b}, ${3:c}, ${4:d}, ${0:t});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bezierPoint": true
      }
    },
    "82511ceb-b029-3b6a-a874-b43efd6df942": {
      "content": "function length-an(${1:item})$0",
      "doc": "returns the length (in bytes) of the specified item;",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-length-an",
      "matches": {
        "function length-an": true
      }
    },
    "825122f0-46c8-3af6-bf70-b00d03aeb359": {
      "content": "use parent qw(${0:Parent Class});",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      }
    },
    "825a2400-2ca1-309f-b948-608e53a68d64": {
      "content": "void mouseDragged(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseDragged": true
      }
    },
    "825c980f-e707-3c3d-ae84-0076cab669fb": {
      "content": "static ${1}: &'static str = \"${0}\";",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "static string declaration",
      "matches": {
        "ss": true
      }
    },
    "826a72b8-475e-3a82-87f5-14206aa1d1f2": {
      "content": "render inline: \"${0:<%= 'hello' %>}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ri": true
      }
    },
    "826f7a52-f4b1-3018-b973-f35febbc6ce1": {
      "content": "import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: ${1:'root'} })\nexport class ${2:YourResolver} implements Resolve<${3:ObjectToResolve}> {\n\tresolve(route: ActivatedRouteSnapshot): Observable<${3:ObjectToResolve}> | Promise<${3:ObjectToResolve}> | ${3:ObjectToResolve} {\n\t\treturn ${0};\n\t}\n}",
      "doc": "Angular Resolver",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-resolver",
      "matches": {
        "a-resolver": true,
        "angular resolver": true
      }
    },
    "827205d7-8ca0-3945-872f-8c67dd58460a": {
      "content": "public int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+-": true
      }
    },
    "8273f61f-2cff-318b-b1d5-b7e6323be258": {
      "content": "grid-row-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grg": true
      }
    },
    "82743012-9b81-30b4-aa24-b94714a1545e": {
      "content": "{% embed '${1:template}' %}\n\t{% block ${2} %}\n\t\t${0:TARGET}\n\t{% endblock %}\n{% endembed %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% embed ... %} ... {% endembed %}",
      "matches": {
        "embed": true
      }
    },
    "8276f121-34d7-368e-b239-2ef5a64c1e5c": {
      "content": "cursor help",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      }
    },
    "82811bfd-828c-3164-8991-cd5ad33a211c": {
      "content": "flash[:${1:notice}] = \"${2:Successfully created...}\"$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "flash[...]",
      "matches": {
        "flash": true
      }
    },
    "8284bd04-fb7a-3b40-ae5a-6be94305ce27": {
      "content": "{{ ${1:$TM_SELECTED_TEXT} | replace(\"search\", \"replace\") }}$0",
      "doc": "replace with | replace(\"search\", \"replace\")",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "replace",
      "matches": {
        "replace": true
      }
    },
    "82855e18-04ae-3fd4-972f-ee32f0699f23": {
      "content": ".style(\"${1}\", ${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".style": true
      }
    },
    "82918154-77f2-3867-b313-160b6df6d9e2": {
      "content": "$this->renderDynamic('${0:callback}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrd": true
      }
    },
    "82990183-9728-3e11-ab55-ec72e9a16f31": {
      "content": "order(${1:...}, ${2:na.last = ${3:TRUE}}, ${4:decreasing = ${5:FALSE}})",
      "doc": "Order",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "ord",
      "matches": {
        "order": true
      }
    },
    "829dec0b-fec2-3ece-bca7-f73c90d6db09": {
      "content": "private ${1:int} ${2:myVar};\npublic ${1:int} ${3:MyProperty}\n{\n    get { return ${2:myVar}; }\n    set { ${2:myVar} = value; }\n}\n$0",
      "doc": "Property and backing field",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Property and backing field",
      "matches": {
        "propfull": true
      }
    },
    "829fbcf1-bed8-3ab3-8535-dc0fb0d85cd6": {
      "content": "${1:obj}.last('${1:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      }
    },
    "82a4e4ec-526e-382c-b4a7-c237810f38a7": {
      "content": "${1:obj}.filter('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "82a6bc50-c4e4-311e-a997-387426971e46": {
      "content": "params[:${1:id}]",
      "doc": "getting params using attribute",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Getting Params",
      "matches": {
        "pa": true
      }
    },
    "82b0cfc3-c0b3-3fb5-a8aa-60655645e86e": {
      "content": "#+BEGIN_COMMENT\n$0\n#+END_COMMENT",
      "doc": "#+BEGIN_COMMENT block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "comment block",
      "matches": {
        "<c": true
      }
    },
    "82b5d383-44be-3c7a-95ca-801b8d422460": {
      "content": "local-storage section.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "local-storage section",
      "matches": {
        "local-storage": true,
        "ls": true
      }
    },
    "82b74fc2-3f64-3485-aa03-154d7ca4813a": {
      "content": "const $1 = useSelector(state => state.$1);",
      "doc": "Redux useSelector() hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-useselector",
      "matches": {
        "redux useselector": true,
        "uss": true
      }
    },
    "82b890de-658e-3aa7-a8ce-ba1ac741114c": {
      "content": "PropTypes.objectOf(PropTypes.shape($0)),",
      "doc": "An object whose keys are known ahead of time",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfShape",
      "matches": {
        "ptoos": true
      }
    },
    "82bcdfe2-5539-3b0d-ab2f-12e29a0b075a": {
      "content": "ccall(:clock, Int32, ())",
      "doc": "Code snippet for calling the clock function from the standard C library.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "ccal/clock",
      "matches": {
        "cclock": true,
        "clock": true
      }
    },
    "82bdba1e-6d5e-37cd-bde7-bc1a07c809a5": {
      "content": "{${1:value} for ${2:value} in ${3:iterable} if ${4:condition}}$0",
      "doc": "Create a set based on existing iterables, with condition if statement.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Set Comprehension if filter",
      "matches": {
        "sci": true
      }
    },
    "82c196df-ea68-3f0e-85e4-fe82c49ac173": {
      "content": "expect(${1:target}).toBeTruthy();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be truthy (js)",
      "matches": {
        "et": true
      }
    },
    "82c44bc3-4205-3c0f-813b-7babab6d1351": {
      "content": "mounted() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mounted",
      "matches": {
        "mounted": true
      }
    },
    "82ccf9f3-0a66-304f-873e-f070e4e78925": {
      "content": "text(name: \"${1:BIOGRAPHY}\" , defaultValue: \"${2:default}\" , description: \"${3:Enter some information about the person}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paramtext": true
      }
    },
    "82cf9745-8047-3d75-9042-5ef2eebc705a": {
      "content": "componentDidUpdate (prevProps, prevState) {\n\t$0\n}",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      }
    },
    "82d171e4-4ce2-3bd1-b0c3-69ba9f906ff8": {
      "content": "echo CHtml::listOptions('${1:selection}', array(${2}), array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlo": true
      }
    },
    "82d5414c-0d70-3f37-93e6-66724a0a35df": {
      "content": "Array.from({ length: ${1:length} }, (v, k) => k + 1)",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "generate array of integers starting with 1",
      "matches": {
        "gari": true
      }
    },
    "82dc127c-53e0-37b9-812d-2b1881fcf5b0": {
      "content": "@appear=\"$1\"$0",
      "doc": "@appear=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "appear",
      "matches": {
        "appearEvent": true
      }
    },
    "82e08654-6174-355f-a094-a028f0a647f6": {
      "content": "elif ${1:condition}\n\t${0}",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "82e1616d-337b-30ce-a619-4e54c4144a3b": {
      "content": "border-bottom-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      }
    },
    "82eaf3c7-14d5-326a-9257-7e42074c98e9": {
      "content": "class $1 extends StatefulWidget {\n\t@override\n\t_$1State createState() => _$1State();\n}\n\nclass _$1State extends State<$1>\n\t\twith SingleTickerProviderStateMixin {\n\tAnimationController _controller;\n\n\t@override\n\tvoid initState() {\n\t\tsuper.initState();\n\t\t_controller = AnimationController(vsync: this);\n\t}\n\n\t@override\n\tvoid dispose() {\n\t\tsuper.dispose();\n\t\t_controller.dispose();\n\t}\n\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stanim": true
      }
    },
    "82edb677-dbc5-3938-847a-be1b9a5ebac3": {
      "content": "System.Console.WriteLine($0);",
      "doc": "Console.WriteLine",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Console.WriteLine",
      "matches": {
        "cw": true
      }
    },
    "82f11435-9807-3f18-bf6c-82671e2df39b": {
      "content": "add_dependencies(${1:target}\n\t${0:dep}\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dep": true
      }
    },
    "82f5c657-7b12-37c0-a320-00c0ba576ae2": {
      "content": "export const ${1} = styled(${2})`\n  ${3}\n`;",
      "doc": "Export styled-component from existing component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component-from-existing-component",
      "matches": {
        "exscc": true,
        "styled-components export component from existing": true
      }
    },
    "82f62228-85bf-3cef-a985-51a55b95ec42": {
      "content": "flexBasis: '${1}',",
      "doc": "flexBasis",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flexBasis",
      "matches": {
        "flex": true
      }
    },
    "82f7d0c3-caf8-3c4b-9cec-818bc41fc603": {
      "content": "type ${1:SortBy} []${2:Type}\n\nfunc (a $1) Len() int           { return len(a) }\nfunc (a $1) Swap(i, j int)      { a[i], a[j] = a[j], a[i] }\nfunc (a $1) Less(i, j int) bool { ${3:return a[i] < a[j]} }",
      "doc": "Snippet for a custom sort.Sort interface implementation, for a given slice type.",
      "filetype": "go",
      "grammar": "lsp",
      "label": "sort implementation",
      "matches": {
        "sort": true
      }
    },
    "82ffeaed-c58e-3413-88b8-3966bb529afc": {
      "content": "connect ${1:StoreName}.Store exposing { $0 }",
      "doc": "The connect directive lets you connect a component to a store which allows you to call the stores functions and properties without using the stores name.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Connect",
      "matches": {
        "con": true
      }
    },
    "83036af6-756a-3069-bdbd-f70535ed050b": {
      "content": "import ${1:packageName}",
      "doc": "Snippet for import statement",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "import": true
      }
    },
    "8303f052-6ed2-31a3-beb1-2544d072a46d": {
      "content": "EXIT PROGRAM RETURNING ${1:item}",
      "doc": "EXIT PROGRAM",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "EXIT PROGRAM",
      "matches": {
        "EP": true,
        "EXIT": true
      }
    },
    "83042a0e-5541-3555-aeda-22636648811c": {
      "content": "${1:obj}.position()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      }
    },
    "83075af4-2199-32f9-86ad-8fedc861bf77": {
      "content": "record\n\t${0}\nend record;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "record",
      "matches": {
        "rec": true
      }
    },
    "830a5a34-3733-3bd2-b6ad-29b1ad4a74bf": {
      "content": "render text: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rt": true
      }
    },
    "8310f49b-63cc-3058-8c64-f6eaebe373b2": {
      "content": "page-break-after: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      }
    },
    "831443ac-aa0a-38e2-a1a7-50ba966fb7fa": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "831b24dc-0395-36a7-9988-1b13cd0949dd": {
      "content": "\\\\frac{d}{dt} {$1} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "time derivative",
      "matches": {
        "ddt": true
      }
    },
    "831dcb2a-9f57-32d3-8716-e444ee1f33a0": {
      "content": "real, parameter ::",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real parameter",
      "matches": {
        "rep": true
      }
    },
    "831e4d6f-a773-34ce-adba-9f9c6a9502e1": {
      "content": "<ol>\n\t$1\n</ol>",
      "doc": "HTML - Defines an ordered list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ol",
      "matches": {
        "ol": true
      }
    },
    "831e5794-83b8-3588-b6c0-63896f4f5096": {
      "content": "import { mapGetters } from 'vuex'\n\nexport default {\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t${1:'nameOfGetter'},\n\t\t])\n\t},\n}",
      "doc": "mapgetters inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapgetters",
      "matches": {
        "vmapgetters": true,
        "vue mapgetters": true
      }
    },
    "8327aa22-1395-34f0-80ec-74c85d0b5983": {
      "content": "flex-shrink: ${0:1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxs": true
      }
    },
    "8329039c-d8e7-3087-a111-c6c119e3ddfa": {
      "content": "DIVIDE ${1:a} BY ${2:b} GIVING ${3:c} ${4:REMAINDER ${5:d}}",
      "doc": "DIVIDE a BY b GIVING [REMAINDER}",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "DIVIDE",
      "matches": {
        "DGR": true,
        "DIVIDE": true
      }
    },
    "83297e33-673b-35b0-b5d2-f61c391e1ff8": {
      "content": "import ${1:New} from './components/$1.vue';",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vimport": true
      }
    },
    "832dc462-75dd-3974-b1a6-ecc14a5de948": {
      "content": "MOVE 0 to ${2:COUNTER}\nINSPECT ${1:SOURCE} TALLYING ${2:COUNTER} FOR ${3|ALL SPACES,ALL $4,CHARACTERS|}",
      "doc": "Inspect a tallying counter for ...",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "INSPECT TALLYING",
      "matches": {
        "INSPECT": true
      }
    },
    "833198b7-963e-3c3a-8fd1-9757069e8c93": {
      "content": "text-justify: inter-ideograph",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      }
    },
    "8332b324-ccd3-3a5a-ad19-e906af7d1a83": {
      "content": "func _input_event(event):\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_input_event method of Node",
      "matches": {
        "inpute": true
      }
    },
    "8334f76e-ca1f-3399-a802-e39bf95fc74a": {
      "content": "${1:#:class_name}.prototype.${2:#:method_name} = function(${3:#:first_argument}) {\n  ${0:TARGET}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proto": true
      }
    },
    "83354956-97ff-37b1-8d29-178cb503fa5b": {
      "content": "align-items end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      }
    },
    "833e8b4c-ded5-3c48-983c-dca614c7d14c": {
      "content": "propTypes: ->\n\t${1:myVar}: React.PropTypes.${2:type}${3:.isRequired}",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define propTypes",
      "matches": {
        "PropTypes": true
      }
    },
    "8348cc65-af84-398a-b1f2-77b5587058fb": {
      "content": "refute ${1:test}, '${2:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      }
    },
    "834ebf99-4ab0-3284-937f-89c3fcf2d720": {
      "content": "text-emphasis after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      }
    },
    "83538cdb-c97a-3166-8634-b0aef1427b6d": {
      "content": "def get_context_data(self, **kwargs):\r\n    context = super(${1:CLASS_NAME}, self).get_context_data(**kwargs)\r\n    return context",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "context",
      "matches": {
        "get_context_data": true
      }
    },
    "835df1b7-e5c7-399f-8570-a118f61459d8": {
      "content": "-include_lib(\"${1:lib}/include/${1}.hrl\").${2}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "incl": true
      }
    },
    "836f5332-0a0b-3ca3-bed1-0bc720778e8a": {
      "content": "border-style: ridge",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      }
    },
    "837355b8-722c-3910-8d7c-5cbc0e85f829": {
      "content": "<script src=\"${0}.js\" charset=\"utf-8\"></script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptsrc": true
      }
    },
    "837adffd-3f94-380a-8aeb-bfe7830183a0": {
      "content": "border-top: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      }
    },
    "837b3c77-5c2f-3c86-b79d-5b518f66dbdf": {
      "content": "${1:FIELDNAME} = forms.UUIDField($2, required=${3:False})",
      "doc": "UUIDField (fuuid)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fuuid",
      "matches": {
        "fuuid": true
      }
    },
    "838d7138-8361-376b-ac41-c418adab6166": {
      "content": "borderRightColor: ${1},",
      "doc": "borderRightColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderRightColor",
      "matches": {
        "bor": true
      }
    },
    "838e4cb0-f467-3b5f-9bde-edf11f6e46e4": {
      "content": "<footer>\n\t$1\n</footer>",
      "doc": "HTML - Defines a footer for a section or page",
      "filetype": "html",
      "grammar": "lsp",
      "label": "footer",
      "matches": {
        "footer": true
      }
    },
    "839618f4-53a0-312d-abcb-c4639f21bfa5": {
      "content": "for (my $${1:#:var} = 0; $$1 < ${2:#:expression}; $$1++) {\n\t${3:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "839b7f69-78e7-3cf7-8117-a71b63f8d9ff": {
      "content": "text-align: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      }
    },
    "839c18a9-e958-3a17-81cb-b9634e6b1c7b": {
      "content": "constrain(${1:value}, ${2:min}, ${0:max});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "constrain": true
      }
    },
    "83ab7ef8-5844-37f9-bb88-f3a6ddcfcd43": {
      "content": "render nothing: ${0:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rn": true
      }
    },
    "83ae27ae-35cd-34dd-a86f-9f859e981142": {
      "content": "@override\nvoid didChangeDependencies() {\n  super.didChangeDependencies();\n  ${0:}\n}",
      "doc": "Called when a dependency of this State object changes",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "didChangeDependencies",
      "matches": {
        "didChangeD": true
      }
    },
    "83b1c54f-afdf-3e2a-8059-b2396d77b736": {
      "content": "map[${1:string}]${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "map",
      "matches": {
        "mp": true
      }
    },
    "83b236dc-e5b4-31a6-be38-58d2d9f11362": {
      "content": "setInterval(() => {\n\t${2}\n}, ${0:intervalInms});",
      "doc": "Executes the given function at specified intervals in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "setInterval",
      "matches": {
        "sti": true
      }
    },
    "83b2c428-eb04-30d5-9249-4986eae5739c": {
      "content": "_.flatMapDepth(${collection}, ${iteratee}, ${depth})",
      "doc": "function duplicate(n) {\n  return [[[n, n]]];\n}\n\n_.flatMapDepth([1, 2], duplicate, 2);\n// => [[1, 1], [2, 2]]\n\nThis method is like `_.flatMap` except that it recursively flattens the\nmapped results up to `depth` times.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmapdepth",
      "matches": {
        "lodash flatmapdepth": true
      }
    },
    "83b6a358-d16b-326f-bf57-ab95196bd26d": {
      "content": "cursor: help;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      }
    },
    "83b7a452-5a7d-3003-92cb-0d6b7e5d4be6": {
      "content": "(:members (clojure.reflect/refrect ${1}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "java-methods": true
      }
    },
    "83c34f80-79b0-3bc0-8aa6-96ed2621ea64": {
      "content": "try {\n\t${1:${VISUAL}}\n} catch (error:ErrorType) {\n\t${2}\n} finally {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "83c39e92-4e07-3a8c-927a-40f2cf72c94b": {
      "content": "step(${1:2}) { |${2:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ste": true
      }
    },
    "83c69475-7880-3b7e-91e5-64705c03d1fd": {
      "content": "private ${1:name}() {\n\t$0\n}",
      "doc": "Private Method Definition",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Private Method Definition",
      "matches": {
        "private method": true
      }
    },
    "83d00bf9-02a4-37be-9d6d-64ef4422d860": {
      "content": "export async function getStaticPaths() {\n  return {\n    paths: [\n      { params: { ... } } \n    ],\n    fallback: ${1|true,false|}\n  };\n}",
      "doc": "If a page has dynamic routes (documentation) and uses getStaticProps it needs to define a list of paths that have to be rendered to HTML at build time. If you export an async function called getStaticPaths from a page that uses dynamic routes, Next.js will statically pre-render all the paths specified by getStaticPaths.",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-get-static-paths",
      "matches": {
        "next getstaticpaths": true
      }
    },
    "83d3a4cd-ff2e-3623-82a7-68aee4ca48b2": {
      "content": ":nth-child(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      }
    },
    "83d56bbf-7467-34d1-81ae-f8c851ccff2e": {
      "content": "<link rel=\"stylesheet\" href=\"${1:style.css}\" type=\"text/css\" media=\"${2:all}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:css": true
      }
    },
    "83d8b606-9a0e-3611-b521-b99c52b9b217": {
      "content": "function (${1:int x}) => ${2}${3:;}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "funl": true
      }
    },
    "83dc7849-c5a9-3aa6-af0d-9fd77e709e7b": {
      "content": "import { useSelector, useDispatch } from 'react-redux';",
      "doc": "Import Redux hooks (useSelector, useDispatch)",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-import-hooks",
      "matches": {
        "irrh": true,
        "redux import hooks": true
      }
    },
    "83de1a64-baf9-390d-a90e-914bcdb06f8e": {
      "content": "try\n\t${1:${VISUAL}}\ncatch\n\t${2:_:_} -> ${0:got_some_exception}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "83e219be-6030-3340-8e51-e2bfd3a74c67": {
      "content": "# https://kubernetes.io/docs/concepts/storage/persistent-volumes/\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ${1:myapp}\n  namespace: ${2:default}\n  labels:\n    app: ${1:myapp}\nspec:\n  # AKS: default,managed-premium\n  # GKE: standard\n  # EKS: gp2 (custom)\n  # Rook: rook-ceph-block,rook-ceph-fs\n  storageClassName: ${3|default,managed-premium,standard,gp2,rook-ceph-block,rook-ceph-fs|}\n  accessModes:\n  - ${4|ReadWriteOnce,ReadWriteMany,ReadOnlyMany|}\n  resources:\n    requests:\n      storage: ${5:2Gi}\n---\n$0",
      "doc": "k8s PersistentVolumeClaim",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s PersistentVolumeClaim",
      "matches": {
        "k-pvc": true
      }
    },
    "83e51fe7-7f77-3df8-a85d-e10b9b95334b": {
      "content": "font-stretch: extra-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ec": true
      }
    },
    "83ea5741-7cfd-338f-b04b-d8d1c7813d86": {
      "content": "margin-top: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-top": true,
        "mt": true
      }
    },
    "83eaf492-4957-3a22-938c-913deafcc463": {
      "content": "\\begin{center}\n\t${1:TARGET}\n\\end{center}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{center} \\center": true,
        "center": true
      }
    },
    "83eb450b-75dd-31a6-9142-923e68f7baac": {
      "content": "typedef enum ${2:logic[15:0]}\n{\n\t${3:REG = 16'h0000}\n} ${1:my_dest_t};",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tde": true
      }
    },
    "83efb3e5-8e54-35e9-9ece-9fa316ba1d64": {
      "content": "sd(${1:x}${2:, na.rm=${3:FALSE}})",
      "doc": "Standard deviation",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sd",
      "matches": {
        "sd": true
      }
    },
    "83f62393-f19f-39bd-aed8-ea24d3f142ab": {
      "content": "<input type=\"radio\" name=\"${1}\" id=\"${2:$1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:radio": true
      }
    },
    "83fc2fe5-6a26-3375-adf4-3696cd8094ef": {
      "content": "border-bottom-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-style: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "83fc7a48-06e8-3d68-b72b-a6d0bb132267": {
      "content": "if ($1)\n{\n\t${VISUAL}$0\n}\nelse\n{\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if else statement",
      "matches": {
        "ife": true
      }
    },
    "8400d53d-5eee-333f-9ad6-814c2a69a4a9": {
      "content": "try\n{\n\t${VISUAL}$0\n}\nfinally\n{\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try finally block",
      "matches": {
        "tryf": true
      }
    },
    "84065558-71ea-3aac-b112-5ca6cca4164b": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t$0\n}",
      "doc": "DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillupdate",
      "matches": {
        "cwup": true,
        "react componentwillupdate": true
      }
    },
    "841678c7-09f2-3ac9-8f0c-5300665ab51d": {
      "content": "<iframe src=\"${1}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe": true
      }
    },
    "84194623-3cac-3990-9da1-d3469fea314e": {
      "content": "{% html %}\n\t${0}\n{% endhtml %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig html",
      "matches": {
        "html": true
      }
    },
    "841a1a37-20bb-37f5-ae5d-9f0ef806b45b": {
      "content": "include '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "841af13c-f0a8-3c25-b799-4a882ea0dc53": {
      "content": "align-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      }
    },
    "841da792-8796-30d7-9d12-7b86703ecebb": {
      "content": "font-effect: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      }
    },
    "84210e0d-42b0-3212-8997-b20c2868daaf": {
      "content": "import ${1};\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true,
        "imt": true
      }
    },
    "8428ded2-ca61-3bb2-99ab-ec58db73c2b7": {
      "content": "padding-left: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pl": true
      }
    },
    "843533cc-cc5e-3619-a7aa-860b087441ce": {
      "content": "margin: ${1:0} ${2:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:2": true
      }
    },
    "843574d8-b1be-3409-a8d6-869edbda3c49": {
      "content": "__${1:bold}__",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "__": true
      }
    },
    "843dade5-296f-34f6-aa45-cab57c60f0f0": {
      "content": "_.curryRight(${func}, ${arity})",
      "doc": "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curryRight(abc);\n\ncurried(3)(2)(1);\n// => [1, 2, 3]\n\ncurried(2, 3)(1);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(3)(1, _)(2);\n// => [1, 2, 3]\n\nThis method is like `_.curry` except that arguments are applied to `func`\nin the manner of `_.partialRight` instead of `_.partial`.\n\nThe `_.curryRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-curryright",
      "matches": {
        "lodash curryright": true
      }
    },
    "843eb796-d617-34ae-ab31-0b38f8fd9562": {
      "content": "<?php if (${1}): ?>\n\t${0:${VISUAL}}\n<?php else: ?>\n\t${2}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php if (condition): ?> ... <?php else: ?> ... <?php endif; ?>",
      "matches": {
        "ifeil": true
      }
    },
    "84495f90-42b9-3b5f-be99-4f5c519569b0": {
      "content": "${1:callbacks}.disable()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cdis": true
      }
    },
    "844c4c4c-41c9-3fb5-9f3b-3283a9d77ad5": {
      "content": "printf(\"${1}\\n\"${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "printf(\"...\\n\", ...);",
      "matches": {
        "printf": true
      }
    },
    "84572559-c538-32ea-a5ba-d827f61e2cc7": {
      "content": "<optgroup>\n\t<option value=\"${1}\">${2:$1}</option>\n\topt+${0}\n</optgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optgroup": true
      }
    },
    "845757df-f3e3-3b96-b45f-d0e8d42cbdea": {
      "content": "{% for ${1:item} in ${2:sequence} %}\n\t$3\n{% else %}\n\t$4\n{% endfor %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "for/else",
      "matches": {
        "for": true
      }
    },
    "84585e1b-01e5-37ba-9b30-704a1587a7fa": {
      "content": ":- module(${1:name}, [${0:export}]).",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "module": true
      }
    },
    "8459441e-7165-3875-a0de-559e6cce21cf": {
      "content": "#region",
      "doc": "Folding Region Start",
      "filetype": "php",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      }
    },
    "84614323-7899-362d-b16d-041e80197a7c": {
      "content": "try:\n\t${1:pass}\nexcept ${2:expression} as ${3:identifier}:\n\t${4:pass}",
      "doc": "Code snippet for a try/except statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "try/except",
      "matches": {
        "try/except": true
      }
    },
    "84616522-3ac1-3fde-a92f-a9d40a070bc2": {
      "content": "${1:document}.getElementById('${2:id}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getElementById",
      "matches": {
        "gi": true
      }
    },
    "8462441a-7594-3a5d-90a1-c5586bcdda76": {
      "content": "[^${1:id}]: ${2:note}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[^:": true
      }
    },
    "846434dd-a75d-3ca3-8e38-667cfaa3ef67": {
      "content": "const ${1} = Symbol('${0}');",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sym": true
      }
    },
    "84665bed-3584-3e23-8fc9-1c00ec5526c5": {
      "content": "[NSString stringWithFormat:@\"$1\", $2]$0",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSString stringWithFormat (format)",
      "matches": {
        "format": true
      }
    },
    "846c8297-f3f2-3ef0-9609-ac614bafcc50": {
      "content": "<xsl:apply-templates select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "plain",
      "matches": {
        "apply-templates": true
      }
    },
    "846d82ed-82f7-3c47-aa70-f7e6c5b6b50c": {
      "content": "${1:FIELDNAME} = serializers.IPAddressField(${2})",
      "doc": "Django-rest Serializers ``IPAddressField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF IPAddressField",
      "matches": {
        "sip": true
      }
    },
    "8474998f-9538-36b8-967b-c72866a90c5d": {
      "content": "test(${1:case}, [true(${2:var} = ${3:value})]) :-\n  ${0:goal}.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "8480baaf-d603-3611-b960-c2dcf107b50b": {
      "content": "expect($1).toBeLessThan($0);",
      "doc": "expects the argument is less than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobelessthan",
      "matches": {
        "jest expect tobelessthan": true,
        "tblt": true
      }
    },
    "8486d7a2-91c8-3290-b1ab-67fb521096e0": {
      "content": "require 'pry'; binding.pry",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert pry call",
      "matches": {
        "pry": true
      }
    },
    "848878bf-fcc0-3ab1-a8bc-1cb2423160ba": {
      "content": "import { NgModule } from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\n\nimport { ${1:App}Component } from './${1:app}.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n\t],\n\tdeclarations: [${1:App}Component],\n\tbootstrap: [${1:App}Component],\n})\nexport class ${1:App}Module { }\n$0",
      "doc": "Angular Root Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-root-module",
      "matches": {
        "a-module-root": true,
        "angular root module": true
      }
    },
    "848ec832-fd9e-3d2b-a46f-bd7372f1134c": {
      "content": "return ${1} do\n\t${0}\nend return;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "extended return",
      "matches": {
        "ret": true
      }
    },
    "84952042-3499-3294-9fed-f40aa792b66d": {
      "content": "place-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:s": true
      }
    },
    "849e3330-211b-387b-8f08-e80a550f2d49": {
      "content": "function numval-f(${1:string})$0",
      "doc": "corresponding numeric value for floating-point-string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-numval-f",
      "matches": {
        "function numval-f": true
      }
    },
    "84a08883-9d8d-3bdc-9212-36037e763d95": {
      "content": "_.initial(${array})",
      "doc": "_.initial([1, 2, 3]);\n// => [1, 2]\n\nGets all but the last element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-initial",
      "matches": {
        "lodash initial": true
      }
    },
    "84aa317a-9150-35a8-8ab6-06328f05c93e": {
      "content": "- ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert unordered item",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert unordered item",
      "matches": {
        "unordered item": true
      }
    },
    "84aea3ab-fdb8-3d8c-a6c7-2f73884f780c": {
      "content": "$this->${1:method}()->shouldBeEqualTo(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeEqualTo('value')",
      "matches": {
        "sbequalto": true
      }
    },
    "84b068ef-81cb-3dce-88ce-61728d466e64": {
      "content": "[NSGraphicsContext saveGraphicsState];\n$0\n[NSGraphicsContext restoreGraphicsState];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Save and Restore Graphics Context (gsave)",
      "matches": {
        "gsave": true
      }
    },
    "84b39a7b-9f77-35d2-9155-d8d05da99504": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default (WrappedComponent) => {\n\tconst hocComponent = ({ ...props }) => <WrappedComponent {...props} />\n\n\thocComponent.propTypes = {\n\t}\n\n\treturn hocComponent\n}",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-hoc",
      "matches": {
        "hoc": true,
        "react hoc": true
      }
    },
    "84b76590-d69a-30cc-92ed-6f79b06d3958": {
      "content": "for (var ${1:item} in ${2:items}) {\n  $0\n}",
      "doc": "Insert a for-in loop.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "for in",
      "matches": {
        "fori": true
      }
    },
    "84c09450-1a1c-3cb8-9ee1-57caa2a8f262": {
      "content": "<transition-group$1>\n$2\n</transition-group>",
      "doc": "transition-group element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition-group",
      "matches": {
        "transitiongroup": true,
        "vue transition-group": true
      }
    },
    "84c3483c-84bc-3e09-983c-827ff3293599": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} close ${4:#:Account}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "close account",
      "matches": {
        "close": true
      }
    },
    "84c66da1-96ec-330d-8e62-ce8f8a5ef8c9": {
      "content": "for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {\n\t$0\n}",
      "doc": "Code snippet for 'for' loop",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "84c95c62-b61c-3e1b-a2ff-574008ddf509": {
      "content": "function mapDispatchToProps(dispatch) {\n\treturn {\n\t}\n\n}",
      "doc": "Adds the redux mapDispatchToProps function",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "dispatchRedux",
      "matches": {
        "disp": true
      }
    },
    "84ca94fb-d57a-3c1a-a654-31c4d450b061": {
      "content": "unless ${1:condition} do\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do .. else .. end",
      "matches": {
        "unlesse": true
      }
    },
    "84d418b6-7c32-37f9-9a0c-ca372705f18e": {
      "content": "align-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      }
    },
    "84d6df2f-2cca-3f12-abe7-8bb63eb1df6b": {
      "content": "<td id=\"${1}\">${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td#": true
      }
    },
    "84d8123c-caf0-394e-a6fe-e720a404160e": {
      "content": "${1:name} <- function(${2:variables}) {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "fun": true
      }
    },
    "84d84eff-10de-368f-b854-e62c1f5a1bc7": {
      "content": "list-style-position inside",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:i": true
      }
    },
    "84dad03c-769e-382f-bee4-42fdaee404df": {
      "content": "class $1 extends StatefulWidget {\n\t@override\n\t_$1State createState() => _$1State();\n}\n\nclass _$1State extends State<$1> {\n\t@override\n\tWidget build(BuildContext context) {\n\t\treturn Container(\n\t\t\t$2\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "dart-flutter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stful": true
      }
    },
    "84db33a0-87ab-3e30-8de7-662765ed8774": {
      "content": "#include <$0>",
      "doc": "Code snippet for #include < >",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#inc<",
      "matches": {
        "#inc<": true
      }
    },
    "84e3fa72-19fc-38c0-b769-2d1293aaf6a4": {
      "content": "require('svelte/register');\nconst ${1:App} = require('${2:./App.svelte}').default;",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-register",
      "matches": {
        "svelte register": true,
        "svreg": true
      }
    },
    "84e9eb57-6d4b-34b2-a4b3-d1346cd70a0f": {
      "content": "__import__('pdb').set_trace()$0",
      "doc": "Code snippet for pdb debug",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "PDB set trace",
      "matches": {
        "pdb": true
      }
    },
    "84ebc59a-e8db-36ec-8e68-af1fccf15d29": {
      "content": "def __repr__(self):\n\t${1:pass}\n\ndef __str__(self):\n\t${2:pass}\n\ndef __unicode__(self):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing string representation",
      "matches": {
        "repr": true
      }
    },
    "84ec6322-db83-39dc-b6bf-85f96392e3f2": {
      "content": "letter-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      }
    },
    "84ecd603-94fe-38fa-a942-38b56452fd90": {
      "content": "${1:value_key}:\n  readinessProbe:\n\tfailureThreshold: 3\n\tinitialDelaySeconds: 10\n\tperiodSeconds: 10\n\tsuccessThreshold: 1\n\ttimeoutSeconds: 1\n\tport: 10254\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "readinessProbe_values": true
      }
    },
    "84f24ed0-6f7f-370e-85f8-1a47a6b26865": {
      "content": "else if (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "84fb162c-98c8-3f35-b0f4-815edc5a65c8": {
      "content": "var $1 = new sap.m.Text({\n\t\t\ttext :$2,\n\t\t\ttextDirection :$3,\n\t\t\tvisible :$4,\n\t\t\twrapping : $5,\n\t\t\ttextAlign : $6,\n\t\t\twidth :$7,\n\t\t\tmaxLines :$8\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmtext": true
      }
    },
    "850a6a52-92c6-359a-b37b-d51465ae36d4": {
      "content": "shuffle($1)$0",
      "doc": "shuffle",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "shuffle",
      "matches": {
        "shuffle": true
      }
    },
    "850b4d98-b908-340e-8a00-f6e190cb819d": {
      "content": "align-items: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:lb": true
      }
    },
    "851617aa-3a17-34ad-b4e5-79258a18a814": {
      "content": "{%- when ${1:condition} -%}\n$0",
      "doc": "Control flow tag: when, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag when, whitespaced",
      "matches": {
        "when-": true
      }
    },
    "8518f6a3-6557-3eab-a98a-4557e490a3c9": {
      "content": "to!int(${1:str});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toi": true
      }
    },
    "851b6ede-d3c6-3eca-aee7-f26b3d5de726": {
      "content": "for ${1}{\n\t$0\n}",
      "doc": "Snippet for a pure for loop",
      "filetype": "go",
      "grammar": "lsp",
      "label": "for statement",
      "matches": {
        "for": true
      }
    },
    "8530277f-2d6b-3a39-ae0b-9f628ac2bc7b": {
      "content": "getattr(${1:#:obj}, ${2:#:attr})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "getattr(..., ...)",
      "matches": {
        "getattr": true
      }
    },
    "85316f0d-d513-3882-8444-7f5c4d8b21e1": {
      "content": "<article id=\"${1}\">\n\t${0}\n</article>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "article#": true
      }
    },
    "8531c75e-661b-3930-8e49-819509ec8d26": {
      "content": "while (${1:condition}) {\n\t$0\n}",
      "doc": "Snippet for while expression",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "853e4f21-a593-330b-8e7c-687a14427317": {
      "content": "bind:${1:property}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-property",
      "matches": {
        "svbind-property": true,
        "svelte bind property": true
      }
    },
    "85422e62-6def-3384-8a21-a568646024a8": {
      "content": "cmake_minimum_required(VERSION ${0:2.8.2})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      }
    },
    "85447cc8-f2ed-3cbd-b2e3-01714610a390": {
      "content": "# https://kubernetes.io/docs/concepts/services-networking/ingress/\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ${1:example-ingress}\n  namespace: ${2:default}\nspec:\n  rules:\n  - host: ${3:example.foo.com}\n    http:\n      paths:\n      - path: /${4}\n        pathType: ${5|Prefix,Exact|}\n        backend:\n          service:\n            name: ${6:service1}\n            port:\n              number: ${7:80}\n---\n$0",
      "doc": "k8s Ingress",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Ingress",
      "matches": {
        "k-ingress": true
      }
    },
    "854881c9-97be-301d-af18-8ebe50627c36": {
      "content": "MESSAGE \"${1:MessageContent}\" ${2:Data} VIEW-AS ALERT-BOX.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      }
    },
    "854bd2ec-5dcd-3cac-a174-8120ffec9558": {
      "content": "module procedure ${0:name}",
      "doc": "module procedure",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "mp",
      "matches": {
        "mp": true
      }
    },
    "854ee8fe-e162-3640-bc0b-cd4ef896a324": {
      "content": "#include <${1:iostream}>",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "incc": true
      }
    },
    "8551023d-3584-3afa-b4c9-cd5a0596ad7c": {
      "content": "components: {\n\t${1:New},\n},",
      "doc": "Import one component into another, within export statement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-into-the-component",
      "matches": {
        "vcomponents": true,
        "vue import into the component": true
      }
    },
    "85562f22-ba76-3f91-b462-9680c1efb763": {
      "content": ".. tip:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "tip",
      "matches": {
        "tip": true
      }
    },
    "8559b308-8452-394a-8d96-bb49cf269222": {
      "content": "axios.interceptors.response.use(function (response) {\n\t${1:do something}\nreturn response;\n}, function (error) {\n\t${2:do something}\n$return Promise.reject(error);\n});",
      "doc": "You can intercept responses before they are handled by then or catch.",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-interceptors-response",
      "matches": {
        "axios interceptors response": true
      }
    },
    "855cefeb-6911-3da8-a6bb-f81d74d4505a": {
      "content": "waits($1)",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "waits (coffee)",
      "matches": {
        "wa": true
      }
    },
    "85630a9f-c5a8-374c-a978-e2093c81d7e9": {
      "content": "{% trans \"${0:string}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      }
    },
    "856888e3-67ea-3940-9273-bcf1f0bb0d93": {
      "content": "# -*- coding: latin-1 -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clatin1": true
      }
    },
    "85705e7e-76cd-34cd-8d70-e9b429d72bc1": {
      "content": "overflow-x: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      }
    },
    "85729dd9-8799-3a2c-87e2-518e41aa17de": {
      "content": "test \"${1:something interesting}\" do\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "test do..end",
      "matches": {
        "test": true
      }
    },
    "85819133-1352-365a-970d-72047badd92e": {
      "content": "class ${1:Name} extends InheritedWidget {\n  ${1:Name}({Key? key, required this.child}) : super(key: key, child: child);\n\n  final Widget child;\n\n  static ${1:Name}? of(BuildContext context) {\n    return context.dependOnInheritedWidgetOfExactType<${1:Name}>();\n  }\n\n  @override\n  bool updateShouldNotify(${1:Name} oldWidget) {\n    return ${2:true};\n  }\n}",
      "doc": "Class used to propagate information down the widget tree",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Inherited Widget",
      "matches": {
        "inheritedW": true
      }
    },
    "858956db-9d4c-3e18-b9dc-627abe85e5b6": {
      "content": "this.setState({${1:first}})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      }
    },
    "8595902f-fad5-3362-a9e4-577f8d50b6cc": {
      "content": "\"${1:key}\": \"${0:value}\",",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "String",
      "matches": {
        "s": true
      }
    },
    "85985161-355a-3489-9d37-113b08d4813f": {
      "content": "const { request } = require('graphql-request');",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-require-request",
      "matches": {
        "graphql-request require request": true
      }
    },
    "859ad9e7-b29f-3eba-9ce5-d623b44c8d4a": {
      "content": "flexWrap: '${1}',",
      "doc": "flexWrap",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flexWrap",
      "matches": {
        "flex": true
      }
    },
    "859f727b-bc35-3f4f-ae44-6586b09a0590": {
      "content": "@break",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@break",
      "matches": {
        "break": true
      }
    },
    "85a6bb50-3d34-3dbf-b0c1-e070996723a4": {
      "content": "@trusted",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trusted": true
      }
    },
    "85aeae9c-898e-35ba-8646-54267c8bdec7": {
      "content": "props: {\n\t${1:propName}: {\n\t\ttype: ${2:Number},\n\t\tdefault: ${0}\n\t},\n},",
      "doc": "Vue Props with Default",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Props with Default",
      "matches": {
        "vprops": true
      }
    },
    "85aed496-6927-3a54-962a-bbb0311ff1ce": {
      "content": "sort_by {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort_by": true
      }
    },
    "85b37522-4395-3a89-8767-8637651f293a": {
      "content": "JSON.stringify(${1:TARGET}, null, 2);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js": true
      }
    },
    "85b64c3e-45b0-35db-82b7-f663716d8ea3": {
      "content": "font-emphasize-style: accent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      }
    },
    "85b87c4f-a70b-3114-ad0e-de3d46b8b670": {
      "content": "***${1}*** $0",
      "doc": "Insert bold and italic text",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert bold and italic text",
      "matches": {
        "bi": true,
        "bold and italic": true
      }
    },
    "85c64735-5060-3645-bafd-4025fe7d911c": {
      "content": "outline-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true,
        "outline-style": true
      }
    },
    "85c64f22-9232-3a55-8728-6c4a9419532c": {
      "content": "public ${1:int} ${2} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+&": true
      }
    },
    "85c6cab9-42c4-3c49-81a8-83b1d4ed37c1": {
      "content": ":only-child",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      }
    },
    "85cfcc07-3ad0-3a5e-8a80-fae393c97599": {
      "content": "? ${1:trueExpression} : ${2:falseExpression}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      }
    },
    "85d450b0-1dd4-32f4-9178-86534d2fba79": {
      "content": "for ${1:value} in ${2:enumerable} do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "for loop",
      "matches": {
        "for": true
      }
    },
    "85d54f00-4fc8-3b6b-9f3b-0244a28ebe8f": {
      "content": "const express = require('express');\nconst app = express();\nconst port = process.env.PORT || ${1:port};\nconst www = process.env.WWW || '${2:./}';\napp.use(express.static(www));\nconsole.log(`serving \\${www}`);\napp.get('*', (req, res) => {\n\tres.sendFile(`index.html`, { root: www });\n});\napp.listen(port, () => console.log(`listening on http://localhost:\\${port}`));\n$0",
      "doc": "Node.js Express Server",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "node-js-express-server",
      "matches": {
        "angular node express server": true,
        "ex-node-server-simple": true
      }
    },
    "85e3d930-6605-3ea8-8e73-964ffbfc5d73": {
      "content": "_.camelCase(${string})",
      "doc": "_.camelCase('Foo Bar');\n// => 'fooBar'\n\n_.camelCase('--foo-bar--');\n// => 'fooBar'\n\n_.camelCase('__FOO_BAR__');\n// => 'fooBar'\n\nConverts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-camelcase",
      "matches": {
        "lodash camelcase": true
      }
    },
    "85ea4e40-9b11-39b6-9249-dba0901fce7d": {
      "content": "font-emphasize-position: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      }
    },
    "85f04848-0f4c-3793-8fb4-353bd05445e3": {
      "content": "${1:obj}.clone()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clone": true
      }
    },
    "85f0b438-978e-341c-83a8-ddd29553d547": {
      "content": "[org.clojars.hozumi/clj-glob \"0.1.2\"]\n(:require [org.satta.glob :as g])\n(g/glob \"${0:TARGET}\")",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir-glob": true
      }
    },
    "85fb404f-265b-30ee-af09-197424c66f0e": {
      "content": "Plug '${1}', { 'on': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'on': '' }",
      "matches": {
        "plugon": true
      }
    },
    "85fdff98-2e9e-3ebd-9a8f-9bf5428a09b7": {
      "content": "distance($2, $3)",
      "doc": "float distance(float p0, float p1)\nfloat distance(vec2 p0, vec2 p1)\nfloat distance(vec3 p0, vec3 p1)\nfloat distance(vec4 p0, vec4 p1)\n\nThe distance function returns the distance between two points. The distance of two points is the length of the vector d = p0 - p1, that starts at p1 and points to p0. The input parameters can be floating scalars or float vectors. In case of floating scalars the distance function is trivial and returns the absolute value of d.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "distance",
      "matches": {
        "distance": true
      }
    },
    "8601909a-ffa8-3a25-b4a8-14111b7ef282": {
      "content": "signal ${1} : std_logic_vector (${2} downto 0);",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sv": true
      }
    },
    "86038135-b809-3765-9904-f2dcaee9afbd": {
      "content": "for (var i = 0; i < ${1:count}; i++) {\n  $0\n}",
      "doc": "Insert a for loop.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "8606f357-f317-3c00-91fd-59451650a372": {
      "content": "<rp>${0}</rp>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      }
    },
    "86081e24-f705-3d77-82da-19145465561c": {
      "content": "v-show=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-show",
      "matches": {
        "vShow": true
      }
    },
    "860a2f35-e270-362f-99bb-1c85b271222e": {
      "content": "@doc \"\"\"\n${1:doc string}\n\"\"\"\n@spec ${2:name}(${3:arg types}) :: ${4:no_return}\ndef $2(${5:args}) do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defsd": true
      }
    },
    "860faff7-ccad-3cd7-9b71-4cdbfb3db141": {
      "content": "select do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seld": true
      }
    },
    "8614cc4b-ed1c-3176-94b7-7e74f9c6af3d": {
      "content": "return new Promise((resolve, reject) => { ${1:first} })",
      "doc": "Creates and returns a new Promise in the standard ES7 syntax",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "promise",
      "matches": {
        "prom": true
      }
    },
    "862090ad-b798-3744-ac8d-df5572c92c95": {
      "content": "import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: ${1},\n});\n\nexport default api;",
      "doc": "Create Axios Configuration file",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "api",
      "matches": {
        "api": true
      }
    },
    "8622bd87-8a3e-3cac-bf24-9dbc0039ebaf": {
      "content": "for [${1},${2}] in items(${3})\n\t${0}\n\tunlet $1 $2\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for [key, value] in loop",
      "matches": {
        "forkv": true
      }
    },
    "86237ba0-c73a-3268-a3ea-8f6e34727d65": {
      "content": "render partial: '${1:item}', status: ${0:500}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rps": true
      }
    },
    "8628bcd9-8bda-3dd6-a92b-104aba2dcd63": {
      "content": "archive { \"${1:filename}\":\n\tensure     => ${2:present},\n\turl        => \"http://${3:url}\",\n\textension  => \"${4:tgz}\",\n\ttarget     => \"${5:target}\",\n\tchecksum   => ${6:false},\n\tsrc_target => \"${7:/tmp}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "archive": true
      }
    },
    "862e92c5-1ca0-34f3-af58-d0abb2306d76": {
      "content": "border-left-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli": true
      }
    },
    "8633cba9-8280-3afb-a500-d0327631f8e6": {
      "content": "options(${1:...})",
      "doc": "Options",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "opt",
      "matches": {
        "option": true
      }
    },
    "8635ff17-2cd2-362d-809d-2530f85075d1": {
      "content": "panic(\"${0:msg}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "panic()",
      "matches": {
        "pn": true
      }
    },
    "86398bc8-f325-3039-b44b-89a4b8f1d99a": {
      "content": "removetags:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      }
    },
    "863acbc3-3fd1-31d9-bbf8-cd24fe130001": {
      "content": "$this->input->is_cli_request();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-is_cli_request": true
      }
    },
    "8641cec4-7cf3-30a7-ae80-f22100ac8a6a": {
      "content": "class ${0:BlankSlate}\n\tinstance_methods.each { |meth| undef_method(meth) unless meth =~ /\\A__/ }\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "class BlankSlate .. initialize .. end",
      "matches": {
        "blankslate": true
      }
    },
    "8646d488-8108-3786-80ac-efdb7a7b464c": {
      "content": "@return {${1:type}} ${0:description}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@ret": true
      }
    },
    "86496a84-beed-348b-88f8-41490d2b4a30": {
      "content": "text-justify: distribute",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      }
    },
    "86498396-888b-3409-845e-4b4f36231ecd": {
      "content": "border-top-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      }
    },
    "864d240f-7dc5-329b-b3d7-1953fa5b1b05": {
      "content": "// MARK: - Private",
      "doc": "Create a MARK: - Private",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - Private",
      "matches": {
        "markprivate": true
      }
    },
    "864db856-09f2-39d2-894b-08a33590f27c": {
      "content": "case ${1} of\n\t${2} =>\n\t\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "86547209-f0ab-3b73-b1bc-a000157c569a": {
      "content": "_.nth(${array}, ${n})",
      "doc": "var array = ['a', 'b', 'c', 'd'];\n\n_.nth(array, 1);\n// => 'b'\n\n_.nth(array, -2);\n// => 'c';\n\nGets the element at index `n` of `array`. If `n` is negative, the nth\nelement from the end is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-nth",
      "matches": {
        "lodash nth": true
      }
    },
    "865673d6-a833-3342-bb70-469faa01ac57": {
      "content": "setGeneric(\"${1:generic}\", function(${2:x, ...}) {\n    standardGeneric(\"${1:generic}\")\n})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "setGeneric",
      "matches": {
        "sg": true
      }
    },
    "865831c5-f6eb-316f-8327-200f720a5ffd": {
      "content": "border-corner-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      }
    },
    "865833e7-4f82-334b-97c3-0c6ff2358859": {
      "content": "border-top-right-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      }
    },
    "866bdc0a-f453-3f12-9c97-204a5488436d": {
      "content": "=head2 ${1:MethodName}\n\n${0:Summary...}\n\n\n=cut",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psubi": true
      }
    },
    "8677d036-f52c-3ded-a159-991e64eab5c5": {
      "content": "class ${1}Inline(admin.StackedInline):\n\t'''Stacked Inline View for ${1}'''\n\n\tmodel = ${2:${1}}\n\tmin_num = ${3:3}\n\tmax_num = ${4:20}\n\textra = ${5:1}\n\traw_id_fields = (${6},)",
      "doc": "Stacked Inline",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "stackedinline",
      "matches": {
        "stackedinline": true
      }
    },
    "867a11d1-0b0b-3ff4-90ca-a96b1e0b33f3": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if error not nil, return err",
      "matches": {
        "ir": true
      }
    },
    "867ba4c8-308e-3bbb-8534-1360e6a167b4": {
      "content": "// MARK: - Public",
      "doc": "Create a MARK: - Public",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - Public",
      "matches": {
        "markpublic": true
      }
    },
    "867cc8ad-10e0-3cd9-acd2-f31aa41a866a": {
      "content": "${1:obj}.blur(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blur": true
      }
    },
    "86812d41-67c6-334c-ac1f-f3b11997b23a": {
      "content": "${1:public} ${2:$TM_FILENAME_BASE}(${3:Parameters})\n{\n    $0\n}",
      "doc": "constructor",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "constructor",
      "matches": {
        "ctor": true
      }
    },
    "868f4515-478e-37b9-b119-5a9b2e9bc834": {
      "content": "borderTopWidth: ${1},",
      "doc": "borderTopWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderTopWidth",
      "matches": {
        "bor": true
      }
    },
    "86987834-21bd-3b59-ad16-40ec7dc3f28e": {
      "content": "border-bottom-left-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      }
    },
    "869b28a5-5a8b-372c-b7f4-7544c26e34eb": {
      "content": "afterAll(() => {\n\t$0\n});",
      "doc": "afterAll function is called once after all specs",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-afterall",
      "matches": {
        "aa": true,
        "jest afterall": true
      }
    },
    "869b332b-690c-369b-bdbe-d62a1a7f6a00": {
      "content": "letter-spacing: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letter-spacing": true,
        "ls": true
      }
    },
    "86a32278-42e7-35ac-8173-cf62321cbc07": {
      "content": "<header class=\"${1}\">\n\t${0}\n</header>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "header.": true
      }
    },
    "86a68d06-e709-3fe5-8a93-945d4a9f825e": {
      "content": "const {\n  ${1:queryName}: { childImageSharp: {fixed: ${2:imageFixed}}}\n} = useStaticQuery(graphql`\n  query {\n    ${1:queryName}: file(relativePath: { eq: \"${3:imagePath.png}\" }) {\n      childImageSharp {\n        fixed(width: ${4:300}) {\n          ...${5|GatsbyImageSharpFixed,GatsbyImageSharpFixed_noBase64,GatsbyImageSharpFixed_tracedSVG,GatsbyImageSharpFixed_withWebp,GatsbyImageSharpFixed_withWebp_noBase64,GatsbyImageSharpFixed_withWebp_tracedSVG|}\n        }\n      }\n    }\n  }\n`)",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-usestaticquery-fixed",
      "matches": {
        "gatsby-image usestaticquery fixed": true
      }
    },
    "86a6f659-dbd9-3daa-91ea-5e1741982cad": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>",
      "doc": "add a script to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-tag",
      "matches": {
        "s-script": true
      }
    },
    "86a763a5-a488-3e71-9b10-d111d82326ad": {
      "content": "switch ${1:#:v} {\ncase ${2:#:condition}:\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch {}",
      "matches": {
        "switch": true
      }
    },
    "86a854a4-9ffd-3bdd-95f8-45dc1f0d8cd1": {
      "content": "_.isElement(${value})",
      "doc": "_.isElement(document.body);\n// => true\n\n_.isElement('<body>');\n// => false\n\nChecks if `value` is likely a DOM element.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iselement",
      "matches": {
        "lodash iselement": true
      }
    },
    "86a8ae6e-58e8-3236-aa4b-94d9f04421e9": {
      "content": "${1:deferred}.resolveWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dresw": true
      }
    },
    "86ae3b35-bd5d-390e-a630-393b7f301b91": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{/each}",
      "doc": "each block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-block",
      "matches": {
        "s-each-block": true
      }
    },
    "86ae42e1-49ee-3add-aca0-dd0563076bf5": {
      "content": "<?php\n\n/**\n * ${1:}\n */\nclass ${2:Site}Controller extends ${3:CController}\n{\n\t  public function action${4:Index}()\n\t  {\n\t      ${0}\n\t  }\n\n\t// -----------------------------------------------------------\n\t// Uncomment the following methods and override them if needed\n\t/*\n\tpublic function filters()\n\t{\n\t\t// return the filter configuration for this controller, e.g.:\n\t\treturn array(\n\t\t\t'inlineFilterName',\n\t\t\tarray(\n\t\t\t\t'class'=>'path.to.FilterClass',\n\t\t\t\t'propertyName'=>'propertyValue',\n\t\t\t),\n\t\t);\n\t}\n\n\tpublic function actions()\n\t{\n\t\t// return external action classes, e.g.:\n\t\treturn array(\n\t\t\t'action1'=>'path.to.ActionClass',\n\t\t\t'action2'=>array(\n\t\t\t\t'class'=>'path.to.AnotherActionClass',\n\t\t\t\t'propertyName'=>'propertyValue',\n\t\t\t),\n\t\t);\n\t}\n\t*/\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycontroller": true
      }
    },
    "86af713c-006e-3fb8-90cf-7d52fd13ab64": {
      "content": "font-variant: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      }
    },
    "86b22d1a-518a-37ef-83bd-9f1e6d554f13": {
      "content": "componentWillMount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      }
    },
    "86b74e97-9f83-3961-bb82-74925fb58833": {
      "content": "_.unionWith(${arrays}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\nvar others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.unionWith(objects, others, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\nThis method is like `_.union` except that it accepts `comparator` which\nis invoked to compare elements of `arrays`. Result values are chosen from\nthe first array in which the value occurs. The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unionwith",
      "matches": {
        "lodash unionwith": true
      }
    },
    "86b7c140-a890-36c5-946d-d0e4f7097442": {
      "content": "import { withTheme } from 'styled-components';",
      "doc": "import { withTheme } from 'styled-components'",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-import-with-theme-from-styled-components",
      "matches": {
        "imsct": true,
        "styled-components import withtheme": true
      }
    },
    "86b8e966-4c5b-3c10-ba82-dafdeaa57cbc": {
      "content": "__syncthreads();",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Synchonize threads",
      "matches": {
        "sync": true
      }
    },
    "86bcee2e-261f-3281-8ced-ac27568a7ec6": {
      "content": "describe \"${1}\" $ do\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "desc": true
      }
    },
    "86bfb9c1-f93f-317e-8d84-8b25bbc094ab": {
      "content": "_.methodOf(${object}, ${args})",
      "doc": "var array = _.times(3, _.constant),\n    object = { 'a': array, 'b': array, 'c': array };\n\n_.map(['a[2]', 'c[0]'], _.methodOf(object));\n// => [2, 0]\n\n_.map([['a', '2'], ['c', '0']], _.methodOf(object));\n// => [2, 0]\n\nThe opposite of `_.method`; this method creates a function that invokes\nthe method at a given path of `object`. Any additional arguments are\nprovided to the invoked method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-methodof",
      "matches": {
        "lodash methodof": true
      }
    },
    "86bfeec3-880b-369b-ab82-6d116edad3ff": {
      "content": "echo CHtml::activeRadioButtonList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yharbl": true
      }
    },
    "86d3e1df-4f30-3cf0-a6a3-8f815d121523": {
      "content": "define('$1', ${2:'$3'});\n$0",
      "doc": "Definition",
      "filetype": "php",
      "grammar": "lsp",
      "label": "define(…, …)",
      "matches": {
        "def": true
      }
    },
    "86d80531-656f-3236-8317-996585bd61ef": {
      "content": "def_delegator :${1:@del_obj}, :${2:del_meth}, :${0:new_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defd": true
      }
    },
    "86dda54f-063c-3f04-96b0-12f87c11c5d3": {
      "content": "PropTypes.string.isRequired,",
      "doc": "String prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-string-required",
      "matches": {
        "prop-types string required": true,
        "ptsr": true
      }
    },
    "86e443f2-c687-3032-83a8-4de6ae81f956": {
      "content": "{-# OPTIONS_HADDOCK ${0:hide} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "haddock": true
      }
    },
    "86eb71eb-07da-3dcc-bea5-d22b8bfaa4ac": {
      "content": "_.words(${string}, ${pattern})",
      "doc": "_.words('fred, barney, & pebbles');\n// => ['fred', 'barney', 'pebbles']\n\n_.words('fred, barney, & pebbles', /[^, ]+/g);\n// => ['fred', 'barney', '&', 'pebbles']\n\nSplits `string` into an array of its words.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-words",
      "matches": {
        "lodash words": true
      }
    },
    "86ed8e9b-162b-337b-a3d2-96b4a2b9a3f1": {
      "content": "unregisterModule",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "unregisterModule",
      "matches": {
        "unregisterModule": true
      }
    },
    "86fbd509-1584-3af8-a8cc-365a3a4b010f": {
      "content": "filter progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}')",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      }
    },
    "86fc54ee-32c3-3c8b-b70f-d6b0221681ea": {
      "content": "| truncate: ${1:20}, '${2:...}'",
      "doc": "String filter: truncate",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter truncate",
      "matches": {
        "truncate": true
      }
    },
    "86fc8b37-9044-3640-a53a-e10499df6752": {
      "content": "defined(${1:Resource}[\"${2:name}\"])",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defined": true
      }
    },
    "870c00f5-793e-357e-b6dc-9f6b32725aff": {
      "content": "#' @description\n#'\n#' ${1:function description}\n#'\n#' ${2:@param ${3:name}::${4:Type} ${5:Description}}\n#'\n#' ${6:@returns ${7:name}::${8:Type} ${9:Description}}\n#'\n#' @examples\n#'\n#' ${10: function call examples}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function documentation",
      "matches": {
        "docf": true
      }
    },
    "870e59c8-167c-3b3b-aa82-982b6c94d844": {
      "content": "align-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      }
    },
    "8711d6ab-78f1-3490-86bc-2447b71193cb": {
      "content": "for ${1} in ${2}\n\t${0:${VISUAL}}\nendfor",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "for ... in loop",
      "matches": {
        "for": true
      }
    },
    "8718ced3-4197-32e2-a444-c41c2d8afa14": {
      "content": "{\n\tpath: '${1:path}', \n\tcomponent: ${2:Component},\n\tchildren: [\n\t\t{ path: '${3:childpath}', component: ${4:ChildComponent} }\n\t]\n},$0",
      "doc": "Angular route path with children",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Route Path with Children",
      "matches": {
        "a-route-path-with-children": true
      }
    },
    "87212689-e48e-34b5-98e1-45e264f1a012": {
      "content": "func (${1:receiver} ${2:type}) ${3:funcName}(${4}) ${5:error} {\n\t${6}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "method",
      "matches": {
        "fum": true
      }
    },
    "872341a1-4fab-3e48-a01e-8c9bfc3e683a": {
      "content": "background-size ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      }
    },
    "8725de6a-20d1-3789-8298-a1af79ba26a9": {
      "content": "~~${1:${TM_SELECTED_TEXT}}~~$0",
      "doc": "Insert strikeout",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert strikeout",
      "matches": {
        "strikeout": true
      }
    },
    "872664b5-6b5c-3359-8942-44c12fd4acdb": {
      "content": "default:\n    ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true,
        "default": true
      }
    },
    "8729e254-f4c4-33ce-a8b5-799b8f119ae4": {
      "content": "JSON.parse($0)",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "JSON.parse()",
      "matches": {
        "jp": true
      }
    },
    "872a398e-a5d8-3679-8e4c-06eb5c8203e2": {
      "content": "background-origin: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      }
    },
    "872db4c1-2361-35ae-9cee-d679cbff67b8": {
      "content": "@before-appear=\"$1\"$0",
      "doc": "@before-appear=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "before-appear",
      "matches": {
        "beforeAppearEvent": true
      }
    },
    "873549a5-6b93-3cc7-b4de-df8578d82095": {
      "content": "${1|this,vm|}.\\$children$2",
      "doc": "Type: Array<Vue instance>. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$children",
      "matches": {
        "vmChildren": true
      }
    },
    "87460ae6-9405-3c0b-a95b-70d15668ce1a": {
      "content": "padding-bottom: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-bottom": true,
        "pb": true
      }
    },
    "87496a99-9354-33a7-9390-30e328ab9192": {
      "content": "font-emphasize-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      }
    },
    "874dd583-1b73-3105-883c-f1e22f7d56f6": {
      "content": "GRANT ALL PRIVILEGES ON ${1:db}.${2:tb} TO '${3:user_name}'@'${4:localhost}';",
      "doc": "Grant privileges",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "grantuser",
      "matches": {
        "grantuser": true
      }
    },
    "874e74ce-f9ad-313b-8471-646bb7bd1a28": {
      "content": "text-transform: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text-transform": true,
        "tt": true
      }
    },
    "874f0b68-752e-320b-9e8f-2d50458f2c0c": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      }
    },
    "875573dd-701b-3880-aa31-c4e741c57d8d": {
      "content": "| script_tag",
      "doc": "HTML filter: script tag",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter script tag",
      "matches": {
        "script_tag": true
      }
    },
    "87579070-c425-3ed5-8bc3-6b5c0151fa50": {
      "content": "align-items: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      }
    },
    "87604bfd-8d2c-3cf4-9974-2b8864bfdeab": {
      "content": "<% if (${1:condition}) { %>\n $2\n<% } %>",
      "doc": "EJS if statement",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS If Statement",
      "matches": {
        "ejsif": true
      }
    },
    "8762e197-0e37-37de-9057-d2eb74c585ee": {
      "content": "NSMutableArray ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsma": true
      }
    },
    "876d6f23-3ee5-31ae-9e21-210c20c3be16": {
      "content": "vertical-align: top;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      }
    },
    "876de70c-a10a-3602-8589-17fb0bbade2c": {
      "content": "console.warn(${0:TARGET});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "console-warn": true,
        "cw": true
      }
    },
    "876f23d8-b66d-3cd0-b7e1-75b1d67c3463": {
      "content": "<nav class=\"${1}\">\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav.": true
      }
    },
    "87797964-55ab-327b-903e-7bef06bdc060": {
      "content": "around_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maru": true
      }
    },
    "877a2780-3fe0-3f19-91f1-be6bf470e980": {
      "content": "<input type=\"file\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:file": true
      }
    },
    "877a82b5-d585-39dc-bad5-776943fcc37d": {
      "content": "[${0:foo} release];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rel": true
      }
    },
    "877d0e31-3001-3071-b242-3226c3b2b783": {
      "content": "else if ${1:condition} {\n\t$0\n}",
      "doc": "else clause with a nested if statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "elif": true
      }
    },
    "878a1984-365c-3d42-8917-0b0a1fdf47bc": {
      "content": "{${1:expression}}",
      "doc": "basic expression",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression",
      "matches": {
        "s-expression": true
      }
    },
    "878e4230-95e5-3960-abd4-1a2a390a7746": {
      "content": "ubound(${1:source}${2:, dim=${3:1}})",
      "doc": "Upper Bound",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "ubound",
      "matches": {
        "ubound": true
      }
    },
    "878f48ca-8ff5-3cdd-84d2-cf99a6df4283": {
      "content": "{% include '${1:#:template}' with {${2:#:'key'}: ${2:#:'value'}} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% include '...' %}",
      "matches": {
        "includewith": true
      }
    },
    "878ff699-ac32-3bfb-be92-547be7fe51ff": {
      "content": "(${1:name} [${2:this} ${3:args}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "met": true
      }
    },
    "8790431a-3b9b-3629-9f72-567886084210": {
      "content": "overflow-style panner",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:p": true
      }
    },
    "879507a5-a6ae-30ca-bf84-d6120de472f4": {
      "content": "assert_not_same ${1:unexpected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asns": true
      }
    },
    "879adc92-cef0-3f45-8c0b-9a7bd1dc73f9": {
      "content": "mutable.Map[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmap": true
      }
    },
    "87a824f6-ffeb-3c56-b42a-a57c588e34bc": {
      "content": "do{\n\t${0:${VISUAL}}\n}while (${1:/* condition */});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "87a87c05-c248-34ae-854a-4423c6769f34": {
      "content": "inout",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ino": true
      }
    },
    "87badad9-384c-3a60-ba86-a0aecb4026ad": {
      "content": "constructor (${1:type} ${2:name}) public {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "constructor declaration",
      "matches": {
        "const": true
      }
    },
    "87c8861c-b771-3e93-85a5-d428e5369aee": {
      "content": "int choice;\nwhile (1)\n{\n\tstatic struct option long_options[] =\n\t{\n\t\t/* Use flags like so:\n\t\t{\"verbose\",\tno_argument,\t&verbose_flag, 'V'}*/\n\t\t/* Argument styles: no_argument, required_argument, optional_argument */\n\t\t{\"version\", no_argument,\t0,\t'v'},\n\t\t{\"help\",\tno_argument,\t0,\t'h'},\n\t\t${1}\n\t\t{0,0,0,0}\n\t};\n\n\tint option_index = 0;\n\n\t/* Argument parameters:\n\t\tno_argument: \" \"\n\t\trequired_argument: \":\"\n\t\toptional_argument: \"::\" */\n\n\tchoice = getopt_long( argc, argv, \"vh\",\n\t\t\t\tlong_options, &option_index);\n\n\tif (choice == -1)\n\t\tbreak;\n\n\tswitch( choice )\n\t{\n\t\tcase 'v':\n\t\t\t${2}\n\t\t\tbreak;\n\n\t\tcase 'h':\n\t\t\t${3}\n\t\t\tbreak;\n\n\t\tcase '?':\n\t\t\t/* getopt_long will have already printed an error */\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\t/* Not sure how to get here... */\n\t\t\treturn EXIT_FAILURE;\n\t}\n}\n\n/* Deal with non-option arguments here */\nif ( optind < argc )\n{\n\twhile ( optind < argc )\n\t{\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getopt": true
      }
    },
    "87cde127-37b4-3c6c-8704-fd1a3bbc080b": {
      "content": "<script>\nexport default {\n  ${0}\n}\n</script>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <script> with JavaScript",
      "matches": {
        "script_with_JavaScript": true
      }
    },
    "87d215fe-ea7f-36b0-ba99-db262cbdd3aa": {
      "content": "add_column :${1:table_name}, :${2:column_name}, :${0:data_type}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mac": true
      }
    },
    "87d403e6-28cd-3687-bdd7-f87d9fb43424": {
      "content": "add_library(${1:lib} ${${0:srcs}})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      }
    },
    "87d4d40b-c962-3982-948a-918b56579fdd": {
      "content": "{\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "{ ... }",
      "matches": {
        "block": true
      }
    },
    "87da84a5-7a2b-3d36-848e-44d03b286cbc": {
      "content": "import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ${1:${TM_FILENAME_BASE}} extends PureComponent {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a React pure component class with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactPureComponent",
      "matches": {
        "rpc": true
      }
    },
    "87db1412-47dc-37fa-846c-364ff456424c": {
      "content": "if (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "87ddeb9c-431f-3a96-8435-f7f55a8e77f3": {
      "content": "(let [${1:name} ${2:expr}]\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "87de6444-15d0-35c8-bee4-35aeb1504622": {
      "content": "import '${1:contract}';",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "import contract",
      "matches": {
        "im": true
      }
    },
    "87e48ff2-ff3b-31ec-a42c-8705a620193d": {
      "content": "it('${1:description}', () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "it synchronous",
      "matches": {
        "its": true
      }
    },
    "87ea5ea8-a3b7-3bec-b183-7e71839a4210": {
      "content": "elseif {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "87ebcbd7-8403-3c50-bec8-8c4fadaa6bd5": {
      "content": "${1:$foo}->get${0:Bar}();",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$g": true
      }
    },
    "87eeec68-283f-3238-8a45-585d155e2a8e": {
      "content": "def ${1:funcname}(self, ${2:parameter_list}):\n\t${3:pass}",
      "doc": "Code snippet for a class method",
      "filetype": "python",
      "grammar": "lsp",
      "label": "def(class method)",
      "matches": {
        "def class method": true
      }
    },
    "87f10d97-2192-39d4-abd3-7270be081838": {
      "content": "yup.addMethod()",
      "doc": "yup.addMethod(schemaType: Schema, name: string, method: ()=> Schema): void\n\nAdds a new method to the core schema types. A friendlier convenience method for schemaType.prototype[name] = method.yup.addMethod(yup.date, \"format\", function(formats, parseStrict) {\n  return this.transform(function(value, originalValue) {\n    if (this.isType(value)) return value;\n\n    value = Moment(originalValue, formats, parseStrict);\n\n    return value.isValid() ? value.toDate() : new Date(\"\");\n  });\n});",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "yup-add-method",
      "matches": {
        "yup addmethod": true
      }
    },
    "87f258b9-6898-3bd5-bd4d-e09617f122f9": {
      "content": "${1:obj}.parents('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parents": true
      }
    },
    "880a3705-0787-3d76-9128-ec1aa4fbe605": {
      "content": "function ${1:name}(${2:arguments})\n\t$0\nend",
      "doc": "Code snippet to create a function.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "fun": true,
        "func": true,
        "function": true
      }
    },
    "880fc30d-7dfa-31dc-9c14-c5df690fb78e": {
      "content": "receive do\n\t${1} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      }
    },
    "88121614-bd44-333b-9f41-0458395b66f6": {
      "content": "/**\n * @Route(\"$3\", name=\"$4\")\n * @Method({${5:\"POST\"}})\n * @Template()\n */\npublic function $1Action($2)\n{\n\t$6\n}",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 action",
      "matches": {
        "act": true
      }
    },
    "8814f8cf-a2d7-3b0e-8edb-6037c52ef749": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component",
      "matches": {
        "vbase": true
      }
    },
    "881bd0eb-3b3b-3766-93b5-830dd2501a26": {
      "content": "border-right-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs": true
      }
    },
    "882447e9-2cbe-3f55-a423-c48d36b17ed1": {
      "content": "sort(${1:dataArray}${2:, }${0:count});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      }
    },
    "882a5372-aad5-3334-ac3d-b993ecb6d751": {
      "content": "checked (${1:#:var}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "checked () {}",
      "matches": {
        "checked": true
      }
    },
    "88325d40-8067-3247-b48e-7413edf264e6": {
      "content": "for (const ${1:key} in ${2:object}) {\n\tif (${2:object}.hasOwnProperty(${1:key})) {\n\t\tconst ${3:element} = ${2:object}[${1:key}];\n\t\t$0\n\t}\n}",
      "doc": "For-In Loop",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "For-In Loop",
      "matches": {
        "forin": true
      }
    },
    "8849110a-d08c-376d-902b-8da44e3b7de8": {
      "content": "do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "884b74b3-317e-327f-9581-0c8569a8107b": {
      "content": "\\begin{enumerate}\n\t\\item ${1:TARGET}\n\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{enumerate} \\enumerate enum": true,
        "enumerate": true
      }
    },
    "884ea633-e817-398f-b4a5-ce844bebe202": {
      "content": "auto ${1:f} = File(${2:\"useful_info.xml\"}, ${3:\"rw\"});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "file": true
      }
    },
    "884eaa80-f5d8-3123-8664-ccfd8f4057a7": {
      "content": "${1}defined('${2}')${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "885c0bc2-7cb1-363a-bdbc-535625fac012": {
      "content": "pluralize:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      }
    },
    "88621961-318b-3618-99dc-94bec5a1487b": {
      "content": "text-align-last: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      }
    },
    "886404b6-1d3a-30ea-ba74-be2e51c135e0": {
      "content": "class ${1:name} {\n\tconstructor (${2:arguments}) {\n\t\t${0}\n\t}\n}\n\nmodule.exports = ${1:name}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module as class",
      "matches": {
        "mec": true
      }
    },
    "886434c3-787f-3b6c-8c99-628c9fa3017e": {
      "content": "NSAutoreleasePool *${1:pool} = [[NSAutoreleasePool alloc] init];\n${0}\n[$1 drain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pool": true
      }
    },
    "886611da-abc4-3d3c-9eca-31aee57e4ca0": {
      "content": "message(FATAL_ERROR \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(FATAL_ERROR \"...\")",
      "matches": {
        "fatal_error_message": true
      }
    },
    "886afd0b-19e9-3c14-a509-f7f8746243b0": {
      "content": "(define (${1:name})\n\t\t(${0:definition}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "886fcab2-cb36-3952-95bc-81cf2a9c43c9": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig block",
      "matches": {
        "bl": true
      }
    },
    "88739640-849c-334c-9cdc-9c4a817000fc": {
      "content": "const dispatch = createEventDispatcher();",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-dispatch",
      "matches": {
        "svdp": true,
        "svelte dispatch": true
      }
    },
    "8873e7b9-dec4-32fc-b86a-0cc63ae167ea": {
      "content": "<FilesMatch \"${1:regex}\">\n\t${0:${VISUAL}}\n</FilesMatch>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filesmatch": true
      }
    },
    "887561e0-e74c-33ca-9a1a-58c66165fece": {
      "content": "{#each ${1:items} as ${2:item}}\n\t${3: <!-- content here -->}\n{/each}",
      "doc": "each block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-block",
      "matches": {
        "sveach": true,
        "svelte each": true
      }
    },
    "887e191e-0f7f-326e-8c9d-28abb6b3e167": {
      "content": "<tr>\n\t<td>${1}</td>\n\ttd+${0}\n</tr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr+": true
      }
    },
    "8881c466-aaed-3885-b715-ff7b9f147a2a": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypestrict": true
      }
    },
    "8881dd6f-77fa-342d-808f-74ae35e82dd2": {
      "content": "_.toSafeInteger(${value})",
      "doc": "_.toSafeInteger(3.2);\n// => 3\n\n_.toSafeInteger(Number.MIN_VALUE);\n// => 0\n\n_.toSafeInteger(Infinity);\n// => 9007199254740991\n\n_.toSafeInteger('3.2');\n// => 3\n\nConverts `value` to a safe integer. A safe integer can be compared and\nrepresented correctly.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tosafeinteger",
      "matches": {
        "lodash tosafeinteger": true
      }
    },
    "88855fc7-c930-32cb-9bb7-7b3551e4da18": {
      "content": "${1:FIELDNAME} = models.ImageField($2, upload_to=${3:None}, height_field=${4:None}, width_field=${5:None}, max_length=${5:100})",
      "doc": "ImageField (mimg).\n\nInherits all attributes and methods from FileField, but also validates that the uploaded object is a valid image.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mimg",
      "matches": {
        "mimg": true
      }
    },
    "88858510-1810-3132-aa14-58a499434787": {
      "content": "assert_redirected_to ${2:${12:parent}_${13:child}_path(${14:@}${15:$12}, ${16:@}${17:$13})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (nested path)",
      "matches": {
        "artnp": true
      }
    },
    "888c9c2e-1085-3a96-9da6-7b37e86bbbd6": {
      "content": "{${1:array}.map((item) => <${2:elementName} key={item.id}>\n\t$0\n</${2}>)}",
      "doc": "an element self closed",
      "filetype": "react",
      "grammar": "lsp",
      "label": "jsx elements map",
      "matches": {
        "jm": true
      }
    },
    "8890a534-8034-3f15-8dec-e598570217d1": {
      "content": "const ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts const",
      "matches": {
        "tconst": true
      }
    },
    "8890c487-b35b-35a3-bc89-764e66d68097": {
      "content": "watchEffect(() => {\n\t${1}\n})",
      "doc": "Vue Composition api - watchEffect",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watchEffect",
      "matches": {
        "v3watcheffect": true
      }
    },
    "889116ec-de0f-35a2-8095-b01ebdcd9293": {
      "content": "if ${1:#:condition} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "88960997-1058-3c18-934f-d6f813529629": {
      "content": "\\\\lstinline|${1}| ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lsi": true
      }
    },
    "88965190-2db3-3d4a-b37c-eab7425db208": {
      "content": "it('should ${1:first}', () => { ${2:second} })",
      "doc": "Testing `it` block",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "itBlock",
      "matches": {
        "tit": true
      }
    },
    "88965657-e5d5-30f8-b882-d833dcb6cc2b": {
      "content": "justify-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      }
    },
    "889b4774-3bfb-361e-955d-ad2a68773215": {
      "content": "<%= if ${1} do %>\n  $2\n<% else %>\n  $0\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "ife",
      "matches": {
        "if": true
      }
    },
    "88a16fc3-6f16-3e39-98c7-ac16d15a8f0c": {
      "content": "${1:obj}.remove()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rem": true
      }
    },
    "88a320cc-fdf8-365f-b504-c14cceef83c8": {
      "content": "open('${1:path/or/url/or/pipe}', '${2:w}') { |${3:io}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ope": true
      }
    },
    "88a3b36a-5df3-3910-b9d5-d36ef72dbdf3": {
      "content": "*args${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "args": true
      }
    },
    "88b173f8-3249-30ce-a8bc-c8ccaeb34509": {
      "content": "struct ${1:name} {\n\t${2:/* data */}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "struct",
      "matches": {
        "st": true
      }
    },
    "88b1c9f6-7f2a-3c4c-9712-d87b28aaabd4": {
      "content": "grid-column-gap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      }
    },
    "88b412ad-1ea6-3b3e-9523-8091c7f21e29": {
      "content": "@register.filter\ndef $1(value):\n\treturn value$2",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "register_filter",
      "matches": {
        "register_filter": true
      }
    },
    "88b6afdd-3abd-300f-9ca1-3fbd2fbd1784": {
      "content": "- (${1:unsigned int})${2:#:thing}\n{\n\treturn ${3};\n}\n\n- (void)set${2}:(${1:unsigned int})new${2}\n{\n\t${3} = new${2};\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "PrimitiveType",
      "matches": {
        "acc": true
      }
    },
    "88b90d95-e582-389d-966a-0da0ee862250": {
      "content": "<%= link_to '${1:link text...}', controller: '${0:items}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lic": true
      }
    },
    "88bb2924-41a7-3d4e-a23a-581458bd59ea": {
      "content": "{% section '${1:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section": true
      }
    },
    "88c411c3-6f99-3db0-ac23-abe9d6184db8": {
      "content": "on:${1:eventname}={${2:handler}}",
      "doc": "on event",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event",
      "matches": {
        "svelte on event": true,
        "svon": true
      }
    },
    "88cb5a8e-34fc-3da7-b140-d66e0ae594d2": {
      "content": "_.clamp(${number}, ${lower}, ${upper})",
      "doc": "_.clamp(-10, -5, 5);\n// => -5\n\n_.clamp(10, -5, 5);\n// => 5\n\nClamps `number` within the inclusive `lower` and `upper` bounds.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clamp",
      "matches": {
        "lodash clamp": true
      }
    },
    "88cc5b86-01fc-325b-bf00-22115f3c5c51": {
      "content": "reflect($2, $3)",
      "doc": "float reflect(float I, float N)\nvec2 reflect(vec2 I, vec2 N)\nvec3 reflect(vec3 I, vec3 N)\nvec4 reflect(vec4 I, vec4 N)\n\nThe reflect function returns a vector that points in the direction of reflection. The function has two input parameters of the type floating scalar or float vector: I, the incident vector, and N, the normal vector of the reflecting surface.\n\nSide note: To obtain the desired result the vector N has to be normalized. The reflection vector always has the same length as the incident vector. From this it follows that the reflection vector is normalized if N and I are both normalized.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "reflect",
      "matches": {
        "reflect": true
      }
    },
    "88cd37bd-3528-3787-833b-75c85f5de131": {
      "content": "![${1:alttext}](${2:/images/image.jpg})",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![": true
      }
    },
    "88d9d623-37a1-35a3-9ddf-20c5896f2018": {
      "content": "<iframe id=\"${1}\" src=\"${2}\" frameborder=\"0\"></iframe>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe#": true
      }
    },
    "88e21d99-1083-364d-bbd3-addf6c247117": {
      "content": "class ${1} extends ${2} {\n\t${3}\n\tconstructor(public ${4}: ${5: any}) {\n\t\t${6}\n\t}\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts class extends",
      "matches": {
        "tclax": true
      }
    },
    "88e43201-c538-3c96-92de-24b8dbbccc61": {
      "content": "{for $${1:var} in range(${2:rangeexpr})}\n\t$0\n{/for}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "for command",
      "matches": {
        "for": true
      }
    },
    "88e655cf-398e-3d84-98a4-5e831f5dc1d6": {
      "content": "borderBottomLeftRadius: ${1},",
      "doc": "borderBottomLeftRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderBottomLeftRadius",
      "matches": {
        "bor": true
      }
    },
    "88e759fb-b877-3092-a913-cdcbada6065e": {
      "content": "| replace_first: '${target}', '${replace}' }}",
      "doc": "String filter: replace first",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter replace first",
      "matches": {
        "replace_first": true
      }
    },
    "88e7e6f3-422f-3d80-8464-a4bf2a779141": {
      "content": "render action: '${1:action}', layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ral": true
      }
    },
    "88ef5698-1409-3788-a68e-8661a653585b": {
      "content": "${1:obj}.removeAttr('${2:attribute name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rema": true
      }
    },
    "88f07c09-353f-358d-a4ba-5af5b401acfc": {
      "content": "border-bottom-right-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      }
    },
    "88f85567-79d0-3b43-b8b7-198e0b15acb2": {
      "content": "wont_be_empty",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbe": true
      }
    },
    "88fdce72-29a7-357a-89b5-fd01894252b4": {
      "content": "unless ${1:#:condition}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "unless ... end",
      "matches": {
        "unless": true
      }
    },
    "88ff095c-dd96-3e27-bc68-9a45d8f97b00": {
      "content": "Sink<${1:type}> get ${2:name} => _${2:name}Controller.sink;\nfinal _${2:name}Controller = StreamController<${1:type}>();",
      "doc": "A Sink is the input of a stream.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Sink",
      "matches": {
        "snk": true
      }
    },
    "8904cef8-361d-3b8f-8ba7-c9c286a32471": {
      "content": "await ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "await",
      "matches": {
        "a": true
      }
    },
    "89058e0b-792d-37fa-8302-1f06b09e8fb7": {
      "content": "else\n\t${0:TARGET}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "890af356-a9b6-33c6-9741-fae304fe0c0a": {
      "content": "-webkit-border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w+": true
      }
    },
    "89114c8e-ae9b-3769-9421-068cc78a69b5": {
      "content": "Promise.resolve(${1:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise.resolve",
      "matches": {
        "prs": true
      }
    },
    "891421c0-aa7c-3b09-9732-4f8cccc600c1": {
      "content": "import Vue from 'vue';\nimport ${1:HelloWorld} from './components/${1:HelloWorld}';\n\ndescribe('${1:HelloWorld}.vue', () => {\n\tit('${2:should render correct contents}', () => {\n\t\tconst Constructor = Vue.extend(${1:HelloWorld});\n\t\tconst vm = new Constructor().$mount();\n\t\texpect(vm.$el.querySelector('.hello h1').textContent)\n\t\t\t.to.equal(${3:'Welcome to Your Vue.js App'});\n\t});\n});",
      "doc": "unit test component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Unit Test",
      "matches": {
        "vtest": true
      }
    },
    "8916526b-e9d0-395a-bfed-e16b51a275c9": {
      "content": "append(${1:array}, ${0:element});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      }
    },
    "891d4286-cfe7-3ece-a650-d85b2d22393d": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else if ${3: otherCondition}}\n\t${4: <!-- else if content here -->}\n{:else}\n\t${5: <!-- else content here -->}\n{/if}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-if-block",
      "matches": {
        "svelte if else if": true,
        "svif-else-if": true
      }
    },
    "891e1168-5c8d-3c10-b5a5-d44c2c1e47d1": {
      "content": "rapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rapply": true
      }
    },
    "8921d841-5fc3-31c4-9aee-a78099e26de1": {
      "content": "int main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard main function for a C program",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Main function template",
      "matches": {
        "main": true
      }
    },
    "89255a29-73a5-3d95-a2b5-444e607859ae": {
      "content": "$this->assertNull(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNull($a)",
      "matches": {
        "asnu": true
      }
    },
    "892861e1-3c97-33d2-9007-37ee50738761": {
      "content": "{% for block in ${1:entry.matrixFieldHandle}.all() %}\n\n\t{% if block.type == \"${2:blockHandle}\" %}\n\t\t{{ block.${3:fieldHandle} }}\n\t{% endif %}\n\n\t{% if block.type == \"${4:blockHandle}\" %}\n\t\t{{ block.${5:fieldHandle} }}\n\t{% endif %}\n\n{% endfor %}\n$0",
      "doc": "matrix",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "matrix",
      "matches": {
        "matrix": true
      }
    },
    "892d9762-32d9-3ef2-8e3b-589510ca2546": {
      "content": "${1:obj}.promise(${2:'fx'}, ${3:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "promise": true
      }
    },
    "8931e533-252e-3011-8ae6-b60a70ac4d58": {
      "content": "${1:fn}.apply(${2:this}, ${3:arguments})",
      "doc": "function apply",
      "filetype": "base",
      "grammar": "lsp",
      "label": "function-apply",
      "matches": {
        "base function apply": true
      }
    },
    "8950fa73-bd13-3a99-83cc-db028ef31517": {
      "content": "class ${1:Name}\n{\n    $0\n}",
      "doc": "Class",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Class",
      "matches": {
        "class": true
      }
    },
    "8951f5e7-9816-357d-a2fd-245040c2e031": {
      "content": "link rel=\"stylesheet\" href=\"${1:style.css}\" type=\"text/css\" media=\"${2:all}\"",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      }
    },
    "89562d0d-1de8-3672-849a-b54908075044": {
      "content": ".eqv.",
      "doc": "Equality",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "eqv",
      "matches": {
        "eqv": true
      }
    },
    "8957959a-ae0a-35cc-b56a-3e1066614b48": {
      "content": "grid-auto-rows auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      }
    },
    "89587c35-9238-3a1b-960e-ce84bbca058a": {
      "content": "int ${1:index} = threadIdx.${2:x} + blockIdx.$2 * blockDim.$2;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current index (1D)",
      "matches": {
        "ii": true
      }
    },
    "895b1dd2-d568-3ceb-9d74-b098bc517655": {
      "content": "while (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "895bccea-8203-3d88-847d-4b0b035bb873": {
      "content": "Else\n\t${0}",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "895ef559-9894-300d-8cc3-b287b4884bba": {
      "content": "static ${1:#:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static": true
      }
    },
    "895fc875-b131-3f48-911c-6980f12b966a": {
      "content": "min-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true
      }
    },
    "896f55ad-1d38-344c-98b2-c378442bb3fd": {
      "content": "else {\n\t${1}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "89803a71-6cc4-3cb7-b785-3a5ef8b50290": {
      "content": "case ${1} is\n\t${2}\nend case;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      }
    },
    "89843266-a1e5-33a1-b8c0-2c7f9fdb9246": {
      "content": "font-emphasize-style accent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ac": true
      }
    },
    "89873980-c712-3248-9408-87c09a7758ee": {
      "content": "@startuml\n $1\n@enduml",
      "doc": "Inside $1 begin defining your model",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Uml",
      "matches": {
        "startuml": true
      }
    },
    "89987135-8c21-3677-adaf-36cc05e4a6b2": {
      "content": "padding: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      }
    },
    "899b9881-d9fc-3780-9eca-b851a68b117b": {
      "content": "${1:FIELDNAME} = serializers.PrimaryKeyRelatedField(${2})",
      "doc": "Django-rest Serializers ``PrimaryKeyRelatedField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF PrimaryKeyRelatedField",
      "matches": {
        "spkr": true
      }
    },
    "899d96fc-70db-3f20-b6a9-7eb1ebcd1772": {
      "content": "var_export(${1}, true)",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inspect": true,
        "var_export": true
      }
    },
    "899ea118-a006-35df-8352-6f036a5d17a9": {
      "content": "if (!${1})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifn": true
      }
    },
    "899f3b03-5869-3b6d-b302-de744182cf17": {
      "content": "_.noop()",
      "doc": "_.times(2, _.noop);\n// => [undefined, undefined]\n\nThis method returns `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-noop",
      "matches": {
        "lodash noop": true
      }
    },
    "89a11600-db37-3099-83f8-38bbb0e8e19f": {
      "content": "<meta name=\"viewport\" content=\"${1:width=device-width, initial-scale=1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaviewport": true
      }
    },
    "89a3451c-3c16-3bf2-aba0-385053a82231": {
      "content": "{% include '${1:snippet}', ${2:variable}: ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "includewith": true
      }
    },
    "89aa0413-1889-3493-b482-1ad7ccc9c3c4": {
      "content": "format_args!(\"${1}\")",
      "doc": "format_args!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "format_args",
      "matches": {
        "format_args": true
      }
    },
    "89ac3116-4a9b-3dc3-9336-6876338974c0": {
      "content": "margin: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin",
      "matches": {
        "mar": true
      }
    },
    "89add771-e8cc-32c5-bc19-86e89cc0d198": {
      "content": "Capture Page Screenshot    ${1:${optional filename}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Capture Page Screenshot",
      "matches": {
        "cps": true
      }
    },
    "89b23614-7142-3416-8e11-289ed43343b5": {
      "content": "for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "89b82410-a8a6-3e10-a21c-e41e085d631d": {
      "content": "word-wrap none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      }
    },
    "89c384ec-605d-36d5-92da-f32d2e909d75": {
      "content": "if (${1}) {\n\t${2}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "89c6dc47-4af2-3492-b4a7-9937529bfa9d": {
      "content": "when ${1} => ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "when",
      "matches": {
        "whe": true
      }
    },
    "89c891b3-e45f-3b0b-a429-641f80e89343": {
      "content": "margin-right: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr:a": true
      }
    },
    "89cb873b-e40a-3e52-afa5-620a57df6616": {
      "content": "author = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "author": true
      }
    },
    "89ce0fca-d0f6-3cb2-80bd-e2575d3800dc": {
      "content": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n  ${0}\nendfunction\nunlet s:hooks",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "neobundle hooks",
      "matches": {
        "bundle_hooks": true
      }
    },
    "89d80b33-7569-34c5-9397-5abb2d210b3e": {
      "content": "Page Should Not Contain Element    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Element",
      "matches": {
        "psnce": true
      }
    },
    "89e48655-8625-334e-97ef-28edd8f94fca": {
      "content": "{% include \"${0}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "89e806a7-5d2e-3300-a3f2-ddbb2e6fdc0b": {
      "content": "| strip_newlines",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip_newlines": true
      }
    },
    "89e854c7-134f-3702-9d09-efbe687a5788": {
      "content": "${1:obj}.clearQueue(${2:'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clearq": true
      }
    },
    "89f7046d-4aff-3b4b-a1cb-8669408819f4": {
      "content": "append(${1:slice}, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "append(slice, value)",
      "matches": {
        "ap": true
      }
    },
    "89f7ffed-6bb7-38d6-8bd4-831ba237e94c": {
      "content": "{% gist ${1:gist_id} ${0:filename} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gist-full": true
      }
    },
    "8a00a775-195e-387f-840e-df764e593545": {
      "content": "$(function () {\n\t${0}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ready": true
      }
    },
    "8a07fd43-94f3-3bae-bb23-8e1eb7038d7f": {
      "content": "position: relative;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      }
    },
    "8a105f29-0685-374c-b988-69bc4d341c95": {
      "content": "const { ${1:name} } = this.state",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "destructuring of state",
      "matches": {
        "ds": true
      }
    },
    "8a11e7e4-6e83-39f7-b443-dc0dd05bb43e": {
      "content": "notice(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "notice": true
      }
    },
    "8a1942f6-7efb-320f-911e-fbe1be6df3ee": {
      "content": "include::${1:example.doc}[]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "include::example.doc",
      "matches": {
        "inc": true
      }
    },
    "8a1b5de6-35f5-3ac9-a719-7780755f5ce3": {
      "content": "margin: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "8a1c8bcc-fe54-3c77-b734-4042e5e1fae6": {
      "content": "{% extends \"${1:base.html}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      }
    },
    "8a203a32-87b1-33c0-a53e-91f0caa35409": {
      "content": "module ${1}\n${0}\nend#module",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "module ... end",
      "matches": {
        "module": true
      }
    },
    "8a21eff1-5afb-3dd5-a168-0c4493f13c66": {
      "content": "function ${2:function_name}(${3})\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "8a229923-1e59-3b64-bce5-ba34858a9004": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      }
    },
    "8a243b8f-4338-3ce0-8a21-f2957b6d6f87": {
      "content": "box-shadow none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      }
    },
    "8a24bb93-f6c7-3cde-bbe6-637d03568af4": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeOneOfTypeRequired",
      "matches": {
        "ptetr": true
      }
    },
    "8a2bfaa4-5db8-3236-a4c5-b18fbf9b91ad": {
      "content": "page-break-before: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      }
    },
    "8a2c1a72-6396-38e0-8675-bae1caa59419": {
      "content": "//#region ${1}\n${2}\n//#endregion",
      "doc": "Create region",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "region",
      "matches": {
        "region": true
      }
    },
    "8a2d12b9-3082-3763-88d3-6867573b9bfe": {
      "content": "log.Printf(\"${1} = %+v\\n\", $1)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Printf(...)",
      "matches": {
        "lf": true
      }
    },
    "8a2f0fc7-e3d9-32ad-b6cb-aaeedb4169d0": {
      "content": "${1:obj}.focus(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      }
    },
    "8a330439-58a3-32a3-bd09-a1d1d25c6e39": {
      "content": "mixed.required()",
      "doc": "mixed.required(message?: string | function): Schema\n\nMark the schema as required. All field values apart from undefined and null meet this requirement.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-required",
      "matches": {
        "yup mixed required": true
      }
    },
    "8a349f14-4324-36ae-af25-3f9da7b541b7": {
      "content": ":- begin_tests(${1:name}).\n  ${0}\n:- end_tests($1).",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begintest": true
      }
    },
    "8a39d71a-2996-3980-a8c8-b83892c061d0": {
      "content": "union ${1:MyUnion}\n{\n\t$0\n};",
      "doc": "Code snippet for union",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "union",
      "matches": {
        "union": true
      }
    },
    "8a400d15-e0c2-352d-8378-288420dddff7": {
      "content": "<%= render partial: '${1:item}', locals: { :${2:name} => '${3:value}'${0} } %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      }
    },
    "8a432306-b89a-3223-9e48-497e4bf7dcc7": {
      "content": "<blockquote>\n\t${0}\n</blockquote>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      }
    },
    "8a470fe4-7b6d-3b6a-82eb-aa75b61a5570": {
      "content": "# Link resource\nlink ${1:\"/target/file\"} do # The file name of the link\n\t${2:#}to ${3} # The real file you want to link to\n\t${4:#}link_type ${5:symbolic} # Either :symbolic or :hard\n\t${6:#}owner ${7} # The owner of the symlink\n\t${8:#}group ${9} # The group of the symlink\n\n\t${10:#}${11:action :create} # Create a link (Default)\n\t${12:#}${0:action :delete} # Delete a link\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      }
    },
    "8a475293-73bb-3c95-8514-b5296b866041": {
      "content": "$this->${1:method}()->shouldNotReturn(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotReturn('value')",
      "matches": {
        "snreturn": true
      }
    },
    "8a4a77a5-925c-3cc2-9277-e33e5062b68f": {
      "content": "() => {\n\t{$TM_SELECTED_TEXT}\n}",
      "doc": "wraps text in arrow function",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "wrap selection in arrow function",
      "matches": {
        "wrap selection in arrow function": true
      }
    },
    "8a4ae4c7-02a8-308b-911d-b152e861ae58": {
      "content": "receive do\n${1} -> ${2}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "receive .. do .. end",
      "matches": {
        "rec": true
      }
    },
    "8a4bec77-85ff-310f-84da-c9a7e94bf425": {
      "content": "strftime('${1:%Y-%m-%d %H:%M:%S %z}')${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strf": true
      }
    },
    "8a4ce299-916f-3f0c-87b5-09670efcae39": {
      "content": "respond_to",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "respond_to",
      "matches": {
        "rst": true
      }
    },
    "8a4e8202-9ae1-3a2a-9ce5-b54472d1925b": {
      "content": "${1:moduleName} = angular.module('$1', [${2:moduleDeps}], (${3:configDeps}) ->\n\t${4}\n)",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmc": true
      }
    },
    "8a56b9e4-7cee-3089-a21e-e56cc61a28ca": {
      "content": "Mouse Up    ${1:${locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Mouse Up",
      "matches": {
        "mu": true
      }
    },
    "8a584445-d784-3139-b103-b0ff74d18bd7": {
      "content": "expect(${1:target}).toBeVisible();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be visible (js)",
      "matches": {
        "ev": true
      }
    },
    "8a5d0af8-2449-3a50-8450-54af79dd0bba": {
      "content": "slice:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "8a66942e-c683-38e0-9f01-5610cd4bf70c": {
      "content": "def index\n\t@${1:model_class_name} = ${2:ModelClassName}.all\nend",
      "doc": "def index",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Index action",
      "matches": {
        "index": true
      }
    },
    "8a6905b6-3bf8-3f8a-b99f-6c92755061ea": {
      "content": "content: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      }
    },
    "8a6a5125-d2b6-3df0-bd39-7d5151f25ebc": {
      "content": "(for ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "8a6b9380-a8b3-382c-b495-dfe1c0f9035f": {
      "content": "{#each ${1:items} as ${2:item},${3:i}}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "each index block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-block",
      "matches": {
        "s-each-index-block": true
      }
    },
    "8a6fa4b5-8472-3e01-becc-fa6dd59e3ddc": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "!important CSS (!)",
      "matches": {
        "!": true
      }
    },
    "8a70dace-a040-38cf-b179-6ffa2d1b7f10": {
      "content": "echo CHtml::ajaxButton('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajb": true
      }
    },
    "8a75e84b-0808-3c5b-8704-6ee53fb37de6": {
      "content": "onUpdated(() => {${1}})",
      "doc": "Vue onUpdated Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onUpdated",
      "matches": {
        "v3onupdated": true
      }
    },
    "8a76d645-021f-39f6-a8c9-9f9c4627cfe7": {
      "content": "-undef(${1:macro}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "undef": true
      }
    },
    "8a78d82a-7e88-384d-b95a-2cc05b77e101": {
      "content": "const mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "mappingToProps",
      "matches": {
        "reduxmap": true
      }
    },
    "8a7fb1fb-6a9c-3f86-afd4-c1830d1e16bf": {
      "content": "<?=${0}?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?=": true
      }
    },
    "8a863e93-2f6b-362b-914e-10dc9b422752": {
      "content": "result",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "result",
      "matches": {
        "rs": true
      }
    },
    "8a8a80bd-191c-3fc6-a258-676c3bca546b": {
      "content": "#!/usr/bin/env sh\nset -eu",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s#!": true
      }
    },
    "8a8d5e12-d3ef-3583-a41e-aec0e0f61f62": {
      "content": "/**\n* @group ${1}\n*/",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "phpunit comment with group",
      "matches": {
        "testcmt": true
      }
    },
    "8a93ca37-8e53-3565-9e98-eb255580d450": {
      "content": "(fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lam": true
      }
    },
    "8a9c5f53-5aa2-3dfa-9430-29eeccbbca00": {
      "content": "{%- comment -%}${0:${VISUAL}}{%- endcomment -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment-": true
      }
    },
    "8aa1cf96-3393-3d51-a5ca-4d763e9b384a": {
      "content": "named_scope :name${1:, joins: :${2:table}}, conditions: ${3:['${4:${5:field} = ?}', ${6:true}]}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "named_scope",
      "matches": {
        "nc": true
      }
    },
    "8aa4eb6d-eade-3504-8395-2c3a3fcf449e": {
      "content": "~${1:value}",
      "doc": "Code snippet for bitwise not operator.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "bitwise not",
      "matches": {
        "bnot": true
      }
    },
    "8aa9c95b-587e-3c60-b0b9-d4e514c3ad4c": {
      "content": "Serial.print(${1});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      }
    },
    "8aaee65c-af17-3266-a336-8f1be3ee64f5": {
      "content": "local $@;\neval {\n\t${1:# do something risky...}\n};\nif (my $e = $@) {\n\t${0:# handle failure...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eval": true
      }
    },
    "8aaf9267-c238-3551-9132-b23f2d0e966b": {
      "content": "DirectoryIndex index.php index.html",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "directoryindex": true
      }
    },
    "8ab587d8-f987-3d83-aee4-ac4942c2ee4d": {
      "content": "overflow visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      }
    },
    "8acee391-48cf-383f-a690-642ed4787f33": {
      "content": "v-cloak",
      "doc": "Does not expect expression",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-cloak",
      "matches": {
        "vCloak": true
      }
    },
    "8ad07549-d621-3680-9378-21acb0fab888": {
      "content": "display compact",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:cp": true
      }
    },
    "8ad88e6e-05e3-393e-b886-e97a6587542c": {
      "content": "grid-column-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      }
    },
    "8adb53eb-00c4-3148-9501-caa88b6fd615": {
      "content": "<xsl:variable name=\"${1:name}\">${0}\n</xsl:variable>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "blank",
      "matches": {
        "variable": true
      }
    },
    "8ade30d8-7277-30b9-a31b-1be7aa8b4171": {
      "content": "import { Text, View } from 'react-native'\nimport React, { PureComponent } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n  render() {\n    return (\n      <View>\n        <Text>${1:first}</Text>\n      </View>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativePureComponentExport",
      "matches": {
        "rnpce": true
      }
    },
    "8adf327b-0234-3486-9a70-61bfc1cbdb27": {
      "content": "import ${1:${2:Data}.${0:Text}}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Simple import",
      "matches": {
        "imp": true
      }
    },
    "8ae19237-6c0f-3334-8b7c-9ddfbfb11494": {
      "content": "class ${1:name}${2:(arg)}${3: extends }${4: with} {\n\t${5:override def toString = \"$1\"}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "8ae69314-9ad6-37ff-b1f6-b1f2e455cf5f": {
      "content": "-webkit-box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      }
    },
    "8ae93120-ea4b-3f5c-b27a-aad8258d8f4e": {
      "content": "t.references :${1:taggable}${2:, polymorphic: ${3:{ default: '${4:Photo}' }}}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create references column",
      "matches": {
        "tcr": true
      }
    },
    "8aeb35d9-6336-3f74-a7ba-54a31460b597": {
      "content": "if(Yii::app()->request->isAjaxRequest == TRUE)\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yifisajax": true
      }
    },
    "8aec2018-5825-312a-9485-66cf2ebcd47c": {
      "content": "if (!${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (!condition) { ... }",
      "matches": {
        "ifn": true
      }
    },
    "8aed1b8f-f4d0-3f00-94de-d9d766023840": {
      "content": "@verbatim\n\t${0:$VISUAL}\n@endverbatim",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@verbatim directive",
      "matches": {
        "verbatim": true
      }
    },
    "8af0d195-7559-3c01-9cdb-cfe2036e22fa": {
      "content": "co________:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "co________:",
      "matches": {
        "co_": true
      }
    },
    "8b04a4ad-8c87-3b5a-925f-1b45c58e35f4": {
      "content": "import { View, Text } from 'react-native'\nimport React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeFunctionalComponent",
      "matches": {
        "rnf": true
      }
    },
    "8b0d3628-2da3-3d47-b664-06f1d55cef6e": {
      "content": "const ${1:module} = require('${1:module}');",
      "doc": "require assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-assignment",
      "matches": {
        "base require assignment": true
      }
    },
    "8b0d5c02-afeb-3a15-8529-25ccb9f38e1e": {
      "content": "defer ${1:func}(${2})\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer someFunction()",
      "matches": {
        "df": true
      }
    },
    "8b12c239-161d-33e3-adf8-ba806cd77d17": {
      "content": "place-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      }
    },
    "8b17e94f-2dba-32c4-a136-75bfbe62795c": {
      "content": "try:\n\t${1:pass}\nexcept${2: ${3:Exception} as ${4:e}}:\n\t${5:raise}\nelse:\n\t${6:pass}\nfinally:\n\t${7:pass}$0",
      "doc": "Code Snippet for a try/except/finally with else statement.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try:except:else:finally",
      "matches": {
        "tryef": true
      }
    },
    "8b1f597e-8866-39ee-8d2f-197506ff98bc": {
      "content": "for [i 1 10]\n())",
      "doc": "Create a while loop",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "8b21565c-82fc-3c53-abe4-69074f8e8ff9": {
      "content": "_.toNumber(${value})",
      "doc": "_.toNumber(3.2);\n// => 3.2\n\n_.toNumber(Number.MIN_VALUE);\n// => 5e-324\n\n_.toNumber(Infinity);\n// => Infinity\n\n_.toNumber('3.2');\n// => 3.2\n\nConverts `value` to a number.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tonumber",
      "matches": {
        "lodash tonumber": true
      }
    },
    "8b2b3e45-da10-30ac-abbe-94902a01357e": {
      "content": "switch(${1:/* variable */})\n{\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switchndef": true
      }
    },
    "8b2cf4bd-7ad0-37c6-8511-a4406e37ba82": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      }
    },
    "8b2f0b24-8346-33d5-aad3-85a601a273fd": {
      "content": "<ins>${0}</ins>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ins": true
      }
    },
    "8b2f89ec-f2b0-3f5f-9daf-aadb1fc979c4": {
      "content": "//#region $0",
      "doc": "Folding Region Start",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      }
    },
    "8b365a41-1967-3392-829f-6d5fe19ec631": {
      "content": "import { $2 } from '${1:module}';$0",
      "doc": "Imports only a portion of the module in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importdestructing",
      "matches": {
        "base import destructing": true
      }
    },
    "8b3f890a-55dc-37a9-9c7b-8790b2d85d16": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/\napiVersion: batch/v1beta1\nkind: CronJob\nmetadata:\n  name: ${1:cronjobname}\n  namespace: ${2:default}\nspec:\n  schedule: \"${3:*/1 * * * *}\"\n  jobTemplate:\n    spec:\n      template:\n        spec:\n          containers:\n          - name: ${4:jobname}\n            image: ${5:busybox}\n            args: ['/bin/sh', '-c', '${6:date; echo Hello from the Kubernetes cluster}']\n          restartPolicy: OnFailure\n---\n$0",
      "doc": "k8s CronJob",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s CronJob",
      "matches": {
        "k-cronjob": true
      }
    },
    "8b3f9692-f835-394b-88d8-94c15c79de18": {
      "content": "from .forms import $1",
      "doc": "",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ffi",
      "matches": {
        "ffi": true
      }
    },
    "8b3feadd-92d8-33c6-8345-dc7a41216c25": {
      "content": "page-break-after always",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:aw": true
      }
    },
    "8b441d4c-ab27-39c3-bab9-38cb52faae25": {
      "content": "Run Keyword And Ignore Error    ${1:${kw}}    ${2:${args}}\n\\${${3:result}}    \\${${4:return_value}}=    Run Keyword And Ignore Error    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Ignore Error",
      "matches": {
        "rkaie": true
      }
    },
    "8b4a87db-7acd-3d1a-8372-773a8fd58f6b": {
      "content": "getter? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r?": true
      }
    },
    "8b4ba954-379f-3900-a45e-88454442e766": {
      "content": "local ${1:varName} = ${0:value}",
      "doc": "create a variable",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "assigment",
      "matches": {
        "ll": true
      }
    },
    "8b4cec3b-0cf3-35ef-9165-e99bbdc333ea": {
      "content": "import ${2:*} as ${3:name} from '${1:module}'",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "import module as",
      "matches": {
        "ia": true
      }
    },
    "8b5f929b-6cd1-3d2a-8855-21660c7bfd5b": {
      "content": "import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n\n}\n\nconst ${1:${TM_FILENAME_BASE}} = createSlice({\n  name: ${2:second},\n  initialState,\n  reducers: {}\n});\n\nexport const {} = ${1:${TM_FILENAME_BASE}}.actions\n\nexport default ${1:${TM_FILENAME_BASE}}.reducer",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reduxSlice",
      "matches": {
        "rxslice": true
      }
    },
    "8b611d73-d8d4-3b59-8751-97e80b35cf29": {
      "content": "render() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n}",
      "doc": "When called, it should examine this.props and this.state and return a single child element.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentRender",
      "matches": {
        "ren": true
      }
    },
    "8b61630c-ce6e-321a-a1cf-70293c251f7e": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivateChild, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivateChild {\n\tconstructor() { }\n\n\tcanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivateChild guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canactivatechild-guard",
      "matches": {
        "a-guard-can-activate-child": true,
        "angular can activate child guard": true
      }
    },
    "8b61f3a3-16f9-3f21-96fe-fc07e75c977c": {
      "content": "exec sql begin declare section end-exec.\n$0\nexec sql end declare section end-exec.",
      "doc": "exec sql declare",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "exec-sql-begin",
      "matches": {
        "exec": true
      }
    },
    "8b62ad7a-ea77-343e-b78b-181d63ddbe1f": {
      "content": "case ${1:Expr} of\n    ${2:Cond} ->\n        ${3:todo};\n    _ ->\n        ${4:todo}\nend$5",
      "doc": "case block",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "8b6973fa-0682-300b-ab3b-22421712f569": {
      "content": "Vue.config.silent = ${1:true}",
      "doc": "Vue.config.silent",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "silent",
      "matches": {
        "VueConfigSilent": true
      }
    },
    "8b726624-de44-36cf-b9fd-5f509c73afb8": {
      "content": "import { ${1:first} } from 'react-native'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeImport",
      "matches": {
        "imrn": true
      }
    },
    "8b85c8ce-a120-3a48-9cfd-6bea0a6ee338": {
      "content": "{% with %}\n\t$1\n{% endwith %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "with",
      "matches": {
        "with": true
      }
    },
    "8b8c7aaa-456d-30d1-8bd2-efbe90a7150f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nimport { ${0|ref,reactive,computed,readonly,watchEffect,watch|} } from '${1|vue,@vue/composition-api|}'\nexport default {\n\tsetup () {\n\t\t${2}\n\n\t\treturn {}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-v3",
      "matches": {
        "vue v3 base": true
      }
    },
    "8b95db6b-1482-3db1-b695-3bd2eab3c170": {
      "content": "import { ${0:component} } from '@/composables/${0:component}.js'\n\nexport default {\n\tsetup () {\n\t\tconst { ${1:name} } = ${0:component}()\n\t\n\t\treturn {\n\t\t\t${1:name}\n\t\t}\n\t}\n}",
      "doc": "Use Composition API within Options API",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Use Composition API within Options API",
      "matches": {
        "v3useinoptions": true
      }
    },
    "8b95ddf7-4f5e-34dd-8e5e-4c7bd3275300": {
      "content": "public int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi+": true
      }
    },
    "8ba06ecb-1aa2-394e-9d93-34ea7ce73fb6": {
      "content": "background-position-y: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      }
    },
    "8ba3ed2b-69e7-3d77-a91e-0d4f9750c4b1": {
      "content": "spyOn(${1:object}, \"${2:method}\").andThrow(${3:exception})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and throw (coffee)",
      "matches": {
        "st": true
      }
    },
    "8ba4838a-8935-30bf-86de-d2340756d0b0": {
      "content": "<body>\n   ${1:TARGET}\n</body>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "body": true
      }
    },
    "8ba591a7-2857-33d0-87b2-7d9bece05fe2": {
      "content": "for ${1:name} in ${2:array}\n\tdo ($1) ->\n\t\t${0:// body}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forindo": true
      }
    },
    "8bac9a9e-4380-33ed-87ed-d647c811c9d4": {
      "content": "t.timestamp :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcts": true
      }
    },
    "8bae2773-6402-3289-8973-f823d5e837b0": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn;\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vfilter": true
      }
    },
    "8bbad73d-04c2-393b-8b82-12f40cbe15fb": {
      "content": "set border",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set border",
      "matches": {
        "border": true
      }
    },
    "8bc2d828-412d-34f6-b0a1-521905dcf0d6": {
      "content": "const [${1:setterName}, set${1:setterName}] = useState(${2:defVal})$0",
      "doc": "use state hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useState",
      "matches": {
        "us": true
      }
    },
    "8bcfb9fb-6e5d-398a-b243-a432319f3864": {
      "content": "border-bottom-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      }
    },
    "8bd20b59-7e20-34a6-a274-aadb1bf7dea4": {
      "content": "onDestroy(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-destroy",
      "matches": {
        "svelte lifecycle destroy": true,
        "svlfd": true
      }
    },
    "8bd39f0a-6ced-322d-a1e2-da75999d8123": {
      "content": "return ${1};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "8be035f0-c816-3009-a0ca-78fe0e55bbc7": {
      "content": "| join: '${1:, }'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "8be5f1a5-9f08-36d6-9e80-be78ac7786db": {
      "content": "declare\n\t${1}\nbegin\n\t${0}\nend;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "declare block",
      "matches": {
        "dec": true
      }
    },
    "8bed6e41-c669-3c68-b3c9-bdf65b86e7d5": {
      "content": "shouldComponentUpdate(nextProps, nextState) { ${1:first} }",
      "doc": "Invoked before rendering when new props or state are being received.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      }
    },
    "8beeb49b-ea49-3ede-aac7-1ff6dd9ab794": {
      "content": "__${1:init}__$0",
      "doc": "Code snippet to create magic methods.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "__magic__",
      "matches": {
        "__": true
      }
    },
    "8befd714-0c95-3127-b68f-718690e86bc6": {
      "content": "PropTypes.oneOf(['$0']).isRequired",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeEnumRequired",
      "matches": {
        "pter": true
      }
    },
    "8bf61169-7586-39e6-a086-473c1348d91d": {
      "content": "finally(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "finally(func)",
      "matches": {
        "finally": true
      }
    },
    "8bf6d7c3-2f21-3255-bf91-843d53e13650": {
      "content": "${1:router}.beforeEach((to, from, next) => {\n\t${2:// to and from are both route objects. must call `next`.}\n})$0",
      "doc": "router.beforeEach",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerBeforeEach",
      "matches": {
        "routerBeforeEach": true
      }
    },
    "8bf948f9-88b5-3b8a-a408-58dc313c2d34": {
      "content": "margin-bottom: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "margin-bottom": true,
        "mb": true
      }
    },
    "8c019058-b9fa-35b2-a296-0ffd9b658646": {
      "content": "def ${1:name}(${2:args}) when ${3:guard} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defw": true
      }
    },
    "8c0572da-ecc4-3997-a2a4-424ad3d2413f": {
      "content": "font-stretch: semi-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      }
    },
    "8c0b3f2c-490f-312d-8932-844e505a236c": {
      "content": "const ${1:store} = writable(${2:initialValue});",
      "doc": "svelte writeable",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable",
      "matches": {
        "s-writeable": true
      }
    },
    "8c11c8cd-c65f-3892-8579-b11f33dc198e": {
      "content": "func _ready():\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_ready method of Node",
      "matches": {
        "ready": true
      }
    },
    "8c160afd-8e0a-372a-8292-ce2cad51ee4d": {
      "content": "render(h) {\n\t$1\n},",
      "doc": "An alternative to string templates allowing you to leverage the full programmatic power of JavaScript.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "render",
      "matches": {
        "render": true
      }
    },
    "8c175d7a-4f6a-3fe0-a029-91119919522d": {
      "content": "$this->session->flashdata(\"${1:item}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_flashdata": true
      }
    },
    "8c18adf1-8d8d-38c8-aaf2-a5b5aca3e87d": {
      "content": "using ${1:package}: ${2:exports}",
      "doc": "Code snippet for using something from a package.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "using from",
      "matches": {
        "from": true,
        "us": true,
        "using": true
      }
    },
    "8c192be6-7e4d-3d47-88ad-6e2a827d2936": {
      "content": "${1:name}.split(\"${0:,}\")",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spl": true
      }
    },
    "8c1c17ea-9e00-3f34-ae10-5efc4c5def61": {
      "content": "export const ${1:exportVariable} = ${2:localVariable};",
      "doc": "Export named variable in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportNamedVariable",
      "matches": {
        "env": true
      }
    },
    "8c1cc53b-62a6-35b0-ad93-151ba92d621c": {
      "content": "border-right-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      }
    },
    "8c1d248c-75da-36f1-bbb6-9f012bfadacd": {
      "content": "export default ${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ed": true
      }
    },
    "8c2a3c99-42f0-355d-a27d-35feedf1c4f8": {
      "content": "constructor(${1:params}) {\n\t${0}\n}",
      "doc": "Add default constructor in a class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "constructor",
      "matches": {
        "con": true
      }
    },
    "8c2a55d9-1614-314d-be11-b89dad635339": {
      "content": "font-emphasize-style: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:c": true
      }
    },
    "8c2e4622-510f-3cc4-9b19-3e7fcec1b264": {
      "content": "const ${1:contextName} = React.createContext()",
      "doc": "Create React context",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-createcontext",
      "matches": {
        "rcontext": true,
        "react createcontext": true
      }
    },
    "8c313b12-f196-3841-b738-7de8cb3bfdd4": {
      "content": "fmt.Printf(\"$1 = %#v\\n\", ${1:${VISUAL}})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf(#...) hash",
      "matches": {
        "ffh": true
      }
    },
    "8c34ebff-84ed-3538-9feb-d12396936c51": {
      "content": "@yield('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@yield",
      "matches": {
        "yl": true
      }
    },
    "8c353f27-1a23-36f8-8d01-6caaeeafd239": {
      "content": "(${1:Int} + ${2:Int}im)",
      "doc": "Code snippet for complex number.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "complex number",
      "matches": {
        "comp": true,
        "complex": true,
        "im": true
      }
    },
    "8c3a67f7-438a-337f-b562-b99fecc5fb7c": {
      "content": "fun ${1:main}(${2:args} : ${3:Array<String>}) {\n\t$0\n}",
      "doc": "Snippet for function declaration",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "function declaration",
      "matches": {
        "fun": true
      }
    },
    "8c3f1424-e799-35ac-a6f6-cee4fa99fc2b": {
      "content": "_.pullAllWith(${array}, ${values}, ${comparator})",
      "doc": "var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\n_.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\nconsole.log(array);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\nThis method is like `_.pullAll` except that it accepts `comparator` which\nis invoked to compare elements of `array` to `values`. The comparator is\ninvoked with two arguments: (arrVal, othVal).\n\n**Note:** Unlike `_.differenceWith`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullallwith",
      "matches": {
        "lodash pullallwith": true
      }
    },
    "8c415faf-3666-38e8-8e0e-f272c6e56f63": {
      "content": "${1:obj}.eq(${2:element index})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      }
    },
    "8c4b788d-5dcf-311e-8ce4-ccbdb6bd2cd0": {
      "content": "|> Enum.reduce(${1:acc}, fn ${2}, ${3:acc} -> $0 end)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "pipe into reduce",
      "matches": {
        ">f": true
      }
    },
    "8c52fc27-e593-371d-b989-17d08e25b340": {
      "content": "This Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n${0}",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "",
      "matches": {
        "MPL2": true
      }
    },
    "8c565f12-d277-33e3-8f5a-ad2df35f58dd": {
      "content": "[...Array(${1:length}).keys()]${0}",
      "doc": "sequence of 0..n",
      "filetype": "base",
      "grammar": "lsp",
      "label": "sequence-of-0-n",
      "matches": {
        "base sequence of": true
      }
    },
    "8c57f094-fb6e-3887-ac15-9c62394c4392": {
      "content": "if (${1:true})\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "8c59d225-48c2-30b4-970b-71adf99e30b9": {
      "content": "reduce(Array.new) { |${1:arr}, ${2:a}| $1.push(*$2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "flao": true
      }
    },
    "8c5d6154-9810-36c4-b823-230c46dd8257": {
      "content": "const ${1:function_name} = (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c=>": true
      }
    },
    "8c69fa16-73ae-3f7b-b8a0-abb4db35ced7": {
      "content": "after_find :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maf": true
      }
    },
    "8c760d48-e7a4-3d4a-b4fd-be8c29e165fe": {
      "content": "while ${1} loop\n\t${0:${VISUAL}}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      }
    },
    "8c786200-61be-33a0-a92d-939528c96e5e": {
      "content": "array.compact()",
      "doc": "array.compact(rejector: (value) => boolean): Schema\n\nRemoves falsey values from the array. Providing a rejecter function lets you specify the rejection criteria yourself.array()\n  .compact()\n  .cast([\"\", 1, 0, 4, false, null]); // => [1, 4]\n\narray()\n  .compact(function(v) {\n    return v == null;\n  })\n  .cast([\"\", 1, 0, 4, false, null]); // => ['', 1, 0, 4, false]\nobjectDefine an object schema. Options passed into isValid are also passed to child schemas.\nSupports all the same methods as mixed.yup.object().shape({\n  name: string().required(),\n  age: number()\n    .required()\n    .positive()\n    .integer(),\n  email: string().email(),\n  website: string().url()\n});\nYou can also pass a shape to the object constructor as a convenience.object().shape({\n  num: number()\n});\n// or\nobject({\n  num: number()\n});\nThe default cast behavior for object is: JSON.parseFailed casts return: null;",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-compact",
      "matches": {
        "yup array compact": true
      }
    },
    "8c78e209-e6f9-3c32-a175-1bed48f038d6": {
      "content": "${1:obj}.serialize()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serialize": true
      }
    },
    "8c7bb898-737b-30e3-9b6b-e3cb301c1e27": {
      "content": "this.setState((state, props) => { return { ${1:first} }})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      }
    },
    "8c7d85fa-512b-3943-98b6-50a08187be80": {
      "content": "${1}:\nwhile ${2} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named while",
      "matches": {
        "named_while": true
      }
    },
    "8c80e7d1-f610-3215-8be6-27510b4c873d": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n} finally {\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      }
    },
    "8c8861c0-a4be-3940-bc05-0230245abfc0": {
      "content": "$this->shouldNotReturnAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotReturnAnInstanceOf('Type')",
      "matches": {
        "snrinstance": true
      }
    },
    "8c94d23b-f24b-35c7-a534-25739b2b063b": {
      "content": "=over 2\n\n=item\nArguments\n\n\n=over 3\n\n=item\nC<${1:DataStructure}>\n\n  ${2:Sample}\n\n\n=back\n\n\n=item\nReturn\n\n=over 3\n\n\n=item\nC<${0:...return data}>\n\n\n=back\n\n\n=back",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parg": true
      }
    },
    "8c98d437-09ec-3652-a240-0d7a8d75ca7c": {
      "content": "| strip",
      "doc": "String filter: strip",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter strip",
      "matches": {
        "strip": true
      }
    },
    "8c9a51e3-cf2c-33ce-a76a-b7f2477a2fe8": {
      "content": "align-self: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      }
    },
    "8c9af711-4b67-3317-a54b-71e3fa27ec77": {
      "content": "it('${1:should }', async () => {\n\t$0\n});",
      "doc": "creates an it block with async callback function",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-async",
      "matches": {
        "ita": true,
        "jest it async": true
      }
    },
    "8ca2e58f-c0cb-3482-8b0c-79f341329a8c": {
      "content": "\"${0:key}\": null,",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Null",
      "matches": {
        "null": true
      }
    },
    "8ca407ed-0c4e-3ad8-92ea-7415804152e9": {
      "content": "match ${1:(* e1 *)} with\n| ${2:p} -> ${3:e2}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "Match": true
      }
    },
    "8ca95afc-5a24-3b6d-a432-4f72ccd0032d": {
      "content": "<% if ${1:truevalue} %>\n  $2\n<% else %>\n  $3\n<% end %>",
      "doc": "if .. else .. end",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "ife",
      "matches": {
        "ife": true
      }
    },
    "8caa13b1-eb55-3ed2-bd9d-586f089d4000": {
      "content": "console.log('${1:first}', ${1:first})",
      "doc": "Logs property with name.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleLogObject",
      "matches": {
        "clo": true
      }
    },
    "8cad83a9-76cf-352d-8839-f865c4d18881": {
      "content": "{{ MEDIA_URL }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mediau": true
      }
    },
    "8cb33f1f-5790-396d-82f6-6a836b0d9463": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      }
    },
    "8cc1565a-f1ba-3c3c-b565-64ede4c5664a": {
      "content": "visibility: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "visibility: hidden",
      "matches": {
        "vish": true
      }
    },
    "8ccabc7d-9af6-3dab-b331-202c136dca13": {
      "content": "<bdo dir=\"${1}\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo": true
      }
    },
    "8ccba855-250c-333e-bcd4-a29d3a0a80cc": {
      "content": "<ng-container $0></ng-container>",
      "doc": "Angular ng-container",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-container",
      "matches": {
        "a-ng-container": true,
        "angular ng-container": true
      }
    },
    "8cce92f2-9566-3dc6-989e-d47885cdc083": {
      "content": "${1} ? ${2} : ${3:nothing}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "ternary operator",
      "matches": {
        "tern": true
      }
    },
    "8cd2141a-d81d-3223-905a-617a60c91167": {
      "content": "expect(${1:target}).toHaveBeenCalledWith(${2:arguments});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have been called with (js)",
      "matches": {
        "ethbcw": true
      }
    },
    "8cd3b3ba-66de-32c2-9e11-4d858bd4e712": {
      "content": "{%- $1 -%}",
      "doc": "Tag markup: {%- -%}",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Execute",
      "matches": {
        "execute": true
      }
    },
    "8cd46c25-ff1f-3a12-8e0c-af67b2c038af": {
      "content": "vertical-align: bottom;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      }
    },
    "8cda7052-ff06-3bc4-b6fa-59aad04d405f": {
      "content": "borderBottomColor: ${1},",
      "doc": "borderBottomColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderBottomColor",
      "matches": {
        "bor": true
      }
    },
    "8ce0de87-9a06-3f7d-a534-6cf8a31f5288": {
      "content": "${1:FIELDNAME} = models.OneToOneField(${2:OTHERMODEL}, on_delete=models.${3|CASCADE,PROTECT,SET_NULL,SET_DEFAULT,SET(),DO_NOTHING|})",
      "doc": "OneToOneField (o2o).\n\nA one-to-one relationship.\n\non_delete will become a required argument in Django 2.0. In older versions it defaults to CASCADE.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "o2o",
      "matches": {
        "o2o": true
      }
    },
    "8cf3198f-5037-3b1f-81f3-c5a37ae7036d": {
      "content": "export const ${1:constantName} = '${1:constantName}'",
      "doc": "",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-const",
      "matches": {
        "redux const": true,
        "rxconst": true
      }
    },
    "8cf5c2c9-f8c8-3394-ac90-25f10675b1e1": {
      "content": "@font-face\n\tfont-family: ${1}\n\tsrc: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      }
    },
    "8cf67b56-d4e1-3804-bcdf-1f45bc9a6850": {
      "content": "do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "do ... end",
      "matches": {
        "do": true
      }
    },
    "8d02a769-c2e9-3f0a-953e-974b2b6014c2": {
      "content": "before_validation $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_validation",
      "matches": {
        "befv": true
      }
    },
    "8d0574a0-5f74-366a-83fa-0fa4cead97e2": {
      "content": "@serialField ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sd": true
      }
    },
    "8d0a2731-4958-39e0-8660-ecd0e4fda3e0": {
      "content": "text-shadow none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      }
    },
    "8d0e8c4b-5cc8-338d-acee-0cedd63efb47": {
      "content": "border-bottom-left-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      }
    },
    "8d109f08-8518-366e-ae79-e57e7df155cd": {
      "content": "{% elif %}$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ielif": true
      }
    },
    "8d11c781-cd02-39c0-ab65-baf2f0001a4b": {
      "content": "expect(${1:target}).toBeVisible()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be visible (coffee)",
      "matches": {
        "ev": true
      }
    },
    "8d184dc4-ed1f-3e1f-a142-a1bb09057f31": {
      "content": "${1:obj}.prependTo('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prependto": true
      }
    },
    "8d197488-9227-3ad9-b14c-1494176720fa": {
      "content": "resize: both",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:b": true
      }
    },
    "8d1bcf25-71d5-3743-84ce-ef866f2f02f1": {
      "content": "\\$_COOKIE['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cookie": true
      }
    },
    "8d1fe5d1-bcbd-38f4-bb0c-d1ab38a1970a": {
      "content": "character(${1}) :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "character",
      "matches": {
        "ch": true
      }
    },
    "8d214239-636b-3a74-80aa-2bb0e8a3957a": {
      "content": "column!()",
      "doc": "column!()",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "column",
      "matches": {
        "column": true
      }
    },
    "8d21b447-d0af-3f59-aa12-93ffbcdc3cfc": {
      "content": "<paramref name=\"${1:#:name}\"/>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<paramref name=\"\"/>",
      "matches": {
        "paramref": true
      }
    },
    "8d28802d-1cfa-3cd7-9c18-5c1910861877": {
      "content": "for ${1:value} in ${2:iterable}:\n\t${3:pass}$0",
      "doc": "Code snippet to create a for loop structure.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "8d2ad60b-0d94-31fc-998e-11cd188f9344": {
      "content": "class ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React component class",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactJustClassCompoment",
      "matches": {
        "rcjc": true
      }
    },
    "8d2f5e7e-c095-3534-9df9-c2550c76f81d": {
      "content": "std::cin >> $1;",
      "doc": "Code snippet for std::cin, provided the header is set",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "cin",
      "matches": {
        "cin": true
      }
    },
    "8d3611f6-85eb-391b-81eb-db7c38933c10": {
      "content": "assert ${1:test}, '${2:Failure message.}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "8d36f629-9fd3-3ae9-8431-87f14ccf7206": {
      "content": "switch ($1) {\n  case $2:\n    $0\n    break;\n  default:\n}",
      "doc": "Insert a switch statement.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "switch case",
      "matches": {
        "switch": true
      }
    },
    "8d380710-bb4e-33c1-b3c2-7ad4cd09864e": {
      "content": "appear-active-class=\"$1\"$0",
      "doc": "appear-active-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "appear-active-class",
      "matches": {
        "appearActiveClass": true
      }
    },
    "8d3bf45e-b0c3-3b04-865b-e5fc0d58f05c": {
      "content": "if ${1:condition} {\n\t$0\n}",
      "doc": "if statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "8d5b4cf8-83e9-3a31-b694-c49cf39f2b31": {
      "content": "<${1:span}::${2:stylename}>\n\t$0\n</${1:span}>",
      "doc": "HTML elements can be written as in standard HTML.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Span Element",
      "matches": {
        "span": true
      }
    },
    "8d5ba660-884d-31cc-945e-454a3fc8f8aa": {
      "content": "{{#unless ${1:value}}}\n${0:${VISUAL}}\n{{/unless}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#unless value}} ... {{/unless}}",
      "matches": {
        "ifn": true
      }
    },
    "8d5be16b-16d1-3e89-88f8-fd2ea9ae841d": {
      "content": "{% children %}$0",
      "doc": "children",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "children",
      "matches": {
        "children": true
      }
    },
    "8d625c87-a9bb-3328-b2be-450a32aa698a": {
      "content": "with(${1:exp}) {\n\t${2}\n} ${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "8d6612e6-c1e1-3abc-badf-4e2ef39164e6": {
      "content": "alias ${0:module_name}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ali": true
      }
    },
    "8d670a9c-e998-32db-b849-edb7a18117e7": {
      "content": "trait ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trait": true
      }
    },
    "8d687992-59d0-3b18-8b2b-df621305c367": {
      "content": "render(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ren": true
      }
    },
    "8d6b0247-597e-3bf3-8eb4-dcf26bafae67": {
      "content": "sqrt(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sqrt": true
      }
    },
    "8d6de66b-100f-31c5-ac22-759524173216": {
      "content": "internal ${1:int} ${2} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&|": true
      }
    },
    "8d7e90fe-778c-3cca-9855-3b72a50e5ad6": {
      "content": "text-wrap: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      }
    },
    "8d7fde26-07a8-392b-8da8-3abddc6209a4": {
      "content": "clip ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      }
    },
    "8d83a4ee-0740-36d3-8879-ad40823ab77a": {
      "content": "componentDidCatch(error, info) {\n\t$0\n}",
      "doc": "Error boundaries catch errors during rendering, in lifecycle methods, and in constructors of the whole tree below them.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidCatch",
      "matches": {
        "cdc": true
      }
    },
    "8d83a621-e690-3cb2-9eb1-6bcf3e256d7b": {
      "content": "{\n\t\"type\": \"range\",\n\t\"id\": \"${1}\",\n\t\"min\": ${2},\n\t\"max\": ${3},\n\t\"step\": ${4},\n\t\"unit\": \"${5}\",\n\t\"label\": \"${6}\",\n\t\"default\": ${0}\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_range": true
      }
    },
    "8d88e49d-618f-375b-bf18-23c15363ee32": {
      "content": "$this->db->delete(\"${1:table}\", \"${2:where}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-delete": true
      }
    },
    "8d891922-83f7-3cf5-8e93-5f191c63fc2d": {
      "content": "beforeDestroy() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeDestroy",
      "matches": {
        "beforeDestroy": true
      }
    },
    "8d8d8107-1df8-3862-a976-c05a8f78a829": {
      "content": "apiVersion: v1\nkind: Service\nmetadata:\n{{- if .Values.$1.service.annotations }}\n  annotations:\n{{ toYaml .Values.$1.service.annotations | indent 4 }}\n{{- end }}\n  labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n# spec\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_spec": true
      }
    },
    "8d8f3b74-30f2-3ab4-86c0-ac6e7c2c02a5": {
      "content": "${1:callbacks}.has(${2:callback})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Chas": true
      }
    },
    "8d8faeb7-58d2-32f5-92d7-0b1c6761e695": {
      "content": "use Moose;\nuse namespace::autoclean;\n${1:#}BEGIN {extends '${2:ParentClass}'};\n\n${0}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "moose": true
      }
    },
    "8d906f91-abf1-30db-a4b4-973c030c248d": {
      "content": "const {${1:module}} = require('${1:module}');",
      "doc": "destructuring require assignment",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-require-assignment",
      "matches": {
        "base require assignment": true
      }
    },
    "8d967fff-06cf-376a-b00e-fb67f3b9ffb7": {
      "content": "public ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create public field",
      "matches": {
        "tpfi": true
      }
    },
    "8da2fcaa-21b6-3a82-9c19-93ce88c6ddbc": {
      "content": "set title ${1:#:title}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set title '...'",
      "matches": {
        "title": true
      }
    },
    "8da4d1c1-1363-3a89-b285-4a038148d167": {
      "content": "removeMovieClip(${1:#:target});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rm": true
      }
    },
    "8da521f2-b737-3729-8093-0a2c061e42e0": {
      "content": "next = iterate(${1:iterable})\nwhile next !== nothing\n\t(item, state) = next\n\t0\n\tnext = iterate(iter, state)\nend",
      "doc": "Code snippet to iterate each element.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "iterate",
      "matches": {
        "iter": true,
        "iterate": true
      }
    },
    "8da898f6-6d39-3ffe-b969-cd9c3ed900ff": {
      "content": "center:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      }
    },
    "8dae662b-3e5c-309b-b2ca-b7238af3fa47": {
      "content": "{% else %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "8dbaf46b-8ed8-32a2-97ee-f5b93a7c7c98": {
      "content": "# %% [markdown]",
      "doc": "Code snippet to add a new markdown cell",
      "filetype": "python",
      "grammar": "lsp",
      "label": "mark/markdown",
      "matches": {
        "mark/markdown": true
      }
    },
    "8dbffcd6-d529-3f16-8977-48049d59cd7b": {
      "content": "page-break-before: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:r": true
      }
    },
    "8dc03a08-ccf5-3c7c-88d6-805e147081ef": {
      "content": "_.meanBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.meanBy(objects, function(o) { return o.n; });\n// => 5\n\n// The `_.property` iteratee shorthand.\n_.meanBy(objects, 'n');\n// => 5\n\nThis method is like `_.mean` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be averaged.\nThe iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-meanby",
      "matches": {
        "lodash meanby": true
      }
    },
    "8dc4d4e7-804f-31d9-9419-1d2b0c995a41": {
      "content": "template ${1:#:name}(${2}):${3:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      }
    },
    "8dce4efd-8b89-3a6d-ad88-26a1a04eef6b": {
      "content": "@manual{${1:LABEL},\n    title = {${2}},\n    memo = {author, organization, address, edition, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@manual": true,
        "manual": true
      }
    },
    "8dd49839-6fc6-3648-bff8-fd07c9db68ec": {
      "content": "_.bind(${func}, ${thisArg}, ${partials})",
      "doc": "function greet(greeting, punctuation) {\n  return greeting + ' ' + this.user + punctuation;\n}\n\nvar object = { 'user': 'fred' };\n\nvar bound = _.bind(greet, object, 'hi');\nbound('!');\n// => 'hi fred!'\n\n// Bound with placeholders.\nvar bound = _.bind(greet, object, _, '!');\nbound('hi');\n// => 'hi fred!'\n\nCreates a function that invokes `func` with the `this` binding of `thisArg`\nand `partials` prepended to the arguments it receives.\n\nThe `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for partially applied arguments.\n\n**Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\nproperty of bound functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-bind",
      "matches": {
        "lodash bind": true
      }
    },
    "8ddb92da-0dfd-383f-a572-d7236bc38bc0": {
      "content": "sub ${1:function_name} {\n\t${2:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Function (sub)",
      "matches": {
        "sub": true
      }
    },
    "8ddc2735-f237-389d-bbd5-59396d68a6a8": {
      "content": "while (${1:/* condition */}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "8ddce5c6-7509-3427-bb40-f86d8f57faee": {
      "content": "{% ifequal $1 %}\n  \n{% endifequal %}",
      "doc": "ifequal tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ifeq",
      "matches": {
        "ifeq": true
      }
    },
    "8de6224b-e376-3e20-8fd5-8cfbdacccd34": {
      "content": "border-left-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blc": true,
        "border-left-color": true
      }
    },
    "8deb6ca0-4ce3-30bf-9b0e-00a8a2f1be96": {
      "content": "factor(${1:x})",
      "doc": "Factor",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fac",
      "matches": {
        "factor": true
      }
    },
    "8dec372a-e2b5-3010-9c98-e3668daba3c4": {
      "content": "background-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      }
    },
    "8df2d9c4-ca3d-30ca-af0c-4ca746375a86": {
      "content": "overflow: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      }
    },
    "8e00ea70-0448-364f-9b69-80d92196fa63": {
      "content": "YYii::app()->request->userHostAddress",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yuserip": true
      }
    },
    "8e00ee7c-ab6e-3c53-96f4-3a8e48275945": {
      "content": "text-shadow: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      }
    },
    "8e049bfa-6580-31a6-b919-74841d24ca72": {
      "content": "_.before(${n}, ${func})",
      "doc": "jQuery(element).on('click', _.before(5, addContactToList));\n// => Allows adding up to 4 contacts to the list.\n\nCreates a function that invokes `func`, with the `this` binding and arguments\nof the created function, while it's called less than `n` times. Subsequent\ncalls to the created function return the result of the last `func` invocation.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-before",
      "matches": {
        "lodash before": true
      }
    },
    "8e076dfe-774c-37fd-ab7c-63260b97c8db": {
      "content": "[[multiple_plugins]]\nplugins = [${1}]\n${0}",
      "doc": "",
      "filetype": "toml",
      "grammar": "snu",
      "label": "[[multiple_plugins]]",
      "matches": {
        "multiple_plugins": true
      }
    },
    "8e0bfd6d-80cf-354b-8505-c27eb4792c09": {
      "content": "_.flattenDeep(${array})",
      "doc": "_.flattenDeep([1, [2, [3, [4]], 5]]);\n// => [1, 2, 3, 4, 5]\n\nRecursively flattens `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flattendeep",
      "matches": {
        "lodash flattendeep": true
      }
    },
    "8e10a47e-03b9-397b-9d06-4e2a19b28e93": {
      "content": "@unless (${1:condition})\n    ${2}\n@endunless",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@unless ... @endunless",
      "matches": {
        "unless": true
      }
    },
    "8e195626-e0fe-3322-80f5-3c8b10de625c": {
      "content": "read(unit = ${1:fp}, file = ${2:filename}, iostat = ${3:ierr}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "read": true
      }
    },
    "8e2221ac-d4a9-3944-bc60-39b4453155c8": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "8e228470-8d96-3726-8290-f785aaf8c4d1": {
      "content": "justifyContent: '${1:center}',",
      "doc": "justifyContent",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "justifyContent",
      "matches": {
        "just": true
      }
    },
    "8e239a9d-1aaf-3308-9dd4-71859ff3906f": {
      "content": "_.isNull(${value})",
      "doc": "_.isNull(null);\n// => true\n\n_.isNull(void 0);\n// => false\n\nChecks if `value` is `null`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnull",
      "matches": {
        "lodash isnull": true
      }
    },
    "8e27ca49-9fef-360b-9756-41b017fc487d": {
      "content": "$_ENV['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "E": true
      }
    },
    "8e29559a-ac8a-34d6-9134-5c56b1039f0b": {
      "content": "| sort: '${1:key}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sort": true
      }
    },
    "8e338c2b-247b-305a-b262-29046122a04c": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:model}_path(${0:@$2}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lip": true
      }
    },
    "8e34bdb2-3f0f-30ff-a82e-774edcef65d7": {
      "content": "each_with_index { |${1:e}, ${2:i}| $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert each with index inline block",
      "matches": {
        "eawi": true
      }
    },
    "8e3564b4-6359-37fa-99f0-2bfa1cc26a4b": {
      "content": "date:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      }
    },
    "8e3f66f2-efc9-3c32-96d4-54c9a568dd2e": {
      "content": "-webkit-border-image: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:w": true
      }
    },
    "8e41db19-24b8-3a76-a502-1bc306163445": {
      "content": "Object.assign(${1:dest}, ${2:source})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.assign",
      "matches": {
        "oa": true
      }
    },
    "8e4962c0-fb68-3ac8-9b4c-df1896235d5f": {
      "content": "Set<${1:Object}> ${2:set} = new HashSet<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.hs": true
      }
    },
    "8e4ede1d-7949-30fc-9020-0fb6b82c693b": {
      "content": "#![feature(${1:plugin})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "feature attribute",
      "matches": {
        "feat": true
      }
    },
    "8e552bb4-f575-3a04-b5be-93041e36e056": {
      "content": "clear: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      }
    },
    "8e5553a7-3662-30f8-8680-795593a1e0af": {
      "content": ":only-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      }
    },
    "8e57fafd-4668-3048-951c-034637b1c548": {
      "content": "find(:first${1:, conditions: ['${2:${3:field} = ?}', ${5:true}]})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(:first)",
      "matches": {
        "finf": true
      }
    },
    "8e5b4933-002b-3dea-be8e-3e5535c44de3": {
      "content": "\\\\begin{columns}\n\t\\\\begin{column}{0.5\\\\textwidth}\n\t\t${1}\n\t\\\\end{column}\n\t\\\\begin{column}{0.5\\\\textwidth}\n\t\t${0}\n\t\\\\end{column}\n\\\\end{columns}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "two-column environment",
      "matches": {
        "col2": true
      }
    },
    "8e5ceafc-ce3f-343c-930f-c9964b10f976": {
      "content": "[<${0:TARGET}>]",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "attribute [<..>]",
      "matches": {
        "att": true
      }
    },
    "8e60a901-51d3-3c73-a104-f93faa45b82f": {
      "content": "scope(exit) ${1:f.close();}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sce": true
      }
    },
    "8e674282-350b-3fe8-8e9f-e5d40f8f3f66": {
      "content": "font-size: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      }
    },
    "8e67e2c7-3791-3059-b3db-e30b25f47ff5": {
      "content": "while ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "8e68e43f-c759-376e-8335-1b3cbd83aaf7": {
      "content": "$this->shouldThrow(${1:'\\Exception'})->during${2:Method}(${3:'$arg'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldThrow('\\Exception')->duringXYZ($arg)",
      "matches": {
        "sthrowm": true
      }
    },
    "8e7af5d2-e8f1-37dd-a9ab-7bf12c446733": {
      "content": "function acos(${1:cosine})$0",
      "doc": "function trigonometric arc-cosine, or inverse cosine, of cosine",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-acos",
      "matches": {
        "function acos": true
      }
    },
    "8e7fbeba-4894-36c0-b889-80b57c4c292a": {
      "content": "class:${1:name}={${2:condition}}",
      "doc": "class",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class",
      "matches": {
        "s-class": true
      }
    },
    "8e80fd40-acd4-3094-b422-8b376a129c82": {
      "content": "{% if ${1:#:condition} %}\n  ${0:TARGET}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "if endif",
      "matches": {
        "if": true
      }
    },
    "8e818c75-5990-3f7d-9ff5-7fa84dc4a420": {
      "content": "grid-auto-rows: auto",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:a": true
      }
    },
    "8e836b5c-32bc-3b36-88b1-ca17a72a0bd9": {
      "content": "Tuple${1:2}[${2:T},${0:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tpl": true
      }
    },
    "8e901e95-a462-3e72-81df-1e937aa3617e": {
      "content": "function integer-of-date(${1:yyyymmdd})$0",
      "doc": "converts yyyymmdd to an internal integer-date",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer-of-date",
      "matches": {
        "function integer-of-date": true
      }
    },
    "8e913696-02af-3d9e-a0e8-a2be777762bc": {
      "content": "this.state = {\n\t$1\n};",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "emptyState",
      "matches": {
        "est": true
      }
    },
    "8e92615b-737b-31db-9d66-daba5a5fc808": {
      "content": "shadowColor: '${1:none}',",
      "doc": "shadowColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "shadowColor",
      "matches": {
        "sha": true
      }
    },
    "8e940ed6-e50e-371e-a525-26193e26163e": {
      "content": "PStore.new('${1:file_name.pstore}')",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Pn-": true
      }
    },
    "8e95d8af-7425-32f5-b33e-447b3ed4a51b": {
      "content": "require(\"${1:module}\")",
      "doc": "Require module",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "req": true
      }
    },
    "8e97eb3f-df8f-3d25-ac01-708cc76db0ce": {
      "content": "${1:import org.scalatest.Suite}\n${0:import org.scalatest.FunSuite}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scalatest": true
      }
    },
    "8e9acb89-98c8-3a1b-840d-dcbac8ef50b5": {
      "content": "border-bottom-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri": true
      }
    },
    "8ea31075-713f-360e-9046-377df60b2ebc": {
      "content": "delegate ${1:void} ${2:#:Delegate}(${3:#:arguments});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delegate": true
      }
    },
    "8eb026c1-bfe0-35a2-8afe-f0cd2492a761": {
      "content": "SCRIPT_DIR=\"\\$( cd \"\\$( dirname \"\\${BASH_SOURCE[0]}\" )\" && pwd )\"",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdir": true
      }
    },
    "8eb3e5c2-77f6-370d-b120-80605a722716": {
      "content": "${1:type}, parameter :: $2 = ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      }
    },
    "8ebae62c-12db-3929-b078-84390174e86b": {
      "content": "-\n-\n-\n-",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "8ebd8ccb-00c9-3738-a61a-4c35d24ad77d": {
      "content": "private fun ${1:name}(${2}): ${3:String} {\n\t${4}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfun": true
      }
    },
    "8ec80b09-89db-3303-9166-24399a0181d2": {
      "content": "axios.get('${1:uri}')\n.then(function (response) {\n\t${2:success}\n})\n.catch(function (error) {\n\t${3:error}\n})",
      "doc": "Use Axios to make a get request - promise based",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-get-promise",
      "matches": {
        "axios get promise": true
      }
    },
    "8ec8e233-5799-3dca-bd89-572626101de4": {
      "content": "func Benchmark${1:name}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${2}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "benchmark function",
      "matches": {
        "bench": true
      }
    },
    "8ec96611-dd3a-3639-80af-80567fbf361a": {
      "content": "_.dropRightWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': true },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': false }\n];\n\n_.dropRightWhile(users, function(o) { return !o.active; });\n// => objects for ['barney']\n\n// The `_.matches` iteratee shorthand.\n_.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n// => objects for ['barney', 'fred']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropRightWhile(users, ['active', false]);\n// => objects for ['barney']\n\n// The `_.property` iteratee shorthand.\n_.dropRightWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']\n\nCreates a slice of `array` excluding elements dropped from the end.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-droprightwhile",
      "matches": {
        "lodash droprightwhile": true
      }
    },
    "8ec9ba06-04a5-38e1-8434-3da0e4e17699": {
      "content": "sqrt($2)",
      "doc": "float sqrt(float x)\nvec2 sqrt(vec2 x)\nvec3 sqrt(vec3 x)\nvec4 sqrt(vec4 x)\n\nThe sqrt function returns the square root of x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "sqrt",
      "matches": {
        "sqrt": true
      }
    },
    "8ecb4892-de06-3283-a9d2-3aa26d4414d4": {
      "content": "${1:FIELDNAME} = models.PositiveSmallIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "possmallint": true
      }
    },
    "8ed5595c-f185-3dc3-b846-40d10e083a5e": {
      "content": "{% redirect \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig redirect",
      "matches": {
        "redirect": true
      }
    },
    "8ed88d08-a33d-3dff-8adc-71e4dae5136b": {
      "content": "display: inline;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: inline (display)",
      "matches": {
        "display": true
      }
    },
    "8ed974c6-0b90-3bc4-8293-7301f9cc40e3": {
      "content": "overflow-x hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      }
    },
    "8ee5cd32-1aaf-35d8-b6b0-fef1df6bb422": {
      "content": "align-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:e": true
      }
    },
    "8ee7bd0e-84c2-36f9-afd0-36cd67009a9a": {
      "content": "vertical-align baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      }
    },
    "8eea37ab-e479-3323-aeb5-0fe7e2c014f9": {
      "content": "#ifndef ${1:DEBUG}\n$0\n#endif /* !$1 */",
      "doc": "Code snippet for #ifndef",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#ifndef",
      "matches": {
        "#ifndef": true
      }
    },
    "8eefc725-71ab-327b-bf19-2a0cdb6b1228": {
      "content": "import Link from 'next/link'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-link",
      "matches": {
        "next import link": true
      }
    },
    "8efbbf2a-f54f-3577-a538-869a632b1281": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${0:raise $3}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except",
      "matches": {
        "try": true
      }
    },
    "8efde1ea-31e9-3345-8d30-cb5aa7d85da0": {
      "content": "IBOutlet ${1:NSSomeClass} *${2:$1};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibo": true
      }
    },
    "8f00c414-fb48-31b4-81e6-bb324998d997": {
      "content": "SynthDef(\\\\${1:synthName}, {${2}\n\t${0}\n}).add;",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdef": true
      }
    },
    "8f03520c-95a5-3bcf-9361-f35a5ad760d2": {
      "content": "| handleize",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "handleize": true
      }
    },
    "8f0f9110-e432-3cfa-b6b6-99513b207032": {
      "content": "import ${1:Html} as ${2} exposing (${2:..})\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... as ... exposing (..)",
      "matches": {
        "impae": true,
        "importAsExposing": true
      }
    },
    "8f16a6cd-78cb-341f-a6ac-4dfcee904f77": {
      "content": "jasmine.objectContaining({\n\t${VISUAL}$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "object containing (js)",
      "matches": {
        "objc": true
      }
    },
    "8f1b5dd8-53e0-3733-ab4a-a9f5344d0420": {
      "content": "for (${1:identifier} in ${2:collection}) {\n   ${3:selected}\n}",
      "doc": "Code snippet for 'for' loop",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "8f32b3d3-f77e-39f4-9d30-25cf0b7c1463": {
      "content": "border-right none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      }
    },
    "8f3e2040-1121-3138-988d-9961db1b4cdb": {
      "content": "#endregion",
      "doc": "Folding Region End",
      "filetype": "php",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      }
    },
    "8f3e6b88-8068-3d52-952d-dd1f604a9a37": {
      "content": "_.next()",
      "doc": "var wrapped = _([1, 2]);\n\nwrapped.next();\n// => { 'done': false, 'value': 1 }\n\nwrapped.next();\n// => { 'done': false, 'value': 2 }\n\nwrapped.next();\n// => { 'done': true, 'value': undefined }\n\nGets the next value on a wrapped object following the\n[iterator protocol](https://mdn.io/iteration_protocols#iterator).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-next",
      "matches": {
        "lodash next": true
      }
    },
    "8f439c93-3971-36d7-88e7-ecdcade08a86": {
      "content": "_.isBuffer(${value})",
      "doc": "_.isBuffer(new Buffer(2));\n// => true\n\n_.isBuffer(new Uint8Array(2));\n// => false\n\nChecks if `value` is a buffer.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isbuffer",
      "matches": {
        "lodash isbuffer": true
      }
    },
    "8f4ad394-464d-3ac9-8d34-601ae100c4cf": {
      "content": "box-shadow: ${1:${2:offset-x} ${3:offset-y} ${4:blur} ${5:spread} ${6:color} ${7:inset}};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "box-shadow: color-hex x y blur (text)",
      "matches": {
        "bxsh": true
      }
    },
    "8f50ce79-9b9e-3886-999f-aa256010395e": {
      "content": "(cond\n\t[(${1}) ${2}]\n\t[else ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conde": true
      }
    },
    "8f5373d2-741f-398d-8b5c-5b176184e550": {
      "content": "wont_be_instance_of ${0:Class}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbio": true
      }
    },
    "8f54bd96-6c21-3226-9a46-84bf270f8112": {
      "content": "${1:obj}.reset (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reset": true
      }
    },
    "8f63726a-1114-3dd8-9c80-ddbc3db326cd": {
      "content": "<dd>${1:TARGET}</dd>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      }
    },
    "8f664ebd-c28e-3c71-b06d-639d8c23c99b": {
      "content": "<%- $1 %> $2",
      "doc": "EJS outputs value",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Output Escaped",
      "matches": {
        "ejsesc": true
      }
    },
    "8f67e197-12fa-36fd-9166-0ae0dde89fc4": {
      "content": "function! s:suite.${1}()\n  ${2:TARGET}\n  call s:assert.equal(${3:expected}, ${4:actual})\nendfunction",
      "doc": "",
      "filetype": "vimspec",
      "grammar": "snu",
      "label": "",
      "matches": {
        "suite": true
      }
    },
    "8f6daf06-fbd3-3cf8-9bfc-0dbcc83be275": {
      "content": "align-content: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      }
    },
    "8f710261-196c-31b9-a8da-4176156fcfa6": {
      "content": "border-right-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-color": true,
        "brc": true
      }
    },
    "8f7341ee-f53a-39ff-a80a-b6a37a2b9c42": {
      "content": "import { Link } from \"gatsby\"",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-import",
      "matches": {
        "gatsby link import": true
      }
    },
    "8f7673de-82db-3f7f-ae90-46f5d11d7b4a": {
      "content": "const ${1:store} = new Vuex.Store({\n\t${2:// ...}\n})",
      "doc": "const store = new Vuex.Store({ })",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "newVuexStore",
      "matches": {
        "newVuexStore": true
      }
    },
    "8f7a3fe9-abba-385d-9704-ea7fffe62835": {
      "content": "<router-link :to=\"{name: '${1:name}', params:{${2:id}: '${3:value}'} }\">${4:LinkTitle}</router-link>",
      "doc": "Named routing link w/ params",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Named Routing Link with Params",
      "matches": {
        "vroutenameparam": true
      }
    },
    "8f7f1052-0f54-30ee-8a8d-ed019d2f5b03": {
      "content": "${1:FIELDNAME} = models.ManyToManyField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ManyToManyField",
      "matches": {
        "m2m": true
      }
    },
    "8f81e15d-f6f8-3870-9990-c7ff702ca40a": {
      "content": "//#region ${1}\n${2}\n//#endregion",
      "doc": "Create region",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "regionStartEnd",
      "matches": {
        "#regionStartEnd": true
      }
    },
    "8f846121-5e01-3539-a08d-21da676c9401": {
      "content": "$_COOKIE['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      }
    },
    "8f8c36b5-6f07-3302-94bd-5a1ef11399a4": {
      "content": "let ${1} = (${2}) => {\n\t${0}\n};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "8f8cbd19-e240-37de-be66-1830b6d94a4e": {
      "content": "background-repeat: repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      }
    },
    "8f8ee4e9-1e71-344f-98c4-a9a29134b79e": {
      "content": "std::set<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "8f8f5be6-ef87-330c-9c35-06445639ac3d": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      }
    },
    "8f9055da-0eeb-36d4-beab-e80a487afd97": {
      "content": "set ${1:setting};",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "se": true
      }
    },
    "8f91df61-4d16-3086-b4a6-3b887e11923a": {
      "content": "${1:obj}.attr({'${2:attr1}': '${3:value1}', '${4:attr2}': '${5:value2}'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attrm": true
      }
    },
    "8fa45bc7-5557-3980-a9dd-8912469f4ffa": {
      "content": "${fn:length(${0:collection_or_string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "length": true
      }
    },
    "8fa82cd9-d48c-3ea8-a708-17718ecafc31": {
      "content": "$${1:variable}: ${0:value};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$": true
      }
    },
    "8fba6c8b-4f20-39db-9813-46a44768c497": {
      "content": "paste(${1:...}, ${2:collapse = ${3:NULL}})",
      "doc": "Paste0",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pas0",
      "matches": {
        "pas0": true
      }
    },
    "8fc7383c-0c84-353f-8efb-ae0e09415f3c": {
      "content": "text-justify: inter-word",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:iw": true
      }
    },
    "8fc8bcc1-b2ce-3ed2-bef9-fb5a71ea50b5": {
      "content": "JSON.stringify(${0:object});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsons": true
      }
    },
    "8fce312c-9bf8-343e-b9f5-649474e6d3eb": {
      "content": "background(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg": true
      }
    },
    "8fcf8f43-84d4-3119-9ad8-780e369ad1bc": {
      "content": "def ${1:__init__}(self, *args, **kwargs):\n    super(${0:ClassName}, self).$1(*args, **kwargs)",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dol": true
      }
    },
    "8fd78e77-91bf-3092-ab23-e4600f7fc207": {
      "content": "text-align: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      }
    },
    "8fdb673f-cf71-3a78-aa81-1dd75b55558d": {
      "content": "@appear-cancelled=\"$1\"$0",
      "doc": "@appear-cancelled=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-cancelled",
      "matches": {
        "appearcancelledevent": true,
        "vue appear-cancelled": true
      }
    },
    "8fdba038-75af-3e50-bed0-9291c9a406c8": {
      "content": "unless ${1} do\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do .. end",
      "matches": {
        "unless": true
      }
    },
    "8fdea8f5-9709-368f-8fc7-f134b86e6c7f": {
      "content": "border-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri": true
      }
    },
    "8fe6db90-e4f1-3c19-a915-8fd5f7e8e018": {
      "content": "<xsl:for-each select=\"${1:*}\">${2}\n</xsl:for-each>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for-each": true
      }
    },
    "8fe75f96-0ef7-3a37-9ca3-3797977ea0d4": {
      "content": "class ${1:MODEL_NAME}DeleteView(DeleteView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Delete View",
      "matches": {
        "deleteview": true
      }
    },
    "8fe7cdc3-8f40-3850-98d1-12aa21b87c1c": {
      "content": "<pre>\n${1:TARGET}\n</pre>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      }
    },
    "8ff00025-68af-3c48-8202-0349361dfeeb": {
      "content": ".. sidebar:: ${1:Title}\n\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sid:": true
      }
    },
    "8ff44fd3-f243-3f69-8563-dd5183dca69e": {
      "content": "${1:FIELDNAME} = models.BinaryField($2)",
      "doc": "BinaryField (mbinary).\n\nA field to store raw binary data.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mbinary",
      "matches": {
        "mbinary": true
      }
    },
    "8ff5ca2f-5908-3148-b4ee-3a899cfbe18f": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\n\timport Vue from 'vue'\n\n\texport default Vue.extend({\n\t\t${0}\n\t})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-typescript",
      "matches": {
        "vue base ts": true
      }
    },
    "8ff7f106-8fbb-3e93-aff9-bfa0cd24751d": {
      "content": "class ${1:CLASS_NAME}(TemplateView):\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Template View",
      "matches": {
        "templateview": true
      }
    },
    "8ffef6b0-ebb4-3374-8223-2d05ccc00115": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t$0\n}",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      }
    },
    "9005dea9-ec4a-39aa-805f-5902ec337327": {
      "content": "appear-class=\"$1\"$0",
      "doc": "appear-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-appear-class",
      "matches": {
        "appearclass": true,
        "vue appear-class": true
      }
    },
    "900a82a6-4dfb-3038-a588-35ecc032e6c8": {
      "content": "// Package $1 provides ${2:...}\npackage ${1:main}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "package ...",
      "matches": {
        "package": true
      }
    },
    "90102d90-1238-3726-9c04-16ede4448cb4": {
      "content": "__import__('ipdb').set_trace()$0",
      "doc": "Code snippet for ipdb debug",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "iPDB set trace",
      "matches": {
        "ipdb": true
      }
    },
    "9012ce76-2184-38af-85ac-132767976925": {
      "content": "test \"${1:test name}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "901a8703-4a5b-3a42-94da-8d9a81b19d2f": {
      "content": "background-origin: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      }
    },
    "90234cbf-ea90-35f1-af17-8781b7b3a9df": {
      "content": "grid-gap: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gg:0": true
      }
    },
    "90317f26-fb7f-325e-a149-b91a35a7e58c": {
      "content": "stringformat:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      }
    },
    "903ce462-3012-3199-b6a7-e3a03c98c800": {
      "content": "_.negate(${predicate})",
      "doc": "function isEven(n) {\n  return n % 2 == 0;\n}\n\n_.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n// => [1, 3, 5]\n\nCreates a function that negates the result of the predicate `func`. The\n`func` predicate is invoked with the `this` binding and arguments of the\ncreated function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-negate",
      "matches": {
        "lodash negate": true
      }
    },
    "90438d13-4aa7-3b03-b80c-b0064fef8024": {
      "content": "_.sortedUniqBy(${array}, ${iteratee})",
      "doc": "_.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n// => [1.1, 2.3]\n\nThis method is like `_.uniqBy` except that it's designed and optimized\nfor sorted arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sorteduniqby",
      "matches": {
        "lodash sorteduniqby": true
      }
    },
    "90449e53-2ec6-36e7-ae0f-2ab5556c69a5": {
      "content": "@selector(${1:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "@selector",
      "matches": {
        "sel": true
      }
    },
    "90453c0b-95db-3d17-ac08-00aa238fb4cb": {
      "content": ".. |${1:alias}| image:: ${0:img}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img:": true
      }
    },
    "9046657c-53b2-36cf-8cc9-7ed40a2858cd": {
      "content": "\\begin{rmfamily}\n\t${1:TARGET}\n\\end{rmfamily}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{rmfamily} \\rmfamily": true,
        "rmfamily": true
      }
    },
    "9048f302-f445-33e2-9b7c-a1cee63cbff1": {
      "content": "${1:method} (${2:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "method",
      "matches": {
        "m": true
      }
    },
    "904e5126-0c69-357d-841d-8449e971684e": {
      "content": "| img_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_tag": true
      }
    },
    "90549d83-77dc-3f4d-a43c-6af24f4989d9": {
      "content": "case ${1} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "905d3096-1d6e-398a-a394-1a568e2102ac": {
      "content": "ambientLight(${1:v1}, ${2:v2}, ${3:v3}${7:, ${4:x}, ${5:y}, ${0:z}});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ambientLight": true
      }
    },
    "90642953-506d-37fa-9d05-27d3d6839f5a": {
      "content": "package ${1:package}{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "package": true
      }
    },
    "90671bc8-b209-37f4-bf7a-14d9d71b172a": {
      "content": "#import <${1:Cocoa/Cocoa.h}>",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "#import <> (Imp)",
      "matches": {
        "Imp": true
      }
    },
    "9067d17d-8d55-33c0-99f0-c0c315883f6f": {
      "content": "Yii::app()->cache->add('${1:key}', ${2:value}, ${3:expire}, new C${4}CacheDependency(${0}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycad": true
      }
    },
    "906ad7a1-89a2-30b1-b789-8bdde1d4ac18": {
      "content": "justify-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      }
    },
    "906f7506-0c2c-3a38-be79-00f70d3cb08e": {
      "content": "{\n\t\"type\": \"header\",\n\t\"content\": \"$1\",\n\t\"info\": \"$2\"\n},$3",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema header",
      "matches": {
        "_header": true
      }
    },
    "9074514e-e25d-3e61-9a7c-c98e00ff5f8c": {
      "content": "from django.contrib.admin import AdminSite",
      "doc": "from ... import AdminSite",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "iadminsite",
      "matches": {
        "iadminsite": true
      }
    },
    "907529d9-396d-36c8-a0fc-6e71f41c645d": {
      "content": "{%- include_relative '${file:}' -%}",
      "doc": "Tag: include relative",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag include relative",
      "matches": {
        "increl": true
      }
    },
    "9078150f-b392-36d0-927c-e8a653427d64": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      }
    },
    "90892976-c9d8-3be4-aa97-c3c8215962e8": {
      "content": "require '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "require",
      "matches": {
        "req": true
      }
    },
    "908d1870-caa3-3400-8126-31732296d875": {
      "content": "\\\\langle ${0:${VISUAL}} \\\\rangle",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "langle rangle",
      "matches": {
        "lra": true
      }
    },
    "908fe8c4-d2a5-34dc-99fc-7fdb3f434ba5": {
      "content": "${1:#:expression} while ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "xwh",
      "matches": {
        "xwhile": true
      }
    },
    "90915e6d-9f34-3958-96c0-c2874de71b1d": {
      "content": "echo CHtml::encodeArray(array(${0}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yheca": true
      }
    },
    "909a1579-9785-3b11-9313-91c5426079df": {
      "content": "display: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d": true
      }
    },
    "909a35fa-e1d6-3113-8ef9-830034653907": {
      "content": "setTimeout(() => {\n\t$0\n}, ${1:timeout});",
      "doc": "Set Timeout Function",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Set Timeout Function",
      "matches": {
        "settimeout": true
      }
    },
    "909c4e16-5615-3303-8e80-f7ff600b9690": {
      "content": "$('${1:selector}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jj": true
      }
    },
    "90ab3578-a4a8-3f7d-b593-d63459852452": {
      "content": "caption-side top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      }
    },
    "90ab7954-2698-3f94-a336-ed6370ffcb1f": {
      "content": "\\\\begin{enumerate}\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enum": true
      }
    },
    "90b17c0e-5aea-31f9-9eda-aac09a40e926": {
      "content": "int opApply(Dg)(Dg dg) if(ParameterTypeTuble!Dg.length == 2) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opApply": true
      }
    },
    "90b23dad-daca-3bd8-a74c-bdb924cf0db9": {
      "content": "set ${1:property} (${2:value}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "setter",
      "matches": {
        "set": true
      }
    },
    "90c4767c-82f5-3caa-830d-7820b4c34be7": {
      "content": "<code>${0}</code>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "code": true
      }
    },
    "90c87c3f-5c14-35c3-bbe3-34456112e689": {
      "content": "try {\n  ${1:TARGET}\n} catch (${2:e}) {\n  ${3}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "90d6c1d5-4844-30ef-956b-1d1976d5ca15": {
      "content": "{%- elsif ${1:condition} -%}",
      "doc": "Control flow tag: elsif, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag elsif, whitespaced",
      "matches": {
        "elsif-": true
      }
    },
    "90e2f547-fc40-3a9e-ae62-eed1ba7e2599": {
      "content": "text-wrap: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:n": true
      }
    },
    "90e6d07f-cc85-38f0-9af8-bb62cc470f65": {
      "content": "import ${2:moduleName} from '${1:module}';$0",
      "doc": "Imports entire module statement in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "base import": true
      }
    },
    "90ebdfec-32b5-357a-aded-faac6e57ad1d": {
      "content": "display none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      }
    },
    "90ef88d0-3c9f-38c3-b26b-82fbd3d60dba": {
      "content": "implements ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "90f10e7b-3c7a-3e50-a0e1-d9e096214585": {
      "content": "do {\n\t$0\n} catch ${1:error} {\n\t$2\n}",
      "doc": "do statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "do",
      "matches": {
        "do": true
      }
    },
    "90f1853e-4f6a-3394-aab5-8111dd260334": {
      "content": "<rp>$1</rp>$2",
      "doc": "HTML - Used in ruby annotations to define what to show browsers that do not support the ruby element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "rp",
      "matches": {
        "rp": true
      }
    },
    "90f7191c-f4d1-3b56-b83a-a6b9a0c3a9b3": {
      "content": "top: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "top",
      "matches": {
        "top": true
      }
    },
    "90fbc6a0-1190-38b5-8cc9-ce3e8fb10e02": {
      "content": "<del>${1:TARGET}</del>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "del": true
      }
    },
    "91088139-157a-3d60-940b-3c979ae12479": {
      "content": "quotes: '\\00AB' '\\00BB' '\\201E' '\\201C';",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      }
    },
    "910ce56f-a371-3077-af2c-a61cb4f7f47b": {
      "content": "style ${1:base} {\n\t${2:attribute}: ${3:value};\n}",
      "doc": "Styles define with CSS how an HTML element looks.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Style",
      "matches": {
        "sty": true
      }
    },
    "91136f9e-311f-309f-b41d-48039a9789a9": {
      "content": "let!(:${1:object}) { $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert let!",
      "matches": {
        "let!": true
      }
    },
    "91137df5-8576-3bdf-8020-b492ef0461ef": {
      "content": "justify-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content: center",
      "matches": {
        "jcc": true
      }
    },
    "91144cf9-1819-3840-9347-fd9a38b50e03": {
      "content": "fscommand(${1:#:command}, ${2:#:paramaters});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs": true
      }
    },
    "9117b8be-a894-3230-9c44-a60430e69a6b": {
      "content": "visibility: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v": true
      }
    },
    "911c1476-7fa1-37ec-898e-e4f45059f3c3": {
      "content": "<nuxt-link to=\"/${1:page}\">${1:page}</nuxt-link>",
      "doc": "nuxt routing link",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Nuxt Routing Link",
      "matches": {
        "vnuxtl": true
      }
    },
    "911ea86c-5745-33b9-b5e1-d21c909b6da3": {
      "content": "${1:obj}.siblings('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sib": true
      }
    },
    "912c0b2d-b0d0-35d0-879f-0ea8b79ee547": {
      "content": "justify-content end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:e": true
      }
    },
    "912f6116-d405-323c-83c1-9903282619aa": {
      "content": "@code ${1:lang}\n$0\n@end",
      "doc": "code_block",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "code",
      "matches": {
        "code": true
      }
    },
    "9134a021-ec9c-319d-baea-2ce7c895087f": {
      "content": "describe \"${1:test group subject}\" do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "des",
      "matches": {
        "test": true
      }
    },
    "91358e35-98a0-3487-ae5e-871ed6687d28": {
      "content": "\\pdv[${1:${VISUAL}}]{${2}}{${3}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Partial Derivative",
      "matches": {
        "pdv": true
      }
    },
    "9139a5ad-ff6b-32b7-bce7-94c51c908334": {
      "content": "return;",
      "doc": "The keyword return is used to define a proper exit for a function. If the function has the return type void no value is passed back to the caller of the function.\n\nreturn aValue;\n\nIf the function has a non-void return type a parameter of the same type has to be included in the statement. The value is passed back to the caller of the function.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "return",
      "matches": {
        "return": true
      }
    },
    "913a05cb-f0c2-3096-8cf3-cd6addfb7e14": {
      "content": "align-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      }
    },
    "913b86c8-69e7-3a18-b09c-2cd22ba3b61e": {
      "content": "_.value()",
      "doc": "_([1, 2, 3]).value();\n// => [1, 2, 3]\n\nExecutes the chain sequence to resolve the unwrapped value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-value",
      "matches": {
        "lodash value": true
      }
    },
    "913c2245-7499-3833-b3d3-1791feb26dce": {
      "content": "$.ajaxPrefilter(function (${1:options}, ${2:originalOptions}, jqXHR) {\n\t${0: // Modify options, control originalOptions, store jqXHR, etc}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxprefilter": true
      }
    },
    "913e5095-642c-311b-aaa7-1096847d1f08": {
      "content": "case ${1:#:expression} :\n\t${1:TARGET}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "ce",
      "matches": {
        "case": true
      }
    },
    "91485258-c12f-3ebf-beca-1ffae6a9e5bd": {
      "content": "${1:FIELDNAME} = models.PhoneNumberField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PhoneNumberField",
      "matches": {
        "mphone": true
      }
    },
    "914b5035-f3bf-3cdf-b83b-3ddef487ff83": {
      "content": "overflow-y visible",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      }
    },
    "914ce9c5-ec59-3f4b-bc42-b60864707654": {
      "content": "expect(${1:target}).not.toBeDefined()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be defined (coffee)",
      "matches": {
        "notd": true
      }
    },
    "914d114d-7033-3bfe-8a75-a7d5e73f8db0": {
      "content": "scope=\"${1:this api replaced by slot-scope in 2.5.0+}\"$0",
      "doc": "Used to denote a <template> element as a scoped slot, which is replaced by `slot-scope` in 2.5.0+.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-scope",
      "matches": {
        "scope": true,
        "vue scope": true
      }
    },
    "914decf7-fd59-33ba-b201-8205cf74c156": {
      "content": "_.omit(${object}, ${paths})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.omit(object, ['a', 'c']);\n// => { 'b': '2' }\n\nThe opposite of `_.pick`; this method creates an object composed of the\nown and inherited enumerable property paths of `object` that are not omitted.\n\n**Note:** This method is considerably slower than `_.pick`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-omit",
      "matches": {
        "lodash omit": true
      }
    },
    "914f119d-9a51-3148-8cbe-b9c43dd7e30e": {
      "content": "border-width: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-width",
      "matches": {
        "borw": true
      }
    },
    "91526b95-cc15-30fc-9c66-b8d406c53234": {
      "content": "$.merge(${1:target}, ${0:original});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "merge": true
      }
    },
    "9153af62-d42b-31b0-931a-596bf494811d": {
      "content": "def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "915abc29-7bde-3af8-9139-162e666fcfd2": {
      "content": "$this->assertEquals(${1:$expected}, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertEquals($a, $b)",
      "matches": {
        "ase": true
      }
    },
    "915f46b4-1b78-3557-be7c-a3efee7552fc": {
      "content": "jasmine.stringMatching(\"${1:matcher}\")",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "string matching (js)",
      "matches": {
        "strm": true
      }
    },
    "916304b0-cc72-3e7d-92a6-f6647373d6a0": {
      "content": "{% codeblock %}\n${0:code_snippet}\n{% endcodeblock %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "codeblock-short": true
      }
    },
    "9164e073-3855-377b-abe3-a6a5185655a3": {
      "content": "text-justify: inter-ideograph;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      }
    },
    "91683088-8db9-3906-8177-7855631f109d": {
      "content": "${1:obj}.mouseover(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mover": true
      }
    },
    "9169a6b4-2f51-37f6-b335-f9b87bf7ff74": {
      "content": "<%def name=\"${1:name}\">\n\t${0:}\n</%def>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "916e68cd-bfc0-3314-afd0-a50ff0230b21": {
      "content": "${1:a}: ${2:T}${0:, arg}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arg": true
      }
    },
    "91711d3d-16d1-3b2b-bd8d-3f48c283146b": {
      "content": "[self lockFocus];\n$0\n[self unlockFocus];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Lock Focus",
      "matches": {
        "focus": true
      }
    },
    "9172d4b7-2202-32e3-895a-0193d0a60a8b": {
      "content": "use Doctrine\\Common\\Collections\\ArrayCollection;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Doctrine\\..\\ArrayCollection",
      "matches": {
        "usearray": true
      }
    },
    "917a9981-e2d6-39f5-bdf2-96b4085532b8": {
      "content": "define(\"${1:#name}\", [\"${2:#dependencies1}\"], function (${3:#dependencies2}) {\n\treturn ${0:TARGET};\n});",
      "doc": "",
      "filetype": "javascript-requirejs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      }
    },
    "917c3f95-c0b9-39d4-82bb-86a44624628c": {
      "content": "@proceedings{${1:LABEL},\n    title = {${2}},\n    year = {${3}},\n    memo = {editor, publisher, organization, address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@proceedings": true,
        "proceedings": true
      }
    },
    "917e0b42-0be5-3e56-b02b-c6852d82ebb1": {
      "content": "console.group('${1:label}');",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolegroup",
      "matches": {
        "base console group": true
      }
    },
    "9188795f-5a83-325e-9fa3-15dded04dd4a": {
      "content": "$.isWindow(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iswin": true
      }
    },
    "918ff5b8-b5c8-354a-85e4-13a2eaf81730": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "91973db3-3bda-3a12-bf4f-fc4f0979c6c2": {
      "content": "union ${1:MyUnion} {\n\t$0\n};",
      "doc": "Code snippet for union",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "union",
      "matches": {
        "union": true
      }
    },
    "919824c1-f836-34bb-b745-2857feb29a1e": {
      "content": "function range(${1:argument},${2:...})$0",
      "doc": "value of the maximum argument minus the value of the minimum argument",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-range",
      "matches": {
        "function range": true
      }
    },
    "919a2bff-2cf4-3baa-874c-99191db7373a": {
      "content": "for(int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "919d595e-e922-3c8f-9dd4-113433c73b52": {
      "content": "top: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "919dc548-7404-3bd7-9709-6a58dddc6495": {
      "content": "{% verbatim %}\n\t${0}\n{% endverbatim %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig verbatim",
      "matches": {
        "verbatim": true
      }
    },
    "91a3902d-1b97-31e5-8708-4d6f07971b93": {
      "content": "[ngStyle]=\"{${1:style}: ${2:expression}}\"",
      "doc": "Angular ngStyle",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngStyle",
      "matches": {
        "a-ngStyle": true
      }
    },
    "91a557b1-e1d5-3b7f-98de-a656a7e20f00": {
      "content": "(* ${0} *)",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "91ab4951-b940-3e16-8af1-d753f4adbe65": {
      "content": "if ${1:true} then\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "91af1259-ffb2-3611-991f-b2a88970a8c0": {
      "content": "+------------------+------------+-----------------------+------------+\n|${1:#:cel} | | | |\n+==================+============+=======================+============+\n| | | | |\n+------------------+------------+-----------------------+------------+\n| | | | |\n+------------------+------------+-----------------------+------------+",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "grid_table",
      "matches": {
        "table_grid": true
      }
    },
    "91b36793-656b-3be4-b7e1-636ae1a91d4e": {
      "content": "export(${1:type}${2:,other_configs}) var ${3:name}${4: = }${5:}${6: setget }",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "export variables",
      "matches": {
        "export": true
      }
    },
    "91b4c5e0-1a0a-343a-8c0e-dede91cc8f11": {
      "content": "each_with_index do |${1:e}, ${2:i}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert each with index multiline block",
      "matches": {
        "eawid": true
      }
    },
    "91b6a269-dbf7-35c5-b76a-49bf97942a54": {
      "content": "<?php\n\nclass ${1:ModelName} extends ${2:CActiveRecord}\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @return CActiveRecord the static model class\n\t */\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '${0:table_name}';\n\t}\n\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array customized attribute labels (name=&gt;label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t);\n\t}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ymodel": true
      }
    },
    "91baf3e7-51e9-3c58-934c-e661534938e4": {
      "content": "align-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      }
    },
    "91c82db6-79c4-3ceb-858c-db661718773d": {
      "content": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: '${1:prefix-app}',\n\ttemplate: `\n\t\t<router-outlet></router-outlet>\n\t\t`\n})\nexport class ${2:App}Component { }\n$0",
      "doc": "Angular App root component",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-root-component",
      "matches": {
        "a-component-root": true,
        "angular root component": true
      }
    },
    "91cc56dd-d678-34ee-810a-8cdca8c5bc7c": {
      "content": "points(${1:x}, ${2:y = ${3:NULL}}, ${4:type = ${5:\"p\"}}, ${6:...})",
      "doc": "Points",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "poi",
      "matches": {
        "point": true
      }
    },
    "91d22e81-d535-3f15-bb75-31ac9bea2af7": {
      "content": "after info ${0:id}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afin": true
      }
    },
    "91db2c68-b79f-372d-b1b4-0df54710692a": {
      "content": "border-right-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrw": true
      }
    },
    "91e69da1-087b-3fb8-b913-d18befdff6bf": {
      "content": "grid-column-end ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      }
    },
    "91e9144d-7d68-3e85-8c68-237462763c8f": {
      "content": "protected ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create protected field",
      "matches": {
        "tprofi": true
      }
    },
    "91f2f98e-bcc9-3d61-b641-14490600a03d": {
      "content": "PImage(${1:width}, ${0:height});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimage": true
      }
    },
    "91f79cb8-e2fb-3ff8-bdc3-a14ba9e327e2": {
      "content": "{% endset %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endset",
      "matches": {
        "endset": true
      }
    },
    "91fc60e8-b401-3fa6-bd27-5382cc16b869": {
      "content": "@font-face {\n\tfont-family: ${1};\n\tsrc: url(${2});\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      }
    },
    "92021b38-f8a6-3660-893c-3a8bfa1e9515": {
      "content": "font-emphasize: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fem": true
      }
    },
    "920430cb-298d-38d4-8da0-2b1fbb372930": {
      "content": "@include('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@include",
      "matches": {
        "include": true
      }
    },
    "9208729b-ddb0-3066-8583-36a82d49761a": {
      "content": "$.isWindow(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iswin": true
      }
    },
    "920d5c80-f6c8-36bd-891f-338b18e2714d": {
      "content": "(case ${1}\n  ((${2}) ${3})\n  (${0:else}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "920d6771-297e-3ac0-8a74-573984b825d1": {
      "content": "{\n\t\"type\": \"checkbox\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": ${3|false,true|},\n\t\"info\": \"$4\"\n},$5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema checkbox",
      "matches": {
        "_checkbox": true
      }
    },
    "92113e91-5318-3d13-a34c-e5b1b5140bd1": {
      "content": "- (${1:#:id})${2:#:thing};\n- (void)set${2}:(${1})aValue;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iobj": true
      }
    },
    "9216883e-c064-33b4-9c58-22ee0a7f128e": {
      "content": "components: {\n\t${1:New},\n},",
      "doc": "Import one component into another, within export statement",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import into the Component",
      "matches": {
        "vcomponents": true
      }
    },
    "9218b96e-c080-387c-adeb-69727b6045e7": {
      "content": "let rec ${1:f} =\n\t${2:expr}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let rec",
      "matches": {
        "lr": true
      }
    },
    "921c1ad0-a8d8-3bc2-9ed1-6727aba5989f": {
      "content": "for ${1:i} in ${2} ${3:to} ${4} loop\n\t${5}\nend loop;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "921dd66d-ed10-30c3-af35-3e66e2b936dc": {
      "content": "margin: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      }
    },
    "922a66a3-b405-34b3-90db-c7b60c3f4071": {
      "content": "let ${1:name}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "let statement",
      "matches": {
        "l": true
      }
    },
    "922b9b91-c3fc-3684-af7f-0528e7c4de25": {
      "content": "background-clip content-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      }
    },
    "922f8c9a-c836-31b0-8735-e94ba39b2f7f": {
      "content": "#ifdef ${1:DEBUG}\n$0\n#endif /* $1 */",
      "doc": "Code snippet for #ifdef",
      "filetype": "c",
      "grammar": "lsp",
      "label": "#ifdef",
      "matches": {
        "#ifdef": true
      }
    },
    "9232511d-0cb2-31ae-af18-120ffa411428": {
      "content": "font-style: ${1|italic,oblique,normal|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-style",
      "matches": {
        "fst": true
      }
    },
    "923696b9-20f4-304a-88ea-e2d89a74c9c9": {
      "content": "align-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      }
    },
    "923862e9-ff13-3aee-8bd9-6b20cbbb384c": {
      "content": "it { should be_valid }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbv": true
      }
    },
    "923a14bd-7a38-30e9-ae21-fc0db2619e11": {
      "content": "${1:FIELDNAME} = models.FilePathField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FilePathField",
      "matches": {
        "mfilepath": true
      }
    },
    "923fe610-3f11-3171-8b2b-33e1206da693": {
      "content": "always_ff @(posedge ${1:clk}) begin ${2:: statement_label}\n\t${0}\nend $2",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alff": true
      }
    },
    "92443aef-6685-3cbf-b6de-1e2334ee27f2": {
      "content": "{\n\t\"type\": \"checkbox\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": ${3:true},\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_checkbox": true
      }
    },
    "92446290-c0d8-3517-aeba-3ef1b046f2ca": {
      "content": "RemoteIPHeader X-Forwarded-For",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "RemoteIPHeader": true
      }
    },
    "92461708-4a47-3602-9636-f4d6f7b76c6c": {
      "content": "<xsl:attribute name=\"${1:name}\">${2}</xsl:attribute>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "blank",
      "matches": {
        "attribute": true
      }
    },
    "92506b7a-fa56-3146-9904-d86f35d2c1e9": {
      "content": "lambda { |${1:args}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lam": true
      }
    },
    "92514567-c885-3ec0-a07f-8eed92433213": {
      "content": "CREATE TABLE IF NOT EXISTS ${1:tableName} (\n\t${2:attribute(s)}\n);",
      "doc": "Create table with conditional",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "createti",
      "matches": {
        "createti": true
      }
    },
    "9254aedf-2067-309f-b398-ecf66df64b14": {
      "content": "@genType.import(\"${1:./MyMath}\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "@genType import",
      "matches": {
        "gti": true
      }
    },
    "925809b5-7d3e-3630-9591-2f1fd43004c8": {
      "content": "import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithPureComponentAndPropTypes",
      "matches": {
        "imrpcp": true
      }
    },
    "92587912-5ac1-3b62-b342-5f4e749146c0": {
      "content": "beforeUpdate () {\n\t${0};\n},",
      "doc": "beforeUpdate lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeUpdate",
      "matches": {
        "vbeforeupdate": true
      }
    },
    "925c5d1c-0709-3929-bc21-a3e53b4c658c": {
      "content": "vertical-align text-top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      }
    },
    "926d0afe-f860-3809-9c6f-67576c42a076": {
      "content": "static getDerivedStateFromProps(nextProps, prevState) {\n\t$0\n}",
      "doc": "Invoked after a component is instantiated as well as when it receives new props. It should return an object to update state, or null to indicate that the new props do not require any state updates.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentGetDerivedStateFromProps",
      "matches": {
        "cgd": true
      }
    },
    "927080cf-013e-3ae3-804e-c70becde41b6": {
      "content": "<form (ngSubmit)=\"onSubmit()\" #${1:form}=\"ngForm\">\n</form>",
      "doc": "Form with ngSubmit and form attributes",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngform",
      "matches": {
        "a-form": true,
        "angular ng form": true
      }
    },
    "927372f5-8c49-39f0-b980-7da185ce84f7": {
      "content": "| ${1} => ${0}",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      }
    },
    "92752804-b422-3c18-b662-d6b429d87902": {
      "content": "public",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pub": true
      }
    },
    "9275db0a-7bf8-3486-b4ba-edd979e17861": {
      "content": "position absolute",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      }
    },
    "92793c03-62d8-36da-ba42-8db06c5cb760": {
      "content": "{% ifnotequal ${1} ${2} %}\n\t${0}\n{% endifnotequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      }
    },
    "927a7037-c3fa-331f-93f0-af58abe0f7d7": {
      "content": "-moz-box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      }
    },
    "927ad8c4-abb4-35ca-8f3f-c138d323c9e4": {
      "content": "_.isArguments(${value})",
      "doc": "_.isArguments(function() { return arguments; }());\n// => true\n\n_.isArguments([1, 2, 3]);\n// => false\n\nChecks if `value` is likely an `arguments` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarguments",
      "matches": {
        "lodash isarguments": true
      }
    },
    "9286a06f-aed3-36e5-8259-4f50ed0cd675": {
      "content": "PropTypes.objectOf($0)",
      "doc": "An object with property values of a certain type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeObjectOf",
      "matches": {
        "ptoo": true
      }
    },
    "92937a7c-dd79-35ec-bedf-b73bdd8abe21": {
      "content": "async function (${1:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "async function",
      "matches": {
        "asf": true
      }
    },
    "929670e9-7d25-3ab3-804b-3f3737544ccb": {
      "content": "flexGrow: '${1}',",
      "doc": "flexGrow",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flexGrow",
      "matches": {
        "flex": true
      }
    },
    "929e5886-b0e6-399a-b3d5-e513e222e22e": {
      "content": "<a href=\"${1}\" target=\"_parent\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref_parent": true
      }
    },
    "92a6a11a-acd2-3a5f-bbd7-a0e34446d666": {
      "content": "justify-content left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      }
    },
    "92a7c0c4-4a77-344a-80c6-a8dce6a7eff1": {
      "content": "- [${1| ,x|}] ${2:text}\n- [${3| ,x|}] ${4:text}\n- [${5| ,x|}] ${6:text}\n- [${7| ,x|}] ${8:text}\n- [${9| ,x|}] ${10:text}\n${0}",
      "doc": "Insert task list with 5 tasks",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert task list 5",
      "matches": {
        "task5": true
      }
    },
    "92aba80a-1c4d-3ef4-bb26-770e0dd38c74": {
      "content": "v-html='${1:html}'",
      "doc": "Expects: string",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-html",
      "matches": {
        "vHtml": true
      }
    },
    "92b425fd-bfd2-3178-a682-5456efe408a9": {
      "content": "${1:obj}.toggleClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togclass": true
      }
    },
    "92c41b6f-ea6b-3a83-87af-94c7a8340387": {
      "content": "<nuxt-child $1/>$0",
      "doc": "This component is used for displaying the children components in a nested route.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "nuxtChild",
      "matches": {
        "nuxtChild": true
      }
    },
    "92c5c424-0f3e-329f-b79e-6697add44d24": {
      "content": "paddingLeft: ${1},",
      "doc": "paddingLeft",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingLeft",
      "matches": {
        "padding": true
      }
    },
    "92c87cf5-639a-371b-b623-51c323bc056f": {
      "content": "const [${0}] = await Promise.all(${1:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "await Promise.all with destructuring",
      "matches": {
        "apad": true
      }
    },
    "92d0b0e3-1854-35e2-9246-66e4d49c701e": {
      "content": "\\begin{eqnarray}\n\t${1:${VISUAL}} & ${2:${VISUAL}} & ${0:${VISUAL}}\n\\end{eqnarray}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation array",
      "matches": {
        "eqa": true
      }
    },
    "92d6ccbf-52ee-382e-adf4-16a40ce8dc3d": {
      "content": "noise(${1:x}${2:, }${3:y}${4:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noise": true
      }
    },
    "92e239c4-5b08-3e24-86dd-f557a744b867": {
      "content": "word-wrap: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      }
    },
    "92e29396-eb82-3121-9e64-75ec047948b1": {
      "content": "Vue.extend({\n\ttemplate:${1:template}\n})",
      "doc": "Vue.extend( options )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "extend",
      "matches": {
        "vueExtend": true
      }
    },
    "92e3a7de-453b-3ad8-b0d7-1f03e628f9cf": {
      "content": "static getDerivedStateFromProps(nextProps, prevState) {\n\t$0\n}",
      "doc": "Invoked after a component is instantiated as well as when it receives new props.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "getDerivedStateFromProps",
      "matches": {
        "gdsfp": true
      }
    },
    "92e6a5bf-70f4-37e0-bb4e-ee6508a2adc3": {
      "content": "${1:obj}.die(${2:event}, ${3:handler})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "die": true
      }
    },
    "92eaa53f-f2ae-33cb-b60d-b52d0cc9a21d": {
      "content": "| downcase }}",
      "doc": "String filter: downcase",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter downcase",
      "matches": {
        "downcase": true
      }
    },
    "92f53c0c-6c5e-3e31-a2b2-c4524df75d72": {
      "content": "$this->${1:method}()->shouldEqual(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldEqual('value')",
      "matches": {
        "sequal": true
      }
    },
    "92f8a969-c6ea-3a81-bca3-b1c0ef4f2797": {
      "content": "<component :is=\"${1:componentId}\"></component>$0",
      "doc": "component element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "component",
      "matches": {
        "component": true
      }
    },
    "92ffa8b6-4760-3dee-85fc-231f955cf1a6": {
      "content": "Result<${1:&str}, ${2:()}>",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Result<T, E>",
      "matches": {
        "res": true
      }
    },
    "930940d3-5667-35ce-95a9-7cc1af074dce": {
      "content": "border-left-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls:n": true
      }
    },
    "9312db05-1946-3a9c-a837-b2eccff23dd4": {
      "content": "${1:value} |> ${2:function}",
      "doc": "Code snippet for pipe expression.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "pipe",
      "matches": {
        "pipe": true,
        "pp": true
      }
    },
    "9318d21b-040a-3174-8da9-eb20c750dcc6": {
      "content": "top auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      }
    },
    "9320ee1a-3cc3-3c01-b1b6-4ce68033cd3b": {
      "content": "/**\n * $1\n */\ntrait ${2:TraitName}\n{\n\t$0\n}",
      "doc": "Trait",
      "filetype": "php",
      "grammar": "lsp",
      "label": "trait …",
      "matches": {
        "trait": true
      }
    },
    "932ee089-a99b-3cf4-b0f6-098dddaea6be": {
      "content": "describe.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\ttest(`returns \\${expected}`, () => {\n\t\t\t${4:expect(double(input)).toBe(expected);}\n\t\t});\n\t}\n);",
      "doc": "creates a describe block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe-each",
      "matches": {
        "desce": true,
        "jest describe each": true
      }
    },
    "93303d4a-bcdb-3e22-b19c-aa971c6bff09": {
      "content": "display \"$0\"",
      "doc": "display literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "display",
      "matches": {
        "display": true
      }
    },
    "93321e4d-2bf7-3e2d-9e65-49f0c0c528d6": {
      "content": "inquire(file=${1:filename}, opened=${2:ioopen}, exists=${3:ioexist}, number=${4:iounit})",
      "doc": "Inquire (by Filename)",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "inq",
      "matches": {
        "inq": true
      }
    },
    "933634a3-bd04-3f4c-a842-1772d76873e9": {
      "content": "dockerfile {\n\tfilename '${1:Dockerfile.build}'\n\tdir '${2:build}'\n\tlabel '${3:my-defined-label}'\n\tregistryUrl '${4:https://myregistry.com/}'\n\tregistryCredentialsId '${5:myPredefinedCredentialsInJenkins}'\n}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      }
    },
    "933bc5ea-16f0-33ae-82b8-4781c013a015": {
      "content": "must_be_within_delta ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbwd": true
      }
    },
    "933cfb99-f8c9-379f-be8a-7247415fdcd5": {
      "content": "with ${1:open}(${2:#:filename, mode}) as ${3:f}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "with {func}({file}) as :",
      "matches": {
        "with": true
      }
    },
    "933f6d15-484d-34d3-a3b5-d56d42e54731": {
      "content": "union ${1:MyUnion} {\n\t$0\n};",
      "doc": "Code snippet for union",
      "filetype": "c",
      "grammar": "lsp",
      "label": "union",
      "matches": {
        "union": true
      }
    },
    "93414deb-1902-3838-a751-4e9da477d602": {
      "content": "${1:obj}.parents('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parents": true
      }
    },
    "93482c9a-aa44-3908-9fff-b461fbd96c92": {
      "content": "-ms-filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ms": true
      }
    },
    "9348d798-ea0a-3b3f-bbc3-484c80f6f2e8": {
      "content": "@leave='$1'$0",
      "doc": "@leave=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "leave",
      "matches": {
        "leaveEvent": true
      }
    },
    "9349420d-99f5-3011-8ab1-64a7a9fc86f1": {
      "content": "inheritAttrs",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "inheritAttrs",
      "matches": {
        "inheritAttrs": true
      }
    },
    "9350bf6d-2cce-3f12-be5c-8ea07791b562": {
      "content": "if ($1) {\n\t${2:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "93585f0a-a0c9-30bb-a1b8-35f238c43644": {
      "content": "#[derive(${1})]",
      "doc": "#[derive(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "derive",
      "matches": {
        "derive": true
      }
    },
    "935923e3-add4-367f-adbc-d46491c8ca82": {
      "content": "$this->${1:method}()->shouldNotEqual(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotEqual('value')",
      "matches": {
        "snequal": true
      }
    },
    "935a376a-4c6d-3cdb-ad5a-39cf7544665b": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "935d8647-25b9-32c1-b06b-cbad101012bf": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "935e896c-7194-3c91-9326-ee3b06ad65a6": {
      "content": "def ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "9360210d-8112-3db1-92e5-eb821237bc0d": {
      "content": "\\begin{eqnarray*}\n\t${1:TARGET}\n\\end{eqnarray*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{eqnarray*} \\eqnarray*": true,
        "eqnarray*": true
      }
    },
    "93620f8a-66e8-3ea2-ba26-aa03779226a7": {
      "content": "copy \"${1:subprog.cpy}\"\n    replacing ==${2:()}== by ==${3:lnk-}==.",
      "doc": "Copy replacing",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "copy",
      "matches": {
        "copy": true
      }
    },
    "93632b04-5062-3b40-a526-0f5921d504a9": {
      "content": "${1|this,vm|}.\\$watch(${2:expOrFn}, ${3:callback}${4:, [options]})",
      "doc": "vm.$watch( expOrFn, callback, [options] )\n Arguments:\n {string | Function} expOrFn\n {Function | Object} callback\n {Object} [options]\n {boolean} [options.deep]\n\t {boolean} [options.immediate]",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$watch",
      "matches": {
        "vmWatch": true
      }
    },
    "9365a379-8d07-3710-9335-3dc6c10f3966": {
      "content": "font-effect: emboss;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      }
    },
    "936cf048-018d-3635-a2d6-38dc37c29461": {
      "content": "set ${1:property}(${2:value}) {\n\t${0}\n}",
      "doc": "setter (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setter-es6-syntax-",
      "matches": {
        "base setter": true
      }
    },
    "937298f6-6f90-3d35-9221-eb0c5adba331": {
      "content": "var ${1:t} ${0:string}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "variable initialization",
      "matches": {
        "vr": true
      }
    },
    "937364b0-18f1-351b-ba4b-55eb51494c18": {
      "content": "t.rename(:${1:old_column_name}, :${2:new_column_name})\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.rename (tre)",
      "matches": {
        "t.": true
      }
    },
    "9373fb41-3c78-3a9a-bf05-77e869aff8dc": {
      "content": "border-style: dotted;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dt": true
      }
    },
    "93799565-6c49-31e1-aaff-7cd2113a4a46": {
      "content": "clear: ${1:left/right/both/none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "clear: value (clear)",
      "matches": {
        "clear": true
      }
    },
    "9379a89c-c21c-36c4-9817-aba12b1a43e0": {
      "content": "beforeEach(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "before each (js)",
      "matches": {
        "bef": true
      }
    },
    "9379d54f-ae86-3dcd-864a-54a41cc3d561": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun1": true
      }
    },
    "937bdb9f-f666-38fb-ae0e-2aa26b0167c8": {
      "content": "<table>\n\t$1\n</table>",
      "doc": "HTML - Defines a table",
      "filetype": "html",
      "grammar": "lsp",
      "label": "table",
      "matches": {
        "table": true
      }
    },
    "937d1bd2-4366-373b-b98f-49bf51e6cd6b": {
      "content": "shouldComponentUpdate (nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked before rendering when new props or state are being received.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      }
    },
    "937fa56e-f7a7-3644-a95c-ead589e4b105": {
      "content": "type ${1:Msg}\n\t= ${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "938b5e51-f229-3b07-a753-1db4fc2aa288": {
      "content": "<code>${1}</code>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<c": true
      }
    },
    "938bb647-27f5-3557-a81e-f697ce37ce3d": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "else statement",
      "matches": {
        "el": true
      }
    },
    "939607d2-394c-3f3e-ae1a-4615da75fc46": {
      "content": "${1:controls}.start({ ${2:opacity: 1} })",
      "doc": "AnimationControls with a start and stop method",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animation-controls",
      "matches": {
        "controls": true,
        "framer-motion controls": true
      }
    },
    "939ff025-0968-3ebb-a742-2ce5692f8a9d": {
      "content": "console.table(${1:\"${2:value}\"});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.table",
      "matches": {
        "ctable": true
      }
    },
    "93a397ef-1feb-3caf-beb3-284b45226450": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\nclass ${1:ClassName_model} extends CI_Model\n{\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${2:// code...}\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_model": true
      }
    },
    "93ae1f0f-7f34-3c49-9efb-06868212d6cc": {
      "content": "div(ng-show='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      }
    },
    "93b7d2d2-32dc-3f9f-b26c-02aaa1fcc620": {
      "content": "if ${1:condition}\n   $0\nend-if",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "ie": true,
        "if": true
      }
    },
    "93b882d5-20fa-319a-ad07-13c1d538ec23": {
      "content": "plugins",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "plugins",
      "matches": {
        "plugins": true
      }
    },
    "93bf329f-6aac-325a-b3a2-9d97f5ac1252": {
      "content": "match ${1:TARGET} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "93c24ad7-1d77-3320-8fca-c78759482693": {
      "content": "align-items: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items: flex-end",
      "matches": {
        "aife": true
      }
    },
    "93c2ebc2-83ec-3ba1-8604-7950eb50aafd": {
      "content": "outline-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      }
    },
    "93c7e7db-54ec-3fda-9d58-81969cf12424": {
      "content": "while ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "93ceeba0-4990-3e6e-a0f0-45cfaa1117d8": {
      "content": "![${1:id}]: ${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:\"": true
      }
    },
    "93e106da-179d-349c-843f-bb877f233637": {
      "content": "${1|this,vm|}.\\$refs$2",
      "doc": "Type: Object. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$refs",
      "matches": {
        "vmRefs": true
      }
    },
    "93e178ea-e778-3bf3-a2a0-07574d3c1b91": {
      "content": "class ${0:ModelName}Inline(admin.StackedInline):\n\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stackedinline": true
      }
    },
    "93e29b73-9623-39f3-9930-39f6ee83a4a1": {
      "content": "validates :${0:terms}, acceptance: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates .., acceptance: true",
      "matches": {
        "va": true
      }
    },
    "93e40bbe-7edf-327e-a23a-86138b37b580": {
      "content": "box-shadow: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      }
    },
    "93e5d90c-5820-3563-bd7e-7f5a4140f37b": {
      "content": "{\n\t\"type\": \"textarea\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_textarea": true
      }
    },
    "93e65148-1656-3369-a807-2075bb0661ae": {
      "content": "NSDictionary ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsd": true
      }
    },
    "93e9474c-3ca8-3f8b-8694-47f5e01604e3": {
      "content": "render file: \"${1:filepath}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (file) (rf)",
      "matches": {
        "rf": true
      }
    },
    "93ec2369-5eaa-34ef-9952-6534a0400bcb": {
      "content": "# Cookbook File resource\ncookbook_file ${1:\"/path/to/file\"} do # The remote path where the file will reside\n\t${2:#}backup ${3} # How many backups of this file to keep. Set to false  if you want no backups\n\t${4:#}group ${5} # The group owner of the file (string or id)\n\t${6:#}mode ${7} # The octal mode of the file - e.g. 0755\n\t${8:#}owner ${9} # The owner for the file\n\t${10:#}source ${11} # The basename of the source file\n\t${12:#}cookbook ${13} # The cookbook this file is stored in\n\n\t${14:#}${15: action :create} # Create this file (Default)\n\t${16:#}${17: action :create_if_missing} # Create only if it doesn't exist yet\n\t${18:#}${0: action :delete} # Delete this file\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cookbook_file": true
      }
    },
    "93ef82a9-a94e-3967-89ac-5945b71a9f4e": {
      "content": "_.ary(${func}, ${n})",
      "doc": "_.map(['6', '8', '10'], _.ary(parseInt, 1));\n// => [6, 8, 10]\n\nCreates a function that invokes `func`, with up to `n` arguments,\nignoring any additional arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-ary",
      "matches": {
        "lodash ary": true
      }
    },
    "93efb540-897e-3fd2-b871-29aac7bf9d33": {
      "content": "matrix(${1:data}, nrow = ${2:rows}, ncol = ${3:cols})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "matrix",
      "matches": {
        "mat": true
      }
    },
    "93efc73c-bb8b-3e95-917b-a5311b4baf1e": {
      "content": "<input type=\"checkbox\" name=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputcheckbox": true
      }
    },
    "94016bce-bc5b-3226-a187-c72dcf992d8a": {
      "content": "import { mapMutations } from 'vuex';\n\nexport default {\n\tmethods: {\n\t\t...mapMutations([\n\t\t\t${1:'nameOfMutation'}, //also supports payload `this.nameOfMutation(amount)` \n\t\t])\n\t},\n};",
      "doc": "mapmutations inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapMutations",
      "matches": {
        "vmapmutations": true
      }
    },
    "940a5752-fab6-37f5-8020-19d32c950075": {
      "content": "if ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "if ...: ...",
      "matches": {
        "if": true
      }
    },
    "9410dd9e-4efd-39f0-b02c-7c0f542ec3df": {
      "content": "deinit {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deinit": true
      }
    },
    "941c773b-97d1-3bd1-943f-6b8039c11389": {
      "content": "redirect_to(${2:${12:model}_path(${13:@}${14:$12})})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (path)",
      "matches": {
        "rep": true
      }
    },
    "941ce441-949e-350e-9f20-f9636fb3a1e1": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      }
    },
    "941f639c-1820-3109-8821-7cb69ebf7913": {
      "content": "require('$1')",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "Require",
      "matches": {
        "req": true
      }
    },
    "9420d890-52d4-3bd5-92f0-d6bbb1c7cd48": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-enum",
      "matches": {
        "prop-types enum": true,
        "pte": true
      }
    },
    "9423d511-55d4-37c8-abba-1b2fecd16c00": {
      "content": "content: counter(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      }
    },
    "94316c2e-5337-3965-901f-11ac2f66fd75": {
      "content": "<colgroup>\n\t<col>\n\tcol+${0}\n</colgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colgroup+": true
      }
    },
    "9435a070-b569-3ca3-a596-d99048cc5a3d": {
      "content": "| money_without_currency",
      "doc": "Money filter: money without currency",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter money without currency",
      "matches": {
        "money_without_currency": true
      }
    },
    "9439c585-6210-3290-93c1-b28b018ec576": {
      "content": "get {${1:TARGET}}${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "get {}",
      "matches": {
        "get": true
      }
    },
    "943d5f50-1943-395c-88fa-fa3b9fc8196e": {
      "content": "BEGINFILE {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "BEGINFILE { ... }",
      "matches": {
        "begf": true
      }
    },
    "9443e3d1-3b3f-319e-b870-cad480dc6470": {
      "content": "{ rel: 'stylesheet', href: '${1:https://fonts.googleapis.com/css?family=Montserrat:600|Rufina:700}' }",
      "doc": "link to include fonts in a nuxt project, in nuxt-config",
      "filetype": "nuxt-config",
      "grammar": "lsp",
      "label": "Nuxt Font",
      "matches": {
        "nfont": true
      }
    },
    "9445a067-c3c2-30e6-a444-92278a3b0971": {
      "content": "<abbr title=\"$1\">$2</abbr>$3",
      "doc": "HTML - Defines an abbreviation",
      "filetype": "html",
      "grammar": "lsp",
      "label": "abbr",
      "matches": {
        "abbr": true
      }
    },
    "9449aabf-dbd5-3b15-bdb4-4a92302aacb6": {
      "content": "DATA DIVISION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "DATA DIVISION",
      "matches": {
        "DATA DIVISION": true,
        "DD": true
      }
    },
    "944d1973-536c-31e6-b6b7-0b7e7bf59ac2": {
      "content": "exp(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "944d9e61-b8f5-33dd-ab43-b951171dad53": {
      "content": "@behaviour ${1:Mix.Task}\n${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beh": true
      }
    },
    "94691dd1-764e-38dc-87b2-dbc59d700e6b": {
      "content": "if [[ $${1:string} =~ ${2:^regexp.*} ]]; then\n\t${0}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "=~",
      "matches": {
        "match-regexp": true
      }
    },
    "946c394b-f671-3a7e-a9eb-729a96659c3f": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-tag",
      "matches": {
        "svelte script": true,
        "svscript": true
      }
    },
    "946cc540-19ac-34cb-8b9b-6d7af80473b7": {
      "content": "-moz-box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      }
    },
    "9475fc4f-d856-319a-8a08-632455c39829": {
      "content": "$_FILES['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "F": true
      }
    },
    "94777ae0-47a3-3d88-8d43-f401d7915646": {
      "content": "length_is:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      }
    },
    "9477893b-330c-3c2d-85d1-cb49a2691093": {
      "content": "List<${1:Object}> ${2:list} = new ArrayList<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.al": true
      }
    },
    "9479ed10-ca76-3bd1-adab-f28faf6bc6b7": {
      "content": "each_index do |${1:i}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eaid": true
      }
    },
    "947bfe58-8fad-3289-aa5c-ba1ab4438762": {
      "content": "max-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      }
    },
    "94845110-1c77-3669-96c2-e3f864612bf1": {
      "content": "${1:map}.resources :${0:resource}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maprs": true
      }
    },
    "9488de48-e058-3805-b73e-c7b347c8d121": {
      "content": "vec3($2, $3, $4)",
      "doc": "The data type vec3 is used for floating point vectors with three components. There are several ways to initialize a vector:\n• Components are specified by providing a scalar value for each component (first example).\n• Components are specified by providing one scalar value. This value is used for all components (the second example is equivalent to the first).\nComponents are specified by providing a vector of higher dimension. The respective values are used to initialize the components (the second and third example are equivalent).• Components are specified by providing a combination of vectors and/or scalars. The respective values are used to initialize the vector (the fifth and sixth example are equivalent). The arguments of the constructor must have at least as many components as the vector that is initialized.\n\nSide note: The vector constructors can be used to cast between different vector types since type conversions are done automatically for each component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "vec3",
      "matches": {
        "vec3": true
      }
    },
    "9490c625-061d-3585-9cfd-40d94e24cd63": {
      "content": "form_hidden(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_hidden": true
      }
    },
    "94996405-33cd-377b-bf26-736a8a4f0f70": {
      "content": "t.rename :${1:old_column_name}, :${2:new_column_name}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tre": true
      }
    },
    "949992e5-b52f-3c6b-930d-010a85c97aa3": {
      "content": "const { ${1:scrollYProgress} } = useElementScroll(${2:ref})",
      "doc": "useElementScroll(ref): Returns MotionValues that update when the provided element scrolls.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-element-scroll",
      "matches": {
        "framer-motion use-element-scroll": true,
        "use-element-scroll": true
      }
    },
    "949e2cde-d5b9-315b-993a-829eb4342c9e": {
      "content": "@doc \"\"\"\n${0}\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "94a87a8d-6879-3674-84d9-85f311ce6b75": {
      "content": "import ReactDOM from 'react-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactDom",
      "matches": {
        "imrd": true
      }
    },
    "94b174e3-2ec1-38e1-ad76-f4e1f744ad72": {
      "content": "<pre>\n\t{{ dump(${1}) }}\n</pre>",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig dump",
      "matches": {
        "dump": true
      }
    },
    "94b404ce-854a-3032-9824-80c70137e9a9": {
      "content": "| slice: ${1:at}",
      "doc": "String filter: slice with single parameter",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter slice single character",
      "matches": {
        "slice_single": true
      }
    },
    "94b5260d-fda7-30cf-b448-66ea316e53ac": {
      "content": "list-style-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      }
    },
    "94bd7782-2138-322b-9a96-eb4c4ca00ea9": {
      "content": "refactor(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "refactor conventional commit",
      "matches": {
        "refactor": true
      }
    },
    "94c10bb3-7aa5-35cd-acb6-93e3d37ebfdc": {
      "content": "System.err.println($0);",
      "doc": "Print to standard err",
      "filetype": "java",
      "grammar": "lsp",
      "label": "syserr",
      "matches": {
        "syserr": true
      }
    },
    "94c6fae4-7158-31fb-a554-a475a3d7235a": {
      "content": "{% sandbox %}\n\t${0:TARGET}\n{% endsandbox %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% sandbox %} ... {% endsandbox %}",
      "matches": {
        "sandbox": true
      }
    },
    "94d29136-4a88-3418-8f39-a6e0cb2bc372": {
      "content": "<legend><span>${0}</span></legend>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "legend+": true
      }
    },
    "94d39ac2-a147-376d-9323-4f6c9dd1553e": {
      "content": "modifier ${1:name}($2) {\n\t$0_\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "modifier declaration",
      "matches": {
        "mod": true
      }
    },
    "94d7c01b-fb0f-3c42-b4c3-2748e8e855cd": {
      "content": "\\${0:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:default}",
      "matches": {
        "0:": true
      }
    },
    "94dcbbad-ba31-3f3d-93f8-5b267012048a": {
      "content": "Console.Write(${1:#:message});${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true,
        "write": true
      }
    },
    "94dd7128-712c-3356-9c15-9a68800c0038": {
      "content": "console.log('${1:first}', JSON.stringify(${1:first}, null, 2))",
      "doc": "Logs stringified JSON property with name.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleLogJson",
      "matches": {
        "clj": true
      }
    },
    "94ecd543-2324-3572-97c2-56b53199113b": {
      "content": "program-id. MFUT_${1:${TM_FILENAME_BASE/MFUT[_](.*)/$1/}}.\n       working-storage section.\n       copy \"mfunit.cpy\".\n\n       01 test-fail-count     binary-long value 0.\n\n       *> Testcase     : $1\n       *>  Description : $2\n       procedure division.\n           $0\n           if 1 not equal 1\n               display \"Odd... 1 not equal 1?\"\n               add 1 to test-fail-count\n           end-if\n\n           if test-fail-count not equal 0\n               call \"MFU_ASSERT_FAIL_Z\" using\n                    by reference z\"$1 has failed\"\n               end-call\n           end-if\n\n           goback returning test-fail-count.\n\n       *> Startup for testcase $1\n       entry \"MFUS_$1\".\n           *> Open any files\n           goback.\n\n       *> Teardown for testcase $1\n       entry \"MFUE_$1\".\n           *> Close any files/delete any temp files\n           goback.\n\n       *> Metadata for testcase $1\n       entry \"MFUM_$1\".\n           move \"$2\" to MFU-MD-TESTCASE-DESCRIPTION\n           goback.\n       end program.",
      "doc": "MFUNIT skelton program",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "MFUnit Test",
      "matches": {
        "mfu,program-id": true
      }
    },
    "94ef6b18-803e-396f-aad5-91a5093bd0bc": {
      "content": "font-smooth: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      }
    },
    "94f250fe-51f6-31f3-9e39-ce04ade46066": {
      "content": "def ${1:#:name}(${2}):\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def function(...): ...",
      "matches": {
        "def": true
      }
    },
    "94f6a405-a133-3c9a-a48a-efccb15a5415": {
      "content": "-webkit-box-shadow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      }
    },
    "94f81751-f5ec-349a-9de4-5854da844885": {
      "content": "public ${1:String} get${2:Name}() {\nreturn $2;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "94f97562-b61f-30ba-ba6c-94bb793b38cf": {
      "content": "set(${1:var} ${0:val})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "94fd12dc-6aad-375c-8d84-517bc02f9447": {
      "content": "overflow-y: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:s": true
      }
    },
    "951703cf-8e4c-34c0-ac3b-7c1b70f8f97f": {
      "content": "text-height: font-size",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      }
    },
    "951721f7-0c19-3243-8851-39758f273a6a": {
      "content": "use Test::More;\nuse Test::Deep; # (); # uncomment to stop prototype errors\nuse Test::Exception;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tuse": true
      }
    },
    "95175f19-23c3-315e-abe5-1e790b6b9ec8": {
      "content": "#[${1:inline}]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "#[..]",
      "matches": {
        "attr": true
      }
    },
    "951a1d62-2f86-3a93-ab42-04eb9b891dca": {
      "content": "margin-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      }
    },
    "951b93da-e6b9-33d2-8dea-d7188bf693b1": {
      "content": "for ${1} of ${2} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for each",
      "matches": {
        "fore": true
      }
    },
    "9520a0c9-a0c0-316f-9e0a-3d30aa2f21e9": {
      "content": "*${1}*${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "*text*",
      "matches": {
        "bold": true
      }
    },
    "952a0a63-9e38-3b8c-a864-3023789adfc8": {
      "content": "console.timeStamp(\"${1:label}\");",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.timeStamp",
      "matches": {
        "ctimestamp": true
      }
    },
    "953b68c0-eab5-39b4-b3e2-fec3855eb2d8": {
      "content": "const ${1:memoizedCallback} = useMemo(() => ${2}(${3}), [$3]);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useMemo",
      "matches": {
        "usem": true
      }
    },
    "95409576-afe6-39fc-b56a-5f7cb831c5f5": {
      "content": "border-left: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-left",
      "matches": {
        "borl": true
      }
    },
    "95460488-8b8c-3523-844e-2a31218ac01d": {
      "content": "for ${1:name} from ${2:start} to ${3:finish}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "95474c71-8137-3d69-98b2-cab1b7df4c9d": {
      "content": "visibility: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "visibility: visible",
      "matches": {
        "visv": true
      }
    },
    "9547700e-ff2c-306d-8f4f-80a4dd702576": {
      "content": "discard;",
      "doc": "The keyword discard is used to define an exceptionally exit for a fragment shader. It is used exit the fragment shader immediately and to signal the OpenGL ES 2.0 pipeline that the respective fragment should not be drawn.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "discard",
      "matches": {
        "discard": true
      }
    },
    "954aff55-f9e6-3105-b21a-cb22258ead2c": {
      "content": "steps {\n\tsh '${1:make check}'\n\tjunit '${2:reports/**/*.xml}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "steps": true
      }
    },
    "954b12f2-cc3c-3013-98da-50d29a601066": {
      "content": "${1:obj}.insertBefore('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insb": true
      }
    },
    "9568c62c-cc82-3c71-b870-f3c19bd092db": {
      "content": "[${1:#:link}][${2:id}]${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link][id]",
      "matches": {
        "linkid": true
      }
    },
    "9572885a-52bf-3f8c-9355-2bd5a1116d43": {
      "content": "if __name__ == \"__main__\":\n\t${1:main()}$0",
      "doc": "Create implicitly all the code at the top level using the __name__ special variable.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if __name__ == \"__main__\"",
      "matches": {
        "ifmain": true
      }
    },
    "957817e0-3a03-3658-9bea-df1654b8474b": {
      "content": "protected ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m|": true
      }
    },
    "957a11a8-8706-3a62-92a2-f0c7b613f6c6": {
      "content": "${1:obj}.detach('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detach": true
      }
    },
    "9582a449-a13f-30fe-86d1-43eb6c50bda6": {
      "content": "${1:root} = exports ? this",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "95872e30-68d7-3f42-8ef5-889e93171f1b": {
      "content": "const ${1:name}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const statement",
      "matches": {
        "c": true
      }
    },
    "958b2bb4-52f7-313d-9171-d374f6debdfc": {
      "content": "mode",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mode",
      "matches": {
        "mode": true
      }
    },
    "9599d80d-9731-346f-9f6b-2cebb78e4296": {
      "content": "{% for entry in craft.entries\n\t.section(\"${1:sectionName}\")\n\t.limit(${2:10})\n\t.all()\n%}\n\t<a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n{% endfor %}\n$0",
      "doc": "craft.entries",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "entries",
      "matches": {
        "entries": true
      }
    },
    "959ced4c-a873-3b72-a41d-0dd09ba868ae": {
      "content": "font-stretch normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      }
    },
    "959f11e5-6d12-38db-9adb-bd12ab86c780": {
      "content": "Require all granted",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      }
    },
    "95a022bc-731d-3382-9274-5a429beabfc5": {
      "content": "@include ${1:mixin}(${2});",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "95a719f4-ff19-3f5f-84b7-425903bfb5a8": {
      "content": "module ${1:ModuleName}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Module definition",
      "matches": {
        "module": true
      }
    },
    "95ad81ca-aedf-3d07-8abe-57d54343753b": {
      "content": "#ifdef GL_ES\nprecision mediump float;\n#endif",
      "doc": "A check defining if GLES is available",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "ifdef",
      "matches": {
        "ifdef": true
      }
    },
    "95afb3e0-5811-318e-97a5-ff563dc61e20": {
      "content": "margin: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      }
    },
    "95b1489f-db9d-361d-b99f-4f01022a7a04": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-number-required",
      "matches": {
        "prop-types number required": true,
        "ptnr": true
      }
    },
    "95b39fcb-fede-34a6-b274-485ac5769e19": {
      "content": "outline: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      }
    },
    "95b9e2d9-3bc0-3b66-ad18-4bad7bd05a8f": {
      "content": "export const state = () => ({\n\tvalue: 'myvalue'\n})\n\nexport const getters = {\n\tgetterValue: state => {\n\t\treturn state.value\n\t}\n}\n\nexport const mutations = {\n\tupdateValue: (state, payload) => {\n\t\tstate.value = payload\n\t}\n}\n\nexport const actions = {\n\tupdateActionValue({ commit }) {\n\t\tcommit('updateValue', payload)\n\t}\n}",
      "doc": "vuex store 2",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Store 2",
      "matches": {
        "vstore2": true
      }
    },
    "95bf96c6-4828-3a53-b2c8-7c348a17f8de": {
      "content": "export const ${1:first} = (payload) => ({\n  type: ${2:second},\n  payload\n})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reduxAction",
      "matches": {
        "rxaction": true
      }
    },
    "95c05b43-663d-3b6d-9b5c-ed1e1eddc5e5": {
      "content": "<%= gettext(\"${0:${VISUAL}}\") %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "gettext",
      "matches": {
        "gt": true
      }
    },
    "95c299f2-46e5-35d8-87f7-5f931adc3c88": {
      "content": "fill(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fill": true
      }
    },
    "95ccbf21-2ced-3ba9-8995-cf921b1e86b1": {
      "content": "class ${1} {\n\t${2}\n\tconstructor(public ${3}: ${4: any}) {\n\t\t${5}\n\t}\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts class",
      "matches": {
        "tcla": true
      }
    },
    "95d7ea75-acf5-39de-aa57-7a6a3121af86": {
      "content": "setup do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      }
    },
    "95dce129-e018-3213-8627-0c8d15faa1ec": {
      "content": "<!DOCTYPE html\nPUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doctypeframeset": true
      }
    },
    "95e0487e-0d9c-3fc8-8b27-d30b3590e61a": {
      "content": "${${0:0}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${..}",
      "matches": {
        "$": true
      }
    },
    "95e30bbb-ebd5-3e1b-88f3-6c486a78312a": {
      "content": "else static if(${1}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "seif": true
      }
    },
    "95e7f307-fa3f-3cc0-bf5d-f6b78cef5b4a": {
      "content": "def show\n\t@${1:model_class_name} = ${2:ModelClassName}.find(params[:id])\n\n\trespond_to do |format|\n\t\tformat.html # show.html.erb\n\t\tformat.json  { render json: @$1 }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defshow": true
      }
    },
    "95eb980f-8a1e-3202-86f7-d2b6c095c314": {
      "content": "<transition-group$1>\n$2\n</transition-group>",
      "doc": "transition-group element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "transition-group",
      "matches": {
        "transitionGroup": true
      }
    },
    "95ec8cdf-78b0-3aee-b148-1de0e83bd78c": {
      "content": "#![no_core]",
      "doc": "#![no_core]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "no_core",
      "matches": {
        "no_core": true
      }
    },
    "95f1e63c-a63d-3977-9deb-1fa00f6db0ce": {
      "content": "@override\nWidget build(BuildContext context) {\n  return ${0:};\n}",
      "doc": "Describes the part of the user interface represented by this widget.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Build Method",
      "matches": {
        "build": true
      }
    },
    "95f87f6b-9711-3b73-aa96-01190ebb2c05": {
      "content": "\\\\citen{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citen",
      "matches": {
        "citen": true
      }
    },
    "95fffd61-a328-32c2-865e-05b467d1d6ab": {
      "content": "($2 *)calloc(${1:N_MEMBERS}, sizeof(${2:TYPE}));\n${0}\nfree(${3:MEM});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "calloc(n, size)",
      "matches": {
        "calloc": true
      }
    },
    "9601ca05-73cb-3cb3-8b69-db371d8cf8df": {
      "content": "divisibleby:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      }
    },
    "96078904-5801-39d8-9ffb-0952e4149594": {
      "content": "{%- comment -%}${description:}{%- endcomment -%}",
      "doc": "Control flow tag: case",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag comment",
      "matches": {
        "comment": true
      }
    },
    "960b1013-452b-3fea-bdfe-d1603c9a873b": {
      "content": "StreamBuilder(\n  stream: ${1:stream},\n  initialData: ${2:initialData},\n  builder: (BuildContext context, AsyncSnapshot snapshot) {\n    return Container(\n      child: ${3:child},\n    );\n  },\n),",
      "doc": "Creates a new `StreamBuilder` that builds itself based on the latest snapshot of interaction with the specified `stream`",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Stream Builder",
      "matches": {
        "streamBldr": true
      }
    },
    "960e6e16-9be1-39cb-9842-eebee3ad3941": {
      "content": ",,${1},,${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": ",,sub,,",
      "matches": {
        "sub": true
      }
    },
    "9612116f-7b3e-3ccb-ab95-e65dd38c896b": {
      "content": "import ${2:*} from '${1:module}'",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "import module",
      "matches": {
        "im": true
      }
    },
    "9612a5c8-06a4-3165-9536-f27c322554ca": {
      "content": "erlang:display({${1}, ${0}}),",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      }
    },
    "96136314-273c-300c-9ac8-828afea43360": {
      "content": "<ins>$1</ins>$2",
      "doc": "HTML - Defines inserted text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ins",
      "matches": {
        "ins": true
      }
    },
    "9614921e-14bd-3866-bce7-1e189377e45d": {
      "content": "${1:obj}.not('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not": true
      }
    },
    "9617d809-5494-3d52-b4cb-619e0df2db09": {
      "content": "public void set${1:Name}(${2:String} ${3:name}) {\nthis.$3 = $3;\n}\npublic $2 get$1() {\nreturn $1;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setget": true
      }
    },
    "96184922-20c4-32ba-a4cd-9caa45f32457": {
      "content": "${1:source} instanceof ${2:Object}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "instanceof",
      "matches": {
        "iof": true
      }
    },
    "96190eaa-1616-3036-b224-36aee9c432c1": {
      "content": "t.decimal :${1:title}, precision: ${2:10}, scale: ${3:2}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcd": true
      }
    },
    "961dcf69-98ba-3d44-b757-814cbc1601e7": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "Snippet for a import block",
      "filetype": "go",
      "grammar": "lsp",
      "label": "multiple imports",
      "matches": {
        "ims": true
      }
    },
    "961ee037-0575-3700-8404-794a0f8483c6": {
      "content": "componentDidUpdate: (prevProps, prevState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentDidUpdate",
      "matches": {
        "componentDidUpdate": true
      }
    },
    "9626867a-8b23-3666-a066-8f852f1f305b": {
      "content": "@enter-cancelled=\"$1\"$0",
      "doc": "@enter-cancelled=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "enter-cancelled",
      "matches": {
        "enterCancelledEvent": true
      }
    },
    "962f1c39-7008-33b7-b75c-13026dc7e0a6": {
      "content": "<%= render partial: '${0:item}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      }
    },
    "963b5841-7ef7-3df6-8d5a-47d50f73a0f4": {
      "content": "<Directory ${1:/}>\n\tDirectoryIndex ${0:index.html}\n\tOrder Deny,Allow\n\tDeny from All\n</Directory>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dir": true
      }
    },
    "964bf38f-3867-32cf-8375-85a9f3b5b749": {
      "content": "padding: ${1},",
      "doc": "padding",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "padding",
      "matches": {
        "padding": true
      }
    },
    "964d49e7-7b74-3a32-975b-ad3d1da5050a": {
      "content": "outline: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o:n": true
      }
    },
    "9651b2cd-5677-38ab-aabb-3bacbbe6020c": {
      "content": "@font-face ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@f": true
      }
    },
    "965440f1-7d72-3677-a9a0-d62119276ab5": {
      "content": "Yii::app()->cache->get('${0:key}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ycag": true
      }
    },
    "965aca57-ff0c-37cf-a597-9327bd9899fa": {
      "content": "import processing.opengl.*;\nimport javax.media.opengl.*;\n\nPGraphicsOpenGL pgl;\nGL gl;\n\nvoid setup(){\n\tsize( ${1:300}, ${2:300}, OPENGL );\n\tcolorMode( RGB, 1.0 );\n\thint( ENABLE_OPENGL_4X_SMOOTH );\n\tpgl = (PGraphicsOpenGL) g;\n\tgl = pgl.gl;\n\tgl.setSwapInterval(1);\n\tinitGL();\n\t${3}\n}\n\nvoid draw(){\n\tpgl.beginGL();\n\t\t${4}\n\tpgl.endGL();\n\tgetOpenGLErrors();\n}\n\nvoid initGL(){\n\t${0}\n}\n\nvoid getOpenGLErrors(){\n\tint error = gl.glGetError();\n\tswitch (error){\n\t\tcase 1280 :\n\t\t\tprintln(\"GL_INVALID_ENUM - An invalid enumerant was passed to an OpenGL command.\");\n\t\tbreak;\n\t\tcase 1282 :\n\t\t\tprintln(\"GL_INVALID_OPERATION - An OpenGL command was issued that was invalid or inappropriate for the current state.\");\n\t\tbreak;\n\t\tcase 1281 :\n\t\t\tprintln(\"GL_INVALID_VALUE - A value was passed to OpenGL that was outside the allowed range.\");\n\t\tbreak;\n\t\tcase 1285 :\n\t\t\tprintln(\"GL_OUT_OF_MEMORY - OpenGL was unable to allocate enough memory to process a command.\");\n\t\tbreak;\n\t\tcase 1283 :\n\t\t\tprintln(\"GL_STACK_OVERFLOW - A command caused an OpenGL stack to overflow.\");\n\t\tbreak;\n\t\tcase 1284 :\n\t\t\tprintln(\"GL_STACK_UNDERFLOW - A command caused an OpenGL stack to underflow.\");\n\t\tbreak;\n\t\tcase 32817 :\n\t\t\tprintln(\"GL_TABLE_TOO_LARGE\");\n\t\tbreak;\n\t}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opengl": true
      }
    },
    "965df701-ba60-36f0-b783-3edb56c40617": {
      "content": "<< ${1:EOF}\n\t${0:#:TARGET}\n$1",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h <<": true,
        "heredoc": true
      }
    },
    "9663c54f-175a-3e55-9503-26f282c8797c": {
      "content": "useImperativeHandle(${1:ref}, ${2:createHandle});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useImperativeHandle",
      "matches": {
        "usei": true
      }
    },
    "9671e9e7-bf4b-3f45-a602-15a1f189d161": {
      "content": "{% csrf_token %}",
      "doc": "csrf token django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "csrf",
      "matches": {
        "csrf": true
      }
    },
    "96727f9f-1755-3cfd-bc66-f93af8fb93eb": {
      "content": "around_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mars": true
      }
    },
    "967c91b0-e8b2-3e35-8c72-44893429b7cb": {
      "content": "font-family ${0:Monaco,'Courier New'},monospace",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      }
    },
    "967e290f-f1ec-3e0c-b973-c7f8557f5e4f": {
      "content": "${1:name} <- function(${2:parameters}) {\n   ${3:selected}\n}",
      "doc": "Named function",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "function": true
      }
    },
    "967f21db-d209-30b1-a51c-38e4a15caa9d": {
      "content": "if err != nil {\n\tpanic(${1})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { panic(...) }",
      "matches": {
        "errp": true
      }
    },
    "96827793-bb82-327a-8c47-94c5c368bf2f": {
      "content": "<%= collection_select(:${1:object}, :${2:method}, ${3:collection}, :${4:value_method}, :${5:text_method}, options = {${0:prompt: true}}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      }
    },
    "96847b92-52e2-39ac-9a71-aecb2ec83f67": {
      "content": "|> Enum.each($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "pipe into each",
      "matches": {
        ">e": true
      }
    },
    "96857c2a-58af-317f-a655-293a871942c2": {
      "content": "Session::pull(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_pull": true
      }
    },
    "9688642d-4548-3510-8ece-46a5112d9789": {
      "content": "default_if_none:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defaultifnone": true
      }
    },
    "968afd39-0611-311c-8e28-0a94a5958b04": {
      "content": "it { should rescue_from ${0:exception} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrf": true
      }
    },
    "968fc756-9941-3e4f-b46d-7d77ecc80c39": {
      "content": "module Main where\n\n\nmain :: IO ()\nmain = do\n\t${1:undefined}$0\nreturn ()",
      "doc": "main module",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "969c9247-5c2f-318e-83a1-b6949e177d6c": {
      "content": "before_destroy :${0:method}",
      "doc": "before_destroy",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before destroy",
      "matches": {
        "bd": true
      }
    },
    "96a1160d-1563-320d-890b-9e6a7f405906": {
      "content": "<ruby>\n\t<rp><rt>${0}</rt></rp>\n</ruby>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ruby": true
      }
    },
    "96a28a98-8543-3a39-9071-06e9959582de": {
      "content": "${1:router}.beforeResolve((to, from, next) => {\n\t${2:// to and from are both route objects. must call `next`.}\n})$0",
      "doc": "router.beforeResolve",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerBeforeResolve",
      "matches": {
        "routerBeforeResolve": true
      }
    },
    "96a2f0d2-865f-3fe0-a38b-fe39229bade7": {
      "content": "where\n\t${1} = ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "where": true
      }
    },
    "96a8c080-9d15-35ea-80fd-f5f2e97cd7e1": {
      "content": "\\begin{align}\n\t${0:${VISUAL}}\n\\end{align}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Align",
      "matches": {
        "al": true
      }
    },
    "96ad4ae5-186a-3098-bf13-fedd7d64b999": {
      "content": "<a href=\"${1:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      }
    },
    "96ade223-22e2-3c32-b22c-93daa27adaf6": {
      "content": "pages = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pages": true
      }
    },
    "96b04df8-e55a-389d-a990-8bb35dad67e4": {
      "content": "/******************************************************************************/\n\nPROCEDURE ${1:ProcName}:\n\n\t${0}\n\nEND PROCEDURE. /* $1 */\n\n/******************************************************************************/",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      }
    },
    "96b0dcaa-b36f-358c-9575-41f27d5cc080": {
      "content": "{% if ${1:condition} %}$2{% endif %}\n$0",
      "doc": "if",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "96bddcb0-d140-31b3-9ef1-a923bea01834": {
      "content": "_.result(${object}, ${path}, ${defaultValue})",
      "doc": "var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\n_.result(object, 'a[0].b.c1');\n// => 3\n\n_.result(object, 'a[0].b.c2');\n// => 4\n\n_.result(object, 'a[0].b.c3', 'default');\n// => 'default'\n\n_.result(object, 'a[0].b.c3', _.constant('default'));\n// => 'default'\n\nThis method is like `_.get` except that if the resolved value is a\nfunction it's invoked with the `this` binding of its parent object and\nits result is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-result",
      "matches": {
        "lodash result": true
      }
    },
    "96c24542-c060-37d6-bc2b-de01180d196a": {
      "content": "list-style-type: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      }
    },
    "96c57447-13ab-3117-ba00-6e0f57d4175a": {
      "content": "@Output() ${1:eventName} = new EventEmitter<${2:eventType}>();",
      "doc": "Angular @Output event and emitter",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "output-event",
      "matches": {
        "a-output-event": true,
        "angular output event": true
      }
    },
    "96c66485-4288-3b04-a80f-f6e2c6f6fe9f": {
      "content": "String",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      }
    },
    "96d6afec-9f0b-38cf-8666-30300a0109aa": {
      "content": "${1:obj}.width(${2:integer})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "width": true
      }
    },
    "96d6fe43-6d48-36ba-8200-d34c2ed505a3": {
      "content": "| sort: '${1:key}'",
      "doc": "Array filter: sort",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter sort",
      "matches": {
        "sort": true
      }
    },
    "96dc2a6a-a1fb-32b3-8b92-9338b1c5916e": {
      "content": "max-height: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "max-height",
      "matches": {
        "mah": true
      }
    },
    "96e05eaf-537b-341f-83dd-f644931accfc": {
      "content": "set {${1:TARGET}}${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "set {}",
      "matches": {
        "set": true
      }
    },
    "96e20b66-1b40-32cd-bc14-9be27937b941": {
      "content": "background-repeat: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr": true
      }
    },
    "96e60145-3615-38d8-9fe8-50e9fd3ca564": {
      "content": "$scope.$watch '${1:watchExpr}', (newValue, oldValue) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$w": true
      }
    },
    "96f0af53-9228-3c53-a6ae-9902b033a49b": {
      "content": "table(${1:...})",
      "doc": "Table",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "tab",
      "matches": {
        "table": true
      }
    },
    "96f1ad2a-38b8-3450-b0c1-86be689716e4": {
      "content": "\\${.version}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "${.version}",
      "matches": {
        "ver": true
      }
    },
    "96f28e56-43b4-3caf-a546-542861f953cc": {
      "content": "{\n\t\"type\": \"paragraph\",\n\t\"content\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_paragraph": true
      }
    },
    "96f4bd01-a421-38ba-a693-7842212e78e2": {
      "content": "validates_format_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of",
      "matches": {
        "vf": true
      }
    },
    "96f6c9e4-ef2f-3954-882c-e6ecd3c8691d": {
      "content": "background-size: contain;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      }
    },
    "96f71412-8478-35f2-b5dd-b477c86a3cd3": {
      "content": "has_one :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ho": true
      }
    },
    "96f9cf7b-d5d5-374f-8ce7-47ee4e897805": {
      "content": "$('${1:selector}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jj": true
      }
    },
    "97005ec9-23db-3f04-9b4d-b9b9bea40f23": {
      "content": "grid-template-areas: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gta": true
      }
    },
    "970632da-e272-3ea8-8394-763626ff7239": {
      "content": "self.",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "970837fc-b6ae-3b7c-bfea-94c3d3e66bb6": {
      "content": "paddingVertical: ${1},",
      "doc": "paddingVertical",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingVertical",
      "matches": {
        "padding": true
      }
    },
    "9709c34d-873d-3442-a0b6-3c15cde24a28": {
      "content": "(deftest ${1:name}\n\t(is (= ${0:assertion})))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deft": true
      }
    },
    "970d4bbf-33e5-35fd-b498-c260126a8400": {
      "content": "watch: {\n\t${1:data}: {\n\t\timmediate: ${2:true},\n\t\tdeep: ${3:true},\n\t\thandler(${4:newValue}, ${5:oldValue}) {\n\t\t\t${0}\n\t\t}\n\t}\n},",
      "doc": "vue watcher with options",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Watchers with Options",
      "matches": {
        "vwatcher-options": true
      }
    },
    "97101a49-fae7-3e40-937b-f8f853902d1e": {
      "content": "import { motion, AnimatePresence } from \"framer-motion\"",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-presence-import",
      "matches": {
        "animate-presence": true,
        "framer-motion import animate-presence": true
      }
    },
    "971100b9-b96b-3f6b-8a81-b7f4777b228d": {
      "content": "${1:FIELDNAME} = serializers.HyperlinkedRelatedField(${2})",
      "doc": "Django-rest Serializers ``HyperlinkedRelatedField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF HyperlinkedRelatedField",
      "matches": {
        "shyperlinkrelated": true
      }
    },
    "9711dd39-237c-34c5-a276-28e378adb896": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "supc": true
      }
    },
    "97191c6b-17f4-3477-bc93-27d7228d7a11": {
      "content": "else {\n\t${0:# code...}\n}",
      "doc": "Else block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "else …",
      "matches": {
        "else": true
      }
    },
    "971ad052-d0d9-303b-9fa1-2b5c76a3d9ce": {
      "content": "expect(${1:target}).not.toContain(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to contain (js)",
      "matches": {
        "notc": true
      }
    },
    "97279e21-bc02-3e44-a6ad-8f988a435ccb": {
      "content": "extend Forwardable",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Forw-": true
      }
    },
    "972adf49-5ab7-3142-a2c0-3d9c873d5ff7": {
      "content": "import React, { Component } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1}",
      "doc": "Creates a React component class",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactClassCompoment",
      "matches": {
        "rcc": true
      }
    },
    "972e9d2f-a080-3b4f-84f3-efa2132b8672": {
      "content": "const ${1:function_name} = (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caf": true
      }
    },
    "973de078-21b3-3951-99d1-0b4dc156c1c3": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { return err }",
      "matches": {
        "errn": true
      }
    },
    "973ef250-b041-3f4b-94cd-c50fe7e8a3f3": {
      "content": "_.pull(${array}, ${values})",
      "doc": "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pull(array, 'a', 'c');\nconsole.log(array);\n// => ['b', 'b']\n\nRemoves all given values from `array` using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.\n\n**Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\nto remove elements from an array by predicate.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pull",
      "matches": {
        "lodash pull": true
      }
    },
    "9743f8c0-2b91-3180-b1aa-8b04a13e84e2": {
      "content": "sort_by { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sorb": true
      }
    },
    "9754f55c-f39e-3e0f-b63b-aec5f09d307a": {
      "content": "_.find(${collection}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'age': 36, 'active': true },\n  { 'user': 'fred',    'age': 40, 'active': false },\n  { 'user': 'pebbles', 'age': 1,  'active': true }\n];\n\n_.find(users, function(o) { return o.age < 40; });\n// => object for 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.find(users, { 'age': 1, 'active': true });\n// => object for 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.find(users, ['active', false]);\n// => object for 'fred'\n\n// The `_.property` iteratee shorthand.\n_.find(users, 'active');\n// => object for 'barney'\n\nIterates over elements of `collection`, returning the first element\n`predicate` returns truthy for. The predicate is invoked with three\narguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-find",
      "matches": {
        "lodash find": true
      }
    },
    "975610f1-b138-3801-9ce4-529967b18f14": {
      "content": "${1:array}.forEach(${2:element} => {\n\t$0\n});",
      "doc": "For-Each Loop",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "For-Each Loop",
      "matches": {
        "foreach": true
      }
    },
    "9757ad83-bab9-3d39-88ef-fd6514c902c3": {
      "content": "border-length auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt:a": true
      }
    },
    "97593615-ff05-35c7-b71e-71e0f530b142": {
      "content": "| lstrip",
      "doc": "String filter: lstrip",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter lstrip",
      "matches": {
        "lstrip": true
      }
    },
    "975b7bf7-f896-3633-8a00-edd75ec71f68": {
      "content": "function length(${1:item})$0",
      "doc": "returns the length (in character positions) of the specified item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-length",
      "matches": {
        "function length": true
      }
    },
    "975f3ce8-01d9-327f-a0a7-56b45b8f7865": {
      "content": "${1:FIELDNAME} = forms.BooleanField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "BooleanField",
      "matches": {
        "fbool": true
      }
    },
    "9766326d-1dc3-351c-bf1a-41c85be0f10f": {
      "content": "class ${1:#:NAME} extends ${2:#:SuperClass} {\n  constructor(${3:#:ARGS}) {\n    ${0:TARGET}\n  }\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "class extends {...}",
      "matches": {
        "class-extends": true
      }
    },
    "976b4b66-0ebd-3247-b06e-b29e5fb9f958": {
      "content": "-include(\"${1:hrl_name}.hrl\").",
      "doc": "module",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "include",
      "matches": {
        "inc": true
      }
    },
    "9777dc34-158a-3cfe-b31b-f4bb19187721": {
      "content": "${1}.map((${2:item}) => {\n\t${0}\n});",
      "doc": "map",
      "filetype": "base",
      "grammar": "lsp",
      "label": "map",
      "matches": {
        "base map": true
      }
    },
    "97796eae-494e-3199-bb80-6eb4848a3329": {
      "content": "![${1}](${2}) ${0}",
      "doc": "Add images",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Images",
      "matches": {
        "img": true
      }
    },
    "977ceb6d-ef39-3a33-94a3-fcc32cb6f859": {
      "content": "grid-auto-flow: row dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:rd": true
      }
    },
    "97888e33-3b42-3f8a-9b7e-8b1afeceb6fe": {
      "content": "switch(${1}){\n\tcase ${2}:\n\t\t${0}\n\tbreak;\n\tdefault:\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "978bc1a1-01f9-3eb3-bc7d-84fcfd37c9d1": {
      "content": "'use strict';",
      "doc": "insert 'use strict' statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "insert-use-strict-statement",
      "matches": {
        "base use strict": true
      }
    },
    "978ee71f-2dc7-3c48-b982-1528e10d382c": {
      "content": "ports:\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ports_spec": true
      }
    },
    "979b3c30-85ca-389c-b26b-2accdc54daed": {
      "content": "white-space-collapse: break-strict;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      }
    },
    "97a23a63-8925-36c3-bbca-b7d062cb9cf6": {
      "content": "align-self: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "97a8f10e-d1b8-38e3-9f23-7e8d59d3bf6d": {
      "content": "${1:obj}.fadeTo('${2:slow/400/fast}', ${3:0.5})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeto": true
      }
    },
    "97b49dc0-e6ad-320e-9f65-ca622fff97be": {
      "content": "shared static this(${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sst": true
      }
    },
    "97be418e-b9e9-3ad9-9ef9-f8f85833aa8c": {
      "content": "[<Literal>]\nlet ${1} = ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lit": true
      }
    },
    "97d1e5c7-8ea4-3fc7-a16a-1577620f2caf": {
      "content": "case ${1} of\n\t${2} -> ${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "case ... of",
      "matches": {
        "case": true
      }
    },
    "97d22131-7715-392a-b236-a2ad00ec1637": {
      "content": "${1:FIELDNAME} = forms.DateField($2, required=${3:False})",
      "doc": "DateField (fdate)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fdate",
      "matches": {
        "fdate": true
      }
    },
    "97d53b9c-166e-3cdb-bd1d-dcf9d3359ab3": {
      "content": "let ${1:x} = ${2:undefined}$0",
      "doc": "let statement",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "let",
      "matches": {
        "let": true
      }
    },
    "97de668a-3453-3ff8-9188-286a41d17f24": {
      "content": "${1:public} ${2:String} get${3:}(){\n\treturn this.${0:};\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "97e0bd62-11c0-3df7-b537-0a234dd33559": {
      "content": "**${1:Strong emphasis}** ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**": true
      }
    },
    "97e108e6-23ad-37ff-9652-09458f3d174e": {
      "content": "${1:obj}.parentsUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parentsu": true
      }
    },
    "97e6bf33-fab2-3371-b51a-ca08d0c7ea8c": {
      "content": "ReactDOM.render(${1}, ${2});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.render",
      "matches": {
        "rdr": true
      }
    },
    "97ef8a9b-ec0c-36aa-9596-b6101ed62186": {
      "content": "beforeUpdate () {\n\t${0};\n},",
      "doc": "beforeUpdate lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-beforeupdate",
      "matches": {
        "vbeforeupdate": true,
        "vue lifecycle beforeupdate": true
      }
    },
    "97f4e8f1-57ad-3a4b-8044-0d396bb5f93c": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "9800a78a-a233-3442-af8f-6eb2f58fe311": {
      "content": "$.get '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxget": true
      }
    },
    "98038a35-38c7-3e16-abe1-88580778839f": {
      "content": "env!(\"${1}\")",
      "doc": "env!(\"…\")",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "env",
      "matches": {
        "env": true
      }
    },
    "9807cb49-2426-3025-adc6-b0b26de1f5b6": {
      "content": "<%= form_tag(${1:\"${2:/users}\"}, method: ${3::post}) %>\n\t$0\n</form>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_tag",
      "matches": {
        "ft": true
      }
    },
    "980af6b1-9071-31e3-9de0-382c69762bae": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter})\n{\n\t${5}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defun1": true
      }
    },
    "98220934-2d81-390b-a99e-3fb378311ace": {
      "content": "\\\\section{${1:section name}}%\n\\\\label{sec:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\section",
      "matches": {
        "sec": true
      }
    },
    "9824c314-8c79-3d9e-8174-a8e001a4bbbc": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      }
    },
    "9825bec7-6c3a-374f-a2d2-2178c7c85295": {
      "content": "maxWidth: ${1},",
      "doc": "maxWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "maxWidth",
      "matches": {
        "max": true
      }
    },
    "9828cdd5-9a59-3472-a8c1-85ec640a384f": {
      "content": "@leave=\"$1\"$0",
      "doc": "@leave=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "leave",
      "matches": {
        "leaveEvent": true
      }
    },
    "982fe391-3cd1-3e30-8fe9-e91448611ae7": {
      "content": "try\n$2\ncatch ${1:Exception}\n$0\nend-try",
      "doc": "try catch",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "9830569b-9509-3442-aad6-8408db7b5792": {
      "content": "transition$0",
      "doc": "transition element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "transition",
      "matches": {
        "transition": true
      }
    },
    "9830e372-2451-392c-9c97-99086a5eaa5a": {
      "content": "var_export($1);$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "Dumb debug helper in cli",
      "matches": {
        "pc": true
      }
    },
    "983171d3-0c3b-3a80-9b09-8f71d032ca39": {
      "content": "export default (req, res) => {\n  if (req.method === 'POST') {\n    $1\n  } else {\n    $2\n  }\n};",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-api-method",
      "matches": {
        "next api method": true
      }
    },
    "98327299-8ae4-3868-afec-7cdcd0a101df": {
      "content": "border-top-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-color: color (border)",
      "matches": {
        "border": true
      }
    },
    "98330d74-6bdf-3a90-8fe0-efabb9f2817a": {
      "content": "const (\n\t${1:NAME1} = iota\n\t${0:NAME2}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "constants with iota",
      "matches": {
        "co": true
      }
    },
    "9837ec06-1dd3-3c88-aacc-4a6a68a83c6a": {
      "content": "{% for $1 in  %}\n  \n{% endfor %}",
      "doc": "for tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "983bf3d2-2697-3af4-98a7-cfde20171056": {
      "content": "border-right-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      }
    },
    "983cbd6c-a9b8-3e6e-a4ff-b044dc28d78f": {
      "content": "${1:public} ${2:int} ${3} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      }
    },
    "983d3369-5cd7-3aad-96ba-7b3cd3385fb9": {
      "content": "import PropTypes from 'prop-types'\nimport React, { memo } from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = memo((props) => {\n  return (\n    <div>${1:first}</div>\n  )\n})\n\n${1:${TM_FILENAME_BASE}}.propTypes = {}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Memo Function Component with ES7 module system with PropTypes",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionMemoComponentWithPropTypes",
      "matches": {
        "rmcp": true
      }
    },
    "9843b233-51d2-3847-945d-1f4107d55b82": {
      "content": "equal($2, $3)",
      "doc": "perform a component-wise equal-to comparison of two vectors",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "equal",
      "matches": {
        "equal": true
      }
    },
    "9849ae18-435e-34be-b3c3-6333f6126616": {
      "content": "for (${1:var} in ${2:object}){\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "enumerate names",
      "matches": {
        "for": true
      }
    },
    "9852dd43-130f-3011-a9d6-18919368c597": {
      "content": "comment on table ${1:table} is '${0:comment}';",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tblcom": true
      }
    },
    "9853d2b7-08b1-3355-840c-d2b605766a25": {
      "content": "${1:Class}.prototype.${2:method} = function (${3:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "prototype method",
      "matches": {
        "proto": true
      }
    },
    "9854379d-5984-38bf-a0ab-527264da1b4e": {
      "content": "try {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_n": true,
        "try_without_catch_nor_finally": true
      }
    },
    "98554142-fd53-3ec8-a3b3-4b55f4705e6e": {
      "content": "import 'react-native'\nimport React from 'react'\nimport renderer from 'react-test-renderer'\n\nimport ${1:${TM_FILENAME_BASE}} from '../${1:${TM_FILENAME_BASE}}'\n\ndescribe('<${1:${TM_FILENAME_BASE}} />', () => {\n  const defaultProps = {}\n  const wrapper = renderer.create(<${1:${TM_FILENAME_BASE}} {...defaultProps} />)\n\n  test('render', () => {\n    expect(wrapper).toMatchSnapshot()\n  })\n})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "setupReactNativeTest",
      "matches": {
        "sntest": true
      }
    },
    "985685b8-c64f-3221-93cf-9271c1465dbe": {
      "content": "${1:var} = lambda ${2:vars} : ${0:action}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ld": true
      }
    },
    "98613ea6-0327-38da-a305-fdebb35461cd": {
      "content": "@if ($1)\n\t${2:${VISUAL}}\n@else\n\t${3:${VISUAL}}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@if @else structure",
      "matches": {
        "ife": true
      }
    },
    "986f0fd3-66ee-33d7-8b4b-3de919806b9f": {
      "content": "cursor: help",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:he": true
      }
    },
    "9871248e-05b7-35db-9ea0-07a8264e2a47": {
      "content": "{% with $1 as $2 %}\n\t${VISUAL}\n{% endwith %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "987496ab-1982-3c7f-a91f-d16d3e3c3a37": {
      "content": "form_checkbox(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_checkbox": true
      }
    },
    "9876594c-3f46-320b-8118-baef90f11b8b": {
      "content": "\"org.mortbay.jetty\" % \"jetty\" % \"${0:version}\" % \"test->default\",",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jettyjar": true
      }
    },
    "987e0f39-5dc3-341a-b4ae-9fd1068d5039": {
      "content": "^{${1:${TM_SELECTED_TEXT}}}",
      "doc": "superscript",
      "filetype": "latex",
      "grammar": "lsp",
      "label": "superscript",
      "matches": {
        "**": true
      }
    },
    "988346a4-5c9c-3057-a53c-f41d8c6960e3": {
      "content": "@try {\n\t${1:statements}\n}\n@catch (NSException * e) {\n\t${2:handler}\n}\n@finally {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@try": true
      }
    },
    "988a661e-1544-3628-a4df-e371ce0a0713": {
      "content": "around_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mard": true
      }
    },
    "9890b371-c56b-3c27-9db7-31f2a9039cbc": {
      "content": "${1:expression} for @${2:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xfor": true
      }
    },
    "989402fb-bbc1-3a5f-8299-e76a9f723a2a": {
      "content": "<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<% end %>",
      "matches": {
        "end": true
      }
    },
    "989734c2-afc0-3302-aa4e-ef4c546a77a1": {
      "content": ".. contents:: ${1:#:contents_name}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contnents": true
      }
    },
    "989c3cb5-ff92-339b-9c25-1c298e0f1d10": {
      "content": "for ${1} in ${2} do\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "98a0994d-062d-3680-8a8f-c4e773a627bf": {
      "content": "${1:obj}.mousedown(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mdown": true
      }
    },
    "98a19591-23db-3518-923d-d285358ed608": {
      "content": "*ngIf=\"${1:expression}\"",
      "doc": "Angular *ngIf",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngIf",
      "matches": {
        "a-ngIf": true
      }
    },
    "98a92bee-22bd-38be-a855-a87f695a34a1": {
      "content": "echo CHtml::asset('${0:path}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhass": true
      }
    },
    "98ac6666-ca43-34e6-8850-ff6bc8572272": {
      "content": "type\t\tzeroGradient;",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zg": true
      }
    },
    "98b91a7b-730c-31a4-b448-ebb55f323408": {
      "content": "<textarea rows=\"$1\" cols=\"$2\">$3</textarea>$4",
      "doc": "HTML - Defines a text area",
      "filetype": "html",
      "grammar": "lsp",
      "label": "textarea",
      "matches": {
        "textarea": true
      }
    },
    "98b9b318-b4ff-3014-9e5f-8a3cd2eda25f": {
      "content": "-   ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-": true
      }
    },
    "98c50aaa-6c5b-3c1f-b853-5ff23fe4101b": {
      "content": "${1:obj}.click(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "click": true
      }
    },
    "98c89b0f-4778-3653-85c0-8e76f02b469f": {
      "content": "import { css } from '@emotion/core'\nimport React from 'react'\n\nexport const ${TM_FILENAME_BASE} = (props: {}) => {\n\treturn (\n\t\t<div css={css``}>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Creates a React functional component with emotion import",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactFunctionComponentWithEmotion",
      "matches": {
        "rfce": true
      }
    },
    "98cc8738-78cf-32de-9321-a3b80d69be28": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl:c": true
      }
    },
    "98d577ec-786d-3e72-9e88-49955d750889": {
      "content": "justify-items stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      }
    },
    "98d5d070-a0b9-394f-a4cf-d4419759f470": {
      "content": "<<<${1:HTML}\n${2:TARGET:#:content here}\n$1;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "here": true
      }
    },
    "98d6d699-10e4-3657-8604-3b92585f83ad": {
      "content": "wont_include ${0:what}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wi": true
      }
    },
    "98d7ccda-2a23-3d55-b9e9-c8b002e43244": {
      "content": "console.group('${1:label}');",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleGroup",
      "matches": {
        "cgr": true
      }
    },
    "98d8b2be-6c19-3778-a506-163865710a95": {
      "content": "<ins>${1:TARGET}</ins>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ins": true
      }
    },
    "98d97420-fff3-3034-88c3-81fd9aa58563": {
      "content": "DROP DATABASE ${1:dbName};",
      "doc": "Drop database",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "dropd",
      "matches": {
        "dropd": true
      }
    },
    "98dbde7c-7546-3e2a-bac9-bfee56b0be1a": {
      "content": "quotes ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      }
    },
    "98e044d1-8214-3b27-aba4-e6b2246bc863": {
      "content": "map(x -> ${1:expr}, ${2:iterable})",
      "doc": "Code snippet for map.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "map",
      "matches": {
        "map": true
      }
    },
    "98e27439-ad76-38e7-bdc6-dc6c488cdcb2": {
      "content": "_.isNaN(${value})",
      "doc": "_.isNaN(NaN);\n// => true\n\n_.isNaN(new Number(NaN));\n// => true\n\nisNaN(undefined);\n// => true\n\n_.isNaN(undefined);\n// => false\n\nChecks if `value` is `NaN`.\n\n**Note:** This method is based on\n[`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\nglobal [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n`undefined` and other non-number values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnan",
      "matches": {
        "lodash isnan": true
      }
    },
    "98e33c10-5425-3174-8350-bff9833301ee": {
      "content": "<input type=\"hidden\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:hidden": true
      }
    },
    "98e3d4fe-be8c-39cc-88cd-17de698ff474": {
      "content": "border-fit scale",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      }
    },
    "98e479ce-121f-3a93-adf9-6b6614de9a29": {
      "content": "import React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React pure component class with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassPureComponent",
      "matches": {
        "rpc": true
      }
    },
    "98ea6a95-9350-3595-affb-bd4d551a8573": {
      "content": "| prepend: '${1:string}'",
      "doc": "String filter: prepend",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter prepend",
      "matches": {
        "prepend": true
      }
    },
    "98f823d1-cca4-3f70-855f-6533d43a2387": {
      "content": "subject { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subj": true
      }
    },
    "98fd2265-e8b0-3c42-a4b4-82ee07b9d00c": {
      "content": "{\n\t\"type\": \"color\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"default\": \"$3\",\n\t\"info\": \"$4\"\n},$5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema color",
      "matches": {
        "_color": true
      }
    },
    "99099124-f6fa-3c07-9059-9e98f12ed730": {
      "content": "Object.defineProperty(\n\t${1:object},\n\t'${2:property}',\n\t{\n\t\tget : function $1_$2_getter() {\n\t\t\t// getter code\n\t\t},\n\t\tset : function $1_$2_setter(value) {\n\t\t\t// setter code\n\t\t},\n\t\tvalue        : ${3:value},\n\t\twriteable    : ${4:boolean},\n\t\tenumerable   : ${5:boolean},\n\t\tconfigurable : ${0:boolean}\n\t}\n);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      }
    },
    "990dbea7-9443-3d22-b6f1-83d81255f228": {
      "content": "thread_local!(static ${1:STATIC}: ${2:Type} = ${4:init});",
      "doc": "thread_local!(static …: … = …);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "thread_local",
      "matches": {
        "thread_local": true
      }
    },
    "9916961a-9568-3c8c-bb2d-5c86367e401f": {
      "content": "place-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:st": true
      }
    },
    "9916ffb2-b404-3e38-8de5-df07f0fb152e": {
      "content": "nfs(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfs": true
      }
    },
    "991d1c3e-663a-3ec3-9c90-42c9cbf0ff1a": {
      "content": "case ${1:word} in\n\t${2:pattern})\n\t\t${0};;\nesac",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "99226e15-e02f-3c23-bc4c-fd1f4534e414": {
      "content": "export const ${1} = styled.${2}.attrs({\n  ${3}: ${4}\n})`\n  ${5}\n`;",
      "doc": "Export styled-component with attributes",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component-with-attributes",
      "matches": {
        "exscattrs": true,
        "styled-components export component with attributes": true
      }
    },
    "992324fc-4f05-3652-8199-9139214a64d8": {
      "content": "${1:iterable}.map((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "map",
      "matches": {
        "map": true
      }
    },
    "99269e9c-2e04-33c5-8b3c-490f4a0b5cbe": {
      "content": "Long",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lng": true
      }
    },
    "9928c2f6-cb16-3a74-a23c-3afa139f293b": {
      "content": "align-self: last baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      }
    },
    "992900d1-b709-3b7c-a27f-1c3600cdb17b": {
      "content": "FUNCTION PRESENT-VALUE(${1:discount-rate},${2:amount},${3:...})$0",
      "doc": "approximation of the present value of a series of future period-end amount",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-PRESENT-VALUE",
      "matches": {
        "FUNCTION PRESENT-VALUE": true
      }
    },
    "992b33e0-bc5d-3ae4-be4c-7ad84d645ef1": {
      "content": "my $${1:var} = do { local $/ = undef; open my $fh, '<', ${2:$file}; <$fh> };",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "slurp",
      "matches": {
        "slurp": true
      }
    },
    "992d0ca2-1a18-39d6-a039-a80abe343a41": {
      "content": "<% if ${1} %>\n\t${2}\n<% else %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "992e207f-1e63-30c9-9159-3f620f89c440": {
      "content": "justify-content: space-between;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      }
    },
    "9930ca35-5fac-35f4-ae19-e8fd47a02265": {
      "content": "FUNCTION RANGE(${1:argument},${2:...})$0",
      "doc": "value of the maximum argument minus the value of the minimum argument",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-RANGE",
      "matches": {
        "FUNCTION RANGE": true
      }
    },
    "9934d050-7170-3455-a98e-cb2224ae1972": {
      "content": "collect do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cold": true
      }
    },
    "99381cb8-aeb1-3a41-9ebd-5eddf0a67a2f": {
      "content": "sample(${1:x}, ${2:size}, ${3:replace = ${4:FALSE}}, ${5:prob = ${6:NULL}})",
      "doc": "Sample",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "sam",
      "matches": {
        "sample": true
      }
    },
    "993a1d9a-3990-3153-8a7d-c0e2ec707203": {
      "content": ";(function (${1:arguments}) {\n\t${0}\n})(${2})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "immediately-invoked function expression",
      "matches": {
        "iife": true
      }
    },
    "993ba22d-a8ac-3a25-9224-8c96fc8b9da7": {
      "content": "perspective(${1:fov}, ${2:aspect}, ${3:zNear}, ${0:zFar});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "perspective": true
      }
    },
    "99452a4d-5385-3a15-a675-6d26b74cf6ba": {
      "content": "@register.simple_tag(takes_context=True)\ndef $1(context):\n\trequest = context.get('request')\n\treturn ${2:'It Works!'}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "register_simple_tag",
      "matches": {
        "register_simple_tag": true
      }
    },
    "9946b719-c2bb-3b58-a2c2-089d2eaa347a": {
      "content": "{% set categories = craft.categories({\n\tgroup: \"${1:categoryGroupHandle}\",\n\tlimit: \"${2:11}\"\n}).all() %}\n\n<ul>\n\t{% nav category in categories %}\n\t\t<li>\n\t\t\t<a href=\"{{ category.url }}\">{{ category.title }}</a>\n\t\t\t{% ifchildren %}\n\t\t\t\t<ul>\n\t\t\t\t\t{% children %}\n\t\t\t\t</ul>\n\t\t\t{% endifchildren %}\n\t\t</li>\n\t{% endnav %}\n</ul>",
      "doc": "craft.categories - object syntax",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "categorieso",
      "matches": {
        "categorieso": true
      }
    },
    "994763e8-1275-30b1-a562-586ffe1aa5e3": {
      "content": "_.zipObject(${props}, ${values})",
      "doc": "_.zipObject(['a', 'b'], [1, 2]);\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.fromPairs` except that it accepts two arrays,\none of property identifiers and one of corresponding values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipobject",
      "matches": {
        "lodash zipobject": true
      }
    },
    "994850d7-b204-397b-b9f5-01e5ec78e683": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      }
    },
    "994c859a-2811-3590-a5b0-85fc0e33de11": {
      "content": "${1:value_key}:\n  livenessProbe:\n\tfailureThreshold: 3\n\tinitialDelaySeconds: 10\n\tperiodSeconds: 10\n\tsuccessThreshold: 1\n\ttimeoutSeconds: 1\n\tport: 10254\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "livenessProbe_values": true
      }
    },
    "99500dee-2607-3052-b729-84254f64a0af": {
      "content": "background-repeat: no-repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-repeat: no-repeat",
      "matches": {
        "bgrn": true
      }
    },
    "9953c7e3-b82d-3e2f-88b0-6996708be787": {
      "content": "grid-row: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      }
    },
    "9956acd6-6981-3827-b97e-ec282c9040e4": {
      "content": "_.findIndex(${array}, ${predicate}, ${fromIndex})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.findIndex(users, function(o) { return o.user == 'barney'; });\n// => 0\n\n// The `_.matches` iteratee shorthand.\n_.findIndex(users, { 'user': 'fred', 'active': false });\n// => 1\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findIndex(users, ['active', false]);\n// => 0\n\n// The `_.property` iteratee shorthand.\n_.findIndex(users, 'active');\n// => 2\n\nThis method is like `_.find` except that it returns the index of the first\nelement `predicate` returns truthy for instead of the element itself.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findindex",
      "matches": {
        "lodash findindex": true
      }
    },
    "995a2e07-bf07-3638-aca1-24e5f92d506a": {
      "content": "this.setState($0);",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      }
    },
    "995aef02-f9d4-3b47-8644-34455f811876": {
      "content": "@Output() ${1:eventName} = new EventEmitter<${2:eventType}>();",
      "doc": "Angular @Output event and emitter",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Output Event",
      "matches": {
        "a-output-event": true
      }
    },
    "995b8dfa-efb1-34a4-ab7f-7a9467e44ec3": {
      "content": "func ${1:name}(${2:#:arguments}) -> ${3:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "func name(...) -> Type { ... }",
      "matches": {
        "func": true
      }
    },
    "99633ba2-5964-38e9-ac32-86c0b3049044": {
      "content": "| strip_newlines }}",
      "doc": "String filter: strip newlines",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter strip newlines",
      "matches": {
        "strip_newlines": true
      }
    },
    "997049ab-3e02-3ef9-b048-1699ceb2b53a": {
      "content": "setImmediate(() => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "setImmediate",
      "matches": {
        "sim": true
      }
    },
    "99727528-a30a-3f51-87f1-bd7843d4fe7f": {
      "content": "priority case (${1}) begin\n    ${2:'b0}: begin\n        ${3}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case_full": true
      }
    },
    "9977a6d2-81a1-3d64-8a81-71284de9944b": {
      "content": "import ${1:Name} from '@/components/${1:Name}.vue';\n\nexport default {\n\tcomponents: {\n\t\t${1:Name}\n\t},\n};",
      "doc": "import a component and include it in export default",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Export",
      "matches": {
        "vimport-export": true
      }
    },
    "997a5024-a657-3699-a852-6f78d31d0da9": {
      "content": "place-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:e": true
      }
    },
    "9984413b-29af-3f56-8fa8-3b60770c0617": {
      "content": "{call ${1:tmpl}}\n\t$0\n{/call}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "template call",
      "matches": {
        "call": true
      }
    },
    "999cf704-da2a-340a-b0d4-2b8bdb5e99cc": {
      "content": "select case (${1:expr})\n\tcase ($2)\n\tcase default\n\t\t$3\nend select ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "99a4bb08-a67f-3e98-ab16-fcd408b66836": {
      "content": "\\subsubsection{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subsubsection": true,
        "subsubsection \\subsubsection{": true
      }
    },
    "99a525d8-1826-351f-add2-c746a846bbe1": {
      "content": "<textarea rows=\"${1}\" cols=\"${2}\">\n${3:TARGET}\n</textarea>\n${4}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      }
    },
    "99a6041e-ab5c-34a2-8c98-c808ec275a1a": {
      "content": "printf(\"${1:#:string}\\n\"${2:, });",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true
      }
    },
    "99aa5250-28b4-3788-95fa-317c1b3904b3": {
      "content": "// MARK: - UI",
      "doc": "Create a MARK: - UI",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - UI",
      "matches": {
        "markui": true
      }
    },
    "99b8e805-b4ab-3bfc-b892-b582ea03652b": {
      "content": "list-style-type circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      }
    },
    "99c0555c-bca8-3045-bf33-7baa8b976117": {
      "content": "&#x21A9;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      }
    },
    "99c0e71b-1c03-32c8-82ad-417e6b0794a4": {
      "content": "{% endcss %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endcss",
      "matches": {
        "endcss": true
      }
    },
    "99c5df71-7490-3a20-bfa0-2efd081299c5": {
      "content": "${1:obj}.height(${2:integer})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      }
    },
    "99c9eece-fe5d-3642-93bf-8aeff95bf3e6": {
      "content": "border-bottom-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbw": true
      }
    },
    "99d7a5b1-6bde-3055-bd1a-b8b44c29f672": {
      "content": "import React from 'react'\nimport { connect } from 'react-redux'\n\nexport const ${1:${TM_FILENAME_BASE}} = (props) => {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})",
      "doc": "Creates a React functional component with connected redux and ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionalComponentRedux",
      "matches": {
        "rfcredux": true
      }
    },
    "99d83e7b-27db-3900-b7ee-b29f90d2688e": {
      "content": "${1:document}.removeEventListener('${2:event}', ${3:listener})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "removeEventListener",
      "matches": {
        "rel": true
      }
    },
    "99daa2bd-dbce-3ab6-89f8-fdbe4d5b95e8": {
      "content": "ldexp($2, $3)",
      "doc": "assemble a floating point number from a value and exponent",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "ldexp",
      "matches": {
        "ldexp": true
      }
    },
    "99db98da-e1a3-30bc-a8a0-4a984afa550e": {
      "content": "@override\nbool get mounted {\n  ${0:}\n}",
      "doc": "Whether this State object is currently in a tree.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Mounted",
      "matches": {
        "mounted": true
      }
    },
    "99dbfaaf-0e8a-3c15-afda-ef7d6a5fa712": {
      "content": "{% tablerow ${1:#:var} in ${2:#:list} %}\n  ${0:TARGET}\n{% endtablerow %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "tablerow in endtablerow",
      "matches": {
        "tablerow": true
      }
    },
    "99ddd352-60b5-3cde-9d37-6d797a80210f": {
      "content": "test('should $1', () => {\n  $0\n})",
      "doc": "Testing `test` block",
      "filetype": "react",
      "grammar": "lsp",
      "label": "testBlock",
      "matches": {
        "test": true
      }
    },
    "99de5a96-9f09-3b85-80f6-4a69e0be403a": {
      "content": "background-size cover",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:cv": true
      }
    },
    "99e0319f-f655-3ae0-bcdb-b7baa8e88779": {
      "content": "$${1:#:expression}$${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "$ expression $",
      "matches": {
        "$": true,
        "mathexpression": true
      }
    },
    "99eeefa3-2d5c-37be-b677-9c7ad302a8f8": {
      "content": "<input type=\"radio\" name=\"${1}\" value=\"value\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inputradio": true
      }
    },
    "99ef4e72-ae37-3e5e-b3a4-f945ab8eb06a": {
      "content": "- (IBAction)${1:method}:(${2:id})sender;",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ibad": true
      }
    },
    "99f22f9a-5e8b-3f3d-adc7-17f4e2d3ce43": {
      "content": "Console.WriteLine(\"$1\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Console.WriteLine",
      "matches": {
        "cw": true
      }
    },
    "99f5eade-fcee-39b6-87ef-9979444ee82e": {
      "content": "select ${1:answer} in ${2:choices}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "99f74df1-e58a-3a43-83ee-375174d9f6e3": {
      "content": "try\n    ${1}\n${2:catch}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "try ... end",
      "matches": {
        "try": true
      }
    },
    "99fb08fe-aa2c-3d1d-a415-e2d039c30c82": {
      "content": "font: ${1:75%} ${2:\"Lucida Grande\", \"Trebuchet MS\", Verdana,} ${3:sans-}serif;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font: size font (font)",
      "matches": {
        "font": true
      }
    },
    "9a000e03-e001-3cd6-998c-5d572d867cbb": {
      "content": "\\$this->$0;",
      "doc": "$this->...",
      "filetype": "php",
      "grammar": "lsp",
      "label": "$this->…",
      "matches": {
        "this": true
      }
    },
    "9a0823c9-f8cf-3b5b-8229-fc658705d6f5": {
      "content": "align-self flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      }
    },
    "9a10a15d-0bd8-3f66-b93c-8dc88517a633": {
      "content": "background-size: ${0:cover};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-size",
      "matches": {
        "bgs": true
      }
    },
    "9a1651fc-73a6-34ce-ba65-8d84406998f2": {
      "content": "| asset_img_url: '${1:medium}'",
      "doc": "URL filter: asset img url",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter asset img url",
      "matches": {
        "asset_img_url": true
      }
    },
    "9a189e66-0d2e-35c4-ac8a-31a0f6762c3a": {
      "content": "LINKAGE SECTION.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "LINKAGE SECTION ",
      "matches": {
        "LINKAGE SECTION": true,
        "LKS": true,
        "LS": true
      }
    },
    "9a1994e7-0630-3823-bd7c-e6535ccf4f72": {
      "content": "<th id=\"${1}\">${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th#": true
      }
    },
    "9a1a81a5-dd29-3966-95df-0fd0863a5b5f": {
      "content": "font-smooth: never;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      }
    },
    "9a20d55b-32af-3a46-80fd-5812a00523c0": {
      "content": "match ${1:x} with\n| Some(${2:y}) -> ${3:()}\n| None -> ${4:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "pattern match on an option type",
      "matches": {
        "matcho": true
      }
    },
    "9a233cf6-83d2-3c8a-bdee-1a5af815335e": {
      "content": "mounted() {\n\tconsole.log('mounted');\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmounted": true
      }
    },
    "9a37cd08-f389-3a8b-8b7b-f30169edd360": {
      "content": "require_once '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req1": true
      }
    },
    "9a38bab2-240e-3b44-907c-999d35904b6c": {
      "content": "{% do ${1} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig do",
      "matches": {
        "do": true
      }
    },
    "9a3ee98f-5303-34b6-9b97-e7a7f86a9dde": {
      "content": "if (${1:condition}) {\n\t${2:value}\n} else {\n\t${3:otherValue}\n}",
      "doc": "The if...else conditional expression can return two different values based on a condition.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "If",
      "matches": {
        "if": true
      }
    },
    "9a4c6bbd-2f6f-30c6-a685-ac51adb909fa": {
      "content": "else",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "9a50b396-f806-3fd1-a5c9-574f2e73e4db": {
      "content": "marginHorizontal: '${1}',",
      "doc": "marginHorizontal",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginHorizontal",
      "matches": {
        "mar": true
      }
    },
    "9a5b30c0-5935-3c46-a054-84eacbac0b98": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { ${2:ComponentName}Component } from './${3:filename}.component';\n\n// Consider using this interface for all CanDeactivate guards,\n// and have your components implement this interface, too.\n//\n//   e.g. export class CanDeactivateGuard implements CanDeactivate<CanComponentDeactivate> {\n//\n// export interface CanComponentDeactivate {\n// canDeactivate: () => any;\n// }\n\n@Injectable({providedIn: ${4:'root'}})\nexport class ${1:Name}Guard implements CanDeactivate<${2:ComponentName}Component> {\n\tcanDeactivate(\n\t\tcomponent: ${2:ComponentName}Component,\n\t\tcurrentRoute: ActivatedRouteSnapshot, \n\t\tcurrentState: RouterStateSnapshot\n\t): Observable<boolean>|Promise<boolean>|boolean {\n\t\treturn false;$0\n\t}\n}",
      "doc": "Angular CanDeactivate guard",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular CanDeactivate Guard",
      "matches": {
        "a-guard-can-deactivate": true
      }
    },
    "9a5f64a1-6142-346f-98dc-4133560e404c": {
      "content": "${1:FIELDNAME} = models.FileField($2, upload_to=${3:None}, max_length=${4:100})",
      "doc": "FileField (mfile).\n\nA file-upload field.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mfile",
      "matches": {
        "mfile": true
      }
    },
    "9a60d75e-0f98-3895-85b9-4eeb7c326959": {
      "content": "{% decrement ${1:variable} %}",
      "doc": "Variable tag: decrement",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag decrement",
      "matches": {
        "decrement": true
      }
    },
    "9a675888-7c31-3591-ba7f-16739d03b773": {
      "content": "{{-- ${1} --}}",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "{{-- comments --}}",
      "matches": {
        "comment": true
      }
    },
    "9a715ffb-1899-34af-b455-2c0224b53e73": {
      "content": "word-break: break-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:ba": true
      }
    },
    "9a797685-2a2c-376e-abd2-f3005aa3b480": {
      "content": "<li>${1}</li>\nli+",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li+": true
      }
    },
    "9a7f927b-f092-3e44-bb0b-f6f13c4b1ea2": {
      "content": "for (let ${1:i} in ${2:#:Things}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      }
    },
    "9a84b3b2-31ce-3067-93fe-d54b269e648b": {
      "content": "pluralize:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pluralize": true
      }
    },
    "9a8d0172-16ee-3d03-b5e5-d8cfc5f8566b": {
      "content": "has_and_belongs_to_many :${1:object}, join_table: '${2:table_name}', foreign_key: '${3}_id'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "habtm": true
      }
    },
    "9a8f259c-06f3-39f7-84e3-6a8303b83b81": {
      "content": "task body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task body",
      "matches": {
        "task_body": true
      }
    },
    "9a906efe-bf5e-31ef-99f6-045beb62004a": {
      "content": "render action: \"${1:action}\", layout: \"${2:layoutname}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (action,layout) (ral)",
      "matches": {
        "ral": true
      }
    },
    "9a926a2b-78d3-327e-b79a-a9f62ef37301": {
      "content": "{% endnav %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endnav",
      "matches": {
        "endnav": true
      }
    },
    "9aa2307f-9411-3f72-91ab-0ef53b56ddf9": {
      "content": "clear: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      }
    },
    "9aaaffd6-0645-3b3c-8424-76ae95a70357": {
      "content": "size(${1:200}, ${2:200}${0:, P3D});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "normal",
      "matches": {
        "size": true
      }
    },
    "9aadc194-0faa-3f78-bfb3-6272a37ac20e": {
      "content": "filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=${0:100})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      }
    },
    "9aade526-bf56-38ea-85fc-eea6e0794e3d": {
      "content": "setter? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w?": true
      }
    },
    "9abb4c07-9cd1-31ad-af35-bf5aafa8994d": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{/if}",
      "doc": "if block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-block",
      "matches": {
        "s-if-block": true
      }
    },
    "9abdc8bf-00d9-3b81-9dd0-dc98ee3741b7": {
      "content": "createRenderer({\n\t$1\n})",
      "doc": "createRenderer({ })",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "createRenderer",
      "matches": {
        "createRenderer": true
      }
    },
    "9ace5fc3-311d-34a3-8c27-9cb645339aaf": {
      "content": "_.includes(${collection}, ${value}, ${fromIndex})",
      "doc": "_.includes([1, 2, 3], 1);\n// => true\n\n_.includes([1, 2, 3], 1, 2);\n// => false\n\n_.includes({ 'a': 1, 'b': 2 }, 1);\n// => true\n\n_.includes('abcd', 'bc');\n// => true\n\nChecks if `value` is in `collection`. If `collection` is a string, it's\nchecked for a substring of `value`, otherwise\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nis used for equality comparisons. If `fromIndex` is negative, it's used as\nthe offset from the end of `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-includes",
      "matches": {
        "lodash includes": true
      }
    },
    "9acfc587-3f21-3f66-a3ae-cac1edd17227": {
      "content": "${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dpipe": true
      }
    },
    "9ad33346-a6da-362e-971e-d33298fed02a": {
      "content": "border-right-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-right-width": true,
        "brw": true
      }
    },
    "9ade564b-f7f8-3e12-9795-20a503f077d3": {
      "content": "vital#${1:#:plugin_name}#new()",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "vital#...#new()",
      "matches": {
        "vital_new_without_let": true
      }
    },
    "9adf0388-1974-39d5-a37a-b6fdb0a06016": {
      "content": "System.Windows.Forms",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.w.f": true
      }
    },
    "9ae36492-763d-309a-91ee-85feaf61e137": {
      "content": "var ${1:name} ${2:type}",
      "doc": "Snippet for a variable",
      "filetype": "go",
      "grammar": "lsp",
      "label": "variable declaration",
      "matches": {
        "var": true
      }
    },
    "9ae55a1a-2219-38be-a413-953be40fcbc3": {
      "content": "override ${1:attribute} => sub {\n\t${2:# my $self = shift;};\n\t${0:# my ($self, $args) = @_;};\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "override": true
      }
    },
    "9ae6a3eb-acf4-3bc7-850b-8582e37d35ab": {
      "content": "marginBottom: ${1},",
      "doc": "marginBottom",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginBottom",
      "matches": {
        "mar": true
      }
    },
    "9af082df-0455-3bfd-85ea-32ed018a28ab": {
      "content": "keep-alive$0",
      "doc": "keep-alive element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "keep-alive",
      "matches": {
        "keepAlive": true
      }
    },
    "9af11459-f977-3121-befd-73bd3b79599b": {
      "content": "<h6 class=\"${1}\">${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6.": true
      }
    },
    "9b05b5bf-0e1e-30b4-beb7-af2901a575bc": {
      "content": "mixed.default()",
      "doc": "mixed.default(): Any\n\nCalling default with no arguments will return the current default value",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-default",
      "matches": {
        "yup mixed default": true
      }
    },
    "9b076e09-e486-3b8a-97bc-127a20a60b85": {
      "content": "repeat{\n  ${2:}\n  if(${1:condition}) break\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      }
    },
    "9b0d98f1-0250-34db-9a8e-53c11b88af70": {
      "content": "align-content stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:st": true
      }
    },
    "9b11f856-f757-38e7-b1a8-c68fda64cb13": {
      "content": "$(() ->\n\t${0}\n)",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ready": true
      }
    },
    "9b12d8b4-de1a-32ae-916e-10233fbe0dd5": {
      "content": "list-style-position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp": true
      }
    },
    "9b1302df-93fe-31e2-97ff-f5d39a735003": {
      "content": "describe('${TM_FILENAME_BASE}', () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "describe top level",
      "matches": {
        "dt": true
      }
    },
    "9b149f8f-e02c-39f0-b293-f5e5157bb5d0": {
      "content": "$this->renderDynamic('${1:callback}', array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrdi": true
      }
    },
    "9b208dc2-470e-3efc-9cfa-d6389d388290": {
      "content": "#ifdef ${1:DEBUG}\n$0\n#endif // ${DEBUG}",
      "doc": "Code snippet for #ifdef",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#ifdef",
      "matches": {
        "#ifdef": true
      }
    },
    "9b2458a8-9a71-3247-9874-813374946dc6": {
      "content": "- (void)addObjectTo${1:#:Things}:(${2:#:id})anObject\n{\n\t[${3}} addObject:anObject];\n}\n\n- (void)insertObject:($2)anObject in$1AtIndex:(unsigned int)i\n{\n\t[${3} insertObject:anObject atIndex:i];\n}\n\n- (${2})objectIn${1}AtIndex:(unsigned int)i\n{\n\treturn [${3} objectAtIndex:i];\n}\n\n- (unsigned int)indexOfObjectIn${1}:(${2})anObject\n{\n\treturn [${3} indexOfObject:anObject];\n}\n\n- (void)removeObjectFrom${1}AtIndex:(unsigned int)i\n{\n\t [${3} removeObjectAtIndex:i];\n}\n\n- (unsigned int)countOf${1}\n{\n\treturn [${3} count];\n}\n\n- (NSArray${4: *}${1}\n{\n\treturn ${3}\n}\n\n- (void)set${1}:(NSArray${4: *})new${1}\n{\n\t[${3} setArray:new${1}];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "KVCArry",
      "matches": {
        "karray": true
      }
    },
    "9b2b3b70-52ff-30c7-9fed-4ba9e2b24df3": {
      "content": "{% ifequal ${1} ${2} %}\n\t${0}\n{% endifequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      }
    },
    "9b2b6ff5-1f45-3198-ad72-36639a7bae92": {
      "content": "while True:\n\t${1}\n\tif ${0:condition}:\n\t\tbreak",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowh": true
      }
    },
    "9b2d3a61-f18a-3f80-8a15-e5cae06ed3bb": {
      "content": "<img class=\"${1}\" src=\"${2}\" alt=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img.": true
      }
    },
    "9b3373fe-bb7a-3b5c-958e-c7744e3f8a18": {
      "content": "{#each ${1:items} as ${2:item}, i (${3:key})}\n\t${4: <!-- content here -->}\n{/each}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-each-index-key-block",
      "matches": {
        "sveach-i-k": true,
        "svelte each index key": true
      }
    },
    "9b34638b-d87f-38dc-8bdc-a16ede72d852": {
      "content": "{{ ${1:#:TARGET} | ${2:#:filter} }}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "{{ | }}",
      "matches": {
        "filter": true,
        "{{": true
      }
    },
    "9b35b1c6-863a-31b7-8be5-32af324fc35b": {
      "content": "*ngIf=\"${1:expression};else ${2:templateName}\"",
      "doc": "Angular *ngIfElse",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngIfElse",
      "matches": {
        "a-ngIfElse": true
      }
    },
    "9b39618e-1824-323d-91ab-56bc0090d96a": {
      "content": "if (${1:#:condition}) {\n    ${2:#:commands}\n} else {\n    ${3:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "if (...) {...} else {...}",
      "matches": {
        "ifelse": true
      }
    },
    "9b3a9666-061f-3221-8125-b1d46a87423f": {
      "content": "<aside class=\"${1}\">\n\t${0}\n</aside>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aside.": true
      }
    },
    "9b3d1969-8d57-360c-a8a0-60d7eb98e981": {
      "content": "Dir.glob(${1:'**/*'}) do |fname|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "glob": true
      }
    },
    "9b47d572-0d25-3a10-b88b-e28b4dbb81e9": {
      "content": "static final ${1:Object} ${2:VAR_NAM} = ${0};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      }
    },
    "9b50e26e-be2d-373a-a8f0-22c729b66f12": {
      "content": "shadowOpacity: ${1},",
      "doc": "shadowOpacity",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "shadowOpacity",
      "matches": {
        "sha": true
      }
    },
    "9b56d24e-bdbd-305a-a829-817b61bf4eb5": {
      "content": "overflow: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:v": true
      }
    },
    "9b5c986d-7f49-38c2-9579-92dd764172f1": {
      "content": "/*! \\enum $1\n *\n *  ${2:Detailed description}\n */\nenum ${1:name} { ${0} };",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "9b5d77f0-8a0f-3f68-8b85-8b2a51f403f6": {
      "content": "const {${2:second}} = ${1:first}",
      "doc": "Creates and assigns a local variable using object destructing",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "destructingObject",
      "matches": {
        "dob": true
      }
    },
    "9b6e58b9-1cc0-3fdd-b033-e7219e4fd1e9": {
      "content": "fmt.Sprintf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Sprintf",
      "matches": {
        "ps": true
      }
    },
    "9b6fe2f0-6ae6-3c95-a8b4-868825c5348e": {
      "content": "display: ${1:table/inline-table/table-row-group/table-header-group/table-footer-group/table-row/table-column-group/table-column/table-cell/table-caption};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: table-types (display)",
      "matches": {
        "display": true
      }
    },
    "9b70ca53-bbf5-3dec-b7e7-82416454d4d6": {
      "content": "| floor",
      "doc": "Math filter: floor",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter floor",
      "matches": {
        "floor": true
      }
    },
    "9b72d3bb-53c8-34c2-8f73-9a38dc4a635b": {
      "content": "this.route.paramMap\n\t.pipe(map(params => params.get('id')), tap(id => (this.id = +id)))\n\t.subscribe(id => {$1});\n$0",
      "doc": "Angular - subscribe to routing parameters",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Routing Params - Subscribe",
      "matches": {
        "a-route-params-subscribe": true
      }
    },
    "9b7a9705-6c23-3a8c-afc7-f9a1f218529d": {
      "content": "${1:#:expression} unless ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "xun",
      "matches": {
        "xunless": true
      }
    },
    "9b7c2064-908d-32b1-8b27-f85c66a0a351": {
      "content": "padding: ${1:20px} ${2:0px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding:   V H (padding)",
      "matches": {
        "padding": true
      }
    },
    "9b7ff2f8-5d94-3f11-a370-4d980d0cc41e": {
      "content": "if (${1:condition}) {\n   ${2:selected}\n}",
      "doc": "Code snippet for 'if' conditional",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "9b82bb5e-1e8a-35cf-8d49-15aeb269eb2b": {
      "content": "@before-enter='$1'$0",
      "doc": "@before-enter=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "before-enter",
      "matches": {
        "beforeEnterEvent": true
      }
    },
    "9b8481a2-0224-3361-8947-43be3d6c9821": {
      "content": "white-space: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      }
    },
    "9b886eb5-3b78-345e-ab47-75fdac32aca7": {
      "content": "{% paginate ${1} as ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig paginate",
      "matches": {
        "paginate": true
      }
    },
    "9b8ef846-0fbf-3641-94b1-18de1f6b5bef": {
      "content": "else\n\t$0",
      "doc": "else",
      "filetype": "make",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "9b96df65-8f33-3514-8258-35c241426431": {
      "content": "const ${1:store} = writable(${2:initialValue});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable",
      "matches": {
        "svelte writeable": true,
        "svw": true
      }
    },
    "9b975509-7b16-3497-9ce1-f6a6e6e2bfb0": {
      "content": "[${1:description}](${2:object})",
      "doc": "links",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "link",
      "matches": {
        "link": true
      }
    },
    "9b99329c-3630-3265-88b1-87c239f1f303": {
      "content": "${1:FIELDNAME} = forms.MultiValueField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "MultiValueField",
      "matches": {
        "fmuval": true
      }
    },
    "9ba359fd-d95d-368a-82a8-0ca4f0496f02": {
      "content": "[class]=\"${1:expression}\"",
      "doc": "Angular [class] binding",
      "filetype": "html",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "a-class": true
      }
    },
    "9ba46ae0-77f5-377b-93bc-a805e584121a": {
      "content": "console.warn(${1:object});",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleWarn",
      "matches": {
        "cwa": true
      }
    },
    "9baab7d0-3985-368b-ac71-8ad2fbb88cc3": {
      "content": "catch {${1}} ${2:err} ${0:options}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      }
    },
    "9baaba17-6492-35af-af4b-c3f73db49eaf": {
      "content": "def ${1:name}(${2:args}) when ${3:guard}, do:",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfw": true
      }
    },
    "9bac48d6-3835-3783-8ea3-cdd2af131c9d": {
      "content": "\\[${1:#:expression}\\]${2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\[ expression \\]",
      "matches": {
        "\\[": true,
        "mathenvb": true
      }
    },
    "9bad92b6-0ba4-372f-8d71-7dec9206cfe2": {
      "content": "| divided_by: ${1:2}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divided_by": true
      }
    },
    "9bb6d814-667f-3d13-8543-ae7976466f6f": {
      "content": "$scope.${1:variable} = ${2:value}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$v": true
      }
    },
    "9bb95c6d-678a-3ded-840a-56bcce4fef1a": {
      "content": "def ${1:model_class_name}_params\n\tparams.require(:$1).permit()\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defparams": true
      }
    },
    "9bbb61f1-4eb7-3550-80df-5df54a3d9405": {
      "content": "const ${1:name} = (${2:params}) => {\n\t${3}\n}",
      "doc": "Creates a named function in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "namedFunction",
      "matches": {
        "nfn": true
      }
    },
    "9bbcdf07-e156-3afa-82ad-645e57cb4775": {
      "content": "sort(reverse=${1:False}, case_sensitive=${2:False}, attribute=${3:None})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sort an iterable",
      "matches": {
        "sort": true
      }
    },
    "9bc33870-a690-3d0d-89fb-a58fc128ee05": {
      "content": ":before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      }
    },
    "9bc40aba-2309-3ce5-a349-3b0189acfb08": {
      "content": "<a href=\"${1}\">${2:TARGET}</a>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ahref": true
      }
    },
    "9bc810d6-5e23-37c9-a56f-24b54f4592e6": {
      "content": "Logger.warn(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true
      }
    },
    "9bc91d25-f1f0-30cb-a3c8-1172a87bd45e": {
      "content": "${1:f} :: ${2:a} ${3:-> ${4:b}}\n$1 ${5:x} = ${6:undefined}$0",
      "doc": "Simple function",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "fn",
      "matches": {
        "fns": true,
        "simple function": true
      }
    },
    "9bd05135-4e98-3b62-b172-175f4dc5dfa1": {
      "content": "| lstrip }}",
      "doc": "String filter: lstrip",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter lstrip",
      "matches": {
        "lstrip": true
      }
    },
    "9bd173c3-15e6-32fc-8b81-2dc098c3bf2b": {
      "content": "typedef ${1:#:base_type} ${2:#:custom_type};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typedef": true
      }
    },
    "9bd33189-9f44-3e2e-bfdb-d9d96dac3701": {
      "content": "counter-increment: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "coi": true
      }
    },
    "9bd62e4a-94ac-3e75-848c-7438610c400b": {
      "content": "${1:router}.resolve($2)$0",
      "doc": "router.resolve()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerResolve",
      "matches": {
        "routerResolve": true
      }
    },
    "9bd79f29-bae5-340d-aa89-15ca091016ff": {
      "content": "text-justify distribute",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:d": true
      }
    },
    "9be13007-f5de-3038-9140-ee7e1d7ae2bf": {
      "content": "justify-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      }
    },
    "9be29076-5481-33e0-a5bc-56858a4bbaa9": {
      "content": "for {set ${2:var} 0} {$$2 < ${1:count}} {${3:incr} $2} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "9be82c76-f5db-33ab-83bc-37b0a6195627": {
      "content": "min-width: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "min-width",
      "matches": {
        "miw": true
      }
    },
    "9bedcaa9-f879-33cb-945b-d590df91e003": {
      "content": "white-space: nowrap",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:nw": true
      }
    },
    "9bf0af92-99d2-3f53-9a1e-c94f5097e718": {
      "content": "<#assign\n\t${1:variable_name} = ${0:value${VISUAL}}\n/>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#assign <#-- multiple lines --> />",
      "matches": {
        "assm": true
      }
    },
    "9bf7dd28-52a9-3e4d-8d74-6425d4f2f885": {
      "content": "<input type=\"password\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:password": true
      }
    },
    "9bfa891e-4957-3f5b-85df-4c60b1f62dd5": {
      "content": "<fieldset id=\"${1}\">\n\t${0}\n</fieldset>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset#": true
      }
    },
    "9bffaa23-65dd-3a3a-ba5c-d7733a267987": {
      "content": "${1:pattern}${2: when ${3:guard}} ->\n\t${4:body}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "Case:Receive:Try Clause",
      "matches": {
        "pat": true
      }
    },
    "9c01ffe7-ded7-36cb-8649-eb66021a1723": {
      "content": "border-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      }
    },
    "9c02b853-5355-3147-803e-7c822f036bab": {
      "content": "$this->assertNotCount(${1:$count}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotCount($count, $haystack)",
      "matches": {
        "asnco": true
      }
    },
    "9c0587bb-d881-3234-b10e-99762f1d7d5e": {
      "content": "const ${1:store} = spring(${2:value}, ${3:options});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-spring",
      "matches": {
        "svelte spring": true,
        "svsp": true
      }
    },
    "9c0bf9ca-dd2b-3db5-bece-ec17b7d5faaf": {
      "content": "const ${1:name} = [\n\t${0}\n]",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const array",
      "matches": {
        "car": true
      }
    },
    "9c0dc608-1a7f-3129-a2e3-a3a96d7dfd18": {
      "content": "@unittest.skip(${1:skip_reason})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "skip unittests",
      "matches": {
        "sk": true
      }
    },
    "9c1265ef-01e9-3ad4-8a21-10743aa4c707": {
      "content": "_.chain()",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 }\n];\n\n// A sequence without explicit chaining.\n_(users).head();\n// => { 'user': 'barney', 'age': 36 }\n\n// A sequence with explicit chaining.\n_(users)\n  .chain()\n  .head()\n  .pick('user')\n  .value();\n// => { 'user': 'barney' }\n\nCreates a `lodash` wrapper instance with explicit method chain sequences enabled.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-chain",
      "matches": {
        "lodash chain": true
      }
    },
    "9c156be9-7beb-3233-ba6d-ee16f93ed675": {
      "content": "if ${1}\n\t${0:${VISUAL}}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "9c1dcd27-7e2c-373f-80e1-73f603875cd6": {
      "content": "${1:FIELDNAME} = models.BooleanField($2)",
      "doc": "BooleanField (mbool).\n\nA true/false field.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mbool",
      "matches": {
        "mbool": true
      }
    },
    "9c1edb99-a3ec-3bdd-86af-d1159339ab6a": {
      "content": "functor (${1:Arg} : ${2:ARG}) -> ${3:(* BODY *)}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "functor signature or anonymous functor",
      "matches": {
        "sigf": true
      }
    },
    "9c234df7-054e-3a27-b9f4-7fdf3dd402c1": {
      "content": "record\n\t${0}\nend record;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "record": true
      }
    },
    "9c29e7bf-6f42-335a-8aa5-a53e5b367cc1": {
      "content": "NSMutableDictionary ${0}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nsmd": true
      }
    },
    "9c2c2789-d8cd-3831-9915-da2c530dbd75": {
      "content": "OrientationBuilder(\n  builder: (BuildContext context, Orientation orientation) {\n    return Container(\n      child: ${3:child},\n    );\n  },\n),",
      "doc": "Creates a builder which allows for the orientation of the device to be specified and referenced",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Orientation Builder",
      "matches": {
        "orientationBldr": true
      }
    },
    "9c2cf411-d8d7-3c9e-a713-04ff438b2eb4": {
      "content": "while ${1:condition}:\n\t${2:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "9c2f9c47-c087-3953-a4f7-1b97ae3cce59": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bang": true
      }
    },
    "9c38a352-03dc-3092-9029-4a9ba1d2b52b": {
      "content": "<map name=\"$1\">\n\t$2\n</map>",
      "doc": "HTML - Defines an image map",
      "filetype": "html",
      "grammar": "lsp",
      "label": "map",
      "matches": {
        "map": true
      }
    },
    "9c3a9c4d-0736-3f37-9031-f04c6a4c6a1d": {
      "content": "describe('${1:description}', () => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "Describe (js)",
      "matches": {
        "des": true
      }
    },
    "9c3d9c75-6dd4-377c-9041-f3f7bd2d26fe": {
      "content": "t.column ${1:title}, :${2:string}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Create Column (mcc)",
      "matches": {
        "mcol": true
      }
    },
    "9c419003-991b-31c6-9da7-136055780d3c": {
      "content": "${1:name}\t${2:type}\t${3:default ''}\t${0:not null}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      }
    },
    "9c57cf9a-a132-372e-a3ea-19e82b615b96": {
      "content": "// Empties buffers. Call this when all previous issues commands completed\ngl.glFlush();\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl flush",
      "matches": {
        "gl": true
      }
    },
    "9c5a3bcf-b518-3f4d-8c7b-e10896f55712": {
      "content": "// https://eips.ethereum.org/EIPS/eip-2020\r\n// https://github.com/IoBuilders/em-token (example)\r\n// SPDX-License-Identifier: MIT\r\n/*\r\nThe E-Money Standard Token aims to enable the issuance of regulated electronic money on blockchain networks, and its practical usage in real financial applications.\r\n\r\nFinancial institutions work today with electronic systems,\r\nwhich hold account balances in databases on core banking systems.\r\nIn order for an institution to be allowed to maintain records of client balances segregated and available for clients,\r\nsuch institution must be regulated under a known legal framework and must possess a license to do so.\r\nMaintaining a license under regulatory supervision entails ensuring compliance (i.e. performing KYC on all clients and ensuring good AML practices before allowing transactions)\r\nand demonstrating technical and operational solvency through periodic audits,\r\nso clients depositing funds with the institution can rest assured that their money is safe.\r\n*/\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface EMoneyToken /* is ERC-1996, ERC-2018, ERC-2019, ERC-2021 */ {\r\n    function currency() external view returns (string memory);\r\n    function version() external pure returns (string memory);\r\n    function availableFunds(address account) external view returns (uint256);\r\n    function checkTransferAllowed(address from, address to, uint256 value) external view returns (byte status);\r\n    function checkApproveAllowed(address from, address spender, uint256 value) external view returns (byte status);\r\n    function checkHoldAllowed(address from, address to, address notary, uint256 value) external view returns (byte status);\r\n    function checkAuthorizeHoldOperatorAllowed(address operator, address from) external view returns (byte status);\r\n    function checkOrderTransferAllowed(address from, address to, uint256 value) external view returns (byte status);\r\n    function checkAuthorizeClearableTransferOperatorAllowed(address operator, address from) external view returns (byte status);\r\n    function checkOrderFundAllowed(address to, address operator, uint256 value) external view returns (byte status);\r\n    function checkAuthorizeFundOperatorAllowed(address operator, address to) external view returns (byte status);\r\n    function checkOrderPayoutAllowed(address from, address operator, uint256 value) external view returns (byte status);\r\n    function checkAuthorizePayoutOperatorAllowed(address operator, address from) external view returns (byte status);\r\n}",
      "doc": "Draft: EIP-2020: E-Money Standard Token. The E-Money Standard Token aims to enable the issuance of regulated electronic money on blockchain networks, and its practical usage in real financial applications.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc2020i",
      "matches": {
        "erc2020i-draft": true
      }
    },
    "9c5af0b4-7bb8-3b1c-9b76-b190fc2ce2af": {
      "content": "NSMutableArray *${1:#:array} = [NSMutableArray array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "9c60a26a-67ec-30fe-9bbc-aaf0f472535d": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      }
    },
    "9c63020b-4c19-35c4-88c5-3995c1079b76": {
      "content": "{% cache %}\n\t$1\n{% endcache %}\n$0",
      "doc": "cache",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "cache",
      "matches": {
        "cache": true
      }
    },
    "9c673ebf-44aa-3242-b04d-305a4795f47b": {
      "content": "formControlName=\"${1:control}\"",
      "doc": "Angular formControlName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormControlName",
      "matches": {
        "a-formControlName": true
      }
    },
    "9c68db59-5145-310d-a1e9-c701d228d718": {
      "content": "margin-right: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-right: length (margin)",
      "matches": {
        "margin": true
      }
    },
    "9c697ce7-dc54-3e17-98db-f7db120faf7e": {
      "content": "{% if ${1:condition} %}\n\t$2\n{% endif %}",
      "doc": "Control flow tag: if",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag if",
      "matches": {
        "if": true
      }
    },
    "9c6b93b9-222c-34d5-a91c-296acdb65d7f": {
      "content": "<h5>$1</h5>$2",
      "doc": "HTML - Defines header 5",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h5",
      "matches": {
        "h5": true
      }
    },
    "9c6f2d13-8cbd-3b83-8f03-0e6645fb1bba": {
      "content": "static ${1:STATIC}: ${2:Type} = ${4:init};",
      "doc": "static …: … = …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "static",
      "matches": {
        "static": true
      }
    },
    "9c72c7d5-202b-3561-9484-7a575e2b6c50": {
      "content": "try: ${1:pass}\ndefer: ${2:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trydefer": true
      }
    },
    "9c79b7fd-d2dc-3de3-a044-51368fdeb26e": {
      "content": "class ${1} extends ${2} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clax": true
      }
    },
    "9c840f92-31b6-3096-90e1-b1b0f68b8250": {
      "content": "border-bottom-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      }
    },
    "9c863fa3-2dfb-3bfb-ac32-bce619f4b7c7": {
      "content": "(${1:a}: ${2:T}) => $1 ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fcf": true
      }
    },
    "9c87c642-cd8c-3541-b8bb-d4743053c664": {
      "content": "$this->assertNotEquals(${1:$expected}, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotEquals($a, $b)",
      "matches": {
        "asne": true
      }
    },
    "9c88f05b-2e96-3c35-80b3-1ed7a5429b6b": {
      "content": "import ${0:module}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "9c9142c2-0d7a-3a68-9e6c-6082fbc58e92": {
      "content": "${1:obj}.keyup (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kup": true
      }
    },
    "9c9bb825-9f0e-3e90-b75d-3c2dfe37e8d0": {
      "content": "{% stylesheet '${1:scss}' %}\n\t${0}\n{% endstylesheet %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stylesheet_scss": true
      }
    },
    "9ca0d3e6-f87c-37c7-bedb-38f28533bd9a": {
      "content": "public void set${1}(${0:String} new${1}) {\n\t${1:fieldName} = new${1};\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "9ca1f45a-4cdf-3ad0-8fae-dfe1c0162a03": {
      "content": "padding-top: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-top: length (margin)",
      "matches": {
        "padding": true
      }
    },
    "9ca4f855-893e-32b8-b102-0db28fa2225a": {
      "content": "if err != nil {\n\tt.Fatalf(\"${0:message}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatalf(...) }",
      "matches": {
        "terf": true
      }
    },
    "9ca61c3c-b4ee-3fab-9ef0-5c168ac87a88": {
      "content": "defp ${1:name} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defp": true
      }
    },
    "9cae20a3-b5b3-30fb-82d3-d0810a9d8594": {
      "content": "{% elif ${1} %}\n\t${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "9cafd71a-428d-39b7-98f3-ef29911d6e4d": {
      "content": "${1:obj}.replaceWith(${2:content})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repw": true
      }
    },
    "9cb2290d-c16b-3af9-a36a-066557094d1a": {
      "content": "highp",
      "doc": "The qualifier highp is used to specify the highest available precision for a variable. The variable has to be an integer or a floating point scalar or a vector or matrix based on these types. The precision qualifier precedes the type in the variable declaration.\nIn the vertex shader the use of a precision qualifier is optional. If no qualifier is given all variables are of highest precision. In the fragment shader a precision qualifier has to be used when declaring a variable unless a default precision has been defined for the specific type.\n\nuniform highp vec3 lightDirection;\n\nThe actual range corresponding to a precision qualifier is dependent on the specific OpenGL ES implementation. Using a lower precision might have a positive effect on performance (frame rates) and power efficiency but might also cause a loss in rendering quality. The appropriate trade-off can only be determined by testing different precision configurations.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "highp",
      "matches": {
        "highp": true
      }
    },
    "9cb53969-4a0d-35f4-b0e6-10a6c02c4c87": {
      "content": "| img_url: '${1:medium}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_url": true
      }
    },
    "9cb69761-ceb7-3bd0-956e-3298a5443af0": {
      "content": "task ${1} is\n\tentry ${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task",
      "matches": {
        "task": true
      }
    },
    "9cba1cca-2687-3134-b460-a1a54995f70d": {
      "content": "place-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "9cbdfc45-4059-3c1d-acaa-780e2c927df0": {
      "content": "async (${1:arguments}) => {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "async arrow function",
      "matches": {
        "aa": true
      }
    },
    "9cc9125f-5911-3881-903c-a71247b65cf0": {
      "content": "cattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crw": true
      }
    },
    "9cc969a7-b8a0-3bc0-9fbd-719ef6b9a6c0": {
      "content": "echo CHtml::activeCheckBox(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhacb": true
      }
    },
    "9ccb3702-e5cb-3b95-b88c-6b106641842c": {
      "content": "parse(Int64, \"${1:value}\")",
      "doc": "Code snippet for parsing a String to Int64.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "parse Int",
      "matches": {
        "parsei": true,
        "pint": true
      }
    },
    "9cd7f4a9-419a-36a4-9207-c9cbcac3e77f": {
      "content": "const [${2:second}] = ${1:first}",
      "doc": "Creates and assigns a local variable using array destructing",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "destructingArray",
      "matches": {
        "dar": true
      }
    },
    "9cd876af-b646-390a-b280-9560b0fc68d4": {
      "content": "import PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importPropTypes",
      "matches": {
        "impt": true
      }
    },
    "9ce82c54-f42c-38aa-abc9-971823a69f0f": {
      "content": "Array.from(${1:document}.querySelectorAll('${2:selector}'))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "querySelectorAll",
      "matches": {
        "qsa": true
      }
    },
    "9cf00afe-88b7-357d-a555-a0317867f9ca": {
      "content": "expect(${1:target}).not.toMatch(${2:pattern});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to match (js)",
      "matches": {
        "notm": true
      }
    },
    "9cf99d5a-7c78-338f-8c22-f53f7eff8ed8": {
      "content": "_.take(${array}, ${n})",
      "doc": "_.take([1, 2, 3]);\n// => [1]\n\n_.take([1, 2, 3], 2);\n// => [1, 2]\n\n_.take([1, 2, 3], 5);\n// => [1, 2, 3]\n\n_.take([1, 2, 3], 0);\n// => []\n\nCreates a slice of `array` with `n` elements taken from the beginning.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-take",
      "matches": {
        "lodash take": true
      }
    },
    "9cfa8280-c404-31ce-b624-14cb63c3d03a": {
      "content": "{% ${1} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%": true
      }
    },
    "9d06559c-6ea7-37e6-bc5d-b80df0c28532": {
      "content": "module ${1:M} (${2:Arg} : ${3:ARG}) = struct\n\t${4:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "define functor - no signature",
      "matches": {
        "func": true
      }
    },
    "9d0a73a7-0d83-3c0d-af81-a0ed04a72f19": {
      "content": "-export([\n         ${1}\n        ]).",
      "doc": "export",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "export",
      "matches": {
        "exp": true
      }
    },
    "9d0b1be4-4a90-30e5-867b-1ea5c37db615": {
      "content": "func Example${1:Method}() {\n\t${0}\n\t// Output:\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "example": true
      }
    },
    "9d0d6f43-e63f-3a58-ad87-1364e266681d": {
      "content": "word-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      }
    },
    "9d16fd8c-7865-3886-8f46-5bb2c08db3d6": {
      "content": "<style lang=\"scss\" scoped>\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with scss scoped",
      "matches": {
        "style_with_scss_scoped": true
      }
    },
    "9d1a1856-1541-3674-9b3f-7d2f758d0074": {
      "content": "<slot ${1:prop}={${2:value}}>${3:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-prop",
      "matches": {
        "svelte slot prop": true,
        "svsp": true
      }
    },
    "9d1a5021-d323-3e3c-9642-c03d7385414e": {
      "content": "font-stretch extra-expanded",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      }
    },
    "9d21fd7e-c240-3bfc-a6d7-10369b4a53fb": {
      "content": "import React, { useState, useEffect } from 'react'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-usestate-useeffect",
      "matches": {
        "imrse": true,
        "react import usestate useeffect": true
      }
    },
    "9d257ffe-40c1-3b8c-abe8-23137dc90c5b": {
      "content": "@protected",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@protected",
      "matches": {
        "@pro": true
      }
    },
    "9d2b7605-ddc5-3f41-a39e-3f9b3a7c8082": {
      "content": "^[${1:Inline footnotes text.}]$0",
      "doc": "Insert inline footnotes",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert inline footnotes",
      "matches": {
        "inline footnotes": true
      }
    },
    "9d30604f-50b1-3743-a33b-4c4d677292fb": {
      "content": "$.isFunction(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfunc": true
      }
    },
    "9d3a0a5c-8d1e-3256-bbfb-ee937d22f217": {
      "content": "@override\nvoid dispose() { \n  ${0:}\n  super.dispose();\n}",
      "doc": "Called when this object is removed from the tree permanently. The framework calls this method when this State object will never build again.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Dispose",
      "matches": {
        "dis": true
      }
    },
    "9d3f613c-b272-3356-b1ec-516ca5bfb363": {
      "content": "PropTypes.oneOfType([\n\t$0\n]).isRequired,",
      "doc": "An object that could be one of many types required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-one-of-type-required",
      "matches": {
        "prop-types oneoftype required": true,
        "ptetr": true
      }
    },
    "9d402313-4b4e-3753-bce2-387fba6d1cee": {
      "content": "\\${${1:width}}    \\${${2:height}}=    Get Window Size",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Get Window Size",
      "matches": {
        "gws": true
      }
    },
    "9d4a5a2a-f722-3da7-b52b-488a108b4232": {
      "content": "text-outline ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      }
    },
    "9d4f2b0f-7113-3353-97db-ff4d036656a4": {
      "content": "<ul>\n\t<li>${1}</li>\n\tli+${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul+": true
      }
    },
    "9d5b46e5-2f0b-3952-867a-2abe2835457a": {
      "content": "loop (my ${1:$i} = 0; $$1 < ${2:count}; $$1++) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      }
    },
    "9d5bb7c5-7265-3988-8541-a90d903128d7": {
      "content": "_.pick(${object}, ${paths})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pick(object, ['a', 'c']);\n// => { 'a': 1, 'c': 3 }\n\nCreates an object composed of the picked `object` properties.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pick",
      "matches": {
        "lodash pick": true
      }
    },
    "9d5cedc0-9633-3ea1-a050-22e3c7a75fe1": {
      "content": "std.algorithm",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "algo": true
      }
    },
    "9d5dcfa9-9984-3aaa-8576-fda78e4136f8": {
      "content": "${1:expression} if ${2:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional one-line (xif)",
      "matches": {
        "xif": true
      }
    },
    "9d602434-9107-3b3f-8d1d-6f04954172b8": {
      "content": "reverse(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reverse": true
      }
    },
    "9d621dad-7491-3b5d-80a4-92c4dbe24f54": {
      "content": "text-height: font-size;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      }
    },
    "9d62f439-c8a6-342a-af3c-e32407dbbe6f": {
      "content": "<style lang=\"postcss\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with postcss",
      "matches": {
        "style_with_postcss": true
      }
    },
    "9d6352a2-2b0e-3f34-9d52-e29b5705c1e6": {
      "content": "extension ${1:Int} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extension": true
      }
    },
    "9d6494dc-991c-3d0d-9eb0-72d8306ec7b4": {
      "content": "{% comment %}\n\t$1\n{% endcomment %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "9d697413-084b-3cbc-af51-240267c07aab": {
      "content": "flexShrink: '${1}',",
      "doc": "flexShrink",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flexShrink",
      "matches": {
        "flex": true
      }
    },
    "9d6af281-deab-3b28-a520-52cd0411f619": {
      "content": "routes {\n\t/ {\n\t\t${1:Application.setPage(\"index\")}\n\t}\n\t/${2:user}/:${3:id} {\n\t\t do {\n\t\t\t${4:Application.setPage(\"show\")}\n\t\t\t${5:Application.loadUser(id)}\n\t\t}\n\t}\n}",
      "doc": "In Mint routes of an application are defined at the top level with the routes block.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Routes",
      "matches": {
        "routes": true
      }
    },
    "9d759a5e-b02c-3f8c-965b-b68038615c6a": {
      "content": "on:${1:eventname}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-forward",
      "matches": {
        "svelte on event foward": true,
        "svon-foward": true
      }
    },
    "9d85bcf0-5773-3c6c-883d-fa6933869ee4": {
      "content": "dispatch_get_global_queue(${1:intptr_t identifier}, ${2:uintptr_t flags})",
      "doc": "Create a dispatch_get_global_queue",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch get global queue",
      "matches": {
        "dispatchgetglobalqueue": true
      }
    },
    "9d87c36f-8782-3bbe-b04e-f7b90ce27d82": {
      "content": "list-style-type: circle;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      }
    },
    "9d8c5d86-cbe1-3ea2-b711-835c7c7e90a0": {
      "content": "background-color transparent",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      }
    },
    "9d8c6196-d2fb-3810-83c4-77323a20b25e": {
      "content": "detect { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "det": true
      }
    },
    "9d8e1ab2-4d8b-3a39-86f6-aefc063ee204": {
      "content": "cos($2)",
      "doc": "float cos(float angle)\nvec2 cos(vec2 angle)\nvec3 cos(vec3 angle)\nvec4 cos(vec4 angle)\n\nThe cos function returns the cosine of an angle in radians. The input parameter can be a floating scalar or a float vector. In case of a float vector the cosine is calculated separately for every component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "cos",
      "matches": {
        "cos": true
      }
    },
    "9d8fa175-00e6-3aa5-99cc-fcad85a3563a": {
      "content": "echo CHtml::resetButton('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrsb": true
      }
    },
    "9d91658d-82f6-3c3a-97dd-bb7c52c8934d": {
      "content": "interface ${1} {\n\t${2}: ${3:any};\n\t${0}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "int": true
      }
    },
    "9d91b561-772f-3bad-bc8e-7eac96071411": {
      "content": "fontStyle: '${1:normal}',",
      "doc": "fontStyle",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "fontStyle",
      "matches": {
        "fo": true
      }
    },
    "9d95993c-11cc-3d91-94b0-af00ddf206b0": {
      "content": "\\\\sum_{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "summation",
      "matches": {
        "summ": true
      }
    },
    "9d972914-b742-334b-ab01-2885e7bd6cbf": {
      "content": "method ${1:!}${2:method_name}(${3:$attr}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pmth": true
      }
    },
    "9d9d90d1-eaa6-385c-8c37-372b9b013cea": {
      "content": "{% url ${1} as ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "9da367f6-1cd9-3bc6-ba9d-a69e8990a77e": {
      "content": "nextScene();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      }
    },
    "9da3f18d-f378-3dc6-b04e-12b0d857f06d": {
      "content": "triangle(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${0:y3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "triangle": true
      }
    },
    "9da45ce1-e804-3bf7-9e93-9814dc84b814": {
      "content": "{% verbatim %}\n\t${0:TARGET}\n{% endverbatim %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% verbatim %} ... {% endverbatim %}",
      "matches": {
        "verbatim": true
      }
    },
    "9da5180e-1678-3e4c-8655-bb8d2fbbc498": {
      "content": "${1:FIELDNAME} = forms.IntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IntegerField",
      "matches": {
        "fint": true
      }
    },
    "9da6e54c-8dff-36b7-a094-d30691c36e2c": {
      "content": "background-clip: padding-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:pb": true
      }
    },
    "9dad58fe-e32b-3adf-99d5-ca6f3fd6ce0d": {
      "content": "onMounted(() => {${1}})",
      "doc": "Vue Mounted Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onMounted",
      "matches": {
        "v3onmounted": true
      }
    },
    "9db70134-1416-3de0-9c3b-1b065ecac16b": {
      "content": "::: {.lemma #${1:label} name=\"${2:lemma name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown lemma",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown lemma",
      "matches": {
        "lemma": true
      }
    },
    "9db8ff6a-20cd-3b97-b249-97da21d2381b": {
      "content": "from ${1:package} import ${0:module}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "from": true
      }
    },
    "9dc44f3f-c6bd-306d-b6ad-05e541b06d34": {
      "content": "\\begin{trivlist}\n\t${1:TARGET}\n\\end{trivlist}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{trivlist} \\trivlist": true,
        "trivlist": true
      }
    },
    "9dc631ab-fb23-3137-90d4-d2dc1da7a717": {
      "content": "import ${0:module_name}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "9dc7324a-f287-349d-baf4-2a393a8548ac": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      }
    },
    "9dc85eb2-e514-351a-a68b-a60bcf38a727": {
      "content": "alpha(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alpha": true
      }
    },
    "9dcac734-9251-3df2-a50e-3a974ca1b6b1": {
      "content": "visibility collapse",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      }
    },
    "9dcbba9f-2373-384c-951e-82e1979f2d06": {
      "content": "(defrecord ${1:record} [${2:constructor-args}]\n  ${3:protocol} (${3:method} [${5}] ${6}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defrecord": true
      }
    },
    "9dcf56a3-5190-39f4-9053-fbd9f581c4c9": {
      "content": "${0:root} = exports ? this",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "9dd234cf-8aeb-316a-8473-27ab78eaed14": {
      "content": "${1|this,vm|}.\\$isServer$2",
      "doc": "Type: boolean. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$isServer",
      "matches": {
        "vmIsServer": true
      }
    },
    "9dd9172e-20e4-3cc2-b349-e9cb8e92d480": {
      "content": "afterEach(function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "afterEach(function() { ... })",
      "matches": {
        "afte": true
      }
    },
    "9ddab132-e13d-3d97-a2d4-635853193c39": {
      "content": "while [[ ${1:condition} ]]; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "9de0a589-7a17-3fd3-baea-0951d30fa187": {
      "content": "try {\n\t$0\n} catch (${1:error}) {\n\t\n}",
      "doc": "Try-Catch Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Try-Catch Statement",
      "matches": {
        "trycatch": true
      }
    },
    "9de0c069-3db5-3b16-98d4-14f32ac01cd2": {
      "content": "@admin.register(${1})\nclass ${1}Admin(admin.ModelAdmin):\n\t'''Admin View for ${1}'''\n\n\tlist_display = ('${2}',)\n\tlist_filter = ('${3}',)\n\tinlines = [\n\t\t${4}Inline,\n\t]\n\traw_id_fields = ('${5}',)\n\treadonly_fields = ('${6}',)\n\tsearch_fields = ('${7}',)\n\tdate_hierarchy = '${8}'\n\tordering = ('${9}',)",
      "doc": "Model Admin View",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "adminview",
      "matches": {
        "adminview": true
      }
    },
    "9de0f5bb-4cfd-3003-a0db-b639ec235684": {
      "content": "attr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert attr_accessor",
      "matches": {
        "rw": true
      }
    },
    "9dec41d8-9e68-3297-a60c-0e560eabbbdd": {
      "content": "{%- include '${1:snippet}', ${2:variable}: ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "includewith-": true
      }
    },
    "9df4aad0-b91c-3b0d-903e-b990a04b9ac9": {
      "content": "type ${1:}\n\t${2}\nend type $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "type",
      "matches": {
        "ty": true
      }
    },
    "9df4ad36-4bab-3309-ac66-6e3d9234a843": {
      "content": "{% schema %}\n\t{\n\t\t${0}\n\t}\n{% endschema %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "schema": true
      }
    },
    "9dfd4cca-5253-3a50-991a-b5d824953499": {
      "content": "<#list ${1:sequence} as ${2:element}>\n\t${0:${VISUAL}}\n</#list>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#list sequence as element>...</#list>",
      "matches": {
        "lis": true
      }
    },
    "9e05bcb2-fdad-3172-9c3c-d7d5de2f5ea4": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:Console.WriteLine(e.Message);}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch () {}",
      "matches": {
        "try": true,
        "try_catch": true
      }
    },
    "9e0fed06-2da9-3228-be59-fe30ea37e680": {
      "content": "<button type=\"submit\">${1:TARGET}</button>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "buttonsubmit": true
      }
    },
    "9e114e52-1aae-365c-b1c9-d5bfeb216af2": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "9e135afd-087c-340d-8283-c2fd76dec96c": {
      "content": "\\$_REQUEST['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "request": true
      }
    },
    "9e14e8cc-0abf-3796-9de5-4ad3ac858878": {
      "content": "import { HttpInterceptor, HttpHandler, HttpRequest, HttpEvent, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable()\nexport class LogInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst started = Date.now();\n\t\treturn next.handle(req).pipe(\n\t\t\ttap(event => {\n\t\t\t\tif (event instanceof HttpResponse) {\n\t\t\t\t\tconst elapsed = Date.now() - started;\n\t\t\t\t\tconsole.log(`Request for \\${req.urlWithParams} took \\${elapsed} ms.`);\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}",
      "doc": "Angular HttpInterceptor for Logging HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor for Logging",
      "matches": {
        "a-http-interceptor-logging": true
      }
    },
    "9e17875d-c5d1-3c7a-9088-d1492bba7732": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default{\n\t\t${0}\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vbase": true
      }
    },
    "9e1cd97a-be51-36c1-8128-e1bcc094b3a0": {
      "content": "<tfoot>\n\t${0}\n</tfoot>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tfoot": true
      }
    },
    "9e1ecbf1-20e1-3883-8669-7fbf06e44380": {
      "content": "Ada.Text_IO.Get_Line(${1});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get_Line",
      "matches": {
        "getl": true
      }
    },
    "9e2592a6-635e-3f16-9f1a-48b7a285756e": {
      "content": "console.error(${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "console.error",
      "matches": {
        "ce": true
      }
    },
    "9e2728ac-accb-39a6-a525-b607de6ad53b": {
      "content": "{{ ${1:#:TARGET} }}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "{{ }}",
      "matches": {
        "output": true,
        "{{": true
      }
    },
    "9e2ae1d4-3053-3a11-a54b-6a45a6ddbc84": {
      "content": "${1:obj}.resize(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resize": true
      }
    },
    "9e315f55-b3d4-3856-8904-35162ee071bc": {
      "content": "${1:router}.go($2)$0",
      "doc": "router.go()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerGo",
      "matches": {
        "routerGo": true
      }
    },
    "9e3cd6e5-3f9a-3da7-a807-6b644cea8c92": {
      "content": "mixed.validate()",
      "doc": "mixed.validate(value: any, options?: object): Promise<any, ValidationError>\n\nReturns the value (a cast value if isStrict is false) if the value is valid, and returns the errors otherwise.\nThis method is asynchronous and returns a Promise object, that is fulfilled with the value, or rejected\nwith a ValidationError.The options argument is an object hash containing any schema options you may want to override\n(or specify for the first time).Options = {\n  strict: boolean = false;\n  abortEarly: boolean = true;\n  stripUnknown: boolean = false;\n  recursive: boolean = true;\n  context?: object;\n}\n\nstrict: only validate the input, and skip and coercion or transformation\nabortEarly: return from validation methods on the first error rather\nthan after all validations run.\nstripUnknown: remove unspecified keys from objects.\nrecursive: when false validations will not descend into nested schema\n(relevant for objects or arrays).\ncontext: any context needed for validating schema conditions (see: when())\nschema.validate({ name: \"jimmy\", age: 24 }).then(function(value) {\n  value; // => { name: 'jimmy',age: 24 }\n});\n\nschema.validate({ name: \"jimmy\", age: \"hi\" }).catch(function(err) {\n  err.name; // => 'ValidationError'\n  err.errors; // => ['age must be a number']\n});",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate",
      "matches": {
        "yup mixed validate": true
      }
    },
    "9e3da893-12ba-39c1-a2ac-be33c7dfa987": {
      "content": "else\n\t${1}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "9e3ee8bf-c811-3863-a2d5-37dd17252765": {
      "content": "laply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "la": true
      }
    },
    "9e3f2d81-b51a-3369-b117-17f6102a1a74": {
      "content": "slot=\"$1\"$0",
      "doc": "slot=''. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "slotA",
      "matches": {
        "slotA": true
      }
    },
    "9e401bbb-6749-3b9b-bfdf-8f3e33b56ea0": {
      "content": "this.$route.params.${1:id}",
      "doc": "Nuxt Route Params",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Route Params",
      "matches": {
        "nparam": true
      }
    },
    "9e44251f-2d2d-38af-89a1-78f4db501169": {
      "content": "try {\n\t${1:TARGET}\n} catch (${2:#:Exception} $e) {\n\t${3:#:code}\n} finally {\n\t${4:#:code}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tryf": true
      }
    },
    "9e4803cd-1183-3d5f-9899-f6eeb50e308a": {
      "content": "created() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "created",
      "matches": {
        "created": true
      }
    },
    "9e491820-ca60-3841-afd5-1ee631ccaabe": {
      "content": "data ${1:variable} / ${2:data} /",
      "doc": "data",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "data",
      "matches": {
        "data": true
      }
    },
    "9e5e3cfd-8bcf-31be-ab18-b8c969b5eb86": {
      "content": "display: table-caption",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      }
    },
    "9e61a5f5-ecca-36d9-a378-f710e26d1088": {
      "content": "it('${1:description}', inject(function($2) {\n\t$0\n}));",
      "doc": "",
      "filetype": "javascript-angular",
      "grammar": "snu",
      "label": "it (js, inject)",
      "matches": {
        "iti": true
      }
    },
    "9e61d2f4-b968-380f-ae2f-42431a9dcdea": {
      "content": "create or replace package ${1:name}\nas\n\t${0:-- spec}\nend; -- end of package spec $1",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "9e67fee6-625e-3753-b14a-1d139852ddcd": {
      "content": "${1:obj}.unwrap()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unwrap": true
      }
    },
    "9e6b3c06-782c-3268-b537-bc63fd84d636": {
      "content": "text-wrap unrestricted",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      }
    },
    "9e6bbef0-f56e-33f0-9a48-8effba5a6b62": {
      "content": "<slot ${1:prop}={${2:value}}>${3:<!-- optional fallback -->}</slot>",
      "doc": "slot w/ prop",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-prop",
      "matches": {
        "s-slot-prop": true
      }
    },
    "9e6bd9cf-1e1d-358f-b86d-07be913ddf23": {
      "content": "const ${1:actionCreatorName} = ${2:payload} => {\n  return {\n    type: '${3:ACTION_TYPE}',\n    payload: ${2:payload},\n  };\n};",
      "doc": "Redux action template",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-action",
      "matches": {
        "redux action": true,
        "rxaction": true
      }
    },
    "9e72ab79-194a-3655-b9c7-f0eef02a2345": {
      "content": "text-outline: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to": true
      }
    },
    "9e762e71-1190-3af2-979f-8fade6d4a7f6": {
      "content": "${1:FIELDNAME} = models.URLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "URLField",
      "matches": {
        "murl": true
      }
    },
    "9e787778-e277-30d6-a4bd-95a1b49ad96b": {
      "content": "{% redirect \"${1:template/path or http://straightupcraft.com}\" %}\n$0",
      "doc": "redirect",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "redirect",
      "matches": {
        "redirect": true
      }
    },
    "9e79a325-9e66-3bf4-8ada-daced4b1e1b0": {
      "content": "filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      }
    },
    "9e79eb9a-160e-34c7-b8f9-c961d45e536f": {
      "content": "#include <${1:stdio}.h>",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "9e7b14de-ae58-3ed9-9b9c-9d27b52b1772": {
      "content": "for (${1:item} <- ${2:obj}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "9e7bb759-668b-3cae-a9b9-532ddf928a95": {
      "content": "min(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "array",
      "matches": {
        "min": true
      }
    },
    "9e7d5efc-f411-3992-893c-3a8c7eea14fe": {
      "content": "func Benchmark${1:Method}(b *testing.B) {\n\tfor i := 0; i < b.N; i++ {\n\t\t${0:${VISUAL}}\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func BenchmarkXYZ(b *testing.B) { ... }",
      "matches": {
        "benchmark": true
      }
    },
    "9e7df374-4814-3dbd-8e79-1e356f8d6dcd": {
      "content": "if ${1:condition} then ${2:value} else ${3:other}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifte": true
      }
    },
    "9e89b8e4-1b19-32d4-b730-f20fcefa9809": {
      "content": "<script>\n${1:TARGET}\n</script>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script": true
      }
    },
    "9e8afcfa-46d2-322e-9482-7f6f4064c106": {
      "content": "expect(${1:target}).not.toContain(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to contain (coffee)",
      "matches": {
        "notc": true
      }
    },
    "9e8b44c7-ca09-3a21-a6ee-f25f932eeb3b": {
      "content": "-> { ${1} }.must_raise ${0:StandardError}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mra": true
      }
    },
    "9e8edec9-7833-3767-b953-5356a9a7bc6c": {
      "content": "import ${1:defaultMember} from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import defaultMember from \"module-name\";",
      "matches": {
        "import-default": true
      }
    },
    "9e967872-b55e-3c32-aebc-e2e5d55bb92c": {
      "content": "<ol type=\"I\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "olI": true
      }
    },
    "9e9d0be5-2260-3ded-8b26-01993dd5a93c": {
      "content": "@scope(\"${1:Math}\") @val external ${2:random}: ${3:unit => float} = \"${4:random}\"",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Global External Module",
      "matches": {
        "@bs": true,
        "external": true
      }
    },
    "9e9eadde-4deb-3a42-a408-9fa54f8a8fbc": {
      "content": "readinessProbe:\n  httpGet:\n\tpath: /go/api/v1/health\n\tport: 8153\n  initialDelaySeconds: {{ .Values.$1.healthCheck.initialDelaySeconds }}\n  periodSeconds: {{ .Values.$1.healthCheck.periodSeconds }}\n  failureThreshold: {{ .Values.$1.healthCheck.failureThreshold }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "readinessProbe_spec": true
      }
    },
    "9e9f5244-41c7-3eb3-886d-838b2eabedb5": {
      "content": "logger.fatal { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.fatal",
      "matches": {
        "logf": true
      }
    },
    "9ea1692a-177f-35b0-a16e-4bbdfd9d671d": {
      "content": "import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n})\n\n${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {\n\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React Memo Function Component with ES7 module system with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-function-memo-component-proptypes",
      "matches": {
        "react component function memo proptypes": true,
        "rmcp": true
      }
    },
    "9ea36c49-16b9-3da3-bc42-b7f6c7d5b8f5": {
      "content": "font-smooth: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      }
    },
    "9ea429e7-d8a4-3b14-9281-14af93537423": {
      "content": "while($2){\n\t\n}",
      "doc": "while(){\n\t//code\n}\n\nThe keyword while is used to describe a loop that is controlled by a condition. The parentheses enclose the expression that defines the condition. The body defined by curly braces encloses the statements that are executed at each pass of the loop.\n\nwhile(i <= 99){\n\taFunction();\n}\n\nThe execution of a single pass or the whole loop can be aborted by using a continue or a break statement respectively.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "9ea858fe-0e31-39cb-8bdd-a6e5c7545476": {
      "content": "_.compact(${array})",
      "doc": "_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]\n\nCreates an array with all falsey values removed. The values `false`, `null`,\n`0`, `\"\"`, `undefined`, and `NaN` are falsey.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-compact",
      "matches": {
        "lodash compact": true
      }
    },
    "9eaaad2f-5b6f-3d6d-ac65-b38610410b63": {
      "content": "${1:FIELDNAME} = forms.DecimalField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DecimalField",
      "matches": {
        "fdecimal": true
      }
    },
    "9eac2672-2e26-3ed1-b2b4-c93a9c942b57": {
      "content": "computed: {\n\t$1\n},$0",
      "doc": "Computed properties to be mixed into the Vue instance.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "computed",
      "matches": {
        "computed": true
      }
    },
    "9ebc47bb-d16c-3908-a0ee-c6d976b04759": {
      "content": "${1}.reduce((${2:previous}, ${3:current}) => {\n\t${0}\n}${4:, initial});",
      "doc": "reduce",
      "filetype": "base",
      "grammar": "lsp",
      "label": "reduce",
      "matches": {
        "base reduce": true
      }
    },
    "9ec2ed1f-6b19-3b67-881d-7b13d800744d": {
      "content": "place-content stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      }
    },
    "9ec33666-7c14-311c-b10d-d0d124ca696f": {
      "content": "${1:FIELDNAME} = serializers.SerializerMethodField(${2})\ndef get_$1(self, object):\n\treturn",
      "doc": "Django-rest Serializers ``SerializerMethodField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF SerializerMethodField",
      "matches": {
        "ssmethod": true
      }
    },
    "9ec4ea8b-9e23-3c51-ab5a-6f01395a292e": {
      "content": "loop {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "loop {}",
      "matches": {
        "loop": true
      }
    },
    "9ec5dd3b-218e-36ac-a78a-089a384c1352": {
      "content": "\\ **${1:Strong emphasis}**\\ ${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**c": true
      }
    },
    "9ec67462-3053-348c-bbdb-ad3619880b41": {
      "content": "border-radius: ${0:2px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-radius",
      "matches": {
        "br": true
      }
    },
    "9ec84d69-faf3-38c8-9680-34127469a3d2": {
      "content": "{% set ${1:x} = ${0:y} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "9ecb2038-6089-3022-9390-6dbac298ed41": {
      "content": "overflow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      }
    },
    "9ecd7424-c439-382e-ba66-1c88e0883610": {
      "content": "maxHeight: ${1},",
      "doc": "maxHeight",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "maxHeight",
      "matches": {
        "max": true
      }
    },
    "9edd64c1-acfb-3fb7-810f-d7d309f627e3": {
      "content": "data ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      }
    },
    "9ee02afb-e53f-3f2c-95f2-35eb4a48449b": {
      "content": "dictsortreversed:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      }
    },
    "9ee123d5-0a1a-34f4-b9b1-c38b0f44af5f": {
      "content": "perform ${1:paragraph-name} varying ${2:field-1}\n from ${3:value-1} by ${4:value-2}\n until ${5:condition}\n$0",
      "doc": "inline perform varying",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "perform varying",
      "matches": {
        "perform": true,
        "pv": true
      }
    },
    "9ef823a5-b9ad-304e-8ad9-3a93f497ed89": {
      "content": "default:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "9ef937c6-aa9d-33c1-9561-8c78dbba8c51": {
      "content": "(require ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "9f01615f-ea0d-313d-8246-eef10fa83bff": {
      "content": "if (${1:condition}) {\n\t$0\n}",
      "doc": "if statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "9f04d77f-6855-3311-bb0a-d2fb66e28549": {
      "content": "echo CHtml::submitButton('${1:label}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhsb": true
      }
    },
    "9f0b7082-ef2c-3d54-bed6-b2d4b4829d57": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      }
    },
    "9f1403a9-0d8e-36a7-a798-4a484695a16f": {
      "content": "<cite>${0}</cite>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cite": true
      }
    },
    "9f16d9f8-a889-3fba-8296-15a37d62a291": {
      "content": "border-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      }
    },
    "9f1a48b0-2acb-3c10-a321-21d970c5b827": {
      "content": "require 'debugger'; debugger",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug19": true
      }
    },
    "9f1bac89-67e7-32eb-b08c-c0b3a3f5729a": {
      "content": "<xsl:param name=\"${1:name}\">${2}\n</xsl:param>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "9f1bd201-d6e6-3c77-ae93-0725c0fdfee4": {
      "content": "PropTypes.objectOf(PropTypes.shape($0)).isRequired,",
      "doc": "An object whose keys are known ahead of time required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectOfShapeRequired",
      "matches": {
        "ptoosr": true
      }
    },
    "9f2e02bc-76ed-3e6e-88ed-7d279c30a4aa": {
      "content": "import ${0:Data.List}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "9f2ee744-a019-3e9b-a660-db7a60955dee": {
      "content": "process (${1:clk}, ${2:nrst})\nbegin\n\tif ($2 = '${3:0}') then\n\t\t${4}\n\telsif rising_edge($1) then\n\t\t${5}\n\tend if;\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prcr": true
      }
    },
    "9f36071e-326e-3716-b656-21c6652828de": {
      "content": "else if ($1)\n{\n\t$0\n}",
      "doc": "Code snippet for else-if statement",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "else if": true
      }
    },
    "9f36ab57-0201-3bf4-8444-66c6321da5ca": {
      "content": "overflow: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:h": true
      }
    },
    "9f38a734-dd59-3e04-ba07-5c4f8bdd4537": {
      "content": "object\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object",
      "matches": {
        "obj": true
      }
    },
    "9f3e492b-69e4-3bf5-9471-5ee79363c31e": {
      "content": "(println ${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "9f3e8158-049b-3a09-bdfc-5bcd1794afdb": {
      "content": "${1:obj}.each(function (index) {\n\t${0:this.innerHTML = this + \" is the element, \" + index + \" is the position\";}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "9f41a2e5-4e5b-3b12-83ef-e130f0d57a8f": {
      "content": "atan(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atan": true
      }
    },
    "9f42a623-8783-359c-9878-d72e28009552": {
      "content": "must_include ${0:what}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      }
    },
    "9f4467aa-4cd4-3a6c-9213-a062763decf8": {
      "content": "$.grep(${1:array}, (item, index) >\n\t${2}\n${0:, true})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grep": true
      }
    },
    "9f5486c9-673e-3846-8693-7185df178103": {
      "content": "type ${1:type name}\r\n\t$0\r\nend type $1",
      "doc": "Type Definition",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "type",
      "matches": {
        "type": true
      }
    },
    "9f568f8c-7f4d-33bf-a610-034fd42783fc": {
      "content": "resize ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz": true
      }
    },
    "9f5a684a-4ea5-3af5-850b-879828b85f4c": {
      "content": "if (${1}) {\n\t${2}\n}${3: else}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "9f5b5b95-6c47-304c-8596-3678a292a84c": {
      "content": "prevScene();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps": true
      }
    },
    "9f5cec32-449b-3935-9907-1e8a6e5c50a3": {
      "content": "{% widthratio ${this_value} max_value 100 %}",
      "doc": "widthratio tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "widthratio",
      "matches": {
        "widthratio": true
      }
    },
    "9f5ff0ac-d63f-3070-bcb5-8345e421961f": {
      "content": "border-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl": true
      }
    },
    "9f6aff78-7112-3d09-952c-8ebf2ba2bede": {
      "content": "text-justify: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      }
    },
    "9f7abfc7-c998-3a21-bbe5-00049a77b573": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t}\n},",
      "doc": "Vue Component Data",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-data",
      "matches": {
        "vdata": true,
        "vue data": true
      }
    },
    "9f7ef2ad-1019-33f9-97ce-9953006474d7": {
      "content": "new Promise((resolve, reject) => {\n\t${0}\n})",
      "doc": "Promise (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-es6-",
      "matches": {
        "base promise": true
      }
    },
    "9f81e4bb-f74e-39b5-8d82-1b43d684ddc4": {
      "content": "height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true,
        "height": true
      }
    },
    "9f828102-3275-3186-a5c3-0a2b90aabcaa": {
      "content": "- if ${1:condition}.presence?\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifp": true
      }
    },
    "9f8323b9-6194-37df-b359-ed7b46299d9f": {
      "content": "\\\\item ${1}\n\t${0:]i}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\item (recursive)",
      "matches": {
        "]i": true
      }
    },
    "9f850018-b4f5-348e-a394-7c09aaf81777": {
      "content": "${1:router}.forward($2)$0",
      "doc": "router.forward()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerForward",
      "matches": {
        "routerForward": true
      }
    },
    "9f87b426-de5d-308e-a929-8aabeb605365": {
      "content": "font-smooth: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      }
    },
    "9f885ae3-6ce6-3bb2-bf9c-c478e07035b0": {
      "content": "<value>${0:#:description}</value>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<value></value>",
      "matches": {
        "value": true
      }
    },
    "9f89fe62-e653-3fba-bb87-de61d5dce2fa": {
      "content": "switch (${1:switch_on}) {\n\tdefault:\n\t\t$0\n\t\tbreak;\n}",
      "doc": "Code snippet for switch statement",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "9f8bea55-f002-3c90-9397-4f3f77d7df7e": {
      "content": "console.group('${1:first}')",
      "doc": "Groups and indents all following output by an additional level, until console.groupEnd() is called.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleGroup",
      "matches": {
        "cgr": true
      }
    },
    "9f90bdd7-b2fd-33c2-a37a-a27978122179": {
      "content": "<input type=\"month\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:month": true
      }
    },
    "9f93ff1e-1c74-31f5-9615-c7ecefdc4c20": {
      "content": "<hgroup>\n\t$1\n</hgroup>",
      "doc": "HTML - Defines information about a section in a document",
      "filetype": "html",
      "grammar": "lsp",
      "label": "hgroup",
      "matches": {
        "hgroup": true
      }
    },
    "9f951891-356b-3c77-b5a5-4e609c5f2f0a": {
      "content": "word-wrap suppress",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      }
    },
    "9f97bc67-e95d-3e03-b30e-0eece3f55e9c": {
      "content": "public class ${1} extends ${2:TestCase} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true,
        "testclass": true
      }
    },
    "9f9fa935-7976-30d0-bf92-83892defaa73": {
      "content": "margin-left: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin-left",
      "matches": {
        "marl": true
      }
    },
    "9fa8d9fd-c30f-3346-9ccc-d79513022a96": {
      "content": "<LimitExcept ${1:POST GET}>\n\t${0:${VISUAL}}\n</LimitExcept>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "limitexcept": true
      }
    },
    "9faac852-e0d8-33be-a3b8-0c60fb18cb7e": {
      "content": "v-else-if=\"${1:condition}\"",
      "doc": "Expects: any. previous sibling element must have v-if or v-else-if.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-else-if",
      "matches": {
        "vElseIf": true
      }
    },
    "9faee55e-0a60-37df-88ba-4ff61a025f5f": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "default: ...",
      "matches": {
        "default": true
      }
    },
    "9fbda6a8-d4bd-37c3-9ae7-a37c08db8fd8": {
      "content": "post {\n\tunstable {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pu": true
      }
    },
    "9fbfa2a5-971b-34fe-9df9-f02e73e6d126": {
      "content": "t.datetime :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcdt": true
      }
    },
    "9fc2ea2c-da09-320c-bfa9-f1735b40fcd4": {
      "content": "@if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "9fc60d90-5a9b-3ad1-aec3-b77fee010bb6": {
      "content": "switch(${1:expression}) {\n\tcase '${3:case}':\n\t\t${4}\n\t\tbreak;\n\t${0}\n\tdefault:\n\t\t${2}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "9fd0fce0-fcc7-38c6-ad49-34bfc9b1337b": {
      "content": "def get_$1(context):\n\trequest = context.get('request')\n\t$1 = ${2:[]}\n\treturn ${3:$1}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "register_assignment_tag",
      "matches": {
        "register_assignment_tag": true
      }
    },
    "9fd12f9e-d2e1-3581-8c6c-7a0f8f621ab8": {
      "content": "| money",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "money": true
      }
    },
    "9fd54c61-8f9c-30a0-8daa-376be336c647": {
      "content": "echomsg string([${0:TARGET}])",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "debug-echomsg",
      "matches": {
        "p": true
      }
    },
    "9fd55ac4-3727-3473-a5cb-c3e21064124e": {
      "content": "describe('${1:first}', () => { ${2:second} })",
      "doc": "Testing `describe` block",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "describeBlock",
      "matches": {
        "desc": true
      }
    },
    "9fd56e05-af81-31ea-8261-ee3fa29ec3d3": {
      "content": "_.keysIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keysIn(new Foo);\n// => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\nCreates an array of the own and inherited enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keysin",
      "matches": {
        "lodash keysin": true
      }
    },
    "9fd7ce58-1c12-3b0e-9929-b932efb5b027": {
      "content": "while ${1} loop\n\t${2}\nend loop;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "9fdb17ac-be70-3fba-918d-9a8297f32656": {
      "content": "\\\\begin{subfigure}[${1}]{${2:\\\\textwidth}}\n\\\\begin{center}\n\t${3}\n\\\\end{center}\n\\\\caption{${4}}\n\\\\label{fig:${5}}\n\\\\end{subfigure}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "subfigure environment",
      "matches": {
        "subfig": true
      }
    },
    "9fdb96e5-0fb6-3830-bf6d-2d02e1c83774": {
      "content": "PropTypes.objectOf($0),",
      "doc": "An object with property values of a certain type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-of",
      "matches": {
        "prop-types objectof": true,
        "ptoo": true
      }
    },
    "9fdd71c1-bd69-3316-9c9b-3ca1a3395c2b": {
      "content": "display: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:n": true
      }
    },
    "9fe23db1-3818-3b3b-911d-e16b67b4e945": {
      "content": "[cols=\"${1}\", options=\"header\"]\n|===\n|${2:row1-col1}\n${0}\n\n|===",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "table",
      "matches": {
        "table": true
      }
    },
    "9fe5aa1d-fa16-32ac-b0d5-30ec3d852efd": {
      "content": "<?php\n\nclass CSVWriter {\n\tpublic function __construct($file_or_handle, $sep = \"\\t\", $quot = '\"'){\n\t\t$args = func_get_args();\n\t\t$mode = isset($opts['mode']) ? $opts['mode'] : 'w';\n\n\t\t$this->f =\n\t\t\tis_string($file_or_handle)\n\t\t\t? fopen($file_or_handle, $mode)\n\t\t\t: $file_or_handle;\n\n\t\t$this->fputcsv_args = [$this->f, null, $sep, $quot];\n\n\t\tif (!$this->f) throw new Exception('bad file descriptor');\n\t}\n\n\tpublic function write($row){\n\t\t$this->fputcsv_args[1] =& $row;\n\t\tcall_user_func_array('fputcsv', $this->fputcsv_args);\n\t}\n\n\tpublic function close(){\n\t\tif (!is_null($this->f))\n\t\t\tfclose($this->f);\n\t\t$this->f = null;\n\t}\n\n\tpublic function __destruct(){\n\t\t$this->close();\n\t}\n\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CSVWriter": true
      }
    },
    "9fe843be-554d-3428-b1c5-3d2ee77af78d": {
      "content": "errorCaptured: (err, vm, info) => {\n\t$1\n},",
      "doc": "Type: (err: Error, vm: Component, info: string) => ?boolean",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "errorCaptured",
      "matches": {
        "errorCaptured": true
      }
    },
    "9fea2cb7-9aed-36d2-89ce-6aba184dcf6f": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n}",
      "doc": "try/catch",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-catch",
      "matches": {
        "base try catch": true
      }
    },
    "9ffccfa2-6227-3d76-a427-a101585645ff": {
      "content": "foreach (${1:#:var} in ${2:#:iter}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "foreach () {}",
      "matches": {
        "fore": true,
        "foreach": true
      }
    },
    "9ffd359b-f5cf-308b-950f-412c8eb10831": {
      "content": "${2:$1} = require '${1}'${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "a0059281-4a6d-30d1-bf99-92f52b79ac4d": {
      "content": "appear-class='$1'$0",
      "doc": "appear-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "appear-class",
      "matches": {
        "appearClass": true
      }
    },
    "a0064290-7520-318f-93a9-5fcad7b60441": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a008d071-4567-350a-8926-fff3adfb5787": {
      "content": "<command>$1</command>$2",
      "doc": "HTML - Defines a command button [not supported]",
      "filetype": "html",
      "grammar": "lsp",
      "label": "command",
      "matches": {
        "command": true
      }
    },
    "a00d6b9d-9e0a-3477-8a80-a92b4c075d83": {
      "content": "{{ MEDIA_URL }}",
      "doc": "",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "mediaurl",
      "matches": {
        "mediaurl": true
      }
    },
    "a0193474-7d58-3f58-9dcc-7f9315e6f54b": {
      "content": "<img src=\"$1\"${2: alt=\"$3\"}/>",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "a01d52b7-5dc1-3c3e-b132-df4dbe130a1f": {
      "content": "@throws ${1:#:class} ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throws": true
      }
    },
    "a01de5e7-8971-37f6-8bda-6d90cb9e33ed": {
      "content": "logger.info { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logi": true
      }
    },
    "a0209eeb-b452-3693-8119-3e5f4ffc1a6f": {
      "content": "var ${1:my_object} = Object.defineProperties(\n\t${2:new Object()},\n\t{\n\t\t${3:property} : {\n\t\t\tget : function $1_$3_getter() {\n\t\t\t\t// getter code\n\t\t\t},\n\t\t\tset : function $1_$3_setter(value) {\n\t\t\t\t// setter code\n\t\t\t},\n\t\t\tvalue        : ${4:value},\n\t\t\twriteable    : ${5:boolean},\n\t\t\tenumerable   : ${6:boolean},\n\t\t\tconfigurable : ${0:boolean}\n\t\t}\n\t}\n);",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "props": true
      }
    },
    "a0284abf-0479-3cd4-b963-a38a00a6dd51": {
      "content": "file(GLOB_RECURSE ${1:#:var} ${2:#:glob_paths})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "file(GLOB_RECURSE ...)",
      "matches": {
        "file_GLOBE_RECURSE": true
      }
    },
    "a028d0fa-f2be-30b7-b1d5-b07066a8793a": {
      "content": "extern \"C\" fn ${1:name}(${2:arg}: ${3:Type}) -> ${4:RetType} {\n    ${5:// add code here}\n}",
      "doc": "extern \"C\" fn …(…) { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "extern-fn",
      "matches": {
        "extern-fn": true
      }
    },
    "a02bbac0-b553-33fe-9908-b803ddde29cd": {
      "content": "@before-appear=\"$1\"$0",
      "doc": "@before-appear=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-appear",
      "matches": {
        "beforeappearevent": true,
        "vue before-appear": true
      }
    },
    "a02c12e7-96aa-39b6-bb05-0a4090d3d05a": {
      "content": "package body ${1} is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "package body",
      "matches": {
        "pacb": true
      }
    },
    "a02c503c-796d-3afe-abc7-6bd50964a237": {
      "content": "foreach ($${1:#:variable} as $${2:#:key}${3: =>} $${4:#:value}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach-hashmap": true
      }
    },
    "a03a785d-0cca-3da8-8f51-bbdb0852634b": {
      "content": "Box::new(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Box::new()",
      "matches": {
        "boxp": true
      }
    },
    "a03f6afe-12fc-3857-97bd-47c9ef46e36a": {
      "content": "throw new ${0:error}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "throw new Error",
      "matches": {
        "tn": true
      }
    },
    "a04aa345-1d24-3de2-84e3-4b62954c6d48": {
      "content": "import React from 'react'\n\ntype Props = {}\n\nfunction ${1:${TM_FILENAME_BASE}}({}: Props) {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Functional Component with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactFunctionalExportComponent",
      "matches": {
        "tsrfce": true
      }
    },
    "a04b912b-3243-36a4-918f-745256be5540": {
      "content": "class ${1:MODEL_NAME}ListView(ListView):\r\n    model = ${1:MODEL_NAME}\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "listview",
      "matches": {
        "listview": true
      }
    },
    "a05359df-19d4-3057-ad0a-13e5919fb021": {
      "content": "memcpy(${1:DEST}, ${2:SRC}, ${3:NBYTES})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "memcpy(dest, src, nbytes)",
      "matches": {
        "memcpy": true
      }
    },
    "a054a32f-52df-3348-b9e6-2d25b4f0fdf6": {
      "content": "display: table-cell;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      }
    },
    "a0554340-3577-3d47-928d-91ae0b04f8d0": {
      "content": "t.change :${1:name}, :${2:string}, ${3:limit}: ${4:80}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tch": true
      }
    },
    "a0579a7f-581f-3baa-bf70-5b251a296652": {
      "content": "float none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      }
    },
    "a0584f7d-6990-32b3-89a6-7544c2374173": {
      "content": "require_relative '${1}'$0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert require_relative",
      "matches": {
        "reqr": true
      }
    },
    "a05a4fcc-6186-3f22-acd7-692567719da2": {
      "content": "&#x21E7;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shift": true
      }
    },
    "a05a92fa-4c60-3c06-9108-d42df5dbfabb": {
      "content": "var ${1:name}${2: = }${3:}${4: setget }",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "define variables",
      "matches": {
        "var": true
      }
    },
    "a05bcb84-7463-3c65-89be-ed963c2e138a": {
      "content": "${1:callbacks}.locked()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clocked": true
      }
    },
    "a05cab5d-0c1d-3484-aa3a-811bbb372a6c": {
      "content": "cursor crosshair",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      }
    },
    "a05eabfb-566c-3f76-8f21-f72411b2ca2e": {
      "content": "post {\n\tfixed {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true
      }
    },
    "a06aa275-e7c0-32e8-a5a4-bcd9125f1ce3": {
      "content": "\\\\begin{eqnarray}\n\t${0:${VISUAL}}\n\\\\end{eqnarray}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "eqnarray environment",
      "matches": {
        "eqnarray": true
      }
    },
    "a06de645-fdb1-3b68-a5e5-f9b5ee29f8ed": {
      "content": "override",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "over": true
      }
    },
    "a07176c9-e719-33b6-9b06-0c54a8bd1b5d": {
      "content": "async function ${1:name}() {\n\ttry {\n\t\tconst response = await axios.post('${2:uri}', ${3:post});\n\t\t${4:success}\n\t}\tcatch (error) {\n\t\t${5:error}\n\t}\n}",
      "doc": "Use Axios to make a post request - async-await",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-post-async-await",
      "matches": {
        "axios post async await": true
      }
    },
    "a0759774-6ac1-393d-931c-15d6dae4a50a": {
      "content": "until ${1:#:condition} ; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      }
    },
    "a078373d-4bb5-38d2-a6a3-a9092a0ac085": {
      "content": "${1:file = }file.choose()${0:}",
      "doc": "file.choose",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "fch",
      "matches": {
        "fch": true
      }
    },
    "a07a8c72-ae61-3780-b08e-f2151bcaa6fa": {
      "content": "${1:FIELDNAME} = models.IntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      }
    },
    "a07ac6a5-14c9-3cdc-8d7e-7d431af422cf": {
      "content": "attr_reader :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert attr_reader",
      "matches": {
        "r": true
      }
    },
    "a0831132-dadd-3ab8-a949-909996886884": {
      "content": "font-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "font-style": true,
        "fs": true
      }
    },
    "a0854319-7164-3cdb-9b06-4d19f41ac13d": {
      "content": "use DDP;\np ${1:variable}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ddp": true
      }
    },
    "a095fc0f-f891-3476-8798-878fcc5ecb3f": {
      "content": "${1:el}.removeAttribute('${2:attr}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "removeAttribute",
      "matches": {
        "hera": true
      }
    },
    "a09886a0-3d5b-361c-99ce-03fb4cfe412d": {
      "content": "background-attachment: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      }
    },
    "a09d7f29-05a7-3c9d-a9aa-637d6c259df9": {
      "content": "|${1:title}|${2:title}|\n|---|---|\n|${3:value}|${4:value}${5:TARGET}|",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "table template",
      "matches": {
        "table": true
      }
    },
    "a09db425-20dd-3257-8f43-3cf8e00deb7d": {
      "content": "white-space: ${1|nowrap,pre,pre-wrap,pre-line,normal|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "white-space",
      "matches": {
        "ws": true
      }
    },
    "a09e3cb1-14c2-3b2c-b541-49c05049b145": {
      "content": "<command type=\"command\" label=\"${1}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command": true
      }
    },
    "a0a0cafc-8132-398c-92bf-53543ca11d69": {
      "content": "${1:void} ${2:function_name}(${3});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fund": true
      }
    },
    "a0a3399a-f4fc-30fa-b0b8-0de42bda7dde": {
      "content": "min-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      }
    },
    "a0aae340-37a9-32b1-b8fa-f65e14966a4e": {
      "content": "padding: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "a0aafd33-25bb-33a9-bc90-3ff76c23d61c": {
      "content": "require(${1:}, quietly = TRUE)",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "a0ad84e1-4ca4-36b5-9f33-18a897119609": {
      "content": "class:${1:name}={${2:condition}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-class",
      "matches": {
        "svcl": true,
        "svelte class": true
      }
    },
    "a0aec26d-b16e-3d3a-bec8-a6488ffc2772": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t$0\n\tclass Meta:\n\t\tverbose_name = \"$1\"\n\t\tverbose_name_plural = \"$1s\"\n\n\tdef __str__(self):\n\t\treturn super($1, self).__str__()",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Model",
      "matches": {
        "model": true
      }
    },
    "a0b63d6a-6ec6-32c0-b012-20d7a9868c5b": {
      "content": "observeEvent(${1:event}, {\n    ${0}\n})",
      "doc": "Shiny observe event",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Shiny observe event",
      "matches": {
        "shiny observe event": true
      }
    },
    "a0b9ac7c-3be1-38ca-9a00-4a23908691a3": {
      "content": "switch ${1:expression}\n\tcase ${2:item}\n\tcase ${0:item}\n\tdefault\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "a0ba6897-5710-3646-9d36-ee42e4161f3b": {
      "content": "public final ${1:#:type} ${2:#:var} = ${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "final": true
      }
    },
    "a0bc09cf-fb36-3399-a1c8-f6f90c731d4d": {
      "content": "max-height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true
      }
    },
    "a0c0a88b-c382-3c97-a773-b842f4a41513": {
      "content": "if let ${1:Some(pat)} = ${2:expr} {\n    ${0:unimplemented!();}\n}",
      "doc": "if let … = … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "if-let",
      "matches": {
        "if-let": true
      }
    },
    "a0c28eae-d502-3fbd-8f45-c37051d79f94": {
      "content": "<c:import url=\"${1}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cimport": true
      }
    },
    "a0c9c493-58b3-3ed8-af3a-102cec9ddb39": {
      "content": "float: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      }
    },
    "a0cf5beb-ba07-320d-8170-a100cdc9dd97": {
      "content": "FUNCTION LOCALE-TIME(${1:yyyymmdd},${2:locale-optional})$0",
      "doc": "format time; according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOCALE-TIME",
      "matches": {
        "FUNCTION LOCALE-TIME": true
      }
    },
    "a0d2f795-f4c9-3a2d-b0c6-7ea9352c7b96": {
      "content": "close(unit = ${1:fp}) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "close": true
      }
    },
    "a0d7653d-04fd-380c-bfad-4d6c035970e5": {
      "content": "console.log('${0}:', ${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "console.log a variable",
      "matches": {
        "cv": true
      }
    },
    "a0dd0ae8-ca5d-3e29-8b7e-41db934a0449": {
      "content": "{% include \"${0}\" %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "a0e14d0c-63a8-3b23-90ee-98a52e14fd11": {
      "content": "console.table([${1:first}])",
      "doc": "Logs table to console",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleTable",
      "matches": {
        "ctl": true
      }
    },
    "a0e28f0b-016e-3847-af0d-8b6541da6556": {
      "content": "margin: ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      }
    },
    "a0e5b0cc-4c30-33ba-935d-904447a12c21": {
      "content": "background-size: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:a": true
      }
    },
    "a0e6ce56-01f4-3063-a032-3acc16b4b969": {
      "content": "expect(${1:target}).not.toBeHidden()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to be hidden (coffee)",
      "matches": {
        "noth": true
      }
    },
    "a0eac569-97c9-3d20-abd3-a421e3737543": {
      "content": "align-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      }
    },
    "a0f59213-216e-3fcd-bc18-35d7d75f2245": {
      "content": "detect do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detd": true
      }
    },
    "a0f6417f-db59-3447-b6ba-f0d7eb4884a2": {
      "content": "cursor: text",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:t": true
      }
    },
    "a0f7f93e-10f7-30cf-b423-c3793a1dbdac": {
      "content": "export const ${1:exportVariable} = ${2:localVariable};",
      "doc": "Export named variable in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportnamedvariable",
      "matches": {
        "base export named variable": true
      }
    },
    "a0fe6245-e100-32e9-a5f0-5a0e9992f4f4": {
      "content": "@brief ${0:Description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@br": true
      }
    },
    "a10be338-0dbd-34be-8ed0-d2b39454c37c": {
      "content": ":nth-child($0)",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":nc": true
      }
    },
    "a10e94d7-cbfa-3e05-8463-d8733a5bcfe1": {
      "content": "@author ${0:$TM_FULLNAME}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "author": true
      }
    },
    "a10ed8dd-d0c6-313d-bdf6-302f7c46bcfd": {
      "content": "log.Printf(\"${1:var}: %#+v\\\\n\", ${1:var})",
      "doc": "Snippet for log.Printf() with variable content",
      "filetype": "go",
      "grammar": "lsp",
      "label": "log variable content",
      "matches": {
        "lv": true
      }
    },
    "a118f93c-f0a9-354d-b84e-a4645e4603ec": {
      "content": "typedef struct packed {\n    ${2:TARGET}\n} ${1:name} ;",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      }
    },
    "a11b467c-4d50-3fdb-b01c-259cd6651074": {
      "content": "minWidth: ${1},",
      "doc": "minWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "minWidth",
      "matches": {
        "min": true
      }
    },
    "a11d524e-6c17-3367-a060-282759c794ea": {
      "content": "${1:el}.removeChild(${2:elem})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "removeChild",
      "matches": {
        "herc": true
      }
    },
    "a11fa734-648c-3aac-983d-7f5e7bd8300c": {
      "content": "case ${1:pattern}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "a1217ec8-c1cc-38b2-a2c2-9d85b4ae40fc": {
      "content": "constructor (props, context) {\n\tsuper(props, context)\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props and context as arguments",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "classConstructorContext",
      "matches": {
        "conc": true
      }
    },
    "a122656f-5a82-3aad-b73c-a4d9897eedd1": {
      "content": "spyOn(${1:object}, '${2:method}').and.callThrough();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on and call through (js)",
      "matches": {
        "sct": true
      }
    },
    "a123cc0e-a897-38c4-9641-4a00187ac53a": {
      "content": "case ${1:word} in\n\t${2:pattern})\n\t\t${0};;\nesac",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "a12bac5c-1359-3189-9a09-80c013ec7ad7": {
      "content": "&#x2191;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "up": true
      }
    },
    "a1387f8a-7bd0-36b6-9e53-09491b24a6c9": {
      "content": "UPDATE ${1:table}\nSET ${2:column} = ${3:value}\nWHERE ${4:condition};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "UPDATE ... SET ... WHERE ...",
      "matches": {
        "UPDATE_DATA": true
      }
    },
    "a13f44fc-c512-3f10-aafd-85431c9c8a23": {
      "content": "else if ($1)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "else if",
      "matches": {
        "elif": true
      }
    },
    "a1457b51-5a08-3b5e-83e3-c10221d660aa": {
      "content": "when {\n\tallOf '${1:allOf}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenallOf": true
      }
    },
    "a147a2be-670a-3a42-a710-7769518e527c": {
      "content": "async def ${1:funcname}(${2:parameter_list}):\n\t${3:pass}",
      "doc": "Code snippet for an async statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "async/def",
      "matches": {
        "async/def": true
      }
    },
    "a14bd328-68f6-300d-a4a7-783b8d7ab7ed": {
      "content": "gem '${1}', '${2} >= 1.0'",
      "doc": "",
      "filetype": "Gemfile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gem": true
      }
    },
    "a150dd4c-7b1c-3701-b972-922028b1f778": {
      "content": "SHOW DATABASES;",
      "doc": "Show databases",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "showd",
      "matches": {
        "showd": true
      }
    },
    "a1527668-c891-33d6-8a37-362f0a791c42": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "a159a20c-1ee0-3d8f-85d0-abb5245ba909": {
      "content": "where(${1:'conditions'}${0:, bind_var})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wc": true
      }
    },
    "a15b7e1a-3eac-3d99-bd3a-ac56d315a3ee": {
      "content": "unless ${1:condition}\n\t$2\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unlesse": true
      }
    },
    "a15be02e-e03e-30a0-a65f-626f0a3a0894": {
      "content": "change_column :${1:table}, :${2:column}, :${0:type}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mcc": true
      }
    },
    "a15d800f-0adc-38f9-9f1d-59c002464428": {
      "content": "function ${1:function_name}(${2}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      }
    },
    "a1628f21-4bcd-3e51-8822-bb174060efde": {
      "content": "FUNCTION ABS(${1:number})$0",
      "doc": "function absolute value of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ABS",
      "matches": {
        "FUNCTION ABS": true
      }
    },
    "a166a18f-20ba-35c9-b0f9-397aa770da4f": {
      "content": "ggplot(${1:data}, aes(${0:aesthetics}))",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ggp": true
      }
    },
    "a16d2857-61cb-33f0-ba5c-2a6cb7c82d43": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "else { ... }",
      "matches": {
        "el": true
      }
    },
    "a17bafe3-decc-3df1-8bdd-9ea350332739": {
      "content": "<script charset=\"${1:UTF-8}\">\n${2:TARGET}\n</script>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scriptcharset": true
      }
    },
    "a17d1aec-a844-3947-9d54-1b5542489350": {
      "content": "|> IO.inspect(label: \"${1:label}\")",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "pipe to inspect with label",
      "matches": {
        ">il": true
      }
    },
    "a17faa06-0943-3b33-a1d7-71de6e69e279": {
      "content": "type alias ${1:Model} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tya": true
      }
    },
    "a183cdf5-2df7-35da-93ff-86693f2dbf54": {
      "content": "Stream<${1:type}> get ${2:name} => _${2:name}Subject.stream;\nfinal _${2:name}Subject = BehaviorSubject<${1:type}>();",
      "doc": "A BehaviorSubject is also a broadcast StreamController which returns an Observable rather than a Stream.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Subject",
      "matches": {
        "subj": true
      }
    },
    "a18820e4-c296-3da5-bea2-b5c6a8d83d4a": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t${0:${VISUAL}}\nendif",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a18bf915-a27e-33b0-b64a-411986770665": {
      "content": "\\\\sum^{${1:n}}_{${2:i=1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\sum^{}_{}",
      "matches": {
        "sum": true
      }
    },
    "a18c4f80-bf7b-3a95-9f19-012e0f6b8b05": {
      "content": "func ${1:handler}(w http.ResponseWriter, r *http.Request) {\n  ${0:fmt.Fprintf(w, \"hello world\")}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "http.HandlerFunc",
      "matches": {
        "hf": true
      }
    },
    "a18d9f56-b8cb-3523-97d6-df9a0d97acde": {
      "content": "textFont(${1:font}${2:, }${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textFont": true
      }
    },
    "a192a981-d145-3310-ae0d-b0c7e098e26b": {
      "content": "$.trim(${1:str})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$trim": true
      }
    },
    "a1996a02-1eea-394a-a117-a86cb7a8ba5e": {
      "content": "_.flowRight(${funcs})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flowRight([square, _.add]);\naddSquare(1, 2);\n// => 9\n\nThis method is like `_.flow` except that it creates a function that\ninvokes the given functions from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flowright",
      "matches": {
        "lodash flowright": true
      }
    },
    "a19d8f36-7300-3d2e-a79c-767370488604": {
      "content": "count(${1:mask}${2:, dim=${3:1}})",
      "doc": "count",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "count",
      "matches": {
        "count": true
      }
    },
    "a19de89d-f457-3328-8b15-4318a25eac82": {
      "content": "extends ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      }
    },
    "a1a0d2b1-92a9-3172-bb7d-0bab602c45f9": {
      "content": "grid-template-columns ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      }
    },
    "a1a2f72f-5cb4-36ca-9e17-85c91a7d3f4d": {
      "content": "cursor: pointer",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:p": true
      }
    },
    "a1a82164-0713-3279-b3e5-0645711c196f": {
      "content": "console.log(${1:first})",
      "doc": "Displays a message in the console",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleLog",
      "matches": {
        "clg": true
      }
    },
    "a1b33568-823e-3fb5-8d6c-c5693bc5b069": {
      "content": "white-space pre-wrap",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pw": true
      }
    },
    "a1b449cd-6994-39fa-b5b7-d73550523ce6": {
      "content": "display: -moz-inline-stack",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mis": true
      }
    },
    "a1b65989-e8d7-3553-8fd6-0d2c121b3eb3": {
      "content": "_.keys(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.keys(new Foo);\n// => ['a', 'b'] (iteration order is not guaranteed)\n\n_.keys('hi');\n// => ['0', '1']\n\nCreates an array of the own enumerable property names of `object`.\n\n**Note:** Non-object values are coerced to objects. See the\n[ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\nfor more details.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keys",
      "matches": {
        "lodash keys": true
      }
    },
    "a1b8f460-541e-3591-a8f9-e64b82bd6685": {
      "content": "\\textrm{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textrm": true,
        "textrm \\textrm{": true
      }
    },
    "a1b99b43-d644-3c1b-becb-e288f9ba33c4": {
      "content": "using ${1:package}: ${2:exports} as ${3:name}",
      "doc": "Code snippet for using something from a package and rename.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "using from as",
      "matches": {
        "as": true,
        "from": true,
        "us": true,
        "using": true
      }
    },
    "a1bb8bda-1327-3d7e-9d03-8cb69e799f70": {
      "content": "println(\"${0}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "a1c192b9-710d-3004-91cc-2e7b48242914": {
      "content": "glm(${1:formula}, ${2:family = {3:gaussian}}, ${4:data})",
      "doc": "Generalized Linear Models",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "glm",
      "matches": {
        "glm": true
      }
    },
    "a1c1ba54-f5f8-32d1-a7dc-ced969c97a2c": {
      "content": "-> { ${1} }.must_output '${0}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mout": true
      }
    },
    "a1cd42f2-f659-38f1-b860-0d25cf98d415": {
      "content": "justify-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      }
    },
    "a1cdce2a-d0fe-32f1-aa2c-b1c83f39be4b": {
      "content": "${1:type}, ${2:allocatable, }dimension(${3::}) :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      }
    },
    "a1d0ddba-293b-3aad-a40c-8d5e26dac7c9": {
      "content": "list-style-type: lower-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: lower-roman",
      "matches": {
        "listlr": true
      }
    },
    "a1d60ca9-e5c7-3eb6-b211-f7674b288f9c": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "a1d91776-2270-3fa6-a106-49e88b1fca06": {
      "content": "${1:FIELDNAME} = DateTimeRangeField()",
      "doc": "DateTimeRangeField (fdatetimerange).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fdatetimerange",
      "matches": {
        "fdatetimerange": true
      }
    },
    "a1df6ba5-b1a9-302e-846c-ebe8b3de7eef": {
      "content": "div(ng-repeat='${1} in ${2}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      }
    },
    "a1e4b543-37b3-3146-af70-d0ec5b0f0519": {
      "content": "${1:obj}.dblclick (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dblclick": true
      }
    },
    "a1e66000-2c62-31bf-81d5-d699df543836": {
      "content": "${1:FIELDNAME} = forms.ImageField($2, required=${3:False})",
      "doc": "ImageField (fimg)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fimg",
      "matches": {
        "fimg": true
      }
    },
    "a1e66c1a-0b12-3703-972b-ffaa53d23893": {
      "content": "${1:Object} ${2:o}${3: = new $1}(${0});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "object": true
      }
    },
    "a1e99300-1b78-30cf-8277-6c04f4a1521b": {
      "content": "import akka.actor.{ActorSystem, Actor, ActorLogging, Props}\n\nobject ${1:X} {\n\tdef props(${2}) = Props(new X($2))\n}\n\nclass $1($2) extends Actor with ActorLogging {\n\tdef receive = {\n\t\tcase e =>\n\t\t\t${0:TARGET:println(e)}\n\t}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "akka-actor": true
      }
    },
    "a1e9f9bc-8f57-3631-9b32-faf4c1eaaf62": {
      "content": "package {\n\timport flash.display.*;\n\timport flash.Events.*;\n\n\tpublic class Main extends Sprite {\n\t\tpublic function Main (\t) {\n\t\t\ttrace(\"start\");\n\t\t\tstage.scaleMode = StageScaleMode.NO_SCALE;\n\t\t\tstage.addEventListener(Event.RESIZE, resizeListener);\n\t\t}\n\n\t\tprivate function resizeListener (e:Event):void {\n\t\t\ttrace(\"The application window changed size!\");\n\t\t\ttrace(\"New width:  \" + stage.stageWidth);\n\t\t\ttrace(\"New height: \" + stage.stageHeight);\n\t\t}\n\n\t}\n\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "a1ed7dd4-c938-3c6b-a8f6-66b195a7089f": {
      "content": "reduce(${1:init}) { |${2:mem}, ${3:var}| $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert reduce inline block",
      "matches": {
        "red": true
      }
    },
    "a1ef61c1-dbee-3fee-95e2-bde663715bc6": {
      "content": "fmt.Println(\"${1:s}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println()",
      "matches": {
        "pl": true
      }
    },
    "a1efeccd-3471-3f10-af89-78f3fbc9cce6": {
      "content": "\\begin{overlay}\n\t${1:TARGET}\n\\end{overlay}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{overlay} \\overlay": true,
        "overlay": true
      }
    },
    "a1f0c9a9-59d8-33c9-bd37-7c10d27bc11b": {
      "content": "text-decoration: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true,
        "text-decoration": true
      }
    },
    "a1f54d99-f53f-3073-81ac-ec330c64214b": {
      "content": "import Component from '@ember/component';\n\nexport default Component.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import Component from '@ember/component';",
      "matches": {
        "ecomponent": true
      }
    },
    "a1f67f89-4ecb-39df-aa48-ad20095fe642": {
      "content": "for (let ${1:i} = ${2:iterable}.length - 1; ${1:i} >= 0; ${1:i}--) {\n\t${0}\n}",
      "doc": "reverse for loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "reverse-for-loop",
      "matches": {
        "base for reverse": true
      }
    },
    "a1fa7aef-31ff-3ad9-8fb2-0d704825fd57": {
      "content": "{\n\t\"type\": \"select\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"options\": [\n\t\t{\n\t\t\"group\": \"$6\",\n\t\t\"value\": \"$7\",\n\t\t\"label\": \"$8\"\n\t\t}\n\t],\n\t\"default\": \"$3\",\n\t\"info\": \"$4\"\n},$5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema select",
      "matches": {
        "_select": true
      }
    },
    "a1fc5886-66c9-3dc9-bc16-210019b03f40": {
      "content": "{\n\t\"type\": \"radio\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"options\": [\n\t\t{ \"value\": \"$6\", \"label\": \"$7\" }\n\t],\n\t\"default\": \"$3\",\n\t\"info\": \"$4\"\n},$5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema radio",
      "matches": {
        "_radio": true
      }
    },
    "a201e975-419b-3d71-800d-f0d18d9e4c7c": {
      "content": "runs(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "runs (js)",
      "matches": {
        "ru": true
      }
    },
    "a209585a-7132-3c40-9a33-8a5312c2a845": {
      "content": "for ${1:i} in ${2:startValueInclusive} downto ${3:endValueInclusive} {\n\t${4:Js.log(${1:i})}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Reverse For Loop",
      "matches": {
        "for": true
      }
    },
    "a21108ed-5f48-3f37-8f70-b807f13892e6": {
      "content": "padding-bottom: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "padding-bottom",
      "matches": {
        "padb": true
      }
    },
    "a21457d9-5da8-3f84-baed-c44cce6655b7": {
      "content": "{{- if .Values.$1.initContainers }}\n\t  initContainers:\n\t  - name: wait-workers\n\t\timage: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\t\timagePullPolicy: {{ .Values.${1:value_key}.image.pullPolicy }}\n\t\t# env\n\t\tcommand:\n\t\t  - sh\n\t\t  - -c\n\t\t  - |\n\t\t\tuntil printf \".\" && nc -z -w 2 {{ template \"${2:chartName}.fullname\" . }} {{ .Values.postgresql.service.port }}; do\n\t\t\t\tsleep 2;\n\t\t\tdone;\n\n\t\t\techo 'PostgreSQL OK ✓'\n\t\t# args\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "initContainers_spec": true
      }
    },
    "a21573e1-2206-3252-8776-546718771f79": {
      "content": "import { NgModule } from '@angular/core';\nimport { BrowserModule  } from '@angular/platform-browser';\nimport { HttpModule } from '@angular/http';\n\nimport { ${1:App}Component } from './${1:app}.component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n\t],\n\tdeclarations: [${1:App}Component],\n\tbootstrap: [${1:App}Component],\n})\nexport class ${1:App}Module { }\n$0",
      "doc": "Angular Root Module",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Root Module",
      "matches": {
        "a-module-root": true
      }
    },
    "a219b8e6-1bda-3426-a409-b4c1d98380cc": {
      "content": "${1|this,vm|}.\\$data$2",
      "doc": "Type: Object. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$data",
      "matches": {
        "vmData": true
      }
    },
    "a21b5532-8464-3a1e-b8ca-76bb76eb2f70": {
      "content": "path('${1:ROUTE}/', ${2:VIEW}${3:.as_view()}, name='$4'),",
      "doc": "path(route, view, kwargs=None, name=None)",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "path_inline",
      "matches": {
        "path_inline": true
      }
    },
    "a21d0e96-0613-3943-9233-c558ae9389ff": {
      "content": "mixed.label()",
      "doc": "mixed.label(label: string): Schema\n\nOverrides the key name which is used in error messages.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-label",
      "matches": {
        "yup mixed label": true
      }
    },
    "a21d87b5-5933-370f-8d91-54b313d61e49": {
      "content": "perf(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "perf conventional commit",
      "matches": {
        "perf": true
      }
    },
    "a238a8e0-3f11-3047-8401-0255f509fbc1": {
      "content": "align-self: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fs": true
      }
    },
    "a23cf25b-09f3-397b-bfdd-2d25b184af00": {
      "content": "while(${1:condition}) {\n\t${2:println(\"Hello, world!\")}\n}",
      "doc": "While loop",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "a23e9f67-983e-3e88-9275-278359fa8488": {
      "content": "# =>",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      }
    },
    "a23fe272-94f3-302f-bd00-3991abe62963": {
      "content": "<legend>$1</legend>$2",
      "doc": "HTML - Defines a title in a fieldset",
      "filetype": "html",
      "grammar": "lsp",
      "label": "legend",
      "matches": {
        "legend": true
      }
    },
    "a2463cb5-3277-3d22-a8c2-698e5acc5ab7": {
      "content": "${1:FIELDNAME} = models.ManyToManyField(${2:OTHERMODEL})",
      "doc": "ManyToManyField (m2m).\n\nA many-to-many relationship.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "m2m",
      "matches": {
        "m2m": true
      }
    },
    "a2476ff8-cc1c-3c42-8ef0-ad12c54bfea7": {
      "content": "use:action",
      "doc": "use action",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-use",
      "matches": {
        "s-use": true
      }
    },
    "a250a3d7-fc30-37ee-8787-7f6e4df1f87f": {
      "content": "print!(\"${1}\");",
      "doc": "print!(…);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "print",
      "matches": {
        "print": true
      }
    },
    "a2511499-5249-30ed-9764-b34003d8fced": {
      "content": "# https://kubernetes.io/docs/concepts/configuration/configmap/\nkind: ConfigMap\napiVersion: v1\nmetadata:\n  name: ${1:myconfig}\n  namespace: ${2:default}\ndata:\n  ${3:key}: ${4:value}\n---\n$0",
      "doc": "k8s ConfigMap",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s ConfigMap",
      "matches": {
        "k-configmap": true
      }
    },
    "a252b7ac-18e3-3399-b3f7-cf9e4812f4a5": {
      "content": "$_POST['${1}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "post",
      "matches": {
        "post": true
      }
    },
    "a2570fc1-22b3-3f14-9a34-1aa92bf8ddd4": {
      "content": "case ${1:object}\nwhen ${2:condition}\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "a25c9e5c-95b6-3f53-9716-2d381a05341e": {
      "content": "{% else %}\n\t${1}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "a25edce0-f239-3647-9069-5ebe495f3755": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Frameset//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxf": true
      }
    },
    "a25fc73d-b6de-3fc8-83b4-9fd2a07880c0": {
      "content": "${1:FIELDNAME} = serializers.ListField(child=${2})",
      "doc": "Django-rest Serializers ``ListField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ListField",
      "matches": {
        "slist": true
      }
    },
    "a26a7a06-a620-3802-a1f5-fe02ef1a2aef": {
      "content": "if (${1:condition} != null) {\n\t$0\n}",
      "doc": "if statement checking for not null",
      "filetype": "java",
      "grammar": "lsp",
      "label": "ifnotnull",
      "matches": {
        "ifnotnull": true
      }
    },
    "a26c9571-49b8-3ad1-a18e-e9b42e07bf5c": {
      "content": "${1:deferred}.rejectWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Drejw": true
      }
    },
    "a26e9dc6-3dad-3c69-a14b-3dec9decd717": {
      "content": "match {\n\tcase ${1} => ${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "match {\\n  case .. => ..",
      "matches": {
        "match": true
      }
    },
    "a270a312-84be-328d-83fa-e947d1539949": {
      "content": "match ${1:TARGET} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "a2834bb0-6c7e-3ec0-966b-93f7ee12c4fd": {
      "content": "switch (${1:key}) {\n\tcase ${2:value}:\n\t\t$0\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n}",
      "doc": "Switch Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Switch Statement",
      "matches": {
        "switch": true
      }
    },
    "a28a22ad-715f-322e-bc0c-4f6649d4da23": {
      "content": "display inline-table",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      }
    },
    "a28b7bcb-6fb5-3615-bc04-fddb2f2140ca": {
      "content": "${1:obj}.filter(function (${2:index}) {\n\t${3}\n})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtert": true
      }
    },
    "a28f5219-0666-3fcc-9ff7-5c41d7c2b8d8": {
      "content": "noiseDetail(${1:octaves}${2:, }${0:falloff});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noiseDetail": true
      }
    },
    "a2a49807-69ac-3d1e-83ba-609ca1a6b886": {
      "content": "<#macro ${1:macro_name} ${2:param1}>\n\t${0:${VISUAL}}\n</#macro>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#macro macro_name param1>...</#macro>",
      "matches": {
        "mac": true
      }
    },
    "a2a8099a-ba46-317a-9f83-5dfd26cea829": {
      "content": "do\n  ${1:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "do...end",
      "matches": {
        "do": true
      }
    },
    "a2b02756-ee56-3bee-a240-a40030ce8b25": {
      "content": "require 'byebug'; byebug",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "a2b403b9-48f4-3c4b-a0cd-b522f026366f": {
      "content": "$.post '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxpost": true
      }
    },
    "a2bb2041-0298-36bc-b5d7-0298fb6b94bf": {
      "content": "$this->db->update(\"${1:table}\", $${2:set}, $${3:where});${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-update": true
      }
    },
    "a2bc4e73-6b1a-3f91-b90d-08f1147e9902": {
      "content": "java.beans.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.b": true
      }
    },
    "a2bdcc1e-72b7-379e-9ef1-cf9a6df3234c": {
      "content": "word-wrap: suppress",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      }
    },
    "a2bfe447-3977-3b64-ac0a-559721c1669b": {
      "content": "$this->assertFileExists(${1:'path/to/file'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFileExists('path/to/file')",
      "matches": {
        "asfex": true
      }
    },
    "a2c628f3-949e-35bb-9f81-9aa54a52b6f9": {
      "content": "do |${1:v}|\n\t${2}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dov": true
      }
    },
    "a2ccd9c0-678d-3ef7-99b4-5957d449158b": {
      "content": "var_dump(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vd": true
      }
    },
    "a2cf3c5c-77a2-3a89-8655-f4d9b23d8e7a": {
      "content": "editor = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "editor": true
      }
    },
    "a2d2742e-dda5-314d-b799-ba31ab7f4f12": {
      "content": "dot_product($1,$2)",
      "doc": "Dot Product of Vectors",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "dot",
      "matches": {
        "dot": true
      }
    },
    "a2d44063-c535-35f9-8d69-fa02b05b63a8": {
      "content": "PropTypes.object,",
      "doc": "Object prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      }
    },
    "a2d55eb6-05aa-34bd-af32-5a125eabe4a5": {
      "content": "function mod(${1:value},${2:modulus})$0",
      "doc": "remainder from the division of value by modulus",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-mod",
      "matches": {
        "function mod": true
      }
    },
    "a2dd331a-95b5-3d70-b832-6a4bf5e6ea0c": {
      "content": "${1|this,vm|}.\\$nextTick(${2:callback})",
      "doc": "vm.$nextTick( callback )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$nextTick",
      "matches": {
        "vmNextTick": true
      }
    },
    "a2df9f33-41d8-37f7-9aa2-ca0137ff3d8f": {
      "content": "$${1:#:retVal} = (${2:#:condition}) ? ${3:#:a} : ${4:#:b};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if?": true
      }
    },
    "a2dfe247-c4c5-3a12-8a24-7879333fc3e4": {
      "content": "\\begin{quote}\n\t${1:TARGET}\n\\end{quote}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{quote} \\quote": true,
        "quote": true
      }
    },
    "a308a102-070c-33bc-8344-c29056ac1ed2": {
      "content": "z-index: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z:a": true
      }
    },
    "a30b4040-17d5-3e6b-8580-5911c1f07b28": {
      "content": "<meta name=\"others\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metaothers": true
      }
    },
    "a338973b-79d0-3c6b-b2c6-e0daec19f6d2": {
      "content": "panic!(\"${1}\");",
      "doc": "panic!(…);",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "panic",
      "matches": {
        "panic": true
      }
    },
    "a339ba9f-94d6-3a3b-9c40-d0ec8fa5db12": {
      "content": "%#Endregion",
      "doc": "Folding Region End",
      "filetype": "latex-snippets",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      }
    },
    "a33bd8ed-b771-395f-a50a-62813b7d22f1": {
      "content": "fun ${1:name}(${2:object} : ${3:String}) : ${4:Void} {\n\t$0\n}",
      "doc": "Functions can be defined on modules, components, stores and providers.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Functions",
      "matches": {
        "fun": true
      }
    },
    "a33c01bf-8aa4-3720-89a4-3a44fd88f8ff": {
      "content": "t.remove :${0:column}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trc": true
      }
    },
    "a33e8ad4-79c4-3c49-95bb-0a8564a734d4": {
      "content": "\\$_SESSION['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "session": true
      }
    },
    "a348481f-90ab-3f03-bff0-0d92a23c78b6": {
      "content": "display: table-column-group;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbclg": true
      }
    },
    "a34acd92-42e6-3534-81f4-2a022a315243": {
      "content": "match(${1:str}, ${0:regexp});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      }
    },
    "a34d7df2-9ce3-36e9-81e9-a1661b9a579e": {
      "content": "each do |${1:e}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert each with multiline block",
      "matches": {
        "ead": true
      }
    },
    "a3508326-ff63-3993-82c8-447a47011a20": {
      "content": "\\\\documentclass[${1:options}]{${2:class}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\documentclass[]{}",
      "matches": {
        "dclo": true
      }
    },
    "a35282c0-f56b-3334-91e1-38ce30a30272": {
      "content": "else\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "a354adf1-7260-3c87-bd60-7c008d2f40d9": {
      "content": "%%debugger",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "js debugger",
      "matches": {
        "dbg": true
      }
    },
    "a3558b06-fa5d-3c90-8b55-de7adc4cd1ca": {
      "content": "orphans ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "orp": true
      }
    },
    "a360cd4b-d750-3cd3-8c4c-4832cd898c48": {
      "content": "public class ${TM_FILENAME_BASE} {\n\t$0\n}",
      "doc": "Public class",
      "filetype": "java",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "a3676acf-25a1-3ec3-b980-963eb8bd1187": {
      "content": "{% ssi ${0} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ssi": true
      }
    },
    "a36c67e4-4c55-3161-8be0-436c577298d4": {
      "content": "reduce(${1:init}) do |${2:mem}, ${3:var}|\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert reduce multiline block",
      "matches": {
        "redd": true
      }
    },
    "a36cba9b-3dcc-3998-a25d-18aac6a0fc77": {
      "content": "scope='${1:this api replaced by slot-scope in 2.5.0+}'$0",
      "doc": "Used to denote a <template> element as a scoped slot, which is replaced by `slot-scope` in 2.5.0+.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "scope",
      "matches": {
        "scope": true
      }
    },
    "a371a0c6-0004-3f30-93fd-3f9e48453f3d": {
      "content": "text-align-last: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      }
    },
    "a377c890-f7ae-3a36-af3f-b636cab56bb0": {
      "content": "+ (void)initialize\n{\n\t[[NSUserDefaults standardUserDefaults] registerDefaults:[NSDictionary dictionaryWithObjectsAndKeys:\n\t\t${0}@\"value\", @\"key\",\n\t\tnil]];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "MethodInitialize",
      "matches": {
        "mi": true
      }
    },
    "a3780b5b-ad09-3216-b32f-6ac174976c92": {
      "content": "&#x2326;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delete": true
      }
    },
    "a37d899d-76c0-3d2a-a80f-78a63aaddaea": {
      "content": "${1:obj}.prevUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prevu": true
      }
    },
    "a37e2806-9493-3767-a0cd-57b774d320b6": {
      "content": "<footer id=\"${1}\">\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer#": true
      }
    },
    "a387929d-82dd-3798-bd84-11d99d1050f1": {
      "content": "$this->markTestIncomplete(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->markTestIncomplete()",
      "matches": {
        "marki": true
      }
    },
    "a38ad38a-dfd9-3d03-8db2-a223c7a3a783": {
      "content": "versioncmp(\"${1:version}\", \"${2:version}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "versioncmp": true
      }
    },
    "a39911e5-bfa5-3204-8fa2-9985d7a67b32": {
      "content": "$${1:foo} = array_map(function($${2:v}) {\n\t${0}\n\treturn $$2;\n}, $$1);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "am": true
      }
    },
    "a39cdbb0-dcc4-3804-b531-233b20a811ab": {
      "content": "![${1:alt}](${2:url} \"${3:title}\")${4}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![": true
      }
    },
    "a39eda37-5a36-3084-94a9-a93b1aa77a2d": {
      "content": "import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}})",
      "doc": "Creates a React component class with connected redux and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-redux",
      "matches": {
        "rcredux": true,
        "react component class redux": true
      }
    },
    "a39f11db-8274-3f1a-9e9d-238b36e17545": {
      "content": "grid-column-gap: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      }
    },
    "a3a37cc1-de7e-3197-85ca-b6f36569fa41": {
      "content": "${1:FIELDNAME} = serializers.CharField(${2})",
      "doc": "Django-rest Serializers ``CharField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF CharField",
      "matches": {
        "schar": true
      }
    },
    "a3a915af-b4b4-3277-a392-85d370bd739c": {
      "content": "resize none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:n": true
      }
    },
    "a3afa76e-36ab-3f15-87fe-1d4744ec842d": {
      "content": "date.min()",
      "doc": "date.min(limit: Date | string | Ref, message?: string | function): Schema\n\nSet the minimum date allowed. When a string is provided it will attempt to cast to a date first\nand use the result as the limit.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "date-min",
      "matches": {
        "yup date min": true
      }
    },
    "a3b1c7e4-9bd5-378a-aa54-dd91fdb08372": {
      "content": "^${1:${TM_SELECTED_TEXT}}^$0",
      "doc": "Insert superscript",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert superscript",
      "matches": {
        "superscript": true
      }
    },
    "a3b2d304-3632-33c5-8a3c-5cc8e0adbde7": {
      "content": "fn ${1:#:func_name}(${2:#:args}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "fn () {}",
      "matches": {
        "fn": true
      }
    },
    "a3b71855-26ed-3557-b872-3dd3d4e879cb": {
      "content": "http.ListenAndServe(\"${1::8080}\", ${2:nil})",
      "doc": "Snippet for http.ListenAndServe",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http.ListenAndServe",
      "matches": {
        "las": true
      }
    },
    "a3b771a5-faa2-3e47-8dc0-2b880a267bb9": {
      "content": "<pre>\n${1}\n</pre>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pre": true
      }
    },
    "a3bcbdde-1857-354d-9fa9-239bedb46f22": {
      "content": "@{ ${1:hash}  }{ ${0:array} }",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hslice": true
      }
    },
    "a3c2361d-236c-3c6d-9cd8-04ca7577af18": {
      "content": "throw new ${1}Exception(${2:\"${3:#:Error Processing Request}\"}${4:});\n${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      }
    },
    "a3c2ea29-b6e0-33c3-aa15-af76ce94402f": {
      "content": "public bool ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+": true
      }
    },
    "a3d35cda-fb53-3f60-813d-4dadfc1989d5": {
      "content": "//#region $0",
      "doc": "Folding Region Start",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      }
    },
    "a3d6cff2-dfda-3ff6-a9a0-a5d638da744b": {
      "content": "componentWillUnmount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillUnmount",
      "matches": {
        "componentWillUnmount": true
      }
    },
    "a3d7eee3-a673-3506-b9a9-8c5dc4e3fdf4": {
      "content": "if ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a3d846c7-8626-35e9-b2ed-fbd9eae7b354": {
      "content": "function byte-length(${1:integer})$0",
      "doc": "function byte-length (in bytes) of item",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-byte-length",
      "matches": {
        "function byte-length": true
      }
    },
    "a3df2374-5373-3632-89b2-2671d2e38307": {
      "content": "- (${1:void}) ${2:func name};",
      "doc": "Create an Objc instance method interface",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create instance method interface",
      "matches": {
        "-interface": true,
        "funcid": true
      }
    },
    "a3ed001d-c8d4-39a3-a8f7-c94a7899045b": {
      "content": "order('${0:field}')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oa": true
      }
    },
    "a3edcdf6-fc65-3897-8d9d-121e68830ac9": {
      "content": "it('${1:description}', function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "it (js)",
      "matches": {
        "it": true
      }
    },
    "a3eec753-b672-35ff-b92d-20a9e19cc389": {
      "content": "render partial: '${0:item}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rp": true
      }
    },
    "a3f9e14f-89cf-3458-af79-f71c6f5d189e": {
      "content": "overflow-y: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      }
    },
    "a3ffc18c-f929-3eba-8757-e5f5e3070113": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/**": true
      }
    },
    "a401e5af-3d9d-32a6-a991-ca5bfb9800d5": {
      "content": "$.unique(${1:array})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      }
    },
    "a408a84e-3536-3545-a93e-e6978c596fc5": {
      "content": "_.setWith(${object}, ${path}, ${value}, ${customizer})",
      "doc": "var object = {};\n\n_.setWith(object, '[0][1]', 'a', Object);\n// => { '0': { '1': 'a' } }\n\nThis method is like `_.set` except that it accepts `customizer` which is\ninvoked to produce the objects of `path`.  If `customizer` returns `undefined`\npath creation is handled by the method instead. The `customizer` is invoked\nwith three arguments: (nsValue, key, nsObject).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-setwith",
      "matches": {
        "lodash setwith": true
      }
    },
    "a4091682-0307-317b-84ed-0067404cc563": {
      "content": "{{- range $key, $value := .Values.udp }}\n  - name: \"{{ $key }}-udp\"\n\tport: {{ $key }}\n\tprotocol: UDP\n\ttargetPort: \"{{ $key }}-udp\"\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portUDP_spec": true
      }
    },
    "a411f7e3-d6c1-3b3d-831f-b9363970fb9b": {
      "content": "cy.go('${1:direction}');",
      "doc": "Navigate back or forward to the previous or next URL in the browser’s history.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-go",
      "matches": {
        "cypress go": true
      }
    },
    "a4123c19-f6ab-3783-b244-e3b09c038a93": {
      "content": "redirect_to controller:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :controller",
      "matches": {
        "rec": true
      }
    },
    "a41be920-50a6-3ef7-b081-68986d4d262d": {
      "content": "before_action :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ba": true
      }
    },
    "a41e99f1-e71d-332b-b73e-d8fccab1a380": {
      "content": "impl ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impl": true
      }
    },
    "a4259f7e-14f3-3dde-8fcd-19adc3299351": {
      "content": "it.skip('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-skip",
      "matches": {
        "its": true,
        "jest it skip": true
      }
    },
    "a4287839-1b76-3492-a610-f5b10f85e02c": {
      "content": "if ${1:test}\n\t$0\nelsif \n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "if elsif",
      "matches": {
        "if elsif": true
      }
    },
    "a4427638-655b-3fa8-ac67-0abd40c1c5f9": {
      "content": "PropTypes.instanceOf($0).isRequired",
      "doc": "Is an instance of a class prop type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      }
    },
    "a452fc76-688f-339d-87cd-a6ac06753e71": {
      "content": "return ${1:this.num} -= ${2:1}",
      "doc": "decrement",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-decrementer",
      "matches": {
        "vdec": true,
        "vue decrementer": true
      }
    },
    "a456b0b6-8ed9-30c7-bc52-8a2fee16d6c1": {
      "content": "import ${1:Data.List} as ${0:List}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impq": true
      }
    },
    "a4577dcf-1c9f-3ba5-b81c-fbf217883e67": {
      "content": "unsafe\n{\n    $0\n}",
      "doc": "Unsafe statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Unsafe statement",
      "matches": {
        "unsafe": true
      }
    },
    "a459345f-1712-3e71-81ab-fb1299f6cdc3": {
      "content": "box-sizing: ${1|border-box,content-box|};",
      "doc": "initial value: content-box",
      "filetype": "css",
      "grammar": "lsp",
      "label": "box-sizing",
      "matches": {
        "boz": true
      }
    },
    "a45e29c4-3381-391e-9059-e6d6d68ffb2e": {
      "content": "{% ifnotequal $1 $2 %}\n\t$3\n{% endifnotequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      }
    },
    "a45e83d4-e6e1-3168-af6c-73f757b2396f": {
      "content": "${1:trackBy}(index: number, ${2:name}: ${3:model}): ${4:number} {\n  return ${2:name}${5:.id};$0\n}",
      "doc": "TrackBy Function",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "trackby-function",
      "matches": {
        "a-trackby": true,
        "angular track by function": true
      }
    },
    "a460a67a-f18f-3fef-a6b6-48203f9f059e": {
      "content": "${1:array}.forEach(${2:currentItem} => {\n\t${0}\n});",
      "doc": "Creates a forEach statement in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forEach",
      "matches": {
        "fre": true
      }
    },
    "a462a839-c352-3c94-adb5-5a07bde375cf": {
      "content": "it { should render_with_layout ${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrwl": true
      }
    },
    "a466c08d-5ced-36ff-809b-a0f39f8ce400": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}={${4:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-all",
      "matches": {
        "svelte transition all": true,
        "svta": true
      }
    },
    "a46a23df-5e78-36ca-b19c-1130c188977d": {
      "content": "\\begin{table}[${1}]\n\t\\centering\n\t\\caption{${2}}\n\t\\label{${3}}\n\t\\begin{tabular}{${4}}\n\t\t${5}\n\t\\end{tabular}\n\\end{table}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{table} \\table": true,
        "table": true
      }
    },
    "a46f94b3-aa78-3bc3-86aa-828ae77759ed": {
      "content": "import * as ${1:NAME} from \"${0:TARGET}\";",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import * as NAME from \"...\";",
      "matches": {
        "import-all": true
      }
    },
    "a474d145-4948-3aec-a095-597caffa8351": {
      "content": "flex: ${1},",
      "doc": "flex",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "flex",
      "matches": {
        "flex": true
      }
    },
    "a47c9cf4-4efa-3c1d-a902-b0f7debf4281": {
      "content": "curveDetail(${0:detail});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveDetail": true
      }
    },
    "a47f84a3-1309-3f95-a597-8cf287833e9e": {
      "content": "background: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background",
      "matches": {
        "bg": true
      }
    },
    "a486334f-8d1c-36c1-8c39-8cb3c8e4aa0e": {
      "content": "assign ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "assign ... = ...",
      "matches": {
        "as": true,
        "assign": true
      }
    },
    "a487d8bf-b5d8-3e76-a55d-64707b82313b": {
      "content": "reversed",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reversed": true
      }
    },
    "a488dcf6-91c8-3857-bf2e-7e54046457e6": {
      "content": "background-repeat: no-repeat",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      }
    },
    "a48a81c0-27e8-34d0-a1d5-8a7cc7e1a053": {
      "content": "| size",
      "doc": "Array filter: size",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter size",
      "matches": {
        "size": true
      }
    },
    "a48c44fc-8b41-3a7f-a03f-541de9ddf6fe": {
      "content": "_.times(${n}, ${iteratee})",
      "doc": "_.times(3, String);\n// => ['0', '1', '2']\n\n _.times(4, _.constant(0));\n// => [0, 0, 0, 0]\n\nInvokes the iteratee `n` times, returning an array of the results of\neach invocation. The iteratee is invoked with one argument; (index).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-times",
      "matches": {
        "lodash times": true
      }
    },
    "a48f1ed2-a477-308c-85f9-aad887cae940": {
      "content": "PropTypes.object",
      "doc": "Object prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeObject",
      "matches": {
        "pto": true
      }
    },
    "a493c7d7-acc4-3c96-8b25-2599ec54ca19": {
      "content": "${1:a} <- ${0:m a}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<-": true
      }
    },
    "a4954be5-93fe-33b8-8d23-1378259f80ab": {
      "content": "clamp($2, $3, $4)",
      "doc": "float clamp(float x, float minVal, float maxVal)\nvec2 clamp(vec2 x, vec2 minVal, vec2 maxVal)\nvec3 clamp(vec3 x, vec3 minVal, vec3 maxVal)\nvec4 clamp(vec4 x, vec4 minVal, vec4 maxVal)\n\nThe clamp function returns x if it is larger than minVal and smaller than maxVal. In case x is smaller than minVal, minVal is returned. If x is larger than maxVal, maxVal is returned. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nfloat clamp(float x, float minVal, float maxVal)\nvec2 clamp(vec2 x, float minVal, float maxVal)\nvec3 clamp(vec3 x, float minVal, float maxVal)\nvec4 clamp(vec4 x, flfloat minVal, float maxVal)\n\nThere is also a variation of the clamp function where the second and third parameters are always a floating scalars.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "clamp",
      "matches": {
        "clamp": true
      }
    },
    "a4958441-98e6-3ed6-8e2e-253c08ef7bb4": {
      "content": "{% load $SELECTION$1_tags %}",
      "doc": "",
      "filetype": "tags",
      "grammar": "lsp",
      "label": "ltags",
      "matches": {
        "ltags": true
      }
    },
    "a4982ff4-526a-3bc8-a16e-7cdeb1751af4": {
      "content": "function ${1}(${2})\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function definition",
      "matches": {
        "fun": true
      }
    },
    "a49e92ba-6306-37a8-951b-5eea7414a3c4": {
      "content": "border-fit: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      }
    },
    "a49f4482-2aed-32fe-a71d-705bd782b7a9": {
      "content": "import { View, Text } from 'react-native'\nimport React from 'react'\n\ntype Props = {}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Native Arrow Function Component with ES7 module system in TypeScript",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactNativeArrowFunctionComponent",
      "matches": {
        "tsrnf": true
      }
    },
    "a4ac53ca-046f-399c-926c-d5f6f49d934a": {
      "content": "text-shadow: ${1:1px} ${2:1px} ${3:1px} ${4:1px} ${0:rgba(0, 0, 0, .5)};",
      "doc": "text-shadow: x-offset y-offset blur spread color",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-shadow",
      "matches": {
        "ts": true
      }
    },
    "a4b269f9-d46e-3753-a3db-72bb8f472bde": {
      "content": "scan(${1:/pattern/}) { |${2:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sca": true
      }
    },
    "a4b4a5a1-ae1f-3992-bd51-f4cf439a70bd": {
      "content": "_.cloneDeepWith(${value}, ${customizer})",
      "doc": "function customizer(value) {\n  if (_.isElement(value)) {\n    return value.cloneNode(true);\n  }\n}\n\nvar el = _.cloneDeepWith(document.body, customizer);\n\nconsole.log(el === document.body);\n// => false\nconsole.log(el.nodeName);\n// => 'BODY'\nconsole.log(el.childNodes.length);\n// => 20\n\nThis method is like `_.cloneWith` except that it recursively clones `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonedeepwith",
      "matches": {
        "lodash clonedeepwith": true
      }
    },
    "a4b99f8b-29c5-349b-9e6c-44c06ee5f17d": {
      "content": "if exists('g:loaded_${1}')\n  finish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if exists('g:loaded_{plugin-name}')",
      "matches": {
        "g:loaded": true,
        "loaded": true
      }
    },
    "a4bd15ce-8145-3b87-8ec9-92eaa4d670eb": {
      "content": "place-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      }
    },
    "a4c0d6d7-dcd3-37c3-941e-69463d1a2e13": {
      "content": "validates :${0:attribute}, numericality: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vn": true
      }
    },
    "a4c2ed06-5758-3d98-b8a8-079f1b7b945f": {
      "content": "<template>\n  ${0}\n</template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> with html",
      "matches": {
        "template_with_html": true
      }
    },
    "a4caf24f-3575-3c9d-8831-7dd441c6b469": {
      "content": "to='$1'$0",
      "doc": "to=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "to",
      "matches": {
        "to": true
      }
    },
    "a4cce702-5c08-3a1b-b09b-97988aa47b31": {
      "content": "${1:obj}.unwrap()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unwrap": true
      }
    },
    "a4ce52ef-6f1c-3ba2-9974-deaf1ae3a40b": {
      "content": "for ${1:key}, ${2:value} of ${3:Object}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Object Comprehension",
      "matches": {
        "foro": true
      }
    },
    "a4d59f81-43b6-3997-8ff4-97d48433a25d": {
      "content": "// I don't know how this works. Don't touch it.",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "idk": true
      }
    },
    "a4d626ee-0933-3c69-ab9e-cbe6c6b3de52": {
      "content": "mapply(${1:function}, ${2:...})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "mapply",
      "matches": {
        "mapply": true
      }
    },
    "a4dd5842-e8be-3486-8606-57b6f27a948a": {
      "content": "- ${1:first}\n- ${2:second}\n- ${3:third}\n$0",
      "doc": "Insert unordered list",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert unordered list",
      "matches": {
        "unordered list": true
      }
    },
    "a4f55dd2-2b42-30f6-902e-d3f674f25478": {
      "content": "**${1:${TM_SELECTED_TEXT}}**$0",
      "doc": "Insert bold text",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bold text",
      "matches": {
        "bold": true
      }
    },
    "a4fb6322-6f0a-38e1-a735-da48fcb97bac": {
      "content": "${1:obj}.eq(${2:element index})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      }
    },
    "a504548c-ed21-3c63-8b47-b42c1f0e15a1": {
      "content": "for (${1:size_t} ${2:i} = ${3:0}; $2 < ${4:length}; $2++) {\n\t$0\n}",
      "doc": "Code snippet for 'for' loop",
      "filetype": "c",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "a50c7903-8eb5-31e7-bcc0-3ffc8fe1caf8": {
      "content": "fontFamily: '${1}',",
      "doc": "fontFamily",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "fontFamily",
      "matches": {
        "fo": true
      }
    },
    "a5175b33-132a-3a9d-9905-aba69fe91106": {
      "content": "<%# ${0} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%# %>",
      "matches": {
        "#": true
      }
    },
    "a51906ff-e0e0-3a4a-a947-53e8fc6fc01c": {
      "content": "this.$1 = this.$1.bind(this);$0",
      "doc": "Binds the this of a method. To be used inside a constructor",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "bindThis",
      "matches": {
        "bnd": true
      }
    },
    "a51a0b97-4710-3cd7-9ff7-e7eeee9a37a9": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "action function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-parameters",
      "matches": {
        "s-action-parameters": true
      }
    },
    "a51bcbf0-2443-3d73-8526-eaefe6d335f3": {
      "content": "${1:obj}.height(${2:integer})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      }
    },
    "a51ceeb5-f37e-3275-9822-f3ba2c5ce27e": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      }
    },
    "a51d48d1-08a4-358f-807e-1b7ec261a243": {
      "content": "for (${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "a5238c87-390f-35a0-9a05-3ef2b5959335": {
      "content": "write.csv(${1:x}, ${2:file = ${3:\"\"}}, ${4:append = ${5:FALSE}}, ${6:quote = ${7:TRUE}}, ${8:sep = ${9:\" \"}}",
      "doc": "Write csv",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "wric",
      "matches": {
        "write": true
      }
    },
    "a524bb9a-b1f8-3849-8165-a3215859c98d": {
      "content": "augroup ${1:#:augroup_name}\n  autocmd!\n  autocmd ${2:#:event}\naugroup END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "augroup with autocmds",
      "matches": {
        "augroup": true
      }
    },
    "a525a62d-dd68-3886-a05e-274effbffe87": {
      "content": "pub enum ${1:Name} {\n\t${2},\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pub enum definition",
      "matches": {
        "penum": true
      }
    },
    "a52a253e-6198-3db5-a700-e72b6eb691d8": {
      "content": "type tt_${1:name} is table of tr_${0:name} index by binary_integer;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tti": true
      }
    },
    "a52c303c-8f24-362f-aa20-233f50dd9d89": {
      "content": "\\begin{tabbing}\n\t${1:TARGET}\n\\end{tabbing}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{tabbing} \\tabbing": true,
        "tabbing": true
      }
    },
    "a536ed8e-830b-3b6b-beae-08ebbb5b5e77": {
      "content": "text-transform: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      }
    },
    "a53dc33f-0ccb-3e44-bb86-e553203a956d": {
      "content": "float: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "float: left",
      "matches": {
        "fll": true
      }
    },
    "a543344e-85f6-32bb-8de0-f551da24c3fc": {
      "content": "# https://kubernetes.io/docs/concepts/configuration/secret/\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ${1:mysecret}\n  namespace: ${2:default}\ntype: Opaque\ndata:\n  # Example:\n  # password: {{ .Values.password | b64enc }}\n---\n$0",
      "doc": "k8s Secret",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Secret",
      "matches": {
        "k-secret": true
      }
    },
    "a5444026-c8a5-36fa-bcac-806aac5d2b17": {
      "content": "->(${1:args}) { ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "->a": true
      }
    },
    "a544da8d-99b5-3eb3-b958-c7d95dea20e0": {
      "content": "_.kebabCase(${string})",
      "doc": "_.kebabCase('Foo Bar');\n// => 'foo-bar'\n\n_.kebabCase('fooBar');\n// => 'foo-bar'\n\n_.kebabCase('__FOO_BAR__');\n// => 'foo-bar'\n\nConverts `string` to\n[kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-kebabcase",
      "matches": {
        "lodash kebabcase": true
      }
    },
    "a548d3b2-9189-35fa-8255-d346bf9140a5": {
      "content": "{% set asset = ${1:entry.assetFieldHandle}.one() %}\n\n{% if asset %}\n\t<img src=\"{{ asset.getUrl(\"${2:thumb}\") }}\" width=\"{{ asset.getWidth(\"${2:thumb}\") }}\" height=\"{{ asset.getHeight(\"${2:thumb}\") }}\" alt=\"{{ asset.title }}\">\n{% endif %}",
      "doc": "asset",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "asset",
      "matches": {
        "asset": true
      }
    },
    "a54bb237-b92c-3021-b80b-df7f9c991fd5": {
      "content": "_.join(${array}, ${separator})",
      "doc": "_.join(['a', 'b', 'c'], '~');\n// => 'a~b~c'\n\nConverts all elements in `array` into a string separated by `separator`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-join",
      "matches": {
        "lodash join": true
      }
    },
    "a54bb6e1-c2b8-39a5-bcc0-5de5ebd85216": {
      "content": "it { should respond_with ${0:status} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isrw": true
      }
    },
    "a55268fd-ba4b-3951-83a3-dea2835ca7e9": {
      "content": "{% verbatim %}\n\t${VISUAL}\n{% endverbatim %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "verbatim": true
      }
    },
    "a55ae1af-8224-3298-85fb-dca7b4d2a816": {
      "content": "do {\n\t$1\n} while($2);",
      "doc": "Creates a do...while loop",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Do...while loop",
      "matches": {
        "do": true
      }
    },
    "a55cadb1-f818-33cd-b4e8-e9427f29b2ed": {
      "content": "Element Should Not Contain    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Not Contain",
      "matches": {
        "esnc": true
      }
    },
    "a5681ddf-2bbb-3014-a857-43aab42989e6": {
      "content": "gl_FragCoord",
      "doc": "mediump vec4 gl_FragCoord;\n\nbool gl_FrontFacing;\n\nThe built-in variable gl_FragCoord is used by the OpenGL ES 2.0 pipeline to hand over the coordinates of the fragment to the fragment shader. The variable is read-only and the value is assigned by the OpenGL ES 2.0 pipeline.\nThe values of the fragment coordinate vector are given in the window coordinate system.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_FragCoord",
      "matches": {
        "gl_FragCoord": true
      }
    },
    "a5681f99-9646-332b-b2e8-e9931c0db8bf": {
      "content": "white-space-collapse: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      }
    },
    "a568d432-3384-3e0e-aded-c232d1e17ec3": {
      "content": "[[NSNotificationCenter defaultCenter] addObserver:${1:self} selector:@selector(${3}) name:${2:NSWindowDidBecomeMainNotification} object:${4:nil}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reg": true
      }
    },
    "a575abc6-202e-3101-8909-994e59b3a8e4": {
      "content": "${1:obj}.next('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "next": true
      }
    },
    "a575f173-212f-3d18-94be-8d8fc526d60e": {
      "content": "System.out.print(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "a57961e6-38b2-345c-b252-d10bab9c18fa": {
      "content": ".iter()$0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": ".iter()",
      "matches": {
        ".it": true
      }
    },
    "a57c05c9-debe-3fe1-a744-4752e15cbab4": {
      "content": "function numval-c(${1:string},${2:currency-symbol}${3:,ANYCASE})$0",
      "doc": "corresponding numeric value for string, case-sensitive if ANYCASE not given",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-numval-c",
      "matches": {
        "function numval-c": true
      }
    },
    "a58538cb-2b5a-32a1-89a5-1e114dff86bc": {
      "content": "expect(${1:target})$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect (js)",
      "matches": {
        "ex": true
      }
    },
    "a58a2b94-b143-315a-911a-a41d47b21ad4": {
      "content": "$this->shouldImplement($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldImplement('Type')",
      "matches": {
        "simplement": true
      }
    },
    "a58f41d4-4cc1-36e4-8a75-9fbddb92a189": {
      "content": "logger.info { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.info",
      "matches": {
        "logi": true
      }
    },
    "a593412b-13be-3e47-a9f1-d41b56d3a4ac": {
      "content": "const styles = StyleSheet.create({${1:first}})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeStyles",
      "matches": {
        "rnstyle": true
      }
    },
    "a5a3c27f-8fbe-3e7b-93c2-778ac49351f5": {
      "content": "for ${1:name} in [${2:start}..${3:finish}] by ${4:step}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrb": true
      }
    },
    "a5a6c548-b847-309a-bfa8-46236995a6f2": {
      "content": "place-items: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:s": true
      }
    },
    "a5a7e1bb-903a-323d-91f9-f84413be78e7": {
      "content": "page-break-before: always;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      }
    },
    "a5aa712c-829f-3c44-bb4b-0ae940cfab1c": {
      "content": "float32",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float",
      "matches": {
        "fl": true
      }
    },
    "a5b19492-4a9d-3a1a-acc3-9d0f1317966f": {
      "content": "${1:obj}.slideUp('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sup": true
      }
    },
    "a5b25cc8-4334-3b8b-8a71-b98b1dd8be75": {
      "content": "text-justify: tibetan",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:t": true
      }
    },
    "a5ba051b-9643-3fdc-9584-42edcca546ed": {
      "content": "var $1 = new sap.m.Button({\n\t\t\ttext : $2,\n\t\t\ttype : $3,\n\t\t\twidth : $4,\n\t\t\tenabled :$5,\n\t\t\tvisible :$6,\n\t\t\ticon : $7,\n\t\t\ticonFirst : $8,\n\t\t\tactiveIcon :$9,\n\t\t\ticonDensityAware : $10,\n\t\t});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapmbutton": true
      }
    },
    "a5bc779a-7f71-33ab-9baf-04b556f88b9e": {
      "content": "module ${1:name}\nexport ${2:struct}\nstruct ${2:struct} end\n\t$0\nend",
      "doc": "Code snippet for module block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "module",
      "matches": {
        "mod": true,
        "module": true
      }
    },
    "a5bde340-2725-3c5c-95ce-aaefa97c9150": {
      "content": "${1:FIELDNAME} = forms.DateTimeField($2, required=${3:False})",
      "doc": "DateTimeField (fdatetime)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fdatetime",
      "matches": {
        "fdatetime": true
      }
    },
    "a5bee595-109f-371f-ab7d-2ea4924d6b75": {
      "content": "scanf(\"${1}\", ${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "scanf(\"...\", ...);",
      "matches": {
        "scanf": true
      }
    },
    "a5c4cf71-c924-3de9-8667-1b50bf6fde15": {
      "content": "for(let ${1:first} in ${2:second}) {${3:third}}",
      "doc": "Iterating over property values of iterable objects",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "forIn",
      "matches": {
        "fin": true
      }
    },
    "a5c5ab41-ff88-34da-a4e9-0842263f876c": {
      "content": "$.extend(${1:true, }${2:target}, ${3:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extend": true
      }
    },
    "a5c7fa7d-6d19-393a-a850-c622b3ac8ca2": {
      "content": "${1:obj}.error(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "error": true
      }
    },
    "a5ccfda6-f4b7-312e-8fc2-283100d7174a": {
      "content": "System.err.println(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "errln": true
      }
    },
    "a5ce06f9-1072-37e1-a5bc-c27381c465cd": {
      "content": "copy(${1:srcImg}${2:, }${3:x}, ${4:y}, ${5:width}, ${6:height}, ${7:dx}, ${8:dy}, ${9:dwidth}, ${0:dheight});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "copy": true
      }
    },
    "a5d57004-efee-333f-8f47-1319b3c92cb9": {
      "content": "grep(${1:pattern}, ${2:x}, ${3:ignore.case = ${4:FALSE}}, ${5:perl = ${6:FALSE}}, ${7:fixed = ${8:TRUE}})",
      "doc": "Grep logical",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "grepl",
      "matches": {
        "grepl": true
      }
    },
    "a5e2b591-c773-35a6-86bc-7040d8032d02": {
      "content": "position: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      }
    },
    "a5eb19a8-59d8-3390-940b-ff2651353fc9": {
      "content": "$.parseJSON(${1:data})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsejson": true
      }
    },
    "a5ed9786-94a2-3ed3-ada2-105a5a5b3369": {
      "content": "{% while ${1:condition} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "a5eeed37-a138-3204-80b6-fd142a5e920c": {
      "content": "<% require IEx; IEx.pry %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      }
    },
    "a5eff7b3-7810-345c-a60e-d84c2d1b35cf": {
      "content": "tag=\"$1\"$0",
      "doc": "tag=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-tag",
      "matches": {
        "tag": true,
        "vue tag": true
      }
    },
    "a5f11ec1-57cd-3232-a6f0-8874bcbda701": {
      "content": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n  ${0}\nfinally\n  call setreg('$1', save_reg_$1, save_regtype_$1)\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "use register save",
      "matches": {
        "save_register": true
      }
    },
    "a5f9506f-32ce-3cfa-a20b-bac9740db69c": {
      "content": "form_label(\"${1:label text}\", \"${2:id}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_label": true
      }
    },
    "a5fa33a8-4164-3382-b42a-b87d8a7dd21c": {
      "content": "(map ${1:func} ${0:coll})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "a5fbd5d7-b7bc-34b5-8264-1e9950861200": {
      "content": "${1:obj}.hide('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      }
    },
    "a600850a-a7d6-3859-899b-7ddabc65d70c": {
      "content": "| join: '${1:, }'",
      "doc": "Array filter: join",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter join",
      "matches": {
        "join": true
      }
    },
    "a60868b4-f087-360d-bc1c-a1d2872af367": {
      "content": "public bool ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+&": true
      }
    },
    "a60ba647-0f28-33bf-9a49-2c33d92380ee": {
      "content": "class ${1:MODEL_NAME}DeleteView(DeleteView):\r\n    model = ${1:MODEL_NAME}\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "deleteview",
      "matches": {
        "deleteview": true
      }
    },
    "a6130dc9-31ca-3fa5-a305-c2f9f44ef7d8": {
      "content": "#if ${1:0}\n$0\n#endif /* $1 */",
      "doc": "Code snippet for #if",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#if",
      "matches": {
        "#if": true
      }
    },
    "a61549d8-2387-3bcb-96d6-6eea4dfbd656": {
      "content": "while (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "wh",
      "matches": {
        "while": true
      }
    },
    "a6163524-073e-3c28-8983-c662d9a0ccae": {
      "content": "borderTopRightRadius: ${1},",
      "doc": "borderTopRightRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderTopRightRadius",
      "matches": {
        "bor": true
      }
    },
    "a61d43f3-ff06-36f1-af03-532ac7d654bc": {
      "content": "str",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "String",
      "matches": {
        "T": true
      }
    },
    "a620da7e-55bd-3561-b7e9-7228706ece95": {
      "content": "logical :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bool": true
      }
    },
    "a627cc12-f0be-3493-b740-3e3161ef33de": {
      "content": "<h${1:1}>${2}</h$1>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      }
    },
    "a62d3978-8713-30f9-ba8e-7f8bd2950957": {
      "content": "validates_confirmation_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:should match confirmation}\", if: proc { |obj| ${5:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of if (vcif)",
      "matches": {
        "vcif": true
      }
    },
    "a630b110-2581-3129-8835-2086e1f3ac50": {
      "content": "<img src=\"${1}\" alt=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "a6338119-09a8-3871-8322-9de656d5d30d": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tFULL JOIN OUTER ${3:tableName2}\n\tON ${4:match}\n\tWHERE ${5:condition};",
      "doc": "Full Join",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "fjoin",
      "matches": {
        "fjoin": true
      }
    },
    "a635ec04-7c5c-33d2-8e81-3a2597ba2919": {
      "content": "${1:FIELDNAME} = models.NullBooleanField($2)",
      "doc": "NullBooleanField (mnullbool).\n\nLike a BooleanField, but allows NULL as one of the options.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mnullbool",
      "matches": {
        "mnullbool": true
      }
    },
    "a6379806-c1cf-3887-aaea-592b16703d3f": {
      "content": "program ${1:name}\r\n\r\n\timplicit none\r\n\t$0\r\n\r\nend program $1",
      "doc": "program",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "prog",
      "matches": {
        "prog": true
      }
    },
    "a63801ef-fa39-3a1e-8b70-dbeb97b37595": {
      "content": "{% ifequal $1 $2 %}\n\t$3\n{% endifequal %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifequal": true
      }
    },
    "a63c066b-ae3a-3b18-9074-7b795eb28172": {
      "content": "synchronized",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      }
    },
    "a63e7331-3236-39cb-b0f4-08ec5b8c80a7": {
      "content": "\\\\begin{center}\n\t${0:${VISUAL}}\n\\\\end{center}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "center environment",
      "matches": {
        "center": true
      }
    },
    "a649a01f-8ce2-39c2-919b-d6cf91d3206c": {
      "content": "<Proxy ${1:*}>\n\t${0:${VISUAL}}\n</Proxy>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      }
    },
    "a6557388-829e-3eed-b6d7-e1144c580348": {
      "content": "@if(${1:condition})\n   ${2}\n@endif",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "if ... endif",
      "matches": {
        "if": true
      }
    },
    "a657ea68-1971-3d99-a57f-24cae713153b": {
      "content": "Run Keyword If All Critical Tests Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If All Critical Tests Passed",
      "matches": {
        "rkiactp": true
      }
    },
    "a659fe75-d13b-30f5-b623-71ed181e3773": {
      "content": "beforeEnter(el) {\n\tconsole.log('beforeEnter');\n},\nenter(el, done) {\n\tconsole.log('enter');\n\tdone();\n},\nbeforeLeave(el) {\n\tconsole.log('beforeLeave');\n},\nleave(el, done) {\n\tconsole.log('leave');\n\tdone();\n},",
      "doc": "transition component js hooks",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-transition-methods-with-javascript-hooks",
      "matches": {
        "vanimhook-js": true,
        "vue transition methods with javascript hooks": true
      }
    },
    "a65b580d-c213-359f-9cbf-ae78ed82917d": {
      "content": "box(${1:width}, ${2:height}, ${0:depth});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "box": true
      }
    },
    "a65caeaf-19c1-31d1-89ba-d1a8d76a2807": {
      "content": "{{ csrfInput() }}\n$0",
      "doc": "csrf",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "csrf",
      "matches": {
        "csrf": true
      }
    },
    "a66092ee-8544-3fab-817c-43442fb1789a": {
      "content": "{elif ${1:expression}}\n\t$0",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "else if .. (eli)",
      "matches": {
        "eli": true
      }
    },
    "a6714b80-577b-34e4-aef3-ded8e7ccf13c": {
      "content": "${1:FIELDNAME} = serializers.IntegerField(${2})",
      "doc": "Django-rest Serializers ``IntegerField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF IntegerField",
      "matches": {
        "sint": true
      }
    },
    "a6732dfe-ce07-3802-9ed1-37a0f158bd3f": {
      "content": "int ${1:y} = threadIdx.y + blockIdx.y * blockDim.y;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Y index (1D)",
      "matches": {
        "iy": true
      }
    },
    "a6787877-aa20-3076-932d-e2e3821378bc": {
      "content": "vertex(${1:x}, ${2:y}${3:, }${4:u}${5:, }${0:v});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vertex": true
      }
    },
    "a67f867b-2aef-3a65-8cb5-bf9bc02902f6": {
      "content": "(def ${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "a687724b-0a8e-3521-a710-797ccff231ed": {
      "content": "<sub>${0}</sub>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "a6897932-8f27-335b-bcf5-acbe6731ad17": {
      "content": "${1:first}.forEach(${2:second} => {${3:third}})",
      "doc": "Creates a forEach statement",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "forEach",
      "matches": {
        "fre": true
      }
    },
    "a68cb65e-9566-3af4-ad18-2b403a327f2b": {
      "content": "class {\n\t[string] ${1:FirstName}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "a68f0ca7-7afd-396a-a727-5bc58d7caf71": {
      "content": "valuetype-id $1 ${2:public}.\n01 item string ${2:public}.\n\nmethod-id new ${2:public}.\nprocedure division.\n   $0\nend method.\n\nend valuetype.",
      "doc": "valuetype",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "valuetype",
      "matches": {
        "valuetype-id": true,
        "vi": true
      }
    },
    "a68f10cc-5204-3fff-9c6f-9d270d2ca60a": {
      "content": "assert_equal ${1:expected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ase": true
      }
    },
    "a69422d4-68ea-3a7c-b6c2-a297a63064f7": {
      "content": "slot",
      "doc": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "slotE",
      "matches": {
        "slotE": true
      }
    },
    "a69792ec-b58a-3764-8f95-3c8a75d149fd": {
      "content": "<select name=\"${1}\" id=\"${2:$1}\">\n\t${0}\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "select": true
      }
    },
    "a6a0aa0e-0526-3416-a485-c8043e838fe2": {
      "content": "try do\n  ${1:TARGET}\nrescue\n  ${2} -> ${3}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "try .. rescue .. end",
      "matches": {
        "try": true
      }
    },
    "a6a44c73-a15f-319c-990d-164f88fdb38d": {
      "content": "const ${TM_FILENAME_BASE} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${TM_FILENAME_BASE}",
      "doc": "Creates a React function component without PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactFunctionComponent",
      "matches": {
        "rfc": true
      }
    },
    "a6a7180f-ce05-38ee-a6ab-5dbd912a246a": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a6a7decc-d61b-33df-a7f8-2541518bcda4": {
      "content": "${1:FIELDNAME} = models.XMLField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "XMLField",
      "matches": {
        "mxml": true
      }
    },
    "a6a82d8f-879b-3c87-b171-9db90e4beed9": {
      "content": "switch ${1:n}\n\tcase ${2:0}\n\t\t${3}${4:\n\totherwise\n\t\t${5}}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "switch ... otherwise",
      "matches": {
        "switch": true
      }
    },
    "a6ae02de-2b0d-3184-83aa-93b3b0d814ea": {
      "content": "def ${1:#:method_name}\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "def ... end",
      "matches": {
        "def": true
      }
    },
    "a6ae8004-5ac3-3a73-9680-d09ee237d9d5": {
      "content": "| asset_url",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asset_url": true
      }
    },
    "a6aef483-94aa-330d-8a7f-5ee34a99c75b": {
      "content": "import pudb; pudb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import pudb..",
      "matches": {
        "pudb": true
      }
    },
    "a6b19594-b116-3904-87f0-a07a9f03389b": {
      "content": "type ${1} = { ${0} }",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rec": true
      }
    },
    "a6b52dfd-8fa6-35f8-b6d7-2e7e1cb320e7": {
      "content": "if (${1:#:condition}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a6c3979e-6d62-32b4-b754-cac1cb4f7d30": {
      "content": "DEFINE BUFFER b_${1:TableName} FOR $1 ${0}.",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defbuf": true
      }
    },
    "a6c418c1-86ff-3ce8-b02a-504509783a68": {
      "content": "xhr :delete, :${1:destroy}, id: ${2:1}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xdelete": true
      }
    },
    "a6c71985-2712-3757-b4c9-a89df3e6cd2a": {
      "content": "$routeProvider.otherwise redirectTo: '${1:url}'\n${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngro": true
      }
    },
    "a6cb1ed1-ef99-3bf8-ac3f-5cad8729d178": {
      "content": "const ${1:cx} = ${2:classNames}.bind(styles);",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-bind-usage",
      "matches": {
        "classnames bind usage": true
      }
    },
    "a6d12dfb-1c6e-3af5-83e1-5567d62ab197": {
      "content": "map(&:${1:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map(&:sym_proc)",
      "matches": {
        "mp": true
      }
    },
    "a6d59f3f-71f6-3745-ab4f-ae35b4527ba5": {
      "content": "std.stdio",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "io": true
      }
    },
    "a6e1a3f0-98b6-3bb9-9d89-ce21d97c1905": {
      "content": "background-repeat: repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:r": true
      }
    },
    "a6e82b5f-e21a-302d-ad20-553d87606017": {
      "content": "text-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh+": true
      }
    },
    "a6e9b881-354a-3223-9a51-4e944bfc8293": {
      "content": "validates_presence_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:can't be blank}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_presence_of (vp)",
      "matches": {
        "vp": true
      }
    },
    "a6eff484-af59-3b12-a9eb-565ae9e0e2d5": {
      "content": "<body>\n\t$1\n</body>",
      "doc": "HTML - Defines the body element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "body",
      "matches": {
        "body": true
      }
    },
    "a6f91012-af8a-3056-9d02-bc1bac59b287": {
      "content": "mixin ${1:/*mixed_in*/} ${2:/*name*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "mixin (mixin)",
      "matches": {
        "mixin": true
      }
    },
    "a7015789-4b2f-3573-9130-228a137d6011": {
      "content": "interface I${1:Name}\n{\n    $0\n}",
      "doc": "Interface",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Interface",
      "matches": {
        "interface": true
      }
    },
    "a70868ce-8b9f-36b3-998e-31cb45d7c67f": {
      "content": "NSMutableArray *${1:array} = [NSMutableArray array];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSArray (array)",
      "matches": {
        "array": true
      }
    },
    "a70f3d0c-63a9-3b15-b64f-31fdffb45be6": {
      "content": "library ${1};\n${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      }
    },
    "a719cba6-d7ad-3d15-b9be-70f5ad91cce3": {
      "content": "<small>${1:TARGET}</small>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "small": true
      }
    },
    "a722e243-90d5-3bc9-b296-de17204271ce": {
      "content": "Yii::app()->clientScript->registerScript('${1:id}', '${2}', CClientScript::POS_${0:READY});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregs": true
      }
    },
    "a726408a-70c3-3b7d-9902-ae4d0fbaad9b": {
      "content": "const ${1:store} = readable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-readable",
      "matches": {
        "svelte readable": true,
        "svr": true
      }
    },
    "a7271da7-9bdd-3e62-ac30-ecddae4cb81a": {
      "content": "use ${0:test_class};\n$1->runtests();",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trunner": true
      }
    },
    "a728af1b-f9cc-32be-9251-1a3f07f15e3d": {
      "content": "{%- cycle '${0:odd}', '${1:even}' -%}",
      "doc": "Iteration tag: cycle",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag cycle",
      "matches": {
        "cycle": true
      }
    },
    "a72967d3-7fdd-3618-8ce2-e4d4c4250822": {
      "content": "border-left-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlc": true
      }
    },
    "a72c7e36-d14a-31e2-8707-d5dc29da73d0": {
      "content": "FUNCTION CURRENCY-SYMBOL()$0",
      "doc": "function currency symbol character currently in effect for the locale under which the program is running",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-CURRENCY-SYMBOL",
      "matches": {
        "FUNCTION CURRENCY-SYMBOL": true
      }
    },
    "a737d92f-2d94-394d-a34c-122d76abf568": {
      "content": "activated() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "activated",
      "matches": {
        "activated": true
      }
    },
    "a7396d47-9307-3ce0-b276-e9bd8547d20c": {
      "content": "Option<${1:()}>${2}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Option<A>",
      "matches": {
        "opt": true
      }
    },
    "a73bb4ac-8b87-37ed-9b8c-75fd0481b62f": {
      "content": "### OSX ###\n*.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \r\nIcon\n# Thumbnails\n._*\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules\njspm_packages\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# Nuxt build\n.nuxt\n\n# Nuxt generate\ndist",
      "doc": "gitignore file",
      "filetype": "ignore",
      "grammar": "lsp",
      "label": "Gitignore",
      "matches": {
        "gitignore": true
      }
    },
    "a744496a-3d89-3ab4-afc9-e1b8faf97969": {
      "content": "watch(() => ${1:foo}, (newValue, oldValue) => {\n\t${2}\n})",
      "doc": "Requires watching a specific data source, and applies side effects in a separate callback function.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watch",
      "matches": {
        "vue v3 watch": true
      }
    },
    "a744c600-6fde-33e0-b2db-7ea92282ad9f": {
      "content": "(function(${1}) {\n  'use strict';\n  ${0:TARGET}\n})(${2});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iife": true
      }
    },
    "a745976f-7de8-3d30-ae93-28b27b14834b": {
      "content": "read.table('${1:filename}'${2:, header = ${3:TRUE},  sep = '${4:\t}',  stringsAsFactors = ${5:FALSE}})",
      "doc": "Read From File",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "reat",
      "matches": {
        "read": true
      }
    },
    "a748a796-472d-3ec3-b849-c2b59559fbd6": {
      "content": "//#endregion",
      "doc": "Folding Region End",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      }
    },
    "a74a983f-1190-323a-9f7d-16cceecb25a7": {
      "content": "trait ${1:Name} {\n    ${2:// add code here}\n}",
      "doc": "trait … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "trait",
      "matches": {
        "trait": true
      }
    },
    "a74eb1ca-85c7-3ec1-b167-69a9034ecd45": {
      "content": "<Helmet>\n  <title>${1:title}</title>\n</Helmet>",
      "doc": "",
      "filetype": "react-helmet",
      "grammar": "lsp",
      "label": "react-helmet-title",
      "matches": {
        "react-helmet title": true
      }
    },
    "a7510895-0c70-3d3d-af92-6dbc4e371780": {
      "content": "default:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "a768a126-de00-3014-9078-4280c89c011c": {
      "content": "${1:fn} := func() {\n\t${2:${VISUAL}}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fn := func() { ... }",
      "matches": {
        "anon": true
      }
    },
    "a7743fef-33b7-39bd-9aba-5752098bcca5": {
      "content": "${1:obj}.change (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "change": true
      }
    },
    "a7765006-7838-3da4-819d-17d5f76aa6e8": {
      "content": "else\n\t$0\nend",
      "doc": "Code snippet for else statement.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "a77c71cf-2f38-3770-8dd6-abee5c2f6b5f": {
      "content": "for (let ${1:index} = 0; ${1:index} < ${2:array}.length; ${1:index}++) {\n\tconst ${3:element} = ${2:array}[${1:index}];\n\t$0\n}",
      "doc": "For Loop",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "For Loop",
      "matches": {
        "for": true
      }
    },
    "a77d0c52-fc19-310a-809e-cefe9649ae7f": {
      "content": "package\n{\n\timport org.flixel.*\n\n\tpublic class ${1:ClassName} extends ${2:FlxSprite}\n\t{\n\t\tpublic function $1(${3: X:Number, Y:Number}):void\n\t\t{\n\t\t\tsuper(X,Y);\n\t\t\t${4}\n\t\t}\n\n\t\toverride public function update():void\n\t\t{\n\t\t\tsuper.update();\n\t\t\t${0}\n\t\t}\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FlxSprite": true
      }
    },
    "a77e4bd6-e98d-3122-b2bf-99dfb829f594": {
      "content": "cursor: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      }
    },
    "a77ea86d-f0b0-30d5-ba67-59844c9534c0": {
      "content": "mixed.withMutation()",
      "doc": "mixed.withMutation(builder: (current: Schema) => void): void\n\nFirst the legally required Rich Hickey quote:\nIf a tree falls in the woods, does it make a sound?\nIf a pure function mutates some local data in order to produce an immutable return value, is that ok?\nwithMutation allows you to mutate the schema in place, instead of the default behavior which clones before each change.\nGenerally this isn't necessary since the vast majority of schema changes happen during the initial\ndeclaration, and only happen once over the lifetime of the schema, so performance isn't an issue.\nHowever certain mutations do occur at cast/validation time, (such as conditional schema using when()), or\nwhen instantiating a schema object.object()\n  .shape({ key: string() })\n  .withMutation(schema => {\n    return arrayOfObjectTests.forEach(test => {\n      schema.test(test);\n    });\n  });",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-with-mutation",
      "matches": {
        "yup mixed withmutation": true
      }
    },
    "a77f04f4-c010-38b4-ae91-85a7d06063b4": {
      "content": "(if (${1:predicate})\n\t(${2:true-action})\n\t(${0:false-action}))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a781a4c7-527f-39e5-94d4-3bfa90ad6c00": {
      "content": "Rails.logger.${1:debug} ${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "a786cee4-328c-341a-acc7-d94448f6c859": {
      "content": "vapply(${1:list}, ${2:function}, FUN.VALUE = ${3:type}, ${4:...})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "vapply",
      "matches": {
        "vapply": true
      }
    },
    "a791439f-3cf4-3b6a-b278-892a471667ea": {
      "content": "${1:obj}.removeData('${2:key name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remd": true
      }
    },
    "a79fc049-e0b9-3713-8bd6-9adb26ca6be3": {
      "content": "v-show='${1:condition}'",
      "doc": "Expects: any",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-show",
      "matches": {
        "vShow": true
      }
    },
    "a7a457b5-f1f5-3948-9d2f-e993e951631b": {
      "content": "_.uniqWith(${array}, ${comparator})",
      "doc": "var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\n_.uniqWith(objects, _.isEqual);\n// => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\nThis method is like `_.uniq` except that it accepts `comparator` which\nis invoked to compare elements of `array`. The order of result values is\ndetermined by the order they occur in the array.The comparator is invoked\nwith two arguments: (arrVal, othVal).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqwith",
      "matches": {
        "lodash uniqwith": true
      }
    },
    "a7aa9bbd-ac97-3c60-8093-c2ca0e193f8a": {
      "content": "main(_) -> io:format(\"Hello, world!\\n\").",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "a7ab8cbc-79c4-3b6b-ad4b-27fbf5b972b2": {
      "content": "@php\n\t${1:${VISUAL}}\n@endphp",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@php directive",
      "matches": {
        "php": true
      }
    },
    "a7ac10cc-7b43-34ce-86f0-11a280477dda": {
      "content": "bind:@\"${1:binding}\" toObject:${2:observableController} withKeyPath:@\"${3:keyPath}\" options:${4:nil}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Key:value binding (bind)",
      "matches": {
        "bind": true
      }
    },
    "a7b88f33-7fa8-382c-8245-72e40b1bd5ea": {
      "content": "var ${1:name} = ${2:value}",
      "doc": "Snippet for a variable",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "variable declaration",
      "matches": {
        "var": true
      }
    },
    "a7c357f6-3bd5-3368-9a9c-29c71b0ec875": {
      "content": "${1:w} http.ResponseWriter, ${2:r} *http.Request",
      "doc": "Snippet for http Response",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http ResponseWriter *Request",
      "matches": {
        "wr": true
      }
    },
    "a7c9ed25-99a6-3c7d-84b6-d1069c119d68": {
      "content": "console.error(${1:first})",
      "doc": "Displays a message in the console and also includes a stack trace from where the method was called",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleError",
      "matches": {
        "cer": true
      }
    },
    "a7cbfb33-5a5d-3be9-b39f-1567d24978e5": {
      "content": "{%- layout none -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layoutnone-": true
      }
    },
    "a7d10ffc-47cf-3c24-ba16-5843f896e339": {
      "content": "Page Should Not Contain Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Button",
      "matches": {
        "psncb": true
      }
    },
    "a7d42821-fd21-388b-8648-02d934e56ebb": {
      "content": "each { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ea": true
      }
    },
    "a7d49422-94c8-34d8-aeea-f5e2091c7276": {
      "content": "while (${1:#:condition})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "while () begin ... end",
      "matches": {
        "while": true
      }
    },
    "a7d83e23-fd86-3b6e-8a34-939fec1327e8": {
      "content": "${1:name}.isInstanceOf[${2:T}]",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "is": true
      }
    },
    "a7da69c0-b685-3676-aa43-cb43d3054c8a": {
      "content": "if (${1:condition}) {\n\t${0}\n} else {\n\t\n}",
      "doc": "if/else statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if-else-statement",
      "matches": {
        "base if else": true
      }
    },
    "a7f2e327-00cb-3fb2-a394-61805c92a454": {
      "content": "urlizetrunc:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      }
    },
    "a7f5c066-4322-373d-8dfa-1523e098960d": {
      "content": "acos(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "acos": true
      }
    },
    "a7f5d69e-b724-3acd-8139-e8ca1e0f7b64": {
      "content": "#+ATTR_HTML: :width ${1:500px}",
      "doc": "#+attr_html: :width ...",
      "filetype": "org",
      "grammar": "lsp",
      "label": "html width",
      "matches": {
        "#+ATTR_HTML: :width ${1:500px}": true
      }
    },
    "a805d5d0-1d38-36e3-9199-130dc28abde0": {
      "content": "void main(string[] args) {\n\t${0}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maina": true
      }
    },
    "a8078bb1-b9d4-32dd-9c32-c3d19879f7c7": {
      "content": "@mixin ${1:name}(${2}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mix": true
      }
    },
    "a80906c5-8ce3-33be-beed-ba9913dcc8d9": {
      "content": "<%call expr=\"${1:name}\">\n\t${2:}\n</%call>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "call",
      "matches": {
        "call": true
      }
    },
    "a8090d31-7297-3631-98ae-124f5fd345ab": {
      "content": "main() {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "a80af55c-8a73-389f-b5ac-db46a06afac1": {
      "content": "event ${1:name}(${2:type} ${3:name} $0);",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "event declaration",
      "matches": {
        "ev": true
      }
    },
    "a80f391a-5eab-3a97-9272-ab56bc1238ca": {
      "content": "margin-bottom: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin-bottom",
      "matches": {
        "marb": true
      }
    },
    "a80fb390-c97e-314b-b718-5ec261238ec2": {
      "content": "- name: https\n  port: 443\n  protocol: TCP\n  targetPort: {{ .Values.$1.service.targetPorts.https }}\n  {{- if (and (eq .Values.$1.service.type \"NodePort\") (not (empty .Values.$1.service.nodePorts.https))) }}\n  nodePort: {{ .Values.${1:value_key}.service.nodePorts.https }}\n  {{- end }}\n  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "portHTTPS_spec": true
      }
    },
    "a816a95d-5ee7-3ef7-852b-ac1f6d6c64ca": {
      "content": "var_export(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "var_export($var)",
      "matches": {
        "var": true
      }
    },
    "a81a2352-89bd-3d20-a83a-b3425ca28b8d": {
      "content": "import { store } from './store/index';",
      "doc": "import vuex store into main.js",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vue Import Vuex Store",
      "matches": {
        "vstore-import": true
      }
    },
    "a81b5019-2c11-3b6a-a8b7-d078348fe651": {
      "content": "java.math.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.m": true
      }
    },
    "a8218b36-147b-3674-9011-5a174f1936ca": {
      "content": "final",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fin": true
      }
    },
    "a8240307-01bf-330d-856a-76fff960f622": {
      "content": "FUNCTION NUMVAL-C(${1:string},${2:currency-symbol}${3:,ANYCASE})$0",
      "doc": "corresponding numeric value for string, case-sensitive if ANYCASE not given",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-NUMVAL-C",
      "matches": {
        "FUNCTION NUMVAL-C": true
      }
    },
    "a8258599-c01f-302a-96e5-1f3ec599d635": {
      "content": "each_char {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_char": true
      }
    },
    "a82911c7-7597-39a3-9ca5-9fbc0ad2b9d4": {
      "content": "$this->beConstructedThrough(${1:'methodName'}, [${2:'$arg'}]);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->beConstructedThrough($methodName, [$arg])",
      "matches": {
        "ct": true
      }
    },
    "a829cc0c-b31b-3a1e-86f0-a98f7c1e4f7c": {
      "content": "cursor default",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:d": true
      }
    },
    "a82a59bb-9f80-37c9-ae87-da3cfa874603": {
      "content": "_.first(${array})",
      "doc": "_.head([1, 2, 3]);\n// => 1\n\n_.head([]);\n// => undefined\n\nGets the first element of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-first",
      "matches": {
        "lodash first": true
      }
    },
    "a8317c3d-6d53-3138-a65b-95b88b24f2b5": {
      "content": "echo CHtml::cssFile('${1:url}','${0:media}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcssf": true
      }
    },
    "a8317f94-6c3d-3d3b-9e84-b0cc54e78379": {
      "content": "fgets(${0:ROW}, ${1:LENGTH}, ${2:stdin});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fgets(row, length, file);",
      "matches": {
        "fgets": true
      }
    },
    "a8320fcb-5c46-3658-9d76-dd55e87c40e8": {
      "content": "import '${1:module}';$0",
      "doc": "Imports entire module in ES6 syntax without module name",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "importNoModuleName",
      "matches": {
        "imn": true
      }
    },
    "a83328f6-246c-33ee-be00-a63a8304524f": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State) => state.${3:property}\n);",
      "doc": "Creates an NgRx Selector",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-selector",
      "matches": {
        "a-ngrx-create-selector": true,
        "angular ng rx create selector": true
      }
    },
    "a846ac33-ebce-33ff-92db-0ecc98e83c17": {
      "content": "input {\n\tmessage '${1:Should we continue?}'\n\tok '${2:Yes, we should.}'\n\tsubmitter '${3:alice,bob}'\n\tparameters {\n\t\tstring(name: '${4:PERSON}' , defaultValue: '${5:Mr Jenkins}' , description: '${6:Who should I say hello to?}')\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      }
    },
    "a84847ad-6c70-30d8-858f-b3dc9a4ecba0": {
      "content": "Object.values(${1:obj})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.values",
      "matches": {
        "ov": true
      }
    },
    "a84a5d4c-6aeb-3bac-b41c-1cc2be1a9b7b": {
      "content": "<ul>\n\t{% nav category in craft.categories\n\t\t.group(\"${1:categoryGroupHandle}\")\n\t\t.limit(${2:11})\n\t\t.all()\n\t%}\n\t\t<li>\n\t\t\t<a href=\"{{ category.url }}\">{{ category.title }}</a>\n\t\t\t{% ifchildren %}\n\t\t\t\t<ul>\n\t\t\t\t\t{% children %}\n\t\t\t\t</ul>\n\t\t\t{% endifchildren %}\n\t\t</li>\n\t{% endnav %}\n</ul>",
      "doc": "craft.categories",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "categories",
      "matches": {
        "categories": true
      }
    },
    "a84fca5d-be60-3f02-b3f7-8cfda0dd2ecd": {
      "content": "<%= select ${1:f}, :${2:field}, ${3:[{\"key\", \"value\"}]}, prompt: ${4:\"Prompt\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "sl": true
      }
    },
    "a854632f-0c79-3df4-975e-f23385396e9a": {
      "content": "text-emphasis before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      }
    },
    "a8573480-4dde-351c-a069-b360ed78716a": {
      "content": "defmodule ${1:module_name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "def module",
      "matches": {
        "defm": true
      }
    },
    "a8650ada-1ba9-3320-b2e6-19a8e10ad42f": {
      "content": "_.xor(${arrays})",
      "doc": "_.xor([2, 1], [2, 3]);\n// => [1, 3]\n\nCreates an array of unique values that is the\n[symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\nof the given arrays. The order of result values is determined by the order\nthey occur in the arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-xor",
      "matches": {
        "lodash xor": true
      }
    },
    "a86c015f-e8fa-3665-a6ea-70c5093ec9aa": {
      "content": "| asset_url",
      "doc": "URL filter: asset url",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter asset url",
      "matches": {
        "asset_url": true
      }
    },
    "a86e0e3c-5395-3e98-8c85-cd0f8ec5aa3e": {
      "content": "mutable.HashSet${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mhset": true
      }
    },
    "a8725982-38ff-349e-869f-b7637a1405c8": {
      "content": "- (${1:#:id})${2:#:attribute}\n{\n\t[self willAccessValueForKey:@\"$2\"];\n\t$1 value = [self primitiveValueForKey:@\"$2\"];\n\t[self didAccessValueForKey:@\"$2\"];\n\treturn value;\n}\n\n- (void)set$2:($1)aValue\n{\n\t[self willChangeValueForKey:@\"$2\"];\n\t[self setPrimitiveValue:aValue forKey:@\"$2\"];\n\t[self didChangeValueForKey:@\"$2\"];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "CoreData",
      "matches": {
        "cd": true
      }
    },
    "a8736aac-6aca-304d-a661-bd5197397f52": {
      "content": "line-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lh": true,
        "line-height": true
      }
    },
    "a8748b20-38a4-3805-93b3-6c406df0f3df": {
      "content": "[NSThread detachNewThreadSelector:@selector(${1:#:method}:) toTarget:${2:#:aTarget} withObject:${3:#:anArgument}]",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thread": true
      }
    },
    "a876cf3d-ab8c-398a-8107-3f3b284f9490": {
      "content": "t.time :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.time (tcti)",
      "matches": {
        "t.": true
      }
    },
    "a8771e77-adf9-3a66-ad20-91c4ae5fb5a9": {
      "content": "@disable ${1:/*method*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@disable (dis)",
      "matches": {
        "dis": true
      }
    },
    "a87a66a1-c8b8-3099-9a4d-e2c824a1621f": {
      "content": "{% break %}",
      "doc": "Iteration tag: break",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag break",
      "matches": {
        "break": true
      }
    },
    "a87b191e-1283-3ff9-a6eb-ac25febfa40f": {
      "content": "font-stretch: semi-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      }
    },
    "a87b4769-c9d6-367d-843f-e172704ba04b": {
      "content": "import React from 'react';\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component as a named function without PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessFunction",
      "matches": {
        "rsf": true
      }
    },
    "a87b9ac7-0aa4-3457-a6b6-ec54b0cd9041": {
      "content": "| slice: ${1:at}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice_single": true
      }
    },
    "a880b9f6-0db3-3178-a85e-8b7d3e5d4536": {
      "content": "function ${1} return ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function declaration",
      "matches": {
        "function_declare": true
      }
    },
    "a882b727-617e-3cce-ab16-ec9a28f1f065": {
      "content": "margin-right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      }
    },
    "a891dfc2-d008-333b-926d-7c19e943ef43": {
      "content": "wont_be_same_as ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbsa": true
      }
    },
    "a89d2bb9-9198-3a18-a68e-8b5f5c27bc85": {
      "content": "require('dotenv-safe').config({ debug: ${1|true,false|} })",
      "doc": "You may turn on logging to help debug why certain keys or values are not being set as you expect.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-debug",
      "matches": {
        "dotenv-safe debug": true
      }
    },
    "a8a6bdec-832c-3cf7-9a1a-b7022c2f2e16": {
      "content": "mapping (${1:type1}=>${2:type2}) ${3:name};",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "mapping declaration",
      "matches": {
        "map": true
      }
    },
    "a8b751d9-51ef-3336-a634-216d001c245c": {
      "content": "<del>$1</del>$2",
      "doc": "HTML - Defines deleted text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "del",
      "matches": {
        "del": true
      }
    },
    "a8b7847e-2eab-32a0-b4ba-67c39c006b0c": {
      "content": "FUNCTION NUMVAL-F(${1:string})$0",
      "doc": "corresponding numeric value for floating-point-string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-NUMVAL-F",
      "matches": {
        "FUNCTION NUMVAL-F": true
      }
    },
    "a8b9f3cf-d31e-3e7a-9411-d456795c4a36": {
      "content": "@each ${1:$item} in ${2:items}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each": true
      }
    },
    "a8beed5b-22b4-316c-8a8b-0d4745563831": {
      "content": "FUNCTION YEAR-TO-YYYY(${1:yy},${2:[yy-cutoff, default: 50},${3:yy-execution-time, default: now})$0",
      "doc": "convert yy to yyyy with optional yy-cutoff to delineate centuries",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-YEAR-TO-YYYY",
      "matches": {
        "FUNCTION YEAR-TO-YYYY": true,
        "FY": true
      }
    },
    "a8c1a1e2-7b53-329e-998a-66656c674404": {
      "content": "#![warn(${1})]",
      "doc": "#![warn(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "warn",
      "matches": {
        "warn": true
      }
    },
    "a8c5a3e3-bfa1-320b-83d6-ae76a728e5b2": {
      "content": "new $1($2);",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "new (new)",
      "matches": {
        "new": true
      }
    },
    "a8c800ee-5722-3779-9237-e63ebc8ce7c2": {
      "content": "${1|transition,in,out|}:${2:name}={${3:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-params",
      "matches": {
        "svelte transition params": true,
        "svtp": true
      }
    },
    "a8c8d358-afe4-3fb4-a522-6baa9a1d8d08": {
      "content": "{% spaceless %}${0}{% endspaceless %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spaceless": true
      }
    },
    "a8d5526a-da6a-3160-b7fa-6415bb3cc270": {
      "content": "${1:obj}.fadeIn('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadein": true
      }
    },
    "a8d8cce9-a27d-36d7-9e89-bf34321b9bf8": {
      "content": "<thead>\n\t${0}\n</thead>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thead": true
      }
    },
    "a8e2619c-da34-3d58-95fa-4c94c4e2584c": {
      "content": "error_log(var_export(${1}, true));",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "error_log(var_export($var, true));",
      "matches": {
        "log": true
      }
    },
    "a8e2a46e-7d1c-396b-9bc9-975a1698ac9f": {
      "content": "background-position: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backposition": true,
        "bp": true
      }
    },
    "a8e5118a-0069-38c2-8d3d-4eebea04bf92": {
      "content": "${1:app}.delete('$2', $3);",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "express DELETE",
      "matches": {
        "edelete": true
      }
    },
    "a8e835ae-f534-3732-9dcf-9bca44ccabd1": {
      "content": "{\n\t\"type\": \"url\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_url": true
      }
    },
    "a8ebab31-0bf1-3be9-9cd3-3b7d125ae028": {
      "content": "grid-row-start ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "grs": true
      }
    },
    "a8ee55f9-4beb-395d-abb1-0bb1b2e61316": {
      "content": "<${1:div}::${2:stylename}>\n\t$0\n</${1:div}>",
      "doc": "HTML elements can be written as in standard HTML.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "HTML Elements",
      "matches": {
        "div": true
      }
    },
    "a8f22fcd-041b-3cbb-ab86-5e763645caea": {
      "content": "real :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "real": true
      }
    },
    "a8f3f792-17a6-3817-8e60-094924a922f4": {
      "content": "is_null($${1:var})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "is_null",
      "matches": {
        "in": true
      }
    },
    "a8f6bf9c-19ff-3a21-b9b6-de2d678c96d8": {
      "content": "<em>${0}</em>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "em": true
      }
    },
    "a8fd6eb0-8093-342c-8225-5eb940ca9651": {
      "content": "${1:FIELDNAME} = serializers.DurationField(${2})",
      "doc": "Django-rest Serializers ``DurationField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF DurationField",
      "matches": {
        "sduration": true
      }
    },
    "a8fe9cbc-edc6-3ad7-a53d-b06a272f4338": {
      "content": "font-variant ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      }
    },
    "a9005c91-f2fd-3041-b6b2-b48fc896d702": {
      "content": "import ${2:second} from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "imp": true
      }
    },
    "a900a8f1-beb6-3f28-8065-0817a5b86229": {
      "content": "/** @var ${3:string} */\n${1:public} $${2};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "att": true
      }
    },
    "a90a8280-528d-31ae-b5b5-8341e8fd4b23": {
      "content": "if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "a90af605-d0e9-30e4-8d7b-cf0cffe9d2c7": {
      "content": "place-items: ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+": true
      }
    },
    "a90b99d1-bac2-38d2-b232-5b53a09dfc75": {
      "content": "border-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdc": true
      }
    },
    "a90e8360-17fe-3346-98bb-c07eea22434d": {
      "content": "each_slice(${1:2}) { |${2:group}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eas-": true
      }
    },
    "a914e4be-60c8-3ba6-95a4-79d6e6afe3f3": {
      "content": "expect(${1:target}).wasNotCalled()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was not called (coffee)",
      "matches": {
        "notsc": true
      }
    },
    "a917b953-92fe-3bfb-9aaa-7a52a4d9b15e": {
      "content": "echo CHtml::ajaxSubmitButton('${1:label}', '${2:url}',array('${3:ajaxOptionName}'=>${4:ajaxOptionValue}),array('${5:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhajsb": true
      }
    },
    "a91d033f-3ede-3604-9d66-99656e6d3d15": {
      "content": "_.partialRight(${func}, ${partials})",
      "doc": "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar greetFred = _.partialRight(greet, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\n// Partially applied with placeholders.\nvar sayHelloTo = _.partialRight(greet, 'hello', _);\nsayHelloTo('fred');\n// => 'hello fred'\n\nThis method is like `_.partial` except that partially applied arguments\nare appended to the arguments it receives.\n\nThe `_.partialRight.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partialright",
      "matches": {
        "lodash partialright": true
      }
    },
    "a91de177-ff7a-3d20-8a6b-a1a39c5e9158": {
      "content": "macro ${1}(${2})\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "macro ... end",
      "matches": {
        "macro": true
      }
    },
    "a91f85e2-c1af-37e6-a9fe-b4b3c8f64eea": {
      "content": "componentWillMount() {\n\t$0\n}",
      "doc": "Invoked once, both on the client and server, immediately before the initial rendering occurs",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillMount",
      "matches": {
        "cwm": true
      }
    },
    "a9227051-f43d-3375-b618-42fd2ad7a391": {
      "content": "truncatewords_html:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      }
    },
    "a929e5f1-30c0-33cf-ba8b-d96adb4a717f": {
      "content": "class-id $1 ${3|public,private|}.\n\n       method-id new public.\n       procedure division.\n           $0\n           exit method.\n       end method.\n\n       end class.",
      "doc": "class with ctor",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "class-id",
      "matches": {
        "class-id": true
      }
    },
    "a92bdf8d-4795-3302-8a57-6bcc5e94121e": {
      "content": "do\n{\n    $0\n} while (${1:true});",
      "doc": "do...while loop",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "do...while loop",
      "matches": {
        "do": true
      }
    },
    "a92cb35e-9f1b-36f9-ae2d-2d48cfc739ee": {
      "content": "[routerLink]=\"['${1:routePath}', ${2:routeParameterValue}]\"\nrouterLinkActive=\"${3:router-link-active}\"$0",
      "doc": "Angular routerLink with a route parameter",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngRouterLinkWithParameter",
      "matches": {
        "a-routerLink-param": true
      }
    },
    "a92d0d56-8dd6-307d-add0-d48d1edd4354": {
      "content": "elseif ( ${1:condition} ) then",
      "doc": "elseif",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "elif",
      "matches": {
        "elif": true
      }
    },
    "a9305686-0d79-3973-99eb-7bbf42e8a196": {
      "content": "character(${1}), dimension(${2}) :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "character dimension",
      "matches": {
        "chd": true
      }
    },
    "a95010f0-222b-33d3-ab19-93d07ad2f5b3": {
      "content": "text-emphasis: disc",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      }
    },
    "a95482ca-c926-342d-bd72-d6516e43a5d0": {
      "content": "protected int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi|-": true
      }
    },
    "a954b8dd-a8a6-3891-bd38-e3dd9daab68b": {
      "content": "<meta name=\"generator\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metagenerator": true
      }
    },
    "a95565ba-9749-3b3a-a09c-ede5e3c13864": {
      "content": ":source-highlighter: highlight.js$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: highlight.js",
      "matches": {
        "highlight-highlight.js": true,
        "hihighlight.js": true
      }
    },
    "a95d5403-44a2-3ee3-9d67-0db2f2275ba9": {
      "content": "&#x238B;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "esc": true
      }
    },
    "a9620db9-15a8-3f99-97fd-bc9dbd3b4cc4": {
      "content": "from django.contrib import admin",
      "doc": "from ... import admin",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "iadmin",
      "matches": {
        "iadmin": true
      }
    },
    "a962ca2e-d286-3034-b10d-6de061c9f4eb": {
      "content": "opts.on('-${1:o}', '--${2:long-option-name}', ${3:String}, '${4:Option description.}') do |${5:opt}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "opt": true
      }
    },
    "a9844b3e-ab09-31f9-89bf-4acaa2deb4b2": {
      "content": "\\\\begin{cases}\n\t${1:equation}, &\\\\text{ if }${2:case}\\\\\n\t${0:${VISUAL}}\n\\\\end{cases}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "cases environment",
      "matches": {
        "cas": true
      }
    },
    "a98a04a1-3398-327a-9b14-9a5648b8f416": {
      "content": "font-family: ${0:Capitals,Impact},fantasy;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      }
    },
    "a99455fb-41cd-3cac-bf18-6ced2f9e158a": {
      "content": "import '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importNoModuleName",
      "matches": {
        "imn": true
      }
    },
    "a994df8a-d45c-3f26-8c81-78707239c5d6": {
      "content": "degrees(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "degrees": true
      }
    },
    "a997a432-9b7c-33bf-95da-bb22c363e82a": {
      "content": "padding ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      }
    },
    "a99bf1b5-16c4-3765-964d-6f2e0b00817a": {
      "content": "@selector(${1:#:method}:)",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sel": true
      }
    },
    "a9a5e71f-d7bc-33ec-92fb-69844cf2c4c5": {
      "content": "${1|transition,in,out|}:${2:name}|${3:local}={${4:params}}",
      "doc": "transition",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-all",
      "matches": {
        "s-transition-all": true
      }
    },
    "a9a66846-236a-32b5-afba-d7eb00d4ed2a": {
      "content": "# -*- coding=utf-8 -*-\n$0",
      "doc": "set default python2.x encoding specification to utf-8 as it is mentioned in pep-0263.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "# -*- coding=utf-8 -*-",
      "matches": {
        "enc": true
      }
    },
    "a9abdfa8-f6a7-3121-a749-208a91fd5265": {
      "content": "{% widthratio ${1:this_value} ${2:max_value} ${0:100} %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "widthratio": true
      }
    },
    "a9bfa987-71fa-3000-8727-fc138f30df71": {
      "content": "for (${1:#:var}; ${2:#:condition}; ${3:#:effect}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for () {}",
      "matches": {
        "for": true
      }
    },
    "a9c64c9e-8574-3ec8-8553-d77906c90df3": {
      "content": "@enter=\"$1\"$0",
      "doc": "@enter=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter",
      "matches": {
        "enterevent": true,
        "vue enter": true
      }
    },
    "a9d315a5-205e-3e21-bdc0-551b53936b0c": {
      "content": "display: -moz-inline-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      }
    },
    "a9d75c1d-f4ce-3a55-8f86-159b9ee93bc9": {
      "content": "if (${1:#:condition}) {\n  ${2:TARGET}\n} else {\n  ${3}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "ife",
      "matches": {
        "if-else": true
      }
    },
    "a9d90339-0ce5-3626-9498-44489a4e6f65": {
      "content": "<?php $this->${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pthis": true
      }
    },
    "a9ef7b64-7d17-3a73-9670-5805d86f6fbf": {
      "content": "${1}.propTypes = {\n\t${2}: PropTypes.${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "propTypes",
      "matches": {
        "pt": true
      }
    },
    "a9f166c4-5600-3200-a2fd-7c9ca94bcd39": {
      "content": "border-fit ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      }
    },
    "a9fefa6f-450a-3500-8a90-634093caaa71": {
      "content": "throw new $1Exception(${2:\"${3:Error Processing Request}\"}${4:, ${5:1}});\n$0",
      "doc": "Throw exception",
      "filetype": "php",
      "grammar": "lsp",
      "label": "Throw Exception",
      "matches": {
        "throw": true
      }
    },
    "aa001955-1482-3971-baf1-2e154c578698": {
      "content": "reversed",
      "doc": "For loops option",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag Option reversed",
      "matches": {
        "reversed": true
      }
    },
    "aa0208f0-a110-32e6-bb91-14627c4acb93": {
      "content": "_.functions(${object})",
      "doc": "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functions(new Foo);\n// => ['a', 'b']\n\nCreates an array of function property names from own enumerable properties\nof `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-functions",
      "matches": {
        "lodash functions": true
      }
    },
    "aa04cb7f-904a-378e-82dd-e77c23879c08": {
      "content": "font-style: italic;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-style: italic",
      "matches": {
        "fsti": true
      }
    },
    "aa07df17-be63-3421-8e74-6f517c3881e3": {
      "content": "const (\n\t${1:name} = ${2:value}\n)",
      "doc": "Snippet for a constant block",
      "filetype": "go",
      "grammar": "lsp",
      "label": "multiple constants",
      "matches": {
        "cos": true
      }
    },
    "aa174a84-7806-3d21-b714-eb9589f61947": {
      "content": "| last",
      "doc": "Array filter: last",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter last",
      "matches": {
        "last": true
      }
    },
    "aa192067-82a0-30c7-b16c-ed43211c7bd1": {
      "content": "while (${1:condition}) {\n\t$0\n}",
      "doc": "While Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "While Statement",
      "matches": {
        "while": true
      }
    },
    "aa2439a9-9fad-3226-9617-1a9fc2863a3a": {
      "content": "atan2(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "atan2": true
      }
    },
    "aa27a321-c44c-3986-8b70-34ca27675875": {
      "content": "binary(${1:value}${2:, }${0:digits});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "binary": true
      }
    },
    "aa2a0318-c3fc-3795-a4c6-f51a2136638f": {
      "content": "PropTypes.func,",
      "doc": "Func prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      }
    },
    "aa2ad8ff-72e9-3570-be3d-3614dccdfc92": {
      "content": "stop \"${1:message}\"",
      "doc": "stop",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "stop",
      "matches": {
        "stop": true
      }
    },
    "aa346260-b27b-3d38-970f-5b3e6b874136": {
      "content": "| uniq",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uniq": true
      }
    },
    "aa349fb2-3b76-3cd3-bfa2-a9338160681f": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/controllers/job/\napiVersion: batch/v1\nkind: Job\nmetadata:\n  name: ${1:myjob}\n  namespace: ${2:default}\n  labels:\n    app: ${1:myjob}\nspec:\n  template:\n    metadata:\n      name: ${1:myjob}\n      labels:\n        app: ${1:myjob}\n    spec:\n      containers:\n      - name: ${1:myjob}\n        image: ${3:python:3.7.6-alpine3.10}\n        command: ['sh', '-c', '${4:python3 manage.py makemigrations && python3 manage.py migrate}']\n        env:\n        - name: ENV_NAME\n          value: ENV_VALUE\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /usr/share/zoneinfo/Asia/Taipei\n      restartPolicy: OnFailure\n      dnsPolicy: ClusterFirst\n---\n$0",
      "doc": "k8s Job",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Job",
      "matches": {
        "k-job": true
      }
    },
    "aa3904e0-faec-34fc-b203-a2183e11883c": {
      "content": "truncate(lenght=${1:79}, killwords=${2:False}, end=${3:'...''})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "truncate",
      "matches": {
        "truncate": true
      }
    },
    "aa44f1ae-6dc3-3b82-b714-c0f8c2a40336": {
      "content": "_.get(${object}, ${path}, ${defaultValue})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.get(object, 'a[0].b.c');\n// => 3\n\n_.get(object, ['a', '0', 'b', 'c']);\n// => 3\n\n_.get(object, 'a.b.c', 'default');\n// => 'default'\n\nGets the value at `path` of `object`. If the resolved value is\n`undefined`, the `defaultValue` is returned in its place.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-get",
      "matches": {
        "lodash get": true
      }
    },
    "aa4b8475-76f5-3d18-8401-f1f92b1d33de": {
      "content": "import ${1} from '${2:$1}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import xyz from 'xyz'",
      "matches": {
        "im": true
      }
    },
    "aa50a76c-a7d6-38b7-bcb1-7e9879fd4198": {
      "content": "<form class=\"${1}\" action=\"${2}\" method=\"${3:post}\">\n\t${0}\n</form>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "form.": true
      }
    },
    "aa510487-6a97-32a3-a756-f74310a679d9": {
      "content": "${1:document}.querySelectorAll('${0:CSS selector}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qsa": true
      }
    },
    "aa51eea7-4ffa-378c-81e8-3ffc72f86dd9": {
      "content": "_.isEmpty(${value})",
      "doc": "_.isEmpty(null);\n// => true\n\n_.isEmpty(true);\n// => true\n\n_.isEmpty(1);\n// => true\n\n_.isEmpty([1, 2, 3]);\n// => false\n\n_.isEmpty({ 'a': 1 });\n// => false\n\nChecks if `value` is an empty object, collection, map, or set.\n\nObjects are considered empty if they have no own enumerable string keyed\nproperties.\n\nArray-like values such as `arguments` objects, arrays, buffers, strings, or\njQuery-like collections are considered empty if they have a `length` of `0`.\nSimilarly, maps and sets are considered empty if they have a `size` of `0`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isempty",
      "matches": {
        "lodash isempty": true
      }
    },
    "aa57f5ea-3a62-3fed-b852-a5a7ac02561e": {
      "content": "${1:FIELDNAME} = forms.URLField($2, required=${3:False})",
      "doc": "URLField (furl)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "furl",
      "matches": {
        "furl": true
      }
    },
    "aa5b8d9f-9c4e-3514-9891-8874a18a22e4": {
      "content": "bottom: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "aa5feddb-fd27-3927-84c3-fd4ce80996ff": {
      "content": "@see ${0:#:reference}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "see": true
      }
    },
    "aa6089c7-a977-380d-a683-f89d574e19dc": {
      "content": "function highest-algebraic(${1:numeric-identifier})$0",
      "doc": "highest value that could possibly be stored in the specified numeric-identifier",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-highest-algebraic",
      "matches": {
        "function highest-algebraic": true
      }
    },
    "aa68cc57-5d84-3011-8616-d07c78835e59": {
      "content": "${1:obj}.ajaxSend(function (${1:request, settings}) {\n\t${2:// error callback}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsend": true
      }
    },
    "aa6df4af-d672-31cd-a9df-883346ad95b5": {
      "content": "after_save :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mas": true
      }
    },
    "aa70d02e-4329-3703-b079-d84d289c1e8b": {
      "content": "library IEEE;\nuse IEEE.std_logic_1164.ALL;\nuse IEEE.numeric_std.ALL;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "libs": true
      }
    },
    "aa735283-7b1e-3fd9-957c-e1302bc4dc81": {
      "content": "function ${1}(${2}) return ${3} is\n\t${4}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "function": true
      }
    },
    "aa78931e-78b7-3779-b249-d5e2453f7bb5": {
      "content": "$this->${1:method}()->shouldNotBeEqualTo(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotBeEqualTo('value')",
      "matches": {
        "snbequalto": true
      }
    },
    "aa789b91-504f-311c-8461-4a2041729240": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-node",
      "matches": {
        "prop-types node": true,
        "ptnd": true
      }
    },
    "aa7b29fc-7434-33d1-9630-36b7471ff953": {
      "content": ":key=\"${1:key}\"",
      "doc": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "key",
      "matches": {
        "key": true
      }
    },
    "aa8243c1-b97b-3b43-8a43-79e8fa121a29": {
      "content": "${1:key}: ${2:'value'}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":": true
      }
    },
    "aa9332d8-469c-3dbc-9273-8ca363b01f1e": {
      "content": "/// ${1:description}\n///\n/// ${2:details}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "generic ddoc block (doc)",
      "matches": {
        "doc": true
      }
    },
    "aa991ca3-7e70-37ee-93a9-81adb97605c5": {
      "content": "border-bottom-right-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      }
    },
    "aa9abd7a-1a9b-318a-8d90-8a4fc063d219": {
      "content": "post {\n\talways {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pa": true
      }
    },
    "aa9ba6cb-10ae-3716-993c-dbf236b2027e": {
      "content": "static public final String ${1:var} = \"${2}\";${4}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const_string": true
      }
    },
    "aa9f1f03-e68b-3932-95a9-689d2ff11107": {
      "content": "string.required()",
      "doc": "string.required(message?: string | function): Schema\n\nThe same as the mixed() schema required, except that empty strings are also considered 'missing' values.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-required",
      "matches": {
        "yup string required": true
      }
    },
    "aaa2447a-2b72-367b-a1e1-bb2c638f692d": {
      "content": "${1|outside,inside|}",
      "doc": "initial value: outside",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-position",
      "matches": {
        "lisp": true
      }
    },
    "aaa8efb0-c203-38dd-b7a3-cf2a5304f547": {
      "content": "white-space pre-line",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      }
    },
    "aaae6e54-14f4-3242-9324-8015e0ec67c2": {
      "content": "runs ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "runs (coffee)",
      "matches": {
        "ru": true
      }
    },
    "aab53552-b1a5-39f8-8fd1-f76bcb3eeb28": {
      "content": "${1:obj}.mouseup(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mup": true
      }
    },
    "aac277af-e164-38ed-b23d-13159a505bbb": {
      "content": "const ${1:results} = await ${2:client}.request(\n  ${3:query}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client-request",
      "matches": {
        "graphql-request client request": true
      }
    },
    "aace64a1-67b3-3bc9-a1d9-74921c86a832": {
      "content": "@load \"${1}\"${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "@load",
      "matches": {
        "loa": true
      }
    },
    "aad00e32-161c-3c52-ad70-a47acfca0be8": {
      "content": "${1:newdataframe} <- na.omit(${2:dataframe})",
      "doc": "Remove all rows with missing values from data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "remove missings",
      "matches": {
        "naomit": true
      }
    },
    "aad12e65-3c28-3a51-b733-29bb46d33c5c": {
      "content": "for (${1:type *object} in ${2:collection}) {\n\t${3:statements}\n}",
      "doc": "Code snippet for reverse 'forin' loop",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "forin",
      "matches": {
        "forin": true
      }
    },
    "aad76e57-6770-330b-a988-6f2a80f5cbf8": {
      "content": "${1:x} match {\n\tcase ${2:0} => ${3:\"zero\"}\n\tcase ${4:1} => ${5:\"one\"}\n}",
      "doc": "Branch based on conditions using pattern matching",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "aadc7464-15e9-3bec-8fb8-0ea613d25a2a": {
      "content": "interface name {\n\tfunction method(${1}):${0:returntype};\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "interface": true
      }
    },
    "aade172a-074e-3f92-98bf-626c87153316": {
      "content": "pub fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Function definition",
      "matches": {
        "pfn": true
      }
    },
    "aae1df49-3bc0-3fdd-a41b-3417d3eec22a": {
      "content": "function get ${1:name} {\n\treturn ${2}\n}\nfunction set $1 (newValue) {\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get_set": true
      }
    },
    "aae2385d-5fd4-37d5-b07b-7cc16d8e8550": {
      "content": "defmodule ${1:AppName}Web.${2:ControllerName}Controller do\n\tuse $1Web, :controller\n\n\t${3}\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cont": true
      }
    },
    "aae66f31-e487-371c-9cf7-5a6b0d0e1665": {
      "content": "o.. $1 $2",
      "doc": "An object aggregates X number of other objects",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Dotted aggregation",
      "matches": {
        "ag": true
      }
    },
    "aae9028f-eba0-3a11-91e0-441858b86091": {
      "content": "if ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "aaeab98a-7477-3419-acd4-d5fbc95fea5f": {
      "content": "$strobe(\"${1}\", ${2});",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "$strobe(\"...\", ...);",
      "matches": {
        "strobe": true
      }
    },
    "aaf23466-f021-3604-a361-24a4745ca18f": {
      "content": "import Vue from 'vue';\nimport Vuex from 'vuex';\n\nVue.use(Vuex);\n\nexport const store = new Vuex.Store({\n\tstate: {\n\t\t${1:key}: ${2:value}\n\t}\n});",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vstore": true
      }
    },
    "aaf8f49e-6679-346e-8402-4e0ac8a7c41b": {
      "content": "for ${1:name} in ${2:array}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Array Comprehension",
      "matches": {
        "fora": true
      }
    },
    "aafcf80b-152f-3d18-a5d4-08d904c034ff": {
      "content": "subject(:${1:name}) { $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert subject definition",
      "matches": {
        "subj": true
      }
    },
    "aaffd6d5-594a-3a69-b8e4-f16ae6d51a02": {
      "content": "static getDerivedStateFromProps(props, state) {\n\t${1}\n}",
      "doc": "Invoked right before calling the render method, both on the initial mount and on subsequent updates.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-getderivedstatefromprops",
      "matches": {
        "gdsfp": true,
        "react getderivedstatefromprops": true
      }
    },
    "ab0cd4db-593b-373f-bc6f-5f2b7264dc8b": {
      "content": "lapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lapply": true
      }
    },
    "ab1672a7-2df8-3c80-8dcd-4c3c806de5db": {
      "content": "#endregion",
      "doc": "Folding Region End",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Region End",
      "matches": {
        "#endregion": true
      }
    },
    "ab1884ec-a834-3fbc-ab46-077f5f29edc0": {
      "content": "margin: '${1}',",
      "doc": "margin",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "margin",
      "matches": {
        "mar": true
      }
    },
    "ab1a677d-2e06-3bcb-9457-69af599823ab": {
      "content": "justify-self: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      }
    },
    "ab2195cd-c5c5-3870-981b-fc484485f676": {
      "content": "func main() {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Main function",
      "matches": {
        "/^main/": true
      }
    },
    "ab22aa54-065b-395d-afc5-a282360fae8c": {
      "content": "@unless\n\t${1:${VISUAL}}\n@endunless",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@unless directive",
      "matches": {
        "unless": true
      }
    },
    "ab24a1ae-c538-3dbc-8591-167e31877629": {
      "content": "Array.new(${1:10}) { |${2:i}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "ab27dd73-41dc-30d0-a3d0-3286af8eea5d": {
      "content": "set_target_properties(${1:target}\n\t${2:properties} ${3:compile_flags}\n\t${0:\"-O3 -Wall -pedantic\"}\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "props": true
      }
    },
    "ab2db032-f018-3d48-bdd5-0e99230679ec": {
      "content": "<style lang=\"sass\">\n${0}\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <style> with sass",
      "matches": {
        "style_with_sass": true
      }
    },
    "ab305692-6988-3de4-80eb-5a463f74e5c9": {
      "content": "struct ${1:Name}\n{\n    $0\n}",
      "doc": "Struct",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Struct",
      "matches": {
        "struct": true
      }
    },
    "ab31cea3-9264-362f-ac15-c3a2eba37e39": {
      "content": "<br>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      }
    },
    "ab32bd7d-ddac-39db-925c-a77f56fdca41": {
      "content": "foreach (${1:var} ${2:item} in ${3:collection})\n{\n    $0\n}",
      "doc": "Foreach statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Foreach statement",
      "matches": {
        "foreach": true
      }
    },
    "ab349023-6296-3215-ad7d-67eb0f2abece": {
      "content": "*${1}* $0",
      "doc": "Insert italic text",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert italic text",
      "matches": {
        "i": true,
        "italic": true
      }
    },
    "ab372960-179d-313b-97ba-48d7e243c1cc": {
      "content": "font-weight ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw": true
      }
    },
    "ab39e77f-102f-3f77-beb0-2b32e3b7702c": {
      "content": "case ${0:TARGET} of\n    ${1}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "ab3a91dc-6999-3874-b485-7104f36037ad": {
      "content": "{{ block.super }}",
      "doc": "Block super",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "super",
      "matches": {
        "super": true
      }
    },
    "ab444822-a797-3c62-96a8-6bc7e52d92f3": {
      "content": "{%- assign ${variable} = ${value} -%}",
      "doc": "Variable tag: assign",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag assign",
      "matches": {
        "assign": true
      }
    },
    "ab46a93c-1e3a-3092-afc9-35b613f42abf": {
      "content": "import { Directive } from '@angular/core';\n\n@Directive({ selector: '[${1:selector-name}]' })\nexport class ${2:Name}Directive {\n\tconstructor() { }\n}",
      "doc": "Angular directive",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Directive",
      "matches": {
        "a-directive": true
      }
    },
    "ab4736f3-d861-3499-a278-72986059ffe6": {
      "content": "include(ExternalProject)\nExternalProject_Add(${1:googletest}\n  GIT_REPOSITORY    ${2:https://github.com/google/googletest.git}\n  GIT_TAG           ${3:master}\n  SOURCE_DIR        \"${4:${CMAKE_BINARY_DIR}/googletest-src}\"\n  BINARY_DIR        \"${0:${CMAKE_BINARY_DIR}/googletest-build}\"\n  CONFIGURE_COMMAND \"\"\n  BUILD_COMMAND     \"\"\n  INSTALL_COMMAND   \"\"\n  TEST_COMMAND      \"\"\n)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ext_git": true
      }
    },
    "ab482334-d473-37a9-93c9-208b80377259": {
      "content": "import qualified ${1:Data.Text} as ${0:T}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impq": true
      }
    },
    "ab4c28e9-d346-33c5-af8f-d1b5da2c6917": {
      "content": "margin-left: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      }
    },
    "ab52bea1-d4c5-39b6-9d78-266258095169": {
      "content": "public override bool Equals(object obj)\n{\n\tif (obj == null || GetType() != obj.GetType())\n\t{\n\t\treturn false;\n\t}\n\t${0:throw new NotImplementedException();}\n\treturn base.Equals(obj);\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eq": true
      }
    },
    "ab598f7c-5831-3cca-97c2-f7e9a58a6773": {
      "content": "_.groupBy(${collection}, ${iteratee})",
      "doc": "_.groupBy([6.1, 4.2, 6.3], Math.floor);\n// => { '4': [4.2], '6': [6.1, 6.3] }\n\n// The `_.property` iteratee shorthand.\n_.groupBy(['one', 'two', 'three'], 'length');\n// => { '3': ['one', 'two'], '5': ['three'] }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The order of grouped values\nis determined by the order they occur in `collection`. The corresponding\nvalue of each key is an array of elements responsible for generating the\nkey. The iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-groupby",
      "matches": {
        "lodash groupby": true
      }
    },
    "ab675716-d1b0-3b1f-8f52-75b304e34426": {
      "content": "Host ${1:name}\n\tHostName $1.${2:domain}\n\tPort ${3}\n\t${4:User }",
      "doc": "",
      "filetype": "sshconfig",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Host": true
      }
    },
    "ab6b0d25-9884-377b-bd50-5830c21b2227": {
      "content": "val ${1:fn} ${2}: fn ${3:'a} -> ${4:'a}\nlet $1 ${5} =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "ab6b8b68-2daa-3dd6-9b6c-75385f699dd8": {
      "content": "namespace ${1:Foo\\Bar\\Baz};\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      }
    },
    "ab6eff4f-33ff-302a-85b2-0d27330dfcdf": {
      "content": "router-link(to='$1') $0",
      "doc": "router-link(to='') . router-link element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "routerLinkTo",
      "matches": {
        "routerLinkTo": true
      }
    },
    "ab70f74c-090e-3b4d-aaf0-92c44e9d6a44": {
      "content": "_.sortBy(${collection}, ${iteratees})",
      "doc": "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 36 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 34 }\n];\n\n_.sortBy(users, [function(o) { return o.user; }]);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\n_.sortBy(users, ['user', 'age']);\n// => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\nCreates an array of elements, sorted in ascending order by the results of\nrunning each element in a collection thru each iteratee. This method\nperforms a stable sort, that is, it preserves the original sort order of\nequal elements. The iteratees are invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortby",
      "matches": {
        "lodash sortby": true
      }
    },
    "ab790be9-ab1f-3a2b-a72e-34ff0042fb5c": {
      "content": "logger.warn { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.warn",
      "matches": {
        "logw": true
      }
    },
    "ab7a7c39-2dc4-3f24-b960-47108b8fc4f7": {
      "content": "log.Printf(\"$1\", ${2:var})",
      "doc": "Snippet for log.Printf()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "log.Printf",
      "matches": {
        "lf": true
      }
    },
    "ab8196a2-a6eb-3cf9-ae45-c1180832975d": {
      "content": "<datatemplate>\n\t${0}\n</datatemplate>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "datatemplate": true
      }
    },
    "ab86776c-6b20-31cf-b96d-a83c99f2464c": {
      "content": "static_assert(${1:#:condition}, ${2:#:message});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "static_assert": true
      }
    },
    "ab8808a1-ab51-34e4-ba71-68ab17198e74": {
      "content": "let mut ${1} = ${2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let mut variable declaration with type inference",
      "matches": {
        "letm": true
      }
    },
    "ab8a9160-fb20-3918-9bac-32a4677c45c6": {
      "content": "(define-syntax (${1})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define-syntax",
      "matches": {
        "defs": true
      }
    },
    "ab8b4d0a-1921-33d0-a1be-8766220b5fa0": {
      "content": "${1:#:set shell_stdout to }do shell script ${3:\"${2:#script}\"}\n\twithout altering line endings\n${0}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shell": true
      }
    },
    "ab8d30b8-5447-3086-bd44-1f9f49d983b7": {
      "content": "directionalLight(${1:v1}, ${2:v2}, ${3:v3}, ${4:nx}, ${5:ny}, ${0:nz});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "diretionalLight": true
      }
    },
    "ab8d6cc0-4456-345a-af54-6e01bc91e214": {
      "content": "border-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      }
    },
    "ab8e4152-2f8a-35c6-892e-15809591b63b": {
      "content": "{:catch error}\n\t<!-- promise was rejected -->",
      "doc": "catch block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-catch-block",
      "matches": {
        "s-catch-block": true
      }
    },
    "ab91f250-f320-33c5-87b4-c99bcbe91a75": {
      "content": "${1:obj}.children('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "children": true
      }
    },
    "ab957648-5a0c-3fc5-95b8-a0b9fcba47c4": {
      "content": "tint(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tint": true
      }
    },
    "ab958588-9b5d-36a7-a1b9-5556666a9480": {
      "content": "${1:callbacks}.remove(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Crem": true
      }
    },
    "ab9d6ff3-c3c4-33fb-9674-3ec74df7506c": {
      "content": "<svelte:self ${1:prop}={${2:value}} />",
      "doc": "svelte:self",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self-prop",
      "matches": {
        "s-self-prop": true
      }
    },
    "abaf671e-0c1b-33e4-95be-580b28109cf9": {
      "content": "text-justify: kashida;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:k": true
      }
    },
    "abaf7c51-14e0-343b-bd9c-bc873ca66fdb": {
      "content": "vertical-align: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      }
    },
    "abb20cbb-6e3a-3101-b8e6-652c6729ad42": {
      "content": "${1:reg}_r <= $1_w;${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "_r <= _w;",
      "matches": {
        "regseq": true
      }
    },
    "abb95563-7f94-38c1-9413-54732f7cd332": {
      "content": "<?php echo htmlentities(${1}, ENT_QUOTES, 'utf-8') ?>${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echoh": true
      }
    },
    "abbb9798-2ed0-3e92-9882-9e87c6588201": {
      "content": "\\begin{verbatimtab}[${1:8}]\n\t${2:TARGET}\n\\end{verbatim}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{verbatimtab} \\verbatimtab": true,
        "verbatimtab": true
      }
    },
    "abbd49c0-5cb7-37a7-845e-3fdbf7765de5": {
      "content": "@yield('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@yield directive",
      "matches": {
        "yield": true
      }
    },
    "abbfe4df-4658-3c7a-b78d-558d9296f118": {
      "content": "self.assertFalse(${1:actual}${2:, '${3:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert False",
      "matches": {
        "asf": true
      }
    },
    "abd15e87-4342-303b-bc40-026bd318f812": {
      "content": "const [${1:state}, set${2}] = useState(${3:initialState});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useState",
      "matches": {
        "uses": true
      }
    },
    "abd3f780-a932-3639-88e5-0ac5bcc30d82": {
      "content": "(${1:first}:\\${2:name})(${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":\\": true
      }
    },
    "abd46b64-5675-31b8-914d-935883d189dd": {
      "content": "File.open('${1:path/to/file.dump}', 'wb') { |${2:file}| Marshal.dump(${3:obj}, $2) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Md": true
      }
    },
    "abd4e146-1915-3cdd-86a6-f64e3110a2d6": {
      "content": "&#x232B;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backspace": true
      }
    },
    "abdf6658-2590-3db9-ab9c-b5f4e29c44e8": {
      "content": "forall (${1:i=1:100}${2:, mask})\r\n\t$0\r\nend forall",
      "doc": "forall",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "abe8390b-1397-3b31-8ae8-e89ae6d0eacb": {
      "content": "cy.getCookies();",
      "doc": "Get all of the browser cookies.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-cookies-get-all",
      "matches": {
        "cypress cookies get all": true
      }
    },
    "abe85f25-d8de-3c52-b456-441673fa97f3": {
      "content": "await ${0:${VISUAL}}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "await",
      "matches": {
        "aw": true
      }
    },
    "abf0697a-d2d2-3adf-90f9-64ea497e5b12": {
      "content": "Returns:  ${1:return value/s}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Returns (Ret)",
      "matches": {
        "Ret": true
      }
    },
    "abf6492d-6140-3ffd-b2cf-0f7217519d2c": {
      "content": "float ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl": true
      }
    },
    "abfe752e-4dc3-343d-b268-2c12acfada9f": {
      "content": "${1:obj}.css('${2:attribute}', '${3:value}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "css": true
      }
    },
    "ac052fdc-36c6-3987-9e0d-0e6858872786": {
      "content": "if ($1) {\n\t${2:# body...}\n}\nelsif ($3) {\n\t${4:# elsif...}\n}\nelse {\n\t${5:# else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "Conditional if..elsif..else (ifee)",
      "matches": {
        "ifee": true
      }
    },
    "ac0c610c-b9cf-3aff-9698-5ae9941302d4": {
      "content": "_.uniqueId(${prefix})",
      "doc": "_.uniqueId('contact_');\n// => 'contact_104'\n\n_.uniqueId();\n// => '105'\n\nGenerates a unique ID. If `prefix` is given, the ID is appended to it.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uniqueid",
      "matches": {
        "lodash uniqueid": true
      }
    },
    "ac0c7c1d-bde6-36a0-8f19-6e8f22e32c2b": {
      "content": "afterUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-after-update",
      "matches": {
        "svelte lifecycle-after-update": true,
        "svlfap": true
      }
    },
    "ac0c9c18-bd62-3432-a24a-697adf3c55c1": {
      "content": "<p>$1</p>$2",
      "doc": "HTML - Defines a paragraph",
      "filetype": "html",
      "grammar": "lsp",
      "label": "p",
      "matches": {
        "p": true
      }
    },
    "ac0d59c5-188f-3d7b-a281-04227deabfa9": {
      "content": "\\$${1:arrayName} = ['$2' => $3${4:,} $0];",
      "doc": "Array initializer",
      "filetype": "php",
      "grammar": "lsp",
      "label": "$… = […]",
      "matches": {
        "shorray": true
      }
    },
    "ac0f83c1-7f07-3f41-b1f8-25fcd2b39c51": {
      "content": "@math\n$0\n@end",
      "doc": "math block",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "math",
      "matches": {
        "math": true
      }
    },
    "ac138699-a204-3a70-a178-9c78881844d3": {
      "content": "do |${1:#:var}|\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "do |var| ... end",
      "matches": {
        "dovar": true
      }
    },
    "ac1e82d0-6d30-3375-8259-3d1f6045a7a7": {
      "content": "{%- unless ${condition} -%}\n\t${code:}\n{%- endunless -%}",
      "doc": "Control flow tag: unless",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag unless",
      "matches": {
        "unless": true
      }
    },
    "ac21b046-94ec-3d07-8d54-08555ff76024": {
      "content": "| remove: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remove": true
      }
    },
    "ac23b10d-0bfd-3ad5-b109-c00a1cd9d2d2": {
      "content": "list-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style": true,
        "ls": true
      }
    },
    "ac25da60-63c0-394d-9384-a61a4167056e": {
      "content": "@enter=\"$1\"$0",
      "doc": "@enter=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "enter",
      "matches": {
        "enterEvent": true
      }
    },
    "ac2a7e35-e115-3ea0-a644-d825959ef430": {
      "content": "redirect_to action: \"${1:index}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (action)",
      "matches": {
        "rea": true
      }
    },
    "ac2f9c4f-7a58-32be-8f89-127a4c14677c": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\nclass ${1:ClassName} extends CI_Controller\n{\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${2:// code...}\n\t}\n\n\tfunction ${3:index}()\n\t{\n\t\t${4:// code...}\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_controller": true
      }
    },
    "ac31240c-1e9b-3000-8e4a-7c6c83b7b50b": {
      "content": "ReactDOM.hydrate(${1:element}, ${2:container}[, ${3:callback}]);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "ReactDOM.hydrate",
      "matches": {
        "rdh": true
      }
    },
    "ac32024b-5057-35ae-9f49-3c421093113a": {
      "content": "(${1:first}) => { ${2:second} }",
      "doc": "Creates an anonymous function",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "anonymousFunction",
      "matches": {
        "anfn": true
      }
    },
    "ac34f637-100b-33d9-9a7e-828a9f7f5514": {
      "content": "{% from '${1:#:module}' import ${2:#:macro} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% from '...' import ... %}",
      "matches": {
        "from": true
      }
    },
    "ac3503dd-9805-340e-aeeb-65c5b606d633": {
      "content": "${1:source} instanceof ${2:Object}",
      "doc": "instanceof",
      "filetype": "base",
      "grammar": "lsp",
      "label": "instanceof",
      "matches": {
        "base instanceof": true
      }
    },
    "ac351f3d-0e97-3532-af07-fb39d8624fba": {
      "content": "<h1>$1</h1>$2",
      "doc": "HTML - Defines header 1",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h1",
      "matches": {
        "h1": true
      }
    },
    "ac38c6e4-da13-3042-9f1e-958023beebd7": {
      "content": "if (${1:condition}) {\n\t$0\n}",
      "doc": "If Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "If Statement",
      "matches": {
        "if": true
      }
    },
    "ac38f3b4-9900-3f65-8283-00d6020963bd": {
      "content": "${1:true} ? ${2:a} : ${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?:": true
      }
    },
    "ac3a4df5-fcfa-3e1c-acd9-46289e79d849": {
      "content": "<%include file=\"${0:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "ac403c44-0280-300f-8103-078199f944ef": {
      "content": "&#x2193;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "down": true
      }
    },
    "ac444f84-9384-3e93-a2de-6acbedde0183": {
      "content": "def_delegators :${1:@del_obj}, :${0:del_methods}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defds": true
      }
    },
    "ac4a4b19-4198-3666-adc8-9f4cecad7550": {
      "content": "const {${2:propertyName}} = ${1:objectToDestruct};",
      "doc": "Creates and assigns a local variable using object destructing",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "destructingObject",
      "matches": {
        "dob": true
      }
    },
    "ac61f63e-e887-3c1e-b0e7-c7b0892ad939": {
      "content": "overflow-style auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      }
    },
    "ac62b5b3-00c0-3b69-b6ea-b86702409781": {
      "content": "require_relative '${1}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reqr": true
      }
    },
    "ac6bc3aa-3b27-3fd3-b2b9-8e90d40f5621": {
      "content": "${1:name} := ${0:value}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Variable declaration :=",
      "matches": {
        ":": true
      }
    },
    "ac6c6df1-6450-3962-8b3e-51e7fa485504": {
      "content": "fmt.Errorf(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Errorf(...)",
      "matches": {
        "fe": true
      }
    },
    "ac6fb69a-8954-302e-892a-d1142c97749f": {
      "content": "justify-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      }
    },
    "ac7466c9-8224-3e1a-b3de-df9f376a8a82": {
      "content": ":hover",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      }
    },
    "ac75a68b-6e5e-38ef-9c62-1b02106bcedc": {
      "content": "class ${1:Class} ${2:a} where\n  ${3:function} :: ${4:Type}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "ac763d0f-4886-39ec-ba3a-81c428237c8e": {
      "content": "Run Keyword    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword",
      "matches": {
        "rk": true
      }
    },
    "ac7a6098-3341-3ab5-a65c-f4afd9949548": {
      "content": "#[bench]\nfn ${1:bench_function_name}(b: &mut test::Bencher) {\n\tb.iter(|| {\n\t\t${0}\n\t})\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Bench function",
      "matches": {
        "bench": true
      }
    },
    "ac7c51c3-2221-30ac-83e6-c82498f34398": {
      "content": "echo CHtml::activeLabel(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhal": true
      }
    },
    "ac84bd14-6b92-3aca-816a-9d29adf717d4": {
      "content": "# coding=utf-8\n$0",
      "doc": "Set default python3 encoding specification to utf-8, by default this is the encoding for python3.x as it is mentioned in pep-3120.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "# coding=utf-8",
      "matches": {
        "enco": true
      }
    },
    "ac85b064-4df1-3d8f-814d-b65153b2bab3": {
      "content": "import { ${1:libName} } from '${1:libName}';",
      "doc": "import a library",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Library",
      "matches": {
        "vimport-lib": true
      }
    },
    "ac87198b-881d-3cd4-90db-e7b05791a327": {
      "content": "${1:$TM_FILENAME_BASE}.defaultProps = {\n\t$2\n};",
      "doc": "Creates empty defaultProps declaration",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "defaultProps",
      "matches": {
        "rdp": true
      }
    },
    "ac8a0297-f878-3db5-a3b5-657a5ec249be": {
      "content": "assert_raises ${1:StandardError} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrd": true
      }
    },
    "ac944ac8-e2f7-3ffc-a4e9-cd2d2b718629": {
      "content": "@after-appear=\"$1\"$0",
      "doc": "@after-appear=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "after-appear",
      "matches": {
        "afterAppearEvent": true
      }
    },
    "ac9a9174-7f2f-3b6c-861c-f0b5a214a6b2": {
      "content": "multiply ${1:a} by ${2:b} giving ${3:c}",
      "doc": "Multiply a by y giving z",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "multiply",
      "matches": {
        "mg": true,
        "multiply": true
      }
    },
    "aca8f63f-87ff-3a71-8ee5-d05894410874": {
      "content": "font-family ${0:Capitals,Impact},fantasy",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:f": true
      }
    },
    "aca93765-09c3-3fc0-8bc7-4e16a662f052": {
      "content": "{% if ${1:expr} %}\n\t$2\n{% endif %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "acaaf1f7-76ba-30ae-8a8e-34b93813a3d5": {
      "content": "interface ${1:name} {\n\t${2:/* methods */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "full interface ",
      "matches": {
        "inf": true
      }
    },
    "acaf57d2-654c-3f7b-8e40-bfd09da7fb8d": {
      "content": "library(${1:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "library",
      "matches": {
        "lib": true
      }
    },
    "acb51849-40bf-37a8-b04c-4374348441f3": {
      "content": "Hash.new { |${1:hash}, ${2:key}| $1[$2] = ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hash": true
      }
    },
    "acb7e4a7-e8b8-3c96-ab13-0212b715e48b": {
      "content": "\\\\subsubsection{${1:subsubsection name}}%\n\\\\label{ssub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsubsection",
      "matches": {
        "ssub": true
      }
    },
    "acc08aab-e9cf-3664-bf83-eab801bc6d0c": {
      "content": "-moz-border-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:m": true
      }
    },
    "acc2ec4a-9485-3261-acb9-e5da617c1837": {
      "content": "background-attachment fixed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      }
    },
    "acc5eac6-ad0b-3ef1-84d5-8e88a3ae72b8": {
      "content": "begin\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "begin": true
      }
    },
    "acc64772-9672-394b-b41c-ee849a06dc2b": {
      "content": "if (${1}) then\n\t${2}\nend if",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "if then",
      "matches": {
        "ift": true
      }
    },
    "accffb83-503c-34ec-b9f7-55c6ffcd539b": {
      "content": "@OneToOne\n${1}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      }
    },
    "acd81cf6-bf9e-3600-b5a6-757099c0aede": {
      "content": "struct ${1:Name};",
      "doc": "struct …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "struct-unit",
      "matches": {
        "struct-unit": true
      }
    },
    "acdd63d6-e95c-328a-96a6-f9170c37aa73": {
      "content": "@param ${0:param}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@pa": true
      }
    },
    "acdf8636-b2fb-30da-a5f6-41df5b0bf09a": {
      "content": "_.sortedUniq(${array})",
      "doc": "_.sortedUniq([1, 1, 2]);\n// => [1, 2]\n\nThis method is like `_.uniq` except that it's designed and optimized\nfor sorted arrays.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sorteduniq",
      "matches": {
        "lodash sorteduniq": true
      }
    },
    "ace69a7d-08e2-3e05-b133-31962ce8320d": {
      "content": "- [${1| ,x|}] ${2:text}\n- [${3| ,x|}] ${4:text}\n- [${5| ,x|}] ${6:text}\n- [${7| ,x|}] ${8:text}\n${0}",
      "doc": "Insert task list with 4 tasks",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert task list 4",
      "matches": {
        "task4": true
      }
    },
    "ace8566b-1a3a-362d-bf2c-2a8501ffc23e": {
      "content": "@phdthesis{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    school = {${4}},\n    year = {${5}},\n    memo = {address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@phdthesis": true,
        "phdthesis": true
      }
    },
    "aced09e7-b995-3612-931b-d16473ab5134": {
      "content": "${1:obj}.replaceAll(${2:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repa": true
      }
    },
    "acedf577-f95f-3e4d-9be1-377ad9e75abf": {
      "content": "<bdo dir=\"rtl\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo:r": true
      }
    },
    "acee311f-0c96-348a-ba7c-eb3f1a8e61d3": {
      "content": "shouldComponentUpdate (nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked before rendering when new props or state are being received.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      }
    },
    "acef06e7-c00e-3fed-b536-b09f40de018d": {
      "content": "// Crate name\n#![crate_name = \"${1:crate_name}\"]\n// Additional metadata attributes\n#![desc = \"${2:Description.}\"]\n#![license = \"${3:BSD}\"]\n#![comment = \"${4:Comment.}\"]\n// Specify the output type\n#![crate_type = \"${5:lib}\"]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Define create meta attributes",
      "matches": {
        "crate": true
      }
    },
    "acf4fe62-e093-39d5-8a3c-d3591c2e518c": {
      "content": "align-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items: stretch",
      "matches": {
        "ais": true
      }
    },
    "acfbefbb-5b22-3b5d-a2d5-b58b489292ee": {
      "content": "def __len__(self):\n\t${1:pass}\n\ndef __getitem__(self, key):\n\t${2:pass}\n\ndef __setitem__(self, key, value):\n\t${3:pass}\n\ndef __delitem__(self, key):\n\t${4:pass}\n\ndef __iter__(self):\n\t${5:pass}\n\ndef __reversed__(self):\n\t${6:pass}\n\ndef __contains__(self, item):\n\t${7:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods for emulating a container type",
      "matches": {
        "contain": true
      }
    },
    "acfffeb1-d727-3d84-8ba4-5c06ab88456a": {
      "content": "receive\n    ${1:pattern} ->\n        ${2:todo}\nend$3",
      "doc": "receive block",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "receive",
      "matches": {
        "rec": true
      }
    },
    "ad02b4ed-5523-37bd-8641-1cbd04c69b4f": {
      "content": "${1:obj}.dblclick(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dblclick": true
      }
    },
    "ad08f7d9-60dc-3fc2-8ba6-9a207bea0f96": {
      "content": "texture2D",
      "doc": "vec4 texture2D(sampler2D sampler, vec2 coord)\nvec4 texture2D(sampler2D sampler, vec2 coord, float bias)\n\nThe texture2D function returns a texel, i.e. the (color) value of the texture for the given coordinates. The function has one input parameter of the type sampler2D and one input parameter of the type vec2 : sampler, the uniform the texture is bound to, and coord, the 2-dimensional coordinates of the texel to look up.\n\nThere is an optional third input parameter of the type float: bias. After calculating the appropriate level of detail for a texture with mipmaps the bias is added before the actual texture lookup operation is executed.\n\nSide note: On iOS devices texture lookup functionality is only available in the fragment shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "texture2D",
      "matches": {
        "texture2D": true
      }
    },
    "ad0b8857-59a6-3d85-9d46-23f99c5bda4b": {
      "content": "page-break-before: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:aw": true
      }
    },
    "ad0c56ac-39ad-3ebe-bec7-d2df4ff91700": {
      "content": "do {\n\t$1\n} while (${2:condition})",
      "doc": "Snippet for do...while expression",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "do...while",
      "matches": {
        "do": true
      }
    },
    "ad13bfd9-4c24-37d1-974f-8c85a409e450": {
      "content": "@import '${0}'",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      }
    },
    "ad145d15-d504-3a07-98b4-aa0279d42a2d": {
      "content": "Vue.delete(${1:target}, ${2:key})",
      "doc": "Vue.delete( target, key )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "delete",
      "matches": {
        "VueDelete": true
      }
    },
    "ad1725b0-ec87-35e5-bae6-8506dcfa993a": {
      "content": "alignItems: '${1:center}',",
      "doc": "alignItems",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "alignItems",
      "matches": {
        "align": true
      }
    },
    "ad1a8bed-ee31-3312-9e64-4a0f0b4e6b89": {
      "content": "public function action${1:Index}(${2:params})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yact": true
      }
    },
    "ad1b0e7d-a784-3ddd-bf7d-c8f2a1b64a94": {
      "content": "$.contains(${1:container}, ${0:contents});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      }
    },
    "ad1beede-6061-3fd1-b760-d6c2e56d3ebf": {
      "content": "sscanf($1, \"$2\"$0);",
      "doc": "Generic sscanf() snippet",
      "filetype": "c",
      "grammar": "lsp",
      "label": "sscanf",
      "matches": {
        "sscanf": true
      }
    },
    "ad1fe2cc-54aa-36d8-bf4d-69353cbc4402": {
      "content": "${1:FIELDNAME} = forms.MultiValueField($2)",
      "doc": "MultiValueField (fmuval)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fmuval",
      "matches": {
        "fmuval": true
      }
    },
    "ad2123a7-4420-39d2-b05f-7d88df93dd97": {
      "content": "paddingTop: ${1},",
      "doc": "paddingTop",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingTop",
      "matches": {
        "padding": true
      }
    },
    "ad24623a-9846-3b28-aa35-779af132cca4": {
      "content": "<% ${0:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<%": true
      }
    },
    "ad27e1af-b1ce-3a69-aead-56c4d438e577": {
      "content": "def create\n\t@${1:model_class_name} = ${2:ModelClassName}.new($1_params)\n\trespond_to do |format|\n\t\tif @$1.save\n\t\t\tformat.html { redirect_to @$1, notice: '$2 created' }\n\t\telse\n\t\t\tformat.html { render :new, status: :unprocessable_entity }\n\t\tend\n\tend\nend",
      "doc": "def create",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Create action",
      "matches": {
        "create": true
      }
    },
    "ad33a752-34fc-372e-9307-0051e42b7f6e": {
      "content": "border-left-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bls": true,
        "border-left-style": true
      }
    },
    "ad34a1e4-db71-3495-bd60-8e701dc7ed10": {
      "content": "border-top-right-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:c": true
      }
    },
    "ad378be3-a2a9-316b-bcf9-b95702d479e8": {
      "content": "/**\n * Gets the value of ${1:foo}\n *\n * @return ${2:string}\n */\n${3:public} function get${4:$1}()\n{\n\treturn $this->${5:$1};\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "PHP Class Getter Setter",
      "matches": {
        "gm": true
      }
    },
    "ad38b9d6-ba06-3c23-b98a-9e1bdd73920f": {
      "content": "font-smooth: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:a": true
      }
    },
    "ad3ba6ff-03d3-35e3-b1a3-3a1bd4ee7a62": {
      "content": "print!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "print! with format param",
      "matches": {
        "pri,": true
      }
    },
    "ad3beba2-3419-3505-8412-63272b725eee": {
      "content": "validates_inclusion_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_inclusion_of",
      "matches": {
        "vi": true
      }
    },
    "ad3d46ce-9296-3b86-b278-5a4848157dc1": {
      "content": "{% include \"${0:filename}\" %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "ad410400-5fb3-3a23-a120-643fd07f9d32": {
      "content": "class ${1:MODELNAME}Form(forms.ModelForm):\n\n\tclass Meta:\n\t\tmodel = $1",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ModelForm",
      "matches": {
        "modelform": true
      }
    },
    "ad4699f2-a036-3cfd-b541-5830a0c838b7": {
      "content": "expect.assertions($0);",
      "doc": "expects the test to make the indicated number of assertions (useful for async)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-assertions",
      "matches": {
        "expas": true,
        "jest expect assertions": true
      }
    },
    "ad55a20d-cf02-31cf-8c74-d726b345c4ac": {
      "content": "fscanf(${1:stdin}, \"${2}\", ${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fscanf(file, \"...\", ...);",
      "matches": {
        "fscanf": true
      }
    },
    "ad5fd397-e324-3ec2-ad21-3eb900d57520": {
      "content": "@safe",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "safe": true
      }
    },
    "ad600375-b726-382a-9d0a-3916307dfa12": {
      "content": "props",
      "doc": "A list/hash of attributes that are exposed to accept data from the parent component.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "props",
      "matches": {
        "props": true
      }
    },
    "ad61f0f7-5318-3dce-832d-b5fdacf5a3d7": {
      "content": "System.out.println($0);",
      "doc": "Print to standard out",
      "filetype": "java",
      "grammar": "lsp",
      "label": "sysout",
      "matches": {
        "sysout": true
      }
    },
    "ad65d144-58ea-3cd7-85f7-958022ac9ba5": {
      "content": "[TearDown]\npublic void TearDown() {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testteardown": true,
        "ttd": true
      }
    },
    "ad753a84-38a7-319f-91fd-19e2a54bb0f6": {
      "content": "paste(${1:...}, ${2:sep = ${3:\" \"}}, ${3:collapse = ${4:NULL}})",
      "doc": "Paste",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "pas",
      "matches": {
        "paste": true
      }
    },
    "ad76d5fd-f157-3b45-bdf6-787e143439e6": {
      "content": "${0:obj}.toArray()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toarr": true
      }
    },
    "ad772a78-049f-30a6-8828-4f4727e8d643": {
      "content": "${1|this,vm|}.\\$scopedSlots.default({\n\t$2\n})",
      "doc": "Type: { [name: string]: props => VNode | Array<VNode> }. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$scopedSlots",
      "matches": {
        "vmScopedSlots": true
      }
    },
    "ad7a1d86-4236-3d5a-ac77-d117859e6506": {
      "content": "${1:classNames}({ '${2:foo-bar}': true });",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-usage-object",
      "matches": {
        "classnames usage object": true
      }
    },
    "ad7fdd78-9941-3df7-8b27-54cc1a9e37d9": {
      "content": "${1:obj}.mouseenter(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menter": true
      }
    },
    "ad81a1ec-e3eb-3b17-8211-c5804f541ad6": {
      "content": "must_send [ ${1:what}, :${2:method}, ${3:args} ]",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msend": true
      }
    },
    "ad81fec3-9168-3025-b47a-37889d60bb04": {
      "content": "function self:${1:methodName}($2)\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "self",
      "matches": {
        "self:": true
      }
    },
    "ad821208-adba-3c6f-99ef-3483dd98f0e3": {
      "content": "<h5 class=\"${1}\">${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5.": true
      }
    },
    "ad85fe9a-e288-3fa0-b476-74d9695d3126": {
      "content": "class ${1:MODELNAME}(models.Model):\n\t\"\"\"${2:Model definition for $1}.\"\"\"\n\n\t${3:# TODO: Define fields here}\n\n\tclass Meta:\n\t\t\"\"\"Meta definition for $1.\"\"\"\n\n\t\tverbose_name = '$1'\n\t\tverbose_name_plural = '$1s'\n\n\tdef ${4|__str__,__unicode__|}(self):\n\t\t\"\"\"Unicode representation of $1.\"\"\"\n\t\t${7|pass,return '{}'.format(self. ) # TODO,return f'{self. }' # TODO|}\n\n\tdef save(self):\n\t\t\"\"\"Save method for $1.\"\"\"\n\t\tpass\n\n\tdef get_absolute_url(self):\n\t\t\"\"\"Return absolute url for $1.\"\"\"\n\t\treturn ('')\n\n\t${6:# TODO: Define custom methods here}",
      "doc": "Model (full)",
      "filetype": "models",
      "grammar": "lsp",
      "label": "Model_full",
      "matches": {
        "Model_full": true
      }
    },
    "ad87011d-4489-3c8b-b891-0035882b86bf": {
      "content": "while (${1:#:expression}) {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "while (...) {...}",
      "matches": {
        "while": true
      }
    },
    "ad9878f7-0eab-3ee2-b9ee-b95493026c54": {
      "content": "${1}:\nfor ${2:I} in ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for",
      "matches": {
        "named_for": true
      }
    },
    "ad99573e-2568-32f4-83d2-07245beb0e1a": {
      "content": "import { mapGetters } from 'vuex';\n\nexport default {\n\tcomputed: {\n\t\t...mapGetters([\n\t\t\t${1:'nameOfGetter'},\n\t\t])\n\t},\n};",
      "doc": "mapgetters inside a vue component",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue MapGetters",
      "matches": {
        "vmapgetters": true
      }
    },
    "ad9cebe6-ff89-3d27-a309-059ac55d4143": {
      "content": "${1:super_class}.instance_method(:${0:method}).bind(self).call",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "super_call": true
      }
    },
    "ada81a95-826d-3112-9d4c-af53ab837895": {
      "content": "dictsortreversed:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      }
    },
    "adab6d17-3c67-3395-83c7-346117d08a48": {
      "content": "${1} := ${2}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "shorthand variable declaration",
      "matches": {
        "v": true
      }
    },
    "adb22ed2-f826-3c6b-b532-00d512b887b8": {
      "content": "outline-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      }
    },
    "adb36819-fe41-3d2d-8e2d-c98e8b46b429": {
      "content": "${1:deferred}.then(${2:doneFilter}, ${3:failFilter}, ${4:progressFilter})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dpipe": true
      }
    },
    "adbad9cd-026f-3801-9541-3eb42fc6bdb9": {
      "content": "range ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "range",
      "matches": {
        "rn": true
      }
    },
    "adbc5103-119a-3102-bfaf-a52f0bb1731e": {
      "content": "public ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m+": true
      }
    },
    "adc11e3e-325d-35ca-bf9a-2d96ab0883d2": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplateUrl: '${2:name}.component.html'\n})\n\nexport class ${3:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }$0\n}",
      "doc": "Angular component",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Component",
      "matches": {
        "a-component": true
      }
    },
    "adceeb7d-3aec-3bd1-93ee-6cb2293d8018": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\t\t${2:prop}: ${3:PropTypes}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\t\n})\n\nconst mapDispatchToProps = {\n\t\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}})",
      "doc": "Creates a React component class with PropTypes with connected redux and ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component-redux-proptypes",
      "matches": {
        "rcreduxp": true,
        "react component class redux proptypes": true
      }
    },
    "add544ea-4aec-3c49-b475-096cf98e4b22": {
      "content": "<#if ${1:true}>\n\t${0:${VISUAL}}\n</#if>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#if condition>...</#if>",
      "matches": {
        "if": true
      }
    },
    "addaba1d-87b9-3244-bead-1b66b0594533": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      }
    },
    "addec52f-aa84-33ca-bc91-08771fab0fd7": {
      "content": "word-wrap: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      }
    },
    "addef573-ce54-39e7-9e52-f90a2dddee20": {
      "content": "t.decimal :${1:title}${2:${3:, precision: ${4:10}}${5:, scale: ${6:2}}}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.decimal (tcd)",
      "matches": {
        "t.": true
      }
    },
    "ade635c6-5814-3099-9562-2581a5c53b6a": {
      "content": "$this->input->cookie(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-cookie": true
      }
    },
    "aded6715-0b29-3612-97f5-772b0e28c0c2": {
      "content": "if ${1} then\n\t${2:${VISUAL}}\nelse\n\t${0}\n${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "adf5221b-d954-3f76-ba4a-a7608f5fcf71": {
      "content": "display: flex;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "display: flex",
      "matches": {
        "disf": true
      }
    },
    "adf99d6e-382f-306f-a98c-b47650404895": {
      "content": "${1:obj}.offsetParent()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offsetp": true
      }
    },
    "ae01768a-947c-3e08-b5ce-e9fed661a492": {
      "content": "t.float :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcf": true
      }
    },
    "ae06b6a7-de57-39f7-8508-e500e460f8a6": {
      "content": "*args, **kwargs${1:,}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "akw": true
      }
    },
    "ae083946-9eb2-3319-bead-693c585e53f7": {
      "content": "url(\"${1:path}\", ${2:{foo:\"1\", bar:\"2\"\\}}, ${3:\"http\"}, ${4:false})$0",
      "doc": "url w/ arguments",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "urla",
      "matches": {
        "urla": true
      }
    },
    "ae0fbb39-7cf6-3160-92cd-74b36aff5260": {
      "content": "word-wrap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow": true
      }
    },
    "ae122791-d8ff-331e-b0b8-1cdf3cb0770e": {
      "content": "do\n{\n\t${0:${VISUAL}}\n} while (${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "ae14fbcb-92b8-3773-80b6-a91a8473608f": {
      "content": "<audio controls>\n\t$1\n</audio>",
      "doc": "HTML - Defines sounds content",
      "filetype": "html",
      "grammar": "lsp",
      "label": "audio",
      "matches": {
        "audio": true
      }
    },
    "ae1f7c23-2329-32d2-8443-ae45fb289e5a": {
      "content": "@override\nvoid didUpdateWidget (${1:Type} ${2:oldWidget}) {\n  super.didUpdateWidget(${2:oldWidget});\n  ${0:}\n}",
      "doc": "Called whenever the widget configuration changes.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "didUpdateWidget",
      "matches": {
        "didUpdateW": true
      }
    },
    "ae25ea1d-4421-3172-949e-24803d0c2182": {
      "content": "display: table;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      }
    },
    "ae267580-9bed-3d88-9455-c9b81470fdf0": {
      "content": "{ ${1:|${2:variable}| }$0",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert curly braces block",
      "matches": {
        "{P": true,
        "{p": true
      }
    },
    "ae28fff5-9bed-3feb-a9d8-d416e7cb8cec": {
      "content": "${1:FIELDNAME} = models.TextField(${0:blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      }
    },
    "ae2c702c-4719-3380-a4a0-ff5fccf30a18": {
      "content": "case class ${1:CaseClassName}(${2:argName}: ${3:ArgType})",
      "doc": "Case class",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "case_class",
      "matches": {
        "case_class": true
      }
    },
    "ae2c7ae9-a953-3003-81c3-90a4c8ea598e": {
      "content": "${1:obj}.delay('${2:slow/400/fast}'${3:, 'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delay": true
      }
    },
    "ae2cfb65-a8db-33b1-8d64-3043712336d4": {
      "content": "removetags:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      }
    },
    "ae2e6fc7-288f-33c3-bbea-4f52342218fe": {
      "content": "<bdo dir=\"${1:rtl}\">${2:TARGET}</bdo>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo": true
      }
    },
    "ae305db0-0834-3459-a63e-31f2f9807c43": {
      "content": "const ${1:function_name} = async (${2}) => {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca=>": true
      }
    },
    "ae3262dd-87cb-3de5-aebf-d173386c0620": {
      "content": "/// @notice Explain to an end user what this does\r\n/// @dev Explain to a developer any extra details\r\n/// @param Documents a parameter just like in doxygen (must be followed by parameter name)",
      "doc": "natspec for event",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "natspec event",
      "matches": {
        "///nat_event": true
      }
    },
    "ae3774ce-1199-3c40-9c45-6b3ab54a1016": {
      "content": "${1:FIELDNAME} = models.IPAddressField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IPAddressField",
      "matches": {
        "mip": true
      }
    },
    "ae378383-9d5c-3864-bfc6-e50cfe153be6": {
      "content": "text-emphasis: accent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      }
    },
    "ae3a1ee6-c33e-3cfc-b38d-27047aba6a2d": {
      "content": "function ${1:}(${2})\n\t${3}\nend function $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fu": true
      }
    },
    "ae48e68d-6314-3a45-948e-1e52737e7818": {
      "content": "#![no_std]",
      "doc": "#![no_std]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "no_std",
      "matches": {
        "no_std": true
      }
    },
    "ae4c8741-78f1-30ee-af1d-ffcc8b7ede46": {
      "content": "#[derive(${1:TARGET})]${2}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "derive": true
      }
    },
    "ae4fe7ac-2e9d-300d-9e0a-01e263506632": {
      "content": "when {\n\tchangeset '${1:changeSet}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenchangeset": true
      }
    },
    "ae5169e0-e012-3f39-9bce-8f1205e800da": {
      "content": "font: ${1:1em} ${2:Arial},${3:sans-serif};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      }
    },
    "ae5281b6-d049-3c56-912e-b728adf4b82b": {
      "content": "printfn \\$\"${0}\"",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pri": true
      }
    },
    "ae54f063-2907-32fa-9aae-73178dbf65ac": {
      "content": "${1:actionName}() {\n\tthis.\\$store.dispatch('${1:actionName}', ${2:payload});\n}",
      "doc": "dispatch to vuex store in methods for action",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Dispatch Vuex Store in Methods",
      "matches": {
        "vdispatch": true
      }
    },
    "ae5668c6-0922-3e62-a81b-756dcc6c0689": {
      "content": "width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      }
    },
    "ae743d97-b151-3d29-89e0-3b0206fb611b": {
      "content": "if (${1}) {\n\t${2}\n} {\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "ae7af4a7-56f9-3982-ac50-44ab52bfe32b": {
      "content": "table-layout: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:a": true
      }
    },
    "ae7ce4ea-0f62-3b2c-80d2-c6546f18e2d8": {
      "content": "{{ site.collections.${my_collection}.relative_path }}",
      "doc": "The path to the document's source file realtive to the site source",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag collection relative path",
      "matches": {
        "crelp": true
      }
    },
    "ae86a810-5ab7-35ba-bc73-b89b29911c37": {
      "content": "BEGIN {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "BEGIN { ... }",
      "matches": {
        "beg": true
      }
    },
    "ae8b1eaf-ef72-3257-97db-ce14d61929cb": {
      "content": "@implementation ${1:object}\n- (id)init\n{\n\tif((self = [super init]))\n\t{${0}\n\t}\n\treturn self;\n}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassImplementation",
      "matches": {
        "clm": true
      }
    },
    "ae8fc5c4-f75b-3b44-9b98-543cf08a2d75": {
      "content": "context '${1:message}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cont": true
      }
    },
    "ae908b69-724c-3990-9c60-d9ff25b1f4bc": {
      "content": "border-top-right-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      }
    },
    "ae9c74aa-e09d-3387-a73f-aa4cb68d8134": {
      "content": "border-left-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdli:n": true
      }
    },
    "aea2a4de-a515-32ce-af55-11eca0b512ca": {
      "content": "macro_rules! ${1:name} {\n    (${2}) => (${3})\n}",
      "doc": "macro_rules! … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "macro_rules",
      "matches": {
        "macro_rules": true
      }
    },
    "aea68257-b0d8-3741-b3a5-b3f718076a53": {
      "content": "parser.add_argument(\"${0:arg}\", \"${1:long_arg}\", action=\"${2:store_true}\", default=${3:False}, help=\"${4:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addaarg": true
      }
    },
    "aea8bab0-75ed-3a4b-ae9a-d423966b82c6": {
      "content": "<option>${0}</option>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optt": true
      }
    },
    "aead9292-8807-3601-9601-58c93e532dbf": {
      "content": "afterEach(() => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "afterEach",
      "matches": {
        "afe": true
      }
    },
    "aeb04f0b-fe67-390c-a35d-adf3df608d53": {
      "content": "grid-column-gap 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg:0": true
      }
    },
    "aeb519fd-3de8-311e-ac21-6f928a3b0c58": {
      "content": "$.getJSON '${1:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(data, textStatus, jqXHR) ->\n\t\t${0:// success callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getjson": true
      }
    },
    "aeb817fb-03d5-378c-a4e9-64e939a1053c": {
      "content": "import qualified ${1} as ${2}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "import qualified ... as ...",
      "matches": {
        "import": true
      }
    },
    "aeba6e7e-328c-311f-a61e-b4322c8d4079": {
      "content": "${1:callbacks}.fire(${2:args})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfire": true
      }
    },
    "aebc9fa1-ed0a-3441-a5ee-ef402ddd3350": {
      "content": "${1:obj}.change(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "change": true
      }
    },
    "aec4cc5b-1b86-341a-9188-42e191a74a39": {
      "content": "outline-offset: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      }
    },
    "aec5fd6c-8896-3149-8e12-7cdb30ec50a8": {
      "content": "@keyframes ${1:name} {\n  $0\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "@keyframes",
      "matches": {
        "key": true
      }
    },
    "aec9df72-aa6b-31fb-8277-54f6ce96995a": {
      "content": "do ${1:i} = ${2:start}, ${3:end}, ${4:incr}\n\t${0}\nend do",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "aed10d09-f1c1-3122-a1bf-87c40c2043d9": {
      "content": "#' @param ${1:name}::${2:Type} ${0:Description}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "function parameter documentation",
      "matches": {
        "par": true
      }
    },
    "aed2a947-dea7-35a5-b0bf-57bc7748899e": {
      "content": "expect(${1:target}).toBeGreaterThan(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be greater than (js)",
      "matches": {
        "eg": true
      }
    },
    "aee0ca4c-aa75-3fa0-9a6b-eb85d840d7e2": {
      "content": "defp ${1:name}, do: ${2}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfp": true
      }
    },
    "aee29c8f-b267-3827-b9b0-81e4c3e5846b": {
      "content": "describe '${1:description}', ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "Describe (coffee)",
      "matches": {
        "des": true
      }
    },
    "aee4b11c-29a6-339d-a27f-6f2909b9c2bd": {
      "content": ":- initialization main.\n\nmain :-\n  current_prolog_flag(argv, Args),\n  writeln(Args),\n  halt.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "aeee6e33-ed1c-385e-9fea-35f836f2684c": {
      "content": "if (${1:#:condition}) {\n    ${2:TARGET}\n} else {\n    ${3}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifelse": true
      }
    },
    "aeef536b-71e3-396f-baf5-975c9a8ccb36": {
      "content": "<xsl:include href=\"${1:stylesheet}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "aef95bc6-822d-3cb0-9e51-b2e26d8476c2": {
      "content": "[(ngModel)]=\"${1:binding}\"",
      "doc": "Angular ngModel",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngModel",
      "matches": {
        "a-ngModel": true
      }
    },
    "aefe28b5-9223-3a96-8359-39b30e5ff89d": {
      "content": "sig\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "anonymous signature",
      "matches": {
        "sig": true
      }
    },
    "aefe886d-604d-34a7-a7d6-ea35682a68c8": {
      "content": "setter! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w!": true
      }
    },
    "af05d393-7e18-3baa-99ce-915e4df086ce": {
      "content": "componentWillUpdate: (nextProps, nextState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentWillUpdate",
      "matches": {
        "componentWillUpdate": true
      }
    },
    "af167054-ee8d-3ec5-a862-348022e401f8": {
      "content": "align-self: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      }
    },
    "af21269b-4cb2-309f-9905-0a68bc07cdc0": {
      "content": "else if(${1:/*condition*/})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "else if (elif)",
      "matches": {
        "elif": true
      }
    },
    "af2aa170-0969-397a-8548-baf70ff588ed": {
      "content": "ci(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "ci conventional commit",
      "matches": {
        "ci": true
      }
    },
    "af31f281-6fb1-35b2-befb-d2e61e7bdb4d": {
      "content": "${1:#:title}\n====================================",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title": true
      }
    },
    "af35404f-a17d-3a42-a55b-9afd9ad64cba": {
      "content": "FUNCTION NATIONAL-OF(${1:alphanumeric-string},${2:replacement-char})$0",
      "doc": "convert alphanumeric-string to the national coded character set representation",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-NATIONAL-OF",
      "matches": {
        "FUNCTION NATIONAL-OF": true
      }
    },
    "af3ac1a9-c4eb-31b2-af16-998ea46d4a55": {
      "content": "maxval(${1:source}${2:, dim=${3:1}}${4:, mask=${5:($1>0)}})",
      "doc": "Maximum Value",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "maxval",
      "matches": {
        "maxval": true
      }
    },
    "af3dcd1b-d6b1-33d3-84d4-7ff71f71c687": {
      "content": "${1:value_key}:\n  service:\n\tannotations: {}\n\tlabels: {}\n\tclusterIP: \"\"\n\texternalIPs: []\n\tloadBalancerIP: \"\"\n\tloadBalancerSourceRanges: []\n\texternalTrafficPolicy: \"\"\n\thealthCheckNodePort: 0\n\ttargetPorts:\n\t  http: http\n\t  https: https\n\ttype: LoadBalancer\n\tnodePorts:\n\t  http: \"\"\n\t  https: \"\"\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service_values": true
      }
    },
    "af4431fe-2729-31e2-a4b9-bad645e70da8": {
      "content": "${0:name}.filter (a",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "af4624ec-b644-3a76-b8a7-d42a89c3f316": {
      "content": "goback returning ${1:0}",
      "doc": "goback returning [0]",
      "filetype": "vscode_cobol-compound",
      "grammar": "lsp",
      "label": "gr0",
      "matches": {
        "gr0": true
      }
    },
    "af476b4b-0537-32ad-b567-2573b75001d2": {
      "content": "import React, { Component, PropTypes } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t}\n\n\tcomponentWillMount () {\n\n\t}\n\n\tcomponentDidMount () {\n\n\t}\n\n\tcomponentWillReceiveProps (nextProps) {\n\n\t}\n\n\tshouldComponentUpdate (nextProps, nextState) {\n\n\t}\n\n\tcomponentWillUpdate (nextProps, nextState) {\n\n\t}\n\n\tcomponentDidUpdate (prevProps, prevState) {\n\n\t}\n\n\tcomponentWillUnmount () {\n\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n${1}.propTypes = {\n\n}\n\nexport default ${1}",
      "doc": "Creates a React component class with PropTypes and all lifecycle methods",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactClassCompomentWithMethods",
      "matches": {
        "rcfc": true
      }
    },
    "af4a31f1-995f-3ab0-9f25-198f14523493": {
      "content": "if ${1} then\n\t${0}\nend if;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "af4b0887-0a5f-35b3-a2a9-0fa947a459ac": {
      "content": "@include('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@include directive",
      "matches": {
        "include": true
      }
    },
    "af5745bd-6832-327b-976c-a677c9fee6aa": {
      "content": "alias_method :${1:new_name}, :${0:old_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "alias method definition",
      "matches": {
        "am": true
      }
    },
    "af5bc056-7d79-3416-9725-82e12cf14001": {
      "content": "<nav>\n\t${0}\n</nav>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nav": true
      }
    },
    "af604cf1-f92d-3e57-b807-4a92b544a6ed": {
      "content": "//#region ${1}\n${2}\n//#endregion",
      "doc": "Create region",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "regionStartEnd",
      "matches": {
        "#regionStartEnd": true
      }
    },
    "af675f9d-5921-3f0d-81f3-5ec177ed18fc": {
      "content": "for ${1:value}=${2:index}:${3:index}\n\t$0\nend",
      "doc": "Code snippet to create a for loop.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "af67a1ae-af98-342d-a04d-c1a56e5be10b": {
      "content": "void main(List<String> args) {\n  $0\n}",
      "doc": "Insert a main function, used as an entry point.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "af68c0f8-42e3-37aa-8845-5e0b9f3b990f": {
      "content": "print-%: ; @echo $*=$($*)",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "af707b7b-05e1-3057-beb7-4f0a44a047be": {
      "content": "map { |${1:e}| $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert map inline block",
      "matches": {
        "map": true
      }
    },
    "af755b5d-bb3b-3b73-90a0-e8922ed149d6": {
      "content": "expect($1).toHaveBeenLastCalledWith($0);",
      "doc": "returns true if the spy has been last called with",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeenlastcalledwith",
      "matches": {
        "jest expect tohavebeenlastcalledwith": true,
        "thblcw": true
      }
    },
    "af775947-2fba-321b-9b5c-14ed3b977889": {
      "content": "for var ${1:i = 0}; ${2:i < j}; ${3:i++} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "af78903f-2e82-35b0-a000-38dc9e0002eb": {
      "content": "${1:Section}~\\\\ref{sec:${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a section",
      "matches": {
        "section": true
      }
    },
    "af78be72-5068-351d-8506-153de31b31ff": {
      "content": "watch([${1:foo}, ${2:bar}], ([new${1}, new${2}], [prev${1}, prev${2}]) => {\n\t${3}\n})",
      "doc": "Requires watching an array, and applies side effects in a separate callback function.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3watch-array",
      "matches": {
        "vue v3 watch-array": true
      }
    },
    "af798181-d718-3099-9888-a3b45b8867e2": {
      "content": "<ol type=\"a\">${1:TARGET}</ol>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ola": true
      }
    },
    "af7ff578-5290-3ebd-9a46-e2bcab870429": {
      "content": "${1:FIELDNAME} = models.EmailField(max_length=${2:75}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "email": true
      }
    },
    "af8365bf-255b-3ca2-bfa9-67a298d75ad2": {
      "content": "echo CHtml::activeListBox(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhalb": true
      }
    },
    "af84439d-be46-328f-a2ed-8824850002fa": {
      "content": "cy.server();",
      "doc": "Start a server to begin routing responses to cy.route() and to change the behavior of network requests.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-server",
      "matches": {
        "cypress server": true
      }
    },
    "af8e2a5f-c678-33c0-8c15-323360487cc2": {
      "content": "text-align-last left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:l": true
      }
    },
    "af958b52-e35f-3f85-ab4d-fd003e20d0b3": {
      "content": "set terminal ${1:#:terminal}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set terminal",
      "matches": {
        "term": true
      }
    },
    "af9853a7-746b-3d22-9386-a681f57c3323": {
      "content": "Yii::app()->request->requestType",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yreqtype": true
      }
    },
    "af99723a-aab5-3422-a711-7ccfaca6be33": {
      "content": "// https://eips.ethereum.org/EIPS/eip-725\r\n// https://github.com/ERC725Alliance/ERC725 (example)\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/*\r\nThe following describes standard functions for a unique identifiable proxy account to be used by humans, groups, organisations, objects and machines.\r\nThe proxy has 2 abilities: (1) it can execute arbitrary contract calls, and (2) it can hold arbitrary data through a generic key/value store.\r\nOne of these keys should hold the owner of the contract. The owner may be an address or a key manager contract for more complex management logic.\r\nMost importantly, this contract should be the reference point for a long-lasting identifiable profiles.\r\n*/\r\ninterface ERC725 {\r\n    event DataChanged(bytes32 indexed key, bytes32 indexed value);\r\n    event OwnerChanged(address indexed ownerAddress);\r\n    event ContractCreated(address indexed contractAddress);\r\n\r\n    // address public owner;\r\n\r\n    function changeOwner(address _owner) external;\r\n    function getData(bytes32 _key) external view returns (bytes32 _value);\r\n    function setData(bytes32 _key, bytes32 _value) external;\r\n    function execute(uint256 _operationType, address _to, uint256 _value, bytes calldata _data) external;\r\n}",
      "doc": "Draft: EIP-725: Proxy Account. Standard functions for a unique identifiable proxy account to be used by humans, groups, organisations, objects and machines",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc725i",
      "matches": {
        "erc725i-draft": true
      }
    },
    "afa3b123-faf9-3f91-b247-458d60423446": {
      "content": "componentWillUpdate(nextProps, nextState) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillUpdate",
      "matches": {
        "cwu": true
      }
    },
    "afafa6b7-de8e-3761-ad1d-49c68d153537": {
      "content": "true",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "true",
      "matches": {
        "t": true
      }
    },
    "afb0d0d4-6cc3-39cc-88bc-dd23b2ed77ca": {
      "content": "async function ${1:name}() {\n\ttry {\n\t\tconst response = await axios.get('${2:uri}');\n\t\t${3:success}\n\t}\tcatch (error) {\n\t\t${4:error}\n\t}\n}",
      "doc": "Use Axios to make a get request - async-await",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-get-async-await",
      "matches": {
        "axios get async await": true
      }
    },
    "afb6b8f6-9fa5-360d-a8ce-6eb7c08a04de": {
      "content": "for (${1}; ${2}; ${3}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "afbc61a0-d0ad-3ef5-9222-18602b86ab5e": {
      "content": "outline-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      }
    },
    "afc391d7-0536-3ec2-aa14-be03dde99dd5": {
      "content": "class ${1:#:name}(${2:object}):\n\n\tdef __init__(self, ${3}):\n\t\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "class Class(...): ...",
      "matches": {
        "class": true
      }
    },
    "afcd7da6-c8f5-3071-bd4d-584bce197820": {
      "content": "http.createServer(${1:handler}).listen(${2:port_number});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "http": true
      }
    },
    "afcea881-b47e-3922-a5a9-0a3084f7c3c5": {
      "content": "<th>$1</th>$2",
      "doc": "HTML - Defines a table header",
      "filetype": "html",
      "grammar": "lsp",
      "label": "th",
      "matches": {
        "th": true
      }
    },
    "afcfaaf4-5e70-324a-878b-2db0eb5390cf": {
      "content": "environment division.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "environment division",
      "matches": {
        "ed": true,
        "environment division": true
      }
    },
    "afd11c00-0b5b-395b-957f-d010830b141e": {
      "content": "${1:deferred}.done(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Ddone": true
      }
    },
    "afd9beec-9c49-3b3e-aabe-879a60a7e2b2": {
      "content": "<frameset rows=\"${1}\"\n${2:TARGET}\n</frameset>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "framesetrows": true
      }
    },
    "afdc73af-1a01-394c-be58-7db861a64853": {
      "content": "**${1}** $0",
      "doc": "Insert bold text",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert bold text",
      "matches": {
        "b": true,
        "bold": true
      }
    },
    "afe0df9f-f5d2-3bb1-800e-4c63e72767eb": {
      "content": "#if ${1}\n  ${2}\nelse\n  #{3}\n#endif",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "#if .. else .. #endif",
      "matches": {
        "#ife": true
      }
    },
    "afedba42-f9a6-39fc-af78-cd983861d00b": {
      "content": "background-position ${1:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgp": true
      }
    },
    "aff07191-a2ea-3dda-bdb9-e43360daa2a2": {
      "content": "Plug '${0}'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition",
      "matches": {
        "plug": true
      }
    },
    "aff2c096-d185-3e2b-887d-65b33299f812": {
      "content": "_.entriesIn(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairsIn(new Foo);\n// => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\nCreates an array of own and inherited enumerable string keyed-value pairs\nfor `object` which can be consumed by `_.fromPairs`. If `object` is a map\nor set, its entries are returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-entriesin",
      "matches": {
        "lodash entriesin": true
      }
    },
    "affc95e6-3bcf-3ccf-afd6-9fa5d1b35f91": {
      "content": "display table-row",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbr": true
      }
    },
    "affe6bc9-fdd8-399c-aa79-1a05a94a5c02": {
      "content": "{% extends \"$1\" %}",
      "doc": "extends tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ext",
      "matches": {
        "ext": true
      }
    },
    "b0049e89-ca73-3cac-9e7c-26130f3f15df": {
      "content": "| truncatewords: ${1:5}, '${2:...}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      }
    },
    "b0137e84-20d9-3c7b-90a1-fb1e2724e977": {
      "content": ":- run_tests.\n:- halt.",
      "doc": "",
      "filetype": "prolog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "runtest": true
      }
    },
    "b0158108-6726-3b10-9377-784642683502": {
      "content": "this.${1:methodName} = this.${1:methodName}.bind(this)$0",
      "doc": "Binds this to a method",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-bind-this",
      "matches": {
        "bnd": true,
        "react bind this": true
      }
    },
    "b01d9367-dac0-3a70-b5a0-852dc562183b": {
      "content": "( ${0:#statements} )",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(": true
      }
    },
    "b01edf40-4c46-3b49-9909-eb30d59c809e": {
      "content": "justify-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:c": true
      }
    },
    "b02f90d8-ca4a-3994-86ce-4fdcab70862c": {
      "content": "text-align-last: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:r": true
      }
    },
    "b02fc2dc-35c6-3ff4-85c2-4354a001ceed": {
      "content": "function ${1}(${2}) return ${3} is\n\t${4}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "function",
      "matches": {
        "fun": true
      }
    },
    "b03bb39a-f0b2-3930-9484-264d2195af51": {
      "content": "double precision :: ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "double": true
      }
    },
    "b03f3008-d611-39ec-bbe2-5c2f63aa40a4": {
      "content": "border-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-width": true,
        "bw": true
      }
    },
    "b045c6aa-08c2-3ee3-bb4e-32fd33dbc20d": {
      "content": "describe ${1:described_class} do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert describe class",
      "matches": {
        "desc": true
      }
    },
    "b045ee3d-e13d-3ad2-867b-197c5081484f": {
      "content": "@doc \"\"\"\n$0\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "doc",
      "matches": {
        "doc": true
      }
    },
    "b049930b-004c-3eaf-a259-34f231051b87": {
      "content": "componentWillUnmount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      }
    },
    "b04df3d1-0ae0-3151-b8a8-0ed59609506b": {
      "content": "${1:first} = (${2:second}) => {${3:third}}",
      "doc": "Creates a method inside a class",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "method",
      "matches": {
        "met": true
      }
    },
    "b05859f2-093c-39e0-8646-760e032445c1": {
      "content": "delimited by size",
      "doc": "delimited by size (string)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "delimited",
      "matches": {
        "dbs": true,
        "delimited by size": true
      }
    },
    "b05ac737-1dbb-3ec0-ade8-21ec1bb81b3e": {
      "content": "border-style: dot-dot-dash",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      }
    },
    "b05b066e-2a87-31d4-9cef-ed074e7e837b": {
      "content": "$this->db->join(\"${1:table}\", \"${2:condition}\", \"${3:type}\");${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-join": true
      }
    },
    "b05d213e-8a21-3f35-aaf1-7b5b47cb339d": {
      "content": "<a class=\"${1}\" href=\"${2:#}\">${0:$1}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a.": true
      }
    },
    "b06487a7-ba58-3939-91c5-d7186e073227": {
      "content": "lua << EOF\n${0}\nEOF",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "lua <<EOF | EOF",
      "matches": {
        "lua": true
      }
    },
    "b072b7a3-c513-3f01-bb74-517df1bac88a": {
      "content": "apply(${1:array}, ${2:margin}, ${3:...})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "apply",
      "matches": {
        "apply": true
      }
    },
    "b079c5c5-727d-3ea1-a9fd-9e32d5c390e8": {
      "content": "DROP TABLE ${1:tableName};",
      "doc": "Drop table",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "dropt",
      "matches": {
        "dropt": true
      }
    },
    "b07dbd2f-da79-354f-928e-6dbb604b7bea": {
      "content": "text-align: ${1|center,left,right,justify,start,end|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-align",
      "matches": {
        "ta": true
      }
    },
    "b0830c01-89f2-32e8-9c4b-434f85624c6f": {
      "content": "${1:className} = {}\n\n$1.${2:new} = function($3)\n\tlocal ${4:varName} = ${5:{}}\n\n\t${6: --code}\n\n\treturn $4\nend",
      "doc": "Create a class",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "cl": true
      }
    },
    "b084eb0e-49af-3c9f-97dd-32a15ab20a13": {
      "content": "{% debug %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "b08975c0-8ee6-35ff-9771-da9193d6860d": {
      "content": "@click=\"${1}\"",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vcl": true
      }
    },
    "b08e152e-aa39-31d0-a06b-b3769b618b2e": {
      "content": "render",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render",
      "matches": {
        "rr": true
      }
    },
    "b0904269-b263-3176-80c1-480365f8ba50": {
      "content": "__FILE__",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "FILE": true
      }
    },
    "b0905b1f-e934-3f52-964e-f1a4cf8732d2": {
      "content": "PropTypes.bool.isRequired,",
      "doc": "Bool prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeBoolRequired",
      "matches": {
        "ptbr": true
      }
    },
    "b09128c2-3cba-36d0-8751-2632a57d17b6": {
      "content": "text-wrap: suppress",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      }
    },
    "b0b10569-548d-302c-ac1b-7b495ee1c431": {
      "content": "echo CHtml::activeLabelEx(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhale": true
      }
    },
    "b0b29fc0-aa67-3445-aaf5-a41f4535cbd4": {
      "content": "${1:FIELDNAME} = forms.SlugField($2, allow_unicode=${3:False}, required=${4:False})",
      "doc": "SlugField (fslug)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fslug",
      "matches": {
        "fslug": true
      }
    },
    "b0b4d338-5140-352a-a676-ba6bb8d29f5d": {
      "content": "reshape(${1:source}${2:, shape=(/$3/)}${4:, pad=(/$5/)}${6:, order=(/${7:2,1}/)})",
      "doc": "reshape",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "resh",
      "matches": {
        "resh": true
      }
    },
    "b0b59047-1442-3d8c-8c35-5d809a08042f": {
      "content": "${1:name}: ${2:Type},",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct field definition",
      "matches": {
        "fd": true
      }
    },
    "b0b6db00-e9e6-3278-a900-e95e0a82db90": {
      "content": "$.map(${1:arrayOrObject}, function (${2:value}, ${3:indexOrKey}) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapp": true
      }
    },
    "b0bbf239-33e5-32bb-8b08-c7ae27e783e0": {
      "content": "\\begin{Bmatrix}\n\t${1:TARGET}\n\\end{Bmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Bmatrix": true,
        "\\begin{Bmatrix} \\Bmatrix": true
      }
    },
    "b0beb862-22ee-3f56-869a-9c9763e944f3": {
      "content": "echo CHtml::fileField('${1:name}', '${2:value}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhff": true
      }
    },
    "b0c06e18-8bff-37a8-832e-89eed51c31db": {
      "content": "// import java.nio.IntBuffer;\n// import java.nio.FloatBuffer;\n// import com.sun.opengl.util.BufferUtil;\n\n// You might need to create four buffers to store vertext data, normal data, texture coordinate data, and indices in vertex arrays\nIntBuffer bufferObjects = IntBuffer.allocate(${1:4});\ngl.glGenBuffers($1, bufferObjects);\n\nint vertexCount = ${2:3};\nint numCoordinates = ${0:3};\n// vertexCount * numCoordinates\nFloatBuffer vertices = BufferUtil.newFloatBuffer(vertexCount * numCoordinates);\nfloat[] v = {0.0f, 0.0f, 0.0f,\n\t\t\t\t\t\t 1.0f, 0.0f, 0.0f,\n\t\t\t\t\t\t 0.0f, 1.0f, 1.0f};\nvertices.put(v);\n\n// Bind the first buffer object ID for use with vertext array data\ngl.glBindBuffer(GL.GL_ARRAY_BUFFER, bufferObjects.get(0));\ngl.glBufferData(GL.GL_ARRAY_BUFFER, vertexCount * numCoordinates * BufferUtil.SIZEOF_FLOAT, vertices, GL.GL_STATIC_DRAW);",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl gen buffers",
      "matches": {
        "gl": true
      }
    },
    "b0c0e5ef-3786-33ca-9a55-6663b1cfc560": {
      "content": "border-top-right-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri": true
      }
    },
    "b0c9f6e2-5908-33bc-9a05-8a64969bdacc": {
      "content": "TweenAnimationBuilder(\n    duration: ${1:const Duration(),}\n    tween: ${2:Tween(),}\n    builder: (BuildContext context, ${3:dynamic} value, Widget? child) {\n       return ${4:Container();}\n     },\n ),",
      "doc": "Widget builder that animates a property of a Widget to a target value whenever the target value changes.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Tween Animation Builder",
      "matches": {
        "tweenAnimationBuilder": true
      }
    },
    "b0ca24c9-a70a-38db-89a0-de3cfd21522f": {
      "content": "sub ${1:function_name}(${2:Str $var}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "b0cdb7c7-3a8f-3ca4-b590-350485a10040": {
      "content": "void main(){\n\t\n}",
      "doc": "void main(void){\n\t//code\n}\n\nThe keyword main is used to define the main function of a shader. This function is the entry point for the execution of every vertex and fragment shader. The main function takes no parameters and does not return a value.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "function main",
      "matches": {
        "void main": true
      }
    },
    "b0d12591-5ed3-3c9e-a366-fc3a05a797e9": {
      "content": "after_save $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_save",
      "matches": {
        "afts": true
      }
    },
    "b0de61f7-8b3b-3d93-8fab-2c44dd84cf89": {
      "content": "<select [(ngModel)]=\"${1:model}\">\n\t<option *ngFor=\"let ${2:item} of ${3:list}\" [value]=\"${2:item}\">{{${2:item}}}</option>\n</select>",
      "doc": "<select> control with ngModel",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngselect",
      "matches": {
        "a-select": true,
        "angular ng select": true
      }
    },
    "b0e3a7f8-4a15-3926-b6d8-e45bfe17e461": {
      "content": "\\\\newcommand{\\\\${1:cmd}}[${2:opt}]{${3:realcmd}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\newcommand",
      "matches": {
        "nc": true
      }
    },
    "b0e64518-09ba-3802-983e-994533bb1719": {
      "content": ":global(${1:body}) {\n\t/* this will apply to <body> */\n\t${2:/* your styles go here */}\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-global-style",
      "matches": {
        "svelte global style": true,
        "svsglobal": true
      }
    },
    "b0e7b794-7b62-3c7a-ae6f-00fc6331374b": {
      "content": "<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');\n\nclass ${1:ClassName_model} extends CI_Model\n{\n\tprivate $table = '${2:table_name}';\n\n\tfunction __construct()\n\t{\n\t\tparent::__construct();\n\t\t${3:// code...}\n\t}\n\n\tpublic function create($data)\n\t{\n\t\tif($this->db->insert($this->table, $data))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\n\tpublic function read($id)\n\t{\n\t\treturn $this->db->get_where($this->table, array('id', $id))->result();\n\t}\n\n\tpublic function update($id, $data)\n\t{\n\t\tif($this->db->update($this->table, $data, array('id' => $id)))\n\t\t\treturn true;\n\t\telse\n\t\t\treturn false;\n\t}\n\n\tpublic function delete($id)\n\t{\n\t\tif(is_array($id))\n\t\t{\n\t\t\t$this->db->trans_start();\n\t\t\tforeach($id as $elem)\n\t\t\t\t$this->db->delete($this->table, array('id' => $elem));\n\t\t\t$this->db->trans_complete();\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif($this->db->delete($this->table, array('id' => $id)))\n\t\t\t\treturn true;\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t}\n\n\tpublic function listRows($limit = null, $offset = 0)\n\t{\n\t\tif(!is_null($limit))\n\t\t\t$this->db->limit($limit, $offset);\n\t\treturn $this->db->get($this->table)->result();\n\t}\n}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_model_crudl": true
      }
    },
    "b0ec75b8-f335-3889-89b9-8c9e1ecb2b8d": {
      "content": "import React from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component without PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStateless",
      "matches": {
        "rsc": true
      }
    },
    "b0ed92b9-fa1c-38de-a92c-b83004bf2bdd": {
      "content": "{% ifchanged %}${1}{% endifchanged %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifchanged": true
      }
    },
    "b0edb4f6-578b-3e61-95a3-166542abae88": {
      "content": "<?php foreach ($${1:vars} as $${2:$var}): ?>\n\t${0:${VISUAL}}\n<?php endforeach ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?f": true
      }
    },
    "b0fc94ef-0ba1-374d-9c65-b96f3c216fa6": {
      "content": "{% from \"${1}\" import ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig from",
      "matches": {
        "from": true
      }
    },
    "b1037196-c610-325b-b5a2-7ea459b14d5f": {
      "content": "truncatewords:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewords": true
      }
    },
    "b103975b-c477-3544-b3a8-52f8f5fc81ff": {
      "content": "#[macro_use(${1})]",
      "doc": "#[macro_use(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "macro_use",
      "matches": {
        "macro_use": true
      }
    },
    "b106dfbd-e438-3c40-88fd-b69787477704": {
      "content": "gl.glClear(${1:GL.GL_COLOR_BUFFER_BIT}${2: | }${0:GL.GL_DEPTH_BUFFER_BIT});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl clear",
      "matches": {
        "gl": true
      }
    },
    "b1084763-d692-3fe4-b394-172ec9afe3fb": {
      "content": "align-items: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items: flex-start",
      "matches": {
        "aifs": true
      }
    },
    "b11961e9-af95-37f9-b278-65e17b90a7b7": {
      "content": "font-stretch ultra-condensed",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      }
    },
    "b119b908-c60d-34cd-9e6a-67a0e8ee22e4": {
      "content": "for (my $${2:var} = 0; $$2 < ${1:count}; $$2${3:++}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cfor": true
      }
    },
    "b119ebf2-6876-330c-b2b5-6e55d7b6adef": {
      "content": "\\\\citeauthor{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citeauthor",
      "matches": {
        "citea": true
      }
    },
    "b120ee1c-f864-3aeb-af7c-3e6da5dd5f88": {
      "content": "#include \"$0\"",
      "doc": "Code snippet for #include \" \"",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#inc",
      "matches": {
        "#inc": true
      }
    },
    "b123d6df-1897-34b5-84b7-12e03d5877d8": {
      "content": "font-variant: ${1:normal/small-caps};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-variant:   normal:small-caps (font)",
      "matches": {
        "font": true
      }
    },
    "b1287305-4f0c-3b0e-adfe-25c7a4fed85f": {
      "content": "<script>\n\t${1:// your script goes here}\n</script>\n\n<style>\n\t${2:/* your styles go here */}\n</style>\n\n${3:<!-- markup (zero or more items) goes here -->}",
      "doc": "add a script to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-format",
      "matches": {
        "s-component-format": true
      }
    },
    "b12da8ba-b25f-3c41-bf0f-e69c6f12e601": {
      "content": "${1:obj}.resize (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "resize": true
      }
    },
    "b12ffb7c-eda8-3ef6-bddf-0d759da13df1": {
      "content": "System.out.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sout": true
      }
    },
    "b1396e85-240e-3a00-ac09-042046a648a6": {
      "content": "length_is:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      }
    },
    "b1401ed9-239b-305a-9829-2515e97a5cab": {
      "content": "_.zipObjectDeep(${props}, ${values})",
      "doc": "_.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n// => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\nThis method is like `_.zipObject` except that it supports property paths.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipobjectdeep",
      "matches": {
        "lodash zipobjectdeep": true
      }
    },
    "b1439eba-ef97-3091-b725-441cea58ae36": {
      "content": "justify-items: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:s": true
      }
    },
    "b145ff67-1c6f-38a8-adcc-6d4147478a90": {
      "content": "exp2($2)",
      "doc": "float exp2(float x)\nvec2 exp2(vec2 x)\nvec3 exp2(vec3 x)\nvec4 exp2(vec4 x)\n\nThe exp2 function returns 2 raised to the power of x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "exp2",
      "matches": {
        "exp2": true
      }
    },
    "b146e7b6-91ce-356d-89fd-8df0dfb5d226": {
      "content": "Vue.config.keyCodes = {\n\t${1:// camelCase won`t work}\n}",
      "doc": "Vue.config.keyCodes",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "keyCodes",
      "matches": {
        "VueConfigKeyCodes": true
      }
    },
    "b14bc520-b36f-3905-9ffb-584397796734": {
      "content": "echo CHtml::errorSummary(${1:model},'${2:headerHtml}','${0:footerHtml}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yherrs": true
      }
    },
    "b14cf992-4ea1-36ae-814c-c149e2df58c9": {
      "content": "{% from \"${1:template}\" import ${2:name}${3: as ${4:$2}} %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "from/import/as",
      "matches": {
        "from": true
      }
    },
    "b151e5dc-abc6-376d-92ca-43347d5d7e38": {
      "content": "justifyContent: '${1:center}',",
      "doc": "justifyContent",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "justifyContent",
      "matches": {
        "just": true
      }
    },
    "b154af19-adf3-354e-bc22-720756d914d8": {
      "content": "useEffect(() => {\n\t${1:effect}\n\treturn () => {\n\t\t${2:cleanup}\n\t};\n}, [${3:input}])",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useeffect",
      "matches": {
        "react useeffect": true,
        "useeffect": true
      }
    },
    "b16595c9-8dfb-30c5-911e-1b6cf5d68657": {
      "content": "llply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ll": true
      }
    },
    "b16718c0-e350-36c2-be3f-65e2eea40be8": {
      "content": "def self.${1:method_name}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "class method definition",
      "matches": {
        "defs": true
      }
    },
    "b16aff0c-44cb-3963-83b0-736fd414f1b6": {
      "content": "try\n  ${1:TARGET}\ncatch /${2:#:pattern}/\n  ${3}\nendtry",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "try endtry",
      "matches": {
        "try": true
      }
    },
    "b16d1e0e-e241-3a99-aac4-f0ca9548e75f": {
      "content": "function ${1:name} {\n\t[CmdletBinding()]\n\tparam (\n\t\t[Parameter(Mandatory = $true)]\n\t\t[string] ${2:Param}\n\t)\n\n\tbegin {\n\t}\n\n\tprocess {\n\t}\n\n\tend {\n\t}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "function": true
      }
    },
    "b16f132e-36ac-32d5-b809-1d2c9dccb40c": {
      "content": "create index ${0:$1_$2} on ${1:table}(${2:column});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ind": true
      }
    },
    "b17adb04-ae41-3181-aa57-addfbb68befe": {
      "content": "function ${1:name}(${2:args})\n  return ${3:type}\nas\n\tl_res\t$3;\nbegin\n\t${0:-- body};\n\treturn l_res;\nend $1;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfb": true
      }
    },
    "b17e102b-eeb4-3c5b-9a9f-925ceac6771d": {
      "content": "\\textbf{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textbf": true,
        "textbf \\textbf{": true
      }
    },
    "b17e9fa7-1a9f-30e5-a19b-1594ce7c3b29": {
      "content": "% try:\n\t${1:${VISUAL}}\n% except${2:}:\n\t${0:pass}\n% endtry",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "b17fdd19-1545-3886-a810-c39dfad15693": {
      "content": "formArrayName=\"${1:control}\"",
      "doc": "Angular formArrayName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformarrayname",
      "matches": {
        "a-formarrayname": true,
        "angular ng form array name": true
      }
    },
    "b1856479-12f3-3ac3-8ae2-1eb650e927e3": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"postcss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-postcss",
      "matches": {
        "vue base postcss": true
      }
    },
    "b187982b-f9e6-3357-8dd4-9660c60a54dc": {
      "content": "max-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah": true,
        "max-height": true
      }
    },
    "b188b99c-e8c7-36cc-a6e2-d071567dec2d": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "if (condition) { ... }",
      "matches": {
        "if": true
      }
    },
    "b18cb688-096f-301f-9572-ace989095f86": {
      "content": "emissive(${1:value1}, ${2:value2}, ${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emissive": true
      }
    },
    "b18f3768-f584-3af7-9b3f-8daf5e906e30": {
      "content": "where ( $1 ${2:==} $3 )",
      "doc": "where (single line)",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "wh",
      "matches": {
        "wh": true
      }
    },
    "b19ef7b7-dbdc-38e5-8232-bc433d8ee3c7": {
      "content": "\\begin{itshape}\n\t${1:TARGET}\n\\end{itshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{itshape} \\itshape": true,
        "itshape": true
      }
    },
    "b1a25a05-1cbe-37ee-8520-fcc0152d7307": {
      "content": "@return ${0:param}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@re": true
      }
    },
    "b1a2af85-8c95-3daa-a651-7533a1d74c5f": {
      "content": "errors.Wrap(${1:err}, \"${2:message}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "errors.Wrap",
      "matches": {
        "ew": true
      }
    },
    "b1a3a497-ccc8-3e09-889d-0fe1e1b67c54": {
      "content": "export { ${2:second} as ${3:third} } from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportAs",
      "matches": {
        "exa": true
      }
    },
    "b1a57f76-36bd-3882-a9ee-3f8996a224c2": {
      "content": "<address>\n$1\n</address>",
      "doc": "HTML - Defines an address element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "address",
      "matches": {
        "address": true
      }
    },
    "b1ad4021-e7a3-3fff-b8f7-ff47085459cf": {
      "content": "text-height ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "b1aea92f-ca39-3a4a-85a3-0fc27c86087c": {
      "content": "from django.urls import ${1|reverse,reverse_lazy,resolve,get_script_prefix|}",
      "doc": "Utility functions for use in URLconfs.",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "urls (≥1.10 & ≤1.11)",
      "matches": {
        "iurls": true
      }
    },
    "b1af76da-7342-339b-99d0-f5b118265cc3": {
      "content": "font-effect: emboss",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eb": true
      }
    },
    "b1b14ca0-c930-38a9-943c-3f5925bc4479": {
      "content": "textSize(${0:size});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textSize": true
      }
    },
    "b1b2ddb0-e222-3ff6-892b-a5d71c304cc6": {
      "content": "switch ${1:object}\ncase ${2:value}\n\t${3}\ndefault void",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      }
    },
    "b1bda9bf-b355-365c-933f-a3f488033030": {
      "content": "mixed.meta()",
      "doc": "mixed.meta(metadata: object): Schema\n\nAdds to a metadata object, useful for storing data with a schema, that doesn't belong\nthe cast object itself.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-meta",
      "matches": {
        "yup mixed meta": true
      }
    },
    "b1bffb3d-09c1-3359-b2cc-f4cc36535ccd": {
      "content": "float32",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float32",
      "matches": {
        "f3": true
      }
    },
    "b1c9b2e2-9cc5-3bfd-bef7-2f7aa60cc80b": {
      "content": "[${1:link}](mailto:${2:email})${3}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[@": true
      }
    },
    "b1cff1f8-19d4-32e3-993f-dc7d7d5360ce": {
      "content": "_.size(${collection})",
      "doc": "_.size([1, 2, 3]);\n// => 3\n\n_.size({ 'a': 1, 'b': 2 });\n// => 2\n\n_.size('pebbles');\n// => 7\n\nGets the size of `collection` by returning its length for array-like\nvalues or the number of own enumerable string keyed properties for objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-size",
      "matches": {
        "lodash size": true
      }
    },
    "b1d32ae4-9b13-3006-a69e-41057342cf7b": {
      "content": "else if ${1:#:condition}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "b1d51386-51cc-30ac-b25e-9aadf239477b": {
      "content": "?assertError(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aserr": true
      }
    },
    "b1dc193f-a707-3fbf-9269-155004a4e106": {
      "content": "@property\ndef ${1:foo}(self) -> ${2:type}:\n\t\"\"\"${3:doc}\"\"\"\n\treturn self._$1\n\n@$1.setter\ndef $1(self, value: $2):\n\tself._$1 = value",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "property": true
      }
    },
    "b1dc27e1-88f3-39c5-b517-65d2c9b32cb2": {
      "content": "@extends('${1}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@extends",
      "matches": {
        "ext": true
      }
    },
    "b1dd595e-42aa-35bb-a4ee-03d72c9504bf": {
      "content": "@book{${1:name},\n\tauthor={${2:author}},\n\ttitle={${3:title}},\n\tsubtitle={${4:subtitle}},\n\tyear={${5:YYYY}},\n\tlocation={${6:somewhere}},\n\tpublisher={${7:publisher}},\n\tpages={${8:NN}--${9:NN}}\n}\n$0",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "Book reference",
      "matches": {
        "book": true
      }
    },
    "b1e0b3c1-a2a2-3b9b-910c-ac6b3dc7b8f5": {
      "content": "${1:FIELDNAME} = models.DateTimeField($2, auto_now=${3:False}, auto_now_add=${4:False})",
      "doc": "DateTimeField (mdatetime).\n\nA date, represented in Python by a datetime.datetime instance.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mdatetime",
      "matches": {
        "mdatetime": true
      }
    },
    "b1e25301-83ad-3a21-9655-e66981933b65": {
      "content": "throw new Error('${1:error message}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "terr": true
      }
    },
    "b1ec8a7a-5c99-3f9f-92bb-424ea874e052": {
      "content": "Vue.config.errorHandler = function (err, vm, info) {\n\t${1:// handle error}\n}",
      "doc": "Vue.config.errorHandler",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "errorHandler",
      "matches": {
        "VueConfigErrorHandler": true
      }
    },
    "b1ed899d-b1f9-3c0d-bba8-abdc8633a121": {
      "content": "always @(posedge ${1:clk} iff !${2:rst} or posedge $2) begin\n    if (${2}) begin\n        ${3:TARGET}\n    end else begin\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_ff @()",
      "matches": {
        "alf": true
      }
    },
    "b1ee745b-f861-3fe4-b984-cf64d49d22a2": {
      "content": "where(${1:field}: ${0:value})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wf": true
      }
    },
    "b1f26090-8a8c-3138-b2ba-9bfc719ddae0": {
      "content": "my ${1:$var} = \"${2:filename}\".IO.slurp;",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slurp": true
      }
    },
    "b1f6e4ef-e233-33f7-93c3-f985b28dd131": {
      "content": "v-if=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-if",
      "matches": {
        "vif": true,
        "vue v-if": true
      }
    },
    "b1fc43eb-c8c4-3b90-9c6e-10d936db1c6b": {
      "content": "Url:autolink('${1:string}');",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_autolink": true
      }
    },
    "b1fc4c26-67b6-3137-b302-cb9f80945582": {
      "content": "import VueRouter from 'vue-router'",
      "doc": "import VueRouter from 'vue-router'",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "importVueRouter",
      "matches": {
        "importVueRouter": true
      }
    },
    "b1fc8654-7ef9-3fa0-945e-5cb45585ff16": {
      "content": "borderBottomRightRadius: ${1},",
      "doc": "borderBottomRightRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderBottomRightRadius",
      "matches": {
        "bor": true
      }
    },
    "b20122a2-7744-348c-8eca-01fba84eb3d0": {
      "content": "expect(${1:target}).not.toThrow(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to throw (js)",
      "matches": {
        "notth": true
      }
    },
    "b2034544-68af-3b0d-995c-d026d3b161d6": {
      "content": "border-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbk": true
      }
    },
    "b204efe4-d6eb-3d65-b1b6-c1ca5e6a2af6": {
      "content": "scope(success) ${1}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scs": true
      }
    },
    "b2084d66-69da-3946-b74a-f8c946e6fc19": {
      "content": "must_be_same_as ${0:other}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbsa": true
      }
    },
    "b20d8387-31b3-3d1f-a629-ea12aa7ee357": {
      "content": "-moz-border-image: url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${7:stretch};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m+": true
      }
    },
    "b2137c93-1d80-34ff-991f-a191115b0858": {
      "content": "try {\n\t$1\n} catch (${2:Exception} ${3:e}) {\n\t$4//${0:TODO}: handle exception\n}",
      "doc": "try/catch block",
      "filetype": "java",
      "grammar": "lsp",
      "label": "trycatch",
      "matches": {
        "try_catch": true
      }
    },
    "b214cda0-9163-3afd-96b3-9e1ad27703fb": {
      "content": "display: '${1:none}',",
      "doc": "display",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "display",
      "matches": {
        "di": true
      }
    },
    "b21a9d92-075a-341a-8a6a-a0355d50e727": {
      "content": "_.values(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.values(new Foo);\n// => [1, 2] (iteration order is not guaranteed)\n\n_.values('hi');\n// => ['h', 'i']\n\nCreates an array of the own enumerable string keyed property values of `object`.\n\n**Note:** Non-object values are coerced to objects.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-values",
      "matches": {
        "lodash values": true
      }
    },
    "b2219ba8-387f-3b01-ad66-0c98b6c4495b": {
      "content": "BEGIN {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      }
    },
    "b22837cd-a267-3a55-a833-3f67849dd137": {
      "content": "reinterpret_cast<${1:unsigned}>(${2:expr})${3}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rca": true
      }
    },
    "b22ef6af-ea83-3e6d-b2a3-34538b404c96": {
      "content": "do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert do … end block",
      "matches": {
        "do": true
      }
    },
    "b232f29b-3f77-36d2-a5d5-dbff26b01c9d": {
      "content": "echo CHtml::linkButton('${1:lable}',array('${2:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlinkb": true
      }
    },
    "b2396edf-a245-33d8-ab99-4b017d0ab925": {
      "content": "Wait Until Page Does Not Contain    ${1:${text}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Does Not Contain",
      "matches": {
        "wupdnc": true
      }
    },
    "b23ed17a-75b6-380f-a8d2-945152a6e18b": {
      "content": "justify-items: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji:st": true
      }
    },
    "b24349ee-1190-314a-bfb4-7cc38f6f3d0d": {
      "content": "<!--\nvim: filetype=mediawiki\n-->",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ft": true
      }
    },
    "b24364bb-6033-3d0e-87b3-dea82004ca42": {
      "content": "public set ${1:value}(v : ${2:string}) {\n\tthis.$3 = v;\n}",
      "doc": "Property setter",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Property setter",
      "matches": {
        "set": true
      }
    },
    "b24706ea-9751-3557-82e1-04d6f425e8a1": {
      "content": "render file: \"${1:filepath}\", use_full_path: ${2:false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (file,use_full_path) (rfu)",
      "matches": {
        "rfu": true
      }
    },
    "b24823c7-7516-3437-9b18-7a2ee7666da6": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tconstructor() {}\n\n\tintercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\t\tconst headers = req.headers\n\t\t\t.set('Content-Type', 'application/json');\n\t\tconst authReq = req.clone({ headers });\n\t\treturn next.handle(authReq);\n\t}\n}",
      "doc": "Angular HttpInterceptor for headers HttpClient",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular HttpInterceptor for Headers",
      "matches": {
        "a-http-interceptor-headers": true
      }
    },
    "b24f0ebc-e1e0-3a61-bec2-f4b518156dca": {
      "content": "place-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      }
    },
    "b2511141-dc36-316b-a813-345893781d6f": {
      "content": "seq(${1:from}, ${2:to}, ${3:by})",
      "doc": "Sequence (from,to,by)",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "seq",
      "matches": {
        "seq": true
      }
    },
    "b263c228-5fa4-35df-a86f-4937b5759a71": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:e}) {\n\t${2:/* handle error */}\n} finally {\n\t${3:/* be executed regardless of the try / catch result*/}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "try { ... } catch(e) { ... } finally { ... }",
      "matches": {
        "tryf": true
      }
    },
    "b26593e6-cd47-3394-900e-ddfdf5b56a82": {
      "content": "const [${1:val}, set${2:setterName}] = useState(${3:defVal})",
      "doc": "use state hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useState",
      "matches": {
        "us": true
      }
    },
    "b26a2e04-f686-3354-9693-38d84b2e4814": {
      "content": "<source src=\"$1\" type=\"$2\">$3",
      "doc": "HTML - Defines media resource",
      "filetype": "html",
      "grammar": "lsp",
      "label": "source",
      "matches": {
        "source": true
      }
    },
    "b26d8340-5412-343a-b8ff-95fb32eeb39c": {
      "content": "reverse_each { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reve": true
      }
    },
    "b26ed477-64d6-3b6a-b595-d47bafbb9f17": {
      "content": "for ${1:target_list} in ${2:expression_list}:\n\t${3:pass}\nelse:\n\t${4:pass}",
      "doc": "Code snippet for a for loop with else",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for/else",
      "matches": {
        "for/else": true
      }
    },
    "b27b3e14-69b2-3036-97f1-1cc2e1d37568": {
      "content": "function${1:# nbit} ${1:func_name};\n    ${2:portlist};\n    begin\n        ${0:TARGET};\n    end\nendfunction",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "function ... endfunction",
      "matches": {
        "func": true,
        "function": true
      }
    },
    "b28a62a6-07f4-3ed3-9f5f-da508095b02f": {
      "content": "require(${1:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "require",
      "matches": {
        "req": true
      }
    },
    "b297a764-c2b7-3473-9661-ae94f77603d9": {
      "content": "test('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test",
      "matches": {
        "jest test": true,
        "test": true
      }
    },
    "b29c34f4-1fe0-3cfc-a0c0-04a24a673eef": {
      "content": "else if (${1:true}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "b2a69795-7658-3d1e-b193-2966fa8b9860": {
      "content": "{\n\t\"name\": \"Launch Angular\",\n\t\"type\": \"${1:chrome}\",\n\t\"request\": \"launch\",\n\t\"preLaunchTask\": \"${2:npm: start}\",\n\t\"url\": \"http://localhost:${3:4200}/\",\n\t\"webRoot\": \"${4:\\${workspaceFolder\\}}\"\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create launch config for Chrome",
      "matches": {
        "a-launch-chrome": true
      }
    },
    "b2a9d3c2-0f9b-3ec1-8e0e-404018611edc": {
      "content": "printAsBitmapNum(${1:#:level}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bn": true
      }
    },
    "b2af7bed-02a1-32cf-a70d-ef62ce0fd5a7": {
      "content": "#+BEGIN_${1:LANG} ${2:options}\n$0\n#+END_$1",
      "doc": "code",
      "filetype": "org",
      "grammar": "lsp",
      "label": "code",
      "matches": {
        "code": true
      }
    },
    "b2af9c27-9869-355f-98da-e539ab217773": {
      "content": "${1:public} int ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      }
    },
    "b2b3f294-84cc-3526-bbb1-a18eeccecd4f": {
      "content": "Object.assign({}, ${1:original}, ${2:source})",
      "doc": "Object.assign copy (shallow clone)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "object-assign-copy-shallow-clone-",
      "matches": {
        "base object assign copy": true
      }
    },
    "b2b4e545-917b-3896-9934-d22eb271804c": {
      "content": "attribute",
      "doc": "The qualifier attribute is used to declare variables that are shared between a vertex shader and the OpenGL ES environment.\nSince the vertex shader is executed one time for each vertex attributes are used to specify per vertex data. They typically provide data such as the object space position, the normal direction and the texture coordinates of a vertex. Attributes are read-only variables, i.e. their value can not be changed in the vertex shader.\nSide note: Since an attribute is never initialized in the shader it has to be loaded with data by the application executing the shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "attribute",
      "matches": {
        "attribute": true
      }
    },
    "b2bf9d5a-2244-351b-8904-202cf824dd1b": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) {\n\t\tstate.${2:value} = ${3:payload};\n\t}\n}",
      "doc": "vuex mutation",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Mutation",
      "matches": {
        "vmutation": true
      }
    },
    "b2cc5e4f-e2b0-30d2-98aa-06d3789ac90b": {
      "content": "CFLAGS=-Wall -g ${0: -llua -lzeromq}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "CFLAGS": true
      }
    },
    "b2d4116d-d50e-33e6-88b9-83bc6b141234": {
      "content": "call(${1:#:frame});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      }
    },
    "b2e24f6c-7acd-34a4-8462-9ffe1d0fe36b": {
      "content": "componentDidMount() {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      }
    },
    "b2e3c065-0d88-3ecb-8a98-086cf5619d89": {
      "content": "for(${1:auto} ${2:var} : ${3:collection_to_loop})\n{\n\t$0\n}",
      "doc": "Code snippet for range-based for loop (c++11) statement",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "foreach",
      "matches": {
        "foreach": true
      }
    },
    "b2e425d4-4dbb-3bcf-b057-d86f6a1857e0": {
      "content": "extlookup(\"${1:variable}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Simple extlookup",
      "matches": {
        "extlookup": true
      }
    },
    "b2e5d3e7-d130-3839-8fad-b4a9772f94e5": {
      "content": "font-weight: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      }
    },
    "b2e9569d-0a1c-3f10-8602-4bec4f7e89df": {
      "content": "{${1} for ${2} in ${3:${VISUAL}}}${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "set comprehension",
      "matches": {
        "scp": true
      }
    },
    "b2ea9c0f-529e-3333-bf9a-6573ceb7d2b0": {
      "content": "place-content: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      }
    },
    "b2ebe2ba-d894-316c-b5a7-7c78dc0fce5b": {
      "content": "switch ${1:#:object}\n  when ${2:#:value}\n    ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      }
    },
    "b2ee2413-94f5-3393-bd0d-d4038338bd52": {
      "content": "static dispatch_once_t onceToken;\ndispatch_once(&onceToken, ^{\n\t${1:code to be executed once}\n});",
      "doc": "Create a dispatch_once",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch once snip",
      "matches": {
        "dispatchoncesnip": true
      }
    },
    "b2efcb4f-a46e-3ef7-a94d-fec973dea218": {
      "content": "ListView.separated(\n  itemCount: ${1:1},\n  separatorBuilder: (BuildContext context, int index) {\n  return ${2:};\n },\n  itemBuilder: (BuildContext context, int index) {\n  return ${3:};\n },\n),",
      "doc": "Creates a fixed-length scrollable linear array of list 'items' separated by list item 'separators'.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "ListView.Separated",
      "matches": {
        "listViewS": true
      }
    },
    "b2f015e0-dd6b-39f6-97a9-707ba4a76735": {
      "content": "paddingLeft: ${1},",
      "doc": "paddingLeft",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingLeft",
      "matches": {
        "padding": true
      }
    },
    "b2ff56f3-42d5-38eb-abf1-6174587bc7ad": {
      "content": "{% import ${0:module} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import": true
      }
    },
    "b3058da9-9f8f-399b-9ace-b6e40c6d1747": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} else {\n\t${3:#:code...}\n}\n${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse": true
      }
    },
    "b30853f0-1589-3e88-82a9-07e5701b7a4d": {
      "content": "| lstrip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lstrip": true
      }
    },
    "b315522c-c34d-37b0-95a1-afe2e2b42441": {
      "content": "<bdo dir=\"$1\">\n$2\n</bdo>",
      "doc": "HTML - Defines the direction of text display",
      "filetype": "html",
      "grammar": "lsp",
      "label": "bdo",
      "matches": {
        "bdo": true
      }
    },
    "b317f12a-f6b2-3ff6-bbb0-be255858eaf6": {
      "content": "PropTypes.shape({\n\t$0\n}).isRequired,",
      "doc": "An object taking on a particular shape required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeShapeRequired",
      "matches": {
        "ptshr": true
      }
    },
    "b31ed25b-8d26-341e-92e8-517107691ee2": {
      "content": "foreach(${1:item} ${2:items})\n\t${3}\nendforeach($1)",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "foreach() endforeach()",
      "matches": {
        "foreach": true
      }
    },
    "b326cec5-d206-3c4e-8604-acbbd322c8ee": {
      "content": "$.dequeue('${1:selector expression}'${2:, 'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deqq": true
      }
    },
    "b3270a77-8bcf-39ae-9ba5-67914b58a15a": {
      "content": "{\n\t block : '${1:name}',\n\t content: '${2:content}'\n}",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "btc": true
      }
    },
    "b32789cc-4684-3597-a19b-d34f54324137": {
      "content": "(*) -> $1",
      "doc": "Model an initial starting point for the activity diagram",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Initial State activity",
      "matches": {
        "init-state": true
      }
    },
    "b327aec0-2c38-3767-8e6e-15b9413526d1": {
      "content": "_.functionsIn(${object})",
      "doc": "function Foo() {\n  this.a = _.constant('a');\n  this.b = _.constant('b');\n}\n\nFoo.prototype.c = _.constant('c');\n\n_.functionsIn(new Foo);\n// => ['a', 'b', 'c']\n\nCreates an array of function property names from own and inherited\nenumerable properties of `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-functionsin",
      "matches": {
        "lodash functionsin": true
      }
    },
    "b32b0464-101a-3ef0-9a5b-13249b4260b5": {
      "content": "begin\n\t${0}\nrescue ${1:StandardError} => ${2:e}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beg": true
      }
    },
    "b32be2af-05ea-3309-93a6-ee25f1c48eb4": {
      "content": "after_validation_on_create $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation_on_create",
      "matches": {
        "aftvoc": true
      }
    },
    "b33113b1-07aa-342e-bf83-8b4cf78c0b2e": {
      "content": "va_list ${1:ap};\nva_start($1, ${2:LAST_ARG});\n${0}\nva_end($1);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "va_start(va_list, last_arg); ... ; va_end()",
      "matches": {
        "va_list": true
      }
    },
    "b33174c0-41f7-3f35-befe-c910ad3cc140": {
      "content": "| truncate: ${1:20}, '${2:...}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncate": true
      }
    },
    "b331ff2a-674e-362b-b64e-c1296cf09e4f": {
      "content": "from celery.contrib import rdb; rdb.set_trace()$0",
      "doc": "Code snippet for celery remote debugger breakpoint",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "Celery set trace",
      "matches": {
        "rdb": true
      }
    },
    "b33808bf-089b-34d4-beb6-bdd1c4d31ef4": {
      "content": "switch ${1:value} {\n| ${2:pattern1} => ${3:expression}\n${4:| ${5:pattern2} => ${6:expression}}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Switch",
      "matches": {
        "switch": true
      }
    },
    "b33a40f6-cb98-3805-b77a-c179e6498ce7": {
      "content": "(\\\\${1:_} => ${0})",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "Lambda function (\\x => ...)",
      "matches": {
        "\\": true
      }
    },
    "b33afa2d-4125-382a-adca-ffc8fcd8fdf4": {
      "content": ".. important:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "important",
      "matches": {
        "important": true
      }
    },
    "b33e422a-79ab-3ab6-bd9d-eace7de76da1": {
      "content": "${1:obj}.animate({${2:param1: value1, param2: value2}}, ${3:speed})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "animate": true
      }
    },
    "b343de58-c493-37b2-875b-45fe169bfe1c": {
      "content": "if !defined(${1:Resource}[\"${2:name}\"]) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnd": true
      }
    },
    "b344fa15-9c04-3996-9852-2340cf81c5b6": {
      "content": "each do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ead": true
      }
    },
    "b35f5cb6-c52c-3d55-88b0-fc1b882667a9": {
      "content": "${1:FIELDNAME} = forms.EmailField($2, required=${3:False})",
      "doc": "EmailField (femail)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "femail",
      "matches": {
        "femail": true
      }
    },
    "b360e4ce-9633-3762-828f-b79a549002da": {
      "content": "text-indent -9999px",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      }
    },
    "b363546f-5a4f-349b-9387-e4453ab137c3": {
      "content": "position: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:f": true
      }
    },
    "b367e365-8c28-3a47-addc-afb84edec173": {
      "content": ".. warning:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "warning",
      "matches": {
        "warning": true
      }
    },
    "b367f323-0499-37c8-b0d4-807bb95888aa": {
      "content": "while ${1}\n\t${0}\nend",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "while",
      "matches": {
        "wh": true
      }
    },
    "b370f060-5c41-3b5f-abe8-d2a3abd44b52": {
      "content": "if(${1:/*condition*/})\n{\n\t$2\n}\nelse\n{\n\t${3:/*else*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "if .. else (ife)",
      "matches": {
        "ife": true
      }
    },
    "b374a8ba-a3df-3444-9838-c9fb87c6b0a7": {
      "content": "border-bottom-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:n": true
      }
    },
    "b377cba3-141f-38c8-8917-f8e762bcbd44": {
      "content": "program ${1:main}\n\t${2}\nend program $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "program",
      "matches": {
        "pr": true
      }
    },
    "b3790557-2227-39c7-ba81-b52684a35c64": {
      "content": "if ($1)\n{\n\t$0\n}",
      "doc": "Code snippet for if statement",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "b37ae319-477f-349d-bbee-c917dcd94733": {
      "content": "before_save $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "before_save",
      "matches": {
        "befs": true
      }
    },
    "b37bf42d-35ab-399c-997a-cc65ecba2b18": {
      "content": "destroyed() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "destroyed",
      "matches": {
        "destroyed": true
      }
    },
    "b384aa0a-fb86-32b6-a260-e95bf65457ec": {
      "content": "justify-content space-between",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sb": true
      }
    },
    "b38cd08c-ce80-3123-a1dc-fe98f8749de7": {
      "content": "std::array<${1:T}, ${2:N}> ${3};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "b38ef153-39f7-3f96-b0a9-a57f8888d347": {
      "content": "for each (${1:var} in ${2:object}){\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "enumerate values",
      "matches": {
        "for": true
      }
    },
    "b3928267-adaf-3c50-83a9-41dd929c048a": {
      "content": "enter-active-class='$1'$0",
      "doc": "enter-active-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "enter-active-class",
      "matches": {
        "enterActiveClass": true
      }
    },
    "b39edf1e-6167-344c-8b3a-1dbfec510275": {
      "content": "default:\n\t${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "b3a8bd08-6559-3bbd-aaa6-727b3fb2eea2": {
      "content": "Serial.write();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "b3aa7b10-d8ad-3ed7-808f-e5b76080da45": {
      "content": "shorten(${0:array});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shorten": true
      }
    },
    "b3ac03f0-fd3d-3b65-a366-39658a56e241": {
      "content": "partial:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "partial:",
      "matches": {
        "partial": true
      }
    },
    "b3ac8982-e159-3314-a312-fdefa0c97a08": {
      "content": "registerModule",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "registerModule",
      "matches": {
        "registerModule": true
      }
    },
    "b3ba1dab-cc91-34d4-a572-4202b7ec3d61": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name:  ${1:myjob}\n  namespace: ${2:default}\n  labels:\n    app:  ${1:myjob}\nspec:\n  selector:\n    matchLabels:\n      app: ${1:myjob}\n  replicas: 1\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      labels:\n        app:  ${1:myjob}\n    spec:\n      # initContainers:\n        # Init containers are exactly like regular containers, except:\n          # - Init containers always run to completion.\n          # - Each init container must complete successfully before the next one starts.\n      containers:\n      - name:  ${1:myjob}\n        image:  ${3:myjob:latest}\n        imagePullPolicy: ${4|IfNotPresent,Always,Never|}\n        resources:\n          requests:\n            cpu: 100m\n            memory: 100Mi\n          limits:\n            cpu: 100m\n            memory: 100Mi\n        livenessProbe:\n          tcpSocket:\n            port: ${5:80}\n          initialDelaySeconds: 5\n          timeoutSeconds: 5\n          successThreshold: 1\n          failureThreshold: 3\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /_status/healthz\n            port: ${5:80}\n          initialDelaySeconds: 5\n          timeoutSeconds: 2\n          successThreshold: 1\n          failureThreshold: 3\n          periodSeconds: 10\n        env:\n        - name: DB_HOST\n          valueFrom:\n            configMapKeyRef:\n              name: ${1:myjob}\n              key: DB_HOST\n        ports:\n        - containerPort:  ${5:80}\n          name:  ${1:myjob}\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n      volumes:\n        - name: localtime\n          hostPath:\n            path: /usr/share/zoneinfo/Asia/Taipei\n      restartPolicy: Always\n---\n$0",
      "doc": "k8s Deployment",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Deployment",
      "matches": {
        "k-deploymment": true
      }
    },
    "b3bb9d92-be96-357c-9f6a-205c5e3fea9d": {
      "content": "Result<${1:#:~str}, ${2:#:()}>${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Result<A, B>",
      "matches": {
        "res": true
      }
    },
    "b3ca72f5-aa5f-33d3-a501-6c6a63bd4a53": {
      "content": "<svelte:body />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-body",
      "matches": {
        "svb": true,
        "svelte body": true
      }
    },
    "b3d0d2a9-31e1-3ba1-b9fe-ec9d0128012b": {
      "content": "try:\n\t${1:pass}\nexcept ${2:#:ExceptionClass}:\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "try: ... except ...: ...",
      "matches": {
        "tryexcept": true
      }
    },
    "b3d1f4d4-e58a-3ea0-a0e3-3e3a6f47019e": {
      "content": "background-repeat repeat-x",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      }
    },
    "b3e56359-dad8-33d9-9a3c-747d793b3a1f": {
      "content": "has_many :${1:object}, through: :${0:object}",
      "doc": "has_many through association",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Has many through",
      "matches": {
        "hmt": true
      }
    },
    "b3eb5a49-575d-3f82-88f3-999f8b662aed": {
      "content": "border-bottom-right-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      }
    },
    "b3ed1448-94a5-3893-a5ed-b13b33d350c5": {
      "content": "# SCM Resource, Chef::Provider::Subversion\nsvn ${1:\"/destination/path\"} do # Path to clone/checkout/export the source to\n\t${2:#}repository ${3} # URI of the repository\n\t${4:#}revision ${5:\"HEAD\"} # revision to checkout. can be symbolic, like \"HEAD\" or an SCM specific revision id\n\t${6:#}reference ${7} # (Git only) alias for revision\n\t${8:#}user ${9:nil} # System user to own the checked out code\n\t${10:#}group ${11:nil} # System group to own the checked out code\n\t${12:#}svn_username ${13} # (Subversion only) Username for Subversion operations\n\t${14:#}svn_password ${15} # (Subversion only) Password for Subversion operations\n\t${16:#}svn_arguments ${17} # (Subversion only) Extra arguments passed to the subversion command\n\n\t${18:#}${19:action :sync} # Update the source to the specified revision, or get a new checkout (Default)\n\t${20:#}${21:action :checkout} # Checkout the source. Does nothing if a checkout is available\n\t${22:#}${0:action :export} # Export the source, excluding or removing any version control artifacts\nend",
      "doc": "",
      "filetype": "chef",
      "grammar": "snu",
      "label": "",
      "matches": {
        "svn": true
      }
    },
    "b3fcad05-f7a6-3e8e-b90f-92f5476ba0c5": {
      "content": "<Link to=\"${1:/blog}\">${2:Text}</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link",
      "matches": {
        "gatsby link": true
      }
    },
    "b3fe659c-375c-324f-b9d5-ca2be8735b5a": {
      "content": "display inline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      }
    },
    "b3fefad2-4c9c-332a-9fb9-f904e1672e38": {
      "content": "v-if=\"${1:condition}\"",
      "doc": "Expects: any",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-if",
      "matches": {
        "vIf": true
      }
    },
    "b405f3b9-4d9c-3c55-a354-898ff823097b": {
      "content": "link:${1:/example.pdf}[${2:Text}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "Relative link",
      "matches": {
        "linkrel": true
      }
    },
    "b4075e17-425f-3607-a6b3-0029cb401ad9": {
      "content": "position relative",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:r": true
      }
    },
    "b40a43ec-7600-3459-9db8-6fa3240724cb": {
      "content": "#lang typed/racket",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#tr": true
      }
    },
    "b40b6ee9-b4cd-3600-99db-919bc0a47383": {
      "content": "if ${1:condition}:\n\t${2:pass}$0",
      "doc": "Code snippet for the if statement.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "b40f0a8e-7d83-316a-bd87-ec9ad3c6688c": {
      "content": "truncatewords_html:${0}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      }
    },
    "b40f23b9-d91d-3172-9523-0b109c58a5d5": {
      "content": "for (${1:i} = ${2}; $1 < ${3}; ${4:$1 = $1 + 1})${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "for () begin ... end",
      "matches": {
        "for": true
      }
    },
    "b414b048-d867-3c51-8caa-e96db69466c6": {
      "content": "LOGGER.warning(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lw": true
      }
    },
    "b4253b12-e8ed-36d7-b9e4-b6958ee43005": {
      "content": "loess(${1:yCol} ~ {2:xCol}, data = ${3:data}, subset = ${4:subset}, weights = ${5:weights}, span = ${6:span},\ndegree = ${7:degree}, na.action = {8:na.action})",
      "doc": "Local polynomial regression",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "loess",
      "matches": {
        "loess": true
      }
    },
    "b426bc15-1837-3014-aeb4-1003bf94ff4e": {
      "content": "position: static",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:s": true
      }
    },
    "b432928a-7fd3-330b-b348-2fc46301a038": {
      "content": "{% javascript %}\n\t$4\n{% endjavascript %}",
      "doc": "Javascript tag: javascript",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag javascript",
      "matches": {
        "javascript": true
      }
    },
    "b439cc15-4011-319f-892e-e454d710bdd9": {
      "content": ":before",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":b": true
      }
    },
    "b43ceb8c-4d33-3856-bfb3-a331d6f9469d": {
      "content": "$1:\n  name: ${1:value_key}\n  image:\n\trepository:\n\ttag:\n\tpullPolicy: IfNotPresent\n  hostNetwork: false\n  dnsPolicy: ClusterFirst\n  daemonset:\n\tuseHostPort: false\n  podLabels: {}\n  scope:\n\tenabled: false\n\tnamespace: \"\"   # defaults to .Release.Namespace\n  extraArgs: {}\n  extraEnvs: []\n  kind: Deployment\n  updateStrategy: {}\n  minReadySeconds: 0\n  tolerations: []\n  affinity: {}\n  nodeSelector: {}\n  podAnnotations: {}\n  replicaCount: 1\n  minAvailable: 1\n  resources: {}\n  autoscaling:\n\tenabled: false\n  extraContainers: {}\n  extraVolumeMounts: {}\n  extraVolumes: {}\n  extraInitContainers: []\n  lifecycle: {}\nrevisionHistoryLimit: 10\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_values": true
      }
    },
    "b43df853-e400-391e-9810-e7901c1b1ed4": {
      "content": "overflow: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "overflow: hidden",
      "matches": {
        "ovh": true
      }
    },
    "b43ead7c-6bb2-3d5d-a126-7155e918beaf": {
      "content": "$.proxy(${1:function}, ${2:this})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      }
    },
    "b43fbc6f-362c-3030-94f9-1030ed90882f": {
      "content": "const (\n\t${1:NAME} ${2:Type} = ${3:value}\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... )",
      "matches": {
        "cons": true
      }
    },
    "b45513aa-1059-3301-9606-d69de4cb1ecc": {
      "content": "mod ${1:name} {\n    ${2:// add code here}\n}",
      "doc": "mod … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "mod-block",
      "matches": {
        "mod-block": true
      }
    },
    "b457661e-95c4-3e3f-8043-30eced0cf111": {
      "content": "% while ${1:}:\n\t${0:}\n% endwhile",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "b45a2b54-69d1-3017-9703-b01a19c46e55": {
      "content": "display: '${1:none}',",
      "doc": "display",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "display",
      "matches": {
        "di": true
      }
    },
    "b45ffc41-a37d-343f-be7a-f175fdf8d27e": {
      "content": "assert_match(/${1:expected_pattern}/, ${2:actual_string})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      }
    },
    "b46982ed-8751-37c2-ba89-5e5fc223852a": {
      "content": "max-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true,
        "max-width": true
      }
    },
    "b46ba520-9ab2-3dc5-a0cf-34a091e94c91": {
      "content": "{\n\t\"type\": \"url\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema url dropdown",
      "matches": {
        "_url": true
      }
    },
    "b47f784c-5dc7-3301-ad21-e3f9862a7c8c": {
      "content": "if (${1:condition}) ${2:value}",
      "doc": "Snippet for if expression",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "b483f566-6a06-3be7-8717-1a6801ecc7eb": {
      "content": "| replace: '${1:target}', '${2:replace}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "replace": true
      }
    },
    "b484fb9a-a2a8-3748-a33a-5aba4f856d9b": {
      "content": "outline-offset: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      }
    },
    "b48c59dd-ff11-3890-bd13-b5a92da52bca": {
      "content": "componentWillReceiveProps(nextProps) {\n\t$0\n}",
      "doc": "Invoked when a component is receiving new props. This method is not called for the initial render. [DEPRECATION NOTE]: This method is deprecated in React 16.3",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      }
    },
    "b4901f94-bb2c-3836-a0cb-a8301b9c2341": {
      "content": "*>> <summary>${1:XX is a method in the YY class.}\n*>> <para>${2}</para>\n*>> $0\n*>> </summary>",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "*>> <summary",
      "matches": {
        "*>> <summary": true
      }
    },
    "b492f796-2d7f-3669-8cee-27425d850e4a": {
      "content": "chan ${1:type}",
      "doc": "Snippet for a channel",
      "filetype": "go",
      "grammar": "lsp",
      "label": "channel declaration",
      "matches": {
        "ch": true
      }
    },
    "b493c355-d4d0-357b-9484-43caa5bca559": {
      "content": "const ${1:scale} = useMotionValue(${2:1})",
      "doc": "useMotionValue()\nCreates a MotionValue to track the state and velocity of a value.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-motion-value",
      "matches": {
        "framer-motion use-motion-value": true,
        "use-motion-value": true
      }
    },
    "b4955d08-5550-3881-b8f8-2b7825c18a24": {
      "content": "// ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "b498d272-09c6-31d2-9c0c-f23def40ad90": {
      "content": "organization = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "organization": true
      }
    },
    "b49a97ea-6e17-3280-aff8-585ae93b5cfc": {
      "content": "grid-auto-rows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar": true
      }
    },
    "b49f6771-46f9-357e-aa0b-b3226d1b9411": {
      "content": "border-right-width: ${1:1}px",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-width: size (border)",
      "matches": {
        "border": true
      }
    },
    "b4a9c4e1-245e-3a78-9863-ae6f677d0389": {
      "content": "{\n\tpath: '${1:path}', \n\tcomponent: ${2:Component},\n\tchildren: [\n\t\t{ path: '${3:childpath}', component: ${4:ChildComponent} }\n\t]\n}$0",
      "doc": "Angular route path with children",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-route-path-with-children",
      "matches": {
        "a-route-path-with-children": true,
        "angular route path children": true
      }
    },
    "b4ab4021-9a20-3726-8bd9-8c9847708d38": {
      "content": "{< ${1:x} = ${2:y} >}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "object functional update",
      "matches": {
        "{{": true
      }
    },
    "b4ad8993-ba46-3cba-99a3-032358c1c20a": {
      "content": "@${1:param/return/private/public}  ${1:parameter}  ${0:description}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@": true
      }
    },
    "b4b44b2e-2a0f-3462-bab8-d7483572e9c3": {
      "content": "http.Error(${1:w}, ${2:err}.Error(), ${3:http.StatusInternalServerError})",
      "doc": "Snippet for http.Error()",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http.Error",
      "matches": {
        "herr": true
      }
    },
    "b4b64dcc-af01-3bf2-b4a8-73e81a832e6a": {
      "content": "DISPLAY \"$0\"",
      "doc": "DISPLAY literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "DISPLAY",
      "matches": {
        "DISPLAY": true
      }
    },
    "b4b68b1d-80ea-32fe-ba09-8ff9fd4a8951": {
      "content": "fmt.Println(\"${1}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println(...)",
      "matches": {
        "fn": true
      }
    },
    "b4bceab2-8b6c-34c0-96f6-43577a32f889": {
      "content": "AllowOverride ${1:#:AuthConfig} ${2:#:FileInfo} ${3:#:Indexes} ${4:#:Limit} ${5:#:Options}",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "allow": true
      }
    },
    "b4c43da8-1e6d-30b0-9191-8c0934ce243b": {
      "content": "it { should filter_param :${0:key} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfp": true
      }
    },
    "b4c8d988-8ffb-3628-b1af-bf5a96bf8dfc": {
      "content": "#+BEGIN_EXPORT html\n$0\n#+END_EXPORT",
      "doc": "#+BEGIN_EXPORT html block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "export html",
      "matches": {
        "<h": true
      }
    },
    "b4cacfe6-19ba-3c6a-880a-c4daa07832ec": {
      "content": "} else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      }
    },
    "b4cae2be-c7f4-3102-8ac8-0db1f1e5077b": {
      "content": "pure @safe nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psn": true
      }
    },
    "b4cb5a4b-6d90-3266-9235-578e8ddbe045": {
      "content": "${1:obj}.html('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      }
    },
    "b4cf288d-5b22-3db4-aa85-78d84fcfb0b2": {
      "content": "while (${1:true}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "b4d9add8-1ea9-37d3-a820-861d0bf0898f": {
      "content": "| ${1:Column1}  |\n|-------------- |\n| ${2:Item1}    |\n| ${3:Item2}    |\n| ${4:Item3}    |\n| ${5:Item4}    |\n${0}",
      "doc": "Insert table with 5 rows and 1 column. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 5x1 table",
      "matches": {
        "5x1table": true
      }
    },
    "b4dd7134-11a7-3732-9b09-97272811e4cb": {
      "content": "Debug.Assert(${1:true});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Debug.Assert",
      "matches": {
        "da": true
      }
    },
    "b4e10ce8-fbea-3ca4-9e15-cc6030ca2eda": {
      "content": "if ${1:condition} then\n\t${2:-- if condition}\nelse\n\t${0:-- else}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "b4e59959-be1c-31c6-b9cd-ce02bdc56952": {
      "content": "try:\n\t${1:pass}\nexcept ${2:expression} as ${3:identifier}:\n\t${4:pass}\nelse:\n\t${5:pass}\nfinally:\n\t${6:pass}",
      "doc": "Code snippet for a try/except/else/finally statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "try/except/else/finally",
      "matches": {
        "try/except/else/finally": true
      }
    },
    "b4eab382-fcc1-3b1a-a535-3b588179ad51": {
      "content": "it { should have_many(:${1}).through :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishmt": true
      }
    },
    "b4eb7e77-bb57-3f1e-8b5d-0fb9dce29506": {
      "content": "t.references :${1:taggable}, polymorphic: { default: '${2:Photo}' }\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcr": true
      }
    },
    "b4eccb93-8e75-3408-ae59-140c22ddfe67": {
      "content": "float: right",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      }
    },
    "b4ee242e-135f-3aba-8afc-a28aa547df86": {
      "content": "display: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "display: none",
      "matches": {
        "disn": true
      }
    },
    "b4efff14-057a-30d9-a31f-d5e4e4aacb00": {
      "content": "<|.. $1",
      "doc": "Arrow for object extends another object",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Dotted extension",
      "matches": {
        "dext": true
      }
    },
    "b4f1a8bc-5ee9-3c56-9397-60c9efc56ec8": {
      "content": "<%= render partial: '${1:item}', status: ${0:500} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rps": true
      }
    },
    "b4f42b7c-340b-3e9c-af2a-a2d93bf102eb": {
      "content": "text-replace ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr": true
      }
    },
    "b4f467d5-0945-3fa1-8280-7b5109bf8998": {
      "content": "_.over(${iteratees})",
      "doc": "var func = _.over([Math.max, Math.min]);\n\nfunc(1, 2, 3, 4);\n// => [4, 1]\n\nCreates a function that invokes `iteratees` with the arguments it receives\nand returns their results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-over",
      "matches": {
        "lodash over": true
      }
    },
    "b4f61a05-37b4-390f-8b18-27250ac5db87": {
      "content": "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}])$0",
      "doc": "React useMemo() hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useMemo",
      "matches": {
        "ume": true
      }
    },
    "b4f6b54e-61b6-364b-a963-8c701ca9cb31": {
      "content": "vertical-align: text-top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:tt": true
      }
    },
    "b4fc5146-1f18-3fe9-b419-2ce43b35e78b": {
      "content": "border-bottom-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs:n": true
      }
    },
    "b4fcbe6b-603f-395b-9e49-3f6acd6d61ab": {
      "content": "<bdo dir=\"ltr\">${0}</bdo>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdo:l": true
      }
    },
    "b5013efd-4fca-3c12-8130-dd476c0b5a00": {
      "content": "display: table-caption;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcp": true
      }
    },
    "b5059765-194a-30ab-bf09-cbff3530d394": {
      "content": "const ${1:first} = React.createContext()",
      "doc": "Create React context",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "createContext",
      "matches": {
        "rcontext": true
      }
    },
    "b5086379-b52d-3aa9-b188-bbb5f636ddc9": {
      "content": "_Static_assert(${1:#:condition}, ${2:#:message});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_Static_assert": true,
        "_static_assert": true
      }
    },
    "b50ab45b-7e0a-3df6-a734-1e2e8f28719e": {
      "content": "border-top-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      }
    },
    "b50b2d64-5bf4-32a5-a430-a7c44845f428": {
      "content": "afterEach(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "after each (js)",
      "matches": {
        "aft": true
      }
    },
    "b5102f24-ab7c-39d9-b6be-f752ba424814": {
      "content": "type ${1:msg}\n\t= ${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "b5121054-f284-3c0e-87ba-d7df57a0c3e2": {
      "content": "${1:public} bool ${2}(${3})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      }
    },
    "b51efd5b-4e72-33cf-8c3d-8f8b23395443": {
      "content": "{% ${1:tag_name} %}\n\t$2\n{% end$1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%%": true
      }
    },
    "b5228e3e-4051-32ca-afda-588f326bf58b": {
      "content": "overflow: ${1:visible/hidden/scroll/auto};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "overflow: type (overflow)",
      "matches": {
        "overflow": true
      }
    },
    "b522e568-2a3d-38b4-8b34-059bc8165959": {
      "content": "{% assign ${1:variable} = ${2:value} %}",
      "doc": "Variable tag: assign",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag assign",
      "matches": {
        "assign": true
      }
    },
    "b524abf7-270e-3827-9a27-eb97775b46b9": {
      "content": "border-top-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdts:n": true
      }
    },
    "b5270d36-c495-36ae-b006-d4551d6767c9": {
      "content": "import { Component, PropTypes } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t}\n\n\tcomponentWillMount () {\n\n\t}\n\n\tcomponentDidMount () {\n\n\t}\n\n\tcomponentWillReceiveProps (nextProps) {\n\n\t}\n\n\tshouldComponentUpdate (nextProps, nextState) {\n\n\t}\n\n\tcomponentWillUpdate (nextProps, nextState) {\n\n\t}\n\n\tcomponentDidUpdate (prevProps, prevState) {\n\n\t}\n\n\tcomponentWillUnmount () {\n\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n${1}.propTypes = {\n\n}\n\nexport default ${1}",
      "doc": "Creates a React component class with PropTypes and all lifecycle methods",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactClassCompomentWithMethods",
      "matches": {
        "rcfc": true
      }
    },
    "b53209ad-41f5-35cf-8e74-3738a47953a2": {
      "content": "filter!(${1:p})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "b53529ef-51ae-3aa1-b830-cea3f081a54c": {
      "content": "id=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "id": true
      }
    },
    "b536f4c4-0897-3a77-8485-d51c1af451ff": {
      "content": "{% static \"$1\" %}",
      "doc": "static tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "static",
      "matches": {
        "static": true
      }
    },
    "b5394895-9443-3c08-a69f-88ac609baefe": {
      "content": "public static void main(String[] args) {\n\t$0\n}",
      "doc": "Public static main method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "b53c2d21-688d-34b0-909a-3f3c34c191a8": {
      "content": "| rstrip }}",
      "doc": "String filter: rstrip",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter rstrip",
      "matches": {
        "rstrip": true
      }
    },
    "b53df12d-d2ff-342a-b072-6942f3a8df29": {
      "content": "FUNCTION CURRENT-DATE(${1:date-and-time-format})$0",
      "doc": "function current date and time as 21-character value",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-CURRENT-DATE",
      "matches": {
        "FUNCTION CURRENT-DATE": true
      }
    },
    "b54af893-9a00-3f05-a322-2aa48c78a785": {
      "content": "else {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "b54e23fa-28d8-3f32-9f12-f582a9b6853a": {
      "content": "[$1 for ${1:x} in ${2:#:list} if ${3:#:condition}]",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "[x for x in {list} if {condition}]",
      "matches": {
        "filter": true
      }
    },
    "b54e8022-1d17-3c8e-abaa-d867d2e33995": {
      "content": "${fn:toUpperCase(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uc": true
      }
    },
    "b54fd8f9-33ed-3a1b-819d-80565efa281d": {
      "content": "boolean ${1:b}${2: = }${0:true};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "boolean": true
      }
    },
    "b5539ffc-e8a1-3148-92a2-eeeae86b2b27": {
      "content": "fix(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "fix conventional commit",
      "matches": {
        "fix": true
      }
    },
    "b55754a6-7478-3ed2-b93b-22c4b97860f0": {
      "content": "redir => ${1:#:var}\n\t${2::TARGET}\nredir END",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "redir => var",
      "matches": {
        "redir": true
      }
    },
    "b55fb7dd-2475-31b5-97b7-bfb7b0cd0209": {
      "content": "${1:obj}.after('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "after": true
      }
    },
    "b563672e-a826-3cf2-b5f7-8038f7580394": {
      "content": "public class Application\n{\n\t${1:public} static int Main(string[] args)\n\t{\n\t\t${0}\n\t\treturn 0;\n\t}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "simc": true
      }
    },
    "b5678397-b819-3122-a876-951f9aae3ec5": {
      "content": "id=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      }
    },
    "b569a4da-1b0c-3fb5-bc4a-1db857694c07": {
      "content": "Register Keyword To Run On Failure    ${1:${kw}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Register Keyword To Run On Failure",
      "matches": {
        "rktrof": true
      }
    },
    "b56c2148-912e-36a6-9d45-4c5a6f1e31ef": {
      "content": "PropTypes.exact({\n  $0\n}).isRequired",
      "doc": "An object with warnings on extra properties required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeExactRequired",
      "matches": {
        "ptexr": true
      }
    },
    "b56e4494-9fcf-3f38-bd9e-952741ec673d": {
      "content": "font-style normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      }
    },
    "b56e6502-fb15-3e22-8c24-9844b28fde79": {
      "content": "$.proxy(${1:function}, ${2:this})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proxy": true
      }
    },
    "b572b9f0-c6bf-3d4b-b747-7bf6eb2006bb": {
      "content": "align-self: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:b": true
      }
    },
    "b57aa2d5-309c-3303-9035-6d7ccfaafa26": {
      "content": "type = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      }
    },
    "b5894bcf-3a51-3d61-9916-6cc75b299c60": {
      "content": "${1:funname} <- \t\t\t# ${2:}\n\tfunction\n(\n \t${3:}\n)\n{\n  ${4:}\n}",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "b58af405-7d90-31d0-871c-56e5445af494": {
      "content": "product(${1:source}${2:, dim=${3:1}}${4:, mask=${5:($1>0)}})",
      "doc": "Product of Elements",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "prod",
      "matches": {
        "prod": true
      }
    },
    "b58c4d0f-f8a7-3542-ae22-62b7bc4a375e": {
      "content": "\\begin{scshape}\n\t${1:TARGET}\n\\end{scshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{scshape} \\scshape": true,
        "scshape": true
      }
    },
    "b58f9105-c28d-3774-a4bd-c1333fc91f45": {
      "content": "overflow-style: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:a": true
      }
    },
    "b591ef5c-8532-314a-bf4e-6f44073d66b5": {
      "content": "border-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt": true
      }
    },
    "b5a20342-b23d-3ef1-8979-6d288fa12413": {
      "content": "background-break bounding-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:bb": true
      }
    },
    "b5a45135-2acf-3cd8-8366-0d970f979e3b": {
      "content": "$this->renderPartial('${1:view}',array('${2:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrp": true
      }
    },
    "b5a9f91a-c3e3-3d74-9f4f-b8cef3d24457": {
      "content": "case ${1}:\n\t${0}\nbreak;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "b5aa1a78-a450-34d0-8d65-575da62aa9e4": {
      "content": "cycle",
      "doc": "cycle",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "cy",
      "matches": {
        "cy": true
      }
    },
    "b5b03536-600f-35ed-af71-4a8fcbb2ef38": {
      "content": "it { is_expected.to ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iiexp": true
      }
    },
    "b5b2e4a3-61d5-3234-bfbb-25f5b5e9e2b0": {
      "content": "border-color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bc": true,
        "border-color": true
      }
    },
    "b5bdde41-f7d0-36a9-8fea-405198e81870": {
      "content": "typedef struct _node * Link;\ntypedef struct _node node;\nstruct _node {\n\tint value;\n\tLink next;\n};",
      "doc": "Creates a linked list template",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create linked list",
      "matches": {
        "clist": true
      }
    },
    "b5c3b05a-7ba0-36dc-91e7-f80aaa5ff38c": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      }
    },
    "b5c3f365-dbd1-3084-8278-2250c2f114c9": {
      "content": "justify-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fs": true
      }
    },
    "b5c68800-7c42-3076-9c8e-1f18844518c2": {
      "content": "unset key",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "unset key",
      "matches": {
        "key!": true
      }
    },
    "b5d22e13-b7a5-33ac-b694-c8f4cf22a76c": {
      "content": "line!()",
      "doc": "line!()",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "line",
      "matches": {
        "line": true
      }
    },
    "b5d89507-f3b2-347b-8f4e-66981fdadfaf": {
      "content": "partition do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pard": true
      }
    },
    "b5dcab25-202d-39fd-8547-84bfb4d6615b": {
      "content": "_.intersection(${arrays})",
      "doc": "_.intersection([2, 1], [2, 3]);\n// => [2]\n\nCreates an array of unique values that are included in all given arrays\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. The order and references of result values are\ndetermined by the first array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-intersection",
      "matches": {
        "lodash intersection": true
      }
    },
    "b5dead45-dc0f-3cb8-a576-371be18adc7b": {
      "content": "children",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "children",
      "matches": {
        "children": true
      }
    },
    "b5e216e7-fb75-312a-a392-b09bcc7b8664": {
      "content": "content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      }
    },
    "b5e89ac4-1383-390c-bff6-f988b05cc528": {
      "content": "match ${1:list} with\n| [] -> ${2:()}\n| x::xs -> ${3:()}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "pattern match on a list",
      "matches": {
        "matchl": true
      }
    },
    "b5edaaa3-0e99-365c-930f-4f367e878468": {
      "content": "data.frame(${1:...}, ${2:row.names = ${3:NULL}}, ${4:check.rows = ${5:FALSE}}, ${6:check.names = ${7:TRUE}}, ${8:stringsAsFactors = ${9:default.stringsAsFactors()}})",
      "doc": "Data Frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "daf",
      "matches": {
        "data.frame": true
      }
    },
    "b5eee0f7-042f-3a7a-ad45-fddf08676497": {
      "content": "assert_redirected_to ${1:action}: '${2:index}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "art": true
      }
    },
    "b5f333c9-13ac-36b9-b7f3-f04c236ff458": {
      "content": "DROP TABLE IF EXISTS ${1:table};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "DROP TABLE IF EXISTS ...",
      "matches": {
        "DROP_TABLE": true
      }
    },
    "b5f4f481-6252-3938-a6fa-9cc2cb6241da": {
      "content": "content: no-open-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      }
    },
    "b5f60d4c-7888-3371-8bf4-ac216355dc2c": {
      "content": "{% now \"$1\" %}",
      "doc": "now tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "now",
      "matches": {
        "now": true
      }
    },
    "b5fa0dd0-bab3-3d6d-a02e-70c8d33267a2": {
      "content": "angular.forEach ${1:iterateOver}, (value, key) ->\n\t${2}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngfor": true
      }
    },
    "b5fa240d-6cae-3fff-91b7-d5a517cb1643": {
      "content": "void setup(){\n\t${1}\n}\n\nvoid draw(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      }
    },
    "b6008246-ffa2-3a58-b9fe-ece27c7827bf": {
      "content": "<?php else: ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pelse": true
      }
    },
    "b6056067-76ec-3d5e-8bcf-f41cf6c572a8": {
      "content": "{% endmacro %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endmacro",
      "matches": {
        "endmacro": true
      }
    },
    "b606c743-741b-3418-a481-b0c392f23b91": {
      "content": "resize horizontal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:h": true
      }
    },
    "b60c06af-e158-322d-b9bc-de914bff0b05": {
      "content": "#pragma mark ${0:-}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prag": true
      }
    },
    "b60f6a51-b14d-3336-9f5b-3747c14424f4": {
      "content": "FUNCTION CHAR-NATIONAL(${1:integer})$0",
      "doc": "function character in the ordinal position specified by &lt;integer&gt; from the current national collating sequence",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-CHAR-NATIONAL",
      "matches": {
        "FUNCTION CHAR-NATIONAL": true
      }
    },
    "b615d0d1-b6c5-3649-995c-7453bfa706ea": {
      "content": "let ${1:pat} = ${2:expr};",
      "doc": "let … = …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "let",
      "matches": {
        "let": true
      }
    },
    "b6173cb7-ac09-391f-8b0a-b7a6a74a4098": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}\"${0}",
      "doc": "Angular *ngFor",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngfor",
      "matches": {
        "a-ngfor": true,
        "angular ng for": true
      }
    },
    "b61b04c7-619d-3d63-8bf6-6428c1da61f6": {
      "content": "for ${1:@array} -> ${2:$variable} {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "b61c712f-8f31-3cf8-ae64-dea4857f73d3": {
      "content": "(dosync\n\t(ref-set ${1:ref} ${2:value}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "(dosync (ref-set ...",
      "matches": {
        "ref-set": true
      }
    },
    "b62202e6-f029-32d4-be43-3d82a1e543d8": {
      "content": "/**\n * ${0:TARGET}\n */",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "b62852b0-0cd5-36bb-b47d-8486500d197b": {
      "content": "margin: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      }
    },
    "b629fb0d-7730-3075-9ba0-aea16db89478": {
      "content": "<xsl:copy-of select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "copy-of": true
      }
    },
    "b62e6d2d-ea9f-3df7-80ac-2550543d0ec9": {
      "content": "logger.warn",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.warn",
      "matches": {
        "logw": true
      }
    },
    "b630f049-4b90-3a00-9389-88f104a8ce80": {
      "content": "private string ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps-": true
      }
    },
    "b631b458-372f-35f5-acb7-1de77fd6f52a": {
      "content": "process.stderr",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stderr",
      "matches": {
        "stderr": true
      }
    },
    "b63cc1ed-5d01-3a2f-a5fd-6c3bd8575254": {
      "content": "background none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:n": true
      }
    },
    "b63ea76e-bc29-3e8d-bb01-292b046f8a58": {
      "content": "class ${0:name}Painter extends CustomPainter {\n\n  @override\n  void paint(Canvas canvas, Size size) {\n  }\n\n  @override\n  bool shouldRepaint(${0:name}Painter oldDelegate) => false;\n\n  @override\n  bool shouldRebuildSemantics(${0:name}Painter oldDelegate) => false;\n}",
      "doc": "Used for creating custom paint",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Custom Painter ",
      "matches": {
        "customPainter": true
      }
    },
    "b642c3c7-05a9-377f-985c-aad960df55b1": {
      "content": "_.partition(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'age': 36, 'active': false },\n  { 'user': 'fred',    'age': 40, 'active': true },\n  { 'user': 'pebbles', 'age': 1,  'active': false }\n];\n\n_.partition(users, function(o) { return o.active; });\n// => objects for [['fred'], ['barney', 'pebbles']]\n\n// The `_.matches` iteratee shorthand.\n_.partition(users, { 'age': 1, 'active': false });\n// => objects for [['pebbles'], ['barney', 'fred']]\n\n// The `_.matchesProperty` iteratee shorthand.\n_.partition(users, ['active', false]);\n// => objects for [['barney', 'pebbles'], ['fred']]\n\n// The `_.property` iteratee shorthand.\n_.partition(users, 'active');\n// => objects for [['fred'], ['barney', 'pebbles']]\n\nCreates an array of elements split into two groups, the first of which\ncontains elements `predicate` returns truthy for, the second of which\ncontains elements `predicate` returns falsey for. The predicate is\ninvoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partition",
      "matches": {
        "lodash partition": true
      }
    },
    "b6522c0f-a3ae-3200-9854-2e3d41c858e8": {
      "content": "commit",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "commit",
      "matches": {
        "commit": true
      }
    },
    "b658ec16-7e05-318e-90fe-c994322cd8a4": {
      "content": "#define ${1}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#def, #define": true,
        "def": true
      }
    },
    "b6592795-d897-3859-b3be-61d26cb5ca1e": {
      "content": "Vue.config.optionMergeStrategies$1",
      "doc": "Vue.config.optionMergeStrategies",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "optionMergeStrategies",
      "matches": {
        "VueConfigOptionMergeStrategies": true
      }
    },
    "b65e568c-30a1-3d97-b27e-894d0323b3a8": {
      "content": "ifFrameLoaded (${1}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "il": true
      }
    },
    "b66255f3-dcb1-33ef-88d6-63dfee509f96": {
      "content": "<meta ${0}>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:s": true
      }
    },
    "b6659e9b-bad4-3d7f-bc32-ce4ba3122fca": {
      "content": "red(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "red": true
      }
    },
    "b666ad42-c07f-3f59-a06b-882376346fc7": {
      "content": "left: ${1},",
      "doc": "left",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "left",
      "matches": {
        "l": true
      }
    },
    "b6692230-713d-3b77-8c96-f948ab832bdc": {
      "content": "justify-content: ${1|flex-start,flex-end,center,space-between,space-around|};",
      "doc": "initial value: flex-start",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content",
      "matches": {
        "jc": true
      }
    },
    "b66a99d9-af75-30d2-b4fc-fc7ad2a3661e": {
      "content": "fallthrough",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fallthrough",
      "matches": {
        "ft": true
      }
    },
    "b6710526-86e1-3f7e-8d3a-43677fe90ae8": {
      "content": "ADD ${1:a} TO ${2:b} GIVING ${3:c}",
      "doc": "Add a to b giving c",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "ADD",
      "matches": {
        "ADD": true
      }
    },
    "b67f266d-9813-3db0-af89-a5f4fbe53432": {
      "content": "${1:obj}.detach('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "detach": true
      }
    },
    "b68a1f5f-3bda-31d7-bd83-614500c3e4a5": {
      "content": "console.log ${1:\"${2:msg}\"}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Log",
      "matches": {
        "log": true
      }
    },
    "b68cc4e6-ee8a-3eb8-8c3c-b4cb878c6230": {
      "content": "# https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/\napiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: ${1:myapp}\n  namespace: ${2:default}\n  labels:\n    app: ${1:myapp}\nspec:\n  selector:\n    matchLabels:\n      app: ${1:myapp}\n  template:\n    metadata:\n      labels:\n        app: ${1:myapp}\n    spec:\n      tolerations:\n      # this toleration is to have the daemonset runnable on master nodes\n      # remove it if your masters can't run pods\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: ${1:myapp}\n        image: ${3:debian}\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: localtime\n          mountPath: /etc/localtime\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - name: localtime\n        hostPath:\n          path: /usr/share/zoneinfo/Asia/Taipei\n---\n$0",
      "doc": "k8s DaemonSet",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s DaemonSet",
      "matches": {
        "k-daemonset": true
      }
    },
    "b699eee1-cf4d-3436-8fca-48a657c199d7": {
      "content": ".. caution:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "caution",
      "matches": {
        "caution": true
      }
    },
    "b69e85d4-9399-304a-8743-7fced0e64f64": {
      "content": "marginLeft: ${1},",
      "doc": "marginLeft",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginLeft",
      "matches": {
        "mar": true
      }
    },
    "b6a3d561-1590-3cd7-b303-435f126eb796": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "b6a94ebd-47b1-3cc7-a9ce-817ae284d64e": {
      "content": "Maximize Browser Window",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Maximize Browser Window",
      "matches": {
        "mbw": true
      }
    },
    "b6aabc66-4d0b-3f4d-9bb9-1887cb4c7797": {
      "content": "case '${1:value}':\n\t${0:# code...}\n\tbreak;",
      "doc": "Case Block",
      "filetype": "php",
      "grammar": "lsp",
      "label": "case …",
      "matches": {
        "case": true
      }
    },
    "b6abe19a-a48f-3f53-a48e-7b278fa81f91": {
      "content": "${1:obj}.position()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos": true
      }
    },
    "b6ac7adb-6f88-3aae-aa09-b441d1e1b223": {
      "content": "import { use$1 } from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React hooks",
      "matches": {
        "irh": true
      }
    },
    "b6ad95c8-adac-3607-a93f-f785196f3450": {
      "content": "message(\"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(\"...\")",
      "matches": {
        "message": true
      }
    },
    "b6b1935a-9ed5-3119-a343-759b4b6bc386": {
      "content": "margin: ${1:0} ${2:0} ${3:0} ${4:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:4": true
      }
    },
    "b6b36c80-f171-3c9f-8657-9de76e840bba": {
      "content": "$.ajaxSetup({\n\turl: \"${1:mydomain.com/url}\",\n\ttype: \"${2:POST}\",\n\tdataType: \"${3:xml/html/script/json}\",\n\tdata: $.param( $(\"${4:Element or Expression}\") ),\n\tcomplete: (jqXHR, textStatus) ->\n\t\t${5:// callback}\n\t,\n\tsuccess: (data, textStatus, jqXHR) ->\n\t\t${6:// success callback}\n\t,\n\terror: (jqXHR, textStatus, errorThrown) ->\n\t\t${0:// error callback}\n})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsetup": true
      }
    },
    "b6b54425-e056-34ab-9de0-5a5308c2bb40": {
      "content": "{% block extrahead %}\n    $1\n{% endblock extrahead %}",
      "doc": "Extrastyle no oficial Tag",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "extrastyle",
      "matches": {
        "extrastyle": true
      }
    },
    "b6c99cf1-56d4-373e-8c34-20c25329d44e": {
      "content": "${0:name}.view.zipWithIndex",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zipwi": true
      }
    },
    "b6d3c179-6eb6-3939-a49d-84d221a2e9d7": {
      "content": "<code>$1</code>$2",
      "doc": "HTML - Defines computer code text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "code",
      "matches": {
        "code": true
      }
    },
    "b6db3ace-e3c9-3fa9-b2d3-4e704ff587ae": {
      "content": "content counters(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      }
    },
    "b6ddcd8c-1e45-33fe-b7b2-b8d408d63161": {
      "content": "t.Logf(\"${1:var}: %#+v\\\\n\", ${1:var})",
      "doc": "Snippet for t.Logf() with variable content",
      "filetype": "go",
      "grammar": "lsp",
      "label": "t.Logf variable content",
      "matches": {
        "tlv": true
      }
    },
    "b6f36c79-3f39-3f31-8166-94f6213bd989": {
      "content": "class=\"${1}\"${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "b6f55aed-294d-33eb-8a8d-8f0c2c5a3c35": {
      "content": "PropTypes.oneOf(['$0']),",
      "doc": "Prop type limited to specific values by treating it as an enum",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeEnum",
      "matches": {
        "pte": true
      }
    },
    "b6f67774-2955-3141-be4d-f72f8f8faaa2": {
      "content": "# https://kubernetes.io/docs/concepts/services-networking/ingress/\napiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: ${1:example-ingress}\n  namespace: ${2:default}\n  # https://kubernetes.github.io/ingress-nginx/examples/rewrite/\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\\$1\nspec:\n  rules:\n  - host: ${3:example.foo.com}\n    http:\n      paths:\n      - path: ${4:/api/(.*)}\n        pathType: Prefix\n        backend:\n          service:\n            name: ${5:service1}\n            port:\n              number: ${6:80}\n---\n$0",
      "doc": "k8s Ingress with Rewrite rule",
      "filetype": "kubernetes",
      "grammar": "lsp",
      "label": "k8s Ingress with Rewrite rule",
      "matches": {
        "k-ingress-rewrite": true
      }
    },
    "b6f8e953-8965-3deb-ade9-1751f49d685a": {
      "content": "mutations: {\n\t${1:updateValue}(state, ${3:payload}) {\n\t\tstate.${2:value} = ${3:payload};\n\t}\n}",
      "doc": "vuex mutation",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-mutation",
      "matches": {
        "vmutation": true,
        "vuex mutation": true
      }
    },
    "b6f9d383-9f7e-3d7e-9563-63120c56c3bc": {
      "content": "${1:FIELDNAME} = forms.ChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ChoiceField",
      "matches": {
        "fchoice": true
      }
    },
    "b6ffe080-337a-33fc-995b-6a28d957c516": {
      "content": "list-style-type: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      }
    },
    "b703c934-545b-32a0-bf93-ec67d457e45d": {
      "content": "align-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      }
    },
    "b7049246-672a-3b45-80d0-961e9c85fffe": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{/if}",
      "doc": "if block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-block",
      "matches": {
        "svelte if-block": true,
        "svif": true
      }
    },
    "b70e0b1f-a10c-3bf3-ae72-a9054c6e211a": {
      "content": "<th>${1}</th>\nth+${0}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th+": true
      }
    },
    "b710cf11-f7b2-3d1b-97c3-fa57075bb35a": {
      "content": "${1:obj}.text(${2:'some text'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      }
    },
    "b71288a9-f17e-3be7-a343-aee0a79201bf": {
      "content": "text-align: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      }
    },
    "b72028d7-b2bd-3898-852a-dba2944b9b46": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-props",
      "matches": {
        "props": true,
        "react component props": true
      }
    },
    "b73c9949-5af6-30a7-87c4-dc0477bb8bca": {
      "content": "<ThemeProvider theme={${1}}>\n  ${2}\n</ThemeProvider>",
      "doc": "ThemeProvider",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-theme-provider",
      "matches": {
        "styled-components themeprovider": true,
        "themeprovider": true
      }
    },
    "b74792ca-e0b5-39c8-96d7-80e08abb5024": {
      "content": "return false;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "retf": true
      }
    },
    "b748b875-7931-3586-a62c-baa5f164021f": {
      "content": "@testset \"${1}\" begin\n\t${2}\n\t@test_throws ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "@testset with @test_throws",
      "matches": {
        "@tt": true
      }
    },
    "b749a517-88fe-3468-ac8a-d78ca7840884": {
      "content": "<h2>${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2": true
      }
    },
    "b74a1c89-a648-3b1e-8265-e9e9a73c6c81": {
      "content": "Js.warn(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.warn",
      "matches": {
        "cow": true,
        "cw": true
      }
    },
    "b74e6ae0-8ae9-3510-9051-c63bf76a2b9d": {
      "content": "clear ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "b750b3f5-b25c-30df-807c-4cf13faafe8c": {
      "content": "z-index ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      }
    },
    "b751de34-150e-3076-8a09-5a739e470600": {
      "content": "character(len=${1:*}) :: ${0:}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      }
    },
    "b753a2c3-5969-360a-8176-19801d93438d": {
      "content": "extends",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "extends",
      "matches": {
        "extends": true
      }
    },
    "b7623bfd-f393-391b-bc05-fada7feccf06": {
      "content": "overflow-y hidden",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      }
    },
    "b7630a37-6d48-31f3-a3b5-da555774406b": {
      "content": "<hgroup>\n\t${0}\n</hgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hgroup": true
      }
    },
    "b763e763-8583-3146-ba92-b404158e40c3": {
      "content": "<% ${1:TARGET} -%>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<% -%>",
      "matches": {
        "ruby_code_nonl": true
      }
    },
    "b76e96af-361b-3e3c-a56a-d03c4574e909": {
      "content": "${1:FIELDNAME} = SimpleArrayField()",
      "doc": "SimpleArrayField (fsimplearray).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fsimplearray",
      "matches": {
        "fsimplearray": true
      }
    },
    "b76ea696-5967-3b42-bb8d-b8e322acefd3": {
      "content": "foreach ($${1:#:variable} as $${2:#:x}) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true,
        "foreach-list": true
      }
    },
    "b76f5dc2-c14c-3ecb-9a38-3a12266b2431": {
      "content": "{% flush %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% flush %}",
      "matches": {
        "flush": true
      }
    },
    "b77183c1-b8a9-3497-a305-cbb7e826b503": {
      "content": "${1:myVar}: React.PropTypes.${2:type}${3:.isRequired}\n$4",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React propType (key/value)",
      "matches": {
        "propType": true
      }
    },
    "b771af2c-8944-3f04-a884-8749b9f0a886": {
      "content": "it.only('${1:should }', () => {\n\t$0\n});",
      "doc": "creates an it block that runs only",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-it-only",
      "matches": {
        "ito": true,
        "jest it only": true
      }
    },
    "b77241df-b69c-3071-9360-826f40a63e32": {
      "content": "border: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd": true
      }
    },
    "b772966a-8d42-3fb7-9c6d-31368a1b68c7": {
      "content": "{% schema %}\n\t{\n\t\t\"name\": \"${1}\",\n\t\t\"class\": \"${2}\",\n\t\t\"settings\": [\n\t\t\t${0}\n\t\t]\n\t}\n{% endschema %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_schema": true
      }
    },
    "b7738ffc-cf1e-3805-80bc-d20d2dd77126": {
      "content": "func main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main() { ... }",
      "matches": {
        "main": true
      }
    },
    "b777f720-07a1-3763-8aa8-013bb97d1c06": {
      "content": "_.extendWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignInWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.assignIn` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-extendwith",
      "matches": {
        "lodash extendwith": true
      }
    },
    "b77d38af-185f-3297-9d56-aeacf83e43d9": {
      "content": "position: absolute;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "position absolute",
      "matches": {
        "posa": true
      }
    },
    "b7849269-57bc-338c-bb57-b4a8e28e34bd": {
      "content": "unsigned int ${1:object}Count = [${2:array} count];\n\nfor (unsigned int index = 0; index < $1Count; index++) {\n\t${3:id} $1 = [$2 $1AtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      }
    },
    "b7884475-318d-3446-9718-ed2d00935071": {
      "content": "project(${1:project_name})\n\nset(${2:PROJECT}_VERSION_MAJOR 0)\nset($2_VERSION_MINOR 0)\nset($2_VERSION_TEENY 1)\nset(PACKAGE_VERSION \"${$2_VERSION_MAJOR}.${$2_VERSION_MINOR}.${$2_VERSION_TEENY}\")\n\ncmake_minimum_required(VERSION ${3:2.8})\n\n${0}",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "new_project": true
      }
    },
    "b792bcd4-e51b-3640-b1f7-8a30aeb9e9a1": {
      "content": "System.out.printf(\"${1}\", ${2});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printf": true,
        "souf": true
      }
    },
    "b798a505-8c2c-3cd0-af24-62e214d59c5b": {
      "content": "redirect_to :back",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to :back",
      "matches": {
        "reb": true
      }
    },
    "b798b646-92b6-3c52-8643-f0cadf626c68": {
      "content": "(defrecord ${1:type} [${2:constructor-args}]\n  ${3:protocol} (${3:method} [${5}] ${6}))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deftype": true
      }
    },
    "b7991fa3-3041-3933-8708-dc49940fbe30": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "matlab",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "b7994039-9fbf-3eac-a245-7bfedb829b6a": {
      "content": "_$0_",
      "doc": "underline words",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "underline",
      "matches": {
        "underline": true
      }
    },
    "b7a51ba8-62ee-3237-819e-c8fba414e1d9": {
      "content": "(${1:a} => ${0})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "(a": true
      }
    },
    "b7a780a3-2cbb-34e5-9a40-c01ea2c4ab61": {
      "content": "class ${1:NAME}Filter(admin.SimpleListFilter):\n\n\ttitle = '$2'\n\tparameter_name = '$0'\n\n\tdef lookups(self, request, model_admin):\n\t\tpass\n\n\tdef queryset(self, request, queryset):\n\t\treturn queryset",
      "doc": "Admin SimpleList Filter",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "simplelistfilter",
      "matches": {
        "simplelistfilter": true
      }
    },
    "b7af9891-3eaf-35d5-8ae4-83573c0d2233": {
      "content": "go ${1:func}($0)",
      "doc": "Snippet for goroutine declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "goroutine function",
      "matches": {
        "gf": true
      }
    },
    "b7b3d42d-54b7-3ad5-ac45-d4c67b71353a": {
      "content": "<#local\n\t${1:variable_name} = ${0:value${VISUAL}}\n/>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#local <#-- multiple lines --> />",
      "matches": {
        "locm": true
      }
    },
    "b7b69bc4-a10d-35e3-86cb-353ca84f41b4": {
      "content": "must_respond_to :${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrt": true
      }
    },
    "b7b8889c-5567-3ea9-a469-8598caf42801": {
      "content": "for (uint256 ${1:index} = 0; $1 < ${2:array}.length; $1${3:++}) {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "for statement",
      "matches": {
        "for": true
      }
    },
    "b7bec7b8-1849-37eb-a8c0-9a5817df5544": {
      "content": "render nothing: ${1:true}, status: ${2:401}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (nothing,status) (rns)",
      "matches": {
        "rns": true
      }
    },
    "b7d17f18-d692-3375-b53f-6316e9bef088": {
      "content": "import { Component } from '@angular/core';\n\n@Component({\n\tselector: '${1:prefix-app}',\n\ttemplate: `\n\t\t<router-outlet></router-outlet>\n\t\t`\n})\nexport class ${2:App}Component { }\n$0",
      "doc": "Angular App root component",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Root Component",
      "matches": {
        "a-component-root": true
      }
    },
    "b7d50b74-1954-3f9d-976e-01e7d8852680": {
      "content": "${1:obj}.hasClass('${2:className}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hasc": true
      }
    },
    "b7db7667-3d28-3352-9931-0e35192dae19": {
      "content": "stroke(${1:value1}, ${2:value2}, ${3:value3}${4:, }${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stroke": true
      }
    },
    "b7eaa06c-9127-3fc6-a876-a3315b02b2dd": {
      "content": "{% include '${1:snippet}' %}",
      "doc": "Theme tag: include",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag include",
      "matches": {
        "include": true
      }
    },
    "b7ee8e3f-b50d-3f13-8ffd-f2ed3084738d": {
      "content": "model",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "model",
      "matches": {
        "model": true
      }
    },
    "b7f2e435-581f-3859-ad67-f125e71e132e": {
      "content": "word-wrap: suppress;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:s": true
      }
    },
    "b7fa26d2-a7d3-3967-af5f-a38a784b65db": {
      "content": "INSERT INTO ${1:cities}\nVALUES (${0:'Vancouver', 'Canada'});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "INSERT INTO ... VALUES ( ... )",
      "matches": {
        "INSERT_DATA": true
      }
    },
    "b801fa4d-624b-33fc-83b6-91d24e2577ab": {
      "content": "border-left ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdl+": true
      }
    },
    "b808f15c-934d-36e6-8485-8af43e59e554": {
      "content": "dispatch_get_main_queue()",
      "doc": "Create a dispatch_get_main_queue",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch get main queue",
      "matches": {
        "dispatchgetmainqueue": true
      }
    },
    "b8134503-4430-31a5-836a-5423f5565775": {
      "content": "\\textsl{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsl": true,
        "textsl \\textsl{": true
      }
    },
    "b815a040-1e31-3b27-be34-50aadb1a0427": {
      "content": "border-style: groove",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:g": true
      }
    },
    "b81a12e5-082e-348f-813c-b9e6558b31f2": {
      "content": "__PACKAGE__->get_${1:package_method}(${0:var})",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgetv": true
      }
    },
    "b820a156-a80d-3143-91c7-1b2cb5c638a6": {
      "content": "do {\n\t$0\n} while (${1:condition});",
      "doc": "Do-While Statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Do-While Statement",
      "matches": {
        "dowhile": true
      }
    },
    "b8218209-3d75-3793-aad8-9f03d1ed7ea4": {
      "content": "@module(\"${1:path}\") external ${2:dirname}: ${3:string => string} = \"${4:dirname}\"",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "JS Module External",
      "matches": {
        "@bs": true,
        "external": true
      }
    },
    "b822d382-debc-387c-988f-d3f93bbdff07": {
      "content": ".. csv-table:: ${1:Title}\n\t:header-rows: 1\n\t:stub-columns: 0\n\n\t${0:R1C1}, R1C2\n\tR2C1, R2C2",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csv:": true
      }
    },
    "b8334125-91bd-3e8a-bcf6-a7e90dfaa1e2": {
      "content": "FUNCTION INTEGER-OF-FORMATTED-DATE(${1:format},${2:date})$0",
      "doc": "converts date in specified format to an internal integer",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER-OF-FORMATTED-DATE",
      "matches": {
        "FUNCTION INTEGER-OF-FORMATTED-DATE": true
      }
    },
    "b83b7975-62ad-3d36-801d-ba37ad63a59c": {
      "content": "type ${1} is ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      }
    },
    "b8430697-fb74-34b0-967c-29edd088ee8e": {
      "content": "{% dd ${1} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig dd",
      "matches": {
        "dd": true
      }
    },
    "b84380ce-06be-39fc-9a8b-7f9f648546bc": {
      "content": "from __future__ import ${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fut": true
      }
    },
    "b84c27a0-f609-382a-bad4-98232627b370": {
      "content": "<Link href={{ pathname: '${1:/path}', query: { ${2:paramName}: '${3:paramValue}' } }}>\n  <a>${4:content}</a>\n</Link>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-link-url-object",
      "matches": {
        "next link url object": true
      }
    },
    "b84e1468-93cf-3185-8d9e-84feecb7ad4f": {
      "content": "color: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true,
        "color": true
      }
    },
    "b85019e8-1069-3f65-8531-dcf45760c55d": {
      "content": "if ${1:true} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. end",
      "matches": {
        "if": true
      }
    },
    "b855e86c-db25-3b85-a296-4a9011ede605": {
      "content": "border-bottom-color: #${1:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbc": true
      }
    },
    "b8633e73-68c5-3ff4-8837-9e54a7b873c2": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "try/catch",
      "matches": {
        "tc": true
      }
    },
    "b86884b3-602a-3040-b42a-b57997811ce1": {
      "content": "border-top: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt+": true
      }
    },
    "b868b300-608c-38c6-8d4d-5e8084fd0d26": {
      "content": "border-image: url('${1}') ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      }
    },
    "b869c4d5-13d3-396c-af1f-27216b887210": {
      "content": "<dl>${1:TARGET}</dl>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dl": true
      }
    },
    "b869f53b-afc6-3c84-97b4-a6e4248b74f9": {
      "content": "background-break: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      }
    },
    "b87221fd-fd57-3452-aba4-c73825ad3412": {
      "content": "grid-template: ${1} / ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt+": true
      }
    },
    "b8741fb5-58eb-3a2a-a6d1-404a2ca48ac1": {
      "content": "enum ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "enum {}",
      "matches": {
        "enum": true
      }
    },
    "b87534c6-e342-38b1-b0c5-6ab53b9cfa5b": {
      "content": "order: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "or": true
      }
    },
    "b87e7484-3c12-3e3b-9ad8-e3a1209ac3d2": {
      "content": "if !exists(\"g:${1:MyUltraImportantVar}\")\n\tlet g:$1 = ${2:\"${3:<tab>}\"}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "Global / configuration variable",
      "matches": {
        "gvar": true
      }
    },
    "b87e957e-247a-3850-88a8-0f34178775b1": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State, props) => ${3:selectLogic}\n);",
      "doc": "Creates an NgRx Selector using props",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Selector w/ Props",
      "matches": {
        "a-ngrx-create-selector-props": true
      }
    },
    "b88318dc-cc0f-310e-b4f1-c1ce00c71f92": {
      "content": "function min(${1:number},${2:...})$0",
      "doc": "statistical min value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-min",
      "matches": {
        "function min": true
      }
    },
    "b88408bc-1402-3a1c-b91c-94b34595b847": {
      "content": "visibility: ${1|visible,hidden,collapse|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "visibility",
      "matches": {
        "vis": true
      }
    },
    "b884e08d-947a-398b-8825-c9b6bdf6edd5": {
      "content": "protected type ${1}(${2}) is\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "protected type",
      "matches": {
        "prot": true
      }
    },
    "b887aee9-c44d-3edc-8eba-4676b14244a5": {
      "content": "where ( $1 ${2:==} $3 )\r\n\t$0\r\nend where",
      "doc": "where",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "whe",
      "matches": {
        "whe": true
      }
    },
    "b888821f-2154-393e-8b14-4c49619a78b3": {
      "content": "expects($this->${1:once}())\n\t->method('${2}')\n\t->with(${3})\n\t->willReturn(${4});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "phpunit expects",
      "matches": {
        "exp": true
      }
    },
    "b888c0de-3bc7-3584-9cd4-ca5751dbd1ab": {
      "content": "```{r}\n${1}\n```",
      "doc": "",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert Block Chunck",
      "matches": {
        "```": true
      }
    },
    "b88c199f-7908-3343-9af3-fe9b18311c14": {
      "content": "defmodule Main do\n  def main do\n    ${1:TARGET}\n  end\nend\n\nMain.main",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "b88d4910-2303-36f3-b215-3c80481c933e": {
      "content": "mix : [ { ${1:block} : '${2:block}' } ],",
      "doc": "",
      "filetype": "javascript-bemjson",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi": true
      }
    },
    "b8928585-e5f1-3405-871c-f937910ebcf0": {
      "content": "console.log(${1:object});",
      "doc": "Displays a message in the console",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolelog",
      "matches": {
        "base console log": true
      }
    },
    "b89b2bad-29c7-3c87-8bb1-2222da91c41c": {
      "content": "expr {${0:#expression here}}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "b8a484e4-abf6-3f0c-b356-c580e776c647": {
      "content": "NO-ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ne": true
      }
    },
    "b8b0779c-fdcb-389f-b653-d58fe2586842": {
      "content": "text-height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "b8b5ac91-f9cf-342c-9c2b-91dc619235ed": {
      "content": "cursor: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      }
    },
    "b8b5e04e-e666-38fc-8017-429f8e944f74": {
      "content": "Vue.filter(${1:id}${2:, [definition]})",
      "doc": "Vue.filter( id, [definition] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "VueFilter": true
      }
    },
    "b8ba1a26-5c9c-3dd3-9e7a-ebc8ce2fee90": {
      "content": "CHECK ( ${1:condition} )",
      "doc": "Check",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "check",
      "matches": {
        "check": true
      }
    },
    "b8bb0bba-51c3-3134-bf32-7925f040c6d6": {
      "content": "overflow scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      }
    },
    "b8bfa49c-099d-3ba7-abe0-914b63b3b256": {
      "content": "stopAllSounds();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ss": true
      }
    },
    "b8c0777f-16bc-3221-9e20-331c26f12100": {
      "content": "<main>\n    ${1}\n</main>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "b8c37463-89ef-3f16-96fd-8482eda141ea": {
      "content": "func Benchmark${1}(${2:b *testing.B}) {\n  for i := 0; i < ${3:b.N}; i++ {\n    ${4}\n  }\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func Benchmark...(b *testing.B) { ... }",
      "matches": {
        "funcbench": true
      }
    },
    "b8cd6637-dcca-3c6c-aabc-84a9e58940a8": {
      "content": "flex: ${1},",
      "doc": "flex",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flex",
      "matches": {
        "flex": true
      }
    },
    "b8d9619f-0a51-341f-b45f-aab655230e51": {
      "content": "radians($2)",
      "doc": "float radians(float degrees)\nvec2 radians(vec2 degrees)\nvec3 radians(vec3 degrees)\nvec4 radians(vec4 degrees)\n\nThe radians function converts degrees to radians. The input parameter can be a floating scalar or a float vector. In case of a float vector all components are converted from degrees to radians separately.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "radians",
      "matches": {
        "radians": true
      }
    },
    "b8dc3b1d-6807-35c6-99ec-c1ba34ce8b85": {
      "content": "degrees($2)",
      "doc": "float degrees(float radians)\nvec2 degrees(vec2 radians)\nvec3 degrees(vec3 radians)\nvec4 degrees(vec4 radians)\n\nThe degrees function converts radians to degrees. The input parameter can be a floating scalar or a float vector. In case of a float vector every component is converted from radians to degrees separately.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "degrees",
      "matches": {
        "degrees": true
      }
    },
    "b8dd607b-6a27-3141-8ad7-30b0c34dcaa3": {
      "content": "<%= ${1:f}.collection_select(:${2:method}, ${3:collection}, :${4:value_method}, :${5:text_method}, options = {${0:prompt: true}}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fcs": true
      }
    },
    "b8df0b83-124e-30c9-8d12-5f8706ee0bee": {
      "content": "${1:pattern} {\n\t${2:#do something}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ca": true
      }
    },
    "b8e8c6d1-b03c-3c9c-a5e3-1cb90bb1590f": {
      "content": "@finally {\n\t${0:statements}\n}",
      "doc": "Create a finally block",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "finally",
      "matches": {
        "@finally": true
      }
    },
    "b8effcac-81d6-3a2e-8362-38de5f669aa8": {
      "content": "Set${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "b8f4c780-1890-39db-8299-c9e5bea292fe": {
      "content": "<% if ${1:truevalue} %>\n  $2\n<% end %>",
      "doc": "if .. end",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "b8f706ec-5edd-3529-8a45-f7ebe07ec603": {
      "content": "(define/match (${1})\n  [(${2}) ${3}]\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "define/match",
      "matches": {
        "defm": true
      }
    },
    "b8fc84d9-a5f0-3300-bf3a-d42fd7fab722": {
      "content": "(use gauche.test)\n(test-start \"${1}.scm\")\n\n(load \"$1.scm\")\n\n(test* \"${2}\" ${3:expected} ${4:actual})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "(use gauche.test)(test-start ...",
      "matches": {
        "gauche-testsuite": true
      }
    },
    "b907a117-643e-3936-8849-7dfcd67cad47": {
      "content": "{\n\t\"type\": \"image_picker\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_image_picker": true
      }
    },
    "b909f255-4ff4-3c34-9861-af5a555f59fa": {
      "content": "\\${${1:val}}=    Evaluate    ${2:${x} - 10}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Evaluate",
      "matches": {
        "eval": true
      }
    },
    "b90be77f-bf4a-329c-823f-ba54167c883b": {
      "content": "def ${1:#:name}(self, ${2}):\n\t\"\"\"${3:#:method documentation}\"\"\"\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "def method(self, ...): \"...\"",
      "matches": {
        "defmd": true
      }
    },
    "b90c73c4-4713-342c-9890-8e609dec12d9": {
      "content": "${1:outFactor} <- factor(x = ${2:dataVec}, levels = ${3:levels}, exclude = ${4:exclude})",
      "doc": "Create a factor (categorical variable) from a vector",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Categorical variable",
      "matches": {
        "factor": true
      }
    },
    "b9125792-31d2-3cec-80be-fca9eacf4600": {
      "content": "echo(${0:#:TARGET})",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echo": true
      }
    },
    "b91278d0-21be-3e7b-8b27-c0272327b71f": {
      "content": "%#Region $0",
      "doc": "Folding Region Start",
      "filetype": "latex-snippets",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      }
    },
    "b9177ee9-4efa-3dd8-ac7e-2dc25b2aa0c8": {
      "content": "set output '${1:#:filename}'",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set output 'filename'",
      "matches": {
        "out": true
      }
    },
    "b918913f-c215-337f-83fb-654a7920c95e": {
      "content": "// FIXME: $0",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "FIXME comment",
      "matches": {
        "fixme": true
      }
    },
    "b91b8ade-11bc-328b-b2c1-500e062215b7": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-object-of-required",
      "matches": {
        "prop-types objectof required": true,
        "ptoor": true
      }
    },
    "b91fd500-7423-3103-aba5-cb73e009511d": {
      "content": "[formGroupName]=\"${1:name}\"",
      "doc": "Angular formGroupName",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFormGroupName",
      "matches": {
        "a-formGroupName": true
      }
    },
    "b92ce0a4-179f-3889-af87-0eb786b07686": {
      "content": "form_open_multipart(\"${1:action}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_open_multipart": true
      }
    },
    "b93947e0-cb1f-3442-9c82-a5f7ac53656d": {
      "content": "trait ${1:TraitName} {\n\t${2:}\n}",
      "doc": "Trait",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "trait",
      "matches": {
        "trait": true
      }
    },
    "b93df911-ab68-33b5-bc5e-da551ef08f81": {
      "content": "reversible do |dir|\n\tdir.up do\n\t\t${0}\n\tend\n\n\tdir.down do\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "reversible do |dir| ... dir.up .. dir.down .. end",
      "matches": {
        "mrev": true
      }
    },
    "b940dbba-a009-3809-b53e-e5b5ae469ff6": {
      "content": "{% ifnotequal ${1} ${2} %}\n\t${0}\n{% endifnotequal %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnotequal": true
      }
    },
    "b943d0b3-8f24-394e-b736-b286d125e8a9": {
      "content": "t.time :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcti": true
      }
    },
    "b9442b73-20cb-3515-be3c-85761f9036ab": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "b94cb5e3-a188-3294-a72c-ef0c2468d94b": {
      "content": "<xsl:with-param name=\"${1:name}\" select=\"${0:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "with-param": true
      }
    },
    "b95007c0-26ba-30c9-9411-829c3bbf0923": {
      "content": "border-style: inset;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      }
    },
    "b958607c-61ec-3779-b717-0a033342a2a5": {
      "content": "background-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk": true
      }
    },
    "b95b10a0-ddf4-37ba-8066-875088d7a0be": {
      "content": "which(${1:x}, ${2:arr.ind = ${3:FALSE}}, ${4:useNames = ${5:TRUE}})",
      "doc": "Which",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "whi",
      "matches": {
        "which": true
      }
    },
    "b960aae3-123e-3873-aa35-ae1e4b96c734": {
      "content": "{% set ${1:#:var} %}\n\t${0:TARGET}\n{% endset %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% set ... %} ... {% endset %}",
      "matches": {
        "setblock": true
      }
    },
    "b966e7cd-aac4-3b9b-b762-0ac42a3e43f9": {
      "content": "For ${1:n} = ${3:1} to ${2:count}\n\t${0:; code...}\nNext",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "b9687b3a-6b62-3408-86a9-7aea8bf9aa1e": {
      "content": "| url_escape",
      "doc": "String filter: url escape",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter url escape",
      "matches": {
        "url_escape": true
      }
    },
    "b970cef1-29b1-332a-b48f-1a580cbc8a6b": {
      "content": "@genType",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "@genType",
      "matches": {
        "gt": true
      }
    },
    "b973c667-5e9f-3456-82cc-e73230603714": {
      "content": "top: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t:a": true
      }
    },
    "b97cd12d-e758-3875-a2c8-f495b67c7181": {
      "content": "self.assertRaises(${1:exception}, ${2:callable}, ${3:args})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert raises",
      "matches": {
        "asr": true
      }
    },
    "b983cbbb-5213-3678-9fa2-7ee14425ff35": {
      "content": "quotes: '\\00AB' '\\00BB' '\\201E' '\\201C'",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:ru": true
      }
    },
    "b98cfe81-b2c7-3028-94d7-4e923b591d2a": {
      "content": "font-effect: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      }
    },
    "b98e19fb-2dec-3c3f-b644-b40f2d9034a6": {
      "content": "`json:\"$1\"`",
      "doc": "Snippet for struct json tag",
      "filetype": "go",
      "grammar": "lsp",
      "label": "json tag",
      "matches": {
        "json": true
      }
    },
    "b99d87aa-56d0-3c50-95e2-b8d1e0fe6346": {
      "content": "object ${1:App} extends App {\n\t${2:println(\"Hello, world!\")}\n}",
      "doc": "Object extending App",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "app",
      "matches": {
        "app": true
      }
    },
    "b9b40078-5655-3dda-9080-7c31df8fa18f": {
      "content": "${1:Rails.}logger.debug { \"${1:message}\" }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.debug",
      "matches": {
        "logd": true
      }
    },
    "b9b4c07b-413a-3830-864e-98deb2bf9dd9": {
      "content": "runs(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "runs (js)",
      "matches": {
        "ru": true
      }
    },
    "b9b67b03-760b-3573-88cd-3aa4b39f9506": {
      "content": "$.isFunction(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isfunc": true
      }
    },
    "b9b77cbd-7dbb-3a34-997f-077f2930f1bf": {
      "content": "assert_response :${1:success}, @response.body",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asre": true
      }
    },
    "b9b9bfc0-7e7d-3e30-bc81-3261f3d7a705": {
      "content": "::: {#refs}\n:::$0",
      "doc": "Insert reference list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert reference list",
      "matches": {
        "reference list": true
      }
    },
    "b9c48ce2-a51a-3513-9f41-2b9df543c5c6": {
      "content": "transition-group$0",
      "doc": "transition-group element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "transition-group",
      "matches": {
        "transitionGroup": true
      }
    },
    "b9c619d4-c710-3d8f-8946-07b78b7a2cd6": {
      "content": "mount { \"${1:destination path}\":\n\tensure\t=> ${2:mounted},\n\tdevice\t=> \"${0:device name or path}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mount": true
      }
    },
    "b9d0901a-1e65-369a-800a-6d3fd621fdcb": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} commodity ${4:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "declare commodity",
      "matches": {
        "commodity": true,
        "currency": true
      }
    },
    "b9d3ff34-c5c2-3d12-9cfb-22acbebd7787": {
      "content": "_.isArrayLike(${value})",
      "doc": "_.isArrayLike([1, 2, 3]);\n// => true\n\n_.isArrayLike(document.body.children);\n// => true\n\n_.isArrayLike('abc');\n// => true\n\n_.isArrayLike(_.noop);\n// => false\n\nChecks if `value` is array-like. A value is considered array-like if it's\nnot a function and has a `value.length` that's an integer greater than or\nequal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isarraylike",
      "matches": {
        "lodash isarraylike": true
      }
    },
    "b9d4479e-4b7f-38c9-9af2-b61e11c06a8f": {
      "content": "import { createSelector } from 'reselect'\n\nexport const ${1:first} = state => state.${2:second}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reduxSelector",
      "matches": {
        "rxselect": true
      }
    },
    "b9d7e760-6e17-38ec-875f-cb64093c0565": {
      "content": ".DEFAULT_GOAL := ${1}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "b9d9e827-e37d-334a-98e1-54470214bff5": {
      "content": "must_match /${0:regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mm": true
      }
    },
    "b9ddda62-a9ef-30b7-944f-2a901a9b6039": {
      "content": "${1:dfname} <- read.csv(file = \"${2:file}\", header = ${3|TRUE,FALSE|},  sep = \"${4|\\,,;|}\", row.names = ${5:NULL},  stringsAsFactors = ${6|FALSE,TRUE|})",
      "doc": "Read a data table from a comma-separated file (CSV) and create a data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Read CSV",
      "matches": {
        "readc": true
      }
    },
    "b9e251d7-93b6-344b-9753-72b2b863d4dc": {
      "content": "updated () {\n\t${0};\n},",
      "doc": "updated lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle updated",
      "matches": {
        "vupdated": true
      }
    },
    "b9ec65c1-83d3-3841-a290-4dbb3afb6a49": {
      "content": "import 'package:flutter/cupertino.dart';\n \nvoid main() => runApp(MyApp());\n \nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return CupertinoApp(\n      title: 'Cupertino App',\n      home: CupertinoPageScaffold(\n        navigationBar: CupertinoNavigationBar(\n          middle: Text('Cupertino App Bar'),\n        ),\n        child: Center(\n          child: Container(\n            child: Text('Hello World'),\n          ),\n        ),\n      ),\n    );\n  }\n}",
      "doc": "Create a CupertinoApp",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Cupertino App",
      "matches": {
        "cupeapp": true
      }
    },
    "b9f2cd77-3b10-356a-b836-60881314f068": {
      "content": "<exception cref=\"${1:#:class}\">${2:#:description}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<exception cref=\"\"></exception>",
      "matches": {
        "exception": true
      }
    },
    "b9f93da7-bf58-30a3-bf70-88fd4ac23228": {
      "content": "border-top-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdti:n": true
      }
    },
    "b9fdee20-3a2f-3716-86ed-3432258e8f85": {
      "content": "<?php ${0} ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      }
    },
    "ba031fa9-e111-3256-81f8-f8ff18f43aa7": {
      "content": "/**\n *\n */\nconstructor() {\n\tsuper();\n\t$0\n}",
      "doc": "Constructor",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Constructor",
      "matches": {
        "ctor": true
      }
    },
    "ba065444-456d-3da7-9e2e-0152f66627ad": {
      "content": "$.ajax\n  url: \"${1:mydomain.com/url}\"\n  type: \"${2:POST}\"\n  dataType: \"${3:xml/html/script/json}\"\n  data: ${4:data}\n  complete: (jqXHR, textStatus) ->\n\t${5:// callback}\n  success: (data, textStatus, jqXHR) ->\n\t${6:// success callback}\n  error: (jqXHR, textStatus, errorThrown) ->\n\t${0:// error callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajax": true
      }
    },
    "ba07c3eb-e4f1-307d-9214-5b22812636f1": {
      "content": "border-top-left-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli": true
      }
    },
    "ba0ae3fa-53de-32db-a54f-8db78caee197": {
      "content": "Session::id();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_id": true
      }
    },
    "ba0d2a71-831a-30bf-9cb6-7d5eeead351b": {
      "content": "export default function ${1:name} (${2:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module default export function",
      "matches": {
        "edf": true
      }
    },
    "ba13ab7a-1a64-36f1-9dec-4c35fa6f83e9": {
      "content": "struct ${1:#:name} {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "struct {}",
      "matches": {
        "struct": true
      }
    },
    "ba144228-31f9-35cd-ad86-e3cf8da56986": {
      "content": "word-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      }
    },
    "ba146179-7c26-3ad4-a506-4e2ee91bf595": {
      "content": "validates_confirmation_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:should match confirmation}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of (vc)",
      "matches": {
        "vc": true
      }
    },
    "ba1587a7-b753-3153-b763-b196ad868ba8": {
      "content": "text-transform: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "ba16440f-f5a8-3efb-9b12-679b6e0dc493": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Setup Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Setup Composition API",
      "matches": {
        "vbase-3-setup": true
      }
    },
    "ba1c9e23-39e1-3ebe-9e73-d0b75b0349b9": {
      "content": "right: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      }
    },
    "ba1d2023-b8fb-3205-bd01-9fa0204ad37e": {
      "content": "class ${1:Name} {\n  $0\n}",
      "doc": "Insert a class definition.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "ba1db276-1bfb-3e9f-b92e-e290bc401070": {
      "content": "try {\n\t${0}\n} finally {\n\t\n}",
      "doc": "try/finally",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-finally",
      "matches": {
        "base try finally": true
      }
    },
    "ba1e19cc-cd3b-3b00-8048-26c06dfb281f": {
      "content": "<%= ${1:f}.hidden_field :${0:attribute} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffhf": true
      }
    },
    "ba1f277f-568e-389c-a1e8-704cfe77cb9b": {
      "content": "function annuity(${1:interest-rate},${2:number-of-periods})$0",
      "doc": "function annuity",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-annuity",
      "matches": {
        "function annuity": true
      }
    },
    "ba316bc0-b422-3aa0-8020-e6bd469b198f": {
      "content": "for ${1:i} := 0; $1 < ${2:N}; $1++ {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for 0..N-1 { ... }",
      "matches": {
        "fori": true
      }
    },
    "ba436855-fcb9-36e3-8e7f-f580200db732": {
      "content": "$this->assertArraySubset(${1:$subset}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArraySubset($subset, $array)",
      "matches": {
        "assub": true
      }
    },
    "ba44d2c4-28ef-3121-8df9-5c2b765f5ec8": {
      "content": "## no critic\nour $VERSION = '${0:version}';\neval $VERSION;\n## use critic",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vers": true
      }
    },
    "ba488643-2ba7-3f95-84e2-71587ba9cfc4": {
      "content": "${1:promise}.then((${2:value}) => {\n\t${0}\n})",
      "doc": "Promise.then",
      "filetype": "base",
      "grammar": "lsp",
      "label": "promise-then",
      "matches": {
        "base promise then": true
      }
    },
    "ba552044-f40c-36b7-8862-f07a1035de7d": {
      "content": "meta",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "meta",
      "matches": {
        "meta": true
      }
    },
    "ba57cefc-b385-3b29-8b71-0e2fc2981518": {
      "content": "_.indexOf(${array}, ${value}, ${fromIndex})",
      "doc": "_.indexOf([1, 2, 1, 2], 2);\n// => 1\n\n// Search from the `fromIndex`.\n_.indexOf([1, 2, 1, 2], 2, 2);\n// => 3\n\nGets the index at which the first occurrence of `value` is found in `array`\nusing [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons. If `fromIndex` is negative, it's used as the\noffset from the end of `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-indexof",
      "matches": {
        "lodash indexof": true
      }
    },
    "ba5abe84-a9fa-3622-ae1a-66dc41101b8a": {
      "content": "assert_kind_of ${1:ExpectedKind}, ${2:actual_instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asko": true
      }
    },
    "ba5b968e-e434-3bb2-a09d-a030a97dcd8b": {
      "content": "@import url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@i": true
      }
    },
    "ba62452a-e290-36dc-9b87-afe4cb6ef412": {
      "content": "package name {\n\n\t${1:public|internal|final} class ${2:name} ${0:extends } {\n\t\tprivate|public| static const FOO = \"abc\";\n\t\tprivate|public| static var BAR = \"abc\";\n\n\t\t// class initializer - no JIT !! one time setup\n\t\tif Cababilities.os == \"Linux|MacOS\" {\n\t\t\tFOO = \"other\";\n\t\t}\n\n\t\t// constructor:\n\t\tpublic function $2 (\t){\n\t\t\tsuper2();\n\t\t\ttrace(\"start\");\n\t\t}\n\t\tpublic function name (a, b...){\n\t\t\tsuper.name(..);\n\t\t\tlable:break\n\t\t}\n\t}\n}\n\nfunction A(){\n\t// A can only be accessed within this file\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      }
    },
    "ba62bc8a-a99c-34a0-993d-f7207c579843": {
      "content": "let ${1} = ${2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "let variable declaration with type inference",
      "matches": {
        "let": true
      }
    },
    "ba634577-e821-3cca-bc95-b2ea40abdb9b": {
      "content": "console.log('${1:object} :>> ', ${1:object});",
      "doc": "Displays an object in the console with its name",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleLogObject",
      "matches": {
        "clo": true
      }
    },
    "ba6ffee4-facf-3680-bf83-06e227bdd9c8": {
      "content": "function seconds-past-midnight()$0",
      "doc": "current time of day expressed as the total number of elapsed seconds since midnight",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-seconds-past-midnight",
      "matches": {
        "function seconds-past-midnight": true
      }
    },
    "ba7002b7-9189-3afa-8e3f-88cdd2ffe7ad": {
      "content": "cut:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      }
    },
    "ba86eecd-c3a1-3435-9dc8-f3520fd89e86": {
      "content": "Set Test Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Test Variable",
      "matches": {
        "stv": true
      }
    },
    "ba87803d-46c8-32a0-9d9d-2ca37eaefaf2": {
      "content": "{{ STATIC_URL }}",
      "doc": "STATIC_URL no oficial var",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "staticurl",
      "matches": {
        "staticurl": true
      }
    },
    "ba8abb94-dda5-30cf-976f-061d6059e02c": {
      "content": "#pragma warning ${2:disable} ${3:#:errno}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pragma pragma_warn": true,
        "pragma_warning": true
      }
    },
    "ba90136f-5441-3376-8676-2c32e5d506f7": {
      "content": "PropTypes.bool,",
      "doc": "Bool prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-bool",
      "matches": {
        "prop-types bool": true,
        "ptb": true
      }
    },
    "ba91d71f-5e13-31f5-a5c3-d400363728e0": {
      "content": "_.castArray(${value})",
      "doc": "_.castArray(1);\n// => [1]\n\n_.castArray({ 'a': 1 });\n// => [{ 'a': 1 }]\n\n_.castArray('abc');\n// => ['abc']\n\n_.castArray(null);\n// => [null]\n\n_.castArray(undefined);\n// => [undefined]\n\n_.castArray();\n// => []\n\nvar array = [1, 2, 3];\nconsole.log(_.castArray(array) === array);\n// => true\n\nCasts `value` as an array if it's not one.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-castarray",
      "matches": {
        "lodash castarray": true
      }
    },
    "ba951463-4eac-3240-b831-66f01a71796f": {
      "content": "$this->input->post(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-post": true
      }
    },
    "ba95f116-2c6d-3ae7-9027-d5db2fc63063": {
      "content": "<returns>$0</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "XML returns comment",
      "matches": {
        "<r": true
      }
    },
    "ba98d387-5a3c-3e36-a282-579e4f646b9b": {
      "content": "always_comb begin\n    ${1:TARGET}\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_comb",
      "matches": {
        "alc": true
      }
    },
    "baa40dfa-6992-3cf2-8ee3-0a00e1478592": {
      "content": "for ${1} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for ... { ... }",
      "matches": {
        "for": true
      }
    },
    "baa49d8a-598e-3a5e-aaf2-6628f3ae1189": {
      "content": "${1:obj}.data(${2:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "data": true
      }
    },
    "baa4d6db-8690-37d1-91fd-2484b69d79e3": {
      "content": "clip: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:a": true
      }
    },
    "bab37d0a-2494-36f4-84d1-6ded162d9229": {
      "content": "input(v-model.number=\"${1:numData}\" type=\"number\" step=\"1\")",
      "doc": "v-model directive number input",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue v-model Number Directive",
      "matches": {
        "vmodel-num": true
      }
    },
    "bab724ac-be10-3ea6-a9ff-f52404e2ecf6": {
      "content": "raise(${1:SomeError}(${2:// write your text}))",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Raise exception",
      "matches": {
        "raise": true,
        "rs": true
      }
    },
    "bacca144-824e-3ed5-a31b-e35b65ca3660": {
      "content": "border-style none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:n": true
      }
    },
    "bad2d08d-e27c-3838-9938-246ad8920970": {
      "content": "/*\n\t${0}\n */",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "bada235d-2144-333e-9805-b5b66a2db92f": {
      "content": "border-top-color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtc": true
      }
    },
    "baddfe52-7055-331a-903a-0a6de9054130": {
      "content": "assert(${1:a} === ${0:b})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assert": true
      }
    },
    "baeccb2c-d9e2-3a16-ab1f-13267d1fde12": {
      "content": "#![deny(${1})]",
      "doc": "#![deny(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "deny",
      "matches": {
        "deny": true
      }
    },
    "baedf97c-250d-39fd-89f0-fbb71f5c09e2": {
      "content": "describe('${1:Name of the group}', () => {\n\t$0\n});",
      "doc": "creates a describe block",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-describe",
      "matches": {
        "desc": true,
        "jest describe": true
      }
    },
    "baf0f4ef-531d-3975-b214-2eb5004de1e6": {
      "content": "test.skip('${1:should }', () => {\n\t$0\n});",
      "doc": "creates a test block that will be skipped",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-skip",
      "matches": {
        "jest test skip": true,
        "tests": true
      }
    },
    "baf111f0-8d29-3541-956a-06781592f2ac": {
      "content": "entity $0",
      "doc": "Models an entity of the system",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Entity",
      "matches": {
        "ent": true
      }
    },
    "baf1fa72-e076-3105-ae32-e492a3d0ae97": {
      "content": "object $1 {\n$2\n}",
      "doc": "A default Object",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Object",
      "matches": {
        "ob": true
      }
    },
    "bb082951-e456-3795-a159-a59284136ed9": {
      "content": "//\n//  $TM_FILENAME\n//  $WORKSPACE_NAME\n//\n//  Created by ${VIM:\\$USER} on $CURRENT_YEAR/$CURRENT_MONTH/$CURRENT_DATE.\n//  Copyright © $CURRENT_YEAR ${VIM:\\$USER}. All rights reserved.\n//",
      "doc": "Create a file documents header",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create file documents",
      "matches": {
        "filedoc": true
      }
    },
    "bb10f898-4142-384c-9076-2dd2eb79e0bc": {
      "content": "{% highlight ${1:#:TARGET} linenos %}\n  ${2:code}\n{% endhighlight %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "Line number",
      "matches": {
        "highlight_line": true,
        "hl_l": true
      }
    },
    "bb11cb70-929c-3345-8f64-f52367c6f35a": {
      "content": "vertical-align super",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sup": true
      }
    },
    "bb1771f3-daec-3413-884c-07e212492248": {
      "content": "emerg(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "emerg": true
      }
    },
    "bb20b9e7-7059-31ea-8cac-182e38bde564": {
      "content": "= render :partial => \"${1:item}\", :locals => { :${2:$1} => ${0:@$1} }",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpl": true
      }
    },
    "bb22abe2-e43b-367b-a13d-c9e9ed7d5c2b": {
      "content": "while (${1:true})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "while": true
      }
    },
    "bb23a19d-c970-32d3-873a-2c61fed64333": {
      "content": "let {${1:name}} = ${2:value};",
      "doc": "Object destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructuring-let-assignment",
      "matches": {
        "base let destruct object": true
      }
    },
    "bb2b755c-d866-3209-9412-9719a3d4cb63": {
      "content": "right ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r": true
      }
    },
    "bb2c5e87-f874-32e4-a3c8-c4db37de2bf0": {
      "content": "protected ${1:void} ${2:name}(${3}) {\n\t$0\n}",
      "doc": "Protected method",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Protected Method",
      "matches": {
        "protected_method": true
      }
    },
    "bb2fb2ce-b63a-35ba-acce-4ae4d2ece41b": {
      "content": "if (${1:condition}) {\n\t${0}\n}",
      "doc": "if statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "if-statement",
      "matches": {
        "base if": true
      }
    },
    "bb392553-19b0-34b2-b5e8-5359f5cd1c9d": {
      "content": "{% cycle '${1:group name}': '${2:odd}', '${3:even}' %}",
      "doc": "Iteration tag: cycle group",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag cycle group",
      "matches": {
        "cyclegroup": true
      }
    },
    "bb39f339-e796-3dec-bf07-b4d175da6d97": {
      "content": "left auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      }
    },
    "bb3dd81b-7297-3bf2-b6f3-66bf5eddd14c": {
      "content": "\\begin{thebibliography}\n\t${1:TARGET}\n\\end{thebibliography}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{thebibliography} \\thebibliography": true,
        "thebibliography": true
      }
    },
    "bb3fb1ce-3616-3101-9d32-a88b53cbadc2": {
      "content": "= link_to ${1:name}, ${2:dest}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lt": true
      }
    },
    "bb405ebe-b75b-3d5b-a47a-af98c32d8833": {
      "content": "clear: ${1|both,left,right,none|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "clear",
      "matches": {
        "clr": true
      }
    },
    "bb47fdd3-a9ba-362d-8c82-a9b30996a920": {
      "content": "${1:FIELDNAME} = models.URLField(${2:verify_exists=False}${3:, max_length=200}${0:, blank=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "bb4a6e33-3982-3847-9155-8b5ed60147f4": {
      "content": "$.isPlainObject(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isobj": true
      }
    },
    "bb4b44ac-671a-3f7a-a5e5-cdb9e716011f": {
      "content": "function ${1} return ${2} is\n\t(${3});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "expression function",
      "matches": {
        "fune": true
      }
    },
    "bb54e164-f6b3-3f35-9c38-6a9b188aacf3": {
      "content": "_.findLastKey(${object}, ${predicate})",
      "doc": "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findLastKey(users, function(o) { return o.age < 40; });\n// => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\n// The `_.matches` iteratee shorthand.\n_.findLastKey(users, { 'age': 36, 'active': true });\n// => 'barney'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findLastKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findLastKey(users, 'active');\n// => 'pebbles'\n\nThis method is like `_.findKey` except that it iterates over elements of\na collection in the opposite order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findlastkey",
      "matches": {
        "lodash findlastkey": true
      }
    },
    "bb5b85a1-5d09-3557-b079-dbef76c45e6a": {
      "content": "elevation: ${1},",
      "doc": "elevation",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "elevation",
      "matches": {
        "e": true
      }
    },
    "bb611cec-b87f-3360-b004-867b85636d7e": {
      "content": "require('dotenv').config({ debug: ${1|true,false|} })",
      "doc": "You may turn on logging to help debug why certain keys or values are not being set as you expect.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-debug",
      "matches": {
        "dotenv debug": true
      }
    },
    "bb630031-7463-3b4e-aef3-e9220fb3934a": {
      "content": "<td>$1</td>$2",
      "doc": "HTML - Defines a table cell",
      "filetype": "html",
      "grammar": "lsp",
      "label": "td",
      "matches": {
        "td": true
      }
    },
    "bb64c52c-1728-3ddf-92cf-edc9de1c057f": {
      "content": "<slot></slot>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slot": true
      }
    },
    "bb6b3b62-0418-30a2-a1c3-084b32145fb4": {
      "content": "<If ${1:condition}>\n        ${2}\n</If>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "bb6d6ea3-ab5c-3f07-80bb-e05b1f2e60d5": {
      "content": "```{r ${1:label}, fig.cap = \"${2:Figure caption.}\", fig.alt = \"${3:Alt text.}\"}\nknitr::include_graphics(\"${4:path/to/file.png}\")\n```",
      "doc": "Insert external figure chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert external figure chunk",
      "matches": {
        "external figure chunk": true
      }
    },
    "bb6eb64c-f899-391b-9c8f-37361f0aafce": {
      "content": "IO.puts($0)",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "IO.puts",
      "matches": {
        "put": true
      }
    },
    "bb6f0684-216c-3022-8297-05bcf86a87ef": {
      "content": "onMount(() => {\n\t${1:// content here}\n});",
      "doc": "onMount lifecycle function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-mount",
      "matches": {
        "s-lifecycle-mount": true
      }
    },
    "bb73c671-1c1c-32c3-b215-42af65e4f4a9": {
      "content": "clip rect(${1:0} ${2:0} ${3:0} ${0:0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      }
    },
    "bb7a031f-c60d-3a26-8284-dec820131864": {
      "content": "var ${1:margin} = { top: ${2:10}, right: ${3:10}, bottom: ${4:10}, left: ${5:10} };\nvar ${6:width} = ${7:970} - $1.left - $1.right;\nvar ${8:height} = ${9:500} - $1.top - $1.bottom;\n\nvar ${10:svg} = d3.select(\"${11}\").append(\"svg\")\n  .attr(\"width\", $6 + $1.left + $1.right)\n  .attr(\"height\", $8 + $1.top + $1.bottom)\n    .append(\"g\")\n  .attr(\"transform\", \"translate(\" + $1.left + \",\" + $1.top + \")\")",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "marginconvention": true
      }
    },
    "bb7b2a08-e9c6-3e86-a6b5-abf7de573ae2": {
      "content": "else if (${3})\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "bb8833fd-342f-3015-ac1f-01039826091d": {
      "content": "export default class ${1:className} {\n\t$0\n};",
      "doc": "Export default class in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportclass",
      "matches": {
        "base export class": true
      }
    },
    "bb8868e6-e2ed-3ddb-86b6-3f1224896f72": {
      "content": "\\begin{lrbox}\n\t${1:TARGET}\n\\end{lrbox}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{lrbox} \\lrbox": true,
        "lrbox": true
      }
    },
    "bb8ffc34-35ce-3735-8e13-d40f86c65ca0": {
      "content": "expression()",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "bb9235f8-cce5-3916-9156-4fefc303c80d": {
      "content": "cursor: crosshair;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:c": true
      }
    },
    "bba01bdc-7916-3452-a1dd-fecc71f70d8e": {
      "content": "render :update do |${2:page}|\n\t$2.$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (update)",
      "matches": {
        "ru": true
      }
    },
    "bba5ea2a-7f3d-3255-b3ed-7891466334bb": {
      "content": "flex-direction: row;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:r": true
      }
    },
    "bba96cca-04a6-3c9b-bb89-2aa01b03e9b0": {
      "content": "{%- elsif ${1:condition} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elsif-": true
      }
    },
    "bbb161a1-04b1-3dd2-af0e-1427de1b9dc5": {
      "content": "border: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd:n": true
      }
    },
    "bbb2d104-3a55-39dc-954a-f3aa11dc4084": {
      "content": "text-outline: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      }
    },
    "bbb8be3a-9049-3cb7-9698-689f3d040f69": {
      "content": ":last-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":lc": true
      }
    },
    "bbbabefa-9e8b-3993-a010-2d5636786399": {
      "content": "${1:actionName}() {\n\tthis.\\$store.dispatch('${1:actionName}', ${2:payload})\n}",
      "doc": "dispatch to vuex store in methods for action",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-dispatch-vuex-store-in-methods",
      "matches": {
        "vdispatch": true,
        "vue dispatch vuex store in methods": true
      }
    },
    "bbbb94db-e905-3143-9eea-1b77d70fc39d": {
      "content": "@license ${1:MIT}$0",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@license Description",
      "matches": {
        "@li": true
      }
    },
    "bbc777b8-aacf-3d3d-9d99-ece211b21825": {
      "content": "grid-template-rows ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      }
    },
    "bbcca31b-a504-32fa-88f0-ad304333cef9": {
      "content": "font-smooth: always",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:aw": true
      }
    },
    "bbd2c5ca-2877-3e65-a27a-36f873798664": {
      "content": "| slice: ${from:0}, ${to:5} }}",
      "doc": "String filter: slice",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter slice",
      "matches": {
        "slice": true
      }
    },
    "bbd57873-a607-33ab-9be0-4385c742424e": {
      "content": "protected ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "po": true
      }
    },
    "bbdbba6f-25d0-3354-88a4-45b89bd5cc30": {
      "content": "place-content: space-evenly;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:se": true
      }
    },
    "bbea255f-a84b-3cdf-b1d8-31b2d9f99612": {
      "content": "use Carp; # 'verbose';\n# cloak \"die\"\n# warn \"warning\"\n$SIG{'__DIE__'} = sub {\n\trequire Carp; Carp::confess\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug_trace": true
      }
    },
    "bbecf1d2-42b9-3954-8bbf-39b4a01a896c": {
      "content": "vertical-align: top;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "vertical-align: top",
      "matches": {
        "vat": true
      }
    },
    "bc010c23-8cfc-3f05-ab4a-dcb166b95cf8": {
      "content": "${1:map}.catch_all '*${2:anything}', controller: '${3:default}', action: '${4:error}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapca": true
      }
    },
    "bc02c3bd-e5f6-3a23-ba43-4a2f67bb805b": {
      "content": "function ${1:function_name}(${2:argument}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "func2",
      "matches": {
        "function2": true
      }
    },
    "bc04a200-7115-3aaf-af09-a3a9dd8b6c96": {
      "content": "${1:FIELDNAME} = models.GenericIPAddressField($2, protocol=${3:'both'}, unpack_ipv4=${4:False})",
      "doc": "GenericIPAddressField (mimg).\n\nAn IPv4 or IPv6 address, in string format.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mgenericip",
      "matches": {
        "mgenericip": true
      }
    },
    "bc05d6e7-5f22-3028-86a5-98e066ec0c34": {
      "content": "require('dotenv').config({ encoding: '${1:latin1}' })",
      "doc": "You may specify the encoding of your file containing environment variables.",
      "filetype": "dotenv",
      "grammar": "lsp",
      "label": "dotenv-encoding",
      "matches": {
        "dotenv encoding": true
      }
    },
    "bc0bab64-3433-3959-8658-a408e3915a96": {
      "content": "<q>${0}</q>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      }
    },
    "bc135b05-718a-387c-a9df-8e0a145a39ea": {
      "content": "factory '${1:factoryName}', (${2:dependencies}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmfa": true
      }
    },
    "bc184488-b92a-3954-9596-806bb8ab8ec6": {
      "content": "export { ${2:second} } from '${1:first}'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "exportDestructing",
      "matches": {
        "exd": true
      }
    },
    "bc18a655-26ce-320d-a0e1-c7230cec996b": {
      "content": "form_reset(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_reset": true
      }
    },
    "bc19480a-c480-39fa-beea-42c4d9e8e4e7": {
      "content": "textureCube",
      "doc": "vec4 textureCube(samplerCube sampler, vec3 coord)\nvec4 textureCube(samplerCube sampler, vec3 coord, float bias)\n\nThe textureCube function returns a texel, i.e. the (color) value of the texture for the given coordinates. The function has one input parameter of the type samplerCube and one input parameter of the type vec3 : sampler, the uniform the texture is bound to, and coord, the 3-dimensional coordinates of the texel to look up.\n\nThere is an optional third input parameter of the type float: bias. After calculating the appropriate level of detail for a texture with mipmaps the bias is added before the actual texture lookup operation is executed.\n\nSide note: On iOS devices texture lookup functionality is only available in the fragment shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "textureCube",
      "matches": {
        "textureCube": true
      }
    },
    "bc1ba585-40b7-3589-abfe-9c4d18efa142": {
      "content": "| xml_escape }}",
      "doc": "String filter: xml escape",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter xml escape",
      "matches": {
        "xml_escape": true
      }
    },
    "bc22b1bc-2945-389c-ac29-da14f4f37f19": {
      "content": "appear-to-class=\"$1\"$0",
      "doc": "appear-to-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "appear-to-class",
      "matches": {
        "appearToClass": true
      }
    },
    "bc261e43-9845-3c5c-8f76-695134b2b034": {
      "content": "font-family ${0:Georgia,'Times New Roman'},serif",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      }
    },
    "bc27c69c-575e-3bee-bc61-c08f77beae87": {
      "content": "${1:FIELDNAME} = models.BigIntegerField(${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bigint": true
      }
    },
    "bc2caea1-eb8a-3cea-85c5-85214b9f9357": {
      "content": "background-origin ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo": true
      }
    },
    "bc3cff64-5f22-3293-a143-d2853eb29290": {
      "content": "bind:${1|innerWidth,innerHeight,outerWidth,outerHeight,scrollX,scrollY,online|}={${2:variable}}",
      "doc": "svelte:window bind properties",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window-bind",
      "matches": {
        "s-window-bind": true
      }
    },
    "bc4ad32d-46a0-3a55-ad58-82b6cd9a0bb0": {
      "content": "{% regroup $1 by $2 as $3 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "regroup": true
      }
    },
    "bc5cb964-be1c-3601-a481-f460e6dba045": {
      "content": "${1:obj}.keyup(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "kup": true
      }
    },
    "bc5de461-3e5f-33a0-9306-e11ac2a36ab9": {
      "content": "list-style-position outside",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      }
    },
    "bc604270-e825-3480-9a7e-0805acb7589c": {
      "content": "border-right: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "bc6edf17-485d-3c4d-9d78-7dd007332150": {
      "content": "-moz-box-shadow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m": true
      }
    },
    "bc795369-45e8-35ff-9262-faa796d6933d": {
      "content": "if ${1:/* condition */} {\n\t${2:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if condition",
      "matches": {
        "if": true
      }
    },
    "bc80eaac-f42e-3066-940a-c91bbdce0a04": {
      "content": "extlookup(\"${1:variable}\", \"${2:default}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "Extlookup with defaults",
      "matches": {
        "extlookup": true
      }
    },
    "bc819b5a-20d1-3565-ac9b-8b4b020a56cd": {
      "content": "{\n\tpath: '${1:pathName}',\n\tname: '${2:routeName}',\n\tcomponent: () => import('./${3:pathToComponent}'),\n},",
      "doc": "Vue Router route with per route code-splitting",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router Route",
      "matches": {
        "vroute-named": true
      }
    },
    "bc84b221-052c-38f7-a187-44c13198a761": {
      "content": "\\\\frac{d {$1}}{d {$2}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "derivative",
      "matches": {
        "dv": true
      }
    },
    "bc871eb1-27fb-3f54-b735-13255f68d021": {
      "content": "specify { subject.${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spec": true
      }
    },
    "bc87a417-1fb4-3aca-b5c7-7d5c879abb23": {
      "content": "for ${1:rec} in (${2: select}) loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fors": true
      }
    },
    "bc8e3862-ebd4-3207-91eb-2fd456d0291f": {
      "content": "_.trimStart(${string}, ${chars})",
      "doc": "_.trimStart('  abc  ');\n// => 'abc  '\n\n_.trimStart('-_-abc-_-', '_-');\n// => 'abc-_-'\n\nRemoves leading whitespace or specified characters from `string`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-trimstart",
      "matches": {
        "lodash trimstart": true
      }
    },
    "bc9343c9-2fb3-3c7a-99fc-7a451c9856ea": {
      "content": "\\begin{block}{${1:#:title}}\n\t${2:TARGET}\n\\end{block}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{block}": true,
        "block": true
      }
    },
    "bc96e899-1c28-3f40-bcf6-04e52cfcea14": {
      "content": "else {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "bc9e14f2-01c7-3d7a-9a7f-16d30027fa9f": {
      "content": "function ${1:void} ${2:name}(${3});\n\t${0}\nendfunction: $2",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "bc9e6c2d-33f2-35dd-a6f5-c0693354c4e7": {
      "content": "text-justify: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      }
    },
    "bca0b76c-b0e9-3c28-a3b1-6e16f78641f2": {
      "content": "process.stdout",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stdout": true
      }
    },
    "bca3958c-0149-398d-aa9c-3db27b0114f4": {
      "content": "const (\n\t${1:NAME} ${2:Type} = iota\n\t${0}\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "const ( ... = iota )",
      "matches": {
        "iota": true
      }
    },
    "bcaa5eb5-124f-3bc1-9ca9-5b705f14095c": {
      "content": "const ${1:store} = tweened(${2:value}, ${3:options});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tweened",
      "matches": {
        "svelte tweened": true,
        "svtw": true
      }
    },
    "bcaf16b7-48d3-3689-a994-1928cdddff9c": {
      "content": "border-fit: scale",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      }
    },
    "bcb7ee8a-ac20-33ef-b8d1-cb4c6a88b7ba": {
      "content": "xhr :put, :${1:update}, id: ${2:1}, ${3:object}: ${4:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xput": true
      }
    },
    "bcc04018-c371-31a0-bc08-e8212ad8eaa8": {
      "content": ".. toctree::\n\t:maxdepth: ${1:2}\n\n\t${2:#:FILES}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_toctree",
      "matches": {
        "toctree": true
      }
    },
    "bcc3d738-20c9-3b9e-b277-4d355c47de88": {
      "content": "on:${1|introstart,introend,outrostart,outroend|}=\"{() => status = '${1|introstart,introend,outrostart,outroend|}'}\"",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-transition-events",
      "matches": {
        "svelte transition events": true,
        "svte": true
      }
    },
    "bcc44231-8b8d-306a-aef5-dbe15b8e6c40": {
      "content": "animation-timing-function: ${1|linear,ease,ease-in-out,ease-in,ease-out,step-start,step-end,steps,cubic-bezier|};",
      "doc": "initial value: ease",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-timing-function",
      "matches": {
        "anitf": true
      }
    },
    "bcc6b1cb-c626-35d8-ae87-14ffbd505e19": {
      "content": "<keep-alive$1>\n$2\n</keep-alive>$0",
      "doc": "keep-alive element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "keep-alive",
      "matches": {
        "keepAlive": true
      }
    },
    "bccb93e3-0c7f-3767-bba4-77db3fc00bae": {
      "content": "font-weight: ${0:bold};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-weight",
      "matches": {
        "fw": true
      }
    },
    "bcd2e9df-4e8b-3324-a871-4a437adcfaa0": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2:error}\n\t${3}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "bcd81ff3-cd9d-3098-b3e6-d08565679b04": {
      "content": "{% requirePermission \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig requirepermission",
      "matches": {
        "requirepermission": true
      }
    },
    "bce66c10-a77f-3388-b318-3334b3493e7a": {
      "content": "${1:obj}.nextAll('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nexta": true
      }
    },
    "bced2bc7-73b7-34a2-b921-2dff428c8016": {
      "content": ":only-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":oc": true
      }
    },
    "bcef16d3-6c9d-304a-bce2-5b1e2b67d841": {
      "content": "loadMovie(${1:url}, ${2:target}, ${3:method});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lm": true
      }
    },
    "bcf0d278-019d-3378-b502-f6032b52944f": {
      "content": "t.boolean :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create boolean column",
      "matches": {
        "tcb": true
      }
    },
    "bcf356a9-e2e7-3740-85d3-07702ace8a80": {
      "content": "methods: {\n\tbeforeEnter(el) {\n\t\tconsole.log('beforeEnter');\n\t},\n\tenter(el, done) {\n\t\tconsole.log('enter');\n\t\tdone();\n\t},\n\tafterEnter(el) {\n\t\tconsole.log('afterEnter');\n\t},\n\tenterCancelled(el, done) {\n\t\tconsole.log('enterCancelled');\n\t},\n\tbeforeLeave(el) {\n\t\tconsole.log('beforeLeave');\n\t},\n\tleave(el, done) {\n\t\tconsole.log('leave');\n\t\tdone();\n\t},\n\tafterLeave(el) {\n\t\tconsole.log('afterLeave');\n\t},\n\tleaveCancelled(el, done) {\n\t\tconsole.log('leaveCancelled');\n\t}\n}",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vanim:js:method": true
      }
    },
    "bcf36605-7fc5-375d-b712-5e5386c26bd5": {
      "content": "{{- if .Values.$1.enabled }}\napiVersion: extensions/v1beta1\nkind: Deployment\nmetadata:\n  labels:\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"$2.$1.fullname\" . }}\nspec:\n  replicas: {{ .Values.$1.replicaCount }}\n  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}\n  template:\n\tmetadata:\n\t{{- if .Values.$1.podAnnotations }}\n\t  annotations:\n{{ toYaml .Values.$1.podAnnotations | indent 8 }}\n\t{{- end }}\n\t  labels:\n\t\tapp: {{ template \"$2.name\" . }}\n\t\tcomponent: \"{{ .Values.$1.name }}\"\n\t\trelease: {{ .Release.Name }}\n\t\t{{- if .Values.$1.podLabels }}\n{{ toYaml .Values.$1.podLabels | indent 8 }}\n\t\t{{- end }}\n\tspec:\n\t  {{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n\t  containers:\n\t\t- name: {{ template \"${2:chartName}.name\" . }}-{{ .Values.$1.name }}\n\t\t  image: \"{{ .Values.$1.image.repository }}:{{ .Values.$1.image.tag }}\"\n\t\t  imagePullPolicy: \"{{ .Values.$1.image.pullPolicy }}\"\n\t\t  args:\n\t\t  {{- range $key, $value := .Values.$1.extraArgs }}\n\t\t\t{{- if $value }}\n\t\t\t- --{{ $key }}={{ $value }}\n\t\t\t{{- else }}\n\t\t\t- --{{ $key }}\n\t\t\t{{- end }}\n\t\t  {{- end }}\n\t\t  livenessProbe:\n\t\t\thttpGet:\n\t\t\t  path: /healthz\n\t\t\t  port: 8080\n\t\t\t  scheme: HTTP\n\t\t\tinitialDelaySeconds: 30\n\t\t\ttimeoutSeconds: 5\n\t\t  ports:\n\t\t\t- name: http\n\t\t\t  containerPort: 8080\n\t\t\t  protocol: TCP\n\t\t  resources:\n{{ toYaml .Values.$1.resources | indent 12 }}\n\t{{- if .Values.$1.nodeSelector }}\n\t  nodeSelector:\n{{ toYaml .Values.$1.nodeSelector | indent 8 }}\n\t{{- end }}\n\t{{- if .Values.$1.tolerations }}\n\t  tolerations:\n{{ toYaml .Values.$1.tolerations | indent 8 }}\n\t{{- end }}\n\t{{- if .Values.$1.affinity }}\n\t  affinity:\n{{ toYaml .Values.${1:value_key}.affinity | indent 8 }}\n\t{{- end }}\n\t  terminationGracePeriodSeconds: 60\n{{- end }}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deploy_sample_spec": true
      }
    },
    "bcf57e5b-b36e-3f05-b856-0fd65b7a6660": {
      "content": "justify-self: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      }
    },
    "bcfb694c-8ddc-313f-a10a-c5fe4a4a222d": {
      "content": "border-corner-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:n": true
      }
    },
    "bcfdcf95-45cc-3f0d-9b6a-bad61142a163": {
      "content": "componentWillReceiveProps (nextProps) {\n\t$0\n}",
      "doc": "Invoked when a component is receiving new props. This method is not called for the initial render.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentWillReceiveProps",
      "matches": {
        "cwr": true
      }
    },
    "bcff2d2d-4096-3209-80df-5e5ca4cf7ea7": {
      "content": "import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor(private httpClient: HttpClient) { }\n\t$0\n}",
      "doc": "Angular service with HttpClient",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-httpclient-service",
      "matches": {
        "a-service-httpclient": true,
        "angular http client service": true
      }
    },
    "bd036c9d-1f8c-3de9-a210-b4b127c352c4": {
      "content": "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform float u_time;\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\n\nvoid main(){\n\tvec2 coord = gl_FragCoord.xy;\n\tvec3 color = vec3(0.0);\n\n\tgl_FragColor = vec4(color, 1.0);\n}",
      "doc": "Starter code including 'ifdef' check, u_ methods & the main",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "simple setup",
      "matches": {
        "simple setup": true
      }
    },
    "bd05e6e3-c857-3102-8568-3fbe4e6bbabc": {
      "content": "<div v-for=\"${1:item} in ${2:items}\" :key=\"$1.id\">\n\t{{ $1 }}\n</div>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vfor": true
      }
    },
    "bd15310c-4b7e-3c22-bf12-edc1cfb8aeee": {
      "content": "${1:FIELDNAME} = models.ForeignKey(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${0:, to_field=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fk": true
      }
    },
    "bd15926b-af58-3bbd-a8ec-4fc9d73e3214": {
      "content": "this->assertArrayNotHasKey(${1:$key}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArrayNotHasKey($key, $array)",
      "matches": {
        "asnhk": true
      }
    },
    "bd1ac19e-16b6-3520-a4f2-813db09b9340": {
      "content": "print($1)",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "Print messages to console",
      "matches": {
        "pr": true
      }
    },
    "bd1d0d99-eb0d-31e1-8481-1e79740548eb": {
      "content": "${1:deferred}.state()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dstate": true
      }
    },
    "bd2d6b58-9104-3e8a-a205-5e4b62cbdb53": {
      "content": "unique(${1:x}, ${2:incomparables = ${3:FALSE}}, ${4:...})",
      "doc": "Unique",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "uni",
      "matches": {
        "unique": true
      }
    },
    "bd2e6fe4-6d66-3ad8-85ac-2c848910fa14": {
      "content": "word-break: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:n": true
      }
    },
    "bd2efa67-06bc-3d8a-b9c7-5fc99c5789f5": {
      "content": "use Symfony\\Component\\HttpFoundation\\Response;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Response",
      "matches": {
        "useresponse": true
      }
    },
    "bd318e7f-43ac-3ead-8ac5-b3191929fb5e": {
      "content": "switch (${1:expr}) {\n\tcase ${2:value}:\n\t\treturn $0;\n\tdefault:\n\t\treturn;\n}",
      "doc": "switch case",
      "filetype": "base",
      "grammar": "lsp",
      "label": "switch-case",
      "matches": {
        "base switch case": true
      }
    },
    "bd32dffc-ddfa-3a23-a46b-a60b4426ac43": {
      "content": "### ${0}",
      "doc": "Add header level 3",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 3",
      "matches": {
        "h3": true
      }
    },
    "bd3f22ef-d951-39f2-9007-f991443fedb0": {
      "content": "display: inline-block;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      }
    },
    "bd3f7921-b43b-34ac-93c4-de09e9d85710": {
      "content": "tag=\"$1\"$0",
      "doc": "tag=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "tag",
      "matches": {
        "tag": true
      }
    },
    "bd512684-ec16-30bf-9c2f-76369223aad3": {
      "content": "src=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "src": true
      }
    },
    "bd51aee8-54f9-324e-bd28-b020eabcabac": {
      "content": "t.integer :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create integer column",
      "matches": {
        "tci": true
      }
    },
    "bd51e2a3-6a06-3abb-914a-026cdccadc5d": {
      "content": "![${1:#:alt}](${2:#:url} \"${3:#:title}\")${4}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt](url \"title\")",
      "matches": {
        "alturltitle": true
      }
    },
    "bd557f2d-a1cd-3f11-b973-2a79cf07a916": {
      "content": "<h4>$1</h4>$2",
      "doc": "HTML - Defines header 4",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h4",
      "matches": {
        "h4": true
      }
    },
    "bd589644-166d-3eb0-8d39-59beea672c3f": {
      "content": "from IPython import embed; embed()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import ipython..",
      "matches": {
        "ipy": true
      }
    },
    "bd592fee-a476-38f2-b5f9-c05a6617cacb": {
      "content": "${1:document}.querySelector('${2:selector}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "querySelector",
      "matches": {
        "qs": true
      }
    },
    "bd5e8575-436a-356e-b1a1-ec20d5ffba5f": {
      "content": "overflow-x: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:h": true
      }
    },
    "bd5f28e5-a796-3777-af74-28613a0b93c7": {
      "content": "display: inline-table;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:itb": true
      }
    },
    "bd60aafb-4872-372d-9b5a-b45010e6e9fb": {
      "content": "print(\"${1}\")\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "print",
      "matches": {
        "pr": true
      }
    },
    "bd64a512-3766-3b22-951a-9b21e728599f": {
      "content": "-webkit-border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz:w": true
      }
    },
    "bd6b61bc-0ea4-3ed5-9e6f-06687a0c704a": {
      "content": "animation: ${1:name} ${2:1s} ${3|linear,ease-in-out,ease,ease-in,ease-out,step-start,step-end,steps,cubic-bezier|};",
      "doc": "animation: name duration timing-function delay direction count fill-mode play-state",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation",
      "matches": {
        "ani": true
      }
    },
    "bd749c9a-4da8-3ec7-90e5-819058e09f96": {
      "content": "| img_url: '${1:medium}'",
      "doc": "URL filter: img url",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter img url",
      "matches": {
        "img_url": true
      }
    },
    "bd7e2c3f-5574-36b9-8975-152fff56bd20": {
      "content": "static void Main(string[] args)\n{\n    $0\n}",
      "doc": "void Main()",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "svm",
      "matches": {
        "svm": true
      }
    },
    "bd815b56-1c03-3887-a27e-b571e62e0cf6": {
      "content": "word-spacing: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "word-spacing": true,
        "ws": true
      }
    },
    "bd818dbc-dd84-3814-9744-c6dbac886da3": {
      "content": "componentDidUpdate (prevProps, prevState) {\n\t$0\n}",
      "doc": "Invoked immediately after the component's updates are flushed to the DOM.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      }
    },
    "bd81de22-0a65-31e6-ad75-cea6c525e0be": {
      "content": "{% for ${1:item} in ${2} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "bd83cc41-efaf-3d84-ace9-90bc7bbd2519": {
      "content": "delegate :${1:methods}, to: :${2:object}, prefix: :${3:prefix}, allow_nil: ${0:allow_nil}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "delegate .. to .. prefix .. allow_nil",
      "matches": {
        "dele": true
      }
    },
    "bd860d2c-5c5c-3522-9993-89790bcb3066": {
      "content": "\\subparagraph{${1}}\n${0:TARGET}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\subparagraph": true,
        "subparagraph \\subparagraph{": true
      }
    },
    "bd8713b9-5931-37cd-95ca-60849b9dc755": {
      "content": "function ${1} return ${2} is\n\t(${3});${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "expression function",
      "matches": {
        "function_expr": true
      }
    },
    "bd8b7d6f-df96-34a2-94e7-38c4e8659aa9": {
      "content": "for (int ${1:i} = 0; ${1:i} < ${2:length}; ${1:i}++)\n{\n    $0\n}",
      "doc": "for loop",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "for loop",
      "matches": {
        "for": true
      }
    },
    "bd8f6ffd-a900-3df2-99bb-59c1fe37751e": {
      "content": "function national-of(${1:alphanumeric-string},${2:replacement-char})$0",
      "doc": "convert alphanumeric-string to the national coded character set representation",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-national-of",
      "matches": {
        "function national-of": true
      }
    },
    "bd911ca3-2faa-3b21-8efc-a6c6417df0fc": {
      "content": "{% extends \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "extends",
      "matches": {
        "extends": true
      }
    },
    "bd91e7ad-f8ac-3606-918a-83b48143b1d7": {
      "content": "io:format(\"${1:~w~n}\"${2:, []})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ioformat": true
      }
    },
    "bd9ad64a-2c9b-33cd-bd80-8c33449d4d08": {
      "content": "${1:obj}.val('${2:text}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      }
    },
    "bda76e70-08bb-3179-a656-fe530279a565": {
      "content": "if (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "bda83318-2977-3f06-899c-6ccc4e9cbb1d": {
      "content": "CONSTRAINT ${1:attribute} PRIMARY KEY(${2:attribute(s)})",
      "doc": "Constraint rimary Key",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "primarykc",
      "matches": {
        "primarykc": true
      }
    },
    "bda98994-bd20-36ae-b641-45ccd024ab6e": {
      "content": "remove_column :${1:table}, :${2:column}${3: [press tab twice to generate add_column]}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Remove and Add Column (mrac)",
      "matches": {
        "mcol": true
      }
    },
    "bdb8441c-8414-3799-96b7-97840515a233": {
      "content": "background-color: #${1:DDD};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-hex (background)",
      "matches": {
        "background": true
      }
    },
    "bdbc903f-be80-371f-96d7-a2cd5ce87735": {
      "content": "add:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "bdbfbb94-98ae-3247-81bf-2d039b645d35": {
      "content": "|> $0",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "pipe char",
      "matches": {
        "p": true
      }
    },
    "bdc561cc-d80e-3c39-82c1-e2e6ad55ea45": {
      "content": "when {\n\tbranch '${1:branch}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenbranch": true
      }
    },
    "bdc71ff5-b13e-311a-8615-b26f26c8635d": {
      "content": "let ${1} = ${2:${VISUAL}} in\n${0}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "bdc9bd53-3527-3acd-a10c-7b9e43014bc9": {
      "content": "isset($${1:array}[${2:key}])$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "isset array",
      "matches": {
        "isa": true
      }
    },
    "bdd8e3c1-81b7-3ac5-8546-5f9303820c29": {
      "content": "do {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "bde07860-861f-380f-91a3-798ce6ff2a01": {
      "content": "case ${1}\nwhen ${2}\n  ${3}\nelse\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "case ... when ... else ... end",
      "matches": {
        "case": true
      }
    },
    "bde7577d-9862-31dc-ad52-7c7d11c809eb": {
      "content": "import ${0:http}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "bdebdce5-68a6-3c46-bc11-550c8a893d43": {
      "content": "borderBottomWidth: ${1},",
      "doc": "borderBottomWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderBottomWidth",
      "matches": {
        "bor": true
      }
    },
    "bdf16be4-cb58-325c-9302-04e54d055592": {
      "content": "margin-bottom: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      }
    },
    "bdf9c9ff-31dc-3d52-a7c8-b746dd816823": {
      "content": "#include <stdio.h>\n\nint main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard starter template for a C program",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Standard Starter Template",
      "matches": {
        "sst": true
      }
    },
    "bdfc0b61-cdd3-3436-9f01-eb45ea78ad09": {
      "content": "switch ${2:$1 := }${1:v}.(type) {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "type switch x { ... }",
      "matches": {
        "tswitch": true
      }
    },
    "be007f51-a64a-33a0-a217-6749c4aaf8b0": {
      "content": "/*! \\brief ${1:Brief function description here}\n *\n *  ${2:Detailed description of the function}\n *\n * \\param $3 ${4:Parameter description}\n * \\return ${5:Return parameter description}\n */\n${6:void} ${7:function_name}(${8:Type} ${3:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dfun1": true
      }
    },
    "be0213ca-7c28-326f-b101-44740be8ccf0": {
      "content": "${1:https://www.example.org}[${2:Text}]${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "External link",
      "matches": {
        "extlink": true,
        "link": true
      }
    },
    "be02c78e-471f-3644-b7e4-992281f41921": {
      "content": "public class ${1:Hello} {\n  static public void main(String args[]) {\n    System.out.println(\"Hello, world!\");\n  }\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "helloworld": true
      }
    },
    "be03173b-14f2-3bfd-a073-97d42b2dc770": {
      "content": "borderTopWidth: ${1},",
      "doc": "borderTopWidth",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderTopWidth",
      "matches": {
        "bor": true
      }
    },
    "be035727-32cb-3240-83c5-ccd233b56d30": {
      "content": "${1:ptr} = realloc($1, ${2:size} * sizeof(${3:type}));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rlc": true
      }
    },
    "be0fe3aa-cb60-3523-93ee-2015452da2c4": {
      "content": "class ${1:MyClass}\n{\npublic:\n\t$1() = default;\n\t$1($1 &&) = default;\n\t$1(const $1 &) = default;\n\t$1 &operator=($1 &&) = default;\n\t$1 &operator=(const $1 &) = default;\n\t~$1() = default;\n\nprivate:\n\t$2\n};",
      "doc": "Code snippet for class with inline constructor/destructor",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "classi",
      "matches": {
        "classi": true
      }
    },
    "be138cca-6f75-3351-89ed-65fcd1f12e7f": {
      "content": "beforeRouteEnter (to, from, next) {\n\t${1:// ...}\n}",
      "doc": "beforeRouteEnter (to, from, next) { }",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeRouteEnter",
      "matches": {
        "beforeRouteEnter": true
      }
    },
    "be159fca-c132-37e7-b458-976914e99878": {
      "content": "{%- highlight ${lang:javascript} -%}\n\t\t${code:}\n{%- endhighlight -%}",
      "doc": "Syntax tag: highlight",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag highlight",
      "matches": {
        "highlight": true
      }
    },
    "be17be11-a2c4-3c87-bca9-d074ac8bcf89": {
      "content": "_.wrap(${value}, ${wrapper})",
      "doc": "var p = _.wrap(_.escape, function(func, text) {\n  return '<p>' + func(text) + '</p>';\n});\n\np('fred, barney, & pebbles');\n// => '<p>fred, barney, &amp; pebbles</p>'\n\nCreates a function that provides `value` to `wrapper` as its first\nargument. Any additional arguments provided to the function are appended\nto those provided to the `wrapper`. The wrapper is invoked with the `this`\nbinding of the created function.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-wrap",
      "matches": {
        "lodash wrap": true
      }
    },
    "be1e0861-4f41-356a-a6ad-0c66bcb256cb": {
      "content": "(define ${1:name}\n\t(lambda (x)(${0:definition})))",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defl": true
      }
    },
    "be295e6c-fb55-3a1f-9a08-8c0b83ae60f7": {
      "content": "\\\\begin[${1:author}]{${2:thm}}\n\t${0:${VISUAL}}\n\\\\end{$2}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "thm (or arbitrary) environment with optional argument",
      "matches": {
        "thm": true
      }
    },
    "be29663d-94ef-3435-819e-18a748090670": {
      "content": "SELECT ${1:*}\nFROM ${2:table1} ${3:T1}\nJOIN ${4:table2} ${5:T2}\nON T1.${6:column1} = T2.${7:column2}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "SELECT * FROM T1 JOIN T2 ... ON",
      "matches": {
        "SELECT_JOIN_DATA": true
      }
    },
    "be39a3e6-884d-38dc-b97a-8cc9e74e52c9": {
      "content": "content: attr(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      }
    },
    "be42422b-78e1-3c5a-aba4-aaf721bd38f2": {
      "content": "| ${1:Column1}   | ${2:Column2}    |\n|--------------- | --------------- |\n| ${3:Item1.1}   | ${4:Item2.1}   |\n${0}",
      "doc": "Insert table with 2 rows and 2 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 2x2 table",
      "matches": {
        "2x2table": true
      }
    },
    "be484dba-834e-3421-a6ff-daaec8397170": {
      "content": "$this->${1:method}()->shouldNotHaveKeyWithValue(${2:'key'}, ${3:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveKeyWithValue('key', 'value')",
      "matches": {
        "snkeyvalue": true
      }
    },
    "be4b47ff-f9ab-370d-bf43-73da28a392d5": {
      "content": "INTEGER",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "int": true
      }
    },
    "be4be5ec-44a2-32f8-a2e1-f1840e71140a": {
      "content": "printf(\"${1:%s}\\n\"${2});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "be4f3ae8-e563-3b9d-943a-1cf414437941": {
      "content": "import { Component, PropTypes } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n${1}.propTypes = {\n\n}\n\nexport default ${1}",
      "doc": "Creates a React component class with PropTypes",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactClassCompomentPropTypes",
      "matches": {
        "rccp": true
      }
    },
    "be52393f-abb8-3610-92ed-c2327a1d5864": {
      "content": "int main(int argc, char* argv[])\n{\n\t${0:TARGET}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "be5891be-72df-3210-a387-c25c30889a77": {
      "content": "public ${1:int} ${2} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+|": true
      }
    },
    "be594489-3cfb-3021-a5db-05dd3578b6e2": {
      "content": "<?php\n${1:TARGET}\n/* End of file ${2:filename}.php */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "php": true
      }
    },
    "be5d4040-4872-326e-8f14-bb8df3317a4c": {
      "content": "outline-color: invert;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc:i": true
      }
    },
    "be655fbe-e3f5-37ce-b512-1c07dceb193f": {
      "content": "from django import forms",
      "doc": "from ... import forms",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "iforms",
      "matches": {
        "iforms": true
      }
    },
    "be67ef6e-888b-320e-a8d5-cec543e4bbb4": {
      "content": "<{ \"${Message}\" }>",
      "doc": "HTML Expressions allows inserting data into HTML elements or components.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "HTML Expressions",
      "matches": {
        "exp": true
      }
    },
    "be6a3720-a935-31e1-8c8f-e320b0a5e4d9": {
      "content": "border-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      }
    },
    "be6b5a73-0f65-3367-adc4-8e57ff3d35b7": {
      "content": "has_one :${0:object}",
      "doc": "has_one association",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Has one",
      "matches": {
        "ho": true
      }
    },
    "be6c3f8b-4f56-34cb-b7b3-79d57a13b80e": {
      "content": "GridView.extent(\n  maxCrossAxisExtent:  ${1:2},\n  children: <Widget> [\n    ${2:}\n  ],\n),",
      "doc": "Creates a scrollable, 2D array of widgets with tiles that each have a maximum cross-axis extent.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "GridView.Extent",
      "matches": {
        "gridViewE": true
      }
    },
    "be6d1f14-2314-3279-b3fb-b82e16cdad36": {
      "content": "${1:obj}.mousemove(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mmove": true
      }
    },
    "be6df3c2-1fe1-38ad-a6cb-525d6645cd90": {
      "content": "for ${1:key}, ${2:value} of ${3:object}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foro": true
      }
    },
    "be75bbdd-9cda-397d-8678-01ade909e38d": {
      "content": "each_line do |${1:line}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eald": true
      }
    },
    "be7a5667-965c-3193-b4b9-d14ae7c6772f": {
      "content": "foreach (${3:var} ${2:item} in ${1:items})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "foreach loop",
      "matches": {
        "foreach": true
      }
    },
    "be82552b-684a-3366-8ea9-9a8c9d447a39": {
      "content": "cursor auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:a": true
      }
    },
    "be86d417-85b1-3c82-8769-5648ce378353": {
      "content": "wont_be_nil",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wbn": true
      }
    },
    "be8c31ff-79a7-3f83-bab9-c0349726b5ae": {
      "content": "<#list ${1:hashmap}?keys as ${2:key}>\n\t\\${$2\\}: \\${$1[$2]\\}${0:${VISUAL}}\n</#list>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#list hashmap?keys as element>...</#list>",
      "matches": {
        "lish": true
      }
    },
    "bea42eee-0839-3663-afc6-53a8bf878f72": {
      "content": "**${1:bold}**",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "**": true
      }
    },
    "bea71269-dbb6-3dbb-8c1c-e34f0a6c55a7": {
      "content": "init {\n\t$0\n}",
      "doc": "Snippet for init block",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "init",
      "matches": {
        "init": true
      }
    },
    "beab4820-6c28-3555-9555-ad1e35467865": {
      "content": "| sort",
      "doc": "Array filter: sort",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter sort",
      "matches": {
        "sort": true
      }
    },
    "beb169ec-3923-3afe-95a8-7bed7be66b8a": {
      "content": "align-items: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      }
    },
    "beb662c1-2050-3b6a-8646-0b82e1ac1f9d": {
      "content": "finally {\n\t$1\n}",
      "doc": "Snippet for finally block",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "finally",
      "matches": {
        "finally": true
      }
    },
    "beba7da5-a975-3d2b-8af1-ef86f7d94520": {
      "content": "class ${1:ExampleCase}(unittest.TestCase):\n\n\tdef test_${2:description}(self):\n\t\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testcase": true
      }
    },
    "bed45eec-329c-3b44-b7dd-65aeba6052f7": {
      "content": "<pre>{{${1:model} | json}}</pre>$0",
      "doc": "Angular pre debug | json",
      "filetype": "html",
      "grammar": "lsp",
      "label": "pre w/ json",
      "matches": {
        "a-prej": true
      }
    },
    "bed5d090-1bbb-3607-ac11-0e7977792fd3": {
      "content": "\\$_FILES['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "files": true
      }
    },
    "beddca07-c5e2-354f-9469-d980607f874f": {
      "content": "PropTypes.objectOf($0).isRequired,",
      "doc": "An object with property values of a certain type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeObjectOfRequired",
      "matches": {
        "ptoor": true
      }
    },
    "bee2001f-d9be-3447-8311-a29e80dcc272": {
      "content": "|> (fn x -> require IEx; IEx.pry; x end).()${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ppry": true
      }
    },
    "bee40aa4-53fc-3a9f-b2ea-73f3443e1484": {
      "content": "<meter>${0}</meter>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meter": true
      }
    },
    "bee5f786-3bfe-3293-9895-4007350e51bd": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}; trackBy:${1:item}.id\"${0}",
      "doc": "Angular *ngFor with trackBy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngfor-with-trackby",
      "matches": {
        "a-ngfor-trackby": true,
        "angular ng for with track by": true
      }
    },
    "bee6cfd4-fcc4-39e4-b44e-c880b3d289ca": {
      "content": "_.cloneDeep(${value})",
      "doc": "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar deep = _.cloneDeep(objects);\nconsole.log(deep[0] === objects[0]);\n// => false\n\nThis method is like `_.clone` except that it recursively clones `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clonedeep",
      "matches": {
        "lodash clonedeep": true
      }
    },
    "beef89d8-572c-312d-9919-d59446f2a711": {
      "content": "#!/usr/bin/env rdmd",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rdmd": true
      }
    },
    "bef632ad-3770-31e7-959c-2738ec9e19ba": {
      "content": "@media ${1:screen}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@m": true
      }
    },
    "befce59a-c7e6-3588-8a31-23e1802c6f19": {
      "content": "{% tablerow ${1:item} in ${2:collection} cols: ${3:2} %}\n\t${0}\n{% endtablerow %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tablerow": true
      }
    },
    "befdb3c7-eb66-32c2-844f-d0b4d45d379d": {
      "content": "(defmulti ${1:name} \"${2:doc-string}\" ${0:dispatch-fn})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defmm": true
      }
    },
    "bf078fb7-0e72-3ce1-9902-220beb2924c8": {
      "content": "int main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard main function for a C program",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Main function template",
      "matches": {
        "main": true
      }
    },
    "bf09d1d1-2ec1-3f95-ab40-f6a578f56889": {
      "content": "${1:int}[] ${2:numbers}${3: = new $1}[${0:length}];",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "array": true
      }
    },
    "bf0e10bd-ec45-3507-96bf-531834ba661b": {
      "content": "<pre>{{${1:model} | async | json}}</pre>$0",
      "doc": "Angular pre debug | async | json",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "pre-w-async-json",
      "matches": {
        "a-preja": true,
        "angular pre async json": true
      }
    },
    "bf0f52b6-fd1c-309d-8631-e15764836ae0": {
      "content": "grid-auto-flow row",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:r": true
      }
    },
    "bf143856-1f7c-34be-9f72-293702ec5448": {
      "content": "static defaultProps = {\n\t${1}: ${2}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "static defaultProps",
      "matches": {
        "sdp": true
      }
    },
    "bf1a04d6-47d1-34f8-a06b-3f43d21b157f": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nfinally:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Finally",
      "matches": {
        "tryf": true
      }
    },
    "bf1ab5d3-038e-3207-9177-b08f8ba71a1d": {
      "content": "elif [[ ${1:condition} ]]; then\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "bf1af5c8-df13-3339-b082-22b9bdc2a3d5": {
      "content": "import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE}}() {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({})",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeFunctionalComponentWithStyles",
      "matches": {
        "rnfs": true
      }
    },
    "bf1b41b4-c6bb-35c9-9625-6b75f4abe0c1": {
      "content": "${1:dfname} <- data.frame(${2:varlist})",
      "doc": "Create a data frame from vectors",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Data frame",
      "matches": {
        "dfv": true
      }
    },
    "bf211041-cc69-3cda-b72d-49a5fb656797": {
      "content": "width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true,
        "width": true
      }
    },
    "bf2178bd-809b-3b22-a3fd-d449f35de000": {
      "content": "ElseIf ${1:condition} Then\n\t${0:; True code}",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "bf241317-3052-348d-9672-56a87ddb540f": {
      "content": "{% switch ${1:variable} %}\n\n\t{% case \"${2:value1}\" %}\n\t\n\n\t{% case \"${3:value2}\" %}\n\t\n\n\t{% default %}\n\t\n\n{% endswitch %}\n$0",
      "doc": "switch",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "bf274d7f-e238-30cf-98e9-79e924f0fdde": {
      "content": "case class ${1:name}${2:(arg)}${3: extends }${4: with} ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "casecl": true
      }
    },
    "bf2d1631-e8b0-3a51-82f4-82bdfcf877f5": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      }
    },
    "bf2ebfe3-b76b-3337-a603-d465028703f0": {
      "content": "afterEach ->\n\t$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "after each (coffee)",
      "matches": {
        "aft": true
      }
    },
    "bf3285e4-a1af-36a4-a561-d955f447c01c": {
      "content": "${1:#:action} unless ${2:#:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      }
    },
    "bf3e4cc6-2d28-3a1c-93c0-512f15b1575a": {
      "content": "scoped_by_${1:attribute}(${2:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scoped_by",
      "matches": {
        "sb": true
      }
    },
    "bf4731a9-98dc-3856-ae19-fe0188bf8cb3": {
      "content": "border-right: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr:n": true
      }
    },
    "bf4f7d6b-ea67-36e2-b1bf-14eda65b2a5a": {
      "content": "splice(${1:array}, ${2:value/array2}, ${0:index});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "splice": true
      }
    },
    "bf5aa3fe-18ef-3669-8880-faca8ba9e752": {
      "content": "${1:component}.$on(${2:eventname}, ${3:handler});",
      "doc": "svelte component api $on",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-on",
      "matches": {
        "s-component-on": true
      }
    },
    "bf5e970e-7d6a-3b2d-8d69-f4749a8676b0": {
      "content": "if (${1}) begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "bf5eac71-eb6b-39bc-a472-d8080275dca9": {
      "content": "{% block ${1} %}\n\t${0}\n{% endblock %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      }
    },
    "bf5f32bb-0c04-3aba-abbc-2032c117cf31": {
      "content": "content: counters(${0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:cs": true
      }
    },
    "bf67939a-854a-3c13-baa5-98f9e97945e5": {
      "content": "{\n\t\"name\": \"Launch Angular\",\n\t\"type\": \"${1:edge}\",\n\t\"version\": \"${2:dev}\",\n\t\"request\": \"launch\",\n\t\"preLaunchTask\": \"${3:npm: start}\",\n\t\"url\": \"http://localhost:${4:4200}/\",\n\t\"webRoot\": \"${5:\\${workspaceFolder\\}}\"\n}",
      "doc": "",
      "filetype": "jsonc",
      "grammar": "lsp",
      "label": "Create launch config for Edge",
      "matches": {
        "a-launch-edge": true
      }
    },
    "bf6b05ab-0c47-3f48-b47d-95bf687f2ad5": {
      "content": "display: flex;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:f": true
      }
    },
    "bf6d6db5-d470-39b3-8749-89f066f083eb": {
      "content": "<VirtualHost ${1:example.org}>\n\tServerAdmin webmaster@${1}\n\tDocumentRoot /www/vhosts/${1}\n\tServerName ${1}\n\tErrorLog logs/${1}-error_log\n\tCustomLog logs/${1}-access_log common\n</VirtualHost>",
      "doc": "",
      "filetype": "apache",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vhost": true
      }
    },
    "bf722837-a3ee-3c1f-9d98-fb827f399b51": {
      "content": "router-view $0",
      "doc": "router-view element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "routerView",
      "matches": {
        "routerView": true
      }
    },
    "bf82bb9a-46dc-3722-b187-8b107b18edda": {
      "content": "mounted () {\n\t${0};\n},",
      "doc": "mounted lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle mounted",
      "matches": {
        "vmounted": true
      }
    },
    "bf86397f-2f3b-30d0-8bea-eff6526dd39c": {
      "content": "*$0*",
      "doc": "bold words",
      "filetype": "norg",
      "grammar": "lsp",
      "label": "bold",
      "matches": {
        "bold": true
      }
    },
    "bf885ba3-8785-3fcf-a856-26e542e66b13": {
      "content": "PropTypes.element,",
      "doc": "React element prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-element",
      "matches": {
        "prop-types element": true,
        "ptel": true
      }
    },
    "bf8d826e-32c8-3814-931d-f53d64916494": {
      "content": "// set the current texture coordinates - 2 floats\ngl.glTexCoord2f(${1:0.0f}, ${0:0.0f});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl tex coord 2f",
      "matches": {
        "gl": true
      }
    },
    "bf9012bd-7394-32c1-b259-3e2f706791af": {
      "content": "if ( ${1:condition} )",
      "doc": "if (single line)",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "bf9229cd-d8ec-317b-ad1e-92336cdef45e": {
      "content": "(${1:key} for ${2:value} in ${3:iterable} if ${4:condition})$0",
      "doc": "Create a generator based on existing iterables, with condition if statement.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "Generator comprehension if filter",
      "matches": {
        "gci": true
      }
    },
    "bf991948-0b14-326e-b7cd-6bfa8236d638": {
      "content": "function log(${1:number})$0",
      "doc": "format base e logarithm of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-log",
      "matches": {
        "function log": true
      }
    },
    "bfa881f4-9d6a-326e-9090-b8883a53f46f": {
      "content": "word-break: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob": true
      }
    },
    "bfaad0f0-fdc8-39b0-abf2-2f46f69b2e3c": {
      "content": "craft.app.request.getQueryParam(${1:\"queryStringName\"})\n$0",
      "doc": "request getQueryParam",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "getqueryparam",
      "matches": {
        "getqueryparam": true
      }
    },
    "bfaefe0f-43da-31b8-b8ea-1b8d86f7a715": {
      "content": "import React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-component",
      "matches": {
        "rcc": true,
        "react component class": true
      }
    },
    "bfcb3384-0d33-3422-ae5d-990d1a6206de": {
      "content": "v-once",
      "doc": "Does not expect expression",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-once",
      "matches": {
        "vonce": true,
        "vue v-once": true
      }
    },
    "bfe144c7-c1ef-377e-9062-47605961a80b": {
      "content": "${1:FIELDNAME} = models.BigIntegerField($2)",
      "doc": "BigIntegerField (mbigint).\n\nA 64-bit integer, much like an IntegerField.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mbigint",
      "matches": {
        "mbigint": true
      }
    },
    "bfea964d-a4bc-360b-8002-28a90d12d893": {
      "content": "\\${4:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:#optional}",
      "matches": {
        "4#": true
      }
    },
    "bfeb0fe0-077a-36c2-aa8f-0986751ce1ff": {
      "content": "${1:expression} foreach @${2:array};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "bfee593f-149f-338f-a4f1-cb713441421f": {
      "content": "<form>\n\t$1\n</form>",
      "doc": "HTML - Defines a form",
      "filetype": "html",
      "grammar": "lsp",
      "label": "form",
      "matches": {
        "form": true
      }
    },
    "bff157cf-f2fe-3798-a784-8ab186715ed9": {
      "content": "module ${1} =\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "bff38218-d693-375d-809b-9dc8f71faa1e": {
      "content": "@function ${1:name}(${2:args}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "bff6aeca-3c8b-3f73-a1c1-2fb78e7adfee": {
      "content": "align-content: end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:e": true
      }
    },
    "bff947e3-d07f-3731-beb8-8e5c9a8fa831": {
      "content": "white-space-collapse break-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      }
    },
    "bfff6877-a262-3915-b43e-3c36d44ad8eb": {
      "content": "text-emphasis disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ds": true
      }
    },
    "c00864a7-a459-3692-af15-e2af15cd6bbd": {
      "content": "function concatenate(${1:string1},${2:string2})$0",
      "doc": "function concatenates the string1.. string2 into a single string result",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-concatenate",
      "matches": {
        "function concatenate": true
      }
    },
    "c0098829-3012-320c-9396-be704ec0f219": {
      "content": "border-right-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      }
    },
    "c00a0b90-27b3-3f30-9509-059a7b29092f": {
      "content": "<% elsif ${1:truevalue} %>",
      "doc": "elsif",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "elsif",
      "matches": {
        "elsif": true
      }
    },
    "c0105bed-fbf8-3168-aa55-0b5e7d4cc9ee": {
      "content": "{% autoescape ${1:#:strategy} %}\n\t${0:TARGET}\n{% autoescape %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% autoescape ... %} ... {% endautoescape %}",
      "matches": {
        "autoescape": true
      }
    },
    "c01134c6-bda2-3cb2-ad0f-98d5887ec906": {
      "content": ".. list-table:: ${1:Title}\n\t:header-rows: 1\n\t:stub-columns: 0\n\n\t* - ${0:R1C1}\n\t  - R1C2\n\t* - R2C1\n\t  - R2C2",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:": true
      }
    },
    "c014bd90-5bdb-36f0-8eae-9a1d7f229489": {
      "content": "display: inline-block",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ib": true
      }
    },
    "c0162419-a106-38fe-aa46-a606c7d3144c": {
      "content": "overflow-x: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      }
    },
    "c018512b-2506-3515-87b4-b69a93957eba": {
      "content": "${1:classNames}('${2:foo}', '${3:bar}');",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-usage",
      "matches": {
        "classnames usage": true
      }
    },
    "c0245a27-a1f6-3621-99b7-57608e541bfb": {
      "content": "font-stretch: ultra-condensed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:uc": true
      }
    },
    "c02d9dce-c590-3f13-9001-584aeb5f8e08": {
      "content": "\\\\{ ${0} \\\\}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\{ \\}",
      "matches": {
        "\\{": true
      }
    },
    "c02df01e-9dff-3c6c-b069-dce5d329980e": {
      "content": "allocate(${1:array}, stat=${2:err})\nif ($2 /= 0) print *, \"$1: Allocation request denied\"",
      "doc": "Allocate Array",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "al",
      "matches": {
        "al": true
      }
    },
    "c0344ab2-8912-3279-acab-a21421b4d707": {
      "content": "<svelte:window />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window",
      "matches": {
        "svelte window": true,
        "svw": true
      }
    },
    "c0356e9e-87bd-30df-8437-8472de2f5b84": {
      "content": "if ${1:#:condition} {\n    ${2:TARGET}\n} else {\n    ${3}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifelse": true
      }
    },
    "c03705cd-3f70-38e0-b93f-bb4710cd277f": {
      "content": "FUNCTION NUMVAL(${1:string})$0",
      "doc": "corresponding numeric value for string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-NUMVAL",
      "matches": {
        "FUNCTION NUMVAL": true
      }
    },
    "c03cb265-c513-3284-9a11-a5bb82911320": {
      "content": "${1:obj}.filter (${2:index}) ->\n\t${3}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtert": true
      }
    },
    "c0402a64-0413-3d24-9812-c747522b831d": {
      "content": ":host {\n\t${1:${VISUAL}}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "host": true
      }
    },
    "c0415c15-2e1a-3be3-9aa2-6f1b7112aa06": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-number",
      "matches": {
        "prop-types number": true,
        "ptn": true
      }
    },
    "c046eef9-0169-3a4b-b082-1ec847688d48": {
      "content": "char[] $1 ()\n{\n\tchar[] $2 = {$3};$4\n\treturn $2;\n}",
      "doc": "Creates a function that returns the char array type",
      "filetype": "c",
      "grammar": "lsp",
      "label": "Create string function",
      "matches": {
        "strfunc": true
      }
    },
    "c0536911-af8e-3ecf-87fa-3cff95995f48": {
      "content": "<area shape=\"${1:rect}\" coords=\"${2}\" href=\"${3}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area": true
      }
    },
    "c05d9d74-9b0c-3d66-be60-c126418505a5": {
      "content": "test('$1', () {\n  $0\n});",
      "doc": "Insert a test block.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "test",
      "matches": {
        "test": true
      }
    },
    "c0660f8a-ac3d-3a64-8fba-f97dbb197079": {
      "content": "function ${1:function_name}(${2})${3}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "c069bf4c-429c-3c5d-8040-be1b976b48bb": {
      "content": "align-content first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      }
    },
    "c071be19-ce85-3d1e-8e12-6806d050d09a": {
      "content": "join(${1:strgArray}${2: , }${0:seperator});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "c073bca6-baf8-3aa3-85f3-b6db3f39d882": {
      "content": "Vue.config.productionTip = ${1:false}",
      "doc": "Vue.config.productionTip",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "productionTip",
      "matches": {
        "VueConfigProductionTip": true
      }
    },
    "c07b8978-665c-3850-b371-6bee9b8f1bc5": {
      "content": "caption-side bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      }
    },
    "c082e5c5-6d5d-39d5-bf1a-a6305294dcec": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "c08f1e7f-82b3-33bd-a9ac-6896fa1f8c15": {
      "content": "let open ${1:module} in\n${2:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "open",
      "matches": {
        "open": true
      }
    },
    "c09d23c9-a321-3127-9064-7046e5728d4a": {
      "content": "font-effect engrave",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      }
    },
    "c09d9c26-6c76-33f4-b5d4-29d9eeaa045a": {
      "content": "{% extends \"$1\" %}",
      "doc": "extends tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "extends",
      "matches": {
        "extends": true
      }
    },
    "c0a6ff10-fe55-3e8c-bd26-5fdab1595a1d": {
      "content": "${1:obj}.load(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      }
    },
    "c0a99fee-bcf8-308d-9e75-6915fb6c0a8a": {
      "content": "render text: \"${1:text to render...}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text) (rt)",
      "matches": {
        "rt": true
      }
    },
    "c0ae677a-4896-3852-9d32-ce299fd4f319": {
      "content": "setup(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "setup(func)",
      "matches": {
        "setup": true
      }
    },
    "c0b05119-fe7f-32e6-b1c3-e8b132c1c746": {
      "content": "`${1:${TM_SELECTED_TEXT}}`$0",
      "doc": "Insert code",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert code",
      "matches": {
        "code": true
      }
    },
    "c0b2f5b3-c24b-34cc-bc0e-1bc4a55819e5": {
      "content": "String ${1:str}${2: = \"}${0:CCCP\"};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "string": true
      }
    },
    "c0bc9493-7d57-3e68-9c4f-7bddbc319d59": {
      "content": "{% block ${blockname} %}\n  \n{% endblock ${blockname} %}",
      "doc": "block tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "block",
      "matches": {
        "block": true
      }
    },
    "c0bcc997-4699-30fa-9cba-3765282968c2": {
      "content": "#include <${1}.h>",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "c0bce52b-35c2-30ce-b028-65e7cbd58ee4": {
      "content": "${1:command} | Where-Object -FilterScript { $PSItem.${2:property} -${3:operator} '${4:expression}' } | Sort-Object -Property ${5:sortproperty}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filtersort": true
      }
    },
    "c0c2e793-3d15-3a7f-afd9-defe432721a7": {
      "content": "\\begin{eqnarray*}\n\t${1:${VISUAL}} & ${2:${VISUAL}} & ${0:${VISUAL}}\n\\end{eqnarray*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation array without a number",
      "matches": {
        "eqann": true
      }
    },
    "c0c3fe9c-a329-340e-93bd-391738ba2025": {
      "content": "console.log(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.log",
      "matches": {
        "cl": true
      }
    },
    "c0c6e0b0-4992-342e-9d2b-5749747943a4": {
      "content": "assert_redirected_to ${2:${12:model}_path(${13:@}${14:$12})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (path)",
      "matches": {
        "artp": true
      }
    },
    "c0d1e7af-fa9f-351b-aef8-16dbbf3c64e9": {
      "content": "{% elsif ${1:condition} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elsif": true
      }
    },
    "c0d70b4d-92a5-3e48-a19d-d445fcc37470": {
      "content": "background-attachment: ${1|fixed,scroll,local|};",
      "doc": "initial value: scroll",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-attachment",
      "matches": {
        "bga": true
      }
    },
    "c0d78785-a73f-3a61-b9bf-80209da59a7d": {
      "content": "font-family: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true
      }
    },
    "c0d7d3c4-9c7e-3fbf-b07d-b82b2ea66d2f": {
      "content": "t.date :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create date column",
      "matches": {
        "tcda": true
      }
    },
    "c0db0cbe-e94a-3944-ad99-fca486a396a1": {
      "content": "t.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "c0de73ed-5e21-3411-bc2d-a91c0f621854": {
      "content": "<%= javascript_include_tag \"${0}\" %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsit": true
      }
    },
    "c0de846c-a51e-3d1b-a52e-d3352483a7ef": {
      "content": "times { |${1:n}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tim": true
      }
    },
    "c0dfa9d8-174c-3975-bc0b-e00f081afc48": {
      "content": "def initialize(${1})\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defi": true
      }
    },
    "c0eb74ac-da32-31e4-a228-8170077c5b16": {
      "content": "-moz-box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:m+": true
      }
    },
    "c0f84be1-7649-35f3-81f6-b8ca8d0c7675": {
      "content": "echo \"${0:TARGET}\" 1>&2\nexit 1",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abort": true
      }
    },
    "c0f87dc4-f5c4-334c-95c2-3d2a18ea5efb": {
      "content": "t.text :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create text column",
      "matches": {
        "tct": true
      }
    },
    "c0fcc196-a4c8-397b-8978-01ca216639e6": {
      "content": "${1:document}.createElement(${2:elem})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "createElement",
      "matches": {
        "cel": true
      }
    },
    "c105a6eb-97e8-3250-8484-7c6eecb5a992": {
      "content": "{\n\t\"type\": \"header\",\n\t\"content\": \"${1}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_header": true
      }
    },
    "c10bfc8a-4093-3307-b535-2f4c10979b4f": {
      "content": "border-corner-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:c": true
      }
    },
    "c11a203d-51d0-3057-ad01-9688c9982a4f": {
      "content": "clip: rect(${1:0} ${2:0} ${3:0} ${0:0})",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      }
    },
    "c11ea580-d2a9-3df9-bb12-74a7dae8059d": {
      "content": "border-bottom-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      }
    },
    "c120db29-0927-3bc0-a950-1824a6f98bde": {
      "content": "$.queue(${1:element}${2:, name}${3:, newQueue})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queuee": true
      }
    },
    "c13568e8-5602-3db2-9689-5be1a95d2127": {
      "content": "expect($1).toBeGreaterThanOrEqual($0);",
      "doc": "expects the argument is greater than",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobegreaterthanorequal",
      "matches": {
        "jest expect tobegreaterthanorequal": true,
        "tbgte": true
      }
    },
    "c13ef69a-2d42-3dc3-8e23-c186cbec776e": {
      "content": "-webkit-box-shadow: ${1:0} ${2:0} ${3:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w+": true
      }
    },
    "c13fb3dc-fc51-383c-8e5f-7864d466187c": {
      "content": "public int ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi+&": true
      }
    },
    "c1465849-1611-352c-9b05-13c59595ba5e": {
      "content": "unsigned int\t${1:object}Count = [${2:array} count];\n\nfor(unsigned int index = 0; index < $1Count; index += 1)\n{\n\t${3:id}\t$1 = [$2 objectAtIndex:index];\n\t$0\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "for NSArray loop (forarray)",
      "matches": {
        "forarray": true
      }
    },
    "c149c518-dfaa-30a5-9217-2f7c6d2e6969": {
      "content": "@opaque ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      }
    },
    "c154b799-5ce2-3ff2-a073-ea2afbaa3cd2": {
      "content": "var_dump(${1}); die(${0:});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdd": true
      }
    },
    "c1560737-59cc-372a-9487-3e184ed67c89": {
      "content": "t.column ${1:title}, :${2:string}\nmccc$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Migration Create Column Continue (mccc)",
      "matches": {
        "mccc": true
      }
    },
    "c156fb38-0ac5-3277-b952-415a5cff4917": {
      "content": "clear left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:l": true
      }
    },
    "c156fdad-2152-3552-ab7b-788c5e6a2d11": {
      "content": "<select>\n\t$1\n</select>",
      "doc": "HTML - Defines a selectable list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "select",
      "matches": {
        "select": true
      }
    },
    "c161201f-8ee9-39be-a4ad-06ff5724df4a": {
      "content": "if ${1:condition}:\n\t${2:pass}\nelse:\n\t${3:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "if else",
      "matches": {
        "if": true
      }
    },
    "c161964b-491c-390d-a022-249c4f35a037": {
      "content": "max($2, $3)",
      "doc": "float max(float x, float y)\nvec2 max(vec2 x, vec2 y)\nvec3 max(vec3 x, vec3 y)\nvec4 max(vec4 x, vec4 y)\n\nThe max function returns the larger of the two arguments. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nfloat max(float x, float y)\nvec2 max(vec2 x, float y)\nvec3 max(vec3 x, float y)\nvec4 max(vec4 x, float y)\n\nThere is also a variation of the max function where the second parameter is always a floating scalar.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "max",
      "matches": {
        "max": true
      }
    },
    "c16725e3-953b-3e60-b56a-414f0cc73957": {
      "content": "#lang datalog",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#d": true
      }
    },
    "c1673058-9a0d-3653-8917-bb032353a88a": {
      "content": "FUNCTION RANDOM(${1:seed})$0",
      "doc": "pseudo-random number 0> <1 from a rectangular distribution with optional seed",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-RANDOM",
      "matches": {
        "FUNCTION RANDOM": true
      }
    },
    "c16bf92f-8c84-36f8-8377-87979ef922cb": {
      "content": "const { GraphQLClient } = require('graphql-request');",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-require-client",
      "matches": {
        "graphql-request require client": true
      }
    },
    "c16fdf6c-2ace-3015-9389-5ca6c010e3f3": {
      "content": "beforeUpdate(() => {\n\t${1:// content here}\n});",
      "doc": "beforeUpdate lifecycle function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-before-update",
      "matches": {
        "s-lifecycle-before-update": true
      }
    },
    "c1709a89-2d1b-30ab-bde2-a0f9c0b2ac5b": {
      "content": "# -*- coding: utf-8 -*-\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "?[uU][tT][fF]-?8\" \"# encoding: UTF-8\" r",
      "matches": {
        "\"^#": true
      }
    },
    "c174cca1-316d-30fc-a907-c7eeb2192ff6": {
      "content": "function (${1:arguments}) {${0}}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "anonymous function",
      "matches": {
        "fan": true
      }
    },
    "c1782a0c-95cf-37f0-b9f1-9bbbec5238a0": {
      "content": "type ${1:Interface} interface {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Interface declaration",
      "matches": {
        "interface": true
      }
    },
    "c178d4f0-1b66-3685-b8ed-f8c6a203c463": {
      "content": "repeat\n\t$1\nuntil $0",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "repeat loop",
      "matches": {
        "repeat": true
      }
    },
    "c17da2ef-d6ca-3034-8362-74d2052cd390": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t$0\n}",
      "doc": "Invoked before rendering when new props or state are being received.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-shouldcomponentupdate",
      "matches": {
        "react shouldcomponentupdate": true,
        "scu": true
      }
    },
    "c17f047b-3979-3635-82b9-990dfd445427": {
      "content": "def ${1:#:method_name}\n  ${2:TARGET}\nrescue ${3:#:StandardError} => ${4:error}\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "def ... rescue ... end",
      "matches": {
        "defr": true,
        "defrescue": true
      }
    },
    "c17f27c0-e628-306e-a8e7-4718fbbf875c": {
      "content": "var ${1:x} ${2:Type}${3: = ${0:value}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var x Type [= ...]",
      "matches": {
        "var": true
      }
    },
    "c1825faf-4a48-34af-8479-30bef2ee262d": {
      "content": "word-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wos": true
      }
    },
    "c186a8ac-ade6-3df8-b9bc-80bde4f8e6e9": {
      "content": "break;",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "br": true
      }
    },
    "c188217a-b127-36f8-ab30-6751f0c90778": {
      "content": "${1:#:subtitle}\n-----------------------------------",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtitle": true
      }
    },
    "c18a474c-8833-3350-ad0a-b66b80056076": {
      "content": "{% apply ${1:function} %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      }
    },
    "c191fa4d-6434-3d62-bed8-6b3c0f8848b1": {
      "content": "self.assertIsNot(${1:expected}, ${2:actual}${3:, '${4:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert is not",
      "matches": {
        "asint": true
      }
    },
    "c19213e9-c430-33d6-9127-b17a707b379f": {
      "content": "expect($1).toStrictEqual($0);",
      "doc": "expects the first argument to be strictly equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tostrictequal",
      "matches": {
        "jest expect tostrictequal": true,
        "tse": true
      }
    },
    "c193de14-839f-3610-bc9f-78bbf7aed7ee": {
      "content": "($3 *)realloc(${1:OLD}, ${2:N_MEMBERS} * sizeof(${3:TYPE}));\n${0}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "realloc(old, size)",
      "matches": {
        "realloc": true
      }
    },
    "c198d128-ecda-3a51-b3ef-24b2599f3f8f": {
      "content": "text-align=\"left\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alignl": true
      }
    },
    "c19a1b06-40a8-31f6-8ea2-9dbfa381c585": {
      "content": "{% post_url ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "post_url": true
      }
    },
    "c19a3e26-9840-3c8e-af22-0dd19bc5a36a": {
      "content": "begin\n\t$1\nrescue => exception\n\t\nelse\n\t\nensure\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Exception block with else and ensure",
      "matches": {
        "begin else ensure": true
      }
    },
    "c19c4104-b5e9-3067-aeb7-6063d4991f2f": {
      "content": "align-content baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:b": true
      }
    },
    "c1a57c92-4e4d-3aba-bcb7-6ce2da015455": {
      "content": "_.eq(${value}, ${other})",
      "doc": "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.eq(object, object);\n// => true\n\n_.eq(object, other);\n// => false\n\n_.eq('a', 'a');\n// => true\n\n_.eq('a', Object('a'));\n// => false\n\n_.eq(NaN, NaN);\n// => true\n\nPerforms a\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\ncomparison between two values to determine if they are equivalent.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-eq",
      "matches": {
        "lodash eq": true
      }
    },
    "c1aade4f-9651-3243-b5f9-473de14a5e4a": {
      "content": "<link rel=\"alternate\" href=\"${1:atom.xml}\" title=\"Atom\" type=\"application/atom+xml\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:atom": true
      }
    },
    "c1ab6afc-8a70-31fd-ab1c-8cb82c7a2c3b": {
      "content": "{\n\t\"type\": \"video_url\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"accept\": [\"youtube\", \"vimeo\"${0}],\n\t\"default\": \"${3}\",\n\t\"info\": \"${4}\",\n\t\"placeholder\": \"${5}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_video": true
      }
    },
    "c1b0a6d3-32df-3abe-a52f-9f520b90d5c6": {
      "content": "{% use '${1:#:template}' %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% use '...' %}",
      "matches": {
        "use": true
      }
    },
    "c1b60e69-7a3e-3e8d-9789-5a0649329928": {
      "content": "_.startsWith(${string}, ${target}, ${position})",
      "doc": "_.startsWith('abc', 'a');\n// => true\n\n_.startsWith('abc', 'b');\n// => false\n\n_.startsWith('abc', 'b', 1);\n// => true\n\nChecks if `string` starts with the given target string.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-startswith",
      "matches": {
        "lodash startswith": true
      }
    },
    "c1b8412e-43a9-3442-acfb-77941c0315dd": {
      "content": "${1:div}(:class=\"{ ${2:className}: ${3:data} }\")",
      "doc": "vue class binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Class Binding",
      "matches": {
        "vclass": true
      }
    },
    "c1b9da4d-f16a-33a2-9bc1-cf8e7c858d42": {
      "content": "white-space: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs": true
      }
    },
    "c1bb5cd4-98eb-33a6-9e79-37d38989c8e6": {
      "content": "(${1:#:Args}) => { ${0:#:TARGET} }",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "() => {}",
      "matches": {
        "arrow-function": true,
        "function-arrow": true
      }
    },
    "c1bc51cf-b1fa-3538-aa10-49f8c8d1b7ca": {
      "content": "Open Browser    ${1:${url}}    ${2:${browser=firefox}}    ${3:${alias=None}}    ${4:${remote_url=False}}    ${5:${desired_capabilities=None}}    ${6:${ff_profile_dir=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Open Browser",
      "matches": {
        "ob": true
      }
    },
    "c1c33dab-f48b-3cf2-88de-41d79a2fb8bb": {
      "content": "{{ $1 | round(1, 'floor') }}$0",
      "doc": "round",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "round",
      "matches": {
        "round": true
      }
    },
    "c1c45fa6-1d96-38b1-a0ea-41fa858bd82b": {
      "content": "BREAKING CHANGE: $0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "breaking change conventional commit footer",
      "matches": {
        "BREAK": true
      }
    },
    "c1c80c8f-5698-3760-97a6-76839a7b2714": {
      "content": "namespace ${1:MyNamespace}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "namespace": true
      }
    },
    "c1cafa9b-79cb-3d46-84ac-90381acfdab5": {
      "content": "NSLog(@\"${1:%@}\"$2);",
      "doc": "Create a NSLog",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "NSLog",
      "matches": {
        "NSLog": true
      }
    },
    "c1d78671-343b-30b7-abe5-37ab6fa82700": {
      "content": "while (${1:condition}) {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "c1d9b39c-3844-3abe-9a94-8d2c6a400a2d": {
      "content": "<q>$1</q>$2",
      "doc": "HTML - Defines a short quotation",
      "filetype": "html",
      "grammar": "lsp",
      "label": "q",
      "matches": {
        "q": true
      }
    },
    "c1dd15ea-b664-3276-9ada-a52e08344dcb": {
      "content": "${1:obj}.html('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "html": true
      }
    },
    "c1df097a-0b8e-38b9-aa1d-cb1b7f056d3b": {
      "content": ".lt.",
      "doc": "Less Than",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "lt",
      "matches": {
        "lt": true
      }
    },
    "c1e495dd-d6b8-3101-8759-131fb8ebb3ee": {
      "content": "- (${1:void}) ${2:func name} {\n$4\n}",
      "doc": "Create an Objc instance method implementation",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create instance method implementation",
      "matches": {
        "-impl": true,
        "funcii": true
      }
    },
    "c1f1b88d-9341-3a89-bd3a-7d43cd69ee66": {
      "content": "<pre>{{${1:model} | json}}</pre>$0",
      "doc": "Angular pre debug | json",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "pre-w-json",
      "matches": {
        "a-prej": true,
        "angular pre json": true
      }
    },
    "c2011bdf-875b-3642-823c-9a5bd268c0c0": {
      "content": "fn ${1:#:func_name}(${2:#:args}) -> ${3:#:()} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "fn () {}",
      "matches": {
        "fn-": true
      }
    },
    "c2030225-7b20-3c27-a977-a233beff8242": {
      "content": "echo CHtml::ajax(array(${0}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaj": true
      }
    },
    "c208e53b-0ce0-322b-a32b-631602ba0f8b": {
      "content": "{% extends \"${0:base.html}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extends": true
      }
    },
    "c2116a10-2022-3b71-9c54-c10b48960f7c": {
      "content": "text-decoration: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "c2124112-9497-3c6c-8891-aeffea0c9607": {
      "content": "${1:callbacks}.lock()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Clock": true
      }
    },
    "c212c133-beb7-31bd-8cb5-73e7aab889d6": {
      "content": "debug\n{\n\t${VISUAL}$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "debug",
      "matches": {
        "debug": true
      }
    },
    "c212dd83-a60f-3d77-8185-7736daa507aa": {
      "content": "mapActions",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mapActions",
      "matches": {
        "mapActions": true
      }
    },
    "c2141f4e-2c87-3dd0-b261-17b092c592ac": {
      "content": "leave-class=\"$1\"$0",
      "doc": "leave-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "leave-class",
      "matches": {
        "leaveClass": true
      }
    },
    "c22bec0d-0d23-3bd3-a27f-8b71f930676a": {
      "content": "internal int ${1} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&": true
      }
    },
    "c22d5663-967b-3bae-bb0d-ebf241b3b8e4": {
      "content": "fprintf(${1:stderr}, \"${2}\\n\"${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fprintf(..., \"...\\n\", ...);",
      "matches": {
        "fprintf": true
      }
    },
    "c22f6d56-e972-30f0-9e56-2f3c47a32130": {
      "content": "inversesqrt($2)",
      "doc": "float inversesqrt(float x)\nvec2 inversesqrt(vec2 x)\nvec3 inversesqrt(vec3 x)\nvec4 inversesqrt(vec4 x)\n\nThe inversesqrt function returns the inverse square root of x, i.e. the reciprocal of the square root. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "inversesqrt",
      "matches": {
        "inversesqrt": true
      }
    },
    "c230fb8e-1ddc-3822-85a9-f3ca114575a7": {
      "content": "write!(${1}, \"${2}\")",
      "doc": "write!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "write",
      "matches": {
        "write": true
      }
    },
    "c23803b7-f2de-3713-a6c1-4129c8ddc752": {
      "content": "@deprecated(\"${1:This field deprecated}. Use ${2:something} instead\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "compiler deprecation warn",
      "matches": {
        "@dw": true
      }
    },
    "c23e977f-043c-312e-8da2-1433a109d50c": {
      "content": "if ($1) {\n  $0\n} else {\n}",
      "doc": "Insert an if statement with an else block.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "if else",
      "matches": {
        "ife": true
      }
    },
    "c2435601-b514-3587-939b-08b8b28e0163": {
      "content": "read*,",
      "doc": "Quick Read",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "re",
      "matches": {
        "re": true
      }
    },
    "c248cbb9-37aa-36ba-a827-4843b75a1bf6": {
      "content": "| truncate: ${length:20}, '${ellipsis:...}' }}",
      "doc": "String filter: truncate",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter truncate",
      "matches": {
        "truncate": true
      }
    },
    "c24ee0dc-0c46-352f-b3ec-57af17ac3f81": {
      "content": "{% for block in ${1:entry.matrixFieldHandle}.all() %}\n\n\t{% switch block.type %}\n\n\t\t{% case \"${2:blockHandle}\" %}\n\n\t\t\t{{ block.${3:fieldHandle} }}\n\n\t\t{% case \"${4:blockHandle}\" %}\n\n\t\t\t$0\n\n\t{% endswitch %}\n\n{% endfor %}",
      "doc": "matrixswitch",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "matrixswitch",
      "matches": {
        "matrixswitch": true
      }
    },
    "c2524e73-470a-33d0-b55e-74f0884561ea": {
      "content": "it_behaves_like '${0:shared examples name}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert it_behaves_like",
      "matches": {
        "ibl": true
      }
    },
    "c25eeec4-faff-36ea-a1b2-e23da84042a8": {
      "content": "<?xml version=\"1.0\"?>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "XML declaration",
      "matches": {
        "xml": true
      }
    },
    "c25fba99-055d-3a37-9ba8-fcf785b5588b": {
      "content": "${1:obj}.on('${2:events}', '${3:selector expression}', function (${4:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      }
    },
    "c26037ff-b4d1-3a73-b367-f0defc7d2c62": {
      "content": "template<typename ${1:T}> ${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "template <T>",
      "matches": {
        "template": true
      }
    },
    "c260c9e2-dafc-384f-a3fd-4967762e56a2": {
      "content": "padding: ${1:0} ${2:0} ${3:0};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:3": true
      }
    },
    "c2642777-3add-3cb8-a814-64b21ddff96a": {
      "content": "<meta charset=\"utf-8\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:utf5": true
      }
    },
    "c26fc88e-e78e-30d0-a193-f35607baab93": {
      "content": "if ${1:false} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "c277689c-2b3e-3e9d-8d1b-ecaa2f9e04ca": {
      "content": "border-length: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlt": true
      }
    },
    "c2791f99-c0f7-31a2-96b9-aa55524d2d34": {
      "content": "while (${1:/* condition */}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "c27e45c6-986f-382b-b0b7-3d11d4ddf074": {
      "content": "const ${1:module} = require('${1:module}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const module = require('module')",
      "matches": {
        "cr": true
      }
    },
    "c283ba16-0872-3589-86db-d49ae5f2e328": {
      "content": "<dl>\n\t$1\n</dl>",
      "doc": "HTML - Defines a definition list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "dl",
      "matches": {
        "dl": true
      }
    },
    "c2868485-d274-31f3-897f-96be2b511814": {
      "content": "{% for ${1:#:var} in ${2:#:list} %}\n  ${0:TARGET}\n{% endfor%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "for in endfor",
      "matches": {
        "for": true
      }
    },
    "c286932d-0391-3a46-a73b-46d9bf04fd52": {
      "content": "<th class=\"${1}\">${0}</th>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th.": true
      }
    },
    "c287da27-35fa-34b4-8c99-83d71d562870": {
      "content": "{% endautoescape %}$0",
      "doc": "endautoescape",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endautoescape",
      "matches": {
        "endautoescape": true
      }
    },
    "c29593d1-131a-36d4-a62e-cd488709b253": {
      "content": "Page Should Contain Checkbox    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Checkbox",
      "matches": {
        "pscc": true
      }
    },
    "c2978666-9b4b-3e6d-a174-b521328efdcb": {
      "content": "borderColor: ${1},",
      "doc": "borderColor",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderColor",
      "matches": {
        "bor": true
      }
    },
    "c29af75f-e99c-343f-8871-f48cc00e0da3": {
      "content": "echo CHtml::radioButtonList('${1:name}', ${2:select}, array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhrbl": true
      }
    },
    "c29eb266-678f-3459-a3a7-06afa5708616": {
      "content": "import",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "c2a02b10-f912-3f2f-b99c-68daa30fc60a": {
      "content": "${1:obj}.prevAll('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "preva": true
      }
    },
    "c2a9d3a5-f75f-3807-a016-ddaae381f491": {
      "content": "note right : $0",
      "doc": "A note that appears on the right",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Note right",
      "matches": {
        "note-rt": true
      }
    },
    "c2b17d94-20ff-3cc2-8950-f06936dc2b92": {
      "content": "list-style-type: disc;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: disc",
      "matches": {
        "listd": true
      }
    },
    "c2b417e0-1d6e-3d39-87a1-42c2b68429b8": {
      "content": "background-break continuous",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgbk:c": true
      }
    },
    "c2b4e16b-b38e-333b-a775-508fb940103f": {
      "content": "{% set tags = craft.tags({\n\tgroup: \"${1:tagGroupHandle}\"\n}).all() %}\n\n<ul>\n\t{% for tag in tags %}\n\t\t<li>{{ tag }}</a></li>\n\t{% endfor %}\n</ul>\n$0",
      "doc": "craft.tags - object syntax",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "tagso",
      "matches": {
        "tagso": true
      }
    },
    "c2b8f517-50c2-342a-8501-619fedd1f39e": {
      "content": "$this->input->get(\"${1:index}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-get": true
      }
    },
    "c2b939f1-e49f-3789-89b2-ac7db427f729": {
      "content": "maxloc(${1:source}${2:, mask=${3:($1>0)}})",
      "doc": "Index of Maximum",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "maxloc",
      "matches": {
        "maxloc": true
      }
    },
    "c2ca7cd2-5301-3019-a1ed-a8ac63d9a77a": {
      "content": "function (${1:arguments}) {\n\t${0}\n}",
      "doc": "anonymous function",
      "filetype": "base",
      "grammar": "lsp",
      "label": "anonymous-function",
      "matches": {
        "base function anonymous": true
      }
    },
    "c2cc4d0f-1cdb-35a9-baf9-f79e2367d621": {
      "content": "word-break: break-strict;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      }
    },
    "c2cef596-b3fe-36e4-98c4-4fef75226861": {
      "content": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: '${1:selector-name}'\n})\n\nexport class ${2:Name}Pipe implements PipeTransform {\n\ttransform(value: any, ...args: any[]): any {\n\t\t$0\n\t}\n}",
      "doc": "Angular pipe",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Pipe",
      "matches": {
        "a-pipe": true
      }
    },
    "c2d10c53-f1ea-3624-8d15-8d923571daa4": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component",
      "matches": {
        "vue base": true
      }
    },
    "c2d166ae-1682-3279-8295-d1cdcac5b90c": {
      "content": "note = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "note": true
      }
    },
    "c2d2e069-9502-39ad-87ab-9a5801c8aa9d": {
      "content": "If ${1:condition} Then\n\t${2:; True code}\nElse\n\t${0:; Else code}\nEndIf",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "c2d79077-78c7-338e-ae00-72715d66e873": {
      "content": "expect(${1:target}).not$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not (js)",
      "matches": {
        "notx": true
      }
    },
    "c2da35f4-f801-34d7-84d0-951ba247a788": {
      "content": "internal int ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&-": true
      }
    },
    "c2da7578-25a8-35b0-9448-d53e1b47c5bd": {
      "content": "class $1Manager(models.Manager):\n\tdef get_queryset(self):\n\t\treturn $1QuerySet(self.model, using=self._db)",
      "doc": "Modify the initial QuerySet the Manager returns.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "queryset_from_manager",
      "matches": {
        "qs_mngr": true
      }
    },
    "c2de0246-fc5b-3412-922c-28529e789cda": {
      "content": "background-repeat: repeat-x;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      }
    },
    "c2dfd9a3-e978-3ac6-a0f1-2e4570c74266": {
      "content": "redirect_to controller: \"${1:items}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller)",
      "matches": {
        "rec": true
      }
    },
    "c2e3dd86-8568-3831-94aa-a9654b7b3d06": {
      "content": "for ${1:#:value} in ${2:#:list}:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "for ... in ...: ...",
      "matches": {
        "for": true
      }
    },
    "c2e63543-d04f-3638-9fc3-c6ee2047f870": {
      "content": "text(${1:stringdata}, ${2:x}, ${3:y}, ${4:width}, ${5:height}${6:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "stringdata",
      "matches": {
        "text": true
      }
    },
    "c2e6e4e3-edf7-3a45-b2ed-d55880cc1ce2": {
      "content": "export default {\n\tstate: {\n\t\tvalue: 'my value'\n\t},\n\tgetters: {\n\t\tvalue: state => {\n\t\t\treturn state.value;\n\t\t}\n\t},\n\tmutations: {\n\t\tupdateValue(state, payload) {\n\t\t\tstate.value = payload;\n\t\t}\n\t},\n\tactions: {\n\t\tupdateValue({commit}, payload) {\n\t\t\tcommit('updateValue', payload);\n\t\t}\n\t}\n};",
      "doc": "vuex module",
      "filetype": "vue-script-vuex",
      "grammar": "lsp",
      "label": "Vuex Module",
      "matches": {
        "vmodule": true
      }
    },
    "c2e91d51-2d6a-3754-9b4e-fa049220a76b": {
      "content": "println!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println! with format param",
      "matches": {
        "pln,": true
      }
    },
    "c2e93f04-2c3e-3e6d-8d9b-5d49411e7527": {
      "content": "case ${1} is\n\twhen ${2} => ${3};${0}\nend case;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "c2eb0bb9-4b87-32d5-a4ae-51eafe25c825": {
      "content": "_.some(${collection}, ${predicate})",
      "doc": "_.some([null, 0, 'yes', false], Boolean);\n// => true\n\nvar users = [\n  { 'user': 'barney', 'active': true },\n  { 'user': 'fred',   'active': false }\n];\n\n// The `_.matches` iteratee shorthand.\n_.some(users, { 'user': 'barney', 'active': false });\n// => false\n\n// The `_.matchesProperty` iteratee shorthand.\n_.some(users, ['active', false]);\n// => true\n\n// The `_.property` iteratee shorthand.\n_.some(users, 'active');\n// => true\n\nChecks if `predicate` returns truthy for **any** element of `collection`.\nIteration is stopped once `predicate` returns truthy. The predicate is\ninvoked with three arguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-some",
      "matches": {
        "lodash some": true
      }
    },
    "c2ed86e2-cd8a-3790-b77a-f9f52a6b752b": {
      "content": "unless ${1:test}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "unless",
      "matches": {
        "unless": true
      }
    },
    "c2ee6825-d9e5-3e8b-8aa5-0c7a3a239079": {
      "content": "$.makeArray(${0:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "makearray": true
      }
    },
    "c2f6e220-ddc3-395a-92a3-28e86d7a8a59": {
      "content": "expect($1).toMatchInlineSnapshot($0);",
      "doc": "returns true if the argument matches the most recent inline snapshot",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatchinlinesnapshot",
      "matches": {
        "jest expect tomatchinlinesnapshot": true,
        "tmis": true
      }
    },
    "c2fbb6a0-1b74-3e1e-92ba-48620ae69c9a": {
      "content": "public string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+-": true
      }
    },
    "c30215d1-7962-36f8-a03f-7d3c0c00a5cd": {
      "content": "\\begin{equation*}\n\t${1:TARGET}\n\\end{equation*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{equation*} \\equation*": true,
        "equation*": true
      }
    },
    "c306d760-32d2-3895-bac4-ab13530c2a0c": {
      "content": "_.pad(${string}, ${length}, ${chars})",
      "doc": "_.pad('abc', 8);\n// => '  abc   '\n\n_.pad('abc', 8, '_-');\n// => '_-abc_-_'\n\n_.pad('abc', 3);\n// => 'abc'\n\nPads `string` on the left and right sides if it's shorter than `length`.\nPadding characters are truncated if they can't be evenly divided by `length`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pad",
      "matches": {
        "lodash pad": true
      }
    },
    "c3082b78-1569-342a-9f35-bd6541c75987": {
      "content": "vertical-align top",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:t": true
      }
    },
    "c30932df-6a25-36dc-b875-22e0353cb6df": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      }
    },
    "c30f64f7-ace5-393d-b276-db997a466cda": {
      "content": "mixed.isValid()",
      "doc": "mixed.isValid(value: any, options?: object): Promise<boolean>\n\nReturns true when the passed in value matches the schema. isValid\nis asynchronous and returns a Promise object.Takes the same options as validate().",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-valid",
      "matches": {
        "yup mixed isvalid": true
      }
    },
    "c31393fb-6c87-384b-a8f6-39a2f4d5962f": {
      "content": "test(\n   \"${1:test description}\",\n   () {},\n);",
      "doc": "Create a test function",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Test",
      "matches": {
        "f-test": true
      }
    },
    "c313c19a-4d06-3859-bb1b-3af821fe98de": {
      "content": "while ${1} ${2:<=} ${3}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "while loop",
      "matches": {
        "wh": true
      }
    },
    "c315c4bf-fbe7-3471-a0b0-c555159b5648": {
      "content": "{% case ${1:variable} %}\n\t{% when ${2:condition} %}\n\t\t${3}\n\t{% else %}\n\t\t${0}\n{% endcase %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "c31b2795-e97c-3791-a7a6-03a01bae2708": {
      "content": "Ada.Text_IO.Put_Line(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put_Line",
      "matches": {
        "put_line": true
      }
    },
    "c31d5a79-54dd-32fb-9fa9-67ccda96d84d": {
      "content": "center:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "center": true
      }
    },
    "c31effcf-cbc3-344f-a7b3-6d2cd074b74f": {
      "content": "[Category(\"${0:#:category}\")]",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "category": true
      }
    },
    "c3200764-293b-3ef2-a65e-15ed5b82b332": {
      "content": "if (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "c3354350-52ec-369a-b625-5780120fb61e": {
      "content": "_.split(${string}, ${separator}, ${limit})",
      "doc": "_.split('a-b-c', '-', 2);\n// => ['a', 'b']\n\nSplits `string` by `separator`.\n\n**Note:** This method is based on\n[`String#split`](https://mdn.io/String/split).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-split",
      "matches": {
        "lodash split": true
      }
    },
    "c3360a66-e753-3f58-862f-89e765f15c88": {
      "content": "assert(${1:ptr} != NULL);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anl": true
      }
    },
    "c337ee4e-e056-3fae-80d7-d8bd31cfda1f": {
      "content": "CREATE USER '${1:username}'@'${2:localhost}' IDENTIFIED BY '${3:password}';",
      "doc": "Create User",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "creteuser",
      "matches": {
        "createuser": true
      }
    },
    "c34835cb-1156-3529-9f24-c9c1b46ffa97": {
      "content": "border-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-style": true,
        "bs": true
      }
    },
    "c34bb9ed-2b4e-32bc-b699-5a228a6ba903": {
      "content": "\\begin{flushleft}\n\t${1:TARGET}\n\\end{flushleft}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{flushleft} \\flushleft": true,
        "flushleft": true
      }
    },
    "c34e1004-2c72-3910-9449-61664485d437": {
      "content": "border-bottom: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb": true
      }
    },
    "c355c695-e900-3e50-a70c-47627ece70bd": {
      "content": "axios.post('${1:uri}', ${2:post})\n.then(function (response) {\n\t${3:success}\n})\n.catch(function (error) {\n\t${4:error}\n})",
      "doc": "Use Axios to make a post request - promise based",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-post-promise",
      "matches": {
        "axios post promise": true
      }
    },
    "c35632f2-f065-3400-8796-9f2639b624e1": {
      "content": "{{http://${1:image_url}}}${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{<image url>}}",
      "matches": {
        "image": true
      }
    },
    "c35aa57c-1246-37e6-b9d4-420ba471adfb": {
      "content": "describe \"${1:test group subject}\" do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "des": true
      }
    },
    "c35ad291-a6d2-30ed-8c2e-af29fe0b160d": {
      "content": "this.props.$0",
      "doc": "Access component's props",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentProps",
      "matches": {
        "props": true
      }
    },
    "c366faee-602a-30f0-9755-e81043bc4b4a": {
      "content": "if isMainModule:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "if isMainModule: ...",
      "matches": {
        "ifmain": true,
        "main": true
      }
    },
    "c36b3a33-55bb-3e25-bb35-174d53b1caf8": {
      "content": "class $1QuerySet(models.QuerySet):\n\tpass",
      "doc": "",
      "filetype": "models",
      "grammar": "lsp",
      "label": "queryset",
      "matches": {
        "qs": true
      }
    },
    "c36ce812-d9d7-30c7-892d-9d219b229002": {
      "content": "router.beforeEach((to, from, next) => {\n\t${1:next();}\n});",
      "doc": "Vue Router global guards beforeEach",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeEach",
      "matches": {
        "vbeforeeach": true
      }
    },
    "c373fedd-c629-3514-a2b7-5668eab3b927": {
      "content": "@synchronized (${1:token}) {\n\t${2:statements}\n}",
      "doc": "Create a finally block",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "@synchronized",
      "matches": {
        "@synchronized": true
      }
    },
    "c37a738a-a6fb-3b2c-944e-8b6aef4f0da8": {
      "content": "border-top-left-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      }
    },
    "c37cc8c9-9293-337b-b4e2-1045a7a08a58": {
      "content": "$.param(${1:obj})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "param": true
      }
    },
    "c37cd3b5-44cc-3580-b220-687770705ac4": {
      "content": "$this->assertContainsOnlyInstancesOf(${1:Example}::class, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertContainsOnlyInstancesOf(Example::class, $haystack)",
      "matches": {
        "asconoi": true
      }
    },
    "c37d4cbb-ded9-3bf2-838c-48ec3140b4de": {
      "content": "outline: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol": true,
        "outline": true
      }
    },
    "c3848b9b-b1d8-34ea-bd98-30f41aee28a1": {
      "content": "borderRightColor: ${1},",
      "doc": "borderRightColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderRightColor",
      "matches": {
        "bor": true
      }
    },
    "c387e243-c2ba-3f1a-aba3-476fea836c43": {
      "content": "render inline:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :inline",
      "matches": {
        "ri": true
      }
    },
    "c387ebb8-7bd5-3214-80ed-9681b0b3da9b": {
      "content": "place-items: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:e": true
      }
    },
    "c389e756-d5c0-3645-ad92-06a225b46369": {
      "content": "caption-side ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      }
    },
    "c38dc8f3-10e4-394b-9d6e-fce732659b43": {
      "content": "grid-template-rows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtr": true
      }
    },
    "c38fe841-d858-3b52-a30a-8dcc6e0c1b4f": {
      "content": "else {\n\t$0\n}",
      "doc": "Code snippet for else statement",
      "filetype": "c",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "else": true
      }
    },
    "c39804f3-4399-327a-be8e-601e626b4357": {
      "content": "background-size: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      }
    },
    "c39fb678-f2dd-30da-9a8a-24bce3aa2f15": {
      "content": "text-replace: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tr:n": true
      }
    },
    "c3a3f921-788a-3ca0-a00d-449b5fe5030b": {
      "content": "else if ($1) {\n\t$0\n}",
      "doc": "Code snippet for else-if statement",
      "filetype": "c",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "else if": true
      }
    },
    "c3a61205-4813-314b-b869-a30f64c3cd40": {
      "content": "form_upload(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_upload": true
      }
    },
    "c3bb10b7-3e5f-3fe1-a702-1f0043381b7f": {
      "content": "{% autoescape %}\n\t${0}\n{% endautoescape %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig autoescape",
      "matches": {
        "autoescape": true
      }
    },
    "c3bb6272-1b6a-3067-9615-5fe42de7a828": {
      "content": "@deprecated ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deprecated": true
      }
    },
    "c3bbcd58-f958-3649-9f55-b4927e901601": {
      "content": "vertical-align: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va": true
      }
    },
    "c3be28b4-1dfb-3519-a242-3c6e72a459b9": {
      "content": "${1:dfname} <- data.frame(${2:x} = numeric(), ${3:y} = numeric())",
      "doc": "Code snippet for an empty numerical data frame",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Empty data frame (numeric)",
      "matches": {
        "df2n": true
      }
    },
    "c3c2e4d8-4bb5-36e5-a868-aee100744b3c": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "c3c61068-223d-3c98-9334-642502246837": {
      "content": "Run Keyword If Test Failed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If Test Failed",
      "matches": {
        "rkitf": true
      }
    },
    "c3cf737c-35ec-3267-9b97-f6ad245199d3": {
      "content": "| ${1:Column1}  | ${2:Column2}   | ${3:Column3}   |\n|-------------- | -------------- | -------------- |\n| ${4:Item1}    | ${5:Item1}     | ${6:Item1}     |\n${0}",
      "doc": "Insert table with 2 rows and 3 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert table",
      "matches": {
        "table": true
      }
    },
    "c3d0238f-8e87-3652-a0d4-b19299e2a47d": {
      "content": "<?php echo ${1} ?>${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pecho": true
      }
    },
    "c3dc63a4-286e-3ae3-b3d4-83af6ba4d3a9": {
      "content": "log($2)",
      "doc": "float log(float x)\nvec2 log(vec2 x)\nvec3 log(vec3 x)\nvec4 log(vec4 x)\n\nThe log function returns the power to which the constant e has to be raised to produce x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "log",
      "matches": {
        "log": true
      }
    },
    "c3e3e912-3c46-3256-b978-b25fc55b55a7": {
      "content": "assert_difference '${1:Model}.${2:count}', ${3:1} do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asd": true
      }
    },
    "c3e4bffd-7949-3a7f-8a23-7bc46d12a965": {
      "content": "(lambda (${1}) ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lambda": true
      }
    },
    "c3ed0c43-24b6-3f4a-b43a-d4c16d1ce722": {
      "content": "bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "c3ed96b3-b183-3a77-b668-5c95f3dc9e88": {
      "content": "multi ${1:function_name}(${2:Str $var}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mul": true
      }
    },
    "c3ffdf7e-dad2-35b6-9c46-a37813ccd251": {
      "content": "vmap ${1} ${2}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vm": true
      }
    },
    "c4021563-925d-3cfa-b648-0c676ed4225f": {
      "content": "require('dotenv-safe').config({ allowEmptyValues: ${1|true,false|} })",
      "doc": "If a variable is defined in the example file and has an empty value in the environment, enabling this option will not throw an error after loading.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-allowemptyvalues",
      "matches": {
        "dotenv-safe allowemptyvalues": true
      }
    },
    "c4042ec1-2505-3125-bf3b-5f8d39ff4233": {
      "content": "| replace: '${1:target}', '${2:replace}'",
      "doc": "String filter: replace",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter replace",
      "matches": {
        "replace": true
      }
    },
    "c4043478-b320-3576-bee8-5099431f47d2": {
      "content": "display: inline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      }
    },
    "c4088d07-932b-3dcb-a817-62705c97a067": {
      "content": "${1:FIELDNAME} = forms.FileField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "FileField",
      "matches": {
        "ffile": true
      }
    },
    "c40bbcd2-b851-31a3-8679-0c447415a19e": {
      "content": "${1:obj}.slideDown('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdown": true
      }
    },
    "c40c323d-5f91-3b27-99fd-3eafd8d82ddb": {
      "content": "static_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "static_cast<>()",
      "matches": {
        "static_cast": true
      }
    },
    "c41252a3-f9df-3e4d-b344-8bb271253d5c": {
      "content": "if (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "c413304d-97a1-3858-82ad-af78b2cfe858": {
      "content": "const ${1:results} = await request(\n  ${2:url},\n  ${3:query},\n  ${4:variables}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-request-variables",
      "matches": {
        "graphql-request request variables": true
      }
    },
    "c4147bcc-2846-3091-9d1d-fbc4f16c124d": {
      "content": "border-bottom ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      }
    },
    "c41e5a86-2fc0-34a7-b8b1-157b31314990": {
      "content": "${1:callbacks}.has(${2:callback})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Chas": true
      }
    },
    "c422dd5e-49b3-3a5f-91a5-579f23bde208": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "c4362fc3-e267-3348-b5a4-f83cd6a8b88b": {
      "content": "Run Keyword If All Tests Passed    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword If All Tests Passed",
      "matches": {
        "rkiatp": true
      }
    },
    "c43e3ae2-e08e-31a5-bb03-079407958236": {
      "content": "$1 <-- $2",
      "doc": "An arrow for the message return on a Sequence diagram",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Sequence Return",
      "matches": {
        "ret": true
      }
    },
    "c442668d-0cfb-3540-8ecf-5eaa6ddf603a": {
      "content": "package main\n\nfunc main() {\n\t$0\n}",
      "doc": "Snippet for main package & function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "package main and main function",
      "matches": {
        "pkgm": true
      }
    },
    "c44ced29-a250-352e-abe8-756358d7b79b": {
      "content": "import React, { Component } from 'react';",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "import React and Component",
      "matches": {
        "irc": true
      }
    },
    "c44ddd3e-0104-352f-98b3-f14a4ed1a69e": {
      "content": "display: ${1:none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display",
      "matches": {
        "d": true
      }
    },
    "c4530bb1-449d-3d02-9791-6428145905d3": {
      "content": "System.Runtie.CompilerServices",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.r.c": true
      }
    },
    "c455477f-aecf-3917-8ee7-590215edc20f": {
      "content": "self.$0",
      "doc": "Shortend snippet to reference the self property in an object.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "self",
      "matches": {
        ".": true
      }
    },
    "c4576c07-7481-34a2-9698-582d48a34f5f": {
      "content": "content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct": true
      }
    },
    "c45e8836-5470-3ab4-a95d-756784f2e96e": {
      "content": "{ path: '${1:path}', component: ${2:Name}Component },",
      "doc": "Angular eager route path",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-eager-route-path",
      "matches": {
        "a-route-path-eager": true,
        "angular eager route path": true
      }
    },
    "c4612613-9067-3c2a-9b16-6666edfe778a": {
      "content": "${1:obj}.live('${2:events}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "live": true
      }
    },
    "c463f319-a14b-3afe-a994-6fe7a08866e0": {
      "content": "${1:void} (^${2:name}) (${3:parameters}) = ^${1:void}(${3:parameters}) {\n\n};",
      "doc": "Create a block local variable",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Block type var",
      "matches": {
        "blockvar": true
      }
    },
    "c465a8a1-6fec-310c-9ccb-1bc00ae30797": {
      "content": "border-style: outset;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      }
    },
    "c4669b4b-bf11-39e4-ab0b-892de2211a78": {
      "content": "_.shuffle(${collection})",
      "doc": "_.shuffle([1, 2, 3, 4]);\n// => [4, 1, 3, 2]\n\nCreates an array of shuffled values, using a version of the\n[Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-shuffle",
      "matches": {
        "lodash shuffle": true
      }
    },
    "c46df16e-af11-3deb-b41d-d38df8f47b98": {
      "content": "it '${1:spec_name}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      }
    },
    "c472e5b4-53c0-3004-9104-ee51722e085f": {
      "content": "FUNCTION ATAN(${1:tangent})$0",
      "doc": "function trigonometric arc-tangent, or inverse tangent, of tangent",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-ATAN",
      "matches": {
        "FUNCTION ATAN": true
      }
    },
    "c47bbd4b-cf0e-3d9e-ba6d-2c3f1645797d": {
      "content": "flex-basis: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxb:a": true
      }
    },
    "c47f0b2e-9f0a-3f65-aa44-e0eebad6355b": {
      "content": "stop run returning ${1:0}",
      "doc": "stop run returing [0]",
      "filetype": "vscode_cobol-compound",
      "grammar": "lsp",
      "label": "sr0",
      "matches": {
        "sr0": true
      }
    },
    "c4837a7f-0d3a-3f9a-b69c-d9df16a29116": {
      "content": "$this->${1:method}()->shouldNotEndWith(${2:'string'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotEndWith('string')",
      "matches": {
        "snend": true
      }
    },
    "c48973ef-430a-3dd4-8d44-ccd6f1f6cf6c": {
      "content": "import {$2} from '${1:module}'",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "import module destructured",
      "matches": {
        "id": true
      }
    },
    "c48c6279-ebd7-3290-a52b-7b30828086b8": {
      "content": "const ${1:sequence} = async () => {\n  await ${2:animateControls}.start({ ${5:opacity: 1} })\n}",
      "doc": "sequence for animation controls",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-sequence",
      "matches": {
        "framer-motion sequence": true,
        "sequence": true
      }
    },
    "c48e69f7-6a8a-32b2-bbf4-f98eafe13497": {
      "content": "${1:router}.afterEach((to, from) => {\n\t${2:// to and from are both route objects.}\n})$0",
      "doc": "router.afterEach",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerAfterEach",
      "matches": {
        "routerAfterEach": true
      }
    },
    "c49886e3-da38-3108-ac30-badd571c0287": {
      "content": "//${2:STEPID01} EXEC PGM=IEFBR14\n$0",
      "doc": "IEFBR14 Data set utility",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/IEFBR14",
      "matches": {
        "IEFBR14": true
      }
    },
    "c499dff4-ce27-3150-b53a-f014dcdad0af": {
      "content": "font-family: ${0:Helvetica,Arial},sans-serif",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      }
    },
    "c49e5b8e-eadb-3e80-85f7-0618008f7ef5": {
      "content": "@spec ${1:name}(${2:args}) :: ${3:returns}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      }
    },
    "c4a1986d-2707-327e-8de0-a7bc005bcfed": {
      "content": "else if (${1}) {\n    ${2:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true,
        "elseif": true
      }
    },
    "c4a521dc-3499-36a9-b16c-4fe037cc364b": {
      "content": "blockIdx.${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Block Index",
      "matches": {
        "bid": true
      }
    },
    "c4a5be67-5fed-38ff-a71e-434320171c49": {
      "content": "_${1}_${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "_emphasis_",
      "matches": {
        "emphasis2": true
      }
    },
    "c4abbabe-b6e3-3d69-9606-0c332ae3deaf": {
      "content": "else:\n\t${0:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "else: ...",
      "matches": {
        "else": true
      }
    },
    "c4ad6d18-1901-339a-8674-dc8cc2d989c2": {
      "content": "for (const ${1:iterator} of ${2:object}) {\n\t$0\n}",
      "doc": "For-Of Loop",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "For-Of Loop",
      "matches": {
        "forof": true
      }
    },
    "c4aee0b5-eefb-3f11-bcb3-8d429cafd5c9": {
      "content": "$this->db->or_where(\"${1:key}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-or_where": true
      }
    },
    "c4b99173-af7e-3d9e-9e79-bc63bfa32f52": {
      "content": "_.keyBy(${collection}, ${iteratee})",
      "doc": "var array = [\n  { 'dir': 'left', 'code': 97 },\n  { 'dir': 'right', 'code': 100 }\n];\n\n_.keyBy(array, function(o) {\n  return String.fromCharCode(o.code);\n});\n// => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\n_.keyBy(array, 'dir');\n// => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\nCreates an object composed of keys generated from the results of running\neach element of `collection` thru `iteratee`. The corresponding value of\neach key is the last element responsible for generating the key. The\niteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-keyby",
      "matches": {
        "lodash keyby": true
      }
    },
    "c4c07459-feeb-3b64-b7a2-46a18f7920fb": {
      "content": "text-align-last: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:c": true
      }
    },
    "c4c4de00-cc65-37d9-8b67-bb75d4c56b18": {
      "content": "text-indent: -9999px",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      }
    },
    "c4c862d7-6821-30e4-b7d4-65fc11111e63": {
      "content": "<embed src=\"$1\">$2",
      "doc": "HTML - Defines external interactive content ot plugin",
      "filetype": "html",
      "grammar": "lsp",
      "label": "embed",
      "matches": {
        "embed": true
      }
    },
    "c4c9e5cb-8af4-3804-aa38-b8a85de2bed6": {
      "content": "align-items: baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      }
    },
    "c4d22ca4-8dde-37a7-823d-fce7f5e1103c": {
      "content": "| plus: ${1:1}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "plus": true
      }
    },
    "c4d2543e-f4b7-31a0-a5d7-f931d2e8c0b6": {
      "content": "mixed.validateSync()",
      "doc": "mixed.validateSync(value: any, options?: object): any\n\nRuns validatations synchronously if possible and returns the resulting value,\nor throws a ValidationError. Accepts all the same options as validate.Synchronous validation only works if there are no configured async tests, e.g tests that return a Promise.\nFor instance this will work:let schema = number().test(\n  \"is-42\",\n  \"this isn't the number i want\",\n  value => value != 42\n);\n\nschema.validateSync(23); // throws ValidationError\nhowever this will not:let schema = number().test(\"is-42\", \"this isn't the number i want\", value =>\n  Promise.resolve(value != 42)\n);\n\nschema.validateSync(42); // throws Error",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-validate-sync",
      "matches": {
        "yup mixed validatesync": true
      }
    },
    "c4d2975f-1d99-3692-a962-7f97f7d0d57a": {
      "content": "Ada.Text_IO.Put(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Put",
      "matches": {
        "put": true
      }
    },
    "c4d42a53-3cae-35bd-b94f-29f792261b2d": {
      "content": "// SPDX-License-Identifier: MIT",
      "doc": "SPDX License",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "spdx license",
      "matches": {
        "spdx": true
      }
    },
    "c4d58879-3483-31d9-86f1-9791b27b14dc": {
      "content": "@article{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    journal = {${4}},\n    year = {${5}},\n    memo = {volume, number, pages, month, note}\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@article": true,
        "article": true
      }
    },
    "c4d7484f-034e-3662-b3e5-198c70fc3475": {
      "content": "self.fail('${1:message}')$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Fail (a test)",
      "matches": {
        "fail": true
      }
    },
    "c4d9dd3e-e72b-335c-a57d-903d8a9159cd": {
      "content": "$this->markTestSkipped(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->markTestSkipped()",
      "matches": {
        "marks": true
      }
    },
    "c4db15cb-828f-359b-8301-010282d56681": {
      "content": "font-style: italic;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:i": true
      }
    },
    "c4de3788-6e28-3d9d-ad46-99d8d648c46e": {
      "content": "background-repeat repeat-y",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      }
    },
    "c4e1c9ac-18f0-312d-8eca-dd34d765744d": {
      "content": "logger.fatal { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "logf": true
      }
    },
    "c4e3caa8-fafa-36fa-bc2f-1b114a96fad8": {
      "content": "grid-auto-flow: ${1:row} ${0:dense}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf+": true
      }
    },
    "c4e74e60-0d47-3505-ba0f-5e13977472fc": {
      "content": "const ${1:memoizedCallback} = useCallback(\n() => {\n\t${2}(${3})\n},\n[$3]\n);",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useCallback",
      "matches": {
        "usecb": true
      }
    },
    "c4ece99e-fe40-3ed4-974a-43a35d0b7c6c": {
      "content": "letter-spacing ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lts": true
      }
    },
    "c4ee6222-d17e-34f8-b552-7b727835a5b1": {
      "content": "border-corner-image: url('${0}')",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      }
    },
    "c4ee713b-8447-3bae-9876-bfe057d2169f": {
      "content": "\\node[${1}](${2:name}) ${3};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\node": true,
        "node": true
      }
    },
    "c4f999ba-3e18-3679-878e-2cfa7bf9042e": {
      "content": "CALL \"$1\" USING\n    BY ${2|VALUE,REFERENCE,CONTENT|} ${3:IDENTIFER}\n    RETURNING ${4:RETURN-CODE}\nEND-CALL\n$0",
      "doc": "CALL literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "CALL",
      "matches": {
        "CALL": true
      }
    },
    "c503f396-8387-3ef1-a906-ba9a792efea2": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n})\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API - Typescript",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-single-file-component-with-typescript-v3",
      "matches": {
        "vue v3 base ts": true
      }
    },
    "c503f7d2-ca9f-326a-bc0c-1a313118fd78": {
      "content": "$this->db->insert(\"${1:table}\", $${2:data});${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-insert": true
      }
    },
    "c50745ca-36f7-3946-9360-e29498f37ae5": {
      "content": "background-repeat: repeat-x",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:x": true
      }
    },
    "c50a955b-2824-394f-82d4-b2b12582982e": {
      "content": "_.upperCase(${string})",
      "doc": "_.upperCase('--foo-bar');\n// => 'FOO BAR'\n\n_.upperCase('fooBar');\n// => 'FOO BAR'\n\n_.upperCase('__foo_bar__');\n// => 'FOO BAR'\n\nConverts `string`, as space separated words, to upper case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-uppercase",
      "matches": {
        "lodash uppercase": true
      }
    },
    "c50d3fd6-e22d-3cab-bd26-0352367b0e9f": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "c50ef6a6-f062-32c4-a2ed-14b5cf215c08": {
      "content": "for(int $2 = 0; $2 < $3; $2++){\n\t\n}",
      "doc": "for( ; ; ){\n\t//code\n}\n\nThe keyword for is used to describe a loop that is controlled by a counter. The parentheses enclose three expressions that initialize, check and update the variable used as counter. The body defined by curly braces encloses the statements that are executed at each pass of the loop.\n\nfor(int i = 0; i <= 99; i++){\n\taFunction();\n}\n\nThe execution of a single pass or the whole loop can be aborted by using a continue or a break statement respectively.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "c50f1a33-26e2-3372-95bc-925d13acb103": {
      "content": "@property (nonatomic, ${1:memory control}) ${2:type} ${3:$CLIPBOARD};",
      "doc": "Create an Objc property with copied text",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create property for copied text",
      "matches": {
        "makeproperty": true,
        "mp": true
      }
    },
    "c51516a1-9b9a-3650-b33e-733413c95c7a": {
      "content": "Session::get(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_get": true
      }
    },
    "c5193018-28d3-3de4-94a8-5d45d5f049ad": {
      "content": "list-style-type: upper-roman;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type: upper-roman",
      "matches": {
        "listur": true
      }
    },
    "c526c45b-2fd3-358a-9f2a-d7037997e142": {
      "content": "::: {.corollary #${1:label} name=\"${2:corollary name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown corollary",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown corollary",
      "matches": {
        "corollary": true
      }
    },
    "c526dce5-8cda-3a3e-a747-5abf490578c8": {
      "content": "mixed.notOneOf()",
      "doc": "mixed.notOneOf(arrayOfValues: Array<any>, message?: string | function)\n\nBlacklist a set of values. Values added are automatically removed from any whitelist if they are in it.\nThe ${values} interpolation can be used in the message argument.let schema = yup.mixed().notOneOf([\"jimmy\", 42]);\n\nawait schema.isValid(42); // => false\nawait schema.isValid(new Date()); // => true",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-not-one-of",
      "matches": {
        "yup mixed notoneof": true
      }
    },
    "c5299ca0-b2ee-3002-8a92-51d3e89375a6": {
      "content": "{{ paginator.${next:previous}_page }}",
      "doc": "Tag: paginate next or previous page",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag paginate next or previous page",
      "matches": {
        "paginate": true
      }
    },
    "c52a2aca-718d-3d67-a8b1-c21fddca0a60": {
      "content": "{%- gist ${gist:user/gist-id} -%}",
      "doc": "Add a gist code block",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag gist",
      "matches": {
        "gist": true
      }
    },
    "c5307735-30a8-390b-989b-6351c7ea1353": {
      "content": "white-space-collapse: break-all",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:ba": true
      }
    },
    "c531ba78-4592-3354-8f33-c47dbb07832d": {
      "content": "validates_numericality_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:is not a number}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_numericality_of",
      "matches": {
        "vn": true
      }
    },
    "c53454e4-cf00-3106-b90c-940e5e787311": {
      "content": "while {${1}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "c536f546-dbbb-3d6d-99e8-e8eb7c48547a": {
      "content": "list-style-type: ${1:hebrew/armenian/georgian};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: other (list)",
      "matches": {
        "list": true
      }
    },
    "c54e473c-8116-3367-9d38-58fd2bbe7697": {
      "content": "methods: {\n\t${1:method}() {\n\t\tconsole.log('method');\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vmethods": true
      }
    },
    "c555366a-338f-3689-9087-f0a1818d27fb": {
      "content": "args <- commandArgs(TRUE)\nif (length(args) == 0)\n    stop(\"Please give ${1:}!\")\nif (!all(file.exists(args)))\n     stop(\"Couln't find input files!\")",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cmdarg": true
      }
    },
    "c55d8f75-ef3f-3465-821a-317c403cff5d": {
      "content": "{{^${1:value}}}\n${0:${VISUAL}}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{^value}} ... {{/value}}",
      "matches": {
        "ifn": true
      }
    },
    "c562d8b9-a1f9-380f-b815-0b1b30f2b41c": {
      "content": "cy.viewport('${1:preset}');",
      "doc": "Control the size of the screen for your application via presets. Preset supports the following options: ipad-2, ipad-mini, iphone-3, iphone-4, iphone-5, iphone-6, iphone-6+, iphone-x, iphone-xr, macbook-11, macbook-13, macbook-15, samsung-note9, samsung-s10",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-viewport-preset",
      "matches": {
        "cypress viewport preset": true
      }
    },
    "c567f317-a1d2-3d1e-b15a-ab60c47ac3d2": {
      "content": "[ ${1} ]",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      }
    },
    "c5685713-17af-3f41-86e0-84bac858f42e": {
      "content": "%% TODO: ${0}",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      }
    },
    "c56ec923-83e8-3ad3-99a4-727bbf875b76": {
      "content": "import { css } from '@emotion/core'\n\nexport const ${TM_FILENAME_BASE} = () => {\n\treturn (\n\t\t<div css={css``}>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Creates a React functional component with emotion",
      "filetype": "react",
      "grammar": "lsp",
      "label": "reactFunctionComponentWithEmotion",
      "matches": {
        "rfce": true
      }
    },
    "c57464c2-b5fd-34a1-9b6f-91d57179a622": {
      "content": "marginRight: ${1},",
      "doc": "marginRight",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginRight",
      "matches": {
        "mar": true
      }
    },
    "c5768e92-9748-342e-9e36-844f7beed0e4": {
      "content": "validates_format_of :${1:attribute}, with: /${2:^[${3:\\w\\d}]+\\$}/${4:, on: :${5:create}, message: \"${6:is invalid}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_format_of if",
      "matches": {
        "vfif": true
      }
    },
    "c57adf36-a3df-38b1-9089-0476ac3b9d43": {
      "content": "font-emphasize-position after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:a": true
      }
    },
    "c587cadb-b10a-35bb-ba74-7fe4964ba14e": {
      "content": "border-bottom-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      }
    },
    "c595c696-33e4-39d4-8c32-5e7f41d5c483": {
      "content": "echo CHtml::mailto('${1:text}', '${2:email}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhmt": true
      }
    },
    "c5a623d4-211b-3cb8-a4ac-26dfd20f6969": {
      "content": "function locale-time-from-seconds(${1:integer-time},${2:locale-optional})$0",
      "doc": "format integer-time (internal-format) according to locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-locale-time-from-seconds",
      "matches": {
        "function locale-time-from-seconds": true
      }
    },
    "c5a76e2b-a81e-3c62-8ceb-76645eace1a7": {
      "content": "merge(${1:source}, ${2:alternative}, mask=(${2:$1>0}))",
      "doc": "merge",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "merge",
      "matches": {
        "merge": true
      }
    },
    "c5aa6160-5854-3fcc-9629-788c6af3a554": {
      "content": "try {\n\t${0}\n} finally {\n\t\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "try/finally",
      "matches": {
        "tf": true
      }
    },
    "c5ac7c48-ff89-3c6b-836e-ca0c32fa4f31": {
      "content": "beforeAll(() => {\n\t$0\n});",
      "doc": "beforeAll function is called once before all specs",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-beforeall",
      "matches": {
        "ba": true,
        "jest beforeall": true
      }
    },
    "c5b2f541-4631-3161-bd79-fdbb1007988a": {
      "content": "\\$_POST['${1:#:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "post": true
      }
    },
    "c5b80254-dc6c-3cf8-9e1a-800b747a3f8a": {
      "content": "{% endjs %}$0",
      "doc": "endjs",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endjs",
      "matches": {
        "endjs": true
      }
    },
    "c5b89d6b-4447-37e6-8677-135d0334c58f": {
      "content": "padding: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "padding",
      "matches": {
        "pad": true
      }
    },
    "c5bdeefa-3ad4-33a4-a8cf-652544728a78": {
      "content": "final switch(${1:/*var*/})\n{\n\tcase ${2:/*value*/}:\n\t\t$3\n\t\tbreak;\n\tcase ${4:/*value*/}:\n\t\t$5\n\t\tbreak;\n\t${7:/*more cases*/}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "final switch (fsw)",
      "matches": {
        "fsw": true
      }
    },
    "c5cede97-f0e1-39a6-8586-95ecd2bd95bb": {
      "content": "<h6 id=\"${1}\">${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6#": true
      }
    },
    "c5d0f739-5bbc-39dc-a2b4-9aad73f95233": {
      "content": "${1:FIELDNAME} = ArrayField()",
      "doc": "ArrayField (marray).\n\n*PostgreSQL specific model fields*.\n\nA field for storing lists of data",
      "filetype": "models",
      "grammar": "lsp",
      "label": "marray",
      "matches": {
        "marray": true
      }
    },
    "c5d322e3-f2f1-3fb1-b713-2124732ea3d7": {
      "content": "DELETE FROM ${1:table}\nWHERE ${2:condition};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "DELETE FROM ... WHERE ...",
      "matches": {
        "DELETE_DATA": true
      }
    },
    "c5d40fb1-91e3-3e51-9b9c-91213aea4994": {
      "content": "#if ${1:FOO}\n\t${0:${VISUAL}}\n#endif",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      }
    },
    "c5d94021-3beb-3e8b-aaaf-64d5266c7162": {
      "content": "create unique index ${1:name} on ${2:table}(${0:column});",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uind": true
      }
    },
    "c5e04dba-d28c-33f4-b64f-024253c03f87": {
      "content": "_${1}_${2}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "_italic_",
      "matches": {
        "italic": true
      }
    },
    "c5e2cfc5-d52e-3a1e-8a00-534cadbbeb54": {
      "content": "grid-template-columns: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gtc": true
      }
    },
    "c5eeef58-9bca-398f-8a94-493c13175ff4": {
      "content": "text-align: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      }
    },
    "c5ef626a-895e-3afb-9cf8-7c3b3d59d8ff": {
      "content": "justify-content: space-around",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      }
    },
    "c5f1230c-af2c-3f7d-a8f3-efd23a0e5c83": {
      "content": "mapGetters",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mapGetters",
      "matches": {
        "mapGetters": true
      }
    },
    "c5f29a50-394f-35e5-ba40-3065fe162413": {
      "content": "The MIT License (MIT)\n\nCopyright (c) ${CURRENT_YEAR} ${0:Author}\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
      "doc": "MIT License",
      "filetype": "global",
      "grammar": "lsp",
      "label": "MIT",
      "matches": {
        "mitl": true
      }
    },
    "c5f77c86-c6b8-3c4d-abcb-6e35b138d427": {
      "content": "switch (${1:statement})\n{\n\tcase ${2:value}:\n\t\tbreak;\n\n\tdefault:\n\t\t$0break;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "switch statement",
      "matches": {
        "switch": true
      }
    },
    "c60bae08-1e13-3d50-a2fa-aab3aed3636e": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "c60dee35-4963-3971-82a1-37ec7eb16606": {
      "content": "text-justify: inter-cluster",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ic": true
      }
    },
    "c6113dc5-4e72-307f-ab5b-85ce13b2f54f": {
      "content": "notify { \"${1:message}\": }",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "notify": true
      }
    },
    "c612dbdf-2a70-34c7-9425-55cbda8bf389": {
      "content": "{% block $1 %}\n\t$2\n{% endblock $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "block": true
      }
    },
    "c61320f6-be31-31a2-8bc5-e529d87e57b5": {
      "content": "byte ${1:b}${2: = }${0:127};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "byte": true
      }
    },
    "c614de21-afc5-3a3f-b083-c5030a09fd46": {
      "content": "let ${1:s:M} = ${2:s:V}.import('${3:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "let s:M = s:V.import('...')",
      "matches": {
        "vital_import": true
      }
    },
    "c61a8d98-6b08-3631-9218-5d5d1bb7c59f": {
      "content": "font-variant normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv:n": true
      }
    },
    "c61aed45-ac4f-38f9-88ff-478ec80c9216": {
      "content": "text-transform ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "c6237bb1-a239-3085-8f05-cfbc41d3116b": {
      "content": "bind:group={${1:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-group",
      "matches": {
        "svbind-group": true,
        "svelte bind group": true
      }
    },
    "c625b246-0a03-3ef5-9d64-790446f2ad41": {
      "content": "\\begin{cases}{${1}}\n\t${2:TARGET}\n\\end{cases}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{cases} \\cases": true,
        "cases": true
      }
    },
    "c62706f3-0af1-3d85-85af-22436e272a2d": {
      "content": "{% endifchildren %}$0",
      "doc": "endifchildren",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endifchildren",
      "matches": {
        "endifchildren": true
      }
    },
    "c6291840-3be2-3b20-bfda-ca50f7b41f1f": {
      "content": "z-index: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      }
    },
    "c62b53b8-4588-3888-8b77-92598644b138": {
      "content": "validates :${0:attribute}, uniqueness: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vu": true
      }
    },
    "c631aa65-0535-306e-95bf-cb1cadf77ec3": {
      "content": "#[test]\nfn ${1:function_name}_test() {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Unit test function",
      "matches": {
        "test": true
      }
    },
    "c632d7ef-fc0b-3e9f-8d86-704aca9cfa81": {
      "content": "text-align-last auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal:a": true
      }
    },
    "c63a9336-88ca-387d-bbab-4f4787e8f3c2": {
      "content": "<h3 id=\"${1}\">${0}</h3>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h3#": true
      }
    },
    "c63da65a-5f1f-3488-b50a-0274a7eeb486": {
      "content": "${fn:substringBefore(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "substr:b": true
      }
    },
    "c6515e9d-3684-3de1-9f12-d66c10d0cdb6": {
      "content": "$.queue(${1:element}${2:, name}${3:, newQueue})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "queuee": true
      }
    },
    "c6585140-4e88-3e22-827f-b859f4781844": {
      "content": "Page Should Contain Textfield    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Textfield",
      "matches": {
        "psct": true
      }
    },
    "c65a4be9-061c-33be-942e-5a25f82096d1": {
      "content": "{%- include '${0:snippet}' -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include-": true
      }
    },
    "c66864e2-a961-3ead-a2cf-7cbe9dabe311": {
      "content": "_.extend(${object}, ${sources})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assignIn({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\nThis method is like `_.assign` except that it iterates over own and\ninherited source properties.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-extend",
      "matches": {
        "lodash extend": true
      }
    },
    "c66ebb90-3ddc-3b8d-858c-d98dd4f7fccd": {
      "content": "[source,${1:language}]\n----\n${0}\n----",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "source code block --- source ---",
      "matches": {
        "block-source": true,
        "source": true
      }
    },
    "c66f84bf-423b-3818-985e-cb3b7d61d9ba": {
      "content": "```${1:language}\n$0\n```",
      "doc": "Insert fenced code block",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert code block",
      "matches": {
        "codeblock": true
      }
    },
    "c67128cd-6022-39a0-965e-b2217768376e": {
      "content": "{| ${0} |}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arec": true
      }
    },
    "c6739a89-69b3-3bf2-9d71-5362e09f694e": {
      "content": "echo CHtml::listBox('${1:name}', '${2:select}',array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlb": true
      }
    },
    "c67521c5-1dbe-3258-8ba9-3b1370778ab9": {
      "content": "nuxtServerInit ({ commit }, { req }) {\n\t${1:data}\n}",
      "doc": "In universal mode, useful to fetch data on the server and give directly to the client-side.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-serverinit",
      "matches": {
        "nuxt serverinit": true
      }
    },
    "c675c50f-17c8-3c80-96aa-2266f9706722": {
      "content": "$.inArray(${1:value}, ${0:array})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inarr": true
      }
    },
    "c681282f-7b2a-314d-b414-128726f044a6": {
      "content": "// TODO: $1",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "TODO (todo)",
      "matches": {
        "todo": true
      }
    },
    "c68b0a0f-4da9-31f5-aa36-d5ca32cf09f4": {
      "content": "border-right: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-right",
      "matches": {
        "borr": true
      }
    },
    "c690d9b4-8133-3b23-b3d8-ea3506a77725": {
      "content": "each_value { |${1:val}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eav": true
      }
    },
    "c69597fc-80d8-38f5-aed0-b373126b0f46": {
      "content": "${1:FIELDNAME} = models.ManyToManyField(${2:OtherModel}${3:, related_name=''}${4:, limit_choices_to=}${5:, symmetrical=False}${6:, through=''}${0:, db_table=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m2m": true
      }
    },
    "c697c661-6eaa-3322-a787-e6c92b4d86d9": {
      "content": "{% else %}",
      "doc": "Control flow tag: else",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag else",
      "matches": {
        "else": true
      }
    },
    "c697e1b2-4d74-392d-90fa-c14882a9e403": {
      "content": "write(*,*) ${0}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "c69f66dc-5ef9-3fd9-b6e5-88c3704ec8ad": {
      "content": "@change=\"$emit('change', $event.target.value)\"",
      "doc": "Vue Emit from Child Component",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Emit from Child",
      "matches": {
        "vemit-child": true
      }
    },
    "c69fa329-bd75-38b2-98d1-ddf6607aa1be": {
      "content": "(:refer-clojure :exclude [${0}])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "refer": true
      }
    },
    "c6a4ca49-5e39-34ac-95d3-e13abed63dbe": {
      "content": "if ${1:condition}\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "c6a79d2a-59d9-3b8e-b8f7-bd954ef2c60a": {
      "content": "{% codeblock ${1:title} lang:${2:language} ${3:URL} ${4:link_text} %}\n${0:code_snippet}\n{% endcodeblock %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "codeblock-full": true
      }
    },
    "c6abf7a4-bb10-3f51-ad8a-6542ec3432ed": {
      "content": "sin($2)",
      "doc": "float sin(float angle)\nvec2 sin(vec2 angle)\nvec3 sin(vec3 angle)\nvec4 sin(vec4 angle)\n\nThe sin function returns the sine of an angle in radians. The input parameter can be a floating scalar or a float vector. In case of a float vector the sine is calculated separately for every component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "sin",
      "matches": {
        "sin": true
      }
    },
    "c6b98072-729e-3cb3-a1e9-9ffe9a88f3fb": {
      "content": "place-self: ${1:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      }
    },
    "c6bbd793-0171-3812-b88d-ed2741931022": {
      "content": "font-emphasize-style disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:ds": true
      }
    },
    "c6bbfa82-22a0-3b62-8d4d-9581456e2574": {
      "content": "method ${1:method_name}(${2:$attr}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mth": true
      }
    },
    "c6c3c67a-8fab-36a1-98cc-f40f4ffa4968": {
      "content": "gem '${1:paperclip}', git: \"${2:git://github.com/thoughtbot/paperclip.git}\"${3:, branch: \"${4:rails3}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "gem :git",
      "matches": {
        "gemg": true
      }
    },
    "c6c6d2d1-15ac-3246-a9dd-32dbe36abd99": {
      "content": "word-break: break-strict",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:bs": true
      }
    },
    "c6c97a2a-4c60-343e-8a95-6672534ce858": {
      "content": "border-left-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blw": true,
        "border-left-width": true
      }
    },
    "c6db1794-0dda-36a7-8b80-ac388d4c9a75": {
      "content": "_.max(${array})",
      "doc": "_.max([4, 2, 8, 6]);\n// => 8\n\n_.max([]);\n// => undefined\n\nComputes the maximum value of `array`. If `array` is empty or falsey,\n`undefined` is returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-max",
      "matches": {
        "lodash max": true
      }
    },
    "c6dc2f31-000a-31b7-bfc2-fc01c6b470c9": {
      "content": "SynthDef(\\\\${1:synthName}, {${2: |${3:x}|}\n\t$0\n}).add;",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdef": true
      }
    },
    "c6ddca71-603f-364f-8273-6b72ec2e1ef9": {
      "content": "[[NSUserDefaults standardUserDefaults] setObject:${1:object} forKey:${2:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Write to defaults (setprefs)",
      "matches": {
        "setprefs": true
      }
    },
    "c6ece00b-0b21-3610-a0a1-07d7785145b1": {
      "content": "renderBinary(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renb": true
      }
    },
    "c6fc3438-8eb6-38cd-9fe8-4b837b33a614": {
      "content": "<input type=\"datetime-local\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:datetime-local": true
      }
    },
    "c700f855-3c89-3f0f-b88f-29ca563b6265": {
      "content": "${1:#:name} = (${2:#:args}) ->\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "c71c8d39-d607-32f6-82b2-ad0f24fd7fe7": {
      "content": "context '${1:message}' do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert context block",
      "matches": {
        "cont": true
      }
    },
    "c71cc326-8668-333b-b71d-303b49f41a96": {
      "content": "right auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      }
    },
    "c7277a87-22f0-3d89-a8aa-b94830be95e3": {
      "content": "from django.contrib.postgres.forms import ${1|SimpleArrayField,SplitArrayField,HStoreField,JSONField,IntegerRangeField,FloatRangeField,DateTimeRangeField,DateRangeField|}",
      "doc": "PostgreSQL specific forms fields",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ipostgresff",
      "matches": {
        "ipostgresff": true
      }
    },
    "c72ed916-046c-3ba3-b118-a28e3a8d40ea": {
      "content": "${1:FIELDNAME} = models.UUIDField($2)",
      "doc": "UUIDField (muuid).\n\nA field for storing universally unique identifiers. Uses Python’s UUID class.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "muuid",
      "matches": {
        "muuid": true
      }
    },
    "c72f5518-be5e-3bf3-adfd-131e4ba5a3a1": {
      "content": "mix($2, $3, $4)",
      "doc": "float mix(float x, float y, float a)\nvec2 mix(vec2 x, vec2 y, vec2 a)\nvec3 mix(vec3 x, vec3 y, vec3 a)\nvec4 mix(vec4 x, vec4 y, vec4 a)\n\nThe mix function returns the linear blend of x and y, i.e. the product of x and (1 - a) plus the product of y and a. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nfloat mix(float x, float y, float a)\nvec2 mix(vec2 x, vec2 y, float a)\nvec3 mix(vec3 x, vec3 y, float a)\nvec4 mix(vec4 x, vec4 y, float a)\n\nThere is also a variation of the mix function where the third parameter is always a floating scalar.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mix",
      "matches": {
        "mix": true
      }
    },
    "c73036f3-7b27-3eef-97de-edac6d3c9f72": {
      "content": "close(unit=${1:iounit}, iostat=${2:ios}${3:, status=\"delete\"})\r\nif ( $2 /= 0 ) stop \"Error closing file unit $1\"",
      "doc": "Close File",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "close",
      "matches": {
        "close": true
      }
    },
    "c735eb62-7c17-36a7-9601-b4fc42413da0": {
      "content": "render () {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "When called, it should examine this.props and this.state and return a single child element.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentRender",
      "matches": {
        "ren": true
      }
    },
    "c73a6a70-7f05-389c-8eb8-6168f346a775": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      }
    },
    "c73ba9bb-2a15-31a6-8845-341ce89a4f6d": {
      "content": "quote do\n\t${1}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qu": true
      }
    },
    "c73ce758-bdab-3026-80e8-4c7c94a801af": {
      "content": "| modulo: ${1:2}",
      "doc": "Math filter: modulo",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter modulo",
      "matches": {
        "modulo": true
      }
    },
    "c73f9e0a-6090-31e0-a263-995ff7d62632": {
      "content": "function max(${1:number},${2:...})$0",
      "doc": "Alphanumeric/Index/Integer/National/Numeric maximum value from the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-max",
      "matches": {
        "function max": true
      }
    },
    "c7415d29-806b-3472-ba10-a23c60807461": {
      "content": "case '${1:case}':\n\t${0:${VISUAL}}\n\tbreak;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "case 'xyz': ... break",
      "matches": {
        "case": true
      }
    },
    "c7429f4e-dfa3-3fd6-9eb3-592399b658ee": {
      "content": "for ${1:item} <- ${2:items} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "c745869f-96f2-34f9-a999-7df90c410506": {
      "content": "${1:obj}.blur (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blur": true
      }
    },
    "c7466156-4792-3315-a6e5-72999e843ac8": {
      "content": "default:\n  ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      }
    },
    "c74a3949-eaa8-3595-9e04-7e6d305c7036": {
      "content": "bottom: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "bottom",
      "matches": {
        "bot": true
      }
    },
    "c74ae809-4d3a-307e-9fc7-dda2e7264f7b": {
      "content": "| md5",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md5": true
      }
    },
    "c751cd5a-ad23-331b-86eb-6d75e7a1e9a9": {
      "content": "Array.from(${1:document}.getElementsByClassName('${2:class}'))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getElementsByClassName",
      "matches": {
        "gc": true
      }
    },
    "c75317d7-c7f2-3d19-b248-9ddd397b96b8": {
      "content": "mixed.when()",
      "doc": "mixed.when(keys: string | Array<string>, builder: object | (value, schema)=> Schema): Schema\n\nAdjust the schema based on a sibling or sibling children fields. You can provide an object\nliteral where the key is is value or a matcher function, then provides the true schema and/or\notherwise for the failure condition.is conditions are strictly compared (===) if you want to use a different form of equality you\ncan provide a function like: is: (value) => value == true.Like joi you can also prefix properties with $ to specify a property that is dependent\non context passed in by validate() or isValid. when conditions are additive.let schema = object({\n  isBig: boolean(),\n  count: number()\n    .when(\"isBig\", {\n      is: true, // alternatively: (val) => val == true\n      then: yup.number().min(5),\n      otherwise: yup.number().min(0)\n    })\n    .when(\"$other\", (other, schema) => (other === 4 ? schema.max(6) : schema))\n});\n\nawait schema.validate(value, { context: { other: 4 } });\nYou can also specify more than one dependent key, in which case each value will be spread as an argument.let schema = object({\n  isSpecial: boolean(),\n  isBig: boolean(),\n  count: number().when([\"isBig\", \"isSpecial\"], {\n    is: true, // alternatively: (isBig, isSpecial) => isBig && isSpecial\n    then: yup.number().min(5),\n    otherwise: yup.number().min(0)\n  })\n});\n\nawait schema.validate({\n  isBig: true,\n  isSpecial: true,\n  count: 10\n});\nAlternatively you can provide a function that returns a schema\n(called with the value of the key and the current schema).let schema = yup.object({\n  isBig: yup.boolean(),\n  count: yup.number().when(\"isBig\", (isBig, schema) => {\n    return isBig ? schema.min(5) : schema.min(0);\n  })\n});\n\nawait schema.validate({ isBig: false, count: 4 });",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-when",
      "matches": {
        "yup mixed when": true
      }
    },
    "c7643263-b441-3cf3-a33a-a9292dcae00d": {
      "content": "override ${1:/*function*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "override (over)",
      "matches": {
        "over": true
      }
    },
    "c764f973-7c12-3242-b5a4-45887e3ec803": {
      "content": "const ${1:context} = useContext(${2:contextValue})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usecontext",
      "matches": {
        "react usecontext": true,
        "usecontext": true
      }
    },
    "c76eccb1-04cb-3cd9-abfe-eccd28187a62": {
      "content": "if err != nil {\n\tlog.${1:Fatal}(err)\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Basic error handling",
      "matches": {
        "err": true
      }
    },
    "c773f247-da1a-3386-8645-070237a9316e": {
      "content": "validates_associated :${1:attribute}${2:, on: :${3:create}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_associated (va)",
      "matches": {
        "va": true
      }
    },
    "c7763b8a-6852-3e40-b6e5-e204b06762ac": {
      "content": "Params:  ${1:param} = ${2:param description}\n///\t\t\t$3",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Params (Par)",
      "matches": {
        "Par": true
      }
    },
    "c776b6f4-f183-362c-8b7c-cf09229968a7": {
      "content": "void mouseReleased(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mouseReleased": true
      }
    },
    "c78800b5-7498-3370-bb8f-2bc6756007cc": {
      "content": "justify-self: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      }
    },
    "c7919262-fdb8-351f-adb9-8e7f114b6eca": {
      "content": "fontFamily: '${1}',",
      "doc": "fontFamily",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "fontFamily",
      "matches": {
        "fo": true
      }
    },
    "c79452ea-c9e1-3446-b410-07a1637bd6a0": {
      "content": "newtype ${1:Type} =\n\t${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nty": true
      }
    },
    "c794c4ae-d2e4-31d2-9a4c-2a35af54834a": {
      "content": "assert_redirected_to ${10:${2:parent}_${3:child}_path(${4:@}${5:$2})}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_redirected_to (nested path plural)",
      "matches": {
        "artnpp": true
      }
    },
    "c79e25a4-3ac7-3172-9ab6-45080536db5f": {
      "content": "return (${1:arguments}) => ${2:statement}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return arrow function",
      "matches": {
        "rf": true
      }
    },
    "c7a63dad-fbb8-3555-93ab-369c01cee815": {
      "content": "atan($2, $3)",
      "doc": "float atan(float y_over_x)\nvec2 atan(vec2 y_over_x)\nvec3 atan(vec3 y_over_x)\nvec4 atan(vec4 y_over_x)\n\nThe atan function returns the arctangent of an angle in radians. It is the inverse function of tangent. The input parameter can be a floating scalar or a float vector. In case of a float vector the arctangent is calculated separately for every component.\n\nfloat atan(float y, float x)\nvec2 atan(vec2 y, vec2 x)\nvec3 atan(vec3 y, vec3 x)\nvec4 atan(vec4 y, vec4 x)\n\nThere is also a two-argument variation of the atan function (in other programming languages often called atan2). For a point with Cartesian coordinates (x, y) the function returns the angle θ of the same point with polar coordinates (r, θ).",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "atan",
      "matches": {
        "atan": true
      }
    },
    "c7a6d64b-9c1d-3a52-914f-f5c603ecd02c": {
      "content": "border-fit: overwrite;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      }
    },
    "c7b29c52-2161-3acd-83e3-46773cfa573e": {
      "content": "border-bottom-left-image continue",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      }
    },
    "c7b8b934-ed53-3594-bdb4-caa7bcca3716": {
      "content": "console.log ${1}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "c7b8f8f9-e683-3f50-af97-de0bfd8a7bb2": {
      "content": "let ${1} =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "letf": true
      }
    },
    "c7bb11f3-cb4d-36fb-a7a4-6054c4ac5694": {
      "content": "leave-to-class=\"$1\"$0",
      "doc": "leave-to-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-to-class",
      "matches": {
        "leavetoclass": true,
        "vue leave-to-class": true
      }
    },
    "c7c06c4c-8491-36ae-9a58-b19984ee5322": {
      "content": "add_index :${1:table_name}, :${0:column_name}",
      "doc": "Migration add index",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Migration add index",
      "matches": {
        "mai": true
      }
    },
    "c7c22d81-3bf6-33fa-9da0-925201ec74b7": {
      "content": "nuxt-link(to=\"/${1:page}\") ${1:page}",
      "doc": "nuxt routing link",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Nuxt Routing Link",
      "matches": {
        "vnuxtl": true
      }
    },
    "c7c3a01b-f971-380f-9467-b4b1f5ffc609": {
      "content": "cursor ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur": true
      }
    },
    "c7c4b20a-1837-3510-b3f5-af0a9647f3f8": {
      "content": "FUNCTION MONETARY-DECIMAL-POINT()$0",
      "doc": "character used to separate the integer portion from the fractional part of a monetary currency value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-MONETARY-DECIMAL-POINT",
      "matches": {
        "FUNCTION MONETARY-DECIMAL-POINT": true
      }
    },
    "c7c7a1d8-5127-3f1e-aac8-b5ff210f193a": {
      "content": "${1|this,vm|}.\\$el$2",
      "doc": "Type: HTMLElement. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$el",
      "matches": {
        "vmEl": true
      }
    },
    "c7d19fa5-3687-3695-b46f-deef651dbf00": {
      "content": "_.property(${path})",
      "doc": "var objects = [\n  { 'a': { 'b': 2 } },\n  { 'a': { 'b': 1 } }\n];\n\n_.map(objects, _.property('a.b'));\n// => [2, 1]\n\n_.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n// => [1, 2]\n\nCreates a function that returns the value at `path` of a given object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-property",
      "matches": {
        "lodash property": true
      }
    },
    "c7d2a7e4-0bac-3573-973a-b0bb2c0cc571": {
      "content": "select {\ncase ${1:v1} := <-${2:chan1}:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select { case a := <-chan: ... }",
      "matches": {
        "select": true
      }
    },
    "c7d313ea-09fa-38bb-ab89-995bb538a1b5": {
      "content": "(${1:a}, ${2:b}, ${0:c})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tup2": true
      }
    },
    "c7e0b83e-1d48-3414-90ae-a7090ce8fad0": {
      "content": "internal ${1:void} ${2}(${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m&": true
      }
    },
    "c7e57e35-7566-3e40-b244-9471ad6f6974": {
      "content": "<area shape=\"circle\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:c": true
      }
    },
    "c7e6ebc7-8c5a-3d55-ac91-910ce61deb21": {
      "content": "box-sizing: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:bb": true
      }
    },
    "c7eb5e41-b267-3cf4-a53e-4255da05b407": {
      "content": "object:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "object:",
      "matches": {
        "object": true
      }
    },
    "c7edf3df-25bc-3636-b06d-45e94aed5a6a": {
      "content": "_.sortedIndexOf(${array}, ${value})",
      "doc": "_.sortedIndexOf([4, 5, 5, 5, 6], 5);\n// => 1\n\nThis method is like `_.indexOf` except that it performs a binary\nsearch on a sorted `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedindexof",
      "matches": {
        "lodash sortedindexof": true
      }
    },
    "c7f20c40-138f-3e76-962a-530f28cb3505": {
      "content": "class ${2:#:ClassName} {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "c7f7ef06-2c82-3c8e-badd-05016ba21ba0": {
      "content": "record ${1:User} {\n\t${2:name} : ${3:String},\n\t${4:email} : ${5:String}\n}",
      "doc": "Records are object like data structures, that have a fix set of keys and values.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Record",
      "matches": {
        "record": true
      }
    },
    "c7fc9bf6-4f5d-38a4-8310-7784c34aa317": {
      "content": "&#x2325;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "option": true
      }
    },
    "c8050fda-783c-3d12-854b-a69dd17ef3af": {
      "content": "ALTER TABLE ${1:tableName}\n\tADD COLUMN ${2:col_name}\n\tAFTER ${5:col_name};",
      "doc": "Alter table - Add column after",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "alteraf",
      "matches": {
        "alteraf": true
      }
    },
    "c809433e-1cc1-3794-80b8-35825a760a83": {
      "content": "return${1};${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "c8098520-1ff3-3572-93b6-cf3a3aa799e2": {
      "content": "{% set ${1} %}\n\t${0}\n{% endset %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig set block",
      "matches": {
        "setb": true
      }
    },
    "c80d92a8-74b2-368e-b9ba-b2e2bb2f5037": {
      "content": "<a href=\"mailto:${1:joe@example.com}?subject=${2:feedback}\">${0:email me}</a>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a:mail": true
      }
    },
    "c818a844-ea7a-3f03-9eaa-ed8d0af13b38": {
      "content": "import ${1:PackageName}",
      "doc": "Import statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "import": true
      }
    },
    "c8279201-7702-3652-8527-12abcb26fb20": {
      "content": "t.integer :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tci": true
      }
    },
    "c82d680b-d7fb-3f94-83bd-99f2f48c9c28": {
      "content": "elif [ ${1:#:condition} ]; then\n\t${0:TARGET}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "c831fa58-278d-3f0d-aa77-81629ed3ae21": {
      "content": "_.isNil(${value})",
      "doc": "_.isNil(null);\n// => true\n\n_.isNil(void 0);\n// => true\n\n_.isNil(NaN);\n// => false\n\nChecks if `value` is `null` or `undefined`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isnil",
      "matches": {
        "lodash isnil": true
      }
    },
    "c83448a8-8f2b-3400-bef4-bdc55c8af20c": {
      "content": "\\\\begin{${1:tabular}}{${2:c}}\n\t${0:${VISUAL}}\n\\\\end{$1}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "tabular (or arbitrary) environment",
      "matches": {
        "tab": true
      }
    },
    "c835bc1a-0bc7-3b08-949a-45b6a13bf744": {
      "content": "write(unit=${1:iounit}, fmt=\"(${2:format string})\", iostat=${3:ios}${4:, advance='NO'}) ${5:variables}\r\nif ( $3 /= 0 ) stop \"Write error in file unit $1\"",
      "doc": "Write",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "write",
      "matches": {
        "write": true
      }
    },
    "c8379d5f-a2c5-3ab6-a0b6-d5b71041b52c": {
      "content": "from PyQt5.QtCore import pyqtRemoveInputHook\npyqtRemoveInputHook()\nimport pdb; pdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "removeInputHook...pdb",
      "matches": {
        "qtpdb": true
      }
    },
    "c8394d7b-89f8-3447-bec5-1c66da6e71f8": {
      "content": "position: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "position fixed",
      "matches": {
        "posf": true
      }
    },
    "c839804a-7578-34ea-9843-d7326ede86a5": {
      "content": "#endinitclip",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec": true
      }
    },
    "c83ccac7-7833-375a-ad41-90318fab96de": {
      "content": "cy.wait(${1:time});",
      "doc": "Wait for a number of milliseconds or wait for an aliased resource to resolve before moving on to the next command.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-wait",
      "matches": {
        "cypress wait": true
      }
    },
    "c841bb79-d0e0-39e1-828c-310c1abf6a22": {
      "content": "clear: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:n": true
      }
    },
    "c84452a3-92e5-3c06-90ff-937cb19e2025": {
      "content": "on:${1:click}=\"{() => ${2:count += 1}}\"",
      "doc": "on event inline",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-on-event-inline",
      "matches": {
        "s-on-event-inline": true
      }
    },
    "c8495051-d0ee-3af7-804f-55ec19603a83": {
      "content": "describe '${1:#method}' do\n\t${0:pending 'Not implemented'}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "descm": true
      }
    },
    "c84c66e5-7d2b-3fdf-b73d-87a030374581": {
      "content": "beginRecord(${1:renderer}, ${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beginRecord": true
      }
    },
    "c852e2e5-e9c7-3e01-b9c9-03cfac460adf": {
      "content": "$this->assertFileNotExists(${1:'path/to/file'});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertFileNotExists('path/to/file')",
      "matches": {
        "asfnex": true
      }
    },
    "c8548840-8f56-3257-aecb-0e38d512af60": {
      "content": "set ${1:#:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "c85d478f-a34b-30f7-840d-8149ed3985d9": {
      "content": "class Class\n\tdef descendants\n\t\tObjectSpace.each_object(::Class).select { |klass| klass < self }\n\tend\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "descendants": true
      }
    },
    "c861b6f7-1053-3cef-a926-779040502fd1": {
      "content": "t.${1:string} :${2:title}${3:, null: false}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mnc": true
      }
    },
    "c86a7981-1eff-37fc-8eb9-91978c7b2418": {
      "content": "*${1}*${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "*emphasis*",
      "matches": {
        "emphasis1": true
      }
    },
    "c86dbcfd-b0cc-3218-832a-2ec2c55a75df": {
      "content": "expect($1).toBeTruthy();$0",
      "doc": "expects the argument is truthy",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobetruthy",
      "matches": {
        "jest expect tobetruthy": true,
        "tbt": true
      }
    },
    "c873947c-f5d0-3ea2-a0bb-d6783a34b955": {
      "content": "dbl",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Double",
      "matches": {
        "T": true
      }
    },
    "c873e3af-87d9-327b-8443-f87714351528": {
      "content": "describe \"${1:describe_name}\" do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "describe .. do .. end",
      "matches": {
        "describe": true
      }
    },
    "c87a99bf-0bf5-3480-9412-78d2da96f195": {
      "content": "FUNCTION FORMATTED-DATE(${1:date-format},${2:integer-date})$0",
      "doc": "function formatted-date",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-FORMATTED-DATE",
      "matches": {
        "FUNCTION FORMATTED-DATE": true
      }
    },
    "c87dfc61-2d99-32b2-94f7-a297740d6061": {
      "content": "uniform sampler2D ${NAME};",
      "doc": "uniform sampler2D texture;\n\nThe data type sampler2D is used to provide access to a 2D texture. It can only be declared as a uniform variable since it is a reference to data that has been loaded to a texture unit.\n\nSide note: On iOS devices this data type can only be used in the fragment shader since they don't have texture image units that can be accessed by the vertex shader.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "sampler2D",
      "matches": {
        "sampler2D": true
      }
    },
    "c880f428-2fc2-3781-9e64-c413bbca7f48": {
      "content": "${1|onBeforeMount,onMounted,onBeforeUpdate,onUpdated,onBeforeUnmount,onUnmounted,,onActivated,onDeactivated,onErrorCaptured,onRenderTracked,onRenderTriggered|}(() => {${2}})",
      "doc": "Lifecycle hooks can be registered with directly imported `onXXX` functions:",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3lifecyclehook",
      "matches": {
        "vue v3 lifecyclehook": true
      }
    },
    "c883ff78-62d5-33a8-8485-c7e3b1143add": {
      "content": "_.pullAll(${array}, ${values})",
      "doc": "var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\n_.pullAll(array, ['a', 'c']);\nconsole.log(array);\n// => ['b', 'b']\n\nThis method is like `_.pull` except that it accepts an array of values to remove.\n\n**Note:** Unlike `_.difference`, this method mutates `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pullall",
      "matches": {
        "lodash pullall": true
      }
    },
    "c8877060-3c1c-303a-adaa-b3443e5b6489": {
      "content": "<%% $1 %> $2",
      "doc": "EJS outputs a literal '<%'",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Literal",
      "matches": {
        "ejslit": true
      }
    },
    "c88e26cb-184b-3679-ac67-2f4dd3d3505a": {
      "content": "!important",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "!": true
      }
    },
    "c88ef835-e56d-3870-b4c3-285ce0a898af": {
      "content": "thread::spawn(${1:move }|| {\n\t${0}\n});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "spawn a thread",
      "matches": {
        "spawn": true
      }
    },
    "c8904585-aee5-32cf-9078-ac7b7d7e8bde": {
      "content": "${1:obj}.fadeIn('slow/400/fast', function () {\n\t${0:// callback};\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeinc": true
      }
    },
    "c89b1e61-3090-301c-a048-791b5d0a722c": {
      "content": "background-clip: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      }
    },
    "c89bd656-7835-31b6-b4a4-2d2d46a22d00": {
      "content": "has_one :${1:object}, dependent: :${0:destroy}",
      "doc": "has_one dependent",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Has one dependent",
      "matches": {
        "hod": true
      }
    },
    "c89f13ab-f657-3b5f-bba5-014dd61f7dea": {
      "content": "$.parseXML(${1:data})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsexml": true
      }
    },
    "c8a0bd2d-10ac-3a71-8883-57cfa779c7b1": {
      "content": "class ${TM_FILENAME_BASE} {\n\t$0\n}",
      "doc": "Snippet for class declaration",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "c8a860a5-cb1d-3990-9785-5d0e1c663781": {
      "content": "case ${1:default}\r\n\t$0",
      "doc": "case",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "c8bf00f8-72b6-32bc-8c34-cc2891822144": {
      "content": "border-collapse: separate;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      }
    },
    "c8c0e455-877b-3bfc-8eef-227eaa9b39a7": {
      "content": "${1:FIELDNAME} = forms.MultipleChoiceField($2, choices=[${3:CHOICES}], required=${4:False})",
      "doc": "MultipleChoiceField (fmuchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fmuchoice",
      "matches": {
        "fmuchoice": true
      }
    },
    "c8c40c29-58ba-3095-8b2f-9ac05d822d83": {
      "content": "require IEx; IEx.pry\n$0",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "IEx.pry",
      "matches": {
        "pry": true
      }
    },
    "c8ceaaf8-82f7-3408-bce0-ad8536edd925": {
      "content": "has_and_belongs_to_many :${1:object}${2:, join_table: \"${3:table_name}\", foreign_key: \"${4:$1_id}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_and_belongs_to_many (habtm)",
      "matches": {
        "habtm": true
      }
    },
    "c8d7252a-61a2-3a30-928c-e688fcc95f87": {
      "content": "{{ block(\"${1:name}\") }}$0",
      "doc": "blockf",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "blockf",
      "matches": {
        "blockf": true
      }
    },
    "c8d8e3ef-631f-35ac-8b8c-979692b90373": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-instance-of-required",
      "matches": {
        "prop-types instanceof required": true,
        "ptir": true
      }
    },
    "c8df8dbd-07b8-393b-b35a-f49918bb0ca5": {
      "content": "export const ${1:functionName} = (${2:params}) => {\n\t$0\n};",
      "doc": "Export named function in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "exportnamedfunction",
      "matches": {
        "base export named function": true
      }
    },
    "c8e06984-7a43-3594-8646-9937b67a7b9f": {
      "content": "_.update(${object}, ${path}, ${updater})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\n_.update(object, 'a[0].b.c', function(n) { return n * n; });\nconsole.log(object.a[0].b.c);\n// => 9\n\n_.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\nconsole.log(object.x[0].y.z);\n// => 0\n\nThis method is like `_.set` except that accepts `updater` to produce the\nvalue to set. Use `_.updateWith` to customize `path` creation. The `updater`\nis invoked with one argument: (value).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-update",
      "matches": {
        "lodash update": true
      }
    },
    "c8eac99c-4bde-3392-a1f0-286bf5b8f88a": {
      "content": "${1:public} void set${3:}(${2:String} ${0:}){\n\tthis.$4 = $4;\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "c8ecaf23-2f22-327c-9982-5d367b290331": {
      "content": "@section('${1}', '${2}')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section",
      "matches": {
        "sec": true
      }
    },
    "c8eed3ac-dc9a-3c57-a267-e825a22a81d7": {
      "content": "enum ${1}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "c8f37010-06f4-3270-aa36-001851a0180d": {
      "content": "overflow: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "overflow: visible",
      "matches": {
        "ovv": true
      }
    },
    "c8fd3d47-eb4a-3916-8f65-62ccb2c08d16": {
      "content": "export const ${1} = styled.${2}`\n  ${3}\n`;",
      "doc": "Export styled-component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-export-styled-component",
      "matches": {
        "exsc": true,
        "styled-components export component": true
      }
    },
    "c90a007c-a82e-3721-9b10-a3dc3aec6c33": {
      "content": "${1:$foo}->set${2:Bar}(${0});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$s": true
      }
    },
    "c90a8e35-a8a5-3d19-bd47-77f18cc42f2c": {
      "content": "((${1:arguments}) => {\n\t${0}\n})(${2});",
      "doc": "immediately-invoked function expression (IIFE)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "immediately-invoked-function-expression-iife-",
      "matches": {
        "base function immediate": true
      }
    },
    "c90d4b01-8c5e-3ebd-87d3-5f2b3e5e04f8": {
      "content": "height: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      }
    },
    "c915bad6-949f-3ad1-a54c-25a6876060ac": {
      "content": "_.toPath(${value})",
      "doc": "_.toPath('a.b.c');\n// => ['a', 'b', 'c']\n\n_.toPath('a[0].b.c');\n// => ['a', '0', 'b', 'c']\n\nConverts `value` to a property path array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-topath",
      "matches": {
        "lodash topath": true
      }
    },
    "c917dd40-c021-3dc6-b5ed-0c98d51cbbf2": {
      "content": "import { observer } from '@ember/object';",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import { observer } from '@ember/object';",
      "matches": {
        "prooimport": true
      }
    },
    "c9291495-708b-3859-a168-eef8aa6c0676": {
      "content": "from django.conf import settings",
      "doc": "from django.conf import settings",
      "filetype": "views",
      "grammar": "lsp",
      "label": "isettings",
      "matches": {
        "isettings": true
      }
    },
    "c92b5993-9855-318a-9a2e-ca0d343eb589": {
      "content": "when ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "when ...: ...",
      "matches": {
        "when": true
      }
    },
    "c92c1351-fd57-35af-aed3-fe470832039e": {
      "content": "_.reverse()",
      "doc": "var array = [1, 2, 3];\n\n_(array).reverse().value()\n// => [3, 2, 1]\n\nconsole.log(array);\n// => [3, 2, 1]\n\nThis method is the wrapper version of `_.reverse`.\n\n**Note:** This method mutates the wrapped array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reverse",
      "matches": {
        "lodash reverse": true
      }
    },
    "c92c7363-1ca7-3e5a-8ffe-beff37a90f30": {
      "content": "overflow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      }
    },
    "c932c1d1-5e77-3b95-8c25-0bed7326dca5": {
      "content": "border-right-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-color: color (border)",
      "matches": {
        "border": true
      }
    },
    "c9341d95-0164-3f69-8d18-12955316b580": {
      "content": "floor($2)",
      "doc": "float floor(float x)\nvec2 floor(vec2 x)\nvec3 floor(vec3 x)\nvec4 floor(vec4 x)\n\nThe floor function returns the largest integer number that is smaller or equal to x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.\n\nSide note: The return value is of type floating scalar or float vector although the result of the operation is an integer.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "floor",
      "matches": {
        "floor": true
      }
    },
    "c93505cc-3a20-349e-a47a-b0773e92dce0": {
      "content": "border-top-style: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-style": true,
        "bts": true
      }
    },
    "c93952d0-ddbf-3eb1-87e2-4b9e7d34e605": {
      "content": "align-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai": true
      }
    },
    "c93f9931-0bc5-3331-b38e-dfd484c6eb17": {
      "content": "if err != nil {\n\treturn nil, errors.Wrap(err, \"${1:message}\")\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrap with two return values",
      "matches": {
        "errn,w": true
      }
    },
    "c943add4-bbd2-3de0-9f55-b94899087bfa": {
      "content": "protected bool ${1}(${2})\n{\n\t${0:return false;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb|": true
      }
    },
    "c94a1712-5c71-350d-ac8e-7f59335d852b": {
      "content": "---\nlayout: ${1}\ntitle: ${2}\ncategory: ${3}\n---\n${0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "layout title category",
      "matches": {
        "---": true,
        "front-matter": true
      }
    },
    "c94dcedf-5509-375b-9d32-2977b381243a": {
      "content": "@appear-cancelled='$1'$0",
      "doc": "@appear-cancelled=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "appear-cancelled",
      "matches": {
        "appearCancelledEvent": true
      }
    },
    "c951ee02-cce7-334e-9deb-f4ce65742c13": {
      "content": "content: counter(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:c": true
      }
    },
    "c95e478e-87bf-3985-869e-5f0eb9e886b2": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeNodeRequired",
      "matches": {
        "ptndr": true
      }
    },
    "c95e9e3c-7b92-398f-a787-3d8705e228a9": {
      "content": "border-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdw": true
      }
    },
    "c95f7955-0ea3-364f-ad28-d97a86869581": {
      "content": "const ${shouldReduceMotion} = useReducedMotion()",
      "doc": "A hook that returns true if we should be using reduced motion based on the current device's Reduced Motion setting.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-reduce-motion",
      "matches": {
        "framer-motion use-reduce-motion": true,
        "use-reduce-motion": true
      }
    },
    "c963ef9c-7880-3df7-b5fc-414cddf74d26": {
      "content": "${1:map}.catch_all \"*${2:anything}\", controller: \"${3:default}\", action: \"${4:error}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "map.catch_all",
      "matches": {
        "mapca": true
      }
    },
    "c96616b8-8b60-3937-bdd0-2ec25469d3d5": {
      "content": "std::shared_ptr<${1:T}> ${2} = std::make_shared<$1>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "msp": true
      }
    },
    "c96949fe-66e0-3a6e-94e9-d1a00d46e5b5": {
      "content": "border-top-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-top-style: style (border)",
      "matches": {
        "border": true
      }
    },
    "c96af976-df30-38d0-93f0-d5646253dc25": {
      "content": "&nbsp;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nbs": true
      }
    },
    "c96d6c67-a4c7-3a49-8a57-f788258792bb": {
      "content": "<xsl:value-of select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "value-of": true
      }
    },
    "c96d93e5-3f12-30d0-b0cc-fd28dea47c1f": {
      "content": "smoothstep($2, $3, $4)",
      "doc": "float smoothstep(float edge0, float edge1, float x)\nvec2 smoothstep(vec2 edge0, vec2 edge1, vec2 x)\nvec3 smoothstep(vec3 edge0, vec3 edge1, vec3 x)\nvec4 smoothstep(vec4 edge0, vec4 edge1, vec4 x)\n\nThe smoothstep function returns 0.0 if x is smaller then edge0 and 1.0 if x is larger than edge1. Otherwise the return value is interpolated between 0.0 and 1.0 using Hermite polynomials. The input parameters can be floating scalars or float vectors. In case of float vectors the operation is done component-wise.\n\nfloat smoothstep(float edge0, float edge1, float x)\nvec2 smoothstep(float edge0, float edge1, vec2 x)\nvec3 smoothstep(float edge0, float edge1, vec3 x)\nvec4 smoothstep(float edge0, float edge1, vec4 x)\n\nThere is also a variation of the smoothstep function where the edge0 and edge1 parameters are always floating scalars.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "smoothstep",
      "matches": {
        "smoothstep": true
      }
    },
    "c9758e2a-41f7-3b15-9352-42015b9f215a": {
      "content": "mapMutations",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mapMutations",
      "matches": {
        "mapMutations": true
      }
    },
    "c984b3a6-a811-3dec-bc3e-17927c403f56": {
      "content": "when {\n\ttag '${1:tag}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whentag": true
      }
    },
    "c986203c-3c9a-3f6f-a36b-cdb8d6f32a34": {
      "content": "elseif ${1:true} then\n\t$0",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "elseif",
      "matches": {
        "elseif": true
      }
    },
    "c9869a35-06ba-3efb-8ed7-72182c325dc2": {
      "content": "{% stylesheet '${1:scss}' %}\n\t$2\n{% endstylesheet %}",
      "doc": "Stylesheet tag: stylesheet for scss",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag stylesheet for scss",
      "matches": {
        "stylesheet_scss": true
      }
    },
    "c987809d-129d-381a-be2d-b7719d29919f": {
      "content": "System.IO",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.i": true
      }
    },
    "c9889539-76bd-3db0-ad52-760e449fa3ae": {
      "content": "with($1)\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "with (with)",
      "matches": {
        "with": true
      }
    },
    "c98d2beb-394e-3a03-8312-71963aeb36f1": {
      "content": "interface ${1:name}\n\t${0}\nend interface $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iface": true
      }
    },
    "c9903eab-8fcb-33a0-a5b1-4bd8a7967ef7": {
      "content": "display: inline-block;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "display: inline-block",
      "matches": {
        "disi": true
      }
    },
    "c9999f8e-0ceb-3de5-b4b6-451b4c034d50": {
      "content": "grid-auto-flow: dense;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      }
    },
    "c999a0c0-ae8c-355a-b7e0-0477d6d7c316": {
      "content": "font-family: ${1:\"Times New Roman\",Georgia,Serif};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff": true,
        "font-family": true
      }
    },
    "c99cc764-0940-3cf5-98c2-996f9d2be962": {
      "content": "host { \"${1:hostname}\":\n\tip => ${0:127.0.0.1},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "host": true
      }
    },
    "c99cf3f2-3027-337d-96b0-e1dfc6e32fbb": {
      "content": "\\begin{columns}\n\t\\begin{column}{${1:#:width}${2:\\\\\\textwidth}}\n\t\t${0:#:body}\n\t\\end{column}\n\\end{columns}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{columns} \\columns": true,
        "columns": true
      }
    },
    "c99fffe6-2fa1-3f38-b1a4-2b099e2f033f": {
      "content": "$${1:foo} = ${2:true} ? ${3:a} : ${0};",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=?:": true
      }
    },
    "c9a0ace6-93e3-3fef-b5c7-cdb99be3bbba": {
      "content": "align-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sa": true
      }
    },
    "c9a1cd7d-79b4-3ae5-907e-96fad3bff620": {
      "content": "// https://uniswap.org/docs/v2/smart-contracts/router02/\r\n// https://github.com/Uniswap/uniswap-v2-periphery/blob/master/contracts/UniswapV2Router02.sol implementation\r\n// UniswapV2Router02 is deployed at 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D on the Ethereum mainnet, and the Ropsten, Rinkeby, Görli, and Kovan testnets.\r\n\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.2;\r\n\r\n// You can add this typing \"uniV2Router01\" \r\nimport './IUniswapV2Router01.sol';\r\n\r\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\r\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline\r\n    ) external returns (uint amountETH);\r\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\r\n        address token,\r\n        uint liquidity,\r\n        uint amountTokenMin,\r\n        uint amountETHMin,\r\n        address to,\r\n        uint deadline,\r\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\r\n    ) external returns (uint amountETH);\r\n\r\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external payable;\r\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\r\n        uint amountIn,\r\n        uint amountOutMin,\r\n        address[] calldata path,\r\n        address to,\r\n        uint deadline\r\n    ) external;\r\n}",
      "doc": "Uniswap Router02",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "uniV2Router02",
      "matches": {
        "uniV2Router02": true
      }
    },
    "c9a3d1a2-d978-3647-91de-199d79e5af31": {
      "content": "\\${${1}}${0}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "${": true
      }
    },
    "c9af74c5-4699-3c72-8d4b-885e3ddb8ba9": {
      "content": "```{r ${1:label}, fig.cap = \"${2:Figure caption.}\", fig.alt = \"${3:Alt text.}\"}\n${TM_SELECTED_TEXT}$0\n```",
      "doc": "Insert figure chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert figure chunk",
      "matches": {
        "figure chunk": true
      }
    },
    "c9afedfd-de6e-3669-9ed2-5e3f341e4fca": {
      "content": "(:import [${1:package}])\n\t& {:keys [${1:keys}] :or {${0:defaults}}}",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "c9b226d6-ab55-3c09-9a57-9b416e1e21af": {
      "content": "IF ${1:CONDITION}\n   $0\nEND-IF",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "IF",
      "matches": {
        "IF": true,
        "ie": true
      }
    },
    "c9b3e45d-5c84-3696-aec8-e12084705088": {
      "content": "stringformat:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      }
    },
    "c9b775c1-4e5a-33a0-9f4a-90fb03b638d9": {
      "content": "l_ply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l_": true
      }
    },
    "c9be2709-ef6d-31c4-bdc6-24db0946da9c": {
      "content": "module Test.Main where\n\nimport Prelude\nimport Test.Unit (suite, test)\nimport Test.Unit.Main (runTest)\nimport Test.Unit.Assert as Assert\n\nmain = runTest do\n\tsuite \"${1}\" do\n\t\ttest \"${2:the tests run}\" do\n\t\t\tAssert.equal\n\t\t\t\t\"Hello, world!\"\n\t\t\t\t\"Hello, sailor!\"",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testunit": true
      }
    },
    "c9c01c67-5ca7-3533-993b-3c108f3eb8be": {
      "content": "has_one",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "has_one",
      "matches": {
        "ho": true
      }
    },
    "c9c5013d-8d04-3007-89c2-8ef8c1b3be1b": {
      "content": "${1|this,vm|}.\\$attrs$2",
      "doc": "Type: { [key: string]: string }. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$attrs",
      "matches": {
        "vmAttrs": true
      }
    },
    "c9c96785-d78e-35cc-8b9b-e132587f3831": {
      "content": "${1:obj}.triggerHandler('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trigh": true
      }
    },
    "c9cfd691-de01-33c0-a12d-313518484a26": {
      "content": "__PACKAGE__->get_${0:package_method}()",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkget": true
      }
    },
    "c9d2bb4e-1dad-3606-aaf4-c96f5befc106": {
      "content": "<p>${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "c9d2fcbb-53e0-3695-ad49-dafaeb765a72": {
      "content": "@protocol(${1:protocol name}}",
      "doc": "Create a @protocol",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "@protocol",
      "matches": {
        "@proto": true
      }
    },
    "c9d6b6c6-9621-3da9-a1f6-510beafb59c6": {
      "content": "${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nextu": true
      }
    },
    "c9d73192-90a3-30c7-ac67-e12112dd75ea": {
      "content": "<%= image_submit_tag('${1:agree.png}', id: '${2:id}'${0}) %>",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ist": true
      }
    },
    "c9dd0dd4-ce41-398f-a3b2-0c089a2dd3cd": {
      "content": "if (${1:true}) {\n\t${0:${VISUAL}}\n} else {\n\t${2}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "if (condition) { ... } else { ... }",
      "matches": {
        "ife": true
      }
    },
    "c9dd3adb-d310-3e4e-a365-4a54cd6ee96b": {
      "content": "(let [bench-before (System/currentTimeMillis)]\n  ${1:TARGET}\n  (prn 'Took (- (System/currentTimeMillis) bench-before) 'msec))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bench": true
      }
    },
    "c9de25a1-9ae7-3627-ac6a-f981c85cdc72": {
      "content": "Logger.info(${1:param});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "info": true
      }
    },
    "c9df1578-6a0c-3272-883e-0947e2c8abf8": {
      "content": "import { View, Text } from 'react-native'\nimport React from 'react'\n\nconst ${1:${TM_FILENAME_BASE}} = () => {\n  return (\n    <View>\n      <Text>${1:first}</Text>\n    </View>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeFunctionalExportComponent",
      "matches": {
        "rnfe": true
      }
    },
    "c9fd29aa-752c-3d09-9789-a936162bbbc8": {
      "content": "defmodule ${1:module} do\n  $0\nend",
      "doc": "Define a module",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "defmodule",
      "matches": {
        "defmo": true
      }
    },
    "ca069965-1f21-32cf-bc0a-ff3aef31ea6a": {
      "content": "`r ${1:${TM_SELECTED_TEXT}}`$0",
      "doc": "Insert inline R code",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert inline R code",
      "matches": {
        "inline r code": true
      }
    },
    "ca082139-85b6-3977-90c7-34ffd0d8f2db": {
      "content": "<#include \"${0:file.ftl${VISUAL}}\" />",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "\"<#include \\\"file.ftl\\\" />\"",
      "matches": {
        "inc": true
      }
    },
    "ca0d2f90-d9e6-3bea-a0ca-30815c29b16c": {
      "content": "const ${1:results} = await request(\n  ${2:url},\n  ${3:query}\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-request",
      "matches": {
        "graphql-request request": true
      }
    },
    "ca15f88c-cd33-3fc6-b4a0-74c2f2c71605": {
      "content": "FUNCTION INTEGER-PART(${1:number})$0",
      "doc": "portion of number that occurs to the left of the decimal point",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-INTEGER-PART",
      "matches": {
        "FUNCTION INTEGER-PART": true
      }
    },
    "ca1ca443-0e73-3437-a35b-6ada182852ce": {
      "content": "delimited by space",
      "doc": "delimited by size (string)",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "delimited_space",
      "matches": {
        "delimited by space": true,
        "ds": true
      }
    },
    "ca1eb3a3-5a44-3509-b309-05138028de92": {
      "content": "<samp>$1</samp>$2",
      "doc": "HTML - Defines sample computer code",
      "filetype": "html",
      "grammar": "lsp",
      "label": "samp",
      "matches": {
        "samp": true
      }
    },
    "ca2047f9-21b2-3e1f-8559-c9b7fac775a0": {
      "content": "return ${1:this.num} += ${2:1}",
      "doc": "increment",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-incrementer",
      "matches": {
        "vinc": true,
        "vue incrementer": true
      }
    },
    "ca22e008-e539-3db7-b52b-d9a3c94a749f": {
      "content": "\\\\maketitle",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "maketitle",
      "matches": {
        "mkt": true
      }
    },
    "ca2e97fd-20fd-3efd-b927-7b74965a2aad": {
      "content": "aaply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aa": true
      }
    },
    "ca31b199-d47d-3ab8-aa85-dd0a7fdfa99a": {
      "content": "border-corner-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      }
    },
    "ca36957d-c874-3661-8c2c-11460a3b2310": {
      "content": "background-repeat: ${1:repeat/repeat-x/repeat-y/no-repeat};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-repeat:  r:r-x:r-y:n-r (background)",
      "matches": {
        "background": true
      }
    },
    "ca386297-4d76-3ac3-9b2c-90b7f6e6ea6e": {
      "content": "bind:${1|clientWidth,clientHeight,offsetWidth,offsetHeight|}={${2:variable}}",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-block-level",
      "matches": {
        "s-bind-block-level": true
      }
    },
    "ca42ce43-00e1-30e6-b5c9-ff48d108ba88": {
      "content": "_.stubArray()",
      "doc": "var arrays = _.times(2, _.stubArray);\n\nconsole.log(arrays);\n// => [[], []]\n\nconsole.log(arrays[0] === arrays[1]);\n// => false\n\nThis method returns a new empty array.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubarray",
      "matches": {
        "lodash stubarray": true
      }
    },
    "ca42f1ff-8919-344c-9dd3-dd41eddbcbfc": {
      "content": "set -eu",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "safe": true
      }
    },
    "ca432ea3-93b9-3618-90f2-33ddfdb77417": {
      "content": "public ${1:int} ${2:MyProperty} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propr": true
      }
    },
    "ca43afda-4df5-34f3-b953-bb8d59dced3f": {
      "content": "render file: '${0:filepath}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      }
    },
    "ca4df982-da88-334b-8a07-b1b1c617f9fd": {
      "content": "expect(${1:target}).toBeNull();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to be null (js)",
      "matches": {
        "en": true
      }
    },
    "ca4f2b2e-fc56-3b87-89a3-734010849e7e": {
      "content": "for ${1:element} in ${2:container}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      }
    },
    "ca594b15-962e-3c64-a48b-07beb79c7cd2": {
      "content": "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {\n\t${4}\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "ca5cdf29-2138-3eba-addf-911e031fccb2": {
      "content": "<%= unless ${1} do %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "ca601694-b72b-3348-962c-91e0d9f50b8e": {
      "content": "expect(${1:target}).toHaveAttr('${2:attr}'${3:, '${4:value}'});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have attribute (js)",
      "matches": {
        "eha": true
      }
    },
    "ca626de0-db86-3a6f-9879-4e0e895ecd0d": {
      "content": "const ${1:refContainer} = useRef(${2:initialValue});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "useRef",
      "matches": {
        "userf": true
      }
    },
    "ca62a1b8-ca17-3f7e-92f9-0749d6cfaa89": {
      "content": "text-indent: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text-indent": true,
        "ti": true
      }
    },
    "ca6532da-1e10-3beb-bfa2-8ce73da24190": {
      "content": "float ${NAME}(){\n\t\n}",
      "doc": "A standard function that would need a return of a float value for it to work",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "function float",
      "matches": {
        "float": true
      }
    },
    "ca6a5e5b-a78e-34fc-9e22-3165793c1b70": {
      "content": "<token_desc> token{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "kp19pp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "token_desc": true
      }
    },
    "ca6d7660-f0ac-3579-8c20-5948b43fb64e": {
      "content": "${1:document}.createDocumentFragment(${2:elem})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "createDocumentFragment",
      "matches": {
        "cdf": true
      }
    },
    "ca7497b5-8f56-3bed-b28f-52c7a5d54db5": {
      "content": "PropTypes.node.isRequired,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-node-required",
      "matches": {
        "prop-types node required": true,
        "ptndr": true
      }
    },
    "ca78f40c-fa0f-3b08-acd9-a092e9e774d0": {
      "content": "expect(${1:target}).wasCalled()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was called (coffee)",
      "matches": {
        "esc": true
      }
    },
    "ca81c77c-a9d2-3a88-9f57-5b130fc8e309": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tWHERE ${3:condition};",
      "doc": "Select with condition",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "selectw",
      "matches": {
        "selectw": true
      }
    },
    "ca820a00-74f9-3fc3-be06-edf4ebc7fa98": {
      "content": "composed_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "composed_of",
      "matches": {
        "co": true
      }
    },
    "ca87433e-45ec-3ec4-a20e-afaf9d063ab5": {
      "content": "NSMutableDictionary *${1:#:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dict": true
      }
    },
    "ca8c86d2-f1db-3f14-b979-2db1b452af33": {
      "content": "enter-class=\"$1\"$0",
      "doc": "enter-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "enter-class",
      "matches": {
        "enterClass": true
      }
    },
    "ca91668f-e83c-3dfe-9e4c-dbfe448dcc76": {
      "content": "t.string :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcs": true
      }
    },
    "ca929472-8a99-3662-817c-c09b584c0df8": {
      "content": "${1:FIELDNAME} = models.DecimalField(max_digits=${2}, decimal_places=${0})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "decimal": true
      }
    },
    "ca97c9de-8976-37d6-844d-6e583faa236d": {
      "content": "margin: ${1:0};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin",
      "matches": {
        "m": true
      }
    },
    "caa15f38-c315-330b-94ce-243565b32c34": {
      "content": "const ${1:store} = spring(${2:value}, ${3:options});",
      "doc": "svelte create spring store",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-spring",
      "matches": {
        "s-spring": true
      }
    },
    "caa1d168-9423-3bde-839d-2aac57cfb3e5": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      }
    },
    "caa6e549-3d9a-3f2c-b339-0506e2397125": {
      "content": "do |${1:v}|\n\t${2}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dov": true
      }
    },
    "caa8719f-06e0-3e1e-993f-cd87cba05696": {
      "content": "validates_exclusion_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of",
      "matches": {
        "ve": true
      }
    },
    "caaa4361-1299-354c-9bf8-dad562554a12": {
      "content": "while ($1)\n{\n\t$2\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "cab1a71d-2b18-36da-b7ff-95fd306e7218": {
      "content": "<ol class=\"${1}\">\n\t${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol.": true
      }
    },
    "cab4a49d-8a63-3202-be4e-673a429962c5": {
      "content": "list-style-type: decimal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dc": true
      }
    },
    "cab9c910-2661-328c-ba78-25f0f2663e16": {
      "content": "grid-column-start: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcs": true
      }
    },
    "cabb2841-4bcd-39fb-8a57-bf86fba0a7e5": {
      "content": "<% error_messages_for :${1:model} %>\n\n<%= form_for @${2:model} do |f| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffe": true
      }
    },
    "cabf68c6-e065-3e18-8953-176a933494a8": {
      "content": "require \"${1}\"",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "require",
      "matches": {
        "req": true
      }
    },
    "cac2b521-f685-3c8b-86a9-db93398c3a5e": {
      "content": "${1:FIELDNAME} = forms.BooleanField($2, required=${3:False})",
      "doc": "BooleanField (fbool)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fbool",
      "matches": {
        "fbool": true
      }
    },
    "cac313ad-27bb-36ff-a78f-a2fb7798e95c": {
      "content": "<c:if test=\"\\${${1}}\">\n\t${0}\n</c:if>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cif": true
      }
    },
    "cac87893-7192-30eb-a1e8-c28e747f75a5": {
      "content": "<br>",
      "doc": "HTML - Inserts a single line break",
      "filetype": "html",
      "grammar": "lsp",
      "label": "br",
      "matches": {
        "br": true
      }
    },
    "cace806f-4644-3b05-966f-ed15724e035c": {
      "content": "if(${1:#:condition})\n\t${2}\nelse()\n\t${3}\nendif()",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "if() else() endif()",
      "matches": {
        "if_else": true
      }
    },
    "cacfd952-63ec-3e83-a6e0-36876ad0da2b": {
      "content": "flex-grow: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxg": true
      }
    },
    "cad4245d-cce6-37ab-88e5-d97fad7f81b1": {
      "content": "\\\\stackrel{${1:above}}{${2:below}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\stackrel{}{}",
      "matches": {
        "stackrel": true
      }
    },
    "cad92f8a-4dc5-3096-91d3-70afd99f9463": {
      "content": "withProgress(message = \"${1:message}\", {\n${0}\n})",
      "doc": "Shiny withProgress",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Shiny withProgress",
      "matches": {
        "shiny withProgress": true
      }
    },
    "cad9db08-356f-33bc-bd52-45f377674069": {
      "content": "{% now \"${0:jS F Y H:i}\" %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "now": true
      }
    },
    "cada6c90-41ba-3bc4-80d3-8f9141676428": {
      "content": "for (${1}; ${2}; ${3}) {\n    ${4:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "cadbbb2f-6fad-333b-8efa-61cfe5cd9509": {
      "content": "grid-auto-flow: dense",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:d": true
      }
    },
    "caf0d5fc-648d-3b15-a9c8-ff1090b5db2b": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      }
    },
    "caf368f8-b087-3f33-b8d2-f84bbde76403": {
      "content": "pipe(${1:stream})$2",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "pipe",
      "matches": {
        "pipe": true
      }
    },
    "caf3707a-a63e-3b22-b37b-826f7dcda855": {
      "content": "v-once",
      "doc": "Does not expect expression",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-once",
      "matches": {
        "vOnce": true
      }
    },
    "cafb14fd-4f45-36ad-a39a-1f479e54ee91": {
      "content": "_.merge(${object}, ${sources})",
      "doc": "var object = {\n  'a': [{ 'b': 2 }, { 'd': 4 }]\n};\n\nvar other = {\n  'a': [{ 'c': 3 }, { 'e': 5 }]\n};\n\n_.merge(object, other);\n// => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\nThis method is like `_.assign` except that it recursively merges own and\ninherited enumerable string keyed properties of source objects into the\ndestination object. Source properties that resolve to `undefined` are\nskipped if a destination value exists. Array and plain object properties\nare merged recursively. Other objects and value types are overridden by\nassignment. Source objects are applied from left to right. Subsequent\nsources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-merge",
      "matches": {
        "lodash merge": true
      }
    },
    "cb00c155-504c-3444-83b3-1bd050bee42f": {
      "content": "\\path[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\path": true,
        "path": true
      }
    },
    "cb01bf6c-e8bf-3aa4-8b12-6fa48d877a17": {
      "content": "_.unset(${object}, ${path})",
      "doc": "var object = { 'a': [{ 'b': { 'c': 7 } }] };\n_.unset(object, 'a[0].b.c');\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\n_.unset(object, ['a', '0', 'b', 'c']);\n// => true\n\nconsole.log(object);\n// => { 'a': [{ 'b': {} }] };\n\nRemoves the property at `path` of `object`.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unset",
      "matches": {
        "lodash unset": true
      }
    },
    "cb06fc60-9fc9-33b1-9122-23b2b06eed85": {
      "content": "- [${1| ,x|}] ${2:text}\n- [${3| ,x|}] ${4:text}\n- [${5| ,x|}] ${6:text}\n${0}",
      "doc": "Insert task list with 3 tasks",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert task list 3",
      "matches": {
        "task3": true
      }
    },
    "cb0b12ca-e4b0-3acf-bb71-acae52e96c8d": {
      "content": "let ${1} = ${2}\nin ${3}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "cb0ca14a-5a5e-389a-bb28-e7ddf1a52e48": {
      "content": "padding: 0",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:0": true
      }
    },
    "cb10b846-a15e-3c67-a0e7-36f841374d2c": {
      "content": "pub fn ${1:#:func_name}(${2:#:args}) -> ${3:#:()} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "pubfn () {}",
      "matches": {
        "pubfn": true
      }
    },
    "cb191213-954a-3bf8-8acb-f954379cc3f1": {
      "content": "proc ${1:name} {${2:args}} \\\n{\n\t$3\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "proc... (proc)",
      "matches": {
        "proc": true
      }
    },
    "cb197f66-ea27-3c62-9052-70b50a78c7bd": {
      "content": "has_many :${1:object}, dependent: :${0:destroy}",
      "doc": "has_many dependent",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Has many dependent",
      "matches": {
        "hmd": true
      }
    },
    "cb23738f-bd99-3f47-b785-9907669b83e3": {
      "content": "density(${1:x}${2:, bw = ${3:bandwidth}})",
      "doc": "Density",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "den",
      "matches": {
        "density": true
      }
    },
    "cb2554ac-fa1a-32d2-bd8d-d5af992d7e4e": {
      "content": "${1:obj}.outerWidth()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerw": true
      }
    },
    "cb274447-9c98-38bd-9ded-e5c8723530a7": {
      "content": "<ul type=\"circle\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ulcircle": true
      }
    },
    "cb2e76c7-284b-3659-9742-99af6b9a0c49": {
      "content": "border-fit: scale;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sc": true
      }
    },
    "cb31009d-75c0-39ad-abf0-c7f5d245400e": {
      "content": "subtract ${1:a} from ${2:b} giving ${3:c}",
      "doc": "subtract a from b giving c",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "subtract",
      "matches": {
        "subtract": true
      }
    },
    "cb31b4f0-6cbf-32a7-8055-93ebfbc131bf": {
      "content": "// MARK: - $CLIPBOARD",
      "doc": "Create a MARK for copied text",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - copied text",
      "matches": {
        "markselected": true
      }
    },
    "cb3512df-4f4a-34b6-9f1d-8f6b3350aa6f": {
      "content": "type=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "type": true
      }
    },
    "cb354b92-dc5e-3913-9659-ec23397891ed": {
      "content": "unsigned int\t${1:object}Count = [${2:array} count];\n\nfor(unsigned int index = 0; index < ${1}Count; index += 1)\n{\n\t${3:id}\t${1} = [${2} objectAtIndex:index];\n\t${0}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forarray": true
      }
    },
    "cb38ac8d-6bab-3e45-8633-eab149723aa5": {
      "content": "logger.error { '${1:message}' }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loge": true
      }
    },
    "cb3d1999-e42f-3c20-8a2c-f5fab04d7203": {
      "content": "float ${NAME}(vec2 position, vec2 scale){\n\tscale = vec2(0.5) - scale * 0.5;\n\tvec2 shaper = vec2(step(scale.x, position.x), step(scale.y, position.y));\n\tshaper *= vec2(step(scale.x, 1.0 - position.x), step(scale.y, 1.0 - position.y));\n\treturn shaper.x * shaper.y;\n}",
      "doc": "rectangle shape",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "rectangle shape",
      "matches": {
        "rectangle shape": true
      }
    },
    "cb3d4e00-654f-390b-9af3-54a003070c3c": {
      "content": "$this->fail(${1});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->fail()",
      "matches": {
        "fail": true
      }
    },
    "cb40968c-0c86-3011-a117-c92851bed718": {
      "content": "show errors;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      }
    },
    "cb42aedc-a12f-3225-ae2a-01f627ec0a1d": {
      "content": "$1-ep section.\nentry \"$1\".\n    $0\t\n    goback.",
      "doc": "entry statement",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "entry",
      "matches": {
        "eg": true,
        "entry": true
      }
    },
    "cb497785-9a2e-34e2-8db9-b71a6f61478f": {
      "content": "\\${0}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0}",
      "matches": {
        "0": true
      }
    },
    "cb4d53b9-2096-3aad-8c98-2f7765aaee0e": {
      "content": "align-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:s": true
      }
    },
    "cb598c90-229a-3523-ae48-20111b6d4faa": {
      "content": "std::deque<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deque": true
      }
    },
    "cb5f3eb8-66af-3283-acb7-a98bc74040de": {
      "content": "${1:public} ${2:void} ${3:MyMethod}(${4:string} ${5:parameter})\n{\n\t$0\n}",
      "doc": "Creates a Method structure",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Creates a Method structure",
      "matches": {
        "method": true
      }
    },
    "cb5fe545-c94d-3f22-a32a-982588f10d66": {
      "content": "async fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Async function definition",
      "matches": {
        "afn": true
      }
    },
    "cb645c09-5264-3745-889b-0f4a280a03d7": {
      "content": "bind:${1|innerWidth,innerHeight,outerWidth,outerHeight,scrollX,scrollY,online|}={${2:variable}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-window-bind",
      "matches": {
        "svelte window bind": true,
        "svwb": true
      }
    },
    "cb68bb71-7299-3c09-be69-40ae285f0030": {
      "content": "require('dotenv-safe').config({ path: '${1:/full/custom/path/to/your/env/vars}' })",
      "doc": "You may specify a custom path if your file containing environment variables is located elsewhere.",
      "filetype": "dotenv-safe",
      "grammar": "lsp",
      "label": "dotenv-safe-path",
      "matches": {
        "dotenv-safe path": true
      }
    },
    "cb6a316b-ad1a-3ed4-8f18-eced8f9e69d4": {
      "content": "Co-authored-by: ${1} <${2}>",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      }
    },
    "cb6aca80-5b92-3f7c-ba6b-0e0e1581a694": {
      "content": "padding: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "cb6f7777-313a-379e-a033-e4db0b9a9fb3": {
      "content": "border-fit repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      }
    },
    "cb72a826-1998-3aa2-bc79-4b986ffd917c": {
      "content": "to!double(${1:str});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tod": true
      }
    },
    "cb7d10d2-be07-3fdd-8988-d5058e423eb6": {
      "content": "font-effect: outline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      }
    },
    "cb7d242e-0b0c-386d-bc4e-9a0e9dd8a8dd": {
      "content": "@interface ${1:NSObject)} (${2:Category)})\n${0}\n@end",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "CategoryInterface",
      "matches": {
        "cati": true
      }
    },
    "cb80094f-e106-3e07-95f6-0a8d33d4e977": {
      "content": "\\${4:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:TARGET}",
      "matches": {
        "4T": true,
        "4t": true
      }
    },
    "cb83caa0-e431-3878-af43-1855b0f874d3": {
      "content": "PropTypes.any,",
      "doc": "Any prop type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-any",
      "matches": {
        "prop-types any": true,
        "ptany": true
      }
    },
    "cb84b7cf-ddd6-3b6f-89a8-948a892abfd0": {
      "content": "PropTypes.element",
      "doc": "React element prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeElement",
      "matches": {
        "ptel": true
      }
    },
    "cb8539b6-1cab-36d8-a8e6-56808a1ac459": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      }
    },
    "cb86cf15-c02e-3c29-8bd1-fe5ad6e472ec": {
      "content": "text-justify inter-ideograph",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:ii": true
      }
    },
    "cb902b43-dfbb-35ed-ae60-4733ad10a5da": {
      "content": "background-repeat: repeat-y",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:y": true
      }
    },
    "cb975e1d-e211-318a-98f4-016dfdd0d611": {
      "content": "[${1:id}]: https://${2:url}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:": true
      }
    },
    "cbaebc2c-9473-3dd1-8138-e632f8f4b133": {
      "content": "${1:FIELDNAME} = forms.MultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "MultipleChoiceField",
      "matches": {
        "fmuchoice": true
      }
    },
    "cbbbc131-693a-3959-b818-3b104bb3f59c": {
      "content": ":first-child",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      }
    },
    "cbc1b792-cf23-352f-ac29-ccb7387c5fb5": {
      "content": "@inject('$1', '$2')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@inject directive",
      "matches": {
        "inject": true
      }
    },
    "cbc23017-aa02-35f2-af06-e40b6984898b": {
      "content": "if ${1:condition}\n\t${2:# body...}\nelse\n\t${3:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "If .. Else",
      "matches": {
        "ife": true
      }
    },
    "cbc949d7-8bc3-326e-9b0a-e5d74a3e2e7c": {
      "content": "import { mapState } from 'vuex'\n\nexport default {\n\tcomputed: {\n\t\t...mapState([\n\t\t\t${1:'nameOfState'},\n\t\t])\n\t},\n}",
      "doc": "map getters inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapstate",
      "matches": {
        "vmapstate": true,
        "vue mapstate": true
      }
    },
    "cbcbd480-ed64-3e34-b52c-50b3802b08e7": {
      "content": "${1:(jpeg,bmp,png,tiff)}(filename = '${2:filename}', width = ${3}, height = ${4}, unit = '${5}')\n${0:plot}\ndev.off()",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img": true
      }
    },
    "cbd49ba6-0490-34da-bd99-304a97d29e1f": {
      "content": "ifeq (${1:cond0}, ${2:cond1})\n\t$0\nendif",
      "doc": "if statement",
      "filetype": "make",
      "grammar": "lsp",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "cbe0beb9-cba9-37ee-b3bd-1f82c8be2173": {
      "content": "expect(${1:object}).to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert expect",
      "matches": {
        "exp": true
      }
    },
    "cbe29ec3-c734-31f8-869f-a1dcf3c345e8": {
      "content": "View::renderTemplate('${1:part}', $${2:array});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_render_template": true
      }
    },
    "cbe60fc8-9295-38b0-936a-0d1d510616e0": {
      "content": "border-top: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdt:n": true
      }
    },
    "cbe78930-dc69-3372-a475-b0d9635c9b4d": {
      "content": "${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dthen": true
      }
    },
    "cbf3bbd5-9237-38ed-8504-b2e11b805f73": {
      "content": "Yii::app()->request->isPostRequest",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yispost": true
      }
    },
    "cbf9c4c4-85fa-37aa-ac65-1613be49a3fa": {
      "content": "border-style: outset",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:o": true
      }
    },
    "cbfc802c-8978-3e4f-8bf8-1b9255e17b72": {
      "content": "if (${1:condition}) {\n\t$2\n} else {\n\t$0\n}",
      "doc": "if/else statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "ifelse",
      "matches": {
        "ifelse": true
      }
    },
    "cbff24d1-9bed-3925-a469-4f2dc9082751": {
      "content": "justify-content: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc": true
      }
    },
    "cc080f32-a1d3-32a5-91dd-15126d6e7a3e": {
      "content": "marginTop: ${1},",
      "doc": "marginTop",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginTop",
      "matches": {
        "mar": true
      }
    },
    "cc0b94bc-a5e2-33c6-b4f4-8aafcfb121f5": {
      "content": "redirect_to controller: \"${1:items}\", action: \"${2:list}\"",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller, action)",
      "matches": {
        "reca": true
      }
    },
    "cc0c51dc-a157-3931-9515-336a1f64c48a": {
      "content": "test \"${1}\" =\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "cc0fca42-4d96-38be-92c7-08259d4b5322": {
      "content": "@synthesize ${1:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "syn": true
      }
    },
    "cc1102fd-3ccc-3d3b-a77a-baeb6c9317b7": {
      "content": "type(${1:type name}) ::",
      "doc": "Quick Custom Type",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "t",
      "matches": {
        "t": true
      }
    },
    "cc1131e2-bb88-30a3-88cf-3da93de6238a": {
      "content": "${1:obj}.appendTo('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "appendTo": true
      }
    },
    "cc1dd707-5356-3386-b6a0-bd1a29245d1a": {
      "content": ".le.",
      "doc": "Less or Equal",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "le",
      "matches": {
        "le": true
      }
    },
    "cc244095-72c6-3486-aac0-e7a48727a84e": {
      "content": "import { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\nexport class PreloadSelectedModulesList implements PreloadingStrategy {\n\tpreload(route: Route, load: Function): Observable<any> {\n\t\treturn route.data && route.data['${1:preload}'] ? load() : of(null);\n\t}\n}\n$0",
      "doc": "Angular opt-in preload strategy",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Opt-In Preload Strategy",
      "matches": {
        "a-preload-opt-in-strategy": true
      }
    },
    "cc25e14e-03e6-3ccc-9acb-e7cb526b9521": {
      "content": "${1:obj}.submit(function (${2:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "submit": true
      }
    },
    "cc2d6296-f60c-3a71-951e-0f60bba0bfc0": {
      "content": "border-bottom-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bbw": true,
        "border-bottom-width": true
      }
    },
    "cc3947fa-75d7-3873-ba07-f4308273b0df": {
      "content": "_.divide(${dividend}, ${divisor})",
      "doc": "_.divide(6, 4);\n// => 1.5\n\nDivide two numbers.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-divide",
      "matches": {
        "lodash divide": true
      }
    },
    "cc3f5d5b-eb05-3f61-8830-8a6618c7e8f6": {
      "content": "${1|this,vm|}.\\$forceUpdate()",
      "doc": "vm.$forceUpdate()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$forceUpdate",
      "matches": {
        "vmForceUpdate": true
      }
    },
    "cc418743-9011-317d-af97-bcadedbf2cab": {
      "content": "data() {\n\treturn {\n\t\t${1:key}: ${2:value}\n\t};\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdata": true
      }
    },
    "cc420a44-79c3-31de-a806-5d1ec32368c5": {
      "content": "margin-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      }
    },
    "cc4833dc-09c5-307c-b3ce-5413ac82af87": {
      "content": "foreach (${1:item} = ${2:list}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "foreach": true
      }
    },
    "cc500d0d-fd6a-357a-9fe6-72e88989b7d5": {
      "content": "import { Text, View } from 'react-native'\nimport React, { Component } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component {\n  render() {\n    return (\n      <View>\n        <Text>${1:first}</Text>\n      </View>\n    )\n  }\n}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativeComponent",
      "matches": {
        "rnc": true
      }
    },
    "cc5bcc11-df50-3d1c-8933-dad707aec736": {
      "content": "continue;",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "co": true
      }
    },
    "cc5fe334-0984-36cf-a576-ebf198673f8a": {
      "content": "const ${1:name} = await ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const assignment awaited",
      "matches": {
        "ca": true
      }
    },
    "cc6541ca-4f3b-307c-ba93-ce74441293e6": {
      "content": "text-justify: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj:a": true
      }
    },
    "cc676acd-653d-388d-99a4-70d9d72a87b0": {
      "content": "gl_MaxFragmentUniformVectors",
      "doc": "const mediump int gl_MaxFragmentUniformVectors >= 16\n\nThe built-in constant gl_MaxFragmentUniformVectors provides the maximum number of uniform vectors that can be used by the fragment shader. The value of this variable is dependent on the OpenGL ES 2.0 implementation but has to be at least 16.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_MaxFragmentUniformVectors",
      "matches": {
        "gl_MaxFragmentUniformVectors": true
      }
    },
    "cc6b2a71-97d1-3f3c-84c4-4cdcaa9935bc": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig for",
      "matches": {
        "for": true
      }
    },
    "cc6eda10-b26e-3b20-a62b-b6b14700ac1d": {
      "content": "background-size: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz": true
      }
    },
    "cc728e24-7a28-33a3-8121-2127da122556": {
      "content": "companion object {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cobj": true
      }
    },
    "cc75fe9e-643e-35c4-8ecb-f46cf53a761b": {
      "content": "justify-self: end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:e": true
      }
    },
    "cc790a69-9ec5-33e3-9cc6-c7f3f3e8b01f": {
      "content": "(case ${1}\n\t[(${2}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "cc82a0a7-876e-3e08-8d71-be6963ebfa46": {
      "content": "${1:FIELDNAME} = serializers.ChoiceField(choices={${2}})",
      "doc": "Django-rest Serializers ``ChoiceField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ChoiceField",
      "matches": {
        "schoice": true
      }
    },
    "cc89963e-a1ff-31e7-9ce3-5741e4f7ebed": {
      "content": "$.removeData(${1:element}${2:, 'key name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remdd": true
      }
    },
    "cc927419-5a2c-3bb5-80eb-c8b3a4a8ebfa": {
      "content": "function ${1:#:function_name}(${2:#:argument})\n\t${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "function name(args)...end",
      "matches": {
        "func": true
      }
    },
    "cc932006-d89e-3804-9c20-e0471137d50e": {
      "content": "defmodule ${1:AppName}Web.${2:ViewName}View do\n\tuse $1Web, :view\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "view": true
      }
    },
    "cc93857e-abd0-306b-9046-cbef7fbcccad": {
      "content": "_.unary(${func})",
      "doc": "_.map(['6', '8', '10'], _.unary(parseInt));\n// => [6, 8, 10]\n\nCreates a function that accepts up to one argument, ignoring any\nadditional arguments.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unary",
      "matches": {
        "lodash unary": true
      }
    },
    "cca20497-d24f-3a7f-be7b-b0588b3612ae": {
      "content": "nnoremap ${1} ${2}<CR>",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nn": true
      }
    },
    "cca2553b-f8bd-3605-892f-f230bc50dbe3": {
      "content": "catch${1:#:pattern} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "catch": true
      }
    },
    "cca6fbfa-ad78-3a82-9ecc-28accdd1b433": {
      "content": "createReader(${0:filename});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "createReader": true
      }
    },
    "ccaa8afe-0524-308e-b5e8-0260cbfaddc5": {
      "content": "borderTopColor: ${1},",
      "doc": "borderTopColor",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderTopColor",
      "matches": {
        "bor": true
      }
    },
    "ccbd16f7-9751-33fc-9338-b539bfd970c8": {
      "content": "filter '${1:filterName}', (${2:injectables}) ->\n\t(input, ${3:args}) ->\n\t\t${4}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngmfi": true
      }
    },
    "ccbd9b01-d66e-33ac-9418-08d4fbdd3040": {
      "content": "if $1 then\n->[ok] $2\nelse\n  -->[$3]\nendif",
      "doc": "",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "If-else",
      "matches": {
        "if": true
      }
    },
    "cccafc70-3307-3e7d-92dc-91b4d8aa1116": {
      "content": "do {\n\t${0}\n} while (${1:cond})",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "cccca370-dc49-32fb-bed9-1aa2c64f7088": {
      "content": "$routeProvider.when '${1:url}',\n\ttemplateUrl: '${2:templateUrl}'\n\tcontroller: '${3:controller}'\n\tresolve:\n\t\t${4}\n${5}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngrwr": true
      }
    },
    "ccccc18d-66f4-3de6-9bf0-14ff8b4e581f": {
      "content": "{% endblock %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endblock",
      "matches": {
        "endblock": true
      }
    },
    "ccce19d9-49bd-36f8-90be-3e0bb595244e": {
      "content": "function mean(${1:number},${2:...})$0",
      "doc": "statistical mean value of the specified list of numbers",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-mean",
      "matches": {
        "function mean": true
      }
    },
    "cccfedd4-a5a6-3e1a-94cb-3986643775b1": {
      "content": "<%= options_for_select ${1:collection}, ${2:value_method} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ofs": true
      }
    },
    "ccd165c2-587c-3e4d-b1d1-c9fa3eae0edf": {
      "content": "func _input(event):\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_input method of Node",
      "matches": {
        "input": true
      }
    },
    "ccd32e9b-92ab-3624-bda7-4f29c7307206": {
      "content": "| rstrip",
      "doc": "String filter: rstrip",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter rstrip",
      "matches": {
        "rstrip": true
      }
    },
    "ccd54197-15fc-35f7-9e54-3681adfd758a": {
      "content": "$.Callbacks()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "C": true
      }
    },
    "ccd7a302-c090-3fba-9541-be875f749fa0": {
      "content": "let ${1:x} = ${2:v} in\n${3:e}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "let .. in binding",
      "matches": {
        "let": true
      }
    },
    "ccda85ab-7594-3c61-a3d1-4ac7d6e0bfae": {
      "content": "sprintf('${1:#:format}', ${2:#:vars})",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "sprintf",
      "matches": {
        "sprintf": true
      }
    },
    "cce29f97-738b-3fe3-8e20-d1c4752e51a6": {
      "content": "o-- $1 $2",
      "doc": "An object aggregates X number of other objects",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Aggregation",
      "matches": {
        "ag": true
      }
    },
    "cce85475-19a9-361e-a682-d475406bf746": {
      "content": "<slot name=\"${1:x}\">${2:<!-- optional fallback -->}</slot>",
      "doc": "slot w/ name",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-name",
      "matches": {
        "s-slot-name": true
      }
    },
    "cced268a-cb41-3506-9ff6-1779f84cb684": {
      "content": "use feature 'switch';",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "ccee85da-cd5c-320a-8bbc-187c858eacc1": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "ccf36b8c-5a21-34f3-a135-f5ac5f57dada": {
      "content": "_.lte(${value}, ${other})",
      "doc": "_.lte(1, 3);\n// => true\n\n_.lte(3, 3);\n// => true\n\n_.lte(3, 1);\n// => false\n\nChecks if `value` is less than or equal to `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lte",
      "matches": {
        "lodash lte": true
      }
    },
    "ccf36dbe-1af0-379d-9469-79fe6dd89153": {
      "content": "word-wrap: unrestricted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:u": true
      }
    },
    "ccf452e8-bf04-3e49-83fe-ec83c905e4d5": {
      "content": "float ${NAME}(vec2 position, float radius){\n\treturn step(radius, length(position - vec2(0.5)));\n}",
      "doc": "circle shape",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "circle shape",
      "matches": {
        "circle shape": true
      }
    },
    "ccfb86c3-0285-3f18-bdf0-606eb517e5a5": {
      "content": "border-collapse separate",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:s": true
      }
    },
    "ccfdaccb-3baa-397f-8f2f-c513afb6d56a": {
      "content": "opacity: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op": true
      }
    },
    "ccfde00c-0685-3f7b-909c-bb0857e62f18": {
      "content": "<xsl:variable select=\"${1:*}\" />",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "select",
      "matches": {
        "variable": true
      }
    },
    "ccfffed9-3f2e-3d19-9f1e-626035edce80": {
      "content": "$_GET['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "_GET array",
      "matches": {
        "G": true
      }
    },
    "cd095b0d-b975-3177-a74b-34cc615c5f66": {
      "content": "data ${1:type} = ${2:data}$0 ${3:deriving (${4:Show, Eq})}",
      "doc": "Inline data",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "data_inline",
      "matches": {
        "data inline": true
      }
    },
    "cd0ebf0c-f39a-368d-9783-927fa51310a4": {
      "content": "src_${1:lang}${2:[${3:where}]}{${4:code}}",
      "doc": "embedded",
      "filetype": "org",
      "grammar": "lsp",
      "label": "embedded",
      "matches": {
        "emb": true
      }
    },
    "cd12dd04-3bdc-3866-b5d6-4e4b426ae733": {
      "content": "overflow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov": true
      }
    },
    "cd130498-27cc-3546-9f3d-185ef370879c": {
      "content": "break;",
      "doc": "The keyword break is used inside the body of a loop to abort the whole loop. All statements in the body after the break statement are ignored and the loop is exited without executing any further iteration.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "break",
      "matches": {
        "break": true
      }
    },
    "cd1548b8-43f2-3cdd-8b8f-d1d37dcc493c": {
      "content": "<%= link_to \"${1:name}\", ${0:dest} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lt": true
      }
    },
    "cd1b351c-0e26-3029-9c04-06a447a3486b": {
      "content": "throw ${1};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "cd1cfff8-4dd3-3c23-9916-8e1436fc68a9": {
      "content": "Plug '${1}', { 'do': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'do': '' }",
      "matches": {
        "plugdo": true
      }
    },
    "cd1e218a-2985-3fc7-b96c-f89e66e09e21": {
      "content": "_.takeWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.takeWhile(users, function(o) { return !o.active; });\n// => objects for ['barney', 'fred']\n\n// The `_.matches` iteratee shorthand.\n_.takeWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.takeWhile(users, ['active', false]);\n// => objects for ['barney', 'fred']\n\n// The `_.property` iteratee shorthand.\n_.takeWhile(users, 'active');\n// => []\n\nCreates a slice of `array` with elements taken from the beginning. Elements\nare taken until `predicate` returns falsey. The predicate is invoked with\nthree arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-takewhile",
      "matches": {
        "lodash takewhile": true
      }
    },
    "cd25f756-0d08-3812-b116-db649ee877c8": {
      "content": "[#]",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "caption": true
      }
    },
    "cd26a58c-8f23-33c2-a84c-fb74268de990": {
      "content": "after_destroy $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_destroy",
      "matches": {
        "aftd": true
      }
    },
    "cd2750f8-52b1-3589-b30b-401ce198aaca": {
      "content": "list-style-position: outside;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisp:o": true
      }
    },
    "cd2d6cdd-3423-3529-aff5-81b692cc46cf": {
      "content": "setInterval(() => {\n\t${0}\n}, ${1:delay});",
      "doc": "setInterval",
      "filetype": "base",
      "grammar": "lsp",
      "label": "setinterval",
      "matches": {
        "base set interval": true
      }
    },
    "cd2f17a4-b81e-315c-b31f-8791e258c8e3": {
      "content": "- [${1| ,x|}] ${2:text}\n${0}",
      "doc": "Insert task list",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert task list",
      "matches": {
        "task": true
      }
    },
    "cd30bab6-39d0-3d55-90dd-a4e6217d8af7": {
      "content": "for (\\$${1:i}=${2:0}; \\$${1:i} < $3; \\$${1:i}++) { \n\t${0:# code...}\n}",
      "doc": "For-loop",
      "filetype": "php",
      "grammar": "lsp",
      "label": "for …",
      "matches": {
        "for": true
      }
    },
    "cd450fca-351b-3b4e-8eff-6e23d808bed3": {
      "content": "- if ${1:condition}\n\t${2:${VISUAL}}\n- else\n\t${0}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "cd489dc8-275b-3882-8f87-79f6b3120ac9": {
      "content": "class ${1:name} extends StatefulWidget {\n  ${1:name}({Key? key}) : super(key: key);\n\n  @override\n  _${1:WidgetName}State createState() => _${1:WidgetName}State();\n}\n\nclass _${1:index}State extends State<${1:index}> {\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n       child: ${2:null},\n    );\n  }\n}",
      "doc": "Create a Stateful widget",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Stateful Widget",
      "matches": {
        "statefulW": true
      }
    },
    "cd518031-0c51-3ae7-b56a-0471d14426d2": {
      "content": "(${1: a > b}) ? ${2:a} : ${3:b};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "?": true
      }
    },
    "cd5318e2-c914-33e5-9887-de15b1e4c0e0": {
      "content": "do\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert do block",
      "matches": {
        "do": true
      }
    },
    "cd550320-83cb-36fb-9844-e600de44e673": {
      "content": "def index\n\t@${1:model_class_name} = ${2:ModelClassName}.all\n\n\trespond_to do |format|\n\t\tformat.html # index.html.erb\n\t\tformat.json  { render json: @$1s }\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defindex": true
      }
    },
    "cd5cb558-1ebc-3170-9988-1682069092e9": {
      "content": "render text: '${1:text to render}', layout: '${0:layoutname}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rtl": true
      }
    },
    "cd683c50-eea1-3970-a36f-d0a2cb6713c7": {
      "content": "clear: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:r": true
      }
    },
    "cd6fbecc-1bb6-36f7-b365-ed371b291c42": {
      "content": "${1:obj}.get(${2:element index})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "get": true
      }
    },
    "cd71f0ff-263c-3588-b904-d4df1e9a8e41": {
      "content": "<details>\n\t$1\n</details>",
      "doc": "HTML - Defines details of an element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "details",
      "matches": {
        "details": true
      }
    },
    "cd723acd-aeb3-3ce0-9e31-7fb7dba8da0d": {
      "content": "v-slot$1=\"${2}\"",
      "doc": "Expects: JavaScript expression that is valid in a function argument position (supports destructuring in supported environments). Optional - only needed if expecting props to be passed to the slot.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-slot",
      "matches": {
        "vSlot": true
      }
    },
    "cd744816-5b30-3d3d-b2fa-22b03bf2ecce": {
      "content": "<%= submit ${1:\"Submit\"} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "submit",
      "matches": {
        "sb": true
      }
    },
    "cd7b6cd8-ad28-3dcd-80c6-72982fb5e681": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "cd8031b6-08ba-369e-bbdf-e7f890abb896": {
      "content": "t.datetime :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.datetime (tcdt)",
      "matches": {
        "t.": true
      }
    },
    "cd862dbb-25d2-33b2-b76f-dbb265a514e7": {
      "content": "Session::display();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_display": true
      }
    },
    "cd8c2776-6b91-3cae-85b2-9597633b8a22": {
      "content": "${1:value} | ${2:value}",
      "doc": "Code snippet for bitwise or operator.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "bitwise or",
      "matches": {
        "bor": true
      }
    },
    "cd9316f3-aa53-3d54-ab7c-5e8b7ed6f23a": {
      "content": "defp ${1:name}() do\n  $0\nend",
      "doc": "Define a private function",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "defp",
      "matches": {
        "defp": true
      }
    },
    "cd993e62-2a53-390c-9ab7-3e9f6d496c4f": {
      "content": "foreach(${1:/*elem*/}; ${2:/*range*/}) if(${3:/*condition*/})\n{\n\t${VISUAL}$4\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach if (forif)",
      "matches": {
        "forif": true
      }
    },
    "cda18641-6466-3470-b31a-5a5eb3f0cdbf": {
      "content": "${1:FIELDNAME} = serializers.ImageField(${2})",
      "doc": "Django-rest Serializers ``ImageField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ImageField",
      "matches": {
        "simg": true
      }
    },
    "cda6007e-8e6f-3765-9b27-56ae3f0dfb6c": {
      "content": "{% autoescape ${1:off} %}\n\t$2\n{% endautoescape %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "autoescape": true
      }
    },
    "cdaaca29-b4aa-3f4a-b697-645547e2ae73": {
      "content": "box-sizing: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      }
    },
    "cdb284f8-1cd8-3cfb-9553-62e51df42185": {
      "content": "${1:el}.appendChild(${2:elem})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "appendChild",
      "matches": {
        "heac": true
      }
    },
    "cdb3c0e0-8296-34d1-9214-d64085767c43": {
      "content": "mailalias { \"${1:localpart}\":\n\trecipient => \"${0:recipient}\",\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mailalias": true
      }
    },
    "cdbab69b-d602-3181-9a08-b10587708d4e": {
      "content": "describe '${1:#method}' do\n\t${0:pending 'Not implemented'}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert describe block",
      "matches": {
        "descm": true
      }
    },
    "cdbe6222-4ff2-3247-a0fa-0510a594ed93": {
      "content": "must_be_nil",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbn": true
      }
    },
    "cdcbde6d-d650-357c-859f-26421fe1af54": {
      "content": "#!/usr/bin/env python2\n# -*- coding: utf-8 -*-\n$0",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python2",
      "matches": {
        "#!2": true
      }
    },
    "cdcc9f57-b170-3cd8-8b84-9413c615398e": {
      "content": "<AnimateSharedLayout>\n</AnimateSharedLayout>",
      "doc": "Animate between different components that share a layout ID",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-animate-shared-layout",
      "matches": {
        "animate-shared-layout": true,
        "framer-motion animate-shared-layout": true
      }
    },
    "cdcdac2c-e984-3d58-8727-75c209f7658a": {
      "content": "align-items center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      }
    },
    "cdd7f3ad-95d0-3c0f-b262-7e8a89a163aa": {
      "content": "paddingRight: ${1},",
      "doc": "paddingRight",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingRight",
      "matches": {
        "padding": true
      }
    },
    "cde03b6a-adfa-3b69-9fb3-8a262b2747dc": {
      "content": "| prepend: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prepend": true
      }
    },
    "cde07d98-5f6b-3815-b20d-3cd1f99fb948": {
      "content": "[ngStyle]=\"{${1:style}: ${2:expression}}\"",
      "doc": "Angular ngStyle",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngstyle",
      "matches": {
        "a-ngstyle": true,
        "angular ng style": true
      }
    },
    "cde7bf6e-2fdd-348f-9310-daeda78cdad1": {
      "content": "millis();",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      }
    },
    "cde833b3-762c-3068-aade-b6f9ffd94377": {
      "content": "> ${0}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "quote block",
      "matches": {
        "blockquote": true
      }
    },
    "cdeb0294-b3f7-3a98-a5f1-d79971a506d9": {
      "content": "scope=\"${1:row}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scope": true
      }
    },
    "cdf08e1b-75cb-398a-82f1-27fb090eb049": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "cdf7cda6-f397-3549-a8ed-12f41ef8c728": {
      "content": "static public final String ${1:var} = \"${2}\";",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cos": true
      }
    },
    "cdf81f1a-a705-371d-ae7f-3ea2e977d65e": {
      "content": "Vue.config.ignoredElements = [\n\t'${1}'\n]$0",
      "doc": "Vue.config.ignoredElements",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "ignoredElements",
      "matches": {
        "VueConfigIgnoredElements": true
      }
    },
    "cdfb0d1c-4505-386b-967c-e0020c09edaa": {
      "content": "max-height: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      }
    },
    "cdfd537e-9099-38a2-9386-685a11a13854": {
      "content": "expect.hasAssertions();$0",
      "doc": "expects the test to make at least one assertion (useful for async)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-hasassertions",
      "matches": {
        "expha": true,
        "jest expect hasassertions": true
      }
    },
    "ce0625d0-1eac-359c-be28-cec48792ae97": {
      "content": "import ${1:Html} exposing (${0:..})",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impe": true
      }
    },
    "ce105b33-7d64-3582-9e8c-0035592a00c9": {
      "content": "min-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min-width": true,
        "miw": true
      }
    },
    "ce14dec0-601a-3dbe-b75c-fd30eb0b00e4": {
      "content": "def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "ce158481-3c9e-33eb-b600-e8fc9f0f28b6": {
      "content": "componentWillUnmount () {\n\t$0\n}",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentWillUnmount",
      "matches": {
        "cwun": true
      }
    },
    "ce15bf9e-bcf3-312e-a442-4cecf71178e8": {
      "content": "<meta http-equiv=\"${1}\" content=\"${2}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta": true
      }
    },
    "ce1e1c4c-799f-3ed5-8944-03bd7bc319e6": {
      "content": "import React, { FC } from \"react\"\n\ninterface ${1:function_name}Props {${4:props_types}}\n\nexport const ${1:function_name}: FC<${1:function_name}Props> = (${2:props}) => ${3:function_body}",
      "doc": "",
      "filetype": "typescript_react",
      "grammar": "snu",
      "label": "react functional component",
      "matches": {
        "rfc": true
      }
    },
    "ce2a0dc1-9cc3-3da1-8cf5-0f52f772deb2": {
      "content": "expect { ${1:object} }.to raise_error ${2:StandardError}, /${0:message_regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "experr": true
      }
    },
    "ce2b1e0d-3eb5-365d-aeb1-05a483a3fe61": {
      "content": "border-fit: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf": true
      }
    },
    "ce3169eb-7bf2-345b-b2e9-00938d8acb5e": {
      "content": "Wait Until Page Contains    ${1:${text}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Page Contains",
      "matches": {
        "wupc": true
      }
    },
    "ce33e8c7-9a86-3ca0-a255-152c5107011c": {
      "content": "<button class=\"${1:button}\" type=\"${2:submit}\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button.": true
      }
    },
    "ce35c660-1f49-3ddf-9249-9f71fceb2263": {
      "content": "${1:FIELDNAME} = forms.IPAddressField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "IPAddressField",
      "matches": {
        "fip": true
      }
    },
    "ce38070a-8564-3884-a266-5085b97ace5b": {
      "content": "<h2>$1</h2>$2",
      "doc": "HTML - Defines header 2",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h2",
      "matches": {
        "h2": true
      }
    },
    "ce44e397-1f15-32f8-adb0-2afecc687567": {
      "content": "PropTypes.any",
      "doc": "Any prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeAny",
      "matches": {
        "ptany": true
      }
    },
    "ce46a4bf-bd2a-3853-b7d0-3e28364a40b9": {
      "content": "?assertMatch(${1:Pattern}, ${0:Expression})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asmat": true
      }
    },
    "ce4a9e84-ce82-37b3-a359-42aab8412109": {
      "content": "case ${1}:\n\t${0}\n\tbreak;",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "case: break;",
      "matches": {
        "case": true
      }
    },
    "ce4c964a-a8ba-3d43-ac58-75b7beefbd10": {
      "content": "moon.p ${0}",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "ce4f8c59-bfeb-38fb-9909-71b7c75823e2": {
      "content": "place-self: ${1:stretch} ${2:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+": true
      }
    },
    "ce4fbeb2-678b-3f8e-8964-ce879e49059d": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>",
      "doc": "Base for Vue File with no styles",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with No Style",
      "matches": {
        "vbase-ns": true
      }
    },
    "ce552e12-e3ab-3a5f-b179-31d6eef8b105": {
      "content": "type ${1} = ${0};",
      "doc": "",
      "filetype": "reason",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ty": true
      }
    },
    "ce5565c0-e7c9-3c3f-bcf4-198e9b3f9256": {
      "content": "${1:obj}.hover(function (${2:e}) {\n\t${3:// event handler}\n}, function ($2) {\n\t${4:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hover": true
      }
    },
    "ce5a6e6b-ef4d-30df-92a6-1b58c040c476": {
      "content": "align-items start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:s": true
      }
    },
    "ce5c5126-7a86-3c35-9a20-c65b9de68d40": {
      "content": "var ${1}: ${2:any} = ${3};\n${0}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts var",
      "matches": {
        "tvar": true
      }
    },
    "ce650b7f-a857-32bc-9212-b7cf3e7c3478": {
      "content": "${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stop": true
      }
    },
    "ce6cecba-82aa-3c39-9469-5bb945bc0826": {
      "content": "real, dimension(${1::})${2:#:, allocatable} :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension",
      "matches": {
        "red": true
      }
    },
    "ce6e3fb4-af12-340b-9335-1fa9c45de0d7": {
      "content": "until ${1:condition}; do\n\t${0:${VISUAL}}\ndone",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "until": true
      }
    },
    "ce72d06c-b556-3bfd-9a1d-4f2a18b76895": {
      "content": "private ${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create private field",
      "matches": {
        "tprfi": true
      }
    },
    "ce746904-ebe2-3741-be2c-941351607574": {
      "content": "text-emphasis ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te": true
      }
    },
    "ce777e53-85cb-3e7a-9ebf-e58cd1b8d93b": {
      "content": "```{${1:lang}}\n${0}\n```",
      "doc": "",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert Code Language",
      "matches": {
        "```": true
      }
    },
    "ce77d93f-e9f5-3e33-aeda-fa0c2ccab218": {
      "content": "#[test]\nfn ${1:name}() {\n    ${2:unimplemented!();}\n}",
      "doc": "#[test]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "test",
      "matches": {
        "test": true
      }
    },
    "ce7ed21f-1186-3d1a-8414-50eb6670880f": {
      "content": "const mapStateToProps = (state) => {\n\treturn {\n\t\t${1:propName}: state.$1,\n\t};\n};",
      "doc": "",
      "filetype": "javascript-redux",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mstp": true
      }
    },
    "ce876c57-eed4-35f6-91dc-0be5378cd053": {
      "content": "string.uppercase()",
      "doc": "string.uppercase(message?: string | function): Schema\n\nTransforms the string value to uppercase. If strict() is set it\nwill only validate that the value is uppercase.numberDefine a number schema. Supports all the same methods as mixed.let schema = yup.number();\n\nawait schema.isValid(10); // => true\nThe default cast logic of number is: parseFloat.Failed casts return NaN.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-uppercase",
      "matches": {
        "yup string uppercase": true
      }
    },
    "ce88cee7-f847-3b7e-ae02-0803e7115e38": {
      "content": "${fn:contains(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains": true
      }
    },
    "ce95a80b-0a3a-3873-a0d7-347838c96b6a": {
      "content": "font-style: oblique",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:o": true
      }
    },
    "ce970889-ffb9-3cfb-baef-c4bfc0e34ef8": {
      "content": "---\nlayout: ${layout:default}\ntitle: ${title}\ncategories: ${category}\npermalink: ${path}\ntags: ${tag}\nexcerpt: ${description}\n---",
      "doc": "Add front matter",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Front Matter",
      "matches": {
        "fm": true
      }
    },
    "ce9ca283-1436-3f61-8ba4-e4f4d7591e48": {
      "content": "${1:FIELDNAME} = serializers.SlugRelatedField(${2})",
      "doc": "Django-rest Serializers ``SlugRelatedField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF SlugRelatedField",
      "matches": {
        "sslugrelated": true
      }
    },
    "cea1aa01-9a4c-34e6-b045-d0a0e821b0be": {
      "content": "Ada.Text_IO.Get(${1});\n${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "Ada.Text_IO.Get",
      "matches": {
        "get": true
      }
    },
    "cea294ec-96e2-3d7c-b29a-5c9d488a1dc1": {
      "content": "${1:action} unless ${2:condition}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unl": true
      }
    },
    "ceaa33f0-115a-3730-9671-b12bb9d14e95": {
      "content": "grid-auto-rows: min-content",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      }
    },
    "ceb11a69-2527-3c30-81b4-41febe91d6e6": {
      "content": "debugger;",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "de": true
      }
    },
    "ceb2c22d-45c7-3562-b3d8-4bd86c39d4aa": {
      "content": "_.lt(${value}, ${other})",
      "doc": "_.lt(1, 3);\n// => true\n\n_.lt(3, 3);\n// => false\n\n_.lt(3, 1);\n// => false\n\nChecks if `value` is less than `other`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lt",
      "matches": {
        "lodash lt": true
      }
    },
    "ceb94c43-81f8-3607-b8cb-f51006887bb7": {
      "content": "place-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sb": true
      }
    },
    "cebc67a3-dae9-3202-a1b4-b5278af55fca": {
      "content": "render partial: '${1:item}', collection: ${0:@$1s}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpc": true
      }
    },
    "cebc744f-66ef-302f-83f6-c541ef15aab3": {
      "content": "{#await ${1:promise}}\n\t${2: <!-- content when promise is pending -->}\n{:then ${3:value}}\n\t${4: <!-- content when promise was fulfilled -->}\n{:catch error}\n\t${5: <!-- content when promise was rejected -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-catch-block",
      "matches": {
        "svawait-catch": true,
        "svelte await catch": true
      }
    },
    "cebccb95-a01c-3fb0-b715-4395b6d1bab7": {
      "content": "console.debug(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.debug",
      "matches": {
        "cd": true
      }
    },
    "cec1b9f1-7523-33d9-a571-7e9bf431e913": {
      "content": "_.assign(${object}, ${sources})",
      "doc": "function Foo() {\n  this.a = 1;\n}\n\nfunction Bar() {\n  this.c = 3;\n}\n\nFoo.prototype.b = 2;\nBar.prototype.d = 4;\n\n_.assign({ 'a': 0 }, new Foo, new Bar);\n// => { 'a': 1, 'c': 3 }\n\nAssigns own enumerable string keyed properties of source objects to the\ndestination object. Source objects are applied from left to right.\nSubsequent sources overwrite property assignments of previous sources.\n\n**Note:** This method mutates `object` and is loosely based on\n[`Object.assign`](https://mdn.io/Object/assign).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-assign",
      "matches": {
        "lodash assign": true
      }
    },
    "cece08df-cedb-3d54-a6bf-9513ae5bf4e4": {
      "content": "class << self; self end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sinc": true
      }
    },
    "ced43c2f-d9ab-3f09-830b-a0830cfa8c4b": {
      "content": "components",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "components",
      "matches": {
        "components": true
      }
    },
    "ced929b4-a2d4-3918-b153-b990f9bdf3c6": {
      "content": "inject(${1:init}) { |${2:mem}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inj": true
      }
    },
    "cedce448-3723-3d8d-aeab-97ae0ac4b41d": {
      "content": "import ${1} (${2})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "import ... (...)",
      "matches": {
        "importOnly": true
      }
    },
    "cedfcd43-f69a-3e42-b6c0-d86f56c546e0": {
      "content": "<%= $1 %> $2",
      "doc": "EJS outputs no value",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Output Value",
      "matches": {
        "ejsout": true
      }
    },
    "cee140e8-7400-338e-a0a2-2b265304d876": {
      "content": "${1:obj}.parent('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parent": true
      }
    },
    "cee6ca0d-93a8-37de-94cf-71110d814a07": {
      "content": "display -moz-inline-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:mib": true
      }
    },
    "ceeba60d-0c56-3d34-b684-fb458fbbe4f1": {
      "content": "#!/usr/bin/env perl6",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "cef13738-b617-3eb3-b2ec-566c2573fbed": {
      "content": "zoom: 1;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      }
    },
    "cef1ecdf-c9c5-3fe4-9248-6891d5b2674e": {
      "content": "+${1}+${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "+verbatim+",
      "matches": {
        "verb": true
      }
    },
    "cefd9019-ae2d-3289-a352-871f08a97de4": {
      "content": "${1:app}.post('${2:route}', ${3:handler});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epost": true
      }
    },
    "cf0872d4-53ba-34b3-851c-99eb3a2f6d38": {
      "content": "border-top-width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      }
    },
    "cf10094f-9a88-3be6-8e8b-c42086804af9": {
      "content": "<${1:button}::${2:stylename} ${3:disabled}={${4:disabled}}>\n\t<{ \"${5:Text}\" }>\n</${1:button}>",
      "doc": "HTML elements can be written as in standard HTML.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Button Element",
      "matches": {
        "button": true
      }
    },
    "cf1d99c9-ac57-36ed-9f3c-ae6b8f038117": {
      "content": "find(${1:id})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(id)",
      "matches": {
        "fini": true
      }
    },
    "cf218807-01be-3919-8189-642e3551833c": {
      "content": "text-wrap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      }
    },
    "cf218c4e-35cd-33f4-b83f-cf85634c3f13": {
      "content": "_.toFinite(${value})",
      "doc": "_.toFinite(3.2);\n// => 3.2\n\n_.toFinite(Number.MIN_VALUE);\n// => 5e-324\n\n_.toFinite(Infinity);\n// => 1.7976931348623157e+308\n\n_.toFinite('3.2');\n// => 3.2\n\nConverts `value` to a finite number.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tofinite",
      "matches": {
        "lodash tofinite": true
      }
    },
    "cf262a6d-535f-3fc8-b792-ac2383536c8e": {
      "content": "pragma solidity ${1:version};",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "pragma solidity",
      "matches": {
        "pra": true
      }
    },
    "cf2a8b33-7473-376d-8fea-4c2475fcf9ad": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-component-prop-types",
      "matches": {
        "imrcp": true,
        "react import component proptypes": true
      }
    },
    "cf2c7598-3e09-3ce3-a18a-0c0a2d618579": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      }
    },
    "cf3b2420-4cf7-37f8-b0e9-b2589db9c3b4": {
      "content": "PropTypes.bool",
      "doc": "Bool prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeBool",
      "matches": {
        "ptb": true
      }
    },
    "cf3f3e3a-44a3-3393-99f3-daf4e88cf6ac": {
      "content": "clip: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp": true
      }
    },
    "cf4035d5-fc5c-35f0-be0c-d1aebd74d8dc": {
      "content": "import type ${0:option.option}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "impt": true
      }
    },
    "cf44dff2-88da-3cfb-80cc-ea92d0e6ec56": {
      "content": "interface ${1:name} {\n\t$0\n}",
      "doc": "Interface Definition",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Interface Definition",
      "matches": {
        "iface": true
      }
    },
    "cf4f52fa-95df-37b3-aa34-47200aafe317": {
      "content": "${fn:endsWith(${1:string}, ${0:suffix})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "endswith": true
      }
    },
    "cf53d0c0-06f3-3f51-b594-9e1224617dd9": {
      "content": "| concat: ${1:array}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "concat": true
      }
    },
    "cf5a3bd4-8dd4-39fc-b187-106e513a7e76": {
      "content": "ref=\"${1:reference}\"$0",
      "doc": "Expects: string. ref is used to register a reference to an element or a child component. The reference will be registered under the parent component’s $refs object. If used on a plain DOM element, the reference will be that element; if used on a child component, the reference will be component instance.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-ref",
      "matches": {
        "ref": true,
        "vue ref": true
      }
    },
    "cf63ac39-e026-315a-b5b0-965ea2fc39be": {
      "content": "elseif ${1:#:condition}\n    ${0:TARGET}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      }
    },
    "cf654553-4bc2-36eb-b736-71da88b19196": {
      "content": "craft.app.request.getBodyParam(${1:\"postVariableName\"})\n$0",
      "doc": "request getBodyParam",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "getbodyparam",
      "matches": {
        "getbodyparam": true
      }
    },
    "cf6b6564-be2f-3701-b9ec-9a94d42ba60b": {
      "content": "Page Should Not Contain Image    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Image",
      "matches": {
        "psnci": true
      }
    },
    "cf6fddb7-db9e-3eec-a4d7-543f06dbf896": {
      "content": "console.timeEnd('${1:first}')",
      "doc": "Console time end wrapper",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleTimeEnd",
      "matches": {
        "cte": true
      }
    },
    "cf77ae70-3728-3387-8dd5-78b86e537c5e": {
      "content": "pravFrame();",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pf": true
      }
    },
    "cf7bbf88-1d11-3d5c-9e1b-78ded17585da": {
      "content": "// https://eips.ethereum.org/EIPS/eip-20\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface Token {\r\n\r\n    /// @param _owner The address from which the balance will be retrieved\r\n    /// @return balance the balance\r\n    function balanceOf(address _owner) external view returns (uint256 balance);\r\n\r\n    /// @notice send `_value` token to `_to` from `msg.sender`\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return success Whether the transfer was successful or not\r\n    function transfer(address _to, uint256 _value)  external returns (bool success);\r\n\r\n    /// @notice send `_value` token to `_to` from `_from` on the condition it is approved by `_from`\r\n    /// @param _from The address of the sender\r\n    /// @param _to The address of the recipient\r\n    /// @param _value The amount of token to be transferred\r\n    /// @return success Whether the transfer was successful or not\r\n    function transferFrom(address _from, address _to, uint256 _value) external returns (bool success);\r\n\r\n    /// @notice `msg.sender` approves `_addr` to spend `_value` tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @param _value The amount of wei to be approved for transfer\r\n    /// @return success Whether the approval was successful or not\r\n    function approve(address _spender  , uint256 _value) external returns (bool success);\r\n\r\n    /// @param _owner The address of the account owning tokens\r\n    /// @param _spender The address of the account able to transfer the tokens\r\n    /// @return remaining Amount of remaining tokens allowed to spent\r\n    function allowance(address _owner, address _spender) external view returns (uint256 remaining);\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n}\r\n\r\ncontract Standard_Token is Token {\r\n    uint256 constant private MAX_UINT256 = 2**256 - 1;\r\n    mapping (address => uint256) public balances;\r\n    mapping (address => mapping (address => uint256)) public allowed;\r\n    uint256 public totalSupply;\r\n    /*\r\n    NOTE:\r\n    The following variables are OPTIONAL vanities. One does not have to include them.\r\n    They allow one to customise the token contract & in no way influences the core functionality.\r\n    Some wallets/interfaces might not even bother to look at this information.\r\n    */\r\n    string public name;                   //fancy name: eg Simon Bucks\r\n    uint8 public decimals;                //How many decimals to show.\r\n    string public symbol;                 //An identifier: eg SBX\r\n\r\n    constructor(uint256 _initialAmount, string memory _tokenName, uint8 _decimalUnits, string  memory _tokenSymbol) {\r\n        balances[msg.sender] = _initialAmount;               // Give the creator all initial tokens\r\n        totalSupply = _initialAmount;                        // Update total supply\r\n        name = _tokenName;                                   // Set the name for display purposes\r\n        decimals = _decimalUnits;                            // Amount of decimals for display purposes\r\n        symbol = _tokenSymbol;                               // Set the symbol for display purposes\r\n    }\r\n\r\n    function transfer(address _to, uint256 _value) public override returns (bool success) {\r\n        require(balances[msg.sender] >= _value, \"token balance is lower than the value requested\");\r\n        balances[msg.sender] -= _value;\r\n        balances[_to] += _value;\r\n        emit Transfer(msg.sender, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {\r\n        uint256 allowance = allowed[_from][msg.sender];\r\n        require(balances[_from] >= _value && allowance >= _value, \"token balance or allowance is lower than amount requested\");\r\n        balances[_to] += _value;\r\n        balances[_from] -= _value;\r\n        if (allowance < MAX_UINT256) {\r\n            allowed[_from][msg.sender] -= _value;\r\n        }\r\n        emit Transfer(_from, _to, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function balanceOf(address _owner) public override view returns (uint256 balance) {\r\n        return balances[_owner];\r\n    }\r\n\r\n    function approve(address _spender, uint256 _value) public override returns (bool success) {\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value); //solhint-disable-line indent, no-unused-vars\r\n        return true;\r\n    }\r\n\r\n    function allowance(address _owner, address _spender) public override view returns (uint256 remaining) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n}",
      "doc": "ERC20 example implementation",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc20 example",
      "matches": {
        "erc20": true
      }
    },
    "cf7d5c77-e405-30b6-b040-f52fc111f09b": {
      "content": "procedure ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "procedure declaration",
      "matches": {
        "procedure_declare": true
      }
    },
    "cf85befd-8bad-3c80-87d6-4aaecb2cc988": {
      "content": "$.getScript('${1:mydomain.com/url}', function (script, textStatus, jqXHR) {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getscript": true
      }
    },
    "cf8ae6eb-c5b6-382b-9e81-817435024566": {
      "content": "PropTypes.func.isRequired,",
      "doc": "Func prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeFuncRequired",
      "matches": {
        "ptfr": true
      }
    },
    "cf8df633-3f90-3b7e-b3a0-079c0805e510": {
      "content": "${1:obj}.wrap('${2:&ltdiv class=\"extra-wrapper\"&gt&lt/div&gt}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrap": true
      }
    },
    "cf982b0f-a479-3fa1-ae74-1764986da638": {
      "content": "_.toPlainObject(${value})",
      "doc": "function Foo() {\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.assign({ 'a': 1 }, new Foo);\n// => { 'a': 1, 'b': 2 }\n\n_.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n// => { 'a': 1, 'b': 2, 'c': 3 }\n\nConverts `value` to a plain object flattening inherited enumerable string\nkeyed properties of `value` to own properties of the plain object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-toplainobject",
      "matches": {
        "lodash toplainobject": true
      }
    },
    "cf9dcd89-d8f7-3ca7-b634-66e3b34bb5b2": {
      "content": "nfp(${2:value}, ${3:left}${4:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfp": true
      }
    },
    "cf9ea673-2cab-38a4-bb9e-650b96648acb": {
      "content": "validates_length_of :${1:attribute}, within: ${2:3..20}${3:, on: :${4:create}, message: \"${5:must be present}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of (vl)",
      "matches": {
        "vl": true
      }
    },
    "cfa50a4f-4eac-3efb-bb96-3204d5e6ccea": {
      "content": "{% endhtml %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig endhtml",
      "matches": {
        "endhtml": true
      }
    },
    "cfac5d9c-06d8-3966-be1d-3b78621566c8": {
      "content": "max { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "max": true
      }
    },
    "cfadd43f-2fa9-3ed3-af6c-66af0217aca4": {
      "content": "align-items: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      }
    },
    "cfb033c0-f05f-3c8f-a4ed-ac3aa0369379": {
      "content": "text-wrap suppress",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:s": true
      }
    },
    "cfb0932c-e66a-3e4d-a9d6-bb40b0927965": {
      "content": "<meta http-equiv=\"X-UA-Compatible\" content=\"IE=${1:7,8,edge}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:compat": true
      }
    },
    "cfb7f607-6724-3629-bea4-5173bd164e06": {
      "content": "console.warn(${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "console.warn",
      "matches": {
        "cw": true
      }
    },
    "cfb8ccf6-27fc-3e12-b959-9d2fd77d1146": {
      "content": "\\${3}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${3}",
      "matches": {
        "3": true
      }
    },
    "cfba1916-08e9-37c5-8fbf-10be12a98e90": {
      "content": "module ${1:mod} where$0",
      "doc": "simple module",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "module",
      "matches": {
        "mod simple": true,
        "mods": true
      }
    },
    "cfba78e7-0a9b-340e-9dfc-987e8f5d7bd5": {
      "content": "const ${1:store} = tweened(${2:value}, ${3:options});",
      "doc": "svelte create tweened store",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tweened",
      "matches": {
        "s-tweened": true
      }
    },
    "cfc13546-62c0-3f78-9280-32dc3b5517fd": {
      "content": "filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='${1}',sizingMethod='${0:crop}');",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bg:ie": true
      }
    },
    "cfc2cc4a-b4ad-3d32-801a-8aaa71aa96a3": {
      "content": "<pre>\n\t{{ dump($1) }}\n</pre>\n{% exit %}$0",
      "doc": "dump and die",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "dd",
      "matches": {
        "dd": true
      }
    },
    "cfca0df1-54cc-365d-a4ea-9b86b9b1e46d": {
      "content": "quotes: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      }
    },
    "cfcbe85f-27cb-3540-b2d4-b509da429a2b": {
      "content": "def ${1:model_class_name}_params\n\tparams.require(:$1).permit(${2:attributes})\nend",
      "doc": "def model_params",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Model Params",
      "matches": {
        "params": true
      }
    },
    "cfd54741-836e-329b-8f2a-ece3bd31f6e4": {
      "content": "_.isRegExp(${value})",
      "doc": "_.isRegExp(/abc/);\n// => true\n\n_.isRegExp('/abc/');\n// => false\n\nChecks if `value` is classified as a `RegExp` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isregexp",
      "matches": {
        "lodash isregexp": true
      }
    },
    "cfd95291-cd63-33c7-a512-8677dc1072d0": {
      "content": "always_latch begin ${1:: statement_label}\n\t${0}\nend $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      }
    },
    "cfdb7060-b19a-3c67-91be-6a7f742165cd": {
      "content": "align-self flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fe": true
      }
    },
    "cfdf2adf-022c-36a2-97fe-92ed0e8d957c": {
      "content": "_.reject(${collection}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney', 'age': 36, 'active': false },\n  { 'user': 'fred',   'age': 40, 'active': true }\n];\n\n_.reject(users, function(o) { return !o.active; });\n// => objects for ['fred']\n\n// The `_.matches` iteratee shorthand.\n_.reject(users, { 'age': 40, 'active': true });\n// => objects for ['barney']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.reject(users, ['active', false]);\n// => objects for ['fred']\n\n// The `_.property` iteratee shorthand.\n_.reject(users, 'active');\n// => objects for ['barney']\n\nThe opposite of `_.filter`; this method returns the elements of `collection`\nthat `predicate` does **not** return truthy for.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-reject",
      "matches": {
        "lodash reject": true
      }
    },
    "cfe2859d-b7b9-3a1d-bd19-5cbdebf1a138": {
      "content": "<%@page contentType=\"text/html\" pageEncoding=\"UTF-8\"%>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@page": true
      }
    },
    "cfe318e9-8a52-33c1-93d5-ff2475c82135": {
      "content": "text-justify ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tj": true
      }
    },
    "cfe93096-adac-3729-9dc0-01bd61b6e823": {
      "content": "router.afterEach((to, from) => {\n\t\n});",
      "doc": "Vue Router global guards afterEach",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router afterEach",
      "matches": {
        "vaftereach": true
      }
    },
    "cfe96b7e-a9ed-3767-aa0a-6d5e99927c8f": {
      "content": "while ${1:condition}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "cfebb3bd-d793-3cd9-b116-c490ddd13399": {
      "content": "<slot name=\"${1:x}\">${2:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot-name",
      "matches": {
        "svelte slot name": true,
        "svsn": true
      }
    },
    "cfefa60a-626f-344c-a68f-0b258cfb767e": {
      "content": "module.exports = ${1};",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ex": true
      }
    },
    "d008b6b5-d537-39d7-90b6-49265e7a36bf": {
      "content": "height: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "height",
      "matches": {
        "hei": true
      }
    },
    "d00d2f90-70bd-35bc-a77e-cb6704a5e0aa": {
      "content": "@safe pure nothrow",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "@safe pure nothrow (spn)",
      "matches": {
        "spn": true
      }
    },
    "d00d4358-af95-3786-8ba6-ec22c601eb03": {
      "content": ".. attention:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "attention",
      "matches": {
        "attention": true
      }
    },
    "d00dda45-b5b1-3b93-9bbb-881a8b4f4d55": {
      "content": "border-style: dashed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:ds": true
      }
    },
    "d0120688-77a2-3176-889b-691058d07371": {
      "content": "expect(${1:target}).toMatch(${2:pattern})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to match (coffee)",
      "matches": {
        "em": true
      }
    },
    "d020e484-2e08-3250-8122-b7efcc9e1917": {
      "content": "@return {${1:Type}} ${2:Description}",
      "doc": "",
      "filetype": "javascript-jsdoc",
      "grammar": "snu",
      "label": "@return {Type} Description",
      "matches": {
        "@ret": true
      }
    },
    "d0216b9e-ac11-32ed-8c34-bed019696542": {
      "content": "<cite>$1</cite>$2",
      "doc": "HTML - Defines a citation",
      "filetype": "html",
      "grammar": "lsp",
      "label": "cite",
      "matches": {
        "cite": true
      }
    },
    "d02638a2-492f-32b9-b010-a440b4c527f2": {
      "content": "{% continue %}",
      "doc": "Iteration tag: continue",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag continue",
      "matches": {
        "continue": true
      }
    },
    "d02bb6cd-53ef-3084-a3bb-2baccae41dfa": {
      "content": "text-align-last ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tal": true
      }
    },
    "d02c88fb-907d-3988-9d06-b1587db286de": {
      "content": "file_put_contents(${1:file}, ${2:content}${3:, FILE_APPEND});$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "file_put_contents",
      "matches": {
        "fpc": true
      }
    },
    "d0302937-aa93-335a-be5b-3cdf18031070": {
      "content": "(* ${1}\n\t${0})",
      "doc": "",
      "filetype": "scheme",
      "grammar": "snu",
      "label": "",
      "matches": {
        "*": true
      }
    },
    "d0309754-4aee-3b4f-b0d1-7b0fc7dc430d": {
      "content": "{%- assign ${1:variable} = ${0:value} -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign-": true
      }
    },
    "d0330923-21d1-3e5d-8328-b38a239ddb0f": {
      "content": "echo CHtml::activeTextField(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhatf": true
      }
    },
    "d0347653-5271-34e7-b992-bfd556c71827": {
      "content": "repeat\n\t${1:--body}\nuntil ${0:condition}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repeat": true
      }
    },
    "d03db0ac-3505-3f51-bfe6-3f3f1160f517": {
      "content": "if (${1:#:condition}) {\n\t${2:TARGET}\n} elsif (${3}) {\n\t${4:#:elsif...}\n} else {\n\t${5:#:else...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "d0437695-d03a-312e-b69a-a7d9537855dc": {
      "content": "class ${1} ${2:#:extends_or_implements}{\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "d04b59a1-afcb-3ce0-be68-581be7933c0b": {
      "content": "main : Program Never ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}beginnerProgram\n\t\t{ init: ${6:init}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "basicProgram": true,
        "progb mainb": true
      }
    },
    "d04e8af7-d22d-3324-9cf0-8bc03fac5b7c": {
      "content": "${1:auto} ${2:var} = new ${3:Object}(${4});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "new": true
      }
    },
    "d04e9417-4270-32a6-b571-1f0805288d3d": {
      "content": "slot-scope=\"$1\"$0",
      "doc": "Used to denote an element or component as a scoped slot. The attribute’s value should be a valid JavaScript expression that can appear in the argument position of a function signature. This means in supported environments you can also use ES2015 destructuring in the expression. Serves as a replacement for scope in 2.5.0+.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "slotScope",
      "matches": {
        "slotScope": true
      }
    },
    "d04fc3f1-c206-36ab-8713-da354e5aa86f": {
      "content": "${1:iterable}.every((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "every",
      "matches": {
        "every": true
      }
    },
    "d04fd0e9-fa75-3579-9106-964effc300d5": {
      "content": "include ${0:filetype}.snip",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "include *.snip",
      "matches": {
        "inc": true,
        "include": true
      }
    },
    "d0619b05-baf7-3c3a-8796-6983619cae5c": {
      "content": "import { mapMutations } from 'vuex'\n\nexport default {\n\tmethods: {\n\t\t...mapMutations([\n\t\t\t${1:'nameOfMutation'}, //also supports payload `this.nameOfMutation(amount)` \n\t\t])\n\t},\n}",
      "doc": "mapmutations inside a vue component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-mapmutations",
      "matches": {
        "vmapmutations": true,
        "vue mapmutations": true
      }
    },
    "d067cc8c-b8e4-3113-bb34-0bbcfa7f0b22": {
      "content": "(others => '${1:0}');",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oth": true
      }
    },
    "d06caef1-7f9e-3b92-ad9a-2570dd711a62": {
      "content": "<label for=\"${0:$1}\">${1}</label>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label": true
      }
    },
    "d0728f4c-d8b5-33aa-b7ca-8a60d1f89af7": {
      "content": "white-space normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      }
    },
    "d08186a5-c600-3f69-a231-e6c658d34aaf": {
      "content": "overflow-y: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy": true
      }
    },
    "d08aacbe-a2d6-39b1-95fe-8e4423a6d861": {
      "content": "padding-bottom ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      }
    },
    "d0944344-9a44-32a4-ab53-5df20654c4ca": {
      "content": "align-content: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fs": true
      }
    },
    "d09519fa-b87a-36ba-87f8-ba21a9224fe5": {
      "content": "#!/usr/bin/env ruby\n${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "#!/usr/bin/env ruby",
      "matches": {
        "#!": true,
        "shebang": true
      }
    },
    "d096f122-4780-3416-a4af-d63bf42d84fe": {
      "content": "visibility: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:v": true
      }
    },
    "d098dd46-b098-3f36-97ce-387ea5081ed4": {
      "content": "getContext(${1:key})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-get-context",
      "matches": {
        "svelte get content": true,
        "svgetc": true
      }
    },
    "d09c4a25-3f34-3476-8b03-15c26cbf9e0f": {
      "content": "margin-top: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt:a": true
      }
    },
    "d09d2985-c895-304e-ae0e-d19649f3799a": {
      "content": "${1:iterable}.reduce((${2:previous}, ${3:current}) => {\n\t${0}\n}${4:, initial})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "reduce",
      "matches": {
        "reduce": true
      }
    },
    "d0a33c6f-e6e7-3e0a-bedc-5fe9b6ac1480": {
      "content": "saveBytes(${1:filename}, ${0:bytes});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "saveBytes": true
      }
    },
    "d0a3e024-1e14-3151-8bf3-e1845f1e9265": {
      "content": "Element Should Be Enabled    ${${1:locator}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Enabled",
      "matches": {
        "esbe": true
      }
    },
    "d0a4fbc4-aecf-3af8-81a0-8eba063dfdc1": {
      "content": "{{{\n${0:TARGET}\n}}}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "{{{<code>}}}",
      "matches": {
        "code": true
      }
    },
    "d0a5d658-9b68-362f-bc4f-2d15ac3c51c0": {
      "content": "${1:document}.getElementsByClassName('${0:class}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "by.": true
      }
    },
    "d0aa6334-5379-38d2-a069-f5a55ab538c6": {
      "content": "add_index :${1:table_name}, :${0:column_name}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mai": true
      }
    },
    "d0b51547-059d-3baf-a85c-4a2393c451a2": {
      "content": "AnimatedBuilder(\n  animation: ${1:animation},\n  child: ${2:child},\n  builder: (BuildContext context, Widget child) {\n    return ${3:};\n  },\n),",
      "doc": "Creates an Animated Builder. The widget specified to `child` is passed to the `builder`",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Animated Builder",
      "matches": {
        "animatedBldr": true
      }
    },
    "d0b6d80e-07dd-336d-9b96-c717c98f63fa": {
      "content": "\\begin{math}\n\t${1:TARGET}\n\\end{math}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{math} \\math": true,
        "math": true
      }
    },
    "d0bbc07b-83ac-3c0c-8207-90122f425051": {
      "content": "all? { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "all": true
      }
    },
    "d0bc2544-9fe4-3644-adfc-4ab02b82ae39": {
      "content": "break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "break": true
      }
    },
    "d0beaaa4-2f79-3d02-87fd-1b4448ef403a": {
      "content": "type ${1:Interface} interface {\n\t${2:/* TODO: add methods */}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "interface I { ... }",
      "matches": {
        "interface": true
      }
    },
    "d0c15a89-a6f5-3d54-8a3a-12360cdb4554": {
      "content": "text-indent: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti": true
      }
    },
    "d0ca99f9-ca1d-3030-9b21-1af47d8f11fe": {
      "content": "comments",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "comments",
      "matches": {
        "comments": true
      }
    },
    "d0cab96d-ef2c-3529-ae37-d3ef81670551": {
      "content": "scope :${1:name}, { ${2:joins(:${3:table}).}where(${4:'${5:$3.${6:field}} = ?', ${7:'${8:value}'}}) }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope",
      "matches": {
        "scope": true
      }
    },
    "d0cdf237-e2bd-3790-9ed7-647b99ec8e40": {
      "content": "@module external ${1:leftPad}: ${2:(string, int) => string} = \"${3:leftPad}\"",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "JS Module Default External",
      "matches": {
        "@bs": true,
        "external": true
      }
    },
    "d0ce4554-b3c6-3f77-a294-feba2a9fc9d3": {
      "content": "<%call expr=\"${1:name}\">\n\t${0:}\n</%call>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "call": true
      }
    },
    "d0d98058-bbea-35b9-9896-8b7e70eb332d": {
      "content": "/**\n * @brief    ${1:function description}\n *\n * @details  ${2:detailed description}\n *\n * @param    ${3:param}\n *\n * @return   ${4:return type}\n */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "/** @brief ...",
      "matches": {
        "doxy": true
      }
    },
    "d0db522b-7f8b-397a-8572-aa9e9e322583": {
      "content": "its(:${1:method}) { should ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "its": true
      }
    },
    "d0e0688b-0e4d-3c13-8207-f3c5c549b45c": {
      "content": "${1:#:set the_folder to }choose folder with prompt \"${2:#:Pick a folder:}\"\n${3:#:default location path to home folder}\n${4:#:with invisibles}\n${5:#:with multiple selections allowed}\n${6:#:with showing package contents}\n${0}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_Folders": true
      }
    },
    "d0e71d1e-ce8e-356e-882c-2bcf5f678fa3": {
      "content": "$.isXMLDoc(${1:node})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isxml": true
      }
    },
    "d0e9c2ac-6d22-3179-b3d6-5386766e8926": {
      "content": "<%= form_tag(${1:\"/users\"}, method: ${2::post}) %>\n\t${0}\n</form>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "form_tag",
      "matches": {
        "ft": true
      }
    },
    "d0ed190f-c740-329e-9ac5-552ee3b3ba74": {
      "content": "<div [ngSwitch]=\"${1:conditionExpression}\">\n\t<div *ngSwitchCase=\"${2:expression}\">${3:output}</div>\n\t<div *ngSwitchDefault>${4:output2}</div>\n</div>",
      "doc": "Angular ngSwitch",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngswitch",
      "matches": {
        "a-ngswitch": true,
        "angular ng switch": true
      }
    },
    "d0ed832b-6232-362b-97fe-04c8dbcffca3": {
      "content": "background-repeat no-repeat",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgr:n": true
      }
    },
    "d0f40788-5ca8-331c-a32c-bf38e8e496be": {
      "content": "if ${1:condition} {\n    ${2:unimplemented!();}\n}",
      "doc": "if … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "d0faff21-5633-39ed-828d-5e4cb2e703ae": {
      "content": "-left->",
      "doc": "left arrow, format: box -left-> box 2 (it will point left towards the box 2",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Arrow-left",
      "matches": {
        "left": true
      }
    },
    "d0fd4d83-8e73-3c46-9428-58585be39ed6": {
      "content": "<% ${1}.each do |${2}| %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ead": true
      }
    },
    "d104a6d6-c7de-39ac-a5df-d5d373198b09": {
      "content": "echo CHtml::tag('${1:tag}',array('${2:optionName}'=>${3:optionValue}),${4:false},${0:true});",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yht": true
      }
    },
    "d10c0c41-b728-3505-94ba-c4e5eedea896": {
      "content": "${1:protected} function ${2:foo}()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "d112a28b-5b36-3ad5-b5f7-c3728c524a96": {
      "content": "(if (not ${1}) ${2} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifn": true
      }
    },
    "d115a9a1-71c7-356c-9862-61a5cd39c5a5": {
      "content": "include Enumerable\n\ndef each(&block)\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Enum": true
      }
    },
    "d120757b-4c78-3045-87fc-42c88d64cfd9": {
      "content": "_.lowerFirst(${string})",
      "doc": "_.lowerFirst('Fred');\n// => 'fred'\n\n_.lowerFirst('FRED');\n// => 'fRED'\n\nConverts the first character of `string` to lower case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-lowerfirst",
      "matches": {
        "lodash lowerfirst": true
      }
    },
    "d1240b65-9efc-38a3-a862-82093289695f": {
      "content": "bottom: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      }
    },
    "d1262bc6-a2ae-31d0-b932-3527dbed3309": {
      "content": "assert(${1:var} = assigns(:$1), \"Cannot find @$1\")\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert(var = assigns(:var))",
      "matches": {
        "asg": true
      }
    },
    "d1278ceb-0cb9-339f-8876-9ebba0bdad48": {
      "content": "grid-auto-flow ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      }
    },
    "d127c0ab-d5b5-3b16-aca9-ee0018a4fc78": {
      "content": "validates_uniqueness_of :${1:attribute}${2:, on: :${3:create}, message: \"${4:must be unique}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_uniqueness_of (vu)",
      "matches": {
        "vu": true
      }
    },
    "d12a2106-7ab6-339c-a22f-1827fde8815e": {
      "content": "$this->${1:method}()->shouldBeLike(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldBeLike('value')",
      "matches": {
        "sblike": true
      }
    },
    "d12dde8b-8efc-38fe-9e9b-3a96da9d494a": {
      "content": "font-effect: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef": true
      }
    },
    "d13007dd-02c3-386d-a1fd-f01e5d2b9d34": {
      "content": "<span id=\"${1}\">${0}</span>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "span#": true
      }
    },
    "d148c4a0-4b50-3f52-8148-2ebcdd98f4e4": {
      "content": "try ${1:TARGET}\nwith ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "try..with",
      "matches": {
        "try": true
      }
    },
    "d14b8f9e-0aac-3043-94ba-67759c77136b": {
      "content": "margin: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true,
        "margin": true
      }
    },
    "d14d448a-f4e7-333b-9ef8-735d690b43e2": {
      "content": "$('<${1}/>'${2:, {}})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "d15155a8-9b5c-337a-86d5-533146ab43c2": {
      "content": "border-top-left-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtlrz": true
      }
    },
    "d154f2d9-5e8f-3668-95b0-042747259288": {
      "content": "if (${1:condition}) {\n\t$2\n} else {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "if else statement",
      "matches": {
        "ife": true
      }
    },
    "d157dae8-7acb-3307-893c-38d245de9650": {
      "content": "$this->redirect(array('${1:controller}/${0:action}'));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yre": true
      }
    },
    "d158fd58-e563-3672-98bc-cd68691112a4": {
      "content": "| floor",
      "doc": "Math filter: floor",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter floor",
      "matches": {
        "floor": true
      }
    },
    "d15c6026-a6a6-3a2b-bde7-fc283ceb9028": {
      "content": "${1:FIELDNAME} = models.USStateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "USStateField",
      "matches": {
        "musstate": true
      }
    },
    "d15e326f-72c9-3394-9999-faddd3fad5f4": {
      "content": "${1:fn} := func() {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fn := func() { ... }",
      "matches": {
        "anon": true
      }
    },
    "d15ec59e-7fdb-38c8-94c5-08b045645ade": {
      "content": "justify-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      }
    },
    "d15f7f3f-5bbe-3bb4-9c6b-db5607388fef": {
      "content": "respond_to do |wants|\n\twants.${1:html}${2: { $0 }}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "respond_to",
      "matches": {
        "rest": true
      }
    },
    "d1608519-7007-3cd0-8763-28f7141687e0": {
      "content": "class ${1:MODEL_NAME}DetailView(DetailView):\r\n    model = ${1:MODEL_NAME}\r\n    template_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "detailview",
      "matches": {
        "detailview": true
      }
    },
    "d161d7ed-6e92-321d-82d5-e6e2e6344201": {
      "content": "function lowest-algebraic(${1:numeric-identifier})$0",
      "doc": "lowest value that could possibly be stored in the specified numeric-identifier",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-lowest-algebraic",
      "matches": {
        "function lowest-algebraic": true
      }
    },
    "d16473e7-725b-3d0b-a611-bd0b98907cdf": {
      "content": "require '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "d1649a98-6804-3d18-ab4c-cadc63022e3a": {
      "content": "paddingBottom: ${1},",
      "doc": "paddingBottom",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingBottom",
      "matches": {
        "padding": true
      }
    },
    "d16590e0-f4f6-3bf0-be6f-f52b316940c8": {
      "content": "*${1}*${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "*bold*",
      "matches": {
        "bold": true
      }
    },
    "d165d1ee-6a64-376e-8a4a-22b42610e50a": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "d16a2766-a2b8-39cd-8d76-86fe62d5427c": {
      "content": "${1:ptr} = (${2:type}*) calloc(${3:size}, sizeof($2));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clc": true
      }
    },
    "d16c7af7-81d2-3e69-9dae-55db98054d24": {
      "content": "background-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      }
    },
    "d1736cec-aa4e-3ebc-bd3b-783a077091f4": {
      "content": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${5}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "d1737a59-a808-3dcf-b729-c6a46e13f8fe": {
      "content": "struct ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      }
    },
    "d177d1d1-1b77-3d3b-ba1f-36bac4de2987": {
      "content": "curveTightness(${0:squishy});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveTightness": true
      }
    },
    "d17843c4-c4a5-3c4d-b6fe-059d20c7a92e": {
      "content": "<?php foreach ($${1:variable} as $${2:key} => $${3:value}): ?>\n\t${0:<!-- html... -->}\n<?php endforeach; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "<?php foreach ($var as $key => $value): ?>  ... <?php endforeach; ?>",
      "matches": {
        "foreachkil": true
      }
    },
    "d179c1f9-d908-3247-b556-e70fb72570c0": {
      "content": "urlizetrunc:$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "urlizetrunc": true
      }
    },
    "d1885311-6c27-3254-be29-f85c65bdaeae": {
      "content": "if\n\t${1:guard} ->\n\t\t${0:body}\nend",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "d188af81-87fa-3f70-87b8-8dc311581f66": {
      "content": "struct ${1:struct} <: ${2:type}\n\t$0\nend",
      "doc": "Code snippet for struct block.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "d1896259-1262-331a-bdfb-6c358d343ba5": {
      "content": "f = io.open(${1:\"${2:filename}\"}, \"${3:r}\")\n\nwhile true do\n\tline = f:read()\n\tif line == nil then break end\n\n\t${0:-- code}\nend",
      "doc": "read file line by line",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "forline",
      "matches": {
        "forline": true
      }
    },
    "d19100fd-890c-39da-bdc1-3603afbc0f66": {
      "content": "createBundleRenderer",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "createBundleRenderer",
      "matches": {
        "createBundleRenderer": true
      }
    },
    "d19951a7-7835-3a1d-ac54-bb5bb66340e5": {
      "content": "jasmine.any($1)",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "any (coffee)",
      "matches": {
        "any": true
      }
    },
    "d1a26b13-f520-33de-a77c-02f94464d10e": {
      "content": "${1:obj}.one('${2:event name}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "one": true
      }
    },
    "d1aed594-b70c-3d73-bb03-b989c35dff64": {
      "content": "text-decoration: underline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:u": true
      }
    },
    "d1b43fcb-41ed-36a3-bdad-d6e89eabdabc": {
      "content": "- (NSString${1: *)}${1:#:thing};\n- (void)set${1}:(NSString${2: *})${2};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "istr": true
      }
    },
    "d1bb4991-561f-38bb-bf77-3a144fd92e7e": {
      "content": "<ol>\n\t<li>${1}</li>\n\tli+${0}\n</ol>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ol+": true
      }
    },
    "d1be8925-8ed7-358c-ad3e-de5bb5f4001f": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "else part of statement",
      "matches": {
        "el": true
      }
    },
    "d1bf55e9-0a42-3db5-8364-dc35929b8565": {
      "content": "import { Injectable } from '@angular/core';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:ServiceName}Service {\n\tconstructor() { }\n\t$0\n}",
      "doc": "Angular Service with Injectable ProvidedIn Root",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Service",
      "matches": {
        "a-service": true
      }
    },
    "d1c25373-00f7-33d9-9a3d-f72eb620bd78": {
      "content": "after cancel ${0:id or script}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "afc": true
      }
    },
    "d1c307cc-2d76-3f8e-9ba5-04668f435018": {
      "content": "${1:void} ${2:function_name}()\n{\n\t${3}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun0": true
      }
    },
    "d1c7ee75-a4cd-30ae-9099-791fc9e6a019": {
      "content": "const ${1:name} = ${2:value}",
      "doc": "Snippet for a constant",
      "filetype": "go",
      "grammar": "lsp",
      "label": "single constant",
      "matches": {
        "co": true
      }
    },
    "d1ca3b32-ec01-30c2-9284-b1724a32bd2c": {
      "content": "% for ${1:i} in ${2:iter}:\n\t${3:}\n% endfor",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "d1d7cb2e-f1ff-3982-b235-0ede50742b47": {
      "content": "page-break-before: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      }
    },
    "d1d8126b-9c9f-3875-824f-f52cea2460df": {
      "content": "setContext(${1:key}, ${2:context})",
      "doc": "svelte setContext",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-set-context",
      "matches": {
        "s-set-content": true
      }
    },
    "d1d864ea-d187-3289-a8ef-76e359cd7d34": {
      "content": "public enum ${1}\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum+": true
      }
    },
    "d1d88e97-0a0f-3137-b51a-05b4a6309846": {
      "content": "for (const ${1:prop} of ${2:object}) {\n\t${0:$1}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "for (const prop of object}) { ... }",
      "matches": {
        "foro": true
      }
    },
    "d1d918af-17bc-3e42-a6ac-263584515b71": {
      "content": "_.union(${arrays})",
      "doc": "_.union([2], [1, 2]);\n// => [2, 1]\n\nCreates an array of unique values, in order, from all given arrays using\n[`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\nfor equality comparisons.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-union",
      "matches": {
        "lodash union": true
      }
    },
    "d1de149e-f733-34f5-a1d6-6aa4f22dd664": {
      "content": "_.isLength(${value})",
      "doc": "_.isLength(3);\n// => true\n\n_.isLength(Number.MIN_VALUE);\n// => false\n\n_.isLength(Infinity);\n// => false\n\n_.isLength('3');\n// => false\n\nChecks if `value` is a valid array-like length.\n\n**Note:** This method is loosely based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-islength",
      "matches": {
        "lodash islength": true
      }
    },
    "d1df9af2-4fd7-3cc3-b17c-d54580cea4da": {
      "content": "align-self: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "d1f1bb82-37c3-33f9-82d4-441154486942": {
      "content": "throws ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ths": true
      }
    },
    "d1f3c212-e849-3811-8827-05a4e591f703": {
      "content": "do {\n\t${0:${VISUAL}}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "d1f6524e-d884-3260-ad51-7b98063501e2": {
      "content": "@try {\n\t${1:statements}\n}\n@catch (NSException * e) {\n\t${2:handler}\n}\n@finally {\n\t${0:statements}\n}",
      "doc": "Create a try-catch-finally block",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "try-catch-finally",
      "matches": {
        "@try": true
      }
    },
    "d1f8db12-b280-376d-9b0f-3518a22d1408": {
      "content": "align-items flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      }
    },
    "d1ffda2c-7ad2-3473-a089-b68d0556d433": {
      "content": ".. important::\n\t${0:this is importatnt}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp:": true
      }
    },
    "d20070b2-4656-3dec-bc75-aa53b05f8cc8": {
      "content": "background-clip: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      }
    },
    "d2097bf2-827c-3a39-8e73-66a5d4c8e064": {
      "content": "text-wrap: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      }
    },
    "d20d1e05-5685-3cc7-8c4c-52636719f56d": {
      "content": "_.delay(${func}, ${wait}, ${args})",
      "doc": "_.delay(function(text) {\n  console.log(text);\n}, 1000, 'later');\n// => Logs 'later' after one second.\n\nInvokes `func` after `wait` milliseconds. Any additional arguments are\nprovided to `func` when it's invoked.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-delay",
      "matches": {
        "lodash delay": true
      }
    },
    "d20ee7bc-a78e-3735-8b7c-ce6e94fb0efb": {
      "content": "BACKUP DATABASE ${1:dbName}\n\tTO DISK ${2:filepath}\n\tWITH ${3:DIFERENTIAL};",
      "doc": "Diferencial backup database",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "bakupdw",
      "matches": {
        "bakupdw": true
      }
    },
    "d21285e7-df16-362e-bbb6-fd1fdc35d600": {
      "content": "\\${${1:name}}=    Catenate    SEPARATOR=${2:---}    ${3:Hello}    ${4:world}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Catenate",
      "matches": {
        "cat": true
      }
    },
    "d214aa85-3ff0-38a4-99f4-1df3c5520c84": {
      "content": "(${1:fonction} ∘ ${2:fonction})(${3:args})",
      "doc": "Code snippet for function composition.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "function composition",
      "matches": {
        "composition": true,
        "fcomp": true
      }
    },
    "d2173009-18eb-3e10-80c2-eb2d99b0730f": {
      "content": "${1:#:type} ${2:#:var}${3};",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "d21f832d-9383-36fc-93e6-5d0cd435c6b9": {
      "content": "<img src=\"$1\" alt=\"$2\">$3",
      "doc": "HTML - Defines an image",
      "filetype": "html",
      "grammar": "lsp",
      "label": "img",
      "matches": {
        "img": true
      }
    },
    "d220c49f-3788-3c51-a05b-1a662cc13f53": {
      "content": "@error \"${1}\" ${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@e": true
      }
    },
    "d22a9f4e-859c-3fac-8879-a7c80d9da006": {
      "content": "mediump",
      "doc": "The qualifier mediump is used to specify a precision between the highest and lowest available precision for a variable. The variable has to be an integer or a floating point scalar or a vector or matrix based on these types. The precision qualifier precedes the type in the variable declaration.\nIn the vertex shader the use of a precision qualifier is optional. If no qualifier is given all variables are of highest precision. In the fragment shader a precision qualifier has to be used when declaring a variable unless a default precision has been defined for the specific type.\n\nvarying mediump vec2 textureCoordinate;\n\nThe actual range corresponding to a precision qualifier is dependent on the specific OpenGL ES implementation. Using a lower precision might have a positive effect on performance (frame rates) and power efficiency but might also cause a loss in rendering quality. The appropriate trade-off can only be determined by testing different precision configurations.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mediump",
      "matches": {
        "mediump": true
      }
    },
    "d22b4039-8838-38e3-9aa1-bae3b2798180": {
      "content": "{if ${1:expression}}\n\t$2\n{else}\n\t$0\n{/if}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "if .. else (ife)",
      "matches": {
        "ife": true
      }
    },
    "d22efea0-cd63-395d-933c-d8d56c5464d8": {
      "content": "for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "for ($i = 0; $i < $count; $i++) { ... }",
      "matches": {
        "for": true
      }
    },
    "d23a35bd-49b3-3db4-a43a-8382fa103f8f": {
      "content": "FUNCTION SECONDS-PAST-MIDNIGHT()$0",
      "doc": "current time of day expressed as the total number of elapsed seconds since midnight",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-SECONDS-PAST-MIDNIGHT",
      "matches": {
        "FUNCTION SECONDS-PAST-MIDNIGHT": true
      }
    },
    "d23c78f7-83f7-3127-9c29-c19855a8dad6": {
      "content": "IO.puts \"${0}\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "IO.puts",
      "matches": {
        "put": true
      }
    },
    "d2403b8b-9c76-3ac3-815c-58c51d93f185": {
      "content": "each_key { |${1:key}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eak": true
      }
    },
    "d2477490-bb40-32a3-972d-61d5499ec61a": {
      "content": "{% filter ${1} %}\n\t${0}\n{% endfilter %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "d256d96e-0171-3f9c-a911-017b6b793bb7": {
      "content": "{% for $1 in $2 %}\n\t$3\n{% endfor %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "d2637b17-4407-3613-b01b-aee8562052ea": {
      "content": "\\textit{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textit": true,
        "textit \\textit{": true
      }
    },
    "d265ec4e-36bd-3403-81d3-d5eff9bc025c": {
      "content": "angular.module '${1:moduleName}', [${2:moduleDependencies}]\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngm": true
      }
    },
    "d26a622d-681f-3739-9db0-edb2e206312a": {
      "content": "{ path: '**', component: ${1:PathNotFoundComponent} },$0",
      "doc": "Angular 404 route path",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular 404 Route Path",
      "matches": {
        "a-route-path-404": true
      }
    },
    "d270c5d0-83f6-32af-8d28-205a48535f89": {
      "content": "stringformat:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stringformat": true
      }
    },
    "d27e5d4c-9011-3d46-af30-1f890dfd3489": {
      "content": "- (${1:#:id})${2:#:thing}\n{\n\treturn ${2};\n}\n\n- (void)set${2}:(${1})aValue\n{\n\t${0}${1}old${2} = ${2};\n\t${2} = [aValue retain];\n\t[old${2} release];\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "obj": true
      }
    },
    "d2803d19-68b1-39bb-a051-091a1f951bc2": {
      "content": "\\begin{equation*}\n\t${0:${VISUAL}}\n\\end{equation*}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Equation without a number",
      "matches": {
        "eqnn": true
      }
    },
    "d2817c53-25c1-3044-8182-885bba5a9bc9": {
      "content": "'use strict'",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "use strict",
      "matches": {
        "uss": true
      }
    },
    "d2829dbf-bca9-3b70-8bec-28da2a283043": {
      "content": "{% elif %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "d290b3c6-039a-3ba5-832c-fbaf39d8ddee": {
      "content": "integer${1:(${2:kind})}${3:, ${4:attributes}} :: ${5:name}",
      "doc": "Integer",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "int",
      "matches": {
        "int": true
      }
    },
    "d290b9a2-8d55-34b0-b929-9bb4fc5cf95b": {
      "content": "align-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:c": true
      }
    },
    "d2930865-bed6-36d4-9dce-8453f8112ce0": {
      "content": "ENDFILE {\n\t${0}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "ENDFILE { ... }",
      "matches": {
        "endf": true
      }
    },
    "d2964828-00e3-3963-b391-0c94a4c462a5": {
      "content": "text-emphasis: dot;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      }
    },
    "d2971055-ae6c-34ae-8e51-53007ffd2404": {
      "content": "tear_down(function()\n  ${0:TARGET}\nend)",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "tear_down(func)",
      "matches": {
        "tear_down": true
      }
    },
    "d29ffcb1-8d01-3b41-bae6-0f797a0afb4a": {
      "content": "outline ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o+": true
      }
    },
    "d2a3d259-47fb-31d2-801f-06e32585fb81": {
      "content": "CANCEL \"$1\"\n$0",
      "doc": "CANCEL literal",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "CANCEL",
      "matches": {
        "CANCEL": true
      }
    },
    "d2a4e831-e744-39a2-be44-e0f13ec0091b": {
      "content": "class ${1:MODELNAME}Form(forms.ModelForm):\n\t\"\"\"${2:Form definition for $1}.\"\"\"\n\n\tclass Meta:\n\t\t\"\"\"Meta definition for ${1}form.\"\"\"\n\n\t\tmodel = $1\n\t\tfields = ('$3',)",
      "doc": "ModelForm",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ModelForm",
      "matches": {
        "ModelForm": true
      }
    },
    "d2a95fa6-1571-3d59-9348-4a5a5821cecf": {
      "content": "<%= for ${1:item} <- ${2:items} ${3:@conn} do %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "d2af5d9d-7f7b-3d17-9b0a-92b5a952ba01": {
      "content": "text-height font-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:f": true
      }
    },
    "d2b2525d-a581-36db-9293-87446be67ae6": {
      "content": "###### ${0}",
      "doc": "Add header level 6",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 6",
      "matches": {
        "h6": true
      }
    },
    "d2bd0389-1042-313a-82ba-2fe41f1cb0b2": {
      "content": "PropTypes.exact({\n  $0\n})",
      "doc": "An object with warnings on extra properties",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeExact",
      "matches": {
        "ptex": true
      }
    },
    "d2bd142a-6b67-3a62-959a-0e995275d611": {
      "content": "\\${2:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:#optional}",
      "matches": {
        "2#": true
      }
    },
    "d2c4e4d7-295e-3ec1-b150-f9858bd8c089": {
      "content": "Yii::app()->clientScript->registerScriptFile('${1:scriptUrl}', CClientScript::POS_${0:END});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregsf": true
      }
    },
    "d2c62730-ca59-3913-bc23-eb2f5a4b1078": {
      "content": "{% comment %}\n  $1\n{% endcomment %}",
      "doc": "Comment tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "comment",
      "matches": {
        "comment": true
      }
    },
    "d2cb321d-f2a7-3ac6-8163-4cf6f5cdd5a7": {
      "content": "border-top-right-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtri:n": true
      }
    },
    "d2ce11cb-7eee-3798-b652-e03e526a5925": {
      "content": "console.warn(${1:object});",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolewarn",
      "matches": {
        "base console warn": true
      }
    },
    "d2cf00c1-1655-356b-af61-2cdd2b3e25be": {
      "content": "IO.inspect($1, label: \"$0\")",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "IO.inspect with label",
      "matches": {
        "insl": true
      }
    },
    "d2df159f-1e31-3623-a842-db2951326e05": {
      "content": "${1:obj}.unbind('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unbind": true
      }
    },
    "d2dfd875-6b6b-3241-a309-0edbbcd44cfa": {
      "content": "border-bottom-right-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbri:c": true
      }
    },
    "d2e0bda3-6454-3876-b506-c572e946b49e": {
      "content": "marginVertical: '${1}',",
      "doc": "marginVertical",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginVertical",
      "matches": {
        "mar": true
      }
    },
    "d2e529d2-30b0-3f52-92bc-07fca0d1b729": {
      "content": "{% include \"${1}\" %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig include",
      "matches": {
        "include": true
      }
    },
    "d2e563bb-bce7-3d79-bbd0-3606e2bb81ae": {
      "content": "#lang racket",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#r": true
      }
    },
    "d2eaffdc-9d0e-3aca-8a07-05327025213d": {
      "content": "<script>\nexport default {\n\t$0\n}\n</script>",
      "doc": "script element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "script",
      "matches": {
        "script": true
      }
    },
    "d2ef1b04-bdbc-3d57-8495-b3378b757cb7": {
      "content": "\\\\ddot{{$1}} {$0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "ddot",
      "matches": {
        "ddot": true
      }
    },
    "d2f4a1be-6f00-3552-a90e-323a9c313660": {
      "content": "assert_no_difference '${1:Model}.${2:count}' do\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asnd": true
      }
    },
    "d2f6ee54-aa8d-32c9-af90-11eb477d1f62": {
      "content": "export const query = graphql`${1:query}`;",
      "doc": "Gatsby uses the concept of a page query, which is a query for a specific page in a site.Note that you can only have one page query per file.",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-export-query",
      "matches": {
        "gatsby export query": true
      }
    },
    "d2f74e4a-f4c6-3409-b555-84ddbde0decd": {
      "content": "::after",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      }
    },
    "d2fd5cae-56d4-3492-8458-57550d6700f6": {
      "content": "{% assign ${1:variable} = ${0:value} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "assign": true
      }
    },
    "d2fffabe-6705-34b6-afee-1d00cd4c4f8e": {
      "content": "-define(${1:def_name}, ${2:def_value}).",
      "doc": "define",
      "filetype": "erlang",
      "grammar": "lsp",
      "label": "define",
      "matches": {
        "def": true
      }
    },
    "d304e302-1dbf-3dc2-ad6c-845ccfd4635d": {
      "content": "unless (${1}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "d3097450-e7c7-3332-8616-8484471c9640": {
      "content": "::part(${1})\n\t${2:${VISUAL}}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "{",
      "matches": {
        "part": true
      }
    },
    "d30c88b5-daa4-3768-9f48-0d49bc148d79": {
      "content": "// @flow\nimport * as React from 'react';\ntype Props = {\n  $0\n};\nexport function ${1:${TM_FILENAME_BASE}}(props: Props) {\n  return (\n    <div>\n      \n    </div>\n  );\n};",
      "doc": "Creates a stateless React component as a named function with FlowTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowStatelessFunction",
      "matches": {
        "fsf": true
      }
    },
    "d3123595-3e7c-3aab-b2dd-d61030d80455": {
      "content": "switch ${1:object}\n\twhen ${2:value}\n\t\t${3:# body...}\n\telse\n\t\t$0",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Switch",
      "matches": {
        "swi": true
      }
    },
    "d3141c0c-4c45-342c-b490-5a0d0d7e9e7a": {
      "content": "forces\n{\n\ttype\t\t\t\tforces;\n\tfunctionObjectLibs\t(\"libforces.so\");\n\tenabled\t\t\t\ttrue;\n\toutputControl\t\t${1:timeStep};\n\toutputInterval\t\t${2:1};\n\tpatches\t\t\t\t(${3});\n\tlog\t\t\t\t\t${4:true};\n\tCofR\t\t\t\t(${0:0 0 0});\n}",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forces": true
      }
    },
    "d314c4c7-bf8c-33ba-9eec-613d49438c97": {
      "content": "elsif ${1} then\n\t${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "d318cd20-2e39-3222-ab26-d033a1742100": {
      "content": "<tfoot>\n\t$1\n</tfoot>",
      "doc": "HTML - Defines a table footer",
      "filetype": "html",
      "grammar": "lsp",
      "label": "tfoot",
      "matches": {
        "tfoot": true
      }
    },
    "d31f49db-70d7-3c79-9db0-6d615481efe3": {
      "content": "form_close();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_close": true
      }
    },
    "d32664e0-28c0-3c79-b25c-a608294ac3ff": {
      "content": "#if ${1:DEBUG}\n${VISUAL}$0\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "#if #endif",
      "matches": {
        "#if": true
      }
    },
    "d326852c-af68-3329-b0a3-b41e3813355b": {
      "content": "list-style-type: ${1|disc,circle,square,decimal,lower-roman,upper-roman,lower-alpha,upper-alpha,none,armenian,cjk-ideographic,georgian,lower-greek,hebrew,hiragana,hiragana-iroha,katakana,katakana-iroha,lower-latin,upper-latin|};",
      "doc": "initial value: disc",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style-type",
      "matches": {
        "list": true
      }
    },
    "d3289bc2-3008-30a2-90dc-75a322b5f135": {
      "content": "it \"${1}\" $\n\t$0",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      }
    },
    "d3361531-2743-318d-ad3f-d27f97aa2486": {
      "content": "import Head from 'next/head'",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-import-head",
      "matches": {
        "next import head": true
      }
    },
    "d33f314e-1b4b-30dc-b321-c077841fcb90": {
      "content": "$${1:observer} = $this->prophesize(${2:SomeClass}::class);",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$observer = $this->prophesize(SomeClass::class);",
      "matches": {
        "proph": true
      }
    },
    "d33fa03e-e2fb-37e0-97a8-d47588e9c921": {
      "content": "if ${1} {\n\t${2}\n}\nelse {\n\t${3}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "d340af23-5117-3b72-ab3a-0b1bae26972a": {
      "content": "task ${1:name}(${2});\n\t${0}\nendtask: $1",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "task": true
      }
    },
    "d3437f05-20b6-35f3-a46e-bda9c22102c5": {
      "content": "{%- capture ${1:variable} -%}$2{%- endcapture -%}",
      "doc": "Variable tag: capture, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag capture, whitespaced",
      "matches": {
        "capture-": true
      }
    },
    "d34588fe-ec67-35ca-b0e6-e20e11a752b0": {
      "content": "<kbd>$1</kbd>$2",
      "doc": "HTML - Defines keyboard text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "kbd",
      "matches": {
        "kbd": true
      }
    },
    "d3491b7c-f0e8-3432-956c-e33154d4e2ca": {
      "content": "fopen(\"${1:PATH}\", \"${2:MODE}\");\n${0:TARGET}\nfclose(${3:FD});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fopen(\"...\", \"...\");",
      "matches": {
        "fopen": true
      }
    },
    "d34d3ed6-153c-37f2-85bc-4dcacf737b99": {
      "content": "write(unit=${1:iounit}, fmt=*) ${0:variables}",
      "doc": "Quick Write",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "wr",
      "matches": {
        "wr": true
      }
    },
    "d353c9f3-fbcc-361d-bbad-6214b9f15abc": {
      "content": "${1:obj}.append('${2:Some text <b>and bold!</b>}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      }
    },
    "d35db5c4-c079-325b-bbd0-90ef0a8dd06f": {
      "content": "varying",
      "doc": "The qualifier varying is used to declare variables that are shared between the vertex shader and the fragment shader.\nVarying are used for information that is calculated in the vertex shader and should be handed over to the fragment shader. Both shaders have to declare the varying and the declarations must be identical. The vertex shader initializes the varying for each vertex. After that the per vertex data of the varying is interpolated during rasterization before being handed over to the fragment shader.\nThe varying qualifier can only be used with floating point scalar, floating point vectors and (floating point) matrices as well as arrays containing these types.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "varying",
      "matches": {
        "varying": true
      }
    },
    "d3641200-c9b7-36e0-b5a6-565a934b3955": {
      "content": "<input type=\"week\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:week": true
      }
    },
    "d3681df2-eb7a-324d-85de-af5a143408e1": {
      "content": "place-content: space-around;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      }
    },
    "d3703982-b0c0-3f61-b4bf-39687ab81753": {
      "content": "\"\"\"${1:Description}\n\n@param ${2:param}: ${3: Description}\n@type  $2: ${4: Type}\n\n@return: ${5: Description}\n@rtype : ${6: Type}\n\n@raise e: ${0: Description}\n\"\"\"",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epydoc": true
      }
    },
    "d3720d91-72e1-3deb-8cea-5ff03132e0b5": {
      "content": "integer ::",
      "doc": "Quick Integer",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "i",
      "matches": {
        "i": true
      }
    },
    "d373c895-d18d-3774-b349-a5ada7459306": {
      "content": "echo '<pre>' . var_export(${1}, 1) . '</pre>';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "Dumb debug helper in HTML",
      "matches": {
        "ve": true
      }
    },
    "d3749105-12e6-3de7-a163-626e93619db8": {
      "content": "def ${1:name}(${2:arg})(${3:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "crdef": true
      }
    },
    "d3771a8d-288c-342e-8a68-ec60cbe52530": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\nexport default {\n\tsetup () {\n\t\t${0}\n\n\t\treturn {}\n\t}\n}\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>",
      "doc": "Base for Vue File Composition API with SCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component Composition API",
      "matches": {
        "vbase-3": true
      }
    },
    "d378d704-489a-38a4-a0e3-1bb113c611f3": {
      "content": "min-height: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mih": true,
        "min-height": true
      }
    },
    "d37bddea-1743-3060-baff-e12fbd42e146": {
      "content": "${fn:trim(${0:string})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trim": true
      }
    },
    "d3803274-0798-3fdf-ae3d-b6475f163ef0": {
      "content": "===========================\n${1:#:content_name}\n===========================\n\n.. contents:: contents_name\n\ntitle1\n====================================\n\nsubtitle1\n-----------------------------------\n\nsubtitle2\n-----------------------------------\n\nsubtitle3\n-----------------------------------\n\ntitle2\n====================================\n\nsubtitle1\n-----------------------------------\n\nsubtitle2\n-----------------------------------\n\nsubtitle3\n-----------------------------------\n\ntitle3\n====================================\n\nsubtitle1\n-----------------------------------\n\nsubtitle2\n-----------------------------------\n\nsubtitle3\n-----------------------------------",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "quickstart": true
      }
    },
    "d3853776-29ad-3d83-b4fe-17694862e486": {
      "content": "<%= render file: \"${1:file}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rf": true
      }
    },
    "d38fc100-0037-300f-baee-6b0c4c7c815f": {
      "content": "border-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds": true
      }
    },
    "d39871cd-82df-3b55-a6c4-d705452daf21": {
      "content": "include_once '${1:#:file}';${0}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inco": true
      }
    },
    "d39a40d6-943c-34f2-950c-eb88123926e1": {
      "content": "@spec ${1:name}(${2:args}) :: ${3:no_return}\ndef $1{4:args} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "def + spec",
      "matches": {
        "defs": true
      }
    },
    "d3a0c179-28c6-3fae-ac8f-5f06f33346ef": {
      "content": "@synthesize ${1:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Synthesize",
      "matches": {
        "syn": true
      }
    },
    "d3a10d7b-652e-3a59-b530-dc98b896be00": {
      "content": "fn ${1:function_name}(${2})${3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Function definition",
      "matches": {
        "fn": true
      }
    },
    "d3ad20a6-32b2-3c60-9369-01a6d712f3e9": {
      "content": "Yii::app()->clientScript->registerCss('${1:id}', '${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yregc": true
      }
    },
    "d3af78e2-b7df-3716-b84a-584d6b969d1d": {
      "content": "object.constantCase()",
      "doc": "object.constantCase(): Schema\n\nTransforms all object keys to CONSTANT_CASE.Extending Schema TypesThe simplest way to extend an existing type is just to cache a configured schema and use that through your application.let yup = require(\"yup\");\nlet parseFormats = [\"MMM dd, yyy\"];\nlet invalidDate = new Date(\"\");\n\nmodule.exports = yup.date().transform(function(value, originalValue) {\n  if (this.isType(value)) return value;\n  // the default coercion transform failed so lets try it with Moment instead\n  value = Moment(originalValue, parseFormats);\n  return value.isValid() ? value.toDate() : invalidDate;\n});\nAlternatively, each schema is a normal JavaScript constructor function that you can mutate or delegate to\nusing the normal patterns. Generally you should not inherit from mixed unless you know what you are doing,\nbetter to think of it as an abstract class. The other types are fair game though.You should keep in mind some basic guidelines when extending schemas\nnever mutate an existing schema, always clone() and then mutate the new one before returning it.\nBuilt-in methods like test and transform take care of this for you, so you can safely use them (see below) without worrying\ntransforms should never mutate the value passed in, and should return an invalid object when one exists\n(NaN, InvalidDate, etc) instead of null for bad values.\nby the time validations run the value is guaranteed to be the correct type, however if nullable is\nset then null is a valid value for that type, so don't assume that a property or method exists on the value.\nAdjust core Typeslet invalidDate = new Date(\"\");\n\nfunction parseDateFromFormats(formats, parseStrict) {\n  return this.transform(function(value, originalValue) {\n    if (this.isType(value)) return value;\n\n    value = Moment(originalValue, formats, parseStrict);\n\n    return value.isValid() ? value.toDate() : invalidDate;\n  });\n}\n\n// `addMethod` doesn't do anything special it's\n// equivalent to: yup.date.prototype.format = parseDateFromFormats\nyup.addMethod(yup.date, \"format\", parseDateFromFormats);\nCreating new TypesYup schema use the common constructor pattern for modeling inheritance. You can use any\nutility or pattern that works with that pattern. The below demonstrates using the es6 class\nsyntax since its less verbose, but you absolutely aren't required to use it.let DateSchema = yup.date;\nlet invalidDate = new Date(\"\"); // our failed to coerce value\n\nclass MomentDateSchemaType extends DateSchema {\n  constructor() {\n    super();\n    this._validFormats = [];\n\n    this.withMutation(() => {\n      this.transform(function(value, originalvalue) {\n        if (this.isType(value))\n          // we have a valid value\n          return value;\n        return Moment(originalValue, this._validFormats, true);\n      });\n    });\n  }\n\n  _typeCheck(value) {\n    return (\n      super._typeCheck(value) || (moment.isMoment(value) && value.isValid())\n    );\n  }\n\n  format(formats) {\n    if (!formats) throw new Error(\"must enter a valid format\");\n    let next = this.clone();\n    next._validFormats = {}.concat(formats);\n  }\n}\n\nlet schema = new MomentDateSchemaType();\n\nschema.format(\"YYYY-MM-DD\").cast(\"It is 2012-05-25\"); // => Fri May 25 2012 00:00:00 GMT-0400 (Eastern Daylight Time)\nTypeScript SupportIf you are using TypeScript installing the Yup typings is recommendednpm install -D @types/yup\nYou can now infer a TypeScript type alias using the exported InferType. Given the following Yup schema:import * as yup from 'yup';\n\nconst personSchema = yup.object({\n  firstName: yup\n    .string(),\n  nickName: yup\n    .string()\n    .nullable(),\n  gender: yup\n    .mixed<'male' | 'female' | 'other'>()\n    .oneOf(['male', 'female', 'other']),\n  email: yup\n    .string()\n    .nullable()\n    .notRequired()\n    .email(),\n  birthDate: yup\n    .date()\n    .nullable()\n    .notRequired()\n    .min(new Date(1900, 0, 1)),\n});\nYou can derive the TypeScript type as follows:type Person = yup.InferType<typeof personSchema>;\nWhich is equivalent to the following TypeScript type alias:type Person = {\n  firstName: string;\n  nickName: string | null;\n  gender: \"male\" | \"female\" | \"other\";\n  email?: string | null | undefined;\n  birthDate?: Date | null | undefined;\n}\nMaking the following objects valid both for TypeScript and Yup validation:const minimalPerson: Person = {\n    firstName: \"Matt\",\n    nickName: null,\n    gender: \"male\"\n};\n\nconst fullPerson: Person = {\n    firstName: \"Matt\",\n    nickName: \"The Hammer\",\n    gender: \"male\",\n    email: \"matt@the-hammer.com\",\n    birthDate: new Date(1976, 9, 5)\n};",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-constant-case",
      "matches": {
        "yup object constantcase": true
      }
    },
    "d3b37cb3-cd9a-3e1e-b937-7d8b88716cb2": {
      "content": "import { BrowserRouter as Router } from 'react-router-dom'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importBrowserRouter",
      "matches": {
        "imbr": true
      }
    },
    "d3b49cca-709a-3415-94f7-f18476865f39": {
      "content": "private int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi-": true
      }
    },
    "d3bb83be-5bb0-365d-bce6-ee9920db4536": {
      "content": "import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanActivate {\n\tconstructor() { }\n\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanActivate guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canactivate-guard",
      "matches": {
        "a-guard-can-activate": true,
        "angular can activate guard": true
      }
    },
    "d3c2c2fd-f428-38ad-9ca8-52ad94617184": {
      "content": "[#${2:Id}]\n== ${1:Title}\n\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "== heading on level 2 with anchor",
      "matches": {
        "heading-anchor": true,
        "section-anchor": true
      }
    },
    "d3c683cf-0087-33a2-9787-b2e6cb2bc0b5": {
      "content": "{% namespace \"${1}\" %}\n\t${0}\n{% endnamespace %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig namespace",
      "matches": {
        "namespace": true
      }
    },
    "d3c8e96f-cc4a-3212-bea1-4b5eed751337": {
      "content": "[${1:#:link}](https://${2:#:url})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](url)",
      "matches": {
        "linkurl": true
      }
    },
    "d3c95925-6a9b-3647-88e0-3c7feb917898": {
      "content": "{@html ${1:expression}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-html",
      "matches": {
        "svelte expression html": true,
        "svexphtml": true
      }
    },
    "d3cedda0-a253-3227-8d7e-596d373f2348": {
      "content": "grid-auto-columns ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      }
    },
    "d3cf66c0-b042-30f4-8dae-f045767ce3e3": {
      "content": "it { should ensure_inclusion_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isei": true
      }
    },
    "d3d0442e-d2bb-30fd-983a-4963238db5c7": {
      "content": "else if (${1}) {\n\t${2:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ei": true
      }
    },
    "d3d63f12-2187-39e8-b5a3-db75b400bd56": {
      "content": "<${1:div} :class=\"[${2:classNameA}, ${3:classNameB}]\"></${1:div}>",
      "doc": "vue class binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Class Binding Object",
      "matches": {
        "vclass-obj": true
      }
    },
    "d3db9e39-421e-3eb0-8474-759897b03a15": {
      "content": "text-decoration: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td:n": true
      }
    },
    "d3ea4d79-61e2-3748-af57-f1183c0273d3": {
      "content": "default:\n    ${0:TARGET}\n    break;",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "d3ecacee-d0df-38c4-9ed0-dc959dade282": {
      "content": "^ {$1}$0",
      "doc": "Superscript notation, as well as the power notation.",
      "filetype": "vscode-latex-snippets",
      "grammar": "lsp",
      "label": "Up",
      "matches": {
        "\\to": true,
        "to": true
      }
    },
    "d3ed75cf-3ad0-3788-ae66-b3d6a745b6b9": {
      "content": "text-align: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-align: left",
      "matches": {
        "tal": true
      }
    },
    "d3f44a08-832e-3f4a-b0ff-d08f40b4a46f": {
      "content": "function ${1:name}(${2:type} ${3:name}) returns (${4:type} ${5:name}) {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "function return declaration",
      "matches": {
        "funcr": true
      }
    },
    "d3f92d96-e38f-3360-b3ae-52016e1e74c1": {
      "content": "scrollBehavior (to, from, savedPosition) {\n\t${1:// ...}\n}",
      "doc": "scrollBehavior (to, from, savedPosition) { }",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "scrollBehavior",
      "matches": {
        "scrollBehavior": true
      }
    },
    "d3fdbe9c-7734-3bf3-8645-8d77f1780b8f": {
      "content": "must_be_empty",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbe": true
      }
    },
    "d400f274-3114-3217-af7a-8d9769ec48e1": {
      "content": "labels:\n{{- if .Values.$1.service.labels }}\n{{ toYaml .Values.$1.service.labels | indent 4 }}\n{{- end }}\n\tapp: {{ template \"$2.name\" . }}\n\tchart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\tcomponent: \"{{ .Values.$1.name }}\"\n\theritage: {{ .Release.Service }}\n\trelease: {{ .Release.Name }}\n  name: {{ template \"${2:chartName}.${1:value_key}.fullname\" . }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "labels_spec": true
      }
    },
    "d4152086-5502-3d28-9f9f-94791ddb3a24": {
      "content": "mat3($2, $3, $4)",
      "doc": "The data type mat3 is used for floating point matrices with three times three components in column major order. There are several ways to initialize a matrix:\n• Components are specified by providing a scalar value for each component (first example). The matrix is filled column by column.\n• Components are specified by providing one scalar value. This value is used for the components on the main diagonal (the second example is equivalent to the first).\n• Components are specified by providing a combination of vectors and scalars. The respective values are used to initialize the components column by column. The arguments of the constructor must have at least as many components as the matrix that is initialized.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mat3",
      "matches": {
        "mat3": true
      }
    },
    "d42a9b1d-5631-3300-9f56-a6db88efdefa": {
      "content": "<html xmlns=\"http://www.w3.org/1999/xhtml\">\n    ${1:TARGET}\n</html>",
      "doc": "",
      "filetype": "xhtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xhtml": true
      }
    },
    "d42ca8b1-c78b-3c56-818a-eb3daa7bfd82": {
      "content": "FUNCTION BOOLEAN-OF-INTEGER(${1:integer},${2:length})$0",
      "doc": "function boolean item of usage bit representing the binary value of integer; with the given length",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-BOOLEAN-OF-INTEGER",
      "matches": {
        "FUNCTION BOOLEAN-OF-INTEGER": true
      }
    },
    "d4333fae-2297-3afc-883a-084f3bedc377": {
      "content": "for all ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for all",
      "matches": {
        "fora": true
      }
    },
    "d4364311-0681-31f9-99d6-d7d5e1e26c1b": {
      "content": "$this->assertArrayHasKey(${1:$key}, ${2:$array});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertArrayHasKey($key, $array)",
      "matches": {
        "ashk": true
      }
    },
    "d4372906-14e8-392a-9360-1189aa9e7e33": {
      "content": "import 'package:flutter_test/flutter_test.dart';",
      "doc": "Import flutter_test package",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "flutter_test Package",
      "matches": {
        "importFT": true
      }
    },
    "d43da21b-788e-33dc-8d2c-91167583a735": {
      "content": "for ${2:k}, ${3:v} := range ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for k, v := range items { ... }",
      "matches": {
        "forr": true
      }
    },
    "d446e4c0-573e-3dd8-8024-9443f683ef20": {
      "content": "for (int ${2:i} = 0; $2 < ${1:Things}.length; $2${3:++}) {\n\t${0:$1[$2]}\n};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "d44cc225-fdd7-31a4-bcca-09c4cff653e8": {
      "content": "${1:outMatrix} <- matrix(data = ${2:dataVec}, nrow = ${3:nrow}, ncol = ${4:ncol}, byrow = ${5:byrow})",
      "doc": "Create a matrix from a vector",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Matrix",
      "matches": {
        "matrix": true
      }
    },
    "d44ef22f-7bef-3951-80ac-3a3ba1363392": {
      "content": "_.dropWhile(${array}, ${predicate})",
      "doc": "var users = [\n  { 'user': 'barney',  'active': false },\n  { 'user': 'fred',    'active': false },\n  { 'user': 'pebbles', 'active': true }\n];\n\n_.dropWhile(users, function(o) { return !o.active; });\n// => objects for ['pebbles']\n\n// The `_.matches` iteratee shorthand.\n_.dropWhile(users, { 'user': 'barney', 'active': false });\n// => objects for ['fred', 'pebbles']\n\n// The `_.matchesProperty` iteratee shorthand.\n_.dropWhile(users, ['active', false]);\n// => objects for ['pebbles']\n\n// The `_.property` iteratee shorthand.\n_.dropWhile(users, 'active');\n// => objects for ['barney', 'fred', 'pebbles']\n\nCreates a slice of `array` excluding elements dropped from the beginning.\nElements are dropped until `predicate` returns falsey. The predicate is\ninvoked with three arguments: (value, index, array).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-dropwhile",
      "matches": {
        "lodash dropwhile": true
      }
    },
    "d44f222f-8183-31fe-a7a4-8353768c9c20": {
      "content": "(\n\t${0}\n)",
      "doc": "",
      "filetype": "supercollider",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "d457a922-97e1-348a-8b69-1ddab822eb62": {
      "content": "const ${1:client} = new GraphQLClient(\n  ${2:url},\n  {\n    headers: {\n      ${3:key}: ${4:value}\n    },\n  }\n);",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-client",
      "matches": {
        "graphql-request client": true
      }
    },
    "d45d8efb-ed8f-3bf1-b875-41f47340adec": {
      "content": "zIndex: ${1},",
      "doc": "zIndex",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "zIndex",
      "matches": {
        "z": true
      }
    },
    "d45f3170-fa19-3719-b6bd-d2f049936719": {
      "content": "import React, { PureComponent } from 'react'\n\ntype Props = {}\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React pure component class with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactClassPureComponent",
      "matches": {
        "tsrpc": true
      }
    },
    "d4617439-2365-340c-940e-be41eb20fb43": {
      "content": "-module(${0:module}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "-module": true
      }
    },
    "d467d9f9-2b10-3655-808b-64b7dbc1a8e3": {
      "content": "type\t\tsymmetryPlane;",
      "doc": "",
      "filetype": "openfoam",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sym": true
      }
    },
    "d46f8f64-4c8a-30ed-acd2-f8b4e2f8e3d0": {
      "content": "${1:obj}.slideToggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stoggle": true
      }
    },
    "d4714e71-c44a-3ca2-b7a2-032d33ccb7ed": {
      "content": "marginTop: ${1},",
      "doc": "marginTop",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginTop",
      "matches": {
        "mar": true
      }
    },
    "d4753bef-3125-3f2e-970b-13a06614c079": {
      "content": "width ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true
      }
    },
    "d4759580-0619-30bf-b50d-a9445af18f19": {
      "content": "for ${1:item} in ${2:collection} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iter": true
      }
    },
    "d47d472e-7602-343a-8714-71696cbcde6c": {
      "content": "post {\n\tchanged {\n\t\t${1}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      }
    },
    "d47d8620-c78b-3543-a3e3-b68ce29f8c00": {
      "content": "data.frame(${1:}, header = TRUE)",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      }
    },
    "d4825f09-433c-3d47-bfc8-d9225d53ff21": {
      "content": "(for/last ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/last",
      "matches": {
        "forla": true
      }
    },
    "d48dd31d-f0bd-32e6-93db-ddeacab623d5": {
      "content": "try {\n    ${0:TARGET}\n} catch {\n    ${1}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch {}",
      "matches": {
        "try_catch_n": true,
        "try_cn": true
      }
    },
    "d496dbfa-261c-3489-8ef5-df23f19fa33a": {
      "content": "{% for block in ${1:entry.matrixFieldHandle}.all() %}\n\n\t{% if block.type == \"${2:blockHandle}\" %}\n\n\t\t{{ block.${3:fieldHandle} }}\n\n\t{% elseif block.type == \"${4:blockHandle}\" %}\n\n\t\t$0\n\t\n\t{% endif %}\n\n{% endfor %}",
      "doc": "matrixifelse",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "matrixifelse",
      "matches": {
        "matrixifelse": true
      }
    },
    "d4993245-1528-3584-879e-d74f7cc0dfc1": {
      "content": "beforeEnter(el) {\n\tconsole.log('beforeEnter');\n},\nenter(el, done) {\n\tconsole.log('enter');\n\tdone();\n},\nbeforeLeave(el) {\n\tconsole.log('beforeLeave');\n},\nleave(el, done) {\n\tconsole.log('leave');\n\tdone();\n},",
      "doc": "transition component js hooks",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Transition Methods with JavaScript Hooks",
      "matches": {
        "vanimhook-js": true
      }
    },
    "d49a095e-4b60-3533-bee0-abd52fffd725": {
      "content": "<router-link to=\"$1\">$2</router-link>$0",
      "doc": "<router-link to=''></router-link>. router-link element",
      "filetype": "html",
      "grammar": "lsp",
      "label": "routerLinkTo",
      "matches": {
        "routerLinkTo": true
      }
    },
    "d49a689d-3c21-31a3-be33-03ca7ff1c18f": {
      "content": "module ${1:(* Name *)} : sig\n\t${2:(* SIGNATURE *)}\nend = struct\n\t${3:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "Module with anonymous signature",
      "matches": {
        "module": true
      }
    },
    "d49c8f7a-18b6-3854-8ea6-9df07cd30bc5": {
      "content": "font-emphasize-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems": true
      }
    },
    "d49d4c5a-169e-3aa3-afc1-c1290247325a": {
      "content": "<%= for %{1:item} <- ${2:items} do %>\n  $0\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "d49e506b-9cea-368e-a349-fc639f0de7a6": {
      "content": "${1:s:V}.import('${2:#:module_name}')",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "s:V.import('...')",
      "matches": {
        "vital_import_without_let": true
      }
    },
    "d4a20d25-c948-32cc-af1e-3e97d0657a15": {
      "content": "require! ${1}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req!": true
      }
    },
    "d4a72e01-b4f2-3686-83ae-0450db3c3dac": {
      "content": "craft.app.request.getSegment(${1:2})\n$0",
      "doc": "request getSegment",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "getsegment",
      "matches": {
        "getsegment": true
      }
    },
    "d4a86c7d-5750-3773-9cbf-192f15816854": {
      "content": "$t('$1')",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trans": true
      }
    },
    "d4a93b81-1d4b-3768-a513-61b62f591530": {
      "content": "\\\\begin{itemize}\n\t\\\\item ${0}\n\\\\end{itemize}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "itemize environment",
      "matches": {
        "item": true
      }
    },
    "d4acff57-f9a2-3516-9f25-34eaf0bfabbb": {
      "content": "if [[ ${1:condition} ]]; then\n\t${0}\nfi",
      "doc": "An IF statement.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "d4b53b3c-e45a-3265-9e80-38e194d4d2d5": {
      "content": "_.spread(${func}, ${start})",
      "doc": "var say = _.spread(function(who, what) {\n  return who + ' says ' + what;\n});\n\nsay(['fred', 'hello']);\n// => 'fred says hello'\n\nvar numbers = Promise.all([\n  Promise.resolve(40),\n  Promise.resolve(36)\n]);\n\nnumbers.then(_.spread(function(x, y) {\n  return x + y;\n}));\n// => a Promise of 76\n\nCreates a function that invokes `func` with the `this` binding of the\ncreate function and an array of arguments much like\n[`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\n**Note:** This method is based on the\n[spread operator](https://mdn.io/spread_operator).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-spread",
      "matches": {
        "lodash spread": true
      }
    },
    "d4b78bbd-3ffe-3bb8-a748-2c2b710bf1ba": {
      "content": "craft.app.request.getParam(${1:\"Query String or Post Variable Name\"})\n$0",
      "doc": "request getParam",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "getparam",
      "matches": {
        "getparam": true
      }
    },
    "d4c18f7e-13ec-3883-a8bc-f06120f5ef94": {
      "content": "opacity: ${1},",
      "doc": "opacity",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "opacity",
      "matches": {
        "op": true
      }
    },
    "d4c3f6ca-295d-35fb-b46c-ff233a42dc1a": {
      "content": "{{#${1:value}}}\n${0:${VISUAL}}\n{{/$1}}",
      "doc": "",
      "filetype": "mustache",
      "grammar": "snu",
      "label": "# {{#value}} ... {{/value}}",
      "matches": {
        "if": true
      }
    },
    "d4cb9b8c-e5aa-3d9a-8b1e-12817f4740a8": {
      "content": "function combined-datetime(${1:integer-date},${2:standard-numeric-time})$0",
      "doc": "function combines integer-date and standard-numeric-time into a single numeric item from which both date and time components can be derived",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-combined-datetime",
      "matches": {
        "function combined-datetime": true
      }
    },
    "d4d03491-14c6-3410-8ccf-482c0540c504": {
      "content": "<aside>\n\t$1\n</aside>$2",
      "doc": "HTML - Defines content aside from the page content",
      "filetype": "html",
      "grammar": "lsp",
      "label": "aside",
      "matches": {
        "aside": true
      }
    },
    "d4d06b4b-92c4-3a7f-a357-a4a0821bd449": {
      "content": "find(:all${1:, conditions: ['${2:${3:field} = ?}', ${5:true}]})",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "find(:all)",
      "matches": {
        "fina": true
      }
    },
    "d4d4e750-38fd-3b15-9792-c2e991cdaf0d": {
      "content": "{#await ${1:promise} then ${2:value}}\n\t<!-- promise was fulfilled -->\n{/await}",
      "doc": "await short block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-short-block",
      "matches": {
        "s-await-short-block": true
      }
    },
    "d4eaffa1-3557-3f69-a3c6-694ffb87e0c7": {
      "content": "NO-LOCK NO-ERROR",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nle": true
      }
    },
    "d4ed627a-bf8b-3e97-97d8-54c407b1d5ca": {
      "content": "@book{${1:LABEL},\n    author/editor = {${2}},\n    title = {${3}},\n    publisher = {${4}},\n    year = {${5}},\n    memo = {volume, series, address, edition, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@book": true,
        "book": true
      }
    },
    "d4edcefd-97d4-3f56-b260-d54a9b83fa49": {
      "content": "<td class=\"${1}\">${0}</td>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td.": true
      }
    },
    "d4f64bcd-a4c3-377f-8e73-f4e083a7a89a": {
      "content": "${1:FIELDNAME} = models.DecimalField(max_digits=${2:10}, decimal_places=${3:2})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DecimalField",
      "matches": {
        "mdecimal": true
      }
    },
    "d4fb0fba-1efe-3a47-be89-93c186c30681": {
      "content": "namespace ${1:#:name} {\n    ${0:TARGET}\n} // namespace $1",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "namespace {}",
      "matches": {
        "namespace": true
      }
    },
    "d4fe57ed-48d4-37f7-b66c-85737f8122de": {
      "content": "(:require [clojure.core.strint :refer (<<)])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "use-strint-in-ns": true
      }
    },
    "d50570b7-b404-3eea-a485-40e5f1db127a": {
      "content": "#warning ${0:#:message}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "warn": true,
        "warning": true
      }
    },
    "d506a8f2-7c36-3e6b-996c-2a1f28669cbc": {
      "content": "#{$1}$0",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Interpolated Code",
      "matches": {
        "#": true
      }
    },
    "d50bfd0c-7712-3705-b44c-46d8bbed4e13": {
      "content": "for ${1:i} := 0; $1 < ${2:N}; $1++ {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for 0..N-1 { ... }",
      "matches": {
        "fori": true
      }
    },
    "d51830f7-8212-3a48-84c4-2264ba14ec26": {
      "content": "switch (${1:/* variable */}) {\n\tcase ${2:/* variable case */}:\n\t\t${3}\n\t\t${4:break;}${5}\n\tdefault:\n\t\t${6}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "switch": true
      }
    },
    "d51a96a6-dbb7-3701-a19e-10485757f224": {
      "content": "enum ${1:name} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "d5299bfd-7568-3d06-b679-875fdde1bdd1": {
      "content": "local $@;\neval {\n\t${1:# do something risky...}\n};\nif (my $${2:exception} = $@) {\n\t${3:# handle failure...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "eval",
      "matches": {
        "eval": true
      }
    },
    "d52b9407-71ff-35bc-b15f-a449ebf02658": {
      "content": "private ${1:int} ${2:myVar};\npublic $1 ${3:MyProperty}\n{\n\tget { return $2; }\n\tset { $2 = value; }\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "propf": true
      }
    },
    "d53517e9-7386-3e78-8268-1024a74dab80": {
      "content": "_.random(${lower}, ${upper}, ${floating})",
      "doc": "_.random(0, 5);\n// => an integer between 0 and 5\n\n_.random(5);\n// => also an integer between 0 and 5\n\n_.random(5, true);\n// => a floating-point number between 0 and 5\n\n_.random(1.2, 5.2);\n// => a floating-point number between 1.2 and 5.2\n\nProduces a random number between the inclusive `lower` and `upper` bounds.\nIf only one argument is provided a number between `0` and the given number\nis returned. If `floating` is `true`, or either `lower` or `upper` are\nfloats, a floating-point number is returned instead of an integer.\n\n**Note:** JavaScript follows the IEEE-754 standard for resolving\nfloating-point values which can produce unexpected results.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-random",
      "matches": {
        "lodash random": true
      }
    },
    "d53942c2-0bbd-383f-848a-a216a34a5034": {
      "content": "{% include \"${1}\" with ${2} %}${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig include with parameters",
      "matches": {
        "includewith": true
      }
    },
    "d53eec70-9825-385f-801f-2bb4f61a6b7c": {
      "content": "margin-bottom: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin-bottom: length (margin)",
      "matches": {
        "margin": true
      }
    },
    "d5443534-8a7d-3877-905a-e4d6d6a63178": {
      "content": "if !exists('b:undo_ftplugin')\n  let b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if !exists('b:undo_ftplugin')",
      "matches": {
        "b:undo_ftplugin": true,
        "undo_ftplugin": true
      }
    },
    "d545775b-da78-336a-9a05-314e8a636c50": {
      "content": "typedef struct {\n\t${0}\n} ${1:name_t};",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "types": true
      }
    },
    "d5462c5d-c060-33a8-9a3a-3616c6201a6c": {
      "content": "border-top-width: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "border-top-width": true,
        "btw": true
      }
    },
    "d547108b-8763-3b46-8d44-026b77d857a9": {
      "content": "console.log(JSON.stringify(${1:TARGET}, null, 2));",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsc": true
      }
    },
    "d54a47db-4093-3f3c-9f52-3e80fcc429b1": {
      "content": "alignSelf: '${1:center}',",
      "doc": "alignSelf",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "alignSelf",
      "matches": {
        "align": true
      }
    },
    "d551cc69-c91d-319b-8133-8d0d709672a4": {
      "content": "main : Program Never ${2:Model} ${3:Msg}\nmain =\n\t${4:Html.}program\n\t\t{ init: ${6:( model, Cmd.none )}\n\t\t, update: ${7:update}\n\t\t, subscriptions: ${8:subscriptions}\n\t\t${9:, view: ${10:view\\}}\n\t\t}\n\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "main : Program",
      "matches": {
        "main": true,
        "prog": true
      }
    },
    "d55686b1-aa58-33ce-9599-a598d4b30a82": {
      "content": "std.conv",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "conv": true
      }
    },
    "d56d5c04-1aff-35c5-969e-207e3bfb6ea1": {
      "content": "| ceil",
      "doc": "Math filter: ceil",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter ceil",
      "matches": {
        "ceil": true
      }
    },
    "d56f6479-0b8c-3971-9080-b23ec7749707": {
      "content": "color: #${1:DDD};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "color:  color-hex (color)",
      "matches": {
        "color": true
      }
    },
    "d57f2690-c853-35db-aa09-bf552bb7904d": {
      "content": "{% layout '${1:layout}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layout": true
      }
    },
    "d585eb07-f356-3071-9cc3-6228e05ce302": {
      "content": "border-radius ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      }
    },
    "d58b1978-dd9b-3d4b-8784-914b9398d358": {
      "content": "<meta http-equiv=\"content-type\" content=\"text/html;charset=UTF-8\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:utf": true
      }
    },
    "d58dd323-8ef6-32a6-816b-a9edccddc44a": {
      "content": "${1:fn} : ${2:a}\n$1 =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      }
    },
    "d5a6eed3-4e6e-3771-9e26-7488c835549e": {
      "content": "foreach (${1:#:var}; ${2:#:list}) {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "foreach() {}",
      "matches": {
        "foreach": true
      }
    },
    "d5b43b91-448b-3ee5-ae11-fd403bdf4d63": {
      "content": "fract($2)",
      "doc": "float fract(float x)\nvec2 fract(vec2 x)\nvec3 fract(vec3 x)\nvec4 fract(vec4 x)\n\nThe fract function returns the fractional part of x, i.e. x minus floor(x). The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "fract",
      "matches": {
        "fract": true
      }
    },
    "d5b8fa3a-7de5-3c0f-92ce-60dc65854cfc": {
      "content": "${1:FIELDNAME} = models.ForeignKey(${2:OTHERMODEL}, on_delete=models.${3|CASCADE,PROTECT,SET_NULL,SET_DEFAULT,SET(),DO_NOTHING|})",
      "doc": "ForeignKey (fk).\n\nA many-to-one relationship.\n\non_delete will become a required argument in Django 2.0. In older versions it defaults to CASCADE.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "fk",
      "matches": {
        "fk": true
      }
    },
    "d5bf5195-732c-363d-bc3c-e6b44bdc3825": {
      "content": "\\dv[${1:${VISUAL}}]{${2}}{${3}}",
      "doc": "",
      "filetype": "texmath",
      "grammar": "snu",
      "label": "Derivative",
      "matches": {
        "dv": true
      }
    },
    "d5c2f85d-e2ca-39c4-962a-d196f982494b": {
      "content": "export function ${1:member} (${2:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "export named function",
      "matches": {
        "ef": true
      }
    },
    "d5c4750b-b384-362e-a031-373ae470a89e": {
      "content": "xhr :post, :${1:create}, ${2:object}: { $3 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr post",
      "matches": {
        "xpost": true
      }
    },
    "d5c71cdf-96f7-379d-b38e-e802a3062b29": {
      "content": "covergroup ${1:group_name} @(${2:posedge} ${3:clk});\n\t${0}\nendgroup : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cg": true
      }
    },
    "d5cecfc0-2497-37b8-90e5-eefe0bc8a0f5": {
      "content": "printf(\"${1:} = %${2}\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prx": true
      }
    },
    "d5d12aea-e4e8-3153-a085-11bf6b6d032d": {
      "content": "do {\n    ${0:TARGET}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "do {} while() {}",
      "matches": {
        "do_while": true,
        "dowhile": true
      }
    },
    "d5d2fd1d-cf85-3f9b-9ad9-ef0fbd5f9c34": {
      "content": "case $${1:variable} {\n\tdefault: { ${0} }\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "d5d52a04-51f0-3206-8440-f19b0a9837a7": {
      "content": "head () {\n\treturn {\n\t\ttitle: '${1:title}',\n\t\tmeta: [\n\t\t\t{ hid: '${2:description}', name: '${3:description}', content: '${4:custom description}' }\n\t\t]\n\t}\n},",
      "doc": "Use the head method to set the HTML Head tags for the current page",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-head",
      "matches": {
        "nuxt head": true
      }
    },
    "d5dd4eb1-e993-33b5-91d7-89966bcc84af": {
      "content": "list-style-type disc",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:d": true
      }
    },
    "d5debfd0-ded5-3932-a10e-0c377fe2ed76": {
      "content": "_.isEqual(${value}, ${other})",
      "doc": "var object = { 'a': 1 };\nvar other = { 'a': 1 };\n\n_.isEqual(object, other);\n// => true\n\nobject === other;\n// => false\n\nPerforms a deep comparison between two values to determine if they are\nequivalent.\n\n**Note:** This method supports comparing arrays, array buffers, booleans,\ndate objects, error objects, maps, numbers, `Object` objects, regexes,\nsets, strings, symbols, and typed arrays. `Object` objects are compared\nby their own, not inherited, enumerable properties. Functions and DOM\nnodes are compared by strict equality, i.e. `===`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isequal",
      "matches": {
        "lodash isequal": true
      }
    },
    "d5e10026-88a5-3057-902b-e083ca3f5673": {
      "content": "provide",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "provide",
      "matches": {
        "provide": true
      }
    },
    "d5ede119-50c4-39dc-a5d9-2caa4595f03b": {
      "content": "props: {\n\t${1:propName}: {\n\t\ttype: ${2:Number},\n\t\tdefault: ${0}\n\t},\n},",
      "doc": "Vue Props with Default",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-props-with-default",
      "matches": {
        "vprops": true,
        "vue props with default": true
      }
    },
    "d5efe196-e069-373f-9687-98d3d95d1b9d": {
      "content": "Yii::app()->session['${0}'];",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yse": true
      }
    },
    "d5f1f839-c541-329c-b8ca-88fd77f7465e": {
      "content": "do {\n\t${0:# code...}\n} while (${1:\\$${2:a} <= ${3:10}});",
      "doc": "Do-While loop",
      "filetype": "php",
      "grammar": "lsp",
      "label": "do … while …",
      "matches": {
        "do": true
      }
    },
    "d5f3c795-9694-3e14-8cf3-64253094dd88": {
      "content": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"time\"\n)\n\nfunc greet(w http.ResponseWriter, r *http.Request) {\n\tfmt.Fprintf(w, \"Hello World! %s\", time.Now())\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/\", greet)\n\thttp.ListenAndServe(\":8080\", nil)\n}",
      "doc": "Snippet for sample hello world webapp",
      "filetype": "go",
      "grammar": "lsp",
      "label": "hello world web app",
      "matches": {
        "helloweb": true
      }
    },
    "d5fa84de-ac95-35a9-b4d0-303b42cb008e": {
      "content": "::: incremental\n\n${1:${TM_SELECTED_TEXT}}$0\n\n:::",
      "doc": "Insert incremental fenced block",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert incremental fenced block",
      "matches": {
        "incremental fenced block": true
      }
    },
    "d6097dee-0941-31b6-a278-19148735090f": {
      "content": "${1}.defaultProps = {\n\t${2}: ${3}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "defaultProps",
      "matches": {
        "dp": true
      }
    },
    "d6114d0b-23db-3152-aa8a-a4970bd1226d": {
      "content": "else if ${1:condition}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Else if",
      "matches": {
        "elif": true
      }
    },
    "d611dcf4-6afc-3502-abf3-8f7af2079650": {
      "content": "join:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "d614872b-7075-31b9-b512-2a487abd7354": {
      "content": "IGNORECASE = ${1:1}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "IGNORECASE",
      "matches": {
        "ign": true
      }
    },
    "d61c67dd-ed02-3510-914a-781cf4982e28": {
      "content": "display dialog \"${1:#:text}\"\n\t${2:#:with icon}\n\tbuttons {\"${3:Cancel}\", \"${4:Other Choice}\", \"${5:OK}\"}\n\tdefault button \"${5}\"\nset button_pressed to button returned of result\nif button_pressed is \"${5}\" then\n\t${6:TARGET}\nelse if button_pressed is \"${3}\" then\n\t-- action for cancel button goes here\nelse\n\t-- action for other button goes here\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "dialog",
      "matches": {
        "dialog_OK/Cancel/Other": true
      }
    },
    "d61d1c44-16ba-30d9-ae2d-d74a2327e04b": {
      "content": "if ${1:test}\n\t$0\nelsif \n\t\nelse\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "if elsif else",
      "matches": {
        "if elsif else": true
      }
    },
    "d6237138-1607-3414-a5fc-97f72ae7025a": {
      "content": "func main() {\n\t${1}\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main()",
      "matches": {
        "main": true
      }
    },
    "d628453e-9404-30ef-a4ff-f4dda2ec78e9": {
      "content": "$this->shouldNotImplement($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotImplement('Type')",
      "matches": {
        "snimplement": true
      }
    },
    "d629ad99-201d-32a9-923a-991942860f96": {
      "content": "<h5 id=\"${1}\">${0}</h5>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h5#": true
      }
    },
    "d62b223b-4e04-339d-ac26-1b4047774e83": {
      "content": "logger.debug",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "logger.debug",
      "matches": {
        "logd": true
      }
    },
    "d62be4c4-4a9c-3d3f-bd3d-9e7aff4e3b87": {
      "content": "${1:deferred}.promise(${2:target})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dprom": true
      }
    },
    "d62c3fb3-5f63-3ccd-9199-8c4dbe1de6ff": {
      "content": ":hover",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":h": true
      }
    },
    "d635f560-03dc-3a86-892f-94c23a8b2d66": {
      "content": "<param name=\"${1:#:name}\">${0:#:description}</param>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<param name=\"\"></param>",
      "matches": {
        "param": true
      }
    },
    "d638f202-3a24-39c2-864e-6dc4305cf3af": {
      "content": "$this->refresh();",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yrf": true
      }
    },
    "d63c7af7-9952-34bb-9c33-cbb43219d6d0": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", type: ${2::rjson}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline,type) (rit)",
      "matches": {
        "rit": true
      }
    },
    "d63fc9a9-a89a-3149-8766-a5b4dfe5fc45": {
      "content": "mapState",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mapState",
      "matches": {
        "mapState": true
      }
    },
    "d64026a7-244d-3a5d-8a67-cdeb30e00f9e": {
      "content": "{@debug ${1:var1}${2:,var2}}",
      "doc": "html content expression",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-debug",
      "matches": {
        "s-expression-debug": true
      }
    },
    "d640a4d4-a018-3ba5-bd0d-a52051efd5a1": {
      "content": "\\begin{description}\n\t\\item[${1}] ${0}\n\\end{description}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{description} \\description desc": true,
        "description": true
      }
    },
    "d64b5c74-be0a-394d-bea8-aafef8de5797": {
      "content": "Page Should Not Contain Link    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Not Contain Link",
      "matches": {
        "psncl": true
      }
    },
    "d64e4eb0-5891-3066-b310-0dd8f6afadad": {
      "content": "length($2)",
      "doc": "float length(float x)\nfloat length(vec2 x)\nfloat length(vec3 x)\nfloat length(vec4 x)\n\nThe length function returns the length of a vector defined by the Euclidean norm, i.e. the square root of the sum of the squared components. The input parameter can be a floating scalar or a float vector. In case of a floating scalar the length function is trivial and returns the absolute value.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "length",
      "matches": {
        "length": true
      }
    },
    "d6534fbe-5ced-3139-92d0-e3087585cbc5": {
      "content": "time:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      }
    },
    "d65656c9-d030-30fc-94cc-fe8ef2241ab6": {
      "content": "struct ${1} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct": true
      }
    },
    "d65bbf2e-c005-3c18-aaa2-313f6b53ec97": {
      "content": "spyOn(${1:object}, \"${2:method}\").andReturn(${3:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on and return (coffee)",
      "matches": {
        "sr": true
      }
    },
    "d6617497-f29a-3170-a9a5-188678a373ab": {
      "content": "{% include \"${1:template}\" %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "include",
      "matches": {
        "include": true
      }
    },
    "d6617fe5-2455-3eaf-b169-61ed85472b1e": {
      "content": "private def ${1:method_name}\n\t${0}\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pdef": true
      }
    },
    "d663a50b-470b-31a4-bcc3-ca15bd739248": {
      "content": "$_REQUEST['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "R": true
      }
    },
    "d6669e32-2e36-3b6c-b833-a02bb4f20754": {
      "content": "func _gui_input(event):\n\t${1:pass}",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "_gui_input method of Node",
      "matches": {
        "guii": true
      }
    },
    "d667c33c-20d1-32b0-a23e-8a81a10f4c57": {
      "content": "<motion.${1:div}\n  initial=\"${2:hidden}\"\n  animate=\"${3:visible}\"\n></motion.${1:div}>",
      "doc": "",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-motion",
      "matches": {
        "framer-motion motion": true,
        "motion": true
      }
    },
    "d67260d3-149f-3f6b-aefe-65546d857641": {
      "content": "text-outline: ${1:0} ${2:0} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to+": true
      }
    },
    "d6765880-8a73-313f-9061-2d71eb753d80": {
      "content": "import React,{ useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1:${TM_FILENAME_BASE}} = props => {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n};\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component with PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactHookProps",
      "matches": {
        "rhc": true
      }
    },
    "d685ff0a-c418-36e5-b094-2acc89db0efb": {
      "content": "justify-content: left;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:l": true
      }
    },
    "d68c21d3-6703-3ae9-be5c-c19098a1c395": {
      "content": "it { should have_many :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishm": true
      }
    },
    "d68df7c0-3df5-36f3-a139-cb87230d0e48": {
      "content": "url(\"${1:path}\")$0",
      "doc": "url",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "url",
      "matches": {
        "url": true
      }
    },
    "d692000f-a074-3d4e-a9cd-8ee98f5d7ed3": {
      "content": "protected string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps|-": true
      }
    },
    "d69856fd-37d6-3c6f-8b31-4142f8c72ef9": {
      "content": "[@@deriving ${0:TARGET}]",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "[@@deriving ...]",
      "matches": {
        "@@": true
      }
    },
    "d69a7f30-ab4d-3572-8a95-e9fdb7cda9a8": {
      "content": "const ${1:store} = writable(${2:initialValue}, () => {\n\t${3:console.log('got a subscriber');}\n\treturn () => ${4:console.log('no more subscribers');}\n});",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-writeable-set",
      "matches": {
        "svelte writeable set": true,
        "svwt": true
      }
    },
    "d69aa740-254e-3eec-a421-db1c52339905": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", locals { ${2::name}: \"${3:value}\"$4 }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (inline,locals) (ril)",
      "matches": {
        "ril": true
      }
    },
    "d69d249d-eab7-3783-80eb-b68fb90c2d17": {
      "content": "Vue.compile(${1:template})",
      "doc": "Vue.compile( template )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "compile",
      "matches": {
        "VueCompile": true
      }
    },
    "d6a6fca0-138e-375e-9e7e-e96e3ce784d5": {
      "content": "{% extends \"${1:template}\" %}$0",
      "doc": "extends",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "extends",
      "matches": {
        "extends": true
      }
    },
    "d6a982a1-af2e-3423-94ec-27049c0c2099": {
      "content": "CJSON::encode(${0:text});",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yjec": true
      }
    },
    "d6b9717f-e412-3578-a016-687c0bbc2b24": {
      "content": "set yrange [${1:*}:${2:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set yrange [Y1:Y2]",
      "matches": {
        "yrange": true
      }
    },
    "d6bc1a53-c6b2-32e2-a4f2-dd7ace7488b3": {
      "content": "media=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "media": true
      }
    },
    "d6bcf9d8-41d3-3a33-8993-e0979c08ec46": {
      "content": "_.toLength(${value})",
      "doc": "_.toLength(3.2);\n// => 3\n\n_.toLength(Number.MIN_VALUE);\n// => 0\n\n_.toLength(Infinity);\n// => 4294967295\n\n_.toLength('3.2');\n// => 3\n\nConverts `value` to an integer suitable for use as the length of an\narray-like object.\n\n**Note:** This method is based on\n[`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tolength",
      "matches": {
        "lodash tolength": true
      }
    },
    "d6c768e8-de88-3357-8fdb-30d0833fc077": {
      "content": "<input type=\"reset\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:reset": true
      }
    },
    "d6ca5e7c-0791-3156-8854-d213caa98138": {
      "content": "\\\\item[${1:description}] ${0:item}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "description \\item",
      "matches": {
        "itd": true
      }
    },
    "d6ccd3f5-5278-302d-bf38-b84be1fa025d": {
      "content": "def test_should_get_${1:action}\n\t${2:@${3:model} = ${4:$3s}(:${5:fixture_name})\n\t}get :$1${6:, id: @$3.to_param}\n\tassert_response :success\n\t$0\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "def get request",
      "matches": {
        "deftg": true
      }
    },
    "d6d54445-c026-3143-a388-8dce07e01875": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "d6d6d504-36df-32a4-8bd8-57de63aae589": {
      "content": "if ${1} then\n\t${2}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "d6dcfca7-9261-3ca2-b86c-8019a7488a61": {
      "content": "::: notes\n\n${TM_SELECTED_TEXT}$0\n\n:::",
      "doc": "Insert speaker notes",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert speaker notes",
      "matches": {
        "speaker notes": true
      }
    },
    "d6dfb9d2-8b55-3bba-a6a4-6dd5e0daf548": {
      "content": "interface ${1} {\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "interface",
      "matches": {
        "int": true
      }
    },
    "d6e09924-28f9-3b7d-a5c0-565b0a342ae3": {
      "content": "internal int ${1}(${2})\n{\n\t${0:return 0;}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mi&": true
      }
    },
    "d6e757d6-0eb7-34ed-8dc8-65193b9541b3": {
      "content": "border-left-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      }
    },
    "d6e995ab-6bbd-3056-86f6-4839797da98f": {
      "content": "collection do\n\t${1:get :${2:action}}\n\t${3:put :${4:action}}\n\t${5:post :${6:action}}\n\t${7:delete :${8:action}}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "collection routes",
      "matches": {
        "col": true
      }
    },
    "d6eaec77-b26c-3e79-9691-11d3f838d030": {
      "content": "sphereDetail(${0:n});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sphereDetails": true
      }
    },
    "d6efb303-1057-3c9d-8dd6-13356c202f8f": {
      "content": "<blockquote>\n${1}\n</blockquote>\n${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      }
    },
    "d6f20663-5029-3b66-bb95-06500f0b706f": {
      "content": "float: ${1:left/right/none};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "float: left:right:none (float)",
      "matches": {
        "float": true
      }
    },
    "d6f22aff-1049-3271-94e2-12114f50ecbf": {
      "content": "pragma(msg, ${1:Warning});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pms": true
      }
    },
    "d6f38623-8f67-3f29-8b66-d9048ae7f6cc": {
      "content": "<video\nsrc={${1:clip}}\nbind:${2:duration}\nbind:${3:buffered}\nbind:${4:seekable}\nbind:${5:played}\nbind:${6:currentTime}\nbind:${7:paused}\nbind:${8:volume}\n></video>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-video",
      "matches": {
        "svbind-video": true,
        "svelte bind video": true
      }
    },
    "d700c342-696c-3e15-9dbe-82fa872920fa": {
      "content": "{%- else -%}",
      "doc": "Control flow tag: else",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag else",
      "matches": {
        "else": true
      }
    },
    "d702bdd8-2096-3b71-9cdf-1638be4430f2": {
      "content": "{%- cycle '${1:odd}', '${2:even}' -%}",
      "doc": "Iteration tag: cycle, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag cycle, whitespaced",
      "matches": {
        "cycle-": true
      }
    },
    "d705bbaf-7315-3dc7-b666-c9fdd2de4dfb": {
      "content": "'$1' => $2${3:,} $0",
      "doc": "Key-Value initializer",
      "filetype": "php",
      "grammar": "lsp",
      "label": "… => …",
      "matches": {
        "keyval": true
      }
    },
    "d70b2162-368b-3797-9da9-69c58ff0ce17": {
      "content": "echo CHtml::link('${1:text}',array(${2}),array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhlink": true
      }
    },
    "d70b76c0-3920-3990-8c95-885353936999": {
      "content": "{% empty %}\n\t$1",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "empty": true
      }
    },
    "d70cfbae-96d3-30df-9ea8-0e05395a8514": {
      "content": "for (${1:item} in ${2:list})\n\t${3:expression}",
      "doc": "Snippet for iterating array with for loop",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "foreach",
      "matches": {
        "foreach": true
      }
    },
    "d71517ad-8c98-374b-95d8-95d273906d84": {
      "content": "<label for=\"${2:$1}\">${1}</label>\n<select name=\"${3:$2}\" id=\"${4:$2}\">\n\t<option value=\"${5}\">${0:$5}</option>\n</select>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "label:s": true
      }
    },
    "d71a31c9-6cae-3fbf-9dd3-fde03beab3a3": {
      "content": "function numval(${1:string})$0",
      "doc": "corresponding numeric value for string",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-numval",
      "matches": {
        "function numval": true
      }
    },
    "d71a8a35-9f35-32ce-a772-313e07c603d5": {
      "content": "box-shadow: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:n": true
      }
    },
    "d71b858d-3b64-34e1-a19a-52846442017d": {
      "content": "@serial ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serial": true
      }
    },
    "d7295937-3ef6-3729-acef-6db417fd92b9": {
      "content": "text-wrap: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw": true
      }
    },
    "d72c548f-58cf-33c6-a90b-5d9f40db16dc": {
      "content": "each_with_index {|${1:#:variable}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_with_index": true
      }
    },
    "d7309eae-a8f2-31b0-a145-352422229bb9": {
      "content": "spec:\n  replicas: {{ .Values.$1.replicaCount }}\n  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}\n  template:\n\tmetadata:\n\t{{- if .Values.$1.podAnnotations }}\n\t  annotations:\n{{ toYaml .Values.$1.podAnnotations | indent 8 }}\n\t{{- end }}\n\t  labels:\n\t\tapp: {{ template \"${2:chartName}.name\" . }}\n\t\tcomponent: \"{{ .Values.$1.name }}\"\n\t\trelease: {{ .Release.Name }}\n\t\t{{- if .Values.$1.podLabels }}\n{{ toYaml .Values.${1:value_key}.podLabels | indent 8 }}\n\t\t{{- end }}\n\tspec:\n\t  {{- if .Values.imagePullSecrets }}\n\t  imagePullSecrets:\n{{ toYaml .Values.imagePullSecrets | indent 8 }}\n\t  {{- end }}\n\t  ${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "spec_spec": true
      }
    },
    "d73748eb-9e8a-332f-8256-1eeaef583509": {
      "content": "display alert \"${1:#:alert text}\"\n\t${2:#:message} \"${3:#:message text}\"\n\t${4:#:as warning}",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      }
    },
    "d74064ba-07eb-3a8d-8f74-2a6d614a1405": {
      "content": "import { Injectable } from '@angular/core';\nimport {\n  EntityCollectionServiceBase,\n  EntityCollectionServiceElementsFactory\n} from '@ngrx/data';\nimport { ${1:Model} } from '${2:../core}';\n\n@Injectable({ providedIn: ${3:'root'} })\nexport class ${1:Model}Service extends EntityCollectionServiceBase<${1:Model}> {\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\n    super('${1:Model}', serviceElementsFactory);\n  }\n}",
      "doc": "NgRx Data Entity Collection Data Service",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-entity-collection-data-service",
      "matches": {
        "a-ngrx-data-entity-collection-data-service": true,
        "angular ng rx data entity collection service": true
      }
    },
    "d74bde77-9de2-3683-8f45-b03c88a78529": {
      "content": "type ${1:name} interface {\n\t$0\n}",
      "doc": "Snippet for a type interface",
      "filetype": "go",
      "grammar": "lsp",
      "label": "type interface declaration",
      "matches": {
        "tyi": true
      }
    },
    "d74d4201-d553-3b53-9243-69334c895daf": {
      "content": "if ${1} then\n\t${2}\nelse\n\t${3}\nend if;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "d75102af-2505-388b-aab3-4060f7ad145c": {
      "content": "Yii::app()->request->cookies['${0}']",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yco": true
      }
    },
    "d7520cfa-2962-3020-ad58-84d2357abab1": {
      "content": "background-origin: border-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      }
    },
    "d7523685-f5da-3d97-8c62-aadc30d7dc3b": {
      "content": "${1:FIELDNAME} = forms.DurationField($2, required=${3:False})",
      "doc": "DurationField (fduration)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fduration",
      "matches": {
        "fduration": true
      }
    },
    "d7523815-c1cd-345f-8cf4-c5c06f15faa6": {
      "content": "{% endfilter %}$0",
      "doc": "endfilter",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endfilter",
      "matches": {
        "endfilter": true
      }
    },
    "d7530845-04fa-3650-adb0-98317ae92fb8": {
      "content": "describe('${1:Name of the group}', () => {\n\n\tlet ${2:cut};\n\n\tbeforeEach(() => {\n\t\t$2 = $3;\n\t});\n\n\ttest('${1:should }', () => {\n\t\texpect($2).toBe($0);\n\t});\n\n});",
      "doc": "creates a template to test a class under test",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-template-cut",
      "matches": {
        "cut": true,
        "jest template cut": true
      }
    },
    "d7534b29-0e3b-3ab3-bc8a-695357f3a205": {
      "content": "{% for ${1:item} in ${2:collection} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "d754a9ec-4224-3e1e-9c05-e6d41d7a2dc8": {
      "content": "\\${1:#${0:optional}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1:#optional}",
      "matches": {
        "1#": true
      }
    },
    "d7552401-d3d4-3dd7-bf8c-de27ecd0bccd": {
      "content": "function current-date(${1:date-and-time-format})$0",
      "doc": "function current date and time as 21-character value",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-current-date",
      "matches": {
        "function current-date": true
      }
    },
    "d75a82b9-a889-333d-b981-d7a0e49b2dca": {
      "content": "<%= options_from_collection_for_select ${1:collection}, ${2:value_method}, ${3:text_method}, ${0:selected_value} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ofcfs": true
      }
    },
    "d760677d-c243-3c57-8f7f-a41bbaf3a05d": {
      "content": "const ${dragControls} = useDragControls()",
      "doc": "useDragControls()\nBy creating a dragControls using the useDragControls hook, we can pass this into the draggable component's dragControls prop.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-drag-controls",
      "matches": {
        "framer-motion use-drag-controls": true,
        "use-drag-controls": true
      }
    },
    "d76a3afe-8236-3d08-8af4-0b2860521c10": {
      "content": "if ${1} {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "if / else",
      "matches": {
        "ife": true
      }
    },
    "d76a54ce-48cc-3560-ae36-120f095a03c6": {
      "content": "service { \"${1:service}\":\n\tensure    => running,\n\tenable    => true,\n\trequire   => [ Package[\"${2:package}\"], File[\"${3:file}\"], ],\n\tsubscribe => [ File[\"${4:configfile1}\"], File[\"${5:configfile2}\"], Package[\"${6:package}\"], ],\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "service": true
      }
    },
    "d7703b58-b4e5-35b2-b6e0-8f651607403a": {
      "content": "[${1:foo} retain];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "d774143b-dae7-35af-aca5-6adca63a755e": {
      "content": "\\\\left| ${0:${VISUAL}} \\\\right|",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "left| right|",
      "matches": {
        "lr|": true
      }
    },
    "d7754d6e-4b33-36b5-8a17-6570bd0c02c7": {
      "content": "scale(${1:x}, ${2:y}${3:, }${0:z});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scale": true
      }
    },
    "d7781834-d066-327f-aa87-4503130aa67f": {
      "content": "top: ${1},",
      "doc": "top",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "top",
      "matches": {
        "top": true
      }
    },
    "d778abfa-6bc7-322d-9b9e-5a2073ccc7cc": {
      "content": "System.out.println(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "println": true,
        "sout": true
      }
    },
    "d77aff82-082a-3a36-a112-5dc891d4b8ca": {
      "content": "font-stretch: extra-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      }
    },
    "d77c1b12-7caf-31ae-9bdf-d272083fa27c": {
      "content": "function ${1:name}(${2:params}) {\n\t$0\n}",
      "doc": "Function Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Function Statement",
      "matches": {
        "function": true
      }
    },
    "d77d2e06-566a-34ae-a3bb-2f9ebe5f9026": {
      "content": "$.cssHooks['${1:CSS prop}'] = {\n\tget: (elem, computed, extra) ->\n\t\t${2: // handle getting the CSS property}\n\tset: (elem, value) ->\n\t\t${0: // handle setting the CSS value}\n}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csshooks": true
      }
    },
    "d7836fe1-8455-310c-8c6a-e3f0bcecb3dc": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn ${2:value}${0};\n\t}\n}",
      "doc": "vue filter",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-filter",
      "matches": {
        "vfilter": true,
        "vue filter": true
      }
    },
    "d784716a-f599-30db-b4dd-9af78ca174f5": {
      "content": "{% ifnotequal $1 %}\n  \n{% ifnotequal %}",
      "doc": "ifnotequal tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ifnotequal",
      "matches": {
        "ifnotequal": true
      }
    },
    "d78cde44-ed52-3ea6-8542-8b73a62435b4": {
      "content": "<%= link \"${1:Submit}\", to: ${2:\"/users\"}, method: ${3::delete} %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "lin",
      "matches": {
        "if": true
      }
    },
    "d79518c7-1e2e-37b7-b387-441875b574aa": {
      "content": "func Test$1(t *testing.T) {\n\t$0\n}",
      "doc": "Snippet for Test function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "test function",
      "matches": {
        "tf": true
      }
    },
    "d797f490-1c7b-39c4-8489-f7adbdef2266": {
      "content": "checkEvents() {\n\tthis.router.events.subscribe(event => {\n\t\tswitch (true) {\n\t\t\tcase event instanceof ${1:eventName}:\n\t\t\t\t$0\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t}\n\t});\n}",
      "doc": "Angular Router Events",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-router-events",
      "matches": {
        "a-router-events": true,
        "angular router events": true
      }
    },
    "d79fbe92-8304-3cfe-83b7-bfe3fccdcd08": {
      "content": "import ${1:classNames} from 'classnames/bind';",
      "doc": "",
      "filetype": "classnames",
      "grammar": "lsp",
      "label": "classnames-import-bind",
      "matches": {
        "classnames import bind": true
      }
    },
    "d7a527ed-8e0c-3c60-83e0-fc05ec68df56": {
      "content": "computed: {\n\t${1:fnName}() {\n\t\treturn;\n\t}\n},",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vcomputed": true
      }
    },
    "d7a5b3ab-4159-36d0-8d0c-8888780c199c": {
      "content": "${1:f} :: ${2:a} ${3:-> ${4:b}}\n$1 ${5:x}\n\t| ${6:condition} = ${8:undefined}\n\t| ${7:condition} = ${9:undefined}$0",
      "doc": "Guarded function",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "fn_guarded",
      "matches": {
        "fng": true,
        "guarded function": true
      }
    },
    "d7ad2700-90d5-3290-bb8f-bfb82b0da8a4": {
      "content": "PropTypes.oneOf(['$0']).isRequired,",
      "doc": "Prop type limited to specific values by treating it as an enum required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-enum-required",
      "matches": {
        "prop-types enum required": true,
        "pter": true
      }
    },
    "d7b1719f-ffa6-3502-abb9-a2dd46fa8a6b": {
      "content": "booleanParam(name: \"${1:TOGGLE}\" , defaultValue: ${2:default}, description: \"${3:Toggle this value}\")\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parambool": true
      }
    },
    "d7b297bf-e602-3d92-be70-e67c4e46c4de": {
      "content": "cy.viewport(${1:width}, ${2:height});",
      "doc": "Control the size of the screen for your application.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-viewport",
      "matches": {
        "cypress viewport": true
      }
    },
    "d7b3e7dc-b77d-3045-b773-214d87e669ce": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:e.printStackTrace();}\n} finally {\n    ${4}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try_finally": true
      }
    },
    "d7b43376-3fc3-301b-89a0-b8a1b0b6c0da": {
      "content": "_.unzip(${array})",
      "doc": "var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n// => [['a', 1, true], ['b', 2, false]]\n\n_.unzip(zipped);\n// => [['a', 'b'], [1, 2], [true, false]]\n\nThis method is like `_.zip` except that it accepts an array of grouped\nelements and creates an array regrouping the elements to their pre-zip\nconfiguration.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-unzip",
      "matches": {
        "lodash unzip": true
      }
    },
    "d7b8b5a7-84f6-3237-9f15-18424817b704": {
      "content": "process.stdout",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "stdout",
      "matches": {
        "stdout": true
      }
    },
    "d7b8faa6-ba79-3aa3-95df-5490bef7fe92": {
      "content": "text-align center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      }
    },
    "d7bcd575-bc78-35a7-b517-25db354eb7cf": {
      "content": "_.mergeWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  if (_.isArray(objValue)) {\n    return objValue.concat(srcValue);\n  }\n}\n\nvar object = { 'a': [1], 'b': [2] };\nvar other = { 'a': [3], 'b': [4] };\n\n_.mergeWith(object, other, customizer);\n// => { 'a': [1, 3], 'b': [2, 4] }\n\nThis method is like `_.merge` except that it accepts `customizer` which\nis invoked to produce the merged values of the destination and source\nproperties. If `customizer` returns `undefined`, merging is handled by the\nmethod instead. The `customizer` is invoked with six arguments:\n(objValue, srcValue, key, object, source, stack).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mergewith",
      "matches": {
        "lodash mergewith": true
      }
    },
    "d7bdeeb2-2935-399c-84e0-4e9ba36200fd": {
      "content": "mixed.cast()",
      "doc": "mixed.cast(value: any, options = {}): any\n\nAttempts to coerce the passed in value to a value that matches the schema. For example: '5' will\ncast to 5 when using the number() type. Failed casts generally return null, but may also\nreturn results like NaN and unexpected strings.options parameter can be an object containing context. (For more info on context see mixed.validate)",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-cast",
      "matches": {
        "yup mixed cast": true
      }
    },
    "d7ca5aa3-de54-3468-a5b7-15a6b2a41a9d": {
      "content": "initial begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ini": true
      }
    },
    "d7ceafc2-0ada-3847-8993-65b1c3b5f094": {
      "content": "EventHandler temp = ${1:MyEvent};\nif (${2:temp} != null)\n{\n\t$2();\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inv": true
      }
    },
    "d7d016f4-765f-35e6-b3c9-5c678304c32b": {
      "content": "-behaviour(${1:behaviour}).",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "beh": true
      }
    },
    "d7d02039-06aa-3fdc-966b-92fcdf7fd91c": {
      "content": "local ${1:name} = function($2)\n\t${0:-- code}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "inline-function",
      "matches": {
        "f=": true
      }
    },
    "d7d479c8-ec21-35ec-b8ad-dae65b7954a9": {
      "content": "background-position-y ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpy": true
      }
    },
    "d7d7339b-e403-3006-b801-9b455af1f921": {
      "content": "for (${1:int} ${2:i} = ${3:0}; $2 < ${4:max}; $2++) {\n\t$0\n}",
      "doc": "Indexed for loop",
      "filetype": "java",
      "grammar": "lsp",
      "label": "fori",
      "matches": {
        "fori": true
      }
    },
    "d7d8a653-8751-3e21-91c4-60a5babcbe18": {
      "content": "t.string :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.string (tcs)",
      "matches": {
        "t.": true
      }
    },
    "d7e2fd3d-d89a-3f4a-b42c-f80f33b3e37e": {
      "content": "max-width: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "max-width",
      "matches": {
        "maw": true
      }
    },
    "d7e61386-8a5b-33c2-b631-2440349479f7": {
      "content": "(deftest $1\n\t$0)",
      "doc": "",
      "filetype": "lfe",
      "grammar": "snu",
      "label": "",
      "matches": {
        "test": true
      }
    },
    "d7eb43f2-4bbf-3669-8756-5bfd86c504a3": {
      "content": "$.dequeue('${1:selector expression}'${2:, 'queue name'})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "deqq": true
      }
    },
    "d7ee68cb-16d7-3959-ba1e-796b4b7da264": {
      "content": "if err != nil {\n\treturn err\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return",
      "matches": {
        "errn": true
      }
    },
    "d7eecf42-8d17-3504-b8fd-42fee942c0d8": {
      "content": "| plus: ${plus:1}",
      "doc": "Math filter: plus",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter plus",
      "matches": {
        "plus": true
      }
    },
    "d7f17067-c090-30cb-a026-f1b046584487": {
      "content": "actions: {\n\t${1:updateValue}({commit}, ${2:payload}) {\n\t\tcommit('${1:updateValue}', ${2:payload});\n\t}\n}",
      "doc": "vuex action",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-action",
      "matches": {
        "vaction": true,
        "vuex action": true
      }
    },
    "d7f66ea8-fdd2-3abe-8893-82448813df98": {
      "content": "grid-row-end: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      }
    },
    "d806f0e0-cb12-3535-9af3-c330c1441352": {
      "content": "font-variant: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fv": true
      }
    },
    "d8074e35-ac21-3cde-9793-0e11bbf333b8": {
      "content": "zip(${1:enums}) { |${2:row}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zip": true
      }
    },
    "d8106004-cb25-3090-9e11-abf0e7c4bf18": {
      "content": "<noscript>\n$1\n</noscript>",
      "doc": "HTML - Defines a noscript section",
      "filetype": "html",
      "grammar": "lsp",
      "label": "noscript",
      "matches": {
        "noscript": true
      }
    },
    "d8107fc5-d007-39a7-8789-0027baf5e631": {
      "content": "@foreach (${1} as ${2})\n    ${3}\n@endforeach",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@foreach ... @endforeach",
      "matches": {
        "foreach": true
      }
    },
    "d8157aad-a48d-33b3-8788-bd470863a464": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      }
    },
    "d817b063-2d52-3583-8b85-905abd09f021": {
      "content": "import ${1:Data.Text} (${0:head})",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "import2": true
      }
    },
    "d81bdfce-7c4d-3aa9-9d17-0ac7bebd52a6": {
      "content": "try {\n    ${0:TARGET}\n} catch (${1:Exception} ${2:e}) {\n    ${3:Console.WriteLine(e.Message);}\n} finally {\n    ${4}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "try {} catch () {} finally {}",
      "matches": {
        "try_catch_finally": true,
        "try_cf": true
      }
    },
    "d81e96ed-1e91-35cf-b40c-e8cedcb85dd4": {
      "content": "type ${1:name} struct {\n\t${2:attrName} ${3:attrType}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "composite literals",
      "matches": {
        "cl": true
      }
    },
    "d821c18a-47e3-3147-b3e7-9e55bbccda0a": {
      "content": "border-bottom-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi": true
      }
    },
    "d8255324-14c7-39ba-8e5e-1e19bc929501": {
      "content": "height: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      }
    },
    "d82e6b0f-c2a4-325c-8a31-6a87d62974b4": {
      "content": "import { ${1:Observable} } from 'rxjs';\n$0",
      "doc": "RxJs import",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "rxjs-import",
      "matches": {
        "a-rxjs-import": true,
        "angular import rx js": true
      }
    },
    "d8325251-9f59-3ee2-8dd0-ae54676c0839": {
      "content": "function monetary-thousands-separator()$0",
      "doc": "character used to separate the thousands digit groupings in a monetary currency value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-monetary-thousands-separator",
      "matches": {
        "function monetary-thousands-separator": true
      }
    },
    "d83615bb-4b30-3590-bfa9-7f4e71c7ba15": {
      "content": "= mail_to ${1:email_address}, ${2:name}",
      "doc": "",
      "filetype": "haml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mt": true
      }
    },
    "d83c35df-7690-3f87-b4e8-31e7dbb45184": {
      "content": "@doc false\ndef child_spec(${1:_opts}) do\n\t%{\n\t\tid: __MODULE__,\n\t\tstart: {__MODULE__, :start_link, ${2:[]}},\n\t\trestart: ${3::permanent},\n\t\tshutdown: ${4:5000},\n\t\ttype: ${5::worker}\n\t}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      }
    },
    "d83dee48-4adb-3cf1-9cbd-1a4af4a4d845": {
      "content": "#' @description\n#'\n#' ${1:type description}\n#'\n#' ${2:@field ${3:name}::${4:Type} ${5:Description}}\n#'\n#' @examples\n#'\n#' ${10: constructor examples}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "type definition",
      "matches": {
        "doct": true
      }
    },
    "d840b85e-998f-37f9-bb95-1444d6c4a435": {
      "content": "font-style: normal",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fs:n": true
      }
    },
    "d842b041-c015-3b89-bfce-d9dd5db946be": {
      "content": "{% set assets = craft.assets({\n\tsourceId: \"${1:1}\",\n\tkind: \"${2:image}\",\n\tlimit: ${3:10}\n}).all() %}\n\n{% for image in assets %}\n\t<img src=\"{{ image.url${4:(\"${5:thumb}\")} }}\" width=\"${6:200}\" height=\"${7:200}\" alt=\"{{ image.title }}\">\n{% endfor %}\n$0",
      "doc": "craft.assets - object syntax",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "assetso",
      "matches": {
        "assetso": true
      }
    },
    "d84556a8-066b-3cbc-8867-7dbca85e5bba": {
      "content": "import ${1:New} from '@/components/${1:New}.vue';",
      "doc": "Import one component into another",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-import-file",
      "matches": {
        "vimport": true,
        "vue import file": true
      }
    },
    "d8475762-0658-3fb6-9713-1aff7c4269ed": {
      "content": "list-style-type: decimal-leading-zero;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:dclz": true
      }
    },
    "d84e5b1c-3d44-3fa3-9704-bb340e09abbd": {
      "content": "expect($1).resolves$0",
      "doc": "expect promise resolves to",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-expect-resolves",
      "matches": {
        "expr": true,
        "jest expect resolves": true
      }
    },
    "d8581ba3-2a94-3838-9679-3fae17d602c4": {
      "content": "import { Injectable } from '@angular/core';\nimport { CanLoad, Route } from '@angular/router';\n\n@Injectable({providedIn: ${1:'root'}})\nexport class ${2:Name}Guard implements CanLoad {\n\tconstructor() { }\n\n\tcanLoad(route: Route) {\n\t\treturn true;$0\n\t}\n}",
      "doc": "Angular CanLoad guard",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-canload-guard",
      "matches": {
        "a-guard-can-load": true,
        "angular can load guard": true
      }
    },
    "d86470f5-8aea-30ae-84ef-329e8952571a": {
      "content": "$.ajaxStart(function () {\n\t${1:// handler for when an AJAX call is started and no other AJAX calls are in progress};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstart": true
      }
    },
    "d865651b-0dcf-3e43-b8ff-112177d279bd": {
      "content": "${1:obj}.show('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "show": true
      }
    },
    "d873314b-d0eb-36b5-91f8-21bb01e76d70": {
      "content": "{% load $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "load": true
      }
    },
    "d87803fa-cb7e-3de6-aaca-0a9a22a541fe": {
      "content": "unless ${1:condition}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "unless .. do: ..",
      "matches": {
        "unless:": true
      }
    },
    "d880d3a4-2728-355a-b1ee-49e02f28df62": {
      "content": "function formatted-time(${1:time-format},${2:standard-numeric-time},${3:offset_or_system_offset})$0",
      "doc": "function formatted-time",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-formatted-time",
      "matches": {
        "function formatted-time": true
      }
    },
    "d8849d54-a911-36b1-81a5-6da30d348c42": {
      "content": "printf(\"${1:} = %f\\n\", $1);",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prf": true
      }
    },
    "d8855282-ecae-3c35-9b80-70fe676ac282": {
      "content": "if err := ${1:condition}; err != nil {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "If with inline error",
      "matches": {
        "ife": true
      }
    },
    "d88b202b-0a0a-30b9-a635-1136576cf6b2": {
      "content": "def ${1:fname}(${2:arg}) -> ${3:return_type}:\n\t${4:pass}$0",
      "doc": "Code snippet for function definition.",
      "filetype": "base",
      "grammar": "lsp",
      "label": "New function w/ return",
      "matches": {
        "deft": true
      }
    },
    "d8924cb8-58ce-3d65-89de-11c7b1ec830a": {
      "content": "Examples:\n/// --------------------\n/// ${1:example code}\n/// --------------------",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "Examples (Example)",
      "matches": {
        "Example": true
      }
    },
    "d89da0b3-1850-3c6b-b31e-79f63842a5cd": {
      "content": "$.ajaxStart ->\n\t${1:// handler for when an AJAX call is started and no other AJAX calls are in progress}\n${0}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstart": true
      }
    },
    "d89df013-04fe-321c-9440-5062185703a5": {
      "content": "import React, { Component, PropTypes } from 'react'\n\nclass ${TM_FILENAME_BASE} extends Component {\n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n${1}.propTypes = {\n\n}\n\nexport default ${1}",
      "doc": "Creates a React component class with PropTypes",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "reactClassCompomentPropTypes",
      "matches": {
        "rccp": true
      }
    },
    "d8a019c4-261b-3ae6-82ee-5365c95ba5b8": {
      "content": "for (int ${1:i} = ${2:10}; $1 >= 0; $1--)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "for loop (reverse)",
      "matches": {
        "forr": true
      }
    },
    "d8a493cd-294b-364c-b56d-1076d1d146d5": {
      "content": "_.zipWith(${arrays}, ${iteratee})",
      "doc": "_.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n  return a + b + c;\n});\n// => [1, 222]\n\nThis method is like `_.zip` except that it accepts `iteratee` to specify\nhow grouped values should be combined. The iteratee is invoked with the\nelements of each group: (...group).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-zipwith",
      "matches": {
        "lodash zipwith": true
      }
    },
    "d8ae2fb5-1eb0-3819-83ba-934657c97e32": {
      "content": "{@link ${1:#:target} ${0:#:label}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{link": true
      }
    },
    "d8b26556-9bce-36a2-90da-06dfe2c4dd0b": {
      "content": "v-text='${1:msg}'",
      "doc": "Expects: string",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "v-text",
      "matches": {
        "vText": true
      }
    },
    "d8c884f5-9cfa-3bea-a764-d2a8635bec83": {
      "content": "word-break: loose",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:l": true
      }
    },
    "d8cbafff-b700-36fd-a0f5-590f701e0991": {
      "content": "::: incremental\n\n- ${1:first}\n- ${2:second}\n- ${3:third}\n$0\n\n:::",
      "doc": "Insert incremental list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert incremental list",
      "matches": {
        "incremental list": true
      }
    },
    "d8d52d70-71a8-3b14-9bb5-01ab1165f97e": {
      "content": "assert_same ${1:expected}, ${2:actual}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "assert_same(..)",
      "matches": {
        "ass": true
      }
    },
    "d8d996f9-eaff-36fa-b367-f3f71bc3d3ce": {
      "content": "leave-class='$1'$0",
      "doc": "leave-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "leave-class",
      "matches": {
        "leaveClass": true
      }
    },
    "d8dfe84b-772d-3cc8-b2ea-88d316ae874b": {
      "content": "final ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fi": true
      }
    },
    "d8e26e0f-0af2-36a2-9150-57f9a6061636": {
      "content": ".. hint:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "hint",
      "matches": {
        "hint": true
      }
    },
    "d8e2a34e-53e5-3252-9973-29e98e445b44": {
      "content": "- (${1:id})${2:method}\n{\n\t[super $2];${0}\n\treturn self;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm": true
      }
    },
    "d8e3386d-1669-3399-8ac0-eba40f00d9f9": {
      "content": "{% block extrahead %}\n    $1\n{% endblock extrahead %}",
      "doc": "Extrahead no oficial tag",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "extrahead",
      "matches": {
        "extrahead": true
      }
    },
    "d8e5b90c-b1a4-340a-9408-f8be1313d8fc": {
      "content": "each_char { |${1:chr}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "each_char { |chr| .. }",
      "matches": {
        "eac-": true
      }
    },
    "d8e7121a-9bfc-37aa-bd6d-48f07a3382b5": {
      "content": "class ${1} {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cla": true
      }
    },
    "d8ebc2cc-f57d-3d31-a283-d9f558904f16": {
      "content": "flexWrap: '${1}',",
      "doc": "flexWrap",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "flexWrap",
      "matches": {
        "flex": true
      }
    },
    "d8f4ec12-4c64-3a4c-8f67-0d27c698e7c8": {
      "content": "import { Routes } from '@angular/router';\n\nexport const routes: Routes = [${0}]",
      "doc": "Route definitions",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Route definitions",
      "matches": {
        "a-routes": true
      }
    },
    "d8f9a248-3f40-3d51-9bde-04663c7d1e67": {
      "content": "distance_of_time_in_words",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "distance_of_time_in_words",
      "matches": {
        "dotiw": true
      }
    },
    "d8fbe529-9238-3e92-a515-29517fa62af7": {
      "content": "\"${1:key}\": ${0:value},",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Number",
      "matches": {
        "n": true
      }
    },
    "d8fc881a-dcdf-3b33-ba4d-e6225c5b80cc": {
      "content": "#+BEGIN_SRC emacs-lisp :tangle yes\n$0\n#+END_SRC",
      "doc": "elisp",
      "filetype": "org",
      "grammar": "lsp",
      "label": "elisp",
      "matches": {
        "elisp": true
      }
    },
    "d8fdf277-60f9-38b1-a0bf-a59939a1e3aa": {
      "content": "expect(${1:target}).toMatch(${2:pattern});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to match (js)",
      "matches": {
        "em": true
      }
    },
    "d8fe9689-e790-32d4-9023-ff84e575d7c9": {
      "content": "border-bottom-left-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdblrz": true
      }
    },
    "d90489d0-1fd4-3c25-9da6-86056342e563": {
      "content": "[${1:value} for ${2:value} in ${3:iterable} if ${4:condition}$0]",
      "doc": "List comprehension for creating a list based on existing lists, with conditional if statement.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "List comprehension if filter",
      "matches": {
        "lci": true
      }
    },
    "d90726a2-90b5-35c8-88e3-262dd840b740": {
      "content": "return this.httpClient.get('${1:url}');$0",
      "doc": "Angular HttpClient.get",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "HttpClient.get",
      "matches": {
        "a-httpclient-get": true
      }
    },
    "d90902b7-3a06-32c1-8d6e-d7d1d73ae4aa": {
      "content": "else\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "d922cbf6-ce21-3291-9c01-e8dd9c7ddfdf": {
      "content": "\\draw[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\draw": true,
        "draw": true
      }
    },
    "d9264deb-a35b-3dfa-b778-fabdc5f2ee54": {
      "content": "{% block ${1:name} %}\n\t$0\n{% endblock %}",
      "doc": "block (block)",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "blockb",
      "matches": {
        "blockb": true
      }
    },
    "d931c50d-7412-38c9-8b1b-9be4f19b2197": {
      "content": "# -*- coding: ascii -*-",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cascii": true
      }
    },
    "d935f880-7628-3e80-becd-e08605b0bb4b": {
      "content": "${1:public} ${2:void} ${3}(${4})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m": true
      }
    },
    "d9366f52-e063-352a-a0dc-7ed957c162c2": {
      "content": "<output name=\"$1\" for=\"$2\">$3</output>$4",
      "doc": "HTML - Defines some types of output",
      "filetype": "html",
      "grammar": "lsp",
      "label": "output",
      "matches": {
        "output": true
      }
    },
    "d94303c2-e8a4-3ed2-89bf-6905d9bb96fa": {
      "content": "\"net.liftweb\" %% \"${0:lib}\" % liftVersion % \"compile->default\",",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liftjar": true
      }
    },
    "d94583d6-d4b2-31a8-a0e2-af7693c9df9d": {
      "content": "::after",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "::a": true
      }
    },
    "d94bf44c-68d4-3af4-86fb-b6a48f27caf5": {
      "content": "${1:FIELDNAME} = forms.DateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateTimeField",
      "matches": {
        "fdatetime": true
      }
    },
    "d9510f92-ad9a-3d96-9bc3-e13fef48d14f": {
      "content": "<abbr title=\"${1}\">${0}</abbr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abbr": true
      }
    },
    "d95ceccd-0e66-3e4f-a743-7e52d9c259b4": {
      "content": "case ${1}:\n  ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      }
    },
    "d9603a98-3fd4-3db6-a9f0-bdff9e646a9b": {
      "content": "Element Text Should Be    ${${1:locator}}    ${2:${expected}}    ${3:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Text Should Be",
      "matches": {
        "etsb": true
      }
    },
    "d961452e-c788-38ca-b1d3-705a9334ed93": {
      "content": "id:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "id:",
      "matches": {
        "id": true
      }
    },
    "d964ff11-fe51-3430-ab5e-64f227690e33": {
      "content": "console.assert(${1:expression}, ${2:object});",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoleassert",
      "matches": {
        "base console assert": true
      }
    },
    "d969fbeb-740b-33c1-a8a4-a7d6db54bc3b": {
      "content": "imagePullPolicy: ${1:imagePullPolicy}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imagePullPolicy_spec": true
      }
    },
    "d96d1d1e-bda8-3507-945b-08fc2858e89d": {
      "content": "expect(${1:target}).not.toEqual(${2:value})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect not to equal (coffee)",
      "matches": {
        "note": true
      }
    },
    "d96e65e7-d173-378c-876c-7f6bf9fcb5b7": {
      "content": "z-index: ${0:-1};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "z-index",
      "matches": {
        "zi": true
      }
    },
    "d96f5e92-89ff-34ad-b38c-28240d1b1d35": {
      "content": "list-style-type: ${1:none/disc/circle/square};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: marker(list)",
      "matches": {
        "list": true
      }
    },
    "d970d791-0968-3134-a8d5-1356c96d7b1a": {
      "content": "_.sortedLastIndex(${array}, ${value})",
      "doc": "_.sortedLastIndex([4, 5, 5, 5, 6], 5);\n// => 4\n\nThis method is like `_.sortedIndex` except that it returns the highest\nindex at which `value` should be inserted into `array` in order to\nmaintain its sort order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sortedlastindex",
      "matches": {
        "lodash sortedlastindex": true
      }
    },
    "d97c764d-28a3-3b20-8132-410dddb11d8e": {
      "content": "set(${1:arg}: ${2:type}) {\n\t$0\n}",
      "doc": "Snippet for set block",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "set",
      "matches": {
        "set": true
      }
    },
    "d97ecbe2-b187-335d-8b9c-75fd0ac53241": {
      "content": "word-wrap: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      }
    },
    "d981484e-bafe-332f-8006-56aa876ab593": {
      "content": "| img_tag: '${1:alt}', '${2:class}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "img_tag_param": true
      }
    },
    "d981f55a-1067-3009-8105-486a08c511f8": {
      "content": "for (${1:int} ${2:i} = ${3:0}; $2 < ${4}; $2++) {\n    ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "for () {}",
      "matches": {
        "for": true
      }
    },
    "d9826efa-2101-384d-a51e-e8a3732ea3a2": {
      "content": "assert_rjs :${1:replace}, '${0:dom id}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrj": true
      }
    },
    "d9830a74-da91-3ba5-81d3-3d17caeb9223": {
      "content": "case ${1:test}\nwhen $2\n\t$3\nwhen $4\n\t$5\nelse\n\t$6\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "d986e35e-bb7b-3d81-a7e6-a4e537716f23": {
      "content": "module.exports = {\n\t$0\n};",
      "doc": "Module exports from Common JS, node syntax at ES6",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "moduleExports",
      "matches": {
        "mde": true
      }
    },
    "d9894270-14a5-3a1d-b2a5-5c172996aa8a": {
      "content": "(defmacro ${1:name} \"${2:doc-string}\" ${0:dispatch-fn})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defma": true
      }
    },
    "d98eb69f-1a3a-3db0-a9a0-85086ae43e1f": {
      "content": "text-emphasis circle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:c": true
      }
    },
    "d992343c-2cda-3329-9536-3bc2fe28f3c8": {
      "content": "float: right;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:r": true
      }
    },
    "d99446e6-f748-3af6-bb35-ef731b4d4433": {
      "content": "_.mean(${array})",
      "doc": "_.mean([4, 2, 8, 6]);\n// => 5\n\nComputes the mean of the values in `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-mean",
      "matches": {
        "lodash mean": true
      }
    },
    "d99e54f2-640d-3d26-a61f-86d2233eca54": {
      "content": "beforeAll(function() {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "before all (js)",
      "matches": {
        "befa": true
      }
    },
    "d9a1848a-3daa-35c0-8389-8bde39e59b20": {
      "content": "<section id=\"${1}\">\n\t${0}\n</section>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "section#": true
      }
    },
    "d9a2a36a-d43c-38e3-b08f-3d52b99ba986": {
      "content": "\\${${3:result}}=    Run Keyword And Return Status    ${1:${kw}}    ${2:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return Status",
      "matches": {
        "rkars": true
      }
    },
    "d9a97346-db37-330a-a1c4-c118518ea74d": {
      "content": "@testset \"${1}\" begin\n\t${2}\n\t@test ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "@testset with @test",
      "matches": {
        "@t": true
      }
    },
    "d9be8a99-6a8f-360f-a489-94c8750020cb": {
      "content": "private ${1:String} ${2:name};",
      "doc": "Private field",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Private field",
      "matches": {
        "private_field": true
      }
    },
    "d9bf143d-3bcd-3fd4-bc5f-aaf0d951884e": {
      "content": "mixed.test()",
      "doc": "mixed.test(options: object): Schema\n\nAlternative test(..) signature. options is an object containing some of the following options:Options = {\n  // unique name identifying the test\n  name: string;\n  // test function, determines schema validity\n  test: (value: any) => boolean;\n  // the validation error message\n  message: string;\n  // values passed to message for interpolation\n  params: ?object;\n  // mark the test as exclusive, meaning only one of the same can be active at once\n  exclusive: boolean = false;\n}\nIn the case of mixing exclusive and non-exclusive tests the following logic is used.\nIf a non-exclusive test is added to a schema with an exclusive test of the same name\nthe exclusive test is removed and further tests of the same name will be stacked.If an exclusive test is added to a schema with non-exclusive tests of the same name\nthe previous tests are removed and further tests of the same name will replace each other.let max = 64;\nlet schema = yup.mixed().test({\n  name: \"max\",\n  exclusive: true,\n  params: { max },\n  message: \"${path} must be less than ${max} characters\",\n  test: value => value == null || value.length <= max\n});",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-test",
      "matches": {
        "yup mixed test": true
      }
    },
    "d9c34f89-c6f0-3b62-947d-e255df123e67": {
      "content": "#include <stdio.h>\n\nint main (int argc, char *argv[])\n{\n\t$0\n\treturn 0;\n}",
      "doc": "A standard starter template for a C program",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Standard Starter Template",
      "matches": {
        "sst": true
      }
    },
    "d9c57cba-8074-3f5b-8ff0-2f6f9a92a20c": {
      "content": "border-image url(${1}) ${2:0} ${3:0} ${4:0} ${5:0} ${6:stretch} ${0:stretch}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi": true
      }
    },
    "d9c600dd-bf56-3918-b186-df68471ecd59": {
      "content": "if ${1:true} then\n\t${0:TARGET}\nend if",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "d9c71ba1-e71d-3eb6-83ee-67b8f91a44a5": {
      "content": "global )",
      "doc": "Create a global",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "global",
      "matches": {
        "global": true
      }
    },
    "d9c885c8-1c21-3841-bb7f-b7ca7c90d73c": {
      "content": "System.Collections.Generic",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.c.g": true
      }
    },
    "d9ca6ace-0e10-393b-82da-a8f90bed8f5c": {
      "content": "~${1:${TM_SELECTED_TEXT}}~$0",
      "doc": "Insert subscript",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert subscript",
      "matches": {
        "subscript": true
      }
    },
    "d9dac122-4a5f-3d07-bf8a-8e45efab1fdf": {
      "content": "{% unless ${1:condition} %}\n\t$2\n{% endunless %}",
      "doc": "Control flow tag: unless",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag unless",
      "matches": {
        "unless": true
      }
    },
    "d9daeecf-c5e0-366e-929a-171bc222551d": {
      "content": "\\documentclass[${1}]{${2:article}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\documentclass": true,
        "documentclass": true
      }
    },
    "d9db9951-4809-329e-bbd6-159493b7bc1f": {
      "content": "identification division.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "identification division",
      "matches": {
        "id": true,
        "identification division": true
      }
    },
    "d9e1a087-22a0-3fff-a95e-ebff24b83d2e": {
      "content": "[\n\t${VISUAL}$0\n],",
      "doc": "",
      "filetype": "json",
      "grammar": "snu",
      "label": "Array",
      "matches": {
        "a": true
      }
    },
    "d9ea4490-2bd9-38af-abbe-6cfe947a04df": {
      "content": "{% comment %}${1:#:comment}{% endcomment %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "d9ed656c-f8f7-3aa7-aa0f-3359a4c42064": {
      "content": "[[NSUserDefaults standardUserDefaults] setObject:${1:object} forKey:${2:key}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "WriteDefaultsValue",
      "matches": {
        "wdef": true
      }
    },
    "d9f111d8-4b58-3307-8890-6f8d4b569be2": {
      "content": "outline-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "os": true
      }
    },
    "d9fae5a5-b991-3447-a344-4851b7fd4c33": {
      "content": "it { should allow_mass_assignment_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isama": true
      }
    },
    "d9fc9995-47da-3e9c-a0c8-82a83a565239": {
      "content": "Vue.component(${1:id}${2:, [definition]})$0",
      "doc": "Vue.component( id, [definition] )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "component",
      "matches": {
        "VueComponent": true
      }
    },
    "d9fed501-f55a-3a28-995f-3d9e04566918": {
      "content": "| ${1:Column1}    | ${2:Column2}    | ${3:Column3}    |\n|---------------- | --------------- | --------------- |\n| ${4:Item1.1}    | ${5:Item2.1}    | ${6:Item3.1}    |\n${0}",
      "doc": "Insert table with 2 rows and 3 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 2x3 table",
      "matches": {
        "2x3table": true
      }
    },
    "da089930-1822-3c05-876d-347e68eed0fd": {
      "content": "border-bottom-left-image: continue;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:c": true
      }
    },
    "da0afb3b-8c03-30b9-a4f7-f9dac955b90a": {
      "content": "${1}:\nloop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named loop",
      "matches": {
        "named_loop": true
      }
    },
    "da0c1460-f7ab-33cd-8cb8-8e2c1bcf9197": {
      "content": "font-size-adjust ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      }
    },
    "da10e654-ab7a-3670-972a-810aeac6e56d": {
      "content": "has('patch-${1}')",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-version-check-new",
      "matches": {
        "version_new": true
      }
    },
    "da126b6a-19c3-3f81-a41a-5a13f58546f3": {
      "content": "line-height: ${0:1.5};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "line-height",
      "matches": {
        "lh": true
      }
    },
    "da15c296-859c-3f03-9dfc-49a5a98d0ac2": {
      "content": "${fn:join(${1:collection}, ${0:delims})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "da192d42-dd6c-3edc-893e-a077d0cb3a41": {
      "content": "qr/\n     ${0:regex}\n/xms",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "qrx": true
      }
    },
    "da19db85-0130-37f8-9448-dd1fd3f7a55f": {
      "content": "{% layout none %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "layoutnone": true
      }
    },
    "da1cc2d2-dc18-39e1-bcbf-cb5c16699cf1": {
      "content": "bind:group={${1:variable}}",
      "doc": "bind group",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-group",
      "matches": {
        "s-bind-group": true
      }
    },
    "da20438e-ec32-388f-9370-b200b24b5209": {
      "content": "${1:obj}.text(${2:'some text'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "text": true
      }
    },
    "da23e6b0-6e49-3f87-be3f-1343b69708b1": {
      "content": "<%inherit file=\"${0:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inherit": true
      }
    },
    "da26747e-2921-3bd9-912a-968a0196b475": {
      "content": "PropTypes.object.isRequired,",
      "doc": "Object prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeObjectRequired",
      "matches": {
        "ptor": true
      }
    },
    "da2ea5b2-a3f9-39f5-8993-c81e817b244a": {
      "content": "{% url $1 %}",
      "doc": "url tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "url",
      "matches": {
        "url": true
      }
    },
    "da2ff17b-6056-3210-bdc1-e35a3201b852": {
      "content": "Return From Keyword If    '\\${${1:rc}}' != '${2:abc}'    ${3:${optional return value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Return From Keyword If",
      "matches": {
        "rfki": true
      }
    },
    "da33d37f-b54b-3a7f-9f7a-bd85acc6d631": {
      "content": "const mapStateToProps = (state) => ({\n\t${1}\n})\n\nconst mapDispatchToProps = {\n\t\n}",
      "doc": "Creates mapStateToProps function.",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-map-to-props",
      "matches": {
        "redux map props": true
      }
    },
    "da358f5a-4b98-33b0-93f2-2835a730ca40": {
      "content": "_.inRange(${number}, ${start}, ${end})",
      "doc": "_.inRange(3, 2, 4);\n// => true\n\n_.inRange(4, 8);\n// => true\n\n_.inRange(4, 2);\n// => false\n\n_.inRange(2, 2);\n// => false\n\n_.inRange(1.2, 2);\n// => true\n\n_.inRange(5.2, 4);\n// => false\n\n_.inRange(-3, -2, -6);\n// => true\n\nChecks if `n` is between `start` and up to, but not including, `end`. If\n`end` is not specified, it's set to `start` with `start` then set to `0`.\nIf `start` is greater than `end` the params are swapped to support\nnegative ranges.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-inrange",
      "matches": {
        "lodash inrange": true
      }
    },
    "da37a569-1fc8-3246-9478-de54cfac5579": {
      "content": "height=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "height": true
      }
    },
    "da389156-e55d-3cb5-98de-60c14e739ae4": {
      "content": "scanf(\"$1\"$0);",
      "doc": "Generic scanf() snippet",
      "filetype": "c",
      "grammar": "lsp",
      "label": "scanf",
      "matches": {
        "scanf": true
      }
    },
    "da3903b9-3c0f-31fe-8ffd-c8b5253ddd8e": {
      "content": "grid-row-end ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gre": true
      }
    },
    "da3b1494-3e62-3e98-83b6-ab936eafcb70": {
      "content": "impl ${1:Type/Trait}${2: for $3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Struct/Trait implementation",
      "matches": {
        "impl": true
      }
    },
    "da3cd868-daff-3ff2-b665-5dc361c0da08": {
      "content": "| abs",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abs": true
      }
    },
    "da3ff87b-19a1-38f0-a79e-aefd149027e6": {
      "content": "_.rangeRight(${start}, ${end}, ${step})",
      "doc": "_.rangeRight(4);\n// => [3, 2, 1, 0]\n\n_.rangeRight(-4);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 5);\n// => [4, 3, 2, 1]\n\n_.rangeRight(0, 20, 5);\n// => [15, 10, 5, 0]\n\n_.rangeRight(0, -4, -1);\n// => [-3, -2, -1, 0]\n\n_.rangeRight(1, 4, 0);\n// => [1, 1, 1]\n\n_.rangeRight(0);\n// => []\n\nThis method is like `_.range` except that it populates values in\ndescending order.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-rangeright",
      "matches": {
        "lodash rangeright": true
      }
    },
    "da43f0c9-4e22-3a0b-b18d-6b183c310a0a": {
      "content": "place-items: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      }
    },
    "da47db81-abfe-330a-899a-16cd4fba99e8": {
      "content": "before_action :${0:method}",
      "doc": "before_action",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before action",
      "matches": {
        "ba": true
      }
    },
    "da4c20e1-a65d-32a6-b5bd-f151b20f1e91": {
      "content": "_.isError(${value})",
      "doc": "_.isError(new Error);\n// => true\n\n_.isError(Error);\n// => false\n\nChecks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n`SyntaxError`, `TypeError`, or `URIError` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-iserror",
      "matches": {
        "lodash iserror": true
      }
    },
    "da4ce68b-1b69-3bff-9e67-f74da00cfae7": {
      "content": "+ (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n${0}\n\treturn nil;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "ClassMethod",
      "matches": {
        "cm": true
      }
    },
    "da4fc574-df58-3351-8b35-b2889d8e8fe6": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      }
    },
    "da5b9d24-fd0f-39b2-9148-89937166c1a9": {
      "content": "byte",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "byte",
      "matches": {
        "bt": true
      }
    },
    "da61e170-bcb0-313d-b702-8bfdf7607186": {
      "content": "\\\\label{${1:eq:}${2:fig:}${3:tab:}${0}}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\label",
      "matches": {
        "lab": true
      }
    },
    "da63d484-a636-3079-8cbe-4eef1630c758": {
      "content": "+ (${1:id})${2:method}\n{\n\t${0:return nil;}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "M": true
      }
    },
    "da6507b4-27dd-3941-ab2f-ae45dc9931c6": {
      "content": "${1:obj}.focusIn (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focusin": true
      }
    },
    "da65774b-bb43-3fec-be9f-c9bfa8017f98": {
      "content": "border-right ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      }
    },
    "da67f719-0a60-3349-8ea0-adae36b71389": {
      "content": "${1:ptr} = (${2:type}*) malloc(sizeof($2));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mlc": true
      }
    },
    "da6ba7ca-3a81-39f3-a50c-bd40f9bbff25": {
      "content": "outline-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ow": true
      }
    },
    "da827114-e3f7-3e54-ad20-889c6d0bd777": {
      "content": "foreach (\\$${1:variable} as \\$${2:key} ${3:=> \\$${4:value}}) {\n\t${0:# code...}\n}",
      "doc": "Foreach loop",
      "filetype": "php",
      "grammar": "lsp",
      "label": "foreach …",
      "matches": {
        "foreach": true
      }
    },
    "da827315-011e-3cd9-bc5d-eb6875ff223a": {
      "content": "each_key do |${1:key}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eakd": true
      }
    },
    "da8424b4-e2bc-3cf5-97b2-c7b926ae093d": {
      "content": "| reverse",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reverse": true
      }
    },
    "da847bf6-4f9c-3fc0-bab4-4671ddbbec6e": {
      "content": "void setup()\n{\n\tSerial.begin(${1:9600});\n\t${2}\n}",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setup": true
      }
    },
    "da866f9a-450c-372e-8095-7f246ef82213": {
      "content": "printf(\"${1:%s}\\n\", ${2})${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "printf",
      "matches": {
        "printf": true
      }
    },
    "da89a610-54be-369d-bafe-8023bc535ab3": {
      "content": "<small>${0}</small>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "small": true
      }
    },
    "da8a54f7-61a1-3ee1-9010-6ca8240461a5": {
      "content": "<syntaxhighlight lang=\"${1}\">\n${2}\n</syntaxhighlight>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sy": true
      }
    },
    "da8f4079-d025-34eb-afae-7a2607af17f2": {
      "content": "background-position-x: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgpx": true
      }
    },
    "da913a16-de09-3f40-9bd0-6e2c697e170b": {
      "content": "file_exists(${1:file})$0",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "file_exists",
      "matches": {
        "fe": true
      }
    },
    "da9af472-0a13-3357-a5fb-95928c4b9637": {
      "content": "setattr(${1:#:obj}, ${2:#:attr}, ${3:#:value})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "setattr(..., ...)",
      "matches": {
        "setattr": true
      }
    },
    "da9f21ec-1f5f-3b04-9956-d4ef28c64cc1": {
      "content": "false",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "false",
      "matches": {
        "f": true
      }
    },
    "daa6fc67-b90b-3f31-a8d1-10c3f53b1ba2": {
      "content": "margin ${1:0} ${2:0} ${0:0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:3": true
      }
    },
    "daaa8e4c-2e60-35f7-ad4c-4a987593ec5e": {
      "content": "${1:FIELDNAME} = serializers.FloatField(${2})",
      "doc": "Django-rest Serializers ``FloatField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF FloatField",
      "matches": {
        "sfloat": true
      }
    },
    "dab178b2-a2d4-3470-97d8-ec1cc4a4decf": {
      "content": "var (\n\t${1:name} ${2:type} = ${3:value}\n)",
      "doc": "Snippet for a variable",
      "filetype": "go",
      "grammar": "lsp",
      "label": "variables declaration",
      "matches": {
        "vars": true
      }
    },
    "dabb50fb-b283-32d5-b934-dd824d497b1b": {
      "content": "module ${1:(* Name *)} : ${2:(* SIG *)} = struct\n\t${3:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module with signature",
      "matches": {
        "Mod": true
      }
    },
    "dabf05ff-366c-3b21-ab14-83f0ad76fe30": {
      "content": "hasOwnProperty(${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      }
    },
    "dac1412f-7312-36bf-a4dd-321b4571f1e3": {
      "content": "widows: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wid": true
      }
    },
    "dac1904a-b407-3b0f-8571-4e68dce3a1f6": {
      "content": "page-break-before ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb": true
      }
    },
    "dac38aab-d87f-3197-92f3-de710b99f14c": {
      "content": "\\texttt{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\texttt": true,
        "texttt \\texttt{": true
      }
    },
    "dac742f1-a1aa-3385-bea9-3fb19ce0a99e": {
      "content": "minval(${1:source}${2:, dim=${3:1}}${4:, mask=${5:($1>0)}})",
      "doc": "Minimum Value",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "minval",
      "matches": {
        "minval": true
      }
    },
    "dac7adc2-1b8d-39bc-be5c-e90114ec6c9a": {
      "content": "visibility: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      }
    },
    "dac962d8-3019-3578-96bf-80ed0171ad95": {
      "content": "func $1(${2:w} http.ResponseWriter, ${3:r} *http.Request) {\n\t$0\n}",
      "doc": "Snippet for http handler declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "http handler declaration",
      "matches": {
        "hand": true
      }
    },
    "dacdacc2-d98d-3633-9db7-063e91b87c8c": {
      "content": "require(${0:package})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "req": true
      }
    },
    "dacdfef6-60ee-3972-989f-5368ab81973d": {
      "content": "$this->shouldNotBeAnInstanceOf($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldNotBeAnInstanceOf('Type')",
      "matches": {
        "snbinstance": true
      }
    },
    "dacf20ee-01f1-39c6-a310-851edbeef3cb": {
      "content": "white-space: pre-line;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:pl": true
      }
    },
    "dacf9c0e-1938-33c5-9e25-e32f95b833f6": {
      "content": "align-items: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      }
    },
    "dadb54a5-2414-3b8a-b8ae-2f3d5f2a4775": {
      "content": "[${1:#:link_id}][]${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link][]",
      "matches": {
        "link": true
      }
    },
    "dadf5d23-2449-36f3-8282-35aa99d4b985": {
      "content": "| floor",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "floor": true
      }
    },
    "dae226c4-3d90-3046-ba30-d57397def54e": {
      "content": "after_destroy :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mad": true
      }
    },
    "dae789f0-6f24-3ac0-a812-ef53a6400490": {
      "content": "<router-view>$1</router-view>$0",
      "doc": "router-view element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-routerview",
      "matches": {
        "routerview": true,
        "vue routerview": true
      }
    },
    "daee169d-77c0-3057-8335-e3d9be44f217": {
      "content": "<%= if ${1} do %>\n\t${2:${VISUAL}}\n<% else %>\n\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "daf7a43e-7110-3167-98c5-2bd313a75114": {
      "content": "class ${1:MODEL_NAME}CreateView(CreateView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Create View",
      "matches": {
        "createview": true
      }
    },
    "daf8a66b-d8bb-3c74-9153-11029253e44d": {
      "content": "const ${1:memoizedCallback} = useCallback(\n\t() => {\n\t\t${2:doSomething}(${3:a}, ${4:b})\n\t},\n\t[${5:a}, ${6:b}],\n)$0",
      "doc": "React useCallback() hook",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "useCallback",
      "matches": {
        "ucb": true
      }
    },
    "db00fb2b-2251-3374-9367-e1a4cde07887": {
      "content": "List<${1:listName}> ${2:items} = $1.findAll();",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "findall": true
      }
    },
    "db0476b5-55ca-3365-99ce-adfdea2f549c": {
      "content": "failwith \"${0:TARGET}\"",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "failwith \"...\"",
      "matches": {
        "fail": true
      }
    },
    "db05996a-4826-37c1-9dfb-9046c1e7b3bd": {
      "content": "array.of()",
      "doc": "array.of(type: Schema): Schema\n\nSpecify the schema of array elements. of() is optional and when omitted the array schema will\nnot validate its contents.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "array-of",
      "matches": {
        "yup array of": true
      }
    },
    "db062bde-b3f2-36da-bb5a-2d3c9ff6871e": {
      "content": "overflow-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      }
    },
    "db0de759-eb96-3b94-81fb-4f16b8e8b016": {
      "content": "object.shape()",
      "doc": "object.shape(fields: object, noSortEdges?: Array<[string, string]>): Schema\n\nDefine the keys of the object and the schemas for said keys.Note that you can chain shape method, which acts like object extends, for example:object({\n  a: string(),\n  b: number()\n}).shape({\n  b: string(),\n  c: number()\n});\nwould be exactly the same as:object({\n  a: string(),\n  b: string(),\n  c: number()\n});",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-shape",
      "matches": {
        "yup object shape": true
      }
    },
    "db15f6c9-67c4-348c-a299-d38f98a341c4": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-required",
      "matches": {
        "prop-types array required": true,
        "ptar": true
      }
    },
    "db201bc4-4be0-38d1-ac1f-3e34a05968f8": {
      "content": "read(unit=${1:iounit}, fmt=\"(${2:format string})\", iostat=${3:istat}, advance='NO', size=${4:number of characters}) ${5:variables}\r\nif ( $3 /= 0 ) stop \"Read error in file unit $1\"",
      "doc": "Read (Non Advancing Mode)",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "read",
      "matches": {
        "read": true
      }
    },
    "db219bc6-dfda-308c-a7ce-0b1ef50a499d": {
      "content": "${1:FIELDNAME} = JSONField()",
      "doc": "JSONField (fjson).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fjson",
      "matches": {
        "fjson": true
      }
    },
    "db2dffd6-a669-3290-bf91-1bb3c66b0e14": {
      "content": "ALTER TABLE ${1:tableName}\n\t ${2:intructions};",
      "doc": "Alter table",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "altert",
      "matches": {
        "altert": true
      }
    },
    "db2e5e9d-0851-3c0f-9f25-dc3531a101a3": {
      "content": "print!(\"${1}\");",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "print!",
      "matches": {
        "pri": true
      }
    },
    "db364f83-60b7-32a2-8c1e-dddce8922851": {
      "content": "it { should belong_to(:${1}).counter_cache ${0:true} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isbtcc": true
      }
    },
    "db3cabf5-946a-3704-b88c-f045752509fb": {
      "content": "text-wrap: unrestricted",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:u": true
      }
    },
    "db3fbe2e-8183-3e28-9114-45227198d28f": {
      "content": "font-weight: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:n": true
      }
    },
    "db414f25-1f0f-316a-b600-1e8654098ffa": {
      "content": "expect(${1:target}).toHaveBeenCalled();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to have been called (js)",
      "matches": {
        "ethbc": true
      }
    },
    "db446c8a-472b-321b-9c86-17fb48f2bf4d": {
      "content": "@before-leave=\"$1\"$0",
      "doc": "@before-leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-before-leave",
      "matches": {
        "beforeleaveevent": true,
        "vue before-leave": true
      }
    },
    "db5211be-b6ea-391c-a3a5-b2785ea95e48": {
      "content": "validates :${1:attribute}, uniqueness: true",
      "doc": "validates presence",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Validate uniqueness",
      "matches": {
        "vu": true
      }
    },
    "db53a6c6-d0c0-3dc8-b602-d34b19e57b1a": {
      "content": "this.setState((state, props) => { return { $0 }});",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      }
    },
    "db5b85a2-faff-3bf1-99cd-843d6b551348": {
      "content": "\\shade[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\shade": true,
        "shade": true
      }
    },
    "db63274c-9493-39e9-82e1-9253eaa0f7df": {
      "content": "place-content ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc": true
      }
    },
    "db65d7eb-0d6d-3814-a589-7721fecc1c91": {
      "content": "bundleRenderer.renderToStream",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "bundleRenderer.renderToStream",
      "matches": {
        "bundleRendererRenderToStream": true
      }
    },
    "db665f51-f342-36d1-a0e8-e829e252d6c7": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} pad ${4:BalanceAccount} ${5:PadAccount}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "pad",
      "matches": {
        "pad": true
      }
    },
    "db66a9d0-5e35-35ac-974e-13a94c6007f4": {
      "content": "_.pickBy(${object}, ${predicate})",
      "doc": "var object = { 'a': 1, 'b': '2', 'c': 3 };\n\n_.pickBy(object, _.isNumber);\n// => { 'a': 1, 'c': 3 }\n\nCreates an object composed of the `object` properties `predicate` returns\ntruthy for. The predicate is invoked with two arguments: (value, key).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-pickby",
      "matches": {
        "lodash pickby": true
      }
    },
    "db6d3c75-c2c0-3fa8-8eb8-19e351134baf": {
      "content": "MULTIPLY ${1:a} BY ${2:b} GIVING ${3:c}",
      "doc": "MULTIPLY a BY y GIVING z",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "MULTIPLY",
      "matches": {
        "MG": true,
        "MULTIPLY": true
      }
    },
    "db6edd02-2da8-3831-b8c8-80c4c844c5f6": {
      "content": "map[${1:string}]${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "map[Type]Type",
      "matches": {
        "map": true
      }
    },
    "db7b2401-bca0-3251-9795-de616d87035c": {
      "content": ":key='${1:key}'",
      "doc": "Expects: string. Children of the same common parent must have unique keys. Duplicate keys will cause render errors.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "key",
      "matches": {
        "key": true
      }
    },
    "db832148-2b0a-32fe-8a48-1220b40d7dc5": {
      "content": "unsafe {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unsafe {}",
      "matches": {
        "unsafe": true
      }
    },
    "db8d0a4d-fe5b-3a1d-9e61-963bceac13b9": {
      "content": "word-wrap: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:no": true
      }
    },
    "db8ff4a8-eb0d-33b1-97da-8c791bb84241": {
      "content": "desc '${1:Task description}'\ntask ${2:task_name: [:dependent, :tasks]} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tas": true
      }
    },
    "db913d12-f721-378e-acc0-efd610ddba6a": {
      "content": "setProperty(${1:#:target}, ${2:#:property}, ${3:#:value});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sp": true
      }
    },
    "db923596-848f-39e5-a719-45ff8e66ac43": {
      "content": "while {${1:condition}} {\n\t$2\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "while... (while)",
      "matches": {
        "while": true
      }
    },
    "db92b13d-b3f8-32d3-a394-d523f1fc810d": {
      "content": "echo \"${1:#:string}\";",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echo": true
      }
    },
    "db9b7f1b-9d10-3b33-91dc-3eeb962768c5": {
      "content": "{|class=\"wikitable\"\n|+ ${1}\n! ${2}\n! ${3}\n|-\n| ${4}\n| ${5}\n|-\n| ${6}\n| ${7}\n|-\n|\n|\n|}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{|": true
      }
    },
    "db9c8657-307e-3b01-b3b2-b055ad201ab3": {
      "content": "place-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:e": true
      }
    },
    "db9f66f3-1887-356a-ad5d-57881603fcd0": {
      "content": "border-bottom: ${1:1px} ${2|solid,dashed,dotted,double,groove,ridge,inset,outset,none,hidden|} ${0:#000};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "border-bottom",
      "matches": {
        "borb": true
      }
    },
    "dba0e11d-f547-3711-8859-e754d3352c77": {
      "content": "beforeCreate() {\n\t$1\n},",
      "doc": "Type: Function.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeCreate",
      "matches": {
        "beforeCreate": true
      }
    },
    "dba7f72b-eaa3-3de7-b271-52f347f7a607": {
      "content": "@inbook{${1:LABEL},\n    author/editor = {${2}},\n    title = {${3}},\n    chapter/pages = {${4}},\n    publisher = {${5}},\n    year = {${6}},\n    memo = {volume, series, address, edition, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@inbook": true,
        "inbook": true
      }
    },
    "dbaac3ca-d434-3c3b-b773-58c4a710add5": {
      "content": "target_link_libraries(${1:bin} ${0:somelib})",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link": true
      }
    },
    "dbaed332-63ab-3145-9982-9ea54bde9198": {
      "content": "#error ${0:#:message}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true,
        "error": true
      }
    },
    "dbbdbad6-3f2a-3d58-95c5-61e66d259772": {
      "content": "__import__('pprint').pprint(${1:expression})$0",
      "doc": "",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "Pretty print",
      "matches": {
        "pprint": true
      }
    },
    "dbc17871-ec50-33d9-9fa9-3c553d0ea5d8": {
      "content": "PropTypes.arrayOf($0).isRequired",
      "doc": "An array of a certain type required",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      }
    },
    "dbc66f99-b385-339b-9db6-d2fb661bd8f5": {
      "content": "@after-leave=\"$1\"$0",
      "doc": "@after-leave=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "after-leave",
      "matches": {
        "afterLeaveEvent": true
      }
    },
    "dbcc0c4f-21e7-36d7-b540-513e79812ed5": {
      "content": "protected function setUp()\n{\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "protected function setUp() { ... }",
      "matches": {
        "setup": true
      }
    },
    "dbcea999-2d99-3ce5-98bb-9775f1651b57": {
      "content": "font-style: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-style: normal",
      "matches": {
        "fstn": true
      }
    },
    "dbcee126-5fcc-378f-adbf-9e14100dde43": {
      "content": "@leave-cancelled=\"$1\"$0",
      "doc": "@leave-cancelled='' (v-show only)",
      "filetype": "html",
      "grammar": "lsp",
      "label": "leave-cancelled",
      "matches": {
        "leaveCancelledEvent": true
      }
    },
    "dbd90de5-b56d-3642-9ffc-7abd7d7d8cd8": {
      "content": "// @flow\nimport * as React from 'react';\ntype Props = {\n  $0\n};\ntype State = {\n  $1\n};\nexport class ${2:${TM_FILENAME_BASE}} extends React.Component<Props, State>{\n  render() {\n    return (\n      <div>\n        \n      </div>\n    );\n  };\n};",
      "doc": "Creates a React component class with FlowTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "flowClassComponent",
      "matches": {
        "fcc": true
      }
    },
    "dbe730d6-2c09-3d2b-8fad-77bf8035a10c": {
      "content": "${1:FIELDNAME} = models.FloatField($2)",
      "doc": "FloatField (mfloat).\n\nA floating-point number represented in Python by a float instance.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mfloat",
      "matches": {
        "mfloat": true
      }
    },
    "dbeb7711-61b3-3aab-ba44-a125e525f5cc": {
      "content": "FUNCTION CHAR(${1:integer})$0",
      "doc": "function character in the ordinal position specified by integer, from the current alphanumeric collating sequence",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-CHAR",
      "matches": {
        "FUNCTION CHAR": true
      }
    },
    "dbf03c81-57b4-31be-b631-50c9c3fc935c": {
      "content": "<progress value=\"$1\" max=\"$2\">$3</progress>$4",
      "doc": "HTML - Defines progress of a task of any kind",
      "filetype": "html",
      "grammar": "lsp",
      "label": "progress",
      "matches": {
        "progress": true
      }
    },
    "dbf3e04a-be19-3c44-9d19-59dbd089778e": {
      "content": "padding-top: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      }
    },
    "dbf4b0bd-864f-3910-8179-fc85a3599b3d": {
      "content": "<colgroup>\n\t${0}\n</colgroup>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "colgroup": true
      }
    },
    "dbf5543f-0d7c-35b0-a5d8-bd20e6d5a63e": {
      "content": "[Teardown]    Run Keyword If Test Failed    Run Keywords\n...    Import library    Dialogs    AND\n...    Pause execution",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Teardown Pause - pause test execution only on failure",
      "matches": {
        "tpause": true
      }
    },
    "dbf81b78-42cc-342b-9833-86e6d50db196": {
      "content": "require 'test/unit'\n\nrequire '${1:library_file_name}'\n\nclass Test${2:$1} < Test::Unit::TestCase\n\tdef test_${3:case_name}\n\t\t${0}\n\tend\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tc": true
      }
    },
    "dbf94e86-7cb6-3b8d-869a-7d10f2fac0c4": {
      "content": "slice:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "slice": true
      }
    },
    "dbfd9b99-fa69-35cf-a7f1-0edbfab30ca7": {
      "content": "_.flatten(${array})",
      "doc": "_.flatten([1, [2, [3, [4]], 5]]);\n// => [1, 2, [3, [4]], 5]\n\nFlattens `array` a single level deep.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatten",
      "matches": {
        "lodash flatten": true
      }
    },
    "dbff28fd-8d2a-3a09-87f5-60b8dcfddfe4": {
      "content": "\\filldraw[${1}] ${2};${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\filldraw": true,
        "filldraw": true
      }
    },
    "dc007a09-c881-385f-9cbd-08557109b50a": {
      "content": "<ul class=\"${1}\">\n\t${0}\n</ul>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ul.": true
      }
    },
    "dc05a76c-f350-3e93-8ffa-3d2854934158": {
      "content": "Vue.set(${1:target}, ${2:key}, ${3:value})",
      "doc": "Vue.set( target, key, value )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "set",
      "matches": {
        "VueSet": true
      }
    },
    "dc05f32c-f6d6-395a-b5ef-0be94bd33799": {
      "content": "|${1|preventDefault,stopPropagation,passive,capture,once|}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-modifiers",
      "matches": {
        "svelte modifier": true,
        "svmodifier": true
      }
    },
    "dc075fd2-7325-34f7-897d-34612b97a00c": {
      "content": "nfc(${1:value}${2:, }${0:right});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nfc": true
      }
    },
    "dc0f291d-a983-3349-bdb4-6c2bff382847": {
      "content": "export default {\n\tstate: {\n\t\tvalue: 'my value'\n\t},\n\tgetters: {\n\t\tvalue: state => {\n\t\t\treturn state.value;\n\t\t}\n\t},\n\tmutations: {\n\t\tupdateValue(state, payload) {\n\t\t\tstate.value = payload;\n\t\t}\n\t},\n\tactions: {\n\t\tupdateValue({commit}, payload) {\n\t\t\tcommit('updateValue', payload);\n\t\t}\n\t}\n};",
      "doc": "vuex module",
      "filetype": "vuex",
      "grammar": "lsp",
      "label": "vuex-module",
      "matches": {
        "vmodule": true,
        "vuex module": true
      }
    },
    "dc139d34-89a5-3152-bdb5-098c96090118": {
      "content": "align-content: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fb": true
      }
    },
    "dc252f47-120f-35e4-9b32-bf03e36ddae8": {
      "content": "const express = require('express');\nconst app = express();\nconst port = process.env.PORT || ${1:port};\nconst www = process.env.WWW || '${2:./}';\napp.use(express.static(www));\nconsole.log(`serving \\${www}`);\napp.get('*', (req, res) => {\n\tres.sendFile(`index.html`, { root: www });\n});\napp.listen(port, () => console.log(`listening on http://localhost:\\${port}`));\n$0",
      "doc": "Node.js Express Server",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Node.js Express Server",
      "matches": {
        "ex-node-server-simple": true
      }
    },
    "dc333cef-0888-3815-a394-f8583aeb3f37": {
      "content": "@booklet{${1:LABEL},\n    title = {${2}},\n    memo = {author, howpublished, address, month, year, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@booklet": true,
        "booklet": true
      }
    },
    "dc359d56-64cc-3276-bb54-18d3d2faadb3": {
      "content": "import Vue from 'vue'\nimport ${1:HelloWorld} from './components/${1:HelloWorld}'\n\ndescribe('${1:HelloWorld}.vue', () => {\n\tit('${2:should render correct contents}', () => {\n\t\tconst Constructor = Vue.extend(${1:HelloWorld})\n\t\tconst vm = new Constructor().$mount()\n\t\texpect(vm.$el.querySelector('.hello h1').textContent)\n\t\t\t.to.equal(${3:'Welcome to Your Vue.js App'})\n\t})\n})",
      "doc": "unit test component",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-unit-test",
      "matches": {
        "vtest": true,
        "vue unit test": true
      }
    },
    "dc3e094e-defb-3737-8df9-f1bc7d1dc342": {
      "content": "do {\n  $0\n} while ($1);",
      "doc": "Insert a do-while loop.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "do while",
      "matches": {
        "do": true
      }
    },
    "dc421e55-b05a-3def-b978-adb4d2b1f654": {
      "content": "align-content: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:s": true
      }
    },
    "dc473696-c0c4-3acf-9583-1f0adc3bcadd": {
      "content": "borderTopRightRadius: ${1},",
      "doc": "borderTopRightRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderTopRightRadius",
      "matches": {
        "bor": true
      }
    },
    "dc4745a2-dd21-3573-899c-24b6116f1def": {
      "content": "grid-auto-rows: min-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gar:mic": true
      }
    },
    "dc490879-4f13-30fc-8cec-ea015bc99f31": {
      "content": "Stack<${1:Object}> ${2:stack} = new Stack<$1>();${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d.st": true
      }
    },
    "dc5013b0-bced-390a-b05a-ed192152f687": {
      "content": "var.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fte": true
      }
    },
    "dc52fc63-2d1c-3bea-9af2-0e179dd9ff58": {
      "content": "message(SEND_ERROR \"${1}\")",
      "doc": "",
      "filetype": "cmake",
      "grammar": "snu",
      "label": "message(SEND_ERROR \"...\")",
      "matches": {
        "send_error_message": true
      }
    },
    "dc619755-ae2b-3173-88a4-dd33ff46d7f1": {
      "content": "fieldsets = (\n\t(None, {\n\t\t'fields': (\n\t\t\t$1\n\t\t),\n\t}),\n)",
      "doc": "",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "fieldsets",
      "matches": {
        "fieldsets": true
      }
    },
    "dc61fe99-1ff3-34f5-8b0d-5122f30c2ae4": {
      "content": "Meta.parse(\"{$1:expression}\")",
      "doc": "Code snippet for parse an expression.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "parse expression",
      "matches": {
        "meta": true,
        "parse": true
      }
    },
    "dc67eb6f-af53-3de6-a7a5-978dfd01717d": {
      "content": "expect { ${1:object} }.to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "expb": true
      }
    },
    "dc7137a7-2551-39fd-a975-492775d9003b": {
      "content": "place-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:sa": true
      }
    },
    "dc77febf-d943-333c-b1ac-f0de00fa2f49": {
      "content": "white-space-collapse loose",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:l": true
      }
    },
    "dc78644b-1ba2-3b17-a313-f1a1bddc337b": {
      "content": "<sup>$1</sup>$2",
      "doc": "HTML - Defines super-scripted text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "sup",
      "matches": {
        "sup": true
      }
    },
    "dc7e6183-f4f5-3689-ac51-6de480859802": {
      "content": "background-attachment: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:s": true
      }
    },
    "dc7f1a6d-5b92-399c-9dc0-3ef2726a854b": {
      "content": "| last",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "last": true
      }
    },
    "dc821948-6ad6-35ae-a415-a9964191611a": {
      "content": "import pudb; pudb.set_trace()$0",
      "doc": "Code snippet for pudb debug",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "PuDB set trace",
      "matches": {
        "pudb": true
      }
    },
    "dc8571a9-2b48-32e6-a0b7-e308e7106807": {
      "content": "max-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      }
    },
    "dc88cc09-66ab-3ca9-b442-fbedc2752971": {
      "content": "${1:obj}.filter('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "dc8b6691-b793-3d65-945b-dccc30abc21a": {
      "content": "pragma abicoder v2;",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "pragma abicoder",
      "matches": {
        "pragm-abicoder": true
      }
    },
    "dc8b83e4-0bde-3d56-b7a5-515811e86a2e": {
      "content": "{% for image in craft.assets.\n\t.sourceId(\"${1:1}\")\n\t.kind(\"${2:image}\")\n\t.limit(${3:10})\n}).all() %}\n\t<img src=\"{{ image.url${4:(\"${5:thumb}\")} }}\" width=\"${6:200}\" height=\"${7:200}\" alt=\"{{ image.title }}\">\n{% endfor %}\n$0",
      "doc": "craft.assets",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "assets",
      "matches": {
        "assets": true
      }
    },
    "dc9a471f-08f5-3bd7-82f6-6d1ee554ca1f": {
      "content": "${1:FIELDNAME} = models.DateField($2, auto_now=${3:False}, auto_now_add=${4:False})",
      "doc": "DateField (mdate).\n\nA date, represented in Python by a datetime.date instance.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mdate",
      "matches": {
        "mdate": true
      }
    },
    "dc9d2b4b-fb0a-35cd-b443-bd54d12f7470": {
      "content": "#if\n\t${0}\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      }
    },
    "dca9698f-c90d-3ab4-8cf2-2cbc38884465": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;",
      "doc": "Create React Native Styled Components file",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-rn": true
      }
    },
    "dcace3b9-2cbf-3f2d-8922-72915dd71cdc": {
      "content": "box-shadow ${1:0} ${2:0} ${3:0} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh+": true
      }
    },
    "dcb599da-ab2a-3c8a-996f-85f04c68254c": {
      "content": ".then((${1:result}) => {\n\t${2}\n}).catch((${3:err}) => {\n\t${4}\n});",
      "doc": "Add the .then and .catch methods to handle promises",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "thenCatch",
      "matches": {
        "thenc": true
      }
    },
    "dcb75460-3d1d-3fb4-9c01-b3a9f2cd9c68": {
      "content": "t.timestamps\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tctss": true
      }
    },
    "dcb7ba33-db8c-35e2-ab0a-3221b9b37424": {
      "content": "<Head>\n${1:content}\n</Head>",
      "doc": "",
      "filetype": "next",
      "grammar": "lsp",
      "label": "next-head",
      "matches": {
        "next head": true
      }
    },
    "dcbaa29e-2294-3afc-b1d6-682a75c06534": {
      "content": "mixed.isType()",
      "doc": "mixed.isType(value: any): boolean\n\nRuns a type check against the passed in value. It returns true if it matches,\nit does not cast the value. When nullable() is set null is considered a valid value of the type.\nYou should use isType for all Schema type checks.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-is-type",
      "matches": {
        "yup mixed istype": true
      }
    },
    "dcc1e34f-2677-3139-a953-1981cffe4b06": {
      "content": "for ${2:i} = 0, ${1:#:Things} do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "dcc4cafb-44fd-3552-89ac-01ad2c680a0f": {
      "content": "defp ${1:name} do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "defp .. end",
      "matches": {
        "defp": true
      }
    },
    "dccb4f29-a5d9-3e60-80d6-cbf56b3f7d21": {
      "content": "function* ${1:name}(${2:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "named generator",
      "matches": {
        "gfn": true
      }
    },
    "dcd213f2-8f45-364e-b066-633633fcb692": {
      "content": "{%- case ${1:variable} -%}\n\t{%- when ${2:condition} -%}\n\t\t$3\n\t{%- else -%}\n\t\t$4\n{%- endcase -%}",
      "doc": "Control flow tag: case, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag case, whitespaced",
      "matches": {
        "case-": true
      }
    },
    "dcd4bcc7-52bc-3a43-83e8-742fb3c19f5f": {
      "content": "const ${1:name} = computed(() => {\n\treturn ${2}\n})",
      "doc": "Set computed property - Vue Composition API",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3computed",
      "matches": {
        "vue v3 computed": true
      }
    },
    "dcd54120-306b-3a29-b0c7-3343a9173273": {
      "content": "digitalWrite(${1}, LOW);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dwLow": true
      }
    },
    "dcd96a56-6c97-3e3f-b113-93388d71ce4f": {
      "content": "PropTypes.array",
      "doc": "Array prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeArray",
      "matches": {
        "pta": true
      }
    },
    "dcda825e-a37c-3588-9cbb-338a1c29299b": {
      "content": "scope :${1:name}, -> { where(${2:field}: ${0:value}) }",
      "doc": "AR scope",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Scope",
      "matches": {
        "scope": true
      }
    },
    "dce5e107-1a14-316c-9d5b-d79cdf41a9b5": {
      "content": "grid-auto-columns: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:a": true
      }
    },
    "dce9461f-36e0-38b6-a526-8bcca9098e7f": {
      "content": "${1:obj}.prop('${2:property name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true
      }
    },
    "dce963ab-598b-32eb-a70d-95e220cf1c45": {
      "content": "import React from 'react'\n\nfunction ${1:${TM_FILENAME_BASE}}() {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionalExportComponent",
      "matches": {
        "rfce": true
      }
    },
    "dceae6dd-f841-3f95-853c-ad1658231e66": {
      "content": "${1:slice} = append($1, ${0:value})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "a = append(a, value)",
      "matches": {
        "ap=": true
      }
    },
    "dcecdbec-d9a8-325e-ba8e-0d3f11ce7b35": {
      "content": "redirect_to controller: \"${1:items}\", action: \"${2:show}\", id: ${0:@item}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "redirect_to (controller, action, id)",
      "matches": {
        "recai": true
      }
    },
    "dcee93ed-f7a0-3d97-a183-9f3a68d7917f": {
      "content": "zoom: 1",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "zoo": true
      }
    },
    "dcf0d1ab-bf27-3d9d-99e7-f750fbe933f7": {
      "content": "import React, { Component } from 'react'\n\ntype Props = {}\n\ntype State = {}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n  state = {}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React component class with ES7 module system and TypeScript interfaces",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactClassExportComponent",
      "matches": {
        "tsrce": true
      }
    },
    "dcf2656a-8db0-387c-90bc-8f22f464d410": {
      "content": "PropTypes.shape({\n\t$0\n}),",
      "doc": "An object taking on a particular shape",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeShape",
      "matches": {
        "ptsh": true
      }
    },
    "dd0642ee-f4f2-3ccf-b5f5-2d93dbc79dee": {
      "content": "var $1 = new sap.m.Input({\n\tvalue :$2,\n\twidth : $3,\n\tenabled :$4,\n\tvisible :$5,\n\tvalueState :$6,\n\tname : $7,\n\tplaceholder : $8,\n\teditable : $9,\n\ttype : $10,\n\tmaxLength :$11,\n\tvalueStateText :$12,\n\tshowValueStateMessage :$13,\n\tdateFormat :$14,\n\tshowValueHelp :$15,\n\tshowSuggestion :$16,\n\tvalueHelpOnly :$17,\n\tfilterSuggests :$18,\n\tmaxSuggestionWidth :$19,\n\tstartSuggestion : $20,\n\tshowTableSuggestionValueHelp : $21,\n\tdescription : $22,\n\tfieldWidth : $23,\n\tvalueLiveUpdate :$24,\n\tsuggestionItems  :[$25],\n\tsuggestionColumns : [$26],\n\tsuggestionRows : [$27],\n\tliveChange : $28,\n\tvalueHelpRequest :$29,\n\tsuggest : $30,\n\tsuggestionItemSelected : $31\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapminput": true
      }
    },
    "dd067956-6a80-35d5-bafe-0309bd23cc78": {
      "content": "Err(${1})",
      "doc": "Err(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "Err",
      "matches": {
        "Err": true
      }
    },
    "dd0947b1-311c-3ebc-a1e7-f113ede1434f": {
      "content": "${1:FIELDNAME} = models.DurationField($2)",
      "doc": "DurationField (mduration).\n\nA field for storing periods of time - modeled in Python by timedelta.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mduration",
      "matches": {
        "mduration": true
      }
    },
    "dd0fb15b-46c0-3353-8eed-715ffc6977cd": {
      "content": "page-break-inside: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi:a": true
      }
    },
    "dd108b13-33c1-345c-9b96-4199c773fe96": {
      "content": "font-size ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      }
    },
    "dd11c4a7-b08f-3b95-bd50-24a8c80d857e": {
      "content": "BYTES=${2:500},${3|CANCEL,DUMP,WARNING|}${4|\\,|}",
      "doc": "BYTES Parameter",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "JOB/BYTES",
      "matches": {
        "BYTES": true
      }
    },
    "dd1b003a-e1c5-3d56-9ed0-d3f766e4bf37": {
      "content": "return ${0};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ret": true
      }
    },
    "dd1be127-654b-3cc2-9c82-1dc7b919de02": {
      "content": "remove_column :${1:table_name}, :${0:column_name}",
      "doc": "Migration remove column",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Migration remove column",
      "matches": {
        "mrc": true
      }
    },
    "dd21878f-e4ca-3e1a-8eca-82d498bf5049": {
      "content": "<nuxt-child $1/>$0",
      "doc": "",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-child",
      "matches": {
        "nuxt child": true
      }
    },
    "dd24906e-563a-30c8-a9fb-2daab21c1283": {
      "content": "@after-leave=\"$1\"$0",
      "doc": "@after-leave=''",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-after-leave",
      "matches": {
        "afterleaveevent": true,
        "vue after-leave": true
      }
    },
    "dd255990-d597-3916-a40a-179a3f981458": {
      "content": "std::multiset<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mset": true
      }
    },
    "dd26b36d-f0e6-3226-a86b-54a0b76f847a": {
      "content": "- (${1:#:id})${2:#:method}${3:(#:id)}${4:#:anArgument}\n{\n${0}\n\treturn nil;\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "Method",
      "matches": {
        "m": true
      }
    },
    "dd2bf88b-d475-3c3c-b902-089f6263a104": {
      "content": "page-break-after ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      }
    },
    "dd2e6f93-7b83-3d85-88f4-f86cf1447d44": {
      "content": "<%= link_to '${1:link text...}', action: '${2:edit}', id: ${0:@item} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "liai": true
      }
    },
    "dd30db9d-69ca-3374-a4ee-d1174ef2b5d9": {
      "content": "console.warn($1);\n$0",
      "doc": "Log warning to the console",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Log warning to console",
      "matches": {
        "warn": true
      }
    },
    "dd3977e8-1362-3a12-9774-934049201d11": {
      "content": "assert_in_delta ${1:expected_float}, ${2:actual_float}, ${3:2**-20}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asid": true
      }
    },
    "dd39e812-831f-30df-86e1-27aa73096c7e": {
      "content": "#lang web-server/insta",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#wi": true
      }
    },
    "dd448172-402b-36b3-88af-d536795b3fa2": {
      "content": "if ($1)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "dd477c36-7345-3afc-adc1-1f8967162d54": {
      "content": "_.findKey(${object}, ${predicate})",
      "doc": "var users = {\n  'barney':  { 'age': 36, 'active': true },\n  'fred':    { 'age': 40, 'active': false },\n  'pebbles': { 'age': 1,  'active': true }\n};\n\n_.findKey(users, function(o) { return o.age < 40; });\n// => 'barney' (iteration order is not guaranteed)\n\n// The `_.matches` iteratee shorthand.\n_.findKey(users, { 'age': 1, 'active': true });\n// => 'pebbles'\n\n// The `_.matchesProperty` iteratee shorthand.\n_.findKey(users, ['active', false]);\n// => 'fred'\n\n// The `_.property` iteratee shorthand.\n_.findKey(users, 'active');\n// => 'barney'\n\nThis method is like `_.find` except that it returns the key of the first\nelement `predicate` returns truthy for instead of the element itself.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-findkey",
      "matches": {
        "lodash findkey": true
      }
    },
    "dd49405a-4d7b-31b9-8225-12c7ae8eec53": {
      "content": "renderToStream",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "renderToStream",
      "matches": {
        "renderToStream": true
      }
    },
    "dd524d61-0769-3bcc-aec3-0ffe800b95cf": {
      "content": "int main (int argc, char *argv[])\n{\n\t$1\n\treturn 0;\n}",
      "doc": "A standard main function for a C++ program",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "Main function template",
      "matches": {
        "main": true
      }
    },
    "dd537f42-638d-3360-8bc6-77a64df0699b": {
      "content": "*ngFor=\"let ${1:item} of ${2:list}\"${0}",
      "doc": "Angular *ngFor",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngFor",
      "matches": {
        "a-ngFor": true
      }
    },
    "dd5437b0-8051-3282-92d2-13572c766a85": {
      "content": "mutations",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mutations",
      "matches": {
        "mutations": true
      }
    },
    "dd5e64bf-9204-342e-b39f-5b8962fa5131": {
      "content": "background-size: contain",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgz:ct": true
      }
    },
    "dd605cc1-29bb-3bfe-9071-aaa06f9db0b6": {
      "content": "${1:int} ${2:#:Name} { get${3:;} ${4:#:private }set${5:;} }${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prop": true,
        "property": true
      }
    },
    "dd678e11-bddc-302b-8675-40ff159d2c10": {
      "content": "{{ endBody() }}\n$0",
      "doc": "endBody",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endbody",
      "matches": {
        "endbody": true
      }
    },
    "dd720265-f445-3166-a53d-e232844d3093": {
      "content": "position: ${1|relative,absolute,fixed,sticky,static|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "position",
      "matches": {
        "pos": true
      }
    },
    "dd725970-32d4-34c8-b4f3-2b06948ee026": {
      "content": "self.assert_(${1:boolean expression}${2:, '${3:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert",
      "matches": {
        "as": true
      }
    },
    "dd76a187-6200-3d53-8043-dcee6f453791": {
      "content": "| remove: '${string}' }}",
      "doc": "String filter: remove",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter remove",
      "matches": {
        "remove": true
      }
    },
    "dd780bd0-3b52-3d45-a007-d1c637991c7c": {
      "content": "border-collapse: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl": true
      }
    },
    "dd787fcd-871b-3a70-b888-78d3d62cfcb9": {
      "content": "{% render '${1:snippet}', ${2:variable}: ${3:value} %}",
      "doc": "Theme tag: render with parameters",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag render with parameters",
      "matches": {
        "renderwith": true
      }
    },
    "dd7eb15a-60b6-391e-8268-9917441eb60c": {
      "content": "use strict;\nuse warnings;",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strwar": true
      }
    },
    "dd82cad4-f006-3e69-b110-740c57334bc5": {
      "content": "beforeMount () {\n\t${0};\n},",
      "doc": "beforeMount lifecycle method",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle beforeMount",
      "matches": {
        "vbeforemount": true
      }
    },
    "dd9143eb-c883-3dae-88e6-272d418635bb": {
      "content": "defer func() {\n\t${0}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "defer func() { ... }",
      "matches": {
        "def": true
      }
    },
    "dd977e7d-d31f-3079-905b-62dbeaeff954": {
      "content": "font-size: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fz": true
      }
    },
    "dd98374c-c0ef-3d03-8e92-35b91c3d0180": {
      "content": "<h6>$1</h6>$2",
      "doc": "HTML - Defines header 6",
      "filetype": "html",
      "grammar": "lsp",
      "label": "h6",
      "matches": {
        "h6": true
      }
    },
    "dd9d56bd-a5cd-3b53-9e68-f60ea6860ec1": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      }
    },
    "dda9acbf-b652-3b1c-9da1-ec50f2d6c213": {
      "content": "position: absolute",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pos:a": true
      }
    },
    "ddb4180d-2629-3ce8-aaf9-cf3ad84c8afa": {
      "content": "border-bottom-right-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbrrz": true
      }
    },
    "ddb55378-ec3c-32f2-b727-7355cc4d5724": {
      "content": "import ${1:${2:Data}.${3:Text}} (${4})${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "Selective import",
      "matches": {
        "imp2": true
      }
    },
    "ddb66c25-6109-3584-b843-7f77c2fb7183": {
      "content": "#ifndef $1\n#define ${1:SYMBOL} ${2:value}\n#endif /* ifndef $1 */",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ndef": true
      }
    },
    "ddc9c283-0dda-3f08-8e03-8ca2a8df3692": {
      "content": "fprintf(${1:stderr}, \"${2:%s}\\n\"${3});",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpr": true
      }
    },
    "ddca0e79-4719-36c3-9d77-889486b856aa": {
      "content": "it { should accept_nested_attributes_for :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isana": true
      }
    },
    "ddcb8e93-a51d-372f-8d5d-28777f1a497c": {
      "content": "expect(${1:target}).toBeTruthy()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be truthy (coffee)",
      "matches": {
        "et": true
      }
    },
    "ddcc68ca-2297-36a5-b503-030f449e135e": {
      "content": "Js.error(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.error",
      "matches": {
        "ce": true,
        "cer": true
      }
    },
    "ddd29916-bc9d-38a5-bf2f-2dfa9bf149e6": {
      "content": "if err != nil {\n  t.Fatalf(\"${1}\")\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "if err != nil { t.Fatalf(...) }",
      "matches": {
        "terf": true
      }
    },
    "dddaa495-92a8-3660-b922-640a0023e6d2": {
      "content": "## ${0}",
      "doc": "Add header level 2",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "header 2",
      "matches": {
        "h2": true
      }
    },
    "dddd76ec-0a5b-3afa-9c83-b1e8d47b6f97": {
      "content": "COND=(${2:0},${3|GT,GE,EQ,LT,LE,NE|},${4:STEPNAME})${5|\\,|}",
      "doc": "COND Parameter",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/COND",
      "matches": {
        "COND": true
      }
    },
    "dde000eb-1a8a-3d12-ba53-61ff6317297e": {
      "content": "const ${1:ref} = useRef(${2:initialValue})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-useref",
      "matches": {
        "react useref": true,
        "useref": true
      }
    },
    "dde22344-49d5-33e0-8948-9c42f851d359": {
      "content": "def clean_${1:FIELD}(self):\n\t${1:FIELD} = self.cleaned_data.get('${1:FIELD}')\n\n\n\t # TODO Validation\n\n\treturn ${1:FIELD}",
      "doc": "",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "clean_data",
      "matches": {
        "clean_data": true
      }
    },
    "dde56757-7fed-3901-93b3-664beccb1e33": {
      "content": "[${1:id}]: https://${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:\"": true
      }
    },
    "dde685e3-9835-357d-8096-031abdc7c1fd": {
      "content": ":source-highlighter: rouge$0",
      "doc": "",
      "filetype": "asciidoctor",
      "grammar": "snu",
      "label": "source-highlighter: rouge",
      "matches": {
        "highlight-rouge": true,
        "hirouge": true
      }
    },
    "dde690d8-178e-3c5c-bda9-24f3c2544dab": {
      "content": "<%= $1 %>",
      "doc": "render block pe",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "render",
      "matches": {
        "=": true,
        "pe": true
      }
    },
    "dded4c17-7494-3ae5-b67d-a09d0c23fb92": {
      "content": "justify-content space-evenly",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      }
    },
    "ddee7084-b781-3eea-b2d6-7348e1c5ebf4": {
      "content": "console.warn(${1:first})",
      "doc": "Displays a message in the console but also displays a yellow warning icon along with the logged message",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleWarn",
      "matches": {
        "cwa": true
      }
    },
    "ddefd6d4-3f3a-3ce3-861e-d485df13cc8a": {
      "content": "Promise",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise",
      "matches": {
        "p": true
      }
    },
    "ddf8fec8-a214-300a-9181-e5c8475fa048": {
      "content": "border-right-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      }
    },
    "ddfe0147-92a7-3ce8-bf7d-04a0518cc231": {
      "content": "${1:router}.push($2)$0",
      "doc": "router.push()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerPush",
      "matches": {
        "routerPush": true
      }
    },
    "de03ce1d-fb37-316e-9588-7f2cf8e188a8": {
      "content": "static ${1:#:NAME}(${2:#:Args}) {\n  ${0:#:TARGET}\n}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "static f(){}",
      "matches": {
        "static": true
      }
    },
    "de10d3de-8770-32ae-a9a8-8e390c8fbfc6": {
      "content": "table-layout: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      }
    },
    "de1955e8-5c66-3673-b6d5-31ad5ff96e42": {
      "content": "<c:param name=\"${1}\" value=\"${2}\" />\ncparam+${0}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cparam+": true
      }
    },
    "de1f526f-8d21-3e96-88d8-c5fe46b5f42f": {
      "content": "| divided_by: ${divided_by:2}",
      "doc": "Math filter: divided by",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter divided by",
      "matches": {
        "divided_by": true
      }
    },
    "de214e22-b880-31bd-b339-6080e4e73d7a": {
      "content": "validates_confirmation_of",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_confirmation_of",
      "matches": {
        "vc": true
      }
    },
    "de225792-1046-314c-a4c0-a883f85efa8e": {
      "content": "loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "loop",
      "matches": {
        "lo": true
      }
    },
    "de25ee01-492e-33f0-901a-3e5124cf0e83": {
      "content": "<blockquote cite=\"$2\">\n\t$1\n</blockquote>",
      "doc": "HTML - Defines a long quotation",
      "filetype": "html",
      "grammar": "lsp",
      "label": "blockquote",
      "matches": {
        "blockquote": true
      }
    },
    "de2bad42-e506-359a-a6e7-513106bd6989": {
      "content": "fmt.Println(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Println(...)",
      "matches": {
        "fn": true
      }
    },
    "de2d7b9b-0398-34da-8706-772ab62bd610": {
      "content": "echo CHtml::checkBoxList('${1:name}', ${2:select}, array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcbl": true
      }
    },
    "de306ecc-f54e-3d7b-ab3e-1dafb552e78a": {
      "content": "padding-left: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "padding-left: length (margin)",
      "matches": {
        "padding": true
      }
    },
    "de409a6d-73af-3dae-93d3-501f5c281765": {
      "content": "try {\n\t$1\n} catch(${2:e}: ${3:Type}){\n\t$4\n}",
      "doc": "Snippet for try block",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "try...catch",
      "matches": {
        "try": true
      }
    },
    "de41dbae-be95-3fb6-9783-9660fab03490": {
      "content": "align-items flex-start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      }
    },
    "de4451e4-6203-3527-ae11-57133dcffe6b": {
      "content": "animation-delay: ${0:1s};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-delay",
      "matches": {
        "anide": true
      }
    },
    "de4de076-7784-3449-a5fc-3db0c75e08ab": {
      "content": "auto ${1:name}(${2}) -> ${3:void}\n{\n\t${0}\n};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "auto function",
      "matches": {
        "af": true
      }
    },
    "de4fc1ca-5232-3610-a620-f3acd31b8499": {
      "content": "buf",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Buffer",
      "matches": {
        "T": true
      }
    },
    "de516254-136f-3cdf-990a-97ab7f8061b5": {
      "content": "${1} := ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "v := value",
      "matches": {
        ":": true
      }
    },
    "de5f2c90-38e6-3cb2-819e-59dfc5c34b7f": {
      "content": "(:require [${1:namespace} :as [${0}]])",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      }
    },
    "de61c494-a4e4-3de4-8934-9c35f5a10a07": {
      "content": "internal int ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi&|": true
      }
    },
    "de675b84-baf2-3515-ba4e-9bd79ebde5a7": {
      "content": "dictsort(case_sensitive=${1:False}, by=${2:'key'})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "sort and yield (key, value) pairs",
      "matches": {
        "dictsort": true
      }
    },
    "de6c5493-1f25-37f4-a63c-704661ae2b39": {
      "content": "<li>$1</li>$2",
      "doc": "HTML - Defines a list item",
      "filetype": "html",
      "grammar": "lsp",
      "label": "li",
      "matches": {
        "li": true
      }
    },
    "de6ced86-2666-371c-9945-92b5ace5c513": {
      "content": ".neqv.",
      "doc": "Non-Equality",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "neqv",
      "matches": {
        "neqv": true
      }
    },
    "de76ecc9-24d6-3678-8b9c-fd50aa13a9ad": {
      "content": "import ${0:List}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "de78e587-2db3-3ca5-9e5e-2805e372fcd7": {
      "content": "dispatch_async(${1:dispatch_queue_t  _Nonnull queue}, ${2:^(void)block})",
      "doc": "Create a dispatch_async",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Dispatch async",
      "matches": {
        "dispatchasync": true
      }
    },
    "de7df4ef-701f-384a-af49-eebdb6e35ff2": {
      "content": "align-content: ${1:stretch};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac": true
      }
    },
    "de822091-346f-3745-93dc-93ce0b51f4e0": {
      "content": "object.from()",
      "doc": "object.from(fromKey: string, toKey: string, alias: boolean = false): Schema\n\nTransforms the specified key to a new key. If alias is true then the old key will be left.let schema = object({\n  myProp: mixed(),\n  Other: mixed()\n})\n  .from(\"prop\", \"myProp\")\n  .from(\"other\", \"Other\", true);\n\nschema.cast({ prop: 5, other: 6 }); // => { myProp: 5, other: 6, Other: 6 }",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "object-from",
      "matches": {
        "yup object from": true
      }
    },
    "de873825-e3eb-3b3e-81c6-82f4ca650058": {
      "content": "_.sumBy(${array}, ${iteratee})",
      "doc": "var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\n_.sumBy(objects, function(o) { return o.n; });\n// => 20\n\n// The `_.property` iteratee shorthand.\n_.sumBy(objects, 'n');\n// => 20\n\nThis method is like `_.sum` except that it accepts `iteratee` which is\ninvoked for each element in `array` to generate the value to be summed.\nThe iteratee is invoked with one argument: (value).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sumby",
      "matches": {
        "lodash sumby": true
      }
    },
    "de88ce19-9d0c-3e8a-81c6-93431a011ef7": {
      "content": "<script context=\"module\">\n\t${1:// your script goes here}\n</script>",
      "doc": "add a script with context=\"module\" to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-script-context",
      "matches": {
        "svelte script context": true,
        "svscriptc": true
      }
    },
    "de8d277c-f5f0-3aa9-95c0-0856b129579d": {
      "content": "if (${1:condition}) {\n\t$0\n}",
      "doc": "If Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "If Statement",
      "matches": {
        "if": true
      }
    },
    "de8d983e-2921-3d63-89f2-0d33079aea8c": {
      "content": "filters",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "filters",
      "matches": {
        "filters": true
      }
    },
    "de907c3d-6b04-3a21-ab92-08d3232486a3": {
      "content": "box-sizing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz": true
      }
    },
    "de92a9b4-7380-339a-8a42-482bf84f67ab": {
      "content": "module ${1:(* Name *)} = struct\n\t${2:(* BODY *)}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module - no signature",
      "matches": {
        "mod": true
      }
    },
    "de955613-0892-36a4-9663-81110427d8c5": {
      "content": "with(\n\t${1:item} <- ${2:items}\n) do\n\t${3}\nelse\n\t${4} ->\n\t\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wie": true
      }
    },
    "de9e3b2d-8020-3182-9f0d-66cdfd76c6a2": {
      "content": "\\\\begin{enumerate}[(a)]\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enuma": true
      }
    },
    "de9eb1e1-6965-3e66-9f81-ed7a490778a7": {
      "content": "overflow-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs": true
      }
    },
    "dea8746d-ad52-3bc7-8008-08a2351f7424": {
      "content": "testWidgets(\n   \"${1:test description}\",\n   (WidgetTester tester) async {},\n);",
      "doc": "Create a testWidgets function",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Test Widgets",
      "matches": {
        "widgetTest": true
      }
    },
    "deacdf47-8614-35c6-868e-3642d77271aa": {
      "content": "t.references :${1:taggable}${2:, polymorphic: ${3:{ default: '${4:Photo}' }}}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.references (tcr)",
      "matches": {
        "t.": true
      }
    },
    "deb3a587-8b0f-3502-bfea-1c88825f0125": {
      "content": "else if ${1:false} {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "deb6eb69-56ba-3e14-92ec-44e864c2d2d4": {
      "content": "IO.puts(${1})",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "puts": true
      }
    },
    "deb87783-580e-328c-9268-8e40d56b61b2": {
      "content": "@isset\n\t${1:${VISUAL}}\n@endisset",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@isset directive",
      "matches": {
        "isset": true
      }
    },
    "debb6d71-bc72-3f02-aed1-1e43e616305e": {
      "content": "${1:FIELDNAME} = forms.TimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TimeField",
      "matches": {
        "ftime": true
      }
    },
    "debe2cda-d53c-3fc5-8299-d478357df90d": {
      "content": "border-bottom-left-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli": true
      }
    },
    "debf7ebd-bfbe-3316-aa6e-33e17e5bb1d2": {
      "content": "get_digit:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      }
    },
    "dec22d1e-4ce2-32f0-9ed7-156e1e06b7ae": {
      "content": "unchecked {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "unchecked",
      "matches": {
        "unchecked": true
      }
    },
    "decf6f76-ee40-3c21-a313-02024cf4074e": {
      "content": "Url:previous();",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_url_previous": true
      }
    },
    "ded06afe-5e60-3e04-ab48-cd0e1b074e6d": {
      "content": "$.when(${1:deferreds})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dwhen": true
      }
    },
    "ded42db0-6710-38ab-bb55-3c4873dc5729": {
      "content": "sub prep${1:number}_${2:test_case} :Test(startup) {\n\tmy $self = shift;\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tprep": true
      }
    },
    "dedadf6f-a2ce-34e8-aad4-74a260baaa90": {
      "content": "{foreach $${1:var} in ${2:ref}}\n\t$0\n{/foreach}",
      "doc": "",
      "filetype": "soy",
      "grammar": "snu",
      "label": "foreach command",
      "matches": {
        "fore": true
      }
    },
    "dee36b70-407b-3f32-9719-9a7976819a7b": {
      "content": "const ${1:mixinName} = {\n\tmounted() {\n\t\tconsole.log('hello from mixin!');\n\t},\n};",
      "doc": "vue mixin",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Mixin",
      "matches": {
        "vmixin": true
      }
    },
    "def49235-fe8e-35b6-a551-8725a3beffdf": {
      "content": "import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, EMPTY } from 'rxjs';\n\n// avoid typing issues for now\nexport declare var navigator;\n\n@Injectable({ providedIn: 'root' })\nexport class NetworkAwarePreloadStrategy implements PreloadingStrategy {\n\tpreload(route: Route, load: () => Observable<any>): Observable<any> {\n\t\treturn this.hasGoodConnection() ? load() : EMPTY;\n\t}\n\n\thasGoodConnection(): boolean {\n\t\tconst conn = navigator.connection;\n\t\tif (conn) {\n\t\t\tif (conn.saveData) {\n\t\t\t\treturn false; // save data mode is enabled, so dont preload\n\t\t\t}\n\t\t\tconst avoidTheseConnections = ['slow-2g', '2g' /* , '3g', '4g' */];\n\t\t\tconst effectiveType = conn.effectiveType || '';\n\t\t\tif (avoidTheseConnections.includes(effectiveType)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}",
      "doc": "Angular network aware preload strategy",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-network-aware-preload-strategy",
      "matches": {
        "a-preload-network-strategy": true,
        "angular network-aware preload strategy": true
      }
    },
    "defd7837-11a1-3f7f-a75c-7322f0b88a7d": {
      "content": "font-effect: outline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:o": true
      }
    },
    "df006677-c0fd-3ab4-a0da-a9961a0c7e41": {
      "content": "before(async () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "before",
      "matches": {
        "bf": true
      }
    },
    "df0a759c-b71d-3663-892b-53ea3fe8b2dc": {
      "content": "{% paginate ${1:collection.products} by ${2:12} %}\n\t{% for ${3:product} in $1 %}\n\t\t${0}\n\t{% endfor %}\n{% endpaginate %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "paginate": true
      }
    },
    "df0bf088-75a0-3b84-b67c-bf8a422e54bc": {
      "content": "overflow-y: hidden;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:h": true
      }
    },
    "df0ca76f-e404-3e3b-bc25-b6680ebd3f4a": {
      "content": "this.",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "this",
      "matches": {
        "t": true
      }
    },
    "df17ad83-f7d7-3dba-a441-29e0ca80e107": {
      "content": "justify-self: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:c": true
      }
    },
    "df236f9c-b3e0-3e1a-9ad4-6ebf23edf1bf": {
      "content": "const ${1} = ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      }
    },
    "df2a1f43-8f0f-3703-a3f0-444149f58138": {
      "content": "constructor() {\n\tsuper();\n\n\t${1:state}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ctor": true
      }
    },
    "df2c586b-9113-3e8a-881b-37ca9f42fd4a": {
      "content": "private def ${1:name}(${2:arg}) = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prdef": true
      }
    },
    "df2da392-7cf2-3eb8-b7a1-a63d407e2a50": {
      "content": "__${1:init}__",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_": true
      }
    },
    "df4444bb-9371-38de-a6f4-2f41a6fa431f": {
      "content": "unloadMovieNum(${1:#:level});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "un": true
      }
    },
    "df48b2dc-3262-3f29-ac20-81df2a856c5f": {
      "content": "v-model=\"${1:something}\"",
      "doc": "Expects: varies based on value of form inputs element or output of components",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-model",
      "matches": {
        "vModel": true
      }
    },
    "df4a28d0-e0b6-317e-88c2-8dd83dd8a75d": {
      "content": "NSBezierPath *${1:#:path} = [NSBezierPath bezierPath];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bez": true
      }
    },
    "df4c3499-a104-3808-bcbc-3084c331563d": {
      "content": "<meta name=\"description\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "metadescription": true
      }
    },
    "df526ec3-5994-3425-9cd1-a74ace221e90": {
      "content": "function integer-part(${1:number})$0",
      "doc": "portion of number that occurs to the left of the decimal point",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer-part",
      "matches": {
        "function integer-part": true
      }
    },
    "df580061-77a9-3479-9359-a5215424b181": {
      "content": "divide ${1:a} by ${2:b} giving ${3:c} ${4:remainder ${5:d}}",
      "doc": "divide a by b giving [remainder}",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "divide",
      "matches": {
        "dgr": true,
        "divide": true
      }
    },
    "df58ab7a-be00-3295-9197-01a823df0303": {
      "content": "| uri_escape }}",
      "doc": "String filter: uri escape",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter uri escape",
      "matches": {
        "uri_escape": true
      }
    },
    "df5b4988-fe97-326a-ba08-82d66f27e980": {
      "content": "const { head, html, css } = ${1:App}.render({\n\tprops: ${3:props},\n})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-render-component",
      "matches": {
        "svelte render component": true,
        "svrcom": true
      }
    },
    "df5fbbd8-2a6c-35a2-b930-ef22af54095b": {
      "content": ".. note:: ${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "note",
      "matches": {
        "note": true
      }
    },
    "df62d485-5e62-3770-ad23-e705f090fe08": {
      "content": "term:: ${1:definintion}",
      "doc": "",
      "filetype": "vimwiki",
      "grammar": "snu",
      "label": "definition",
      "matches": {
        "definintion": true
      }
    },
    "df6322ab-ea1c-3f04-9c05-3397d7db9384": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReactWithComponentAndPropTypes",
      "matches": {
        "imrcp": true
      }
    },
    "df6d842a-422a-3d34-b3f0-968783b5a3dc": {
      "content": "function ${1:name}(${2:params}:${3:type}) {\n\t$0\n}",
      "doc": "Function Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Function Statement",
      "matches": {
        "function": true
      }
    },
    "df756f40-1d35-31e8-b6da-70357d9b1113": {
      "content": "let ${1}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "let ... end",
      "matches": {
        "let": true
      }
    },
    "df762fea-afeb-35d1-ab53-1d5a279de411": {
      "content": "<area shape=\"default\" coords=\"${1}\" href=\"${2}\" alt=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "area:d": true
      }
    },
    "df829244-09b6-3e51-a9cf-89b5e123694a": {
      "content": "{% firstof ${1} %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firstof": true
      }
    },
    "df927e4d-e007-36e2-ad42-43a9ef6584e8": {
      "content": "_.chunk(${array}, ${size})",
      "doc": "_.chunk(['a', 'b', 'c', 'd'], 2);\n// => [['a', 'b'], ['c', 'd']]\n\n_.chunk(['a', 'b', 'c', 'd'], 3);\n// => [['a', 'b', 'c'], ['d']]\n\nCreates an array of elements split into groups the length of `size`.\nIf `array` can't be split evenly, the final chunk will be the remaining\nelements.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-chunk",
      "matches": {
        "lodash chunk": true
      }
    },
    "df98d0c8-4c45-3698-a31a-e5750e5a13a4": {
      "content": ".. error::\n\t${0:Error occur}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err:": true
      }
    },
    "df9a45b6-86a8-3fe6-9ab5-28769aa31a1a": {
      "content": "display: table-column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      }
    },
    "dfa133ab-a34f-304b-b80c-f1909d21f36e": {
      "content": "background-origin border-box",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgo:bb": true
      }
    },
    "dfa68568-df4e-3350-9a57-580f50b29404": {
      "content": "import React from 'react'\nimport PropTypes from 'prop-types'\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n  return (\n    <div>${1:first}</div>\n  )\n}\n\n${1:${TM_FILENAME_BASE}}.propTypes = {}\n\nexport default ${1:${TM_FILENAME_BASE}}",
      "doc": "Creates a React Functional Component with ES7 module system with PropTypes",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactFunctionalComponentWithPropTypes",
      "matches": {
        "rfcp": true
      }
    },
    "dfa9e58e-880a-33df-aada-6d4af1ca0d65": {
      "content": "outline: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      }
    },
    "dfaf5d03-9a44-3131-9953-06afa61211b2": {
      "content": "public void set${1:Name}(${2:String} ${3:name}) {\nthis.$3 = $3;\n}${0:TARGET}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "set": true
      }
    },
    "dfbc286f-4ec8-3b8d-9db1-3649d80eb86e": {
      "content": "else if (${1:condition}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "else if statement",
      "matches": {
        "ei": true
      }
    },
    "dfbe6cc3-3324-3efc-b4b2-1644419ed2a6": {
      "content": "while ${1:true}\n    ${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "while ... end",
      "matches": {
        "while": true
      }
    },
    "dfc20f59-dd01-3657-ab5f-7938e6524570": {
      "content": "flex-direction: row;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex-direction: row",
      "matches": {
        "fldr": true
      }
    },
    "dfc30ed9-e214-306b-85ac-0df69af3a221": {
      "content": "assertNotSame(\"${1:Failure message}\", ${2:expected}, ${3:actual});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asns": true
      }
    },
    "dfc792c6-8884-3e96-ad32-53117313c459": {
      "content": "box-sizing: content-box;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxz:cb": true
      }
    },
    "dfd197f0-0661-3c48-a395-2076a64bd2fe": {
      "content": "with ${1:what}${0: with}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "with": true
      }
    },
    "dfdadc84-5c00-3ec3-842d-652754e6e4fe": {
      "content": "| ${1:Column1}  |\n|-------------- |\n| ${2:Item1}    |\n${0}",
      "doc": "Insert table with 2 rows and 1 column. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 2x1 table",
      "matches": {
        "2x1table": true
      }
    },
    "dfdee8b3-decb-3385-b9d8-cea8dc4e029c": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      }
    },
    "dfdefe84-ddcf-330f-a69b-78920a836de1": {
      "content": "t.datetime :${1:title}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create datetime column",
      "matches": {
        "tcdt": true
      }
    },
    "dfea5627-05b9-33cd-9da7-089616bd50d3": {
      "content": "if (${1:#:condition}) {\n    ${2:TARGET}\n} else {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "if () {} else {}",
      "matches": {
        "ifel": true,
        "ifelse": true
      }
    },
    "dfeed9f7-69e8-3de3-a8da-b2408c7de996": {
      "content": "switch ${1:var} {\ncase ${2:value1}:\n\t${3}\ncase ${4:value2}:\n\t${5}\ndefault:\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "sw": true
      }
    },
    "dff5830c-1cc0-378c-9d91-9add9fc07e57": {
      "content": "<%= ${1} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "=": true
      }
    },
    "dff95048-5715-351a-89ea-872b3feb4f05": {
      "content": "internal string ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps&-": true
      }
    },
    "dff9bed5-b3e1-32e8-9ab2-542014d355ad": {
      "content": "<th>${1:TARGET}</th>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th": true
      }
    },
    "e00250bd-0150-3ac4-8064-f6bcd6f5c184": {
      "content": "typedef struct ${1:#:name} {\n    ${0:TARGET:data}\n};",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "struct_typedef": true
      }
    },
    "e005f5ec-3d29-318a-8cd9-63769cc19872": {
      "content": "class ${1:name} extends FunSuite {\n\ttest(\"${0:description}\") {\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsuite": true
      }
    },
    "e009d68d-6bf6-3ad3-af79-359106a9e7a8": {
      "content": "echo CHtml::activeDropDownList(${1:model}, '${2:attribute}', array(${3}),array('${4:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhaddl": true
      }
    },
    "e00be853-321e-3040-988c-44a9edad6990": {
      "content": ":first-child",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        ":fc": true
      }
    },
    "e00d75c5-c071-30bf-928a-cbc287ef7db8": {
      "content": "${1|this,vm|}.\\$once('${2:event}', ${3:callback})$4",
      "doc": "vm.$once( event, callback )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$once",
      "matches": {
        "vmOnce": true
      }
    },
    "e01342e2-6d95-3776-88c1-9379e09e882d": {
      "content": "<form (ngSubmit)=\"onSubmit()\" #${1:form}=\"ngForm\">\n</form>",
      "doc": "Form with ngSubmit and form attributes",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngForm",
      "matches": {
        "a-form": true
      }
    },
    "e0147200-69dd-336c-b0fe-9d35bb9b9d50": {
      "content": "${1:FIELDNAME} = models.DateTimeField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateTimeField",
      "matches": {
        "mdatetime": true
      }
    },
    "e01479d3-ff20-352d-baa9-fe28a71e6ddb": {
      "content": "page-break-after: left",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba:l": true
      }
    },
    "e0192fe5-12da-3a87-a9f5-c3d9c1a30a2e": {
      "content": "vertical-align middle",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:m": true
      }
    },
    "e01e3221-dab9-37b6-be5d-f8ba59146f59": {
      "content": "- ${1:#:text}\n-\n-\n-",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nested_list": true
      }
    },
    "e023698e-3906-3eda-87b3-f48d24239c1f": {
      "content": "margin 0",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      }
    },
    "e02397a5-73cd-3340-aa8c-e05dfc38de05": {
      "content": "std::vector<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vector": true
      }
    },
    "e0276d15-6d89-347b-96b3-c7fd4e9f867e": {
      "content": "void mousePressed(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mousePressed": true
      }
    },
    "e039ff23-77b0-318f-a0b6-8eac6e573275": {
      "content": "class ${1:ClassName} {\n\t${2:println(\"Hello, world!\")}\n}",
      "doc": "Class",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "e03a5da3-09d0-33c7-835f-9cc56f92b0a1": {
      "content": "justify-self start",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:s": true
      }
    },
    "e03b4d50-f3ff-3a73-a035-3c5acb643dc3": {
      "content": "*ngFor=\"let ${1:item} of ${2:stream} | async as ${3:list}\"${0}",
      "doc": "Angular *ngForAsync",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngforasync",
      "matches": {
        "a-ngforasync": true,
        "angular ng for async": true
      }
    },
    "e03f1fbb-c7dd-3ff3-9402-e1b701f12f21": {
      "content": "(if ${1}\n\t(let (${2})\n\t\t${3})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifl": true
      }
    },
    "e0406570-868b-3988-aa20-733313d9170e": {
      "content": "align-self end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:e": true
      }
    },
    "e041d725-57a8-3cb2-a4db-36f7440828be": {
      "content": "console.warn(${0});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.warn",
      "matches": {
        "cw": true
      }
    },
    "e0440f20-6e42-3881-b780-71cb7d2b2af4": {
      "content": "list-style-position: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-position": true,
        "lsp": true
      }
    },
    "e04ae833-2057-3f48-a71c-1457d1ce3769": {
      "content": "${1:FIELDNAME} = models.SmallIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SmallIntegerField",
      "matches": {
        "msmallint": true
      }
    },
    "e04c863b-5aa7-3e8c-8a53-4987ae08355e": {
      "content": "validates :${1:attribute}, presence: true",
      "doc": "validates presence",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Validate presence",
      "matches": {
        "vp": true
      }
    },
    "e052f550-7919-36cf-992b-dfb506f661fe": {
      "content": "Sleep    ${1:2 minutes 10 seconds}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Sleep",
      "matches": {
        "sleep": true
      }
    },
    "e05705cc-a5e0-3d4d-9425-36c1272f871a": {
      "content": "{@debug ${1:var1}${2:,var2}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-expression-debug",
      "matches": {
        "svelte expression debug": true,
        "svexpdebug": true
      }
    },
    "e05ffff4-fe16-3fee-bc62-47397c2de044": {
      "content": "year = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "year": true
      }
    },
    "e06a0cbb-348b-3355-8d46-eec9a3fcd9e3": {
      "content": "@leave-cancelled=\"$1\"$0",
      "doc": "@leave-cancelled='' (v-show only)",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-leave-cancelled",
      "matches": {
        "leavecancelledevent": true,
        "vue leave-cancelled": true
      }
    },
    "e07d4b9f-0f35-3882-9ffa-58f4555d522d": {
      "content": "void keyPressed(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyPressed": true
      }
    },
    "e081e614-b914-3a44-a44c-e952d9daf77f": {
      "content": "white-space-collapse keep-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:k": true
      }
    },
    "e083e7d3-b71f-3e3b-a76c-ae8f74838b6e": {
      "content": "when ${1} => ${2};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "e0861796-e9dc-3377-8207-48ef9aecbe02": {
      "content": "# (PART) Part ${1:I} {-}$0",
      "doc": "Insert bookdown part",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown part",
      "matches": {
        "part": true
      }
    },
    "e08f9a82-e04b-34e7-9325-19ce33b9ac73": {
      "content": "/**\n * ${1:undocumented class variable}\n *\n * @var ${2:string}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_vp": true
      }
    },
    "e09536fd-b341-33ca-922d-a2e99f071600": {
      "content": "${1:page}~\\\\pageref{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "reference to a page",
      "matches": {
        "page": true
      }
    },
    "e096a4d8-56ae-3a44-a1f7-3852a3bf935b": {
      "content": "border-fit overwrite",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:ow": true
      }
    },
    "e09f4a40-3434-3e4d-9a77-33e963dbadbf": {
      "content": "try {\n\t${0}\n} catch (${1:err}) {\n\t\n} finally {\n\t\n}",
      "doc": "try/catch/finally",
      "filetype": "base",
      "grammar": "lsp",
      "label": "try-catch-finally",
      "matches": {
        "base try catch finally": true
      }
    },
    "e09fb1ba-c903-33c9-ac3a-a8255d15595f": {
      "content": "<% } else { %>\n $1",
      "doc": "EJS if statement",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Else Statement",
      "matches": {
        "ejselse": true
      }
    },
    "e09fe052-4e8e-3668-ac90-4d86c6949b20": {
      "content": "${1:FIELDNAME} = forms.CharField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "CharField",
      "matches": {
        "fchar": true
      }
    },
    "e0a0334e-e7f8-3f28-a349-d1aa87216447": {
      "content": "class ${1:#:ClassName} {\n\tvar _${2};\n\tfunction ${1}(${2}){\n\t\t_${2} = ${2};${0}\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "e0a54ed9-39bd-35ed-af5a-3cd3a33203d1": {
      "content": "${1:deferred}.always(${2:callbacks})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dalways": true
      }
    },
    "e0ab2dce-a212-3a00-b9e0-48f40e49d2bd": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a} -> ${5:a}\n$1 ${6} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn3": true
      }
    },
    "e0b45660-0395-31b1-9b06-6cd3a577d3c3": {
      "content": "scrollBehavior(to, from, savedPosition) {\n\tif(savedPosition) {\n\t\treturn savedPosition;\n\t} else {\n\t\treturn { x: 0, y: 0 };\n\t}\n},",
      "doc": "Vue Router scrollBehavior",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router scrollBehavior",
      "matches": {
        "vscrollbehavior": true
      }
    },
    "e0b511e7-ad15-3912-add5-443f09c8701f": {
      "content": "assert_nil ${1:instance}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asn": true
      }
    },
    "e0b88813-ce06-3e7d-9df0-2b38b4b7c2b1": {
      "content": "@component('${1}')\n    ${2}\n@endcomponent",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@component ... @endcomponent",
      "matches": {
        "compo": true
      }
    },
    "e0ba5cd8-9e81-3384-8c48-32122b4ce6da": {
      "content": "| remove_first: '${string}' }}",
      "doc": "String filter: remove first",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter remove first",
      "matches": {
        "remove_first": true
      }
    },
    "e0bd25c9-89d6-3622-be69-072921093fb9": {
      "content": "border-right: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdr+": true
      }
    },
    "e0bf0ddb-f31a-39c3-aae0-0095b1ba3998": {
      "content": "list-style-type: circle",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:c": true
      }
    },
    "e0c30b25-7113-35f9-ab3a-160a43cc7689": {
      "content": "spyOn(${1:object}, '${2:method}')$0;",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "spy on (js)",
      "matches": {
        "s": true
      }
    },
    "e0c52845-7314-396f-905f-64b61722f8ae": {
      "content": "form_radio(\"${1:name}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_radio": true
      }
    },
    "e0cc6380-a884-308f-9d94-ebfb77558790": {
      "content": "<${1:div} :style=\"{ fontSize: ${2:data} + 'px' }\"></${1:div}>",
      "doc": "vue inline style binding",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Style Binding",
      "matches": {
        "vstyle": true
      }
    },
    "e0cf7599-9818-32c5-aae4-3bd03a272b10": {
      "content": "switch (${1:object},\n    ${2:case} = ${3:action}\n)",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "switch",
      "matches": {
        "switch": true
      }
    },
    "e0d60061-7bf9-3a0f-be7f-5662b46b51bb": {
      "content": "else if (${1:condition}) {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "else if",
      "matches": {
        "ei": true
      }
    },
    "e0d8fbe8-9f98-3c3f-8a76-a268a5935bf2": {
      "content": "${1:obj}.clearQueue(${2:'queue name'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clearq": true
      }
    },
    "e0dec536-2948-3121-83b9-a261d8835b3e": {
      "content": "padding: ${1:0} ${0:0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p:2": true
      }
    },
    "e0e1b123-09cc-3665-a390-20e145c639a1": {
      "content": "vertical-align bottom",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:b": true
      }
    },
    "e0e89280-1613-3f76-a139-cb2eae2b83f6": {
      "content": "${1:void} ${2:function_name}(${3});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fund": true
      }
    },
    "e0ec61bc-6f46-362e-a810-77376bedd46f": {
      "content": "quotes none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      }
    },
    "e0edb680-4a08-363f-82aa-252b89180d2e": {
      "content": "indent(width=${1:4}, indentfirst=${2:False})",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "indent",
      "matches": {
        "indent": true
      }
    },
    "e0ef95c8-b608-3142-820e-8fbfc208aae8": {
      "content": "split('::').inject(Object) { |par, const| par.const_get(const) }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clafn": true
      }
    },
    "e0fba513-9cc5-379f-b1f9-f19c3cff39b6": {
      "content": "public string ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+|": true
      }
    },
    "e0ff9d84-eb62-350f-87e3-de04dc5af9a5": {
      "content": "import * as ${2:alias} from '${1:module}';$0",
      "doc": "Imports everything as alias from the module in ES6 syntax",
      "filetype": "base",
      "grammar": "lsp",
      "label": "importeverything",
      "matches": {
        "base import everything": true
      }
    },
    "e1016f85-aa78-3f60-8997-a0d470820824": {
      "content": "${1:#:set the_url to }choose URL showing ${2:Web} servers with editable URL",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "choose",
      "matches": {
        "choose_URL": true
      }
    },
    "e1058e90-a4db-3d72-ad3e-e8da4ea00515": {
      "content": "has ${1:Type} ${2:$!identifier};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "has": true
      }
    },
    "e1063cd6-00aa-3e81-b11c-356b583128cd": {
      "content": "ceil($2)",
      "doc": "float ceil(float x)\nvec2 ceil(vec2 x)\nvec3 ceil(vec3 x)\nvec4 ceil(vec4 x)\n\nThe ceiling function returns the smallest number that is larger or equal to x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.\n\nSide note: The return value is of type floating scalar or float vector although the result of the operation is an integer.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "ceil",
      "matches": {
        "ceil": true
      }
    },
    "e10bf2f4-b8bd-398b-b0cd-1f6e4b8d238e": {
      "content": "import { ${1:map} } from 'rxjs/operators';\n$0",
      "doc": "RxJs import",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "RxJs Operator Import",
      "matches": {
        "a-rxjs-operator-import": true
      }
    },
    "e10ded65-a14f-3ce0-ad32-1f9ca4fd4707": {
      "content": "for (int ${1:i} = ${2:0}; ${3:$1 < 10}; $1${4:++}) {\n\t${5}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forr": true
      }
    },
    "e10e45bd-f8cb-39d1-9467-7738068ca229": {
      "content": "background-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgi:n": true
      }
    },
    "e10fe854-6bb4-38f5-a17c-f874f8db3d53": {
      "content": "_.orderBy(${collection}, ${iteratees}, ${orders})",
      "doc": "var users = [\n  { 'user': 'fred',   'age': 48 },\n  { 'user': 'barney', 'age': 34 },\n  { 'user': 'fred',   'age': 40 },\n  { 'user': 'barney', 'age': 36 }\n];\n\n// Sort by `user` in ascending order and by `age` in descending order.\n_.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n// => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\nThis method is like `_.sortBy` except that it allows specifying the sort\norders of the iteratees to sort by. If `orders` is unspecified, all values\nare sorted in ascending order. Otherwise, specify an order of \"desc\" for\ndescending or \"asc\" for ascending sort order of corresponding values.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-orderby",
      "matches": {
        "lodash orderby": true
      }
    },
    "e1150f19-f7e5-3f2f-99cb-ae68c01a3331": {
      "content": "${1:FIELDNAME} = forms.CharField($2,${3: max_length=$4,} required=${5:False})",
      "doc": "CharField (fchar)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fchar",
      "matches": {
        "fchar": true
      }
    },
    "e11acc61-5da3-32e1-bdbd-6b86674fed11": {
      "content": "unless ${1:condition}\n\t$2\nelsif ${3:condition}\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unlesee": true
      }
    },
    "e120ac7e-83f9-3769-ad42-7e733540f29e": {
      "content": "text-emphasis: before;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      }
    },
    "e123e832-86ed-3a85-bcd9-8cbab3c1619c": {
      "content": "function* ${1:name}(${2:arguments}) {\n\t${0}\n}",
      "doc": "named generator function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "named-generator-function-es6-",
      "matches": {
        "base function generator named": true
      }
    },
    "e12f5dd7-5278-3434-802c-a1b350f4223c": {
      "content": "=head2 ${1:MethodName}\n\n${0:Summary....}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "psub": true
      }
    },
    "e131b14f-017e-3007-9640-d564c41cacbf": {
      "content": "nocheck\nfastcall\nfastinit\nnolinkcheck\nlnkalign\nnoparamcountcheck\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "speed - native",
      "matches": {
        "speed": true
      }
    },
    "e1340e51-ea5c-3d71-9632-0e9ff8e1681a": {
      "content": "self.assertIsNone(${1:actual}${2:, '${3:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert is None",
      "matches": {
        "asino": true
      }
    },
    "e13e47b0-d48f-3cba-804b-9f6cac444571": {
      "content": "switch (${1}) {\ncase ${2}:\n\t${3}\n\tbreak\ndefault:\n\t${0}\n\tbreak\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "switch",
      "matches": {
        "sw": true
      }
    },
    "e13fb8f4-5219-3bbe-aa63-ba161a894a02": {
      "content": "${1|this,vm|}.\\$destroy()$2",
      "doc": "vm.$destroy()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$destroy",
      "matches": {
        "vmDestroy": true
      }
    },
    "e153af3b-9c1f-3763-9a85-bb2e97a65dca": {
      "content": "white-space-collapse normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:n": true
      }
    },
    "e1543af9-a5a7-31b1-be55-01474037987b": {
      "content": "<footer class=\"${1}\">\n\t${0}\n</footer>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "footer.": true
      }
    },
    "e159258d-ca60-3fdb-aa2e-fc596a4eb70c": {
      "content": "\\${4:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${4:default}",
      "matches": {
        "4:": true
      }
    },
    "e15fa7cd-7918-3530-800e-12e6f8dbbf42": {
      "content": "list-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      }
    },
    "e16084cb-d68c-33f4-96ce-71d3b4201f1c": {
      "content": "#if ${1:0}\n$0\n#endif // $1",
      "doc": "Code snippet for #if",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#if",
      "matches": {
        "#if": true
      }
    },
    "e160a9fc-4a94-39a9-9a95-f1ca8c24cfd2": {
      "content": "place-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fe": true
      }
    },
    "e16653a5-b7a9-30f6-babd-70bedbef03e7": {
      "content": "border-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrz": true
      }
    },
    "e167778e-d841-3857-9d85-80bb2d06d536": {
      "content": "background-clip: content-box",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:cb": true
      }
    },
    "e16c26ec-4cb2-3889-852c-380a114beb63": {
      "content": "!important",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "!important (alt)",
      "matches": {
        "i": true
      }
    },
    "e16d95e5-c567-3cbc-98a6-5cc953799987": {
      "content": "Page Should Contain Radio Button    ${1:${locator}}    ${2:${message=}}    ${3:loglevel=INFO}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Page Should Contain Radio Button",
      "matches": {
        "pscrb": true
      }
    },
    "e1719b97-c4a1-3cef-8fdb-123907c1a309": {
      "content": "_.assignWith(${object}, ${sources}, ${customizer})",
      "doc": "function customizer(objValue, srcValue) {\n  return _.isUndefined(objValue) ? srcValue : objValue;\n}\n\nvar defaults = _.partialRight(_.assignWith, customizer);\n\ndefaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n// => { 'a': 1, 'b': 2 }\n\nThis method is like `_.assign` except that it accepts `customizer`\nwhich is invoked to produce the assigned values. If `customizer` returns\n`undefined`, assignment is handled by the method instead. The `customizer`\nis invoked with five arguments: (objValue, srcValue, key, object, source).\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-assignwith",
      "matches": {
        "lodash assignwith": true
      }
    },
    "e171e1c6-e709-38b8-a9d8-58f27bf9ecf7": {
      "content": "[${1:#:id}]: mailto:${2:#:url} \"${3:#:title}\"",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[id]: email \"title\"",
      "matches": {
        "idemail": true
      }
    },
    "e17e6f43-a6d4-305b-88c9-a901620de32a": {
      "content": "max(${1:value1}, ${2:value2}${3:, }${0:value3});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "max": true
      }
    },
    "e17f8960-8e28-3e28-b56c-9ada6e2fcb6c": {
      "content": "enter-to-class=\"$1\"$0",
      "doc": "enter-to-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "enter-to-class",
      "matches": {
        "enterToClass": true
      }
    },
    "e17fe49f-e0f7-39a7-88c8-e47bd64449a2": {
      "content": "computed: {\n\t${1:name}() {\n\t\treturn this.${2:data} ${0}\n\t}\n},",
      "doc": "computed value",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-computed",
      "matches": {
        "vcomputed": true,
        "vue computed": true
      }
    },
    "e185f17c-f758-3b8e-b411-f5dfb14c28a9": {
      "content": "assert_select '${1:path}'${2:, ${3:text}: ${4:'${5:inner_html}'}}${6: do\n\t$0\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "assert_select",
      "matches": {
        "ass": true
      }
    },
    "e1881b14-2512-369c-8015-e7af00133855": {
      "content": "\\${0:TARGET}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${0:TARGET}",
      "matches": {
        "0T": true,
        "0t": true
      }
    },
    "e188f20a-345f-3d3d-a321-96762675d2b1": {
      "content": "#!/usr/bin/env python3\n${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "#!/usr/bin/env python3",
      "matches": {
        "#!": true,
        "shebang": true
      }
    },
    "e18af756-a522-3fc4-84fd-b0ee6201db54": {
      "content": "reject do |${1:e}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rejd": true
      }
    },
    "e18dc4e3-05b3-30fb-8964-bc135355d5d9": {
      "content": "<input type=\"$1\" name=\"$2\" value=\"$3\">$4",
      "doc": "HTML - Defines an input field",
      "filetype": "html",
      "grammar": "lsp",
      "label": "input",
      "matches": {
        "input": true
      }
    },
    "e191817e-ffee-351d-bdfb-6c4287bd604c": {
      "content": "<svelte:self ${1:prop}={${2:value}} />",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-self-prop",
      "matches": {
        "svelte self prop": true,
        "svsep": true
      }
    },
    "e195f785-5a08-37fd-9127-44a7bcd2e705": {
      "content": "for {\n\t${1}\n} yield ${2}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "e19703fb-b9e3-333e-9879-7a58f6ad55d2": {
      "content": "\\textsf{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsf": true,
        "textsf \\textsf{": true
      }
    },
    "e19b914a-70fc-3289-a619-df6f58e16b69": {
      "content": "font-smooth ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm": true
      }
    },
    "e1a112c6-29fb-3e92-8cca-bc2140b78ea1": {
      "content": "{% set ${1:#:var} = ${2:#:value} %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% set ... = ... %}",
      "matches": {
        "set": true
      }
    },
    "e1a847e0-80c7-3025-89b5-2cdd161a5bc6": {
      "content": "${1:type} ${2:ptr} = ($1*) malloc(sizeof($1));",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mlcd": true
      }
    },
    "e1ada42a-62c2-31c2-8424-6a9c024e50d1": {
      "content": "scrollbar-base-color:       ${1:#CCCCCC};${2:\nscrollbar-arrow-color:      ${3:#000000};\nscrollbar-track-color:      ${4:#999999};\nscrollbar-3dlight-color:    ${5:#EEEEEE};\nscrollbar-highlight-color:  ${6:#FFFFFF};\nscrollbar-face-color:       ${7:#CCCCCC};\nscrollbar-shadow-color:     ${9:#999999};\nscrollbar-darkshadow-color: ${8:#666666};}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "scrollbar",
      "matches": {
        "scrollbar": true
      }
    },
    "e1af9574-e31f-347a-a345-8a447ce260aa": {
      "content": "after_update :${0:method}",
      "doc": "after_update",
      "filetype": "rails",
      "grammar": "lsp",
      "label": " update",
      "matches": {
        "au": true
      }
    },
    "e1b6c148-ac2b-34dd-8df5-da5a6477b58e": {
      "content": "catch {\n    ${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "catch {}",
      "matches": {
        "catch_n": true
      }
    },
    "e1bcb836-2b0d-3a7e-b7f3-17e0e13e5c55": {
      "content": "border-corner-image: continue",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtli:c": true
      }
    },
    "e1bdddba-2fdb-33f4-b9d7-a1d7c162c899": {
      "content": "content no-close-quote",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      }
    },
    "e1be2c8b-d1fe-381f-b8c7-96a38618e779": {
      "content": "net.createServer(function(${1:socket}){\n\t${1}.on('data', function('data'){\n\t  ${2}\n\t]});\n\t${1}.on('end', function(){\n\t  ${3}\n\t});\n}).listen(${4:8124});",
      "doc": "",
      "filetype": "javascript.node",
      "grammar": "snu",
      "label": "",
      "matches": {
        "net": true
      }
    },
    "e1c38373-0264-3fe3-a9e4-236fe3333290": {
      "content": "(fun ${1:x} -> ${2:x})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "anonymous function",
      "matches": {
        "fun": true
      }
    },
    "e1c46f27-67fb-3531-828b-086d673d845e": {
      "content": "try {\n\t$1\n} catch ${2:Json}.Error => error {\n\t$3\n}",
      "doc": "try is a control expression for handling synchronous computations that might fail, for example when you are trying to convert an untyped JavaScript object into a typed Record.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Try",
      "matches": {
        "try": true
      }
    },
    "e1c6bd8c-9b6e-3056-bba7-3cc2bba0a981": {
      "content": "{% call ${1:name}(${2:args}) %}\n\t$3\n{% endcall %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "call",
      "matches": {
        "call": true
      }
    },
    "e1c73279-dda7-3a1a-b8bb-65769062393b": {
      "content": "${1:div}(:class=\"[${2:classNameA}, {${3:classNameB} : ${4:condition}}]\")",
      "doc": "vue multiple conditional class bindings",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Multiple Conditional Class Bindings",
      "matches": {
        "vclass-obj-mult": true
      }
    },
    "e1ce5ebc-06b8-33ed-9cd8-11081ab41539": {
      "content": "text-align: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-align: center",
      "matches": {
        "tac": true
      }
    },
    "e1d8d8a0-5db3-359c-8bea-430941eef223": {
      "content": "|${1}|",
      "doc": "",
      "filetype": "textile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      }
    },
    "e1db2819-e9f3-344d-a532-8274b8428ec7": {
      "content": "function ${1:name}($2)\n\t${3:-- code}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "fu": true
      }
    },
    "e1e1b341-654a-387b-baf7-fd3a714c3348": {
      "content": "// https://eips.ethereum.org/EIPS/eip-1820\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n/* ERC1820 Pseudo-introspection Registry Contract\r\n * This standard defines a universal registry smart contract where any address (contract or regular account) can\r\n * register which interface it supports and which smart contract is responsible for its implementation.\r\n *\r\n * Written in 2019 by Jordi Baylina and Jacques Dafflon\r\n *\r\n * To the extent possible under law, the author(s) have dedicated all copyright and related and neighboring rights to\r\n * this software to the public domain worldwide. This software is distributed without any warranty.\r\n *\r\n * You should have received a copy of the CC0 Public Domain Dedication along with this software. If not, see\r\n * <http://creativecommons.org/publicdomain/zero/1.0/>.\r\n *\r\n *    ███████╗██████╗  ██████╗ ██╗ █████╗ ██████╗  ██████╗\r\n *    ██╔════╝██╔══██╗██╔════╝███║██╔══██╗╚════██╗██╔═████╗\r\n *    █████╗  ██████╔╝██║     ╚██║╚█████╔╝ █████╔╝██║██╔██║\r\n *    ██╔══╝  ██╔══██╗██║      ██║██╔══██╗██╔═══╝ ████╔╝██║\r\n *    ███████╗██║  ██║╚██████╗ ██║╚█████╔╝███████╗╚██████╔╝\r\n *    ╚══════╝╚═╝  ╚═╝ ╚═════╝ ╚═╝ ╚════╝ ╚══════╝ ╚═════╝\r\n *\r\n *    ██████╗ ███████╗ ██████╗ ██╗███████╗████████╗██████╗ ██╗   ██╗\r\n *    ██╔══██╗██╔════╝██╔════╝ ██║██╔════╝╚══██╔══╝██╔══██╗╚██╗ ██╔╝\r\n *    ██████╔╝█████╗  ██║  ███╗██║███████╗   ██║   ██████╔╝ ╚████╔╝\r\n *    ██╔══██╗██╔══╝  ██║   ██║██║╚════██║   ██║   ██╔══██╗  ╚██╔╝\r\n *    ██║  ██║███████╗╚██████╔╝██║███████║   ██║   ██║  ██║   ██║\r\n *    ╚═╝  ╚═╝╚══════╝ ╚═════╝ ╚═╝╚══════╝   ╚═╝   ╚═╝  ╚═╝   ╚═╝\r\n *\r\n */\r\n// IV is value needed to have a vanity address starting with '0x1820'.\r\n// IV: 53759\r\n\r\n/// @dev The interface a contract MUST implement if it is the implementer of\r\n/// some (other) interface for any address other than itself.\r\ninterface ERC1820ImplementerInterface {\r\n    /// @notice Indicates whether the contract implements the interface 'interfaceHash' for the address 'addr' or not.\r\n    /// @param interfaceHash keccak256 hash of the name of the interface\r\n    /// @param addr Address for which the contract will implement the interface\r\n    /// @return ERC1820_ACCEPT_MAGIC only if the contract implements 'interfaceHash' for the address 'addr'.\r\n    function canImplementInterfaceForAddress(bytes32 interfaceHash, address addr) external view returns(bytes32);\r\n}\r\n\r\n\r\n/// @title ERC1820 Pseudo-introspection Registry Contract\r\n/// @author Jordi Baylina and Jacques Dafflon\r\n/// @notice This contract is the official implementation of the ERC1820 Registry.\r\n/// @notice For more details, see https://eips.ethereum.org/EIPS/eip-1820\r\ncontract ERC1820Registry {\r\n    ///@dev @notice ERC165 Invalid ID.\r\n    bytes4 constant internal INVALID_ID = 0xffffffff;\r\n    ///@dev @notice Method ID for the ERC165 supportsInterface method (= `bytes4(keccak256('supportsInterface(bytes4)'))`).\r\n    bytes4 constant internal ERC165ID = 0x01ffc9a7;\r\n    ///@dev @notice Magic value which is returned if a contract implements an interface on behalf of some other address.\r\n    bytes32 constant internal ERC1820_ACCEPT_MAGIC = keccak256(abi.encodePacked(\"ERC1820_ACCEPT_MAGIC\"));\r\n\r\n    ///@dev @notice mapping from addresses and interface hashes to their implementers.\r\n    mapping(address => mapping(bytes32 => address)) internal interfaces;\r\n    ///@dev @notice mapping from addresses to their manager.\r\n    mapping(address => address) internal managers;\r\n    ///@dev @notice flag for each address and erc165 interface to indicate if it is cached.\r\n    mapping(address => mapping(bytes4 => bool)) internal erc165Cached;\r\n\r\n    /// @notice Indicates a contract is the 'implementer' of 'interfaceHash' for 'addr'.\r\n    event InterfaceImplementerSet(address indexed addr, bytes32 indexed interfaceHash, address indexed implementer);\r\n    /// @notice Indicates 'newManager' is the address of the new manager for 'addr'.\r\n    event ManagerChanged(address indexed addr, address indexed newManager);\r\n\r\n    /// @notice Query if an address implements an interface and through which contract.\r\n    /// @param _addr Address being queried for the implementer of an interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @return The address of the contract which implements the interface '_interfaceHash' for '_addr'\r\n    /// or '0' if '_addr' did not register an implementer for this interface.\r\n    function getInterfaceImplementer(address _addr, bytes32 _interfaceHash) external view returns (address) {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        if (isERC165Interface(_interfaceHash)) {\r\n            bytes4 erc165InterfaceHash = bytes4(_interfaceHash);\r\n            return implementsERC165Interface(addr, erc165InterfaceHash) ? addr : address(0);\r\n        }\r\n        return interfaces[addr][_interfaceHash];\r\n    }\r\n\r\n    /// @notice Sets the contract which implements a specific interface for an address.\r\n    /// Only the manager defined for that address can set it.\r\n    /// (Each address is the manager for itself until it sets a new manager.)\r\n    /// @param _addr Address for which to set the interface.\r\n    /// (If '_addr' is the zero address then 'msg.sender' is assumed.)\r\n    /// @param _interfaceHash Keccak256 hash of the name of the interface as a string.\r\n    /// E.g., 'web3.utils.keccak256(\"ERC777TokensRecipient\")' for the 'ERC777TokensRecipient' interface.\r\n    /// @param _implementer Contract address implementing '_interfaceHash' for '_addr'.\r\n    function setInterfaceImplementer(address _addr, bytes32 _interfaceHash, address _implementer) external {\r\n        address addr = _addr == address(0) ? msg.sender : _addr;\r\n        require(getManager(addr) == msg.sender, \"Not the manager\");\r\n\r\n        require(!isERC165Interface(_interfaceHash), \"Must not be an ERC165 hash\");\r\n        if (_implementer != address(0) && _implementer != msg.sender) {\r\n            require(\r\n                ERC1820ImplementerInterface(_implementer)\r\n                    .canImplementInterfaceForAddress(_interfaceHash, addr) == ERC1820_ACCEPT_MAGIC,\r\n                \"Does not implement the interface\"\r\n            );\r\n        }\r\n        interfaces[addr][_interfaceHash] = _implementer;\r\n        emit InterfaceImplementerSet(addr, _interfaceHash, _implementer);\r\n    }\r\n\r\n    /// @notice Sets '_newManager' as manager for '_addr'.\r\n    /// The new manager will be able to call 'setInterfaceImplementer' for '_addr'.\r\n    /// @param _addr Address for which to set the new manager.\r\n    /// @param _newManager Address of the new manager for 'addr'. (Pass '0x0' to reset the manager to '_addr'.)\r\n    function setManager(address _addr, address _newManager) external {\r\n        require(getManager(_addr) == msg.sender, \"Not the manager\");\r\n        managers[_addr] = _newManager == _addr ? address(0) : _newManager;\r\n        emit ManagerChanged(_addr, _newManager);\r\n    }\r\n\r\n    /// @notice Get the manager of an address.\r\n    /// @param _addr Address for which to return the manager.\r\n    /// @return Address of the manager for a given address.\r\n    function getManager(address _addr) public view returns(address) {\r\n        // By default the manager of an address is the same address\r\n        if (managers[_addr] == address(0)) {\r\n            return _addr;\r\n        } else {\r\n            return managers[_addr];\r\n        }\r\n    }\r\n\r\n    /// @notice Compute the keccak256 hash of an interface given its name.\r\n    /// @param _interfaceName Name of the interface.\r\n    /// @return The keccak256 hash of an interface name.\r\n    function interfaceHash(string calldata _interfaceName) external pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(_interfaceName));\r\n    }\r\n\r\n    /* --- ERC165 Related Functions --- */\r\n    /* --- Developed in collaboration with William Entriken. --- */\r\n\r\n    /// @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n    /// @param _contract Address of the contract for which to update the cache.\r\n    /// @param _interfaceId ERC165 interface for which to update the cache.\r\n    function updateERC165Cache(address _contract, bytes4 _interfaceId) external {\r\n        interfaces[_contract][_interfaceId] = implementsERC165InterfaceNoCache(\r\n            _contract, _interfaceId) ? _contract : address(0);\r\n        erc165Cached[_contract][_interfaceId] = true;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not.\r\n    //  If the result is not cached a direct lookup on the contract address is performed.\r\n    //  If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n    //  'updateERC165Cache' with the contract address.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165Interface(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        if (!erc165Cached[_contract][_interfaceId]) {\r\n            return implementsERC165InterfaceNoCache(_contract, _interfaceId);\r\n        }\r\n        return interfaces[_contract][_interfaceId] == _contract;\r\n    }\r\n\r\n    /// @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n    /// @param _contract Address of the contract to check.\r\n    /// @param _interfaceId ERC165 interface to check.\r\n    /// @return True if '_contract' implements '_interfaceId', false otherwise.\r\n    function implementsERC165InterfaceNoCache(address _contract, bytes4 _interfaceId) public view returns (bool) {\r\n        uint256 success;\r\n        uint256 result;\r\n\r\n        (success, result) = noThrowCall(_contract, ERC165ID);\r\n        if (success == 0 || result == 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, INVALID_ID);\r\n        if (success == 0 || result != 0) {\r\n            return false;\r\n        }\r\n\r\n        (success, result) = noThrowCall(_contract, _interfaceId);\r\n        if (success == 1 && result == 1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /// @notice Checks whether the hash is a ERC165 interface (ending with 28 zeroes) or not.\r\n    /// @param _interfaceHash The hash to check.\r\n    /// @return True if '_interfaceHash' is an ERC165 interface (ending with 28 zeroes), false otherwise.\r\n    function isERC165Interface(bytes32 _interfaceHash) internal pure returns (bool) {\r\n        return _interfaceHash & 0x00000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF == 0;\r\n    }\r\n\r\n    /// @dev Make a call on a contract without throwing if the function does not exist.\r\n    function noThrowCall(address _contract, bytes4 _interfaceId)\r\n        internal view returns (uint256 success, uint256 result)\r\n    {\r\n        bytes4 erc165ID = ERC165ID;\r\n\r\n        assembly {\r\n            let x := mload(0x40)               // Find empty storage location using \"free memory pointer\"\r\n            mstore(x, erc165ID)                // Place signature at beginning of empty storage\r\n            mstore(add(x, 0x04), _interfaceId) // Place first argument directly next to signature\r\n\r\n            success := staticcall(\r\n                30000,                         // 30k gas\r\n                _contract,                     // To addr\r\n                x,                             // Inputs are stored at location x\r\n                0x24,                          // Inputs are 36 (4 + 32) bytes long\r\n                x,                             // Store output over input (saves space)\r\n                0x20                           // Outputs are 32 bytes long\r\n            )\r\n\r\n            result := mload(x)                 // Load the result\r\n        }\r\n    }\r\n},",
      "doc": "EIP-1820: Pseudo-introspection Registry Contract, This standard defines a universal registry smart contract where any address (contract or regular account) can register which interface it supports and which smart contract is responsible for its implementation.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc1820",
      "matches": {
        "erc1820": true
      }
    },
    "e1e38fbd-baf8-3863-9b23-ce0781bb6ca3": {
      "content": "NO-UNDO",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nu": true
      }
    },
    "e1ea21f9-991f-3f1d-b2b5-09d462cbef86": {
      "content": "cursor: move;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:m": true
      }
    },
    "e1ef0a62-fa1d-3d3b-a508-6f5e58425c2b": {
      "content": "before_create :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbc": true
      }
    },
    "e1ef67a2-3a01-3cbf-8717-1fe85e852438": {
      "content": "$.isNumeric(${1:value})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isnum": true
      }
    },
    "e1f6407a-d013-3ca9-96dd-fb36dcb4aaf4": {
      "content": "const component = new ${1:App}({\n\ttarget: ${2|target,document.body|},\n\tprops: ${3:props},\n\tanchor: ${4:anchor},\n\thydrate: ${5|false,true|},\n\tintro: ${5|false,true|}\n})",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-create-component",
      "matches": {
        "svcreate-component": true,
        "svelte create component": true
      }
    },
    "e1f93fcd-052f-30b0-b863-5b231bcf3d17": {
      "content": "@spec ${1:name}(${2:arg types}) :: ${3:no_return}\ndef $1(${4:args}) do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defs": true
      }
    },
    "e203ff67-7202-3a0c-b84f-f854c16af036": {
      "content": "unless ARGV.${1}\n\tabort \"Usage: #{$PROGRAM_NAME} ${2:ARGS_GO_HERE}\"${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usau": true
      }
    },
    "e216a0b0-90b7-3a59-a80b-5b218d9a7d44": {
      "content": "@change=\"${1:foo} = $event\"",
      "doc": "Vue Emit to Parent Component",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Emit to Parent",
      "matches": {
        "vemit-parent": true
      }
    },
    "e21988bf-dac8-3ee4-a699-37b7ce476bba": {
      "content": "{{- if and .Values.persistence.enabled .Values.persistence.$1.hostPath (not\n.Values.persistence.$1.existingClaim) -}}\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: {{ template \"${2:chartName}.fullname\" . }}-$1\nspec:\n  accessModes:\n\t- {{ .Values.persistence.$1.accessMode | quote }}\n  capacity:\n\tstorage: {{ .Values.persistence.$1.size | quote }}\n  hostPath:\n\tpath: {{ .Values.persistence.${1:value_key}.hostPath | quote }}\n{{- end -}}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pvc_hostpath_spec": true
      }
    },
    "e21b6698-52a6-3c87-9089-f09b6e93b175": {
      "content": "defer func() {\n\tif err := recover(); err != nil {\n\t\t${0}\n\t}\n}()",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defr": true
      }
    },
    "e22702be-8479-340a-b5f3-64bb30bab32d": {
      "content": "from django.utils.encoding import python_2_unicode_compatible",
      "doc": "For forwards compatibility, this decorator is available as of Django 1.4.2.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "ipy2_unicode_compatible",
      "matches": {
        "iuc": true
      }
    },
    "e22f3700-d9ca-3b98-a102-e454712c8bc3": {
      "content": "$(this)",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "this": true
      }
    },
    "e233f5f9-368b-3e16-a97b-e6e2710c2c4a": {
      "content": "FutureBuilder(\n  future: ${1:Future},\n  initialData: ${2:InitialData},\n  builder: (BuildContext context, AsyncSnapshot snapshot) {\n    return ${3:};\n  },\n),",
      "doc": "Creates a Future Builder. This builds itself based on the latest snapshot of interaction with a Future.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Future Builder",
      "matches": {
        "futureBldr": true
      }
    },
    "e23a5cf4-8ba0-3058-aaa1-6b07f51ee1be": {
      "content": "${1:obj}.insertAfter('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "insa": true
      }
    },
    "e23bda66-e397-3461-8160-dbb39783286f": {
      "content": "${1:kernel}<<<${2:args}>>>(${3});${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Kernel call",
      "matches": {
        "call": true
      }
    },
    "e254ae68-f175-3ecb-b3ad-a41fa3e7a1af": {
      "content": "[[NSColor ${0:blackColor}] set];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "color": true
      }
    },
    "e25cc8c2-3be7-36f6-9759-ac49a479753b": {
      "content": "import React from 'react';\nimport PropTypes from 'prop-types';\n\n${1:${TM_FILENAME_BASE}}.propTypes = {\n\t$0\n};\n\nfunction ${1:${TM_FILENAME_BASE}}(props) {\n\treturn (\n\t\t<div>\n\t\t\t\n\t\t</div>\n\t);\n}\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a stateless React component as a named function with PropTypes",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactStatelessFunctionProps",
      "matches": {
        "rsfp": true
      }
    },
    "e261db42-9866-3db1-a041-970ddd4c0a02": {
      "content": "= render partial: '${0}'",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "renp": true
      }
    },
    "e26353bc-fe16-327b-9f9c-cfff47e0b3b0": {
      "content": "align-items: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:st": true
      }
    },
    "e266ea70-6e7d-3668-af3d-89e40841b538": {
      "content": "${1:obj}.off('${2:events}', '${3:selector expression}'${4:, handler})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "off": true
      }
    },
    "e2689ceb-5788-3574-83df-69e95724b19f": {
      "content": "border-right-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-right-style: style (border)",
      "matches": {
        "border": true
      }
    },
    "e26a1dee-74ca-349e-a430-770ea297a628": {
      "content": "FUNCTION LOG(${1:number})$0",
      "doc": "format base e logarithm of number",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOG",
      "matches": {
        "FUNCTION LOG": true
      }
    },
    "e26ad8f8-480a-3b8f-bd49-48e9dc516fd2": {
      "content": "<input type=\"url\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:url": true
      }
    },
    "e26e8d69-6148-3216-9e52-bc10937f0cf5": {
      "content": "abs(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "abs": true
      }
    },
    "e26f7b39-e3b9-38f9-ac41-ed336093bcca": {
      "content": "{% try %}\n  ${1:${VISUAL}}\n{% except %}\n  ${2}\n{% finallly %}\n  ${0}\n{% end %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "e26f8ed3-7ebc-3e75-854a-dccbb7e1a601": {
      "content": "echo CHtml::activeTextArea(${1:model}, '${2:attribute}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhata": true
      }
    },
    "e271c111-5e71-32a2-80c1-eef047b0d029": {
      "content": "import React, { useState } from 'react'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-usestate",
      "matches": {
        "imrs": true,
        "react import usestate": true
      }
    },
    "e2751299-4994-3aa1-9782-69b0c01da172": {
      "content": "<% ${1:items}.each do |${2:item}| %>\n  $2\n<% end %>",
      "doc": "each do",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "each",
      "matches": {
        "each": true
      }
    },
    "e27b0e8f-b78d-352b-875f-f8b5c4ea25e5": {
      "content": "paddingHorizontal: ${1},",
      "doc": "paddingHorizontal",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingHorizontal",
      "matches": {
        "padding": true
      }
    },
    "e27c14ca-6f1f-39de-bc90-4ab3689cce98": {
      "content": "@for ($i = 0; $i < ${1}; $i++)\n    ${2}\n@endfor",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@for ... @endfor",
      "matches": {
        "for": true
      }
    },
    "e27c8068-6c13-3946-afa6-2a5c7f7d37cb": {
      "content": "${1:iterable}.filter((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "filter": true
      }
    },
    "e27effc3-fe0b-30cf-a129-1a108304a95b": {
      "content": "font-effect: engrave;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:eg": true
      }
    },
    "e282b4fc-2faf-323d-9746-290cbc0447c1": {
      "content": "background: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "background": true,
        "bg": true
      }
    },
    "e288a728-2b6b-39b2-a1aa-8d487b8a0d56": {
      "content": "note left : $0",
      "doc": "A note that appears on the left",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Note left",
      "matches": {
        "note-lf": true
      }
    },
    "e28bb404-066b-34d9-869f-1800167a6f06": {
      "content": "create table ${1:table} (\n\t${0:columns}\n);",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl": true
      }
    },
    "e28d065c-7411-3e1c-8462-7f2c7f2babd2": {
      "content": "val ${1:name}${2:: T} = ${0:value}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "val": true
      }
    },
    "e291d78e-cf84-3dfe-976b-a21786b371df": {
      "content": "PERFORM ${1}\n\t${2}\nEND-PERFORM\n${0}",
      "doc": "PERFORM .. END-PERFORM",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "PERFORM-END-PERFORM",
      "matches": {
        "PE": true,
        "PERFORM": true
      }
    },
    "e29353a8-0bc9-3f0d-ba6a-03bb62beb47b": {
      "content": "{-# OPTIONS_GHC ${1:opt} #-}$0",
      "doc": "GHC options pragma",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "opt pragma",
      "matches": {
        "opt": true
      }
    },
    "e29e6b47-9ef5-3433-af2e-d320e6c00626": {
      "content": "-moz-border-image: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      }
    },
    "e2a0b97f-e13b-3c2a-9877-41fb52214461": {
      "content": "t.text :${1:title}\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tct": true
      }
    },
    "e2b595f2-dfd0-3779-a799-c0774a36c3eb": {
      "content": "${1:obj}.fadeIn('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadein": true
      }
    },
    "e2b68c5b-78e4-39e8-b89b-f006f9f1b488": {
      "content": "font-family: ${0:Monaco,'Courier New'},monospace;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:m": true
      }
    },
    "e2b6a29a-c55f-3536-8b60-16eb37e9a55a": {
      "content": "pipeline {\n\tagent any\n\tstages {\n\t\tstage('${1:Build}') {\n\t\t\tsteps {\n\t\t\t\tsh '${2:make}'\n\t\t\t}\n\t\t}\n\t}\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pipeline": true
      }
    },
    "e2b72f17-53f2-3213-a31e-6000622dc9f4": {
      "content": "<remarks>${1}</remarks>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<rem": true
      }
    },
    "e2b8f4c6-08d7-38ca-8e03-5ddc38500369": {
      "content": "admin.site.register($1)",
      "doc": "register the model class without providing a ModelAdmin description.",
      "filetype": "admin",
      "grammar": "lsp",
      "label": "register",
      "matches": {
        "register": true
      }
    },
    "e2b9e654-5af6-3e7c-ac79-07bf1d13d6a6": {
      "content": "if ${1:let} ${2:name} = ${3:expression} else {\n    ${0:TARGET}\n}${9}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "if let/case ... { ... }",
      "matches": {
        "optional": true
      }
    },
    "e2bc9b33-d7a4-332f-880e-2aab6cd329b0": {
      "content": "for (let ${1:key} in ${2:array}) {\n\tif (${2:array}.hasOwnProperty(${1:key})) {\n\t\t${0}\n\t}\n}",
      "doc": "for in loop",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-in-loop",
      "matches": {
        "base for in": true
      }
    },
    "e2becb14-5f1d-38f6-9573-ff7531a1a0b5": {
      "content": "float: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:n": true
      }
    },
    "e2c6209c-e402-345d-864d-b6f66f522e67": {
      "content": "border-bottom-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      }
    },
    "e2c67d4e-ba49-32bd-a782-1e308aa944fb": {
      "content": "paddingRight: ${1},",
      "doc": "paddingRight",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "paddingRight",
      "matches": {
        "padding": true
      }
    },
    "e2c6a0ed-d227-38f5-b0de-67d65f28481f": {
      "content": "watch([${1:foo}, ${2:bar}], ([new${1}, new${2}], [prev${1}, prev${2}]) => {\n\t${3}\n})",
      "doc": "Vue Composition api - watch as array",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Composition API - watch - array",
      "matches": {
        "v3watch-array": true
      }
    },
    "e2c9e84d-e328-3512-ae03-4d249f7c02ab": {
      "content": "Export-CSV -NoTypeInformation -Path ${1:path}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "epcsv": true
      }
    },
    "e2da1709-f9a6-30e2-90eb-95bff157a8f3": {
      "content": "overflow-style: move",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      }
    },
    "e2dc8478-c21f-3470-9356-c261421c67ab": {
      "content": "date:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      }
    },
    "e2e042ee-5068-35a2-93b5-54dffe5bbce0": {
      "content": "lambda ${1:parameter_list}: ${2:expression}",
      "doc": "Code snippet for a lambda statement",
      "filetype": "python",
      "grammar": "lsp",
      "label": "lambda",
      "matches": {
        "lambda": true
      }
    },
    "e2e532e8-8f62-3683-8f1f-0835587e17de": {
      "content": "\"$1\"",
      "doc": "Describe the activity being done",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Activity",
      "matches": {
        "act": true
      }
    },
    "e2e897ce-8fe1-33f9-946d-61b1236fd777": {
      "content": "if __name__ == '__main__':\n\t${0:main()}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifmain": true
      }
    },
    "e2f10ad5-5f30-3608-9120-9234d279ecc5": {
      "content": "empty-cells: hide;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:h": true
      }
    },
    "e2f6a372-ddf5-31a8-b8d2-a57d45e70f18": {
      "content": "{- $0 -}",
      "doc": "Block Comment",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "block_comment",
      "matches": {
        "--": true,
        "block_comment": true,
        "comment": true
      }
    },
    "e2fa1c88-8111-37f8-90c7-857e5303923f": {
      "content": "#+BEGIN_VERSE\n$0\n#+END_VERSE",
      "doc": "verse",
      "filetype": "org",
      "grammar": "lsp",
      "label": "verse",
      "matches": {
        "<v": true
      }
    },
    "e30db586-42e4-36eb-887d-16ad9691fc0a": {
      "content": "display: table-column",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      }
    },
    "e3141878-045a-3228-a757-395e08adaa6f": {
      "content": "get_digit:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "getdigit": true
      }
    },
    "e31c80cd-4089-3b51-a47a-f85f5fd15975": {
      "content": "import React from 'react'\n\nexport default function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}() {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}",
      "doc": "Creates a React Functional Component with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-functional-component",
      "matches": {
        "react component functional": true,
        "rfc": true
      }
    },
    "e31fa9d9-b43a-3865-98e6-7fb6232d8f1e": {
      "content": "function locale-compare(${1:argument1},${2:argument2},${3:locale-optional})$0",
      "doc": "character '=' or '<' or '>' indicating the result of comparing argument1 and argument2 using a culturall",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-locale-compare",
      "matches": {
        "function locale-compare": true
      }
    },
    "e31fe1d1-94d9-3709-972e-e43042dcde90": {
      "content": "elsif ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "e3201986-7c3f-3431-976a-85222b2c6ff6": {
      "content": "quotes: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q:n": true
      }
    },
    "e32119ad-3bab-3629-98b2-d136206ada7b": {
      "content": "import pdb; pdb.set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "import pdb..",
      "matches": {
        "pdb": true
      }
    },
    "e3249495-39c7-3b37-82e2-78767ddd6c85": {
      "content": "${1:obj}.removeProp('${2:property name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remp": true
      }
    },
    "e32c784f-1da5-3d5a-b6fc-b4bd1f790483": {
      "content": "{% import _self as ${1:name} %}$0",
      "doc": "importself",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "importself",
      "matches": {
        "importself": true
      }
    },
    "e32d0a73-bb06-31e4-8f45-22f8c10b1927": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "alpaca",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "e32fd90c-fc96-3f4a-b581-8e2d39519c95": {
      "content": "cut(${1:x}, breaks = c(${2:${3:}, ${4:max(${1:x})}}))",
      "doc": "Divide Into Intervals",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cut",
      "matches": {
        "cut": true
      }
    },
    "e3313b1a-4327-3c5d-a680-d19b9d2b97e8": {
      "content": "border-fit stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:st": true
      }
    },
    "e3349e5e-71d0-3774-920d-b4135bf127bf": {
      "content": "// replaces the top of the active matrix stack with the identity matrix\ngl.glLoadIdentity();",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl load identity",
      "matches": {
        "gl": true
      }
    },
    "e33f873a-bc88-31d4-9bf7-13d3a09bec03": {
      "content": "${1:obj}.click (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "click": true
      }
    },
    "e3407061-b7b6-3be9-a20a-0e4f3df29ecc": {
      "content": "{% include \"$1\" %}",
      "doc": "include tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "include",
      "matches": {
        "include": true
      }
    },
    "e34182d1-7ab2-3fdb-bfbf-ea4526e0cfba": {
      "content": "expect(${1:target}).wasNotCalledWith(${2:arguments})",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect was not called with (coffee)",
      "matches": {
        "noscw": true
      }
    },
    "e3458547-6399-37d3-ab35-6c0ee9410305": {
      "content": "console.log('${1:object} :>> ', ${1:object});",
      "doc": "Displays an object in the console with its name",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consolelogobject",
      "matches": {
        "base console log object": true
      }
    },
    "e34d57f1-bf18-3d7a-bf51-dd73cbfcf1c4": {
      "content": "time_ago_in_words",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "time_ago_in_words",
      "matches": {
        "taiw": true
      }
    },
    "e34d7f37-78e6-3525-a34e-5f151ae40881": {
      "content": "echomsg string(${1:TARGET})",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "echomsg": true,
        "log": true
      }
    },
    "e34ebf90-2139-3818-b4ac-3d08de26104e": {
      "content": "property! ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw!": true
      }
    },
    "e356143e-c715-3c22-b344-1441c10bddbd": {
      "content": "{ ${0:#statements} }",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      }
    },
    "e36073e3-de75-369e-9e7e-dd0e70bb64e4": {
      "content": "% if ${1:condition}:\n\t${2:}\n% else:\n\t${3:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "if": true
      }
    },
    "e3619c89-a5a0-37fe-bdad-ad64d3e3ac47": {
      "content": "| append: '${1:string}'",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "append": true
      }
    },
    "e362791b-e5dc-33bb-80d4-b79f5b2f5600": {
      "content": "animation-name: ${0:name};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "animation-name",
      "matches": {
        "anin": true
      }
    },
    "e362e479-785e-3ec5-890c-a0acd782aee5": {
      "content": "@media ${1:condition} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media ...",
      "matches": {
        "media": true
      }
    },
    "e3648173-52dc-3f79-909d-ebfa68a7de89": {
      "content": "print(${1:#:target}, ${2:#:type});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "e3659ffc-3d39-3ae7-b0db-bcfa487f69fc": {
      "content": "border-fit: repeat;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:r": true
      }
    },
    "e3686b12-3695-3f96-bb6c-5949a4b65bed": {
      "content": "must_be ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb": true
      }
    },
    "e3693da5-fc5a-3e29-932d-6f29974b59e4": {
      "content": "fread(${1:ARRAY}, sizeof(${2:TYPE}), ${3:N_MEMBERS}, ${4:FILE})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "fread(......, file)",
      "matches": {
        "fread": true
      }
    },
    "e36ac259-3f6d-3bb0-8f3b-300f2c286ed8": {
      "content": "quotes: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "q": true
      }
    },
    "e36b139e-cb04-3389-9a13-4b36ffb3b405": {
      "content": "display: inline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:i": true
      }
    },
    "e36e955f-4368-32b2-8e20-9e1aa899b559": {
      "content": "${1:obj}.fadeTo 'slow/400/fast', ${2:0.5}, ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadetoc": true
      }
    },
    "e3737d7e-6daa-39ee-917d-2d91b8b7ed18": {
      "content": "border-bottom-left-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      }
    },
    "e37ec3ac-b766-3f61-bd26-c5b8134c1672": {
      "content": "\\item[${1}] ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "itd": true,
        "item[ \\item[": true
      }
    },
    "e385c4f4-1d6c-3007-a998-7fe6e23436d6": {
      "content": "{ |${1:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true
      }
    },
    "e386b719-317a-36c6-b2a9-0080c5045d04": {
      "content": "justify-self stretch",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "js:st": true
      }
    },
    "e38d41db-9498-3589-ad9b-45c4fa43de5f": {
      "content": "constructor(props) {\n  super(props)\n\n  this.state = {\n     ${1:first}\n  }\n}",
      "doc": "Adds a default constructor for it('', () => {})the class that contains props as arguments",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "classConstructor",
      "matches": {
        "rconst": true
      }
    },
    "e38da83a-0ac4-3cad-a5bc-1949dba1deb5": {
      "content": "align-content center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:c": true
      }
    },
    "e39dd77f-4e2e-36d2-9056-b4635d4ede88": {
      "content": "class=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        ".": true
      }
    },
    "e3a0701d-78f0-38f2-a073-afbe8b79b11a": {
      "content": "${1:FIELDNAME} = models.EmailField($2, max_length=${3:254})",
      "doc": "EmailField (memail).\n\nA CharField that checks that the value is a valid email address.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "memail",
      "matches": {
        "memail": true
      }
    },
    "e3a3ed8c-1daa-35ec-8534-1ff3a0f514e1": {
      "content": "visibility: ${1:visible/hidden/collapse};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "visibility: type (visibility)",
      "matches": {
        "visibility": true
      }
    },
    "e3ac4b25-55fe-3d75-8d92-74de7a2bc531": {
      "content": "resources :${1:posts}${2: do\n\t$3\nend}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "resources",
      "matches": {
        "res": true
      }
    },
    "e3b16129-0794-34e8-8b5b-cb19c68e21f3": {
      "content": "{\n\t\"type\": \"link_list\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema link list dropdown",
      "matches": {
        "_link_list": true
      }
    },
    "e3b1fdec-37c1-310f-be2c-b947f433d752": {
      "content": "{% for ${1} in ${2} %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "e3b2d023-3e3b-316c-b419-f0ca5d4ea885": {
      "content": "<c:set var=\"${1}\" value=\"${0}\" />",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cset": true
      }
    },
    "e3b2e57f-2d70-3852-b26f-0d9b8f3123ad": {
      "content": "{% trans %}\n\t$1\n{% endtrans %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "translation",
      "matches": {
        "trans": true
      }
    },
    "e3b79b49-3215-3f39-a582-d07f2dfef355": {
      "content": "setTimeout(function() { ${0} }, ${1:10});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "setTimeout-function": true
      }
    },
    "e3bb3d21-35b4-3827-8012-7c2e118a875a": {
      "content": "else${0:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true,
        "else": true
      }
    },
    "e3bf5971-4d55-3aa4-9d07-f7a6fb7c4ef6": {
      "content": "PropTypes.instanceOf($0),",
      "doc": "Is an instance of a class prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeInstanceOf",
      "matches": {
        "pti": true
      }
    },
    "e3c76fef-82b1-3fef-aabf-24c2a8f3e67c": {
      "content": "${1:FIELDNAME} = DateRangeField()",
      "doc": "DateRangeField (fdaterange).\n\n*PostgreSQL specific form fields*.",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fdaterange",
      "matches": {
        "fdaterange": true
      }
    },
    "e3c8a54c-990f-3c6e-bfa3-7c3dea43ddf9": {
      "content": "m_ply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m_": true
      }
    },
    "e3cd197c-6553-3a05-b37f-e002836abc20": {
      "content": "borderLeftWidth: ${1},",
      "doc": "borderLeftWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderLeftWidth",
      "matches": {
        "bor": true
      }
    },
    "e3d06858-8b5d-3dc8-9a6c-803fa57af22f": {
      "content": "${1:obj}.stop('${2:queue}', ${3:false}, ${4:false})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stop": true
      }
    },
    "e3d080a3-ce9b-3290-8b8f-d3423357a8e3": {
      "content": "border-style: inset",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:i": true
      }
    },
    "e3d092ef-10de-3b7c-85b8-0b82a2ec0986": {
      "content": "function ${1:name}(${2:input}) result(${3:output})\n\t${4:argument type}, intent(${5:inout}) :: $2\n\t${6:function type} :: $3\n\t$0\nend function $1",
      "doc": "function",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "fun",
      "matches": {
        "fun": true
      }
    },
    "e3d6f5be-e462-32bf-9d80-b23121e06450": {
      "content": "FUNCTION FRACTION-PART(${1:number})$0",
      "doc": "portion of number that occurs to the right of the decimal point",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-FRACTION-PART",
      "matches": {
        "FUNCTION FRACTION-PART": true
      }
    },
    "e3d75479-8fa3-3b01-bfec-8c87e71e858a": {
      "content": "echo CHtml::scriptFile('${0:url}');",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhjsf": true
      }
    },
    "e3dba7c0-33e0-3b4a-b7af-bd6ba421aa9d": {
      "content": "module Main exposing (Model, Msg(..), init, main, subscriptions, update, view)\n\nimport Browser\nimport Html exposing (..)\nimport Json.Encode\n\n\nmain : Program Flags Model Msg\nmain =\n\tBrowser.element\n\t\t{ init = init\n\t\t, update = update\n\t\t, subscriptions = subscriptions\n\t\t, view = view\n\t\t}\n\n\ntype alias Model =\n\t{}\n\n\ntype alias Flags =\n\tJson.Encode.Value\n\n\ninit : Flags -> ( Model, Cmd Msg )\ninit flags_ =\n\t( {}\n\t, Cmd.none\n\t)\n\n\ntype Msg\n\t= Noop\n\n\nupdate : Msg -> Model -> ( Model, Cmd Msg )\nupdate msg model =\n\tcase msg of\n\t\tNoop ->\n\t\t\t( model\n\t\t\t, Cmd.none\n\t\t\t)\n\n\nsubscriptions : Model -> Sub Msg\nsubscriptions model =\n\tSub.none\n\n\nview : Model -> Html Msg\nview model =\n\th1 [] [ text \"Hello, world!\" ]",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "element": true
      }
    },
    "e3ddd76d-fc3e-36d2-9e5d-3efce3c0be3c": {
      "content": "[${1:id}]: mailto:${2:email} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[:@": true
      }
    },
    "e3e17cc1-5ddc-3f5b-8c95-264ab77d62fe": {
      "content": "output${1:#: nbit} o_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "output [] o_,",
      "matches": {
        "O": true
      }
    },
    "e3e7810b-5a57-3ce0-88be-f4404e880a7d": {
      "content": "echo CHtml::beginForm(array('${1}'), '${2:post}',array('${3:optionName}'=>${4:optionValue}));\n${0}\necho CHtml::endForm();",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhbeform": true
      }
    },
    "e3e8a702-2c1b-3b9b-9871-68b5ee659fa8": {
      "content": "if err != nil {\n\treturn errors.Wrapf(err, \"${1:message %v}\", ${2:args...})\n}\n${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Error return wrapf",
      "matches": {
        "errnwf": true
      }
    },
    "e3f138d5-fff8-3008-9850-8c2b61f43357": {
      "content": "{% elseif ${1:#:condition} %}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elseif": true
      }
    },
    "e3f1c036-e6d8-35d2-93fe-e59878983377": {
      "content": "return(${0})",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "return",
      "matches": {
        "ret": true
      }
    },
    "e3f872bc-44c2-3b8e-81dc-69f5adf3cc02": {
      "content": "max-width: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw:n": true
      }
    },
    "e3fbd8d6-dfa0-3ced-a77e-7e94c25934a6": {
      "content": "defer {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defer": true
      }
    },
    "e3fc4b93-c603-35ac-b31d-1fe101f4553f": {
      "content": "box-shadow: ${1:1px} ${2:1px} ${3:1px} ${4:1px} ${0:rgba(0, 0, 0, .5)};",
      "doc": "box-shadow: x-offset y-offset blur spread color",
      "filetype": "css",
      "grammar": "lsp",
      "label": "box-shadow",
      "matches": {
        "bos": true
      }
    },
    "e4004d7e-eeb5-370d-99d0-ff6d46130937": {
      "content": "#undef ${0:#:SYMBOL}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "und": true,
        "undef": true
      }
    },
    "e40683c2-1947-3628-9030-54e554ae9880": {
      "content": "\\${${1:x}}    \\${${2:y}}=    Get Window Position",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Get Window Position",
      "matches": {
        "gwp": true
      }
    },
    "e40687f2-dec3-3d10-824c-f14169ce3b74": {
      "content": "(if (not ${1})\n\t(let (${2})\n\t\t${3})\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifnl": true
      }
    },
    "e414750d-7b23-3d8b-b57d-59179fe0079c": {
      "content": "if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "else { ... }",
      "matches": {
        "if": true
      }
    },
    "e41644c0-db00-382f-b940-899a78467616": {
      "content": "for (${1:object} in ${2:array}) {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "e42760f1-65d0-314a-af17-71770125b1d4": {
      "content": "divisibleby:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "divisibleby": true
      }
    },
    "e4293bc2-257d-39e7-8218-555003a791dc": {
      "content": "cy.clearCookies();",
      "doc": "Clear all browser cookies for current domain and subdomain.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-cookies-clear-all",
      "matches": {
        "cypress cookies clear all": true
      }
    },
    "e4334eb8-f89a-3b34-bccf-40de81b120fc": {
      "content": "<template>\n  ${0}\n</template>\n\n<script>\nexport default {\n}\n</script>\n\n<style>\n\n</style>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "Scaffold <template> <script> and <style>",
      "matches": {
        "scaffold": true
      }
    },
    "e4383acb-3c3f-3cce-bdb6-f667410ecfb3": {
      "content": "{% elseif ${1} %}\n\t${0:TARGET}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "{% elseif ... %} ...",
      "matches": {
        "elif": true,
        "elseif": true
      }
    },
    "e443d50d-d833-39d1-9cea-69e73dd4cb7a": {
      "content": "text-transform uppercase",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:u": true
      }
    },
    "e4447a1b-eb45-3dd1-9cda-fb954c1bce79": {
      "content": "${1:el}.getAttribute('${2:attr}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "getAttribute",
      "matches": {
        "hega": true
      }
    },
    "e444a418-cd9d-3624-ae83-b03c58047d19": {
      "content": "visibility: collapse",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:c": true
      }
    },
    "e444b3de-df40-3f41-bf6b-cdd6f31e9cd3": {
      "content": "chisq.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chi": true
      }
    },
    "e44c4ffe-6e56-3924-971c-9f40e36a0a6c": {
      "content": "expect($1).toBeDefined();$0",
      "doc": "expects the argument is defined",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobedefined",
      "matches": {
        "jest expect tobedefined": true,
        "tbd": true
      }
    },
    "e44f0eaf-fd27-3ab2-9dc7-28ad7f0025a0": {
      "content": "outline-color: ${0:#000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      }
    },
    "e455a5ed-3b2e-37a9-ad95-55e626b4b045": {
      "content": "<%= image_tag \"${1}\"${0} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "it": true
      }
    },
    "e459846b-10f9-3029-ba25-63e7d3266d30": {
      "content": "${1:public} string ${2}(${3})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms": true
      }
    },
    "e45a23b8-af3b-32c2-a582-55491279ea56": {
      "content": "|> List.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ltap": true
      }
    },
    "e4617276-f022-3052-910c-9b3e85b56cee": {
      "content": "wont_respond_to :${0:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wrt": true
      }
    },
    "e4644d65-2078-3140-83ba-c9e37a4b526d": {
      "content": "blue(${0:color});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blue": true
      }
    },
    "e46ea26c-43cc-359e-a0c9-8684aed4bd98": {
      "content": "if ($1) {\n\t$0\n}",
      "doc": "Code snippet for if statement",
      "filetype": "c",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "e4737510-c64c-37e7-bb38-f69a8f5bd5e8": {
      "content": "expect($1).toBeGreaterThan($0);",
      "doc": "expects the argument is greater than or equal",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobegreaterthan",
      "matches": {
        "jest expect tobegreaterthan": true,
        "tbgt": true
      }
    },
    "e477fbc4-a2b8-3f39-b17d-d5ac546f4bd1": {
      "content": "appear-to-class='$1'$0",
      "doc": "appear-to-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "appear-to-class",
      "matches": {
        "appearToClass": true
      }
    },
    "e4796899-38c5-3663-a0b3-60fca7616710": {
      "content": "|> Seq.map (fun x -> printfn \"%A\" x; x) // tap",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "stap": true
      }
    },
    "e47b2a40-5f51-366e-b505-80b336a65290": {
      "content": "$this->session->userdata(\"${1:item}\");${2}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_session_userdata": true
      }
    },
    "e47e0eb6-7178-3dc1-ac16-a3c3e7fec8e0": {
      "content": "import React, { PureComponent } from 'react'",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "import-react-purecomponent",
      "matches": {
        "imrpc": true,
        "react import purecomponent": true
      }
    },
    "e480a36f-aa74-34f9-a1d4-ca7d8fe48ffa": {
      "content": "grid-row ${1} / ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      }
    },
    "e48354c8-06b7-3173-9e43-d53f6129bfe4": {
      "content": "Object.defineProperty(${1:dest}, '${2:prop}', {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Object.defineProperty",
      "matches": {
        "od": true
      }
    },
    "e48417bc-8de0-3033-9c6c-f772538c8704": {
      "content": "${1:obj}.addClass('${2:class name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addClass": true
      }
    },
    "e485deed-4027-3a6b-b17b-1161a861979b": {
      "content": "import axios from 'axios';",
      "doc": "import axios",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-import",
      "matches": {
        "axios import": true
      }
    },
    "e48f3cca-3f6d-37ec-94a0-15e54bee7dbf": {
      "content": "def get_context_data(self, **kwargs):\n\tkwargs['extra_context'] = ${1:'New Value'}\n\treturn super(${2:CLASS_NAME}, self).get_context_data(**kwargs)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "get_context_data view method",
      "matches": {
        "context": true
      }
    },
    "e491aebf-a1a7-3e0c-b374-13b240d84ab3": {
      "content": "if (${1:condition}) {\n\t$0\n} else {\n\t\n}",
      "doc": "If-Else Statement",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "If-Else Statement",
      "matches": {
        "ifelse": true
      }
    },
    "e4a4f4ca-f6cc-30db-b5fe-da437bcecbae": {
      "content": "process (${1:clk})\nbegin\n\tif rising_edge ($1) then\n\t\t${2}\n\tend if;\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prc": true
      }
    },
    "e4a719a0-539e-3b4a-859d-db95bc69eaab": {
      "content": "func Test${1}(${2:t *testing.T}) {\n  ${3}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func Test...(t *testing.T) { ... }",
      "matches": {
        "functest": true
      }
    },
    "e4ae321e-3f99-35fd-a866-687c79ff6cef": {
      "content": "throw new (\"${1:Exception()}\");",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "throw": true
      }
    },
    "e4b320aa-dae9-3a02-b627-d66f14196870": {
      "content": "return ${0}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "re": true
      }
    },
    "e4b78d06-3e41-3c4c-b898-3d514384ca6f": {
      "content": "appear-class=\"$1\"$0",
      "doc": "appear-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "appear-class",
      "matches": {
        "appearClass": true
      }
    },
    "e4c6cafd-03b3-31c5-a9e2-24b3b79559af": {
      "content": "{# ${0:comment} #}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#": true
      }
    },
    "e4d621c1-07db-3616-ac13-2318caf92246": {
      "content": "this.state.$0",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-component-state",
      "matches": {
        "react component state": true,
        "state": true
      }
    },
    "e4db3de4-cbe4-3826-b2cd-b09befccc0ec": {
      "content": "component(:is='${1:componentId}') $0",
      "doc": "component element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "component",
      "matches": {
        "component": true
      }
    },
    "e4dc26f5-fa23-37ff-bb88-cee640ae9e69": {
      "content": "sinh($2)",
      "doc": "return the hyperbolic sine of the parameter",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "sinh",
      "matches": {
        "sinh": true
      }
    },
    "e4dfb3cb-97fe-3125-b499-dcc068057546": {
      "content": "package ${1:package_name};\n\t${0}\nendpackage : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkg": true
      }
    },
    "e4e7340b-ee31-30fc-b04c-652351df5fac": {
      "content": "<meta name=\"keywords\" content=\"${1}\">${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keywords": true
      }
    },
    "e4ec91e4-5970-3c7c-af07-675c0c2e5dcf": {
      "content": "length_is:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lengthis": true
      }
    },
    "e4ed906f-29b0-3be5-9310-933096feb84e": {
      "content": "#!/usr/bin/env bash",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bash": true
      }
    },
    "e4f8bac7-e309-397b-8326-ff7bfbaebb8a": {
      "content": "const ${1:packageName} = require('${1:package}');$0",
      "doc": "Require a package to const",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "requireToConst",
      "matches": {
        "req": true
      }
    },
    "e504f9b6-f4fc-3b24-8931-81d40553c5d2": {
      "content": "program ${1:main}\n\t${0}\nend program $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prog": true
      }
    },
    "e50cfd88-5b07-3f69-973d-f92f0090c7f2": {
      "content": "<%inherit file=\"${1:filename}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "inherit",
      "matches": {
        "inherit": true
      }
    },
    "e50e47b4-a0cb-3f69-b376-4c6f30b49cfa": {
      "content": "white-space: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:n": true
      }
    },
    "e50e7154-0e0c-3e70-8e9d-399e77b5f602": {
      "content": "====== ${1} ======\n\n${2}",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "======": true
      }
    },
    "e5178bd1-8fe0-366c-8266-c78c7fc9de9d": {
      "content": "_.upperFirst(${string})",
      "doc": "_.upperFirst('fred');\n// => 'Fred'\n\n_.upperFirst('FRED');\n// => 'FRED'\n\nConverts the first character of `string` to upper case.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-upperfirst",
      "matches": {
        "lodash upperfirst": true
      }
    },
    "e519ace7-a60a-3811-8e5f-df02f6b8f27c": {
      "content": "\\${${0:interpolation${VISUAL}}!\"${1:default_string}\"\\}",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "\"${interpolation!\"default_string\"}\"",
      "matches": {
        "intd": true
      }
    },
    "e5255645-8dcd-3194-9ab2-e6c560736d56": {
      "content": "belongs_to :${0:association}, polymorphic: true",
      "doc": "belongs_to polymorphic assocation",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Belongs to polymorphic",
      "matches": {
        "btp": true
      }
    },
    "e52d001e-b2ea-392b-995c-5af0e6621abc": {
      "content": "bool",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "bool",
      "matches": {
        "bl": true
      }
    },
    "e53032ab-2091-3a09-8c90-edad8524ff02": {
      "content": "localparam ${1:#:name} = ${2:#:val};${3:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "localparam ... = ...",
      "matches": {
        "localparam": true,
        "lpa": true
      }
    },
    "e53b07fe-cce6-35c0-b60a-d931329b63f7": {
      "content": "display: ${1:none/inline/block/list-item/run-in/compact/marker};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "display: common-types (display)",
      "matches": {
        "display": true
      }
    },
    "e53e4296-ea73-3f10-acff-461058e99307": {
      "content": "font-family: ${1:\"Helvetica Neue\", Helvetica, Arial, sans-serif};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-family",
      "matches": {
        "ff": true
      }
    },
    "e547cd80-87c3-3206-8293-1b3083816b26": {
      "content": "{${1:array}.map((item) => {\n\treturn <${2:elementName} key={item.id}>\n\t$0\n</${2}>\n})}",
      "doc": "an element self closed",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "jsx elements map with return",
      "matches": {
        "jmr": true
      }
    },
    "e54c5a1d-90a1-3fd8-b954-b9354e42968f": {
      "content": "${1:class_name}.prototype.${2:method_name} = function(${3}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proto": true
      }
    },
    "e550bac5-e751-3817-8aed-f5c1d98adba1": {
      "content": "if ${1:condition}\n\t$2\nelsif ${3:condition}\n\t$4\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "e5520ede-1028-3872-b1a2-0073e0ff315a": {
      "content": "use ${1:std::$2};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "use ...;",
      "matches": {
        "use": true
      }
    },
    "e55444e0-db5a-3934-be88-06db135b1dbf": {
      "content": "import { NgModule } from '@angular/core';\n\nimport { ${1:Name}Component } from './${2:name}.component';\n\n@NgModule({\n\timports: [],\n\texports: [],\n\tdeclarations: [${1:Name}Component],\n\tproviders: [],\n})\nexport class ${1:Name}Module { }\n$0",
      "doc": "Angular Module",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "angular-module",
      "matches": {
        "a-module": true,
        "angular module": true
      }
    },
    "e5569b78-ec70-3381-a63c-abb5dfb31d29": {
      "content": "margin-left ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml": true
      }
    },
    "e558ad13-aa84-33e2-a253-616b7ea993bd": {
      "content": "{#if ${1:condition}}\n\t${2: <!-- content here -->}\n{:else if ${3: otherCondition}}\n\t${4: <!-- else if content here -->}\n{:else}\n\t${5: <!-- else content here -->}\n{/if}",
      "doc": "if else if block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-if-else-if-block",
      "matches": {
        "s-if-else-if-block": true
      }
    },
    "e562a610-51d5-3449-994b-dd266cb6e597": {
      "content": "set key",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set key",
      "matches": {
        "key": true
      }
    },
    "e56a6161-f609-3943-b4ef-7410e7dfa066": {
      "content": "refract($2, $3, $4)",
      "doc": "float refract(float I, float N, float eta)\nvec2 refract(vec2 I, vec2 N, float eta)\nvec3 refract(vec3 I, vec3 N, float eta)\nvec4 refract(vec4 I, vec4 N, float eta)\n\nThe refract function returns a vector that points in the direction of refraction. The function has two input parameters of the type floating scalar or float vector and one input parameter of the type floating scalar: I, the incident vector, N, the normal vector of the refracting surface, and eta, the ratio of indices of refraction.\n\nSide note: To obtain the desired result the vectors I and N have to be normalized.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "refract",
      "matches": {
        "refract": true
      }
    },
    "e5729bdb-b9a8-3bcc-96e7-69692eb8321f": {
      "content": "library ${1}\nuse $1.${2}",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lib": true
      }
    },
    "e573ba7a-e77e-377b-ab22-1e5429e7fbf0": {
      "content": "${1:TARGET} => ${2:#expr},${3}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true,
        "mcase": true
      }
    },
    "e5740491-63e6-38b0-931f-4945d2fe1e28": {
      "content": "background-image: none;$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-image:  none (background)",
      "matches": {
        "background": true
      }
    },
    "e576c5d3-82aa-3f57-8a6e-aff87a316da2": {
      "content": "float64",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "float64",
      "matches": {
        "f6": true
      }
    },
    "e57b41c2-47fd-32f0-9bfa-bcccd44b2c77": {
      "content": "procedure division.\n$0",
      "doc": "",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "procedure division",
      "matches": {
        "pd": true,
        "procedure division": true
      }
    },
    "e57b45be-cc6d-3080-8320-f53c5d0accb6": {
      "content": "{{#if ${1:value}}}\n${2:${VISUAL}}\n{{else}}\n${3}\n{{/if}}",
      "doc": "",
      "filetype": "handlebars",
      "grammar": "snu",
      "label": "# {{#if value}} ... {{else}} .. {{/if}}",
      "matches": {
        "ife": true
      }
    },
    "e57bf266-4889-3e1d-8514-5037f4abdaa4": {
      "content": "const dispatch = useDispatch();",
      "doc": "Redux useDispatch() hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-usedispatch-hook",
      "matches": {
        "redux usedispatch": true,
        "rxusdh": true
      }
    },
    "e57e839e-5e10-398c-844e-3fbc91d40fd0": {
      "content": "align-self first baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      }
    },
    "e58028f5-9e0b-398c-9c04-21acbd30ddd2": {
      "content": "@forelse (${1} as ${2})\n    ${3}\n@empty\n    ${4}\n@endforelse",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@forelse ... @empty ... @endforeach",
      "matches": {
        "forelse": true
      }
    },
    "e580ece3-d99f-3bcd-9462-a73d8ccb65f4": {
      "content": "border-fit: clip",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      }
    },
    "e588a30a-a06b-36f0-8f98-4db26b9ed611": {
      "content": "public ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p+": true
      }
    },
    "e5931769-7caa-3ddd-bf19-d15836af3a4b": {
      "content": "duplicateMovieClip(${1:#:target}, ${2:#:newName}, ${3:#:depth});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dm": true
      }
    },
    "e594e992-139e-314e-a1f1-8f4a10f941b0": {
      "content": "truncatewords_html:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "truncatewordshtml": true
      }
    },
    "e59684da-5a3d-37a0-984a-8ec2f05c61ef": {
      "content": "<button type=\"reset\">${0}</button>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "button:r": true
      }
    },
    "e5a48242-1178-3b4e-894e-3c85c53ae40e": {
      "content": "<bdi>$1</bdi>$2",
      "doc": "HTML - Used to isolate text that is of unknown directionality",
      "filetype": "html",
      "grammar": "lsp",
      "label": "bdi",
      "matches": {
        "bdi": true
      }
    },
    "e5a8f929-85cd-366e-99d7-d96882c74bc6": {
      "content": "import { computed } from '@ember/object';",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "import { computed } from '@ember/object';",
      "matches": {
        "cproimport": true
      }
    },
    "e5ad893d-1563-3524-9e50-2aa6028ae7f5": {
      "content": "PropTypes.arrayOf($0).isRequired,",
      "doc": "An array of a certain type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeArrayOfRequired",
      "matches": {
        "ptaor": true
      }
    },
    "e5b15741-96f6-3b79-98d2-19c7eefafc30": {
      "content": "has_many :${1:object}, through: :${0:object}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hmt": true
      }
    },
    "e5b62013-b5bd-31e1-8d7a-177489c56316": {
      "content": "import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nfunction mapStateToProps(state) {\n\treturn {\n\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\treturn {\n\n\t};\n}\n\nclass ${1:${TM_FILENAME_BASE}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default connect(\n\tmapStateToProps,\n)(${1:${TM_FILENAME_BASE}});",
      "doc": "Creates a React component class connected to redux with dispatch",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactReduxDispatchComponent",
      "matches": {
        "rrdc": true
      }
    },
    "e5bdae02-6ede-3776-8143-5b07eac71380": {
      "content": "define ${1} (${2}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "define": true
      }
    },
    "e5d36426-8e81-3a05-ba0b-d7e13b434e5a": {
      "content": "<strong>${1:TARGET}</strong>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strong": true
      }
    },
    "e5d9a838-15db-3c06-a8d7-469dde038daa": {
      "content": "for (var ${1} in ${2}){\n\t${3:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "fi",
      "matches": {
        "fori": true
      }
    },
    "e5dcd031-da4e-3829-af2b-d483d137babd": {
      "content": "<keep-alive$1>\n$2\n</keep-alive>$0",
      "doc": "keep-alive element",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-keep-alive",
      "matches": {
        "keepalive": true,
        "vue keep-alive": true
      }
    },
    "e5e168ea-76e4-3c1e-9b0c-eaff7adbc2d4": {
      "content": "#include <${1:iostream}>${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#inc, #include": true,
        "inc": true
      }
    },
    "e5e418da-cd94-333d-ab7f-e1c2c758122c": {
      "content": "<returns>${0:#:description}</returns>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<returns></returns>",
      "matches": {
        "returns": true
      }
    },
    "e5e6dc68-89f1-3ebf-9541-939518de5b3c": {
      "content": "content: open-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:oq": true
      }
    },
    "e5eb41a2-e38c-3654-b942-7df2aee2e64b": {
      "content": "${1:ModelName}::model()->findAll(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfinda": true
      }
    },
    "e5fb9634-874c-3ef2-98c0-6677bd34be2a": {
      "content": "align-items: first baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fb": true
      }
    },
    "e5fe8c76-ad3f-38d8-afae-361957281c57": {
      "content": "${1:FIELDNAME} = models.PositiveSmallIntegerField($2)",
      "doc": "PositiveSmallIntegerField (mpossmallint).\n\nLike a PositiveIntegerField, but only allows values under a certain (database-dependent) point.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mpossmallint",
      "matches": {
        "mpossmallint": true
      }
    },
    "e6023ecd-26da-3d03-bd76-ce7d87174693": {
      "content": "this.setState((state, props) => { return { $0 }})",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentSetStateFunc",
      "matches": {
        "ssf": true
      }
    },
    "e602ec9c-4548-31eb-851b-1f8297da656f": {
      "content": "mod ${1:name};",
      "doc": "mod …;",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "mod",
      "matches": {
        "mod": true
      }
    },
    "e60cb4b5-2ceb-352b-ae33-03ed0e0ab410": {
      "content": "<${1:div} :style=\"[${2:styleObjectA}, ${3:styleObjectB]}\"></${1:div}>",
      "doc": "vue inline style binding, objects",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue Style Binding Object",
      "matches": {
        "vstyle-obj": true
      }
    },
    "e612dfc8-4952-331f-9404-69ed31cb6a51": {
      "content": "import { graphql } from 'gatsby';",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-graphql-import",
      "matches": {
        "gatsby import graphql": true
      }
    },
    "e615802a-9ba4-3a36-b0be-870f2866235f": {
      "content": "cos(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cos": true
      }
    },
    "e61e183e-3ce8-3e74-8085-62833b61076b": {
      "content": "font-style: oblique;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "font-style: oblique",
      "matches": {
        "fsto": true
      }
    },
    "e61fd6b7-db4b-3d8f-97b5-3ab201b3cbcf": {
      "content": "for ${1:i} in 1 .. ${0:l_res}.count loop\n\tpipe row( $2($1) );\nend loop;\nreturn;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpipe": true
      }
    },
    "e6223dd2-b1cd-3746-a43d-c141448b2320": {
      "content": "vec2($2, $3)",
      "doc": "The data type vec2 is used for floating point vectors with two components. There are several ways to initialize a vector:\n• Components are specified by providing a scalar value for each component (first example).\n• Components are specified by providing one scalar value. This value is used for all components (the second example is equivalent to the first).\n• Components are specified by providing a vector of higher dimension. The respective values are used to initialize the components (the second and third example are equivalent).\n\nSide note: The vector constructors can be used to cast between different vector types since type conversions are done automatically for each component.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "vec2",
      "matches": {
        "vec2": true
      }
    },
    "e62b30cb-f24e-3897-b3a3-edb60a8a7572": {
      "content": "public get ${1:value}() : ${2:string} {\n\t${3:return $0}\n}",
      "doc": "Property getter",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Property getter",
      "matches": {
        "get": true
      }
    },
    "e63bc31b-29b6-3ec8-b92b-ae4dc2030ea2": {
      "content": "pinMode(${1}, OUTPUT);",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pinout": true
      }
    },
    "e6425244-7ae5-32a0-a141-052a546ddfe3": {
      "content": "[${1:X} || ${2:X} <- ${3:List}${4:, gen}]",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "List Comprehension",
      "matches": {
        "||": true
      }
    },
    "e6466bd7-09d0-3811-85e1-4aa293b91b22": {
      "content": "[ngClass]=\"{${1:cssClass}: ${2:expression}}\"",
      "doc": "Angular ngClass",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngclass",
      "matches": {
        "a-ngclass": true,
        "angular ng class": true
      }
    },
    "e64b6b15-3816-3aee-a34a-67a2dc5a4722": {
      "content": "interface ${1:program_name} ();\n\t// nets\n\t${0}\n\t// clocking\n\n\t// modports\n\nendinterface : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "intf": true
      }
    },
    "e64c3ce1-cb6a-307b-a938-cb919dc0a006": {
      "content": "cursor: hand;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cur:ha": true
      }
    },
    "e64d31b5-6a9d-30bd-b1ae-e85f0c5a027e": {
      "content": "if $1 then\n\t$2\nelse\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if/else statement",
      "matches": {
        "ife": true
      }
    },
    "e65d74d9-1fb4-3ab3-a2be-7387395e2086": {
      "content": "${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}T${CURRENT_HOUR}:${CURRENT_MINUTE}:${CURRENT_SECOND}",
      "doc": "ISO date time stamp",
      "filetype": "global",
      "grammar": "lsp",
      "label": "diso",
      "matches": {
        "diso": true
      }
    },
    "e664ff37-d1f5-3009-868a-e113b3f416d6": {
      "content": "As a special exception, if other files instantiate generics from\nthis unit, or you link this unit with other files to produce an\nexecutable, this unit does not by itself cause the resulting\nexecutable to be covered by the GNU General Public License.\nThis exception does not however invalidate any other reasons why the\nexecutable file might be covered by the GNU Public License.\n\n${0}",
      "doc": "",
      "filetype": "_",
      "grammar": "snu",
      "label": "linking exception",
      "matches": {
        "GMGPL": true
      }
    },
    "e669865f-72fa-32f7-8d64-907c71350a91": {
      "content": "class ${1:name} extends ${2:base} {\n\tconstructor (${3:arguments}) {\n\t\tsuper(${3:arguments})\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "class extends",
      "matches": {
        "csx": true
      }
    },
    "e669e1af-005b-3f99-a97d-2d7b28a65d8b": {
      "content": "echo CHtml::normalizeUrl(array('${0}'));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhnurl": true
      }
    },
    "e66c55ad-8ce8-38ce-b3cf-fd140e845353": {
      "content": "resize: vertical",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rz:v": true
      }
    },
    "e671551c-2adc-39e4-bf2f-d909b9084ebf": {
      "content": "::: {.example #${1:label} name=\"${2:example name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown example",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown example",
      "matches": {
        "example": true
      }
    },
    "e671c282-2a60-3e68-a27e-7960e56f3718": {
      "content": "{% capture ${1:variable} %}$2{% endcapture %}",
      "doc": "Variable tag: capture",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag capture",
      "matches": {
        "capture": true
      }
    },
    "e68616c4-053b-3e75-897a-5b12c8c892b7": {
      "content": "![${1:id}]: ${2:url} \"${3:title}\"",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:": true
      }
    },
    "e6882379-093a-3f03-b98d-16f7a6d49cf5": {
      "content": "set ${1:#:axis}label ${2:#:label}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set title '...'",
      "matches": {
        "labelaxis": true
      }
    },
    "e6885ce5-97b2-335c-80ac-26c297424fbd": {
      "content": "-up->",
      "doc": "Up arrow, format: box -up-> box 2 (it will point upwards to the box 2",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Arrow-up",
      "matches": {
        "up": true
      }
    },
    "e689161d-8343-30d9-92a3-e43871975df9": {
      "content": "import React from 'react'\n\ntype Props = {}\n\nconst ${1:${TM_FILENAME_BASE}} = (props: Props) => {\n  return (\n    <div>${1:first}</div>\n  )\n}",
      "doc": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactArrowFunctionComponent",
      "matches": {
        "tsrafc": true
      }
    },
    "e696f408-16bd-3975-89d8-89e856348c33": {
      "content": "#+BEGIN_HTML\n---\nlayout: ${1:default}\ntitle: ${2:title}\n---\n#+END_HTML\n$0",
      "doc": "entry",
      "filetype": "org",
      "grammar": "lsp",
      "label": "entry",
      "matches": {
        "entry": true
      }
    },
    "e6a678d3-35d7-319f-a394-8ae33fe3ce10": {
      "content": "inout",
      "doc": "The qualifier inout is used to mark a parameter as read-write when a function is declared. The parameter will be passed by reference to the function and is initialized, i.e. the value can be read. The value can be modified by the function and the changes are preserved after the function exits.\nThe above function declaration shows the three possible parameter qualifiers. The usage of the read-only qualifier is not necessary since this is the default if no qualifier is specified.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "inout",
      "matches": {
        "inout": true
      }
    },
    "e6a71d6e-41af-3177-ae85-5b77398562a9": {
      "content": "constructor( @Optional() @SkipSelf() parentModule: ${1:ModuleName} {\n\tif (parentModule) {\n\t\tconst msg = `${1:ModuleName} has already been loaded. \n\t\t\tImport ${1:ModuleName} once, only, in the root AppModule.`;\n\t\tthrow new Error(msg);\n\t}\n}",
      "doc": "Angular Module SkipSelf constructor",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Module SkipSelf Constructor",
      "matches": {
        "a-ctor-skip-self": true
      }
    },
    "e6a75aa8-83d0-3afa-92d4-da52ed8f7e04": {
      "content": "<transition></transition>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "transition": true
      }
    },
    "e6a9a331-129c-3620-a2e9-b12477c49159": {
      "content": "if (${1}) ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "e6ac28e1-0b46-3a42-89fd-cc4da2202961": {
      "content": "text-align: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true
      }
    },
    "e6ad6bad-61b5-3a8a-8b97-db743437c7fc": {
      "content": "FUNCTION FORMATTED-DATETIME(${1:date-and-time-format},${2:integer-date},${3:standard-numeric-time},${4:offset_or_system_offset})$0",
      "doc": "function formatted-datetime",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-FORMATTED-DATETIME",
      "matches": {
        "FUNCTION FORMATTED-DATETIME": true
      }
    },
    "e6af88bd-0434-3ce0-a39d-110bde6acac3": {
      "content": "${1:FIELDNAME} = forms.ImageField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "ImageField",
      "matches": {
        "fimg": true
      }
    },
    "e6b7fdf6-cde1-37f6-a675-4156bf5cc8c2": {
      "content": "\\begin{abstract}\n\t${1:TARGET}\n\\end{abstract}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{abstract} \\abstract": true,
        "abstract": true
      }
    },
    "e6b8e6aa-5b60-37de-b9bd-fc9135cf1716": {
      "content": "try:\n\t${1:pass}\nfinally:\n\t${2:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "try: ... finally: ...",
      "matches": {
        "tryfinally": true
      }
    },
    "e6c267ad-eb86-3711-99ec-3b5056635166": {
      "content": "string toString() @safe const pure nothrow\n{\n\t$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "toString (toString)",
      "matches": {
        "toString": true
      }
    },
    "e6d0de09-5732-39bb-825a-3daf2ee0179d": {
      "content": "publisher = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "publisher": true
      }
    },
    "e6d276c7-e11b-3cab-9bf0-5d4fc323a5c4": {
      "content": "function(${1}) { ${0:TARGET} };",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      }
    },
    "e6d47d96-e0bc-3268-8b20-9ec6fe44c0eb": {
      "content": "try:\n\t${1:${VISUAL}}\nexcept ${2:Exception} as ${3:e}:\n\t${4:raise $3}\nelse:\n\t${5}\nfinally:\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "Try/Except/Else/Finally",
      "matches": {
        "tryef": true
      }
    },
    "e6ed4870-90a6-31b5-97cc-355f0ed065d2": {
      "content": "{% set entries = craft.entries({\n\tsection: \"${1:sectionName}\",\n\tlimit: \"${2:10}\"\n}).all() %}\n\n{% for entry in entries %}\n\t<a href=\"{{ entry.url }}\">{{ entry.title }}</a>\n{% endfor %}\n$0",
      "doc": "craft.entries - object syntax",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "entrieso",
      "matches": {
        "entrieso": true
      }
    },
    "e6f248af-9b4b-3e1f-9a95-4caf06fe815a": {
      "content": "let {${1:a}} = ${2:data}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Object destructuring",
      "matches": {
        "dob": true
      }
    },
    "e6f5398c-1d2d-3199-b8a5-413ccfdc0256": {
      "content": "JSON.parse ${0:jstr}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jsonp": true
      }
    },
    "e6f6d2fd-cfdf-3f27-8360-aa7f56f382cc": {
      "content": "export default class ${1:className} {\n\t$0\n};",
      "doc": "Export default class in ES6 syntax",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "exportClass",
      "matches": {
        "ecl": true
      }
    },
    "e6f87eda-eef1-3dd5-a920-64a91147768f": {
      "content": "mattr_accessor :${0:attr_names}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mrw": true
      }
    },
    "e6fcb462-c365-3be2-aff0-4344afebaf73": {
      "content": "ceil(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ceil": true
      }
    },
    "e6fe3c85-77ac-3c8d-b878-258573298f74": {
      "content": "func (${1:receiver} ${2:type}) ${3:method}($4) $5 {\n\t$0\n}",
      "doc": "Snippet for method declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "method declaration",
      "matches": {
        "fum": true,
        "meth": true
      }
    },
    "e7034161-3562-384f-b45b-bbcb9a0aa685": {
      "content": "@section('$1')",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@section directive",
      "matches": {
        "section": true
      }
    },
    "e7057978-97f5-3855-aa5a-512c51a4bdea": {
      "content": "{\n\t/* $1 */\n\t$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "properties { } ( } )",
      "matches": {
        "{": true
      }
    },
    "e7067217-edaf-3780-a7a2-baf20c1d4a64": {
      "content": "{-| ${0}\n-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "e70b8b85-c77b-3a19-bc27-9f2b4e3249ee": {
      "content": "grid-column-end: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gce": true
      }
    },
    "e7101a06-2d3c-3cb9-a2fe-93f0724691e9": {
      "content": "#if ${1:SYMBOL}\n    ${0:TARGET}\n#endif",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      }
    },
    "e7195d17-b66c-3a3e-9701-65b78d993e11": {
      "content": "${1:FIELDNAME} = forms.SlugField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "SlugField",
      "matches": {
        "fslug": true
      }
    },
    "e720b39b-5d1c-3625-9123-f3e2bf08cee6": {
      "content": "text-emphasis: dot",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:dt": true
      }
    },
    "e72584f1-51f6-3ef9-ae47-c43d977ddfab": {
      "content": "if (${1:true}) {\n\t${2:${VISUAL}}\n} else {\n\t${0}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "e72bdd57-9bbb-371d-bda9-b02b1e2e9e88": {
      "content": ":(${1:type}) ${2:field}",
      "doc": "Create an Objc instance method implementation",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Function field",
      "matches": {
        "field": true
      }
    },
    "e72f5eef-07dd-3cea-9e03-148da0d53c0b": {
      "content": "| pluralize: '${1:item}', '${2:items}'",
      "doc": "String filter: pluralize",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter pluralize",
      "matches": {
        "pluralize": true
      }
    },
    "e73443d5-f45f-3426-b1a4-4f397830a4d7": {
      "content": "${1:el}.classList.add('${2:class}')",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "classList.add",
      "matches": {
        "hecla": true
      }
    },
    "e735a837-f4c3-313c-bb64-ad7fc353c5c3": {
      "content": "chan ${0:int}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "chan Type",
      "matches": {
        "ch": true
      }
    },
    "e73a070e-5f51-3485-ac98-6613e00d68dc": {
      "content": "${1:obj}.map (${2:index}, ${3:element}) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "e73ffe01-9c8b-3955-b8aa-559e4491dcd9": {
      "content": "| times: ${1:1}",
      "doc": "Math filter: times",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter times",
      "matches": {
        "times": true
      }
    },
    "e7433871-6f37-36e9-a6c7-3b5f7a407690": {
      "content": "Run Keyword Unless    '\\${${1:rc}}' != '${2:abc}'    ${3:${kw}}    ${4:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword Unless",
      "matches": {
        "rku": true
      }
    },
    "e7436f25-ec97-33c9-bddf-58ee1689c746": {
      "content": "caption-side: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps": true
      }
    },
    "e7449325-5f58-3990-bed8-0249dcecdbf4": {
      "content": "if {${1}} {\n\t${2}\n} else {\n\t${0:# else...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "e748ab94-08a5-3716-9929-e6f6e5b68ca0": {
      "content": "enter-class='$1'$0",
      "doc": "enter-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "enter-class",
      "matches": {
        "enterClass": true
      }
    },
    "e749406f-c842-3c26-abf0-810de0247c06": {
      "content": "module ${1} = struct\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "module struct",
      "matches": {
        "mod": true
      }
    },
    "e74c2935-553b-3af2-a1f3-7ffe364e54ce": {
      "content": "local ${1:var} = require(\"${2:module}\")",
      "doc": "Require module as a variable",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "locreq",
      "matches": {
        "lreq": true
      }
    },
    "e753d1d3-32c6-32c9-ba53-4cd37b175ce0": {
      "content": "offset: ${1:0}",
      "doc": "For loops option",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag Option offset",
      "matches": {
        "offset": true
      }
    },
    "e75415c5-2da3-32dd-b77f-f57a71cc8a91": {
      "content": "_.eachRight(${collection}, ${iteratee})",
      "doc": "_.forEachRight([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `2` then `1`.\n\nThis method is like `_.forEach` except that it iterates over elements of\n`collection` from right to left.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-eachright",
      "matches": {
        "lodash eachright": true
      }
    },
    "e75bbf45-5ff0-3ad3-9dd7-01b2e1dd531d": {
      "content": "font-family: ${0:Georgia,'Times New Roman'},serif;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:s": true
      }
    },
    "e75f9c7c-4e6b-3523-b0d6-5fddc8876167": {
      "content": "enter-class=\"$1\"$0",
      "doc": "enter-class=''. Expects: string.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-enter-class",
      "matches": {
        "enterclass": true,
        "vue enter-class": true
      }
    },
    "e7616fb7-1538-387a-bc84-a9a1331adb53": {
      "content": "refute_operator ${1:left}, :${2:operator}, ${3:right}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfo": true
      }
    },
    "e7658ca4-90d7-3887-a25f-f2a37d54b9e0": {
      "content": "# Development & Debugging, don't forget to uncomment afterwards!\n#--------------------------------------------------------------------------------\n#setwd(\"~/Projekte/${1:}\")\n#opt <- list(${2:}\n#            )\n#--------------------------------------------------------------------------------",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "debug": true
      }
    },
    "e76d6d9d-dc95-349c-b921-a63817f8f724": {
      "content": "..> $1",
      "doc": "Extend, Include",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Extend Arrow (left)",
      "matches": {
        "extend": true
      }
    },
    "e77c1377-dc34-37a4-9e5e-769b2cd3ce73": {
      "content": "docs(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "docs conventional commit",
      "matches": {
        "docs": true
      }
    },
    "e78128c8-16f1-3c9a-b4b4-0a466dc62697": {
      "content": "noiseSeed(${0:x});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noiseSeed": true
      }
    },
    "e7867441-77ee-3e00-8d3e-8c85675c8ebe": {
      "content": "this.${1:first} = this.${1:first}.bind(this)",
      "doc": "Binds this to a method",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "bindThis",
      "matches": {
        "bnd": true
      }
    },
    "e78c0a3e-c2ab-3511-9472-47543a50050b": {
      "content": "overflow-x: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:a": true
      }
    },
    "e7919bb7-d54d-397a-8957-bf6b96fb1154": {
      "content": "for some ${1} ${2:in} ${3} => ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "for some",
      "matches": {
        "for_some": true
      }
    },
    "e791f3e2-0d75-3483-919d-3725db45a152": {
      "content": "list-style: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis": true
      }
    },
    "e792be8b-11ec-3d8c-b0d0-23e4b53f7273": {
      "content": "console.group(\"${1:label}\");\n${0:${VISUAL}}\nconsole.groupEnd();",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.group",
      "matches": {
        "cgroup": true
      }
    },
    "e7a0c7fb-f40e-3a26-9d31-58223f83799d": {
      "content": "#!/usr/bin/env Rscript",
      "doc": "",
      "filetype": "rmd",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "e7a1355a-ae67-3641-b9ac-b6d30da38b58": {
      "content": "background-attachment: fixed",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bga:f": true
      }
    },
    "e7a4d862-d8cc-39b1-8f4a-bed86dabc7b8": {
      "content": "@media ${1:all} and (min-width: ${2:SIZE}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "@media all and (min-width) {...}",
      "matches": {
        "media-min-width": true
      }
    },
    "e7a50dcb-fe91-3fe2-94ba-a306b88fbc5f": {
      "content": "offset: ${1:0}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "offset": true
      }
    },
    "e7a7d49d-529c-3c54-8b3b-534c9a679498": {
      "content": "const ${1:feature}Reducer = createReducer(\n\tinitialState,\n\ton($1Actions.action, state => ({ ...state, ${2:prop}: ${3:updatedValue} })),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n\treturn $1Reducer(state, action);\n}",
      "doc": "Creates an NgRx Reducer",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-create-reducer",
      "matches": {
        "a-ngrx-create-reducer": true,
        "angular ng rx create reducer": true
      }
    },
    "e7ab3b72-d960-3f1c-a7f7-6a3620f21d3a": {
      "content": "overflow-y: visible;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:v": true
      }
    },
    "e7b9423c-a36a-34af-babd-ee80a1d0c79b": {
      "content": "@for ${1:$i} from ${2:1} through ${3:3} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "e7be9100-8ead-3a4e-88bb-037337f04e61": {
      "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n\tselector: '${1:selector-name}',\n\ttemplate: `$0`\n})\n\nexport class ${2:Name}Component implements OnInit {\n\tconstructor() { }\n\n\tngOnInit() { }\n}",
      "doc": "Angular component with an inline template",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Component with Inline Template",
      "matches": {
        "a-component-inline": true
      }
    },
    "e7c07b1a-e317-3dc5-b241-bb66b11bb5e5": {
      "content": "it('${1:description}', () => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "it (js)",
      "matches": {
        "it": true
      }
    },
    "e7c549eb-ae5f-3123-8cb1-292ad76ba3fd": {
      "content": "-webkit-box-shadow: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bxsh:w": true
      }
    },
    "e7c6e383-9983-3408-90ea-00cc3d960d65": {
      "content": "<%= cond do %>\n\t<% ${1} -> %>\n\t\t${2:${VISUAL}}\n\n\t<% true -> %>\n\t\t${0}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      }
    },
    "e7cb31d4-2dfc-34b6-8f9c-1c1ad4b9a70e": {
      "content": "caption-side: bottom",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:b": true
      }
    },
    "e7cfef2e-6990-3c6b-b087-497d85be1396": {
      "content": "::: {.proposition #${1:label} name=\"${2:proposition name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown proposition",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown proposition",
      "matches": {
        "proposition": true
      }
    },
    "e7d03fbc-907b-3886-837b-a54c2d5ff87e": {
      "content": "onClipEvent (${1}) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oc": true
      }
    },
    "e7d2864d-6d8f-3c69-ac10-51e9de0c804c": {
      "content": "collect { |${1:e}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      }
    },
    "e7dc9987-0768-3c0b-8810-b383ad2910a4": {
      "content": "${1:map} ${2:fn} ${0:list}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ap": true
      }
    },
    "e7e4dff4-9d91-37c8-9e10-68be5c672fb0": {
      "content": "class ${1:name}${2:(arg)} extends Ordered[$1] ${3: with} {\n\t${4:override def toString = \"$1\"}\n\tdef compare(that: $1) = ${5:this - that}\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ordered": true
      }
    },
    "e7e55f37-4db2-39f5-94c2-56dcb294aa0c": {
      "content": "{:else}\n\t${1: <!-- else content here -->}",
      "doc": "else block",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-block",
      "matches": {
        "s-else-block": true
      }
    },
    "e7e7774b-174d-38f5-9add-e151e6cb6027": {
      "content": "import { connect } from 'react-redux'",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "importReduxConnect",
      "matches": {
        "redux": true
      }
    },
    "e7ecec06-e22f-3dc6-90cb-1745f9456724": {
      "content": "<% ${1:array}.forEach((${2:single var}) => { %>\n\t${0:body}\n<% }) %>",
      "doc": "",
      "filetype": "ejs",
      "grammar": "snu",
      "label": "ejs for Each loop",
      "matches": {
        "forE": true
      }
    },
    "e7f3131a-bdf9-3649-a06e-e545ab68efeb": {
      "content": "function variance(${1:number},${2:...})$0",
      "doc": "statistical variance of the specified list of number argument",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-variance",
      "matches": {
        "function variance": true
      }
    },
    "e80ab91d-cad4-3043-811c-35e5b5b7b532": {
      "content": "vertical-align: baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:bl": true
      }
    },
    "e80e3c16-d091-3d3d-b912-48898c8befe8": {
      "content": "render inline: \"${1:<%= 'hello' %>}\", locals: { ${2:name}: '${3:value}'${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ril": true
      }
    },
    "e812cb38-610f-3368-845f-152aa53eddac": {
      "content": "place-items ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      }
    },
    "e816b30c-8bf0-3545-9cde-55a412748ab9": {
      "content": "min-height: ${0:1px};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "min-height",
      "matches": {
        "mih": true
      }
    },
    "e81754e5-cf53-319a-9ee2-866d43adadd2": {
      "content": "let ${1:variable} = ${0: value}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "e8177ac9-cbe5-37e0-b122-9e07e625bc34": {
      "content": "always @(posedge clk${1})${2:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "always @(posedge clk)",
      "matches": {
        "alclk": true
      }
    },
    "e81b6554-097c-3e82-b870-5e995f210c9c": {
      "content": "% if ${1:condition}:\n\t${2:}\n% else:\n\t${0:}\n% endif",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "if/else",
      "matches": {
        "ife": true
      }
    },
    "e82349a2-1bb6-30b9-a6d8-83d0a6b10982": {
      "content": "@typep ${1:type_name} :: ${2:type}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "typ": true
      }
    },
    "e8289da2-6b8d-3072-b7c3-d565099320e3": {
      "content": "font-weight: bold;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      }
    },
    "e8289f34-717f-3251-bc88-538eb56e8504": {
      "content": "${1:obj}.fadeOut('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeout": true
      }
    },
    "e82a5b01-3bab-368d-bd2d-d61cda32f541": {
      "content": "__${1}__${2}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "__strong__",
      "matches": {
        "strong2": true
      }
    },
    "e82b885e-3674-3544-b847-d1661eaf7b2c": {
      "content": "${1:attribute}=\"${0:property}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "attr": true
      }
    },
    "e82c665c-6940-389c-b285-43ffc7a518c2": {
      "content": "align-items: ${1|flex-start,flex-end,center,baseline,stretch,start,end,self-start,self-end|};",
      "doc": "initial value: stretch",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-items",
      "matches": {
        "ai": true
      }
    },
    "e82cafee-12c6-3d08-95a2-d11880e32b29": {
      "content": "<ul type=\"square\">${1:TARGET}</ul>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ulsquare": true
      }
    },
    "e82cd35b-8c08-33cc-a9ed-abfed0818807": {
      "content": "<iframe src=\"${1}\"></iframe>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iframe": true
      }
    },
    "e8305415-dd10-369a-bbee-94c5eb0d2f16": {
      "content": "text-height text-size",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:t": true
      }
    },
    "e834b4e0-d7f5-3f0c-aa4f-98a1b1567952": {
      "content": "const $1 = $2 => dispatch($3);",
      "doc": "Redux dispatch hook",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-dispatch-hook",
      "matches": {
        "redux dispatch": true,
        "rxd": true
      }
    },
    "e8373754-7821-3035-b09c-7312a72c90e7": {
      "content": "border-top-width: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtw": true
      }
    },
    "e83bed25-0820-3a12-ba56-52fefb3ca86d": {
      "content": "input${1:#: nbit} i_${2:name},",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "input [] i_,",
      "matches": {
        "I": true
      }
    },
    "e83c44ca-bfa0-3e0a-8956-4c4f95e1e995": {
      "content": "lng",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Long",
      "matches": {
        "T": true
      }
    },
    "e84bbaec-ce26-39bc-a59c-2def1543a2bd": {
      "content": "font-stretch: extra-expanded",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:ee": true
      }
    },
    "e84e0c0f-d627-31e2-908a-d20f22f3b3ad": {
      "content": "text-transform: lowercase;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:l": true
      }
    },
    "e8599321-8341-3cd0-9064-e3a8a69d330e": {
      "content": "async def ${1:mname}(self, ${2:arg}):\n\t${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "adefm": true
      }
    },
    "e85b00e7-f7e1-3a7c-944d-a0f9d2e4d638": {
      "content": "align-items baseline",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:b": true
      }
    },
    "e85f4669-320f-313e-8487-a1981d11f6d3": {
      "content": "mixed.nullable()",
      "doc": "mixed.nullable(isNullable: boolean = true): Schema\n\nIndicates that null is a valid value for the schema. Without nullable()\nnull is treated as a different type and will fail isType() checks.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-nullable",
      "matches": {
        "yup mixed nullable": true
      }
    },
    "e8617564-4e9a-314d-a420-1b6651b9b771": {
      "content": "${1:FIELDNAME} = models.URLField($2, max_length=${3:200})",
      "doc": "URLField (murl).\n\nA CharField for a URL.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "murl",
      "matches": {
        "murl": true
      }
    },
    "e8638546-a857-31a3-b9fc-80e3f932f3b1": {
      "content": "<%= link_to \"${1:Link text...}\", ${2:parent}_${3:child}_path(${0:@$2}) %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "linpp": true
      }
    },
    "e864827e-d4cd-3210-8f1b-47dc20adef8a": {
      "content": "<pre>$1</pre>",
      "doc": "HTML - Defines preformatted text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "pre",
      "matches": {
        "pre": true
      }
    },
    "e869a6ae-dff8-357b-b9d6-5025d424eb1a": {
      "content": "throw(${1})\n${0}",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "throw",
      "matches": {
        "thr": true
      }
    },
    "e86a4a25-31b4-3039-a79b-03cbb541cc9e": {
      "content": "componentDidMount () {\n\t$0\n}",
      "doc": "Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentDidMount",
      "matches": {
        "cdm": true
      }
    },
    "e86b9945-cb6c-3116-a179-4455772dab61": {
      "content": "cy.route('${1:METHOD}', '${2:url}', ${3:response});",
      "doc": "Use cy.route() to manage the behavior of network requests.",
      "filetype": "cypress",
      "grammar": "lsp",
      "label": "cypress-route",
      "matches": {
        "cypress route": true
      }
    },
    "e86f9b45-a5c4-32f1-baf8-38b3792ea6dc": {
      "content": "for (const ${1:item} of ${2:object}) {\n\t${0}\n}",
      "doc": "Iterating over property names of iterable objects",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "forOf",
      "matches": {
        "fof": true
      }
    },
    "e86fb978-9058-36e9-9a83-a3d54f597b56": {
      "content": "while (${1:#:condition}) {\n\t${0:TARGET}\n};",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "e87108e5-a641-34c2-8f0c-10cec0f6f136": {
      "content": "begin\n\t$1\nrescue => exception\n\t\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Exception block",
      "matches": {
        "begin": true
      }
    },
    "e8775603-33ce-3a34-8df4-dcaf4253c249": {
      "content": "const [${1:isPresent}, ${2:safeToRemove}] = usePresence()",
      "doc": "usePresence()\nIf isPresent is false, it means that a component has been removed the tree, but AnimatePresence won't really remove it until safeToRemove has been called.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-presence",
      "matches": {
        "framer-motion use-presence": true,
        "use-presence": true
      }
    },
    "e877e3a3-8f64-3a74-a5dd-866f18f3b857": {
      "content": "{% macro ${1:name}(${2:args}) %}\n\t$3\n{% endmacro %}",
      "doc": "",
      "filetype": "jinja2",
      "grammar": "snu",
      "label": "macro",
      "matches": {
        "macro": true
      }
    },
    "e8790a57-2cc9-351e-a55a-4c61e3068b18": {
      "content": "#ifdef ${1:FOO}\n\t${2:#define }\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      }
    },
    "e8828183-ec29-3db6-aed3-6deb9c6cde87": {
      "content": "<hr>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hr": true
      }
    },
    "e886872d-6f4f-38d6-ad4f-ad0059436102": {
      "content": "assertNull(\"${1:Failure message}\", ${2:object});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "an": true
      }
    },
    "e8869d9b-a4b2-30d4-9288-70fdd44fc76f": {
      "content": "this.setState({\n\t${1}: ${2}\n});",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sst": true
      }
    },
    "e88c6225-6df1-3aa8-8327-0c0eadf346d8": {
      "content": "{% include '${0:snippet}' %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "e88cbff6-9d35-3ab6-83ee-d12b89c8b23a": {
      "content": "font-emphasize-style: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fems:n": true
      }
    },
    "e88ec7aa-8c81-3705-9b77-407e53286c6c": {
      "content": "public System.Collections.Generic.IEnumerator<${1:ElementType}> GetEnumerator()\n{\n    $0throw new System.NotImplementedException();\n    yield return default(${1:ElementType});\n}",
      "doc": "Simple iterator",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Simple iterator",
      "matches": {
        "iterator": true
      }
    },
    "e8909b09-daae-36d3-9828-8823b029f81f": {
      "content": "log.Println(\"${1:${VISUAL}}\")",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Println(...)",
      "matches": {
        "ln": true
      }
    },
    "e891c89c-3fc2-3536-a17b-3b613b85917b": {
      "content": "--> [*]",
      "doc": "Describe the final state of objects",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "State Final",
      "matches": {
        "final": true
      }
    },
    "e8943839-edba-3fe6-a1d8-f2e5f3f793dd": {
      "content": "new(${1:type})",
      "doc": "Snippet for new statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "new(...)",
      "matches": {
        "new": true
      }
    },
    "e8963981-3144-3f97-b4c3-40fb73f7078a": {
      "content": "_.each(${collection}, ${iteratee})",
      "doc": "_.forEach([1, 2], function(value) {\n  console.log(value);\n});\n// => Logs `1` then `2`.\n\n_.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n  console.log(key);\n});\n// => Logs 'a' then 'b' (iteration order is not guaranteed).\n\nIterates over elements of `collection` and invokes `iteratee` for each element.\nThe iteratee is invoked with three arguments: (value, index|key, collection).\nIteratee functions may exit iteration early by explicitly returning `false`.\n\n**Note:** As with other \"Collections\" methods, objects with a \"length\"\nproperty are iterated like arrays. To avoid this behavior use `_.forIn`\nor `_.forOwn` for object iteration.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-each",
      "matches": {
        "lodash each": true
      }
    },
    "e89b471d-7887-3b63-b840-79c5aeb1cecc": {
      "content": "newtype ${1:Type} = ${2:$1} ${0:Int}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "newtype": true
      }
    },
    "e89b70f7-e608-3181-8ad5-fa08b6aaafb7": {
      "content": "<%= link_to \"${1:Link text...}\", ${0:model}s_path %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lipp": true
      }
    },
    "e8a29942-9c15-3231-b189-e744b3732dec": {
      "content": "static public final ${1:#:type} ${2:#:var} = ${3};${4}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "const": true
      }
    },
    "e8a2eae2-25dd-342b-b3c6-470c8dccc0a6": {
      "content": "mat4($2, $3, $4, $5)",
      "doc": "The data type mat4 is used for floating point matrices with four times four components in column major order. There are several ways to initialize a matrix:\n• Components are specified by providing a scalar value for each component (first example). The matrix is filled column by column.\n• Components are specified by providing one scalar value. This value is used for the components on the main diagonal (the second example is equivalent to the first).\n• Components are specified by providing a combination of vectors and scalars. The respective values are used to initialize the components column by column. The arguments of the constructor must have at least as many components as the matrix that is initialized.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "mat4",
      "matches": {
        "mat4": true
      }
    },
    "e8b0331e-0185-3206-a73b-53e35b422031": {
      "content": "FUNCTION UPPER-CASE(${1:string})$0",
      "doc": "character string that contains string with any lowercase letters replaced by their corresponding uppercase letters",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-UPPER-CASE",
      "matches": {
        "FU": true,
        "FUNCTION UPPER-CASE": true
      }
    },
    "e8b4a0a6-c014-3163-8322-19fb5ffcda05": {
      "content": "<label for=\"${1}:id\">${2:TARGET}</label>${3}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "labelfor": true
      }
    },
    "e8bbf0f8-85c5-36b9-a21a-7ab8ff9ed240": {
      "content": "${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create field",
      "matches": {
        "+": true
      }
    },
    "e8be73f6-e8d8-3047-9f01-4ececdca2fb8": {
      "content": "$_SESSION['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "SS": true
      }
    },
    "e8c87fd6-429a-3789-b9c4-63cf9d37ccf0": {
      "content": "I18n.t('${1:type.key}')",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i18": true
      }
    },
    "e8d51efe-08b2-3f31-afd3-17070eb87e89": {
      "content": "<script src=\"${0}.js\"></script>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scripts": true
      }
    },
    "e8dc0f0b-b49c-398a-9acd-4cd40a386b9f": {
      "content": "__PACKAGE__->${1:package_method}(${0:var})",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pkgmv": true
      }
    },
    "e8e3c581-6425-33e2-a045-1d0e79b74011": {
      "content": "list-style: ${1:none/disc/circle/square/decimal/zero} ${2:inside/outside} url($3);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style: type position image (list)",
      "matches": {
        "list": true
      }
    },
    "e8e4ca28-ba82-3f79-8fa9-ddba8948e0e7": {
      "content": "for(;;)\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "forever (forever)",
      "matches": {
        "forever": true
      }
    },
    "e8e5dd36-d975-36f0-87c5-52ed0be5f331": {
      "content": "border-bottom-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbs": true
      }
    },
    "e8ed4f4a-8d0b-33de-bedf-5be33220bb2e": {
      "content": "${1:g}sub(${2:/pattern/}) { |${3:match}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sub": true
      }
    },
    "e8f89f0b-9882-3335-98ad-88b846de2283": {
      "content": "do\n{\n\t${VISUAL}$2\n} while(${1:/*condition*/});",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "do while (do)",
      "matches": {
        "do": true
      }
    },
    "e9044ae8-c787-3fc0-bee7-9691c50aa754": {
      "content": "std::cout << \"${1:message}\" << std::endl;",
      "doc": "Code snippet for printing to std::cout, provided the header is set",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "cout",
      "matches": {
        "cout": true
      }
    },
    "e91809e8-06d1-3124-be95-939ddb0d61f5": {
      "content": "${1:action} unless ${2:condition}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Unless",
      "matches": {
        "unl": true
      }
    },
    "e9192143-0bdb-3bb2-a8ba-c6242bb30e74": {
      "content": "case ${1:value}:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "case ...:",
      "matches": {
        "case": true
      }
    },
    "e91a1785-876b-37f9-bfe1-acb462682cd4": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch (${1:Exception} $e) {\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "try { ... } catch (Exception $e) { ... }",
      "matches": {
        "try": true
      }
    },
    "e924852e-0d83-3c82-82bb-4b2e2f40286c": {
      "content": "expect($1).toHaveBeenCalledTimes($0);",
      "doc": "returns true if the spy has been called given times",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohavebeencalledtimes",
      "matches": {
        "jest expect tohavebeencalledtimes": true,
        "thbct": true
      }
    },
    "e92849aa-6348-3e29-a8cc-b9966f4f44c6": {
      "content": "- binding.pry",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pry": true
      }
    },
    "e92cb1a2-0b72-3e24-a3d0-d37f192ea33c": {
      "content": "border-fit overwrite",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      }
    },
    "e9325dfa-71a7-3eb0-8500-f365b1122918": {
      "content": "beforeRouteUpdate(to, from, next) {\n\t${1:next();}\n},",
      "doc": "Vue Router component guards beforeRouteUpdate",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteUpdate",
      "matches": {
        "vbeforerouteupdate": true
      }
    },
    "e947cc9b-2bb6-3737-bbde-a2faa8477cf3": {
      "content": "margin-top: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "margin-top",
      "matches": {
        "mart": true
      }
    },
    "e947f95a-6f97-3b13-8823-64e9b3c40d3e": {
      "content": "* @param ${1:Type} ${2:var} ${3:Description}$0",
      "doc": "Paramater documentation",
      "filetype": "php",
      "grammar": "lsp",
      "label": "PHPDoc param …",
      "matches": {
        "param": true
      }
    },
    "e950dcd9-d77b-3a9f-9442-6bab08261bbd": {
      "content": "public bool ${1} { get; private set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb+-": true
      }
    },
    "e9512f2b-5947-3036-bc71-a9efd5bebb9d": {
      "content": "<object width=\"$1\" height=\"$2\" data=\"$3\">$4</object>$5",
      "doc": "HTML - Defines an embedded object",
      "filetype": "html",
      "grammar": "lsp",
      "label": "object",
      "matches": {
        "object": true
      }
    },
    "e95e2320-09af-3865-b46c-7c031cd8a7d2": {
      "content": "render json: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rjson": true
      }
    },
    "e95ed955-98ba-312e-8e5d-ef5bda8dc51b": {
      "content": "${1:New} = () => import('@/components/${1:New}.vue')",
      "doc": "Import component that should be lazy loaded",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Import Component Dynamically",
      "matches": {
        "vimport-dynamic": true
      }
    },
    "e960646e-4206-3a4a-977c-8ca880ffede9": {
      "content": "${1:condition} ? ${2:expression} : ${3:expression};",
      "doc": "ternary operator",
      "filetype": "base",
      "grammar": "lsp",
      "label": "ternary-operator",
      "matches": {
        "base ternary operator": true
      }
    },
    "e96107b5-d560-3d03-8b57-63b0b185cb80": {
      "content": "{%- for ${item} in ${collection} -%}\n\t${code:}\n{%- endfor -%}",
      "doc": "Iteration tag: for",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag for",
      "matches": {
        "for": true
      }
    },
    "e9699b12-0b88-3d0a-84a4-5469adea5d26": {
      "content": "INITIAL ${0:?}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ini": true
      }
    },
    "e96a6703-06ec-3943-86be-7f5f6c0915e5": {
      "content": "_.overEvery(${predicates})",
      "doc": "var func = _.overEvery([Boolean, isFinite]);\n\nfunc('1');\n// => true\n\nfunc(null);\n// => false\n\nfunc(NaN);\n// => false\n\nCreates a function that checks if **all** of the `predicates` return\ntruthy when invoked with the arguments it receives.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-overevery",
      "matches": {
        "lodash overevery": true
      }
    },
    "e96cac21-4c6b-3274-af1c-77ec6201fda8": {
      "content": "<tbody>\n\t$1\n</tbody>",
      "doc": "HTML - Defines a table body",
      "filetype": "html",
      "grammar": "lsp",
      "label": "tbody",
      "matches": {
        "tbody": true
      }
    },
    "e9767a19-8ea0-3992-b865-b22b4bf1cf7e": {
      "content": "void ${NAME}(){\n\t\n}",
      "doc": "A standard function that can be named whatever you so wish",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "function void",
      "matches": {
        "void": true
      }
    },
    "e97d0b95-14f1-3f3c-8962-0dfebcd1381a": {
      "content": "transition(\n\tmode=\"out-in\"\n\t@before-enter=\"beforeEnter\"\n\t@enter=\"enter\"\n\n\t@before-leave=\"beforeLeave\"\n\t@leave=\"leave\"\n\t:css=\"false\"\n)",
      "doc": "transition component js hooks",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Transition Component with JavaScript Hooks",
      "matches": {
        "vanim": true
      }
    },
    "e986e528-820c-3841-b553-21996daa7c60": {
      "content": "console.assert(${1:first}, ${2:second})",
      "doc": "If the specified expression is false, the message is written to the console along with a stack trace",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleAssert",
      "matches": {
        "cas": true
      }
    },
    "e98ab70a-9ab7-35f9-98ad-a640ab4aebb5": {
      "content": "%% @end",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "%e": true
      }
    },
    "e98fab7d-4cee-3f9c-ae95-dc04ec00f677": {
      "content": "{@docRoot",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{docRoot": true
      }
    },
    "e994d6b2-259b-3689-a903-d12a14310c97": {
      "content": "triggers {\n\tcron('${1:H */4 * * 1-5}')\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "triggers": true
      }
    },
    "e997305f-197c-3fb4-b34e-62f795138ec0": {
      "content": "${1:YYYY}-${2:MM}-${3:DD} balance ${4:Account} ${5:Amount} ${6:#:Commodity}",
      "doc": "",
      "filetype": "beancount",
      "grammar": "snu",
      "label": "balance",
      "matches": {
        "balance": true
      }
    },
    "e997b49b-6ef5-3fda-b1f1-a0931e1b3e0c": {
      "content": "mixed.notRequired()",
      "doc": "mixed.notRequired(): Schema\n\nMark the schema as not required. Passing undefined as value will not fail validation.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-not-required",
      "matches": {
        "yup mixed notrequired": true
      }
    },
    "e99a3671-b9d9-385b-aca4-4d9dc2c74f14": {
      "content": "for ${2:k}, ${3:v} in ${1:ipairs(xs)} do\n  ${0:TARGET}\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forin": true
      }
    },
    "e99bd937-a74c-3e43-85d9-43f9d7655a56": {
      "content": "max-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "maw": true
      }
    },
    "e99d4674-300a-3f3c-ab92-f601975eb5c4": {
      "content": "justify-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ji": true
      }
    },
    "e99ef2f8-e383-32a1-adbb-8dd37bb0c40e": {
      "content": "list-style-type ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "e9a1f318-c9b5-3ef4-b96d-b928bb32bd7d": {
      "content": "${1:obj}.ajaxComplete (${1:e}, xhr, settings) ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxcomplete": true
      }
    },
    "e9b1931e-2579-30ca-b97c-9e5eafae0be2": {
      "content": "{%- if ${1:condition} -%}\n\t${0:${VISUAL}}\n{%- endif -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if-": true
      }
    },
    "e9b50509-31c7-3038-81b8-0f3d548709bf": {
      "content": "unchecked\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unchecked block",
      "matches": {
        "unchecked": true
      }
    },
    "e9bc56e3-aaf0-333f-ac92-0cf000dddc4c": {
      "content": "internal string ${1}(${2})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms&": true
      }
    },
    "e9bfb9a8-62d7-3f45-b019-11fb620060ff": {
      "content": "<article>\n\t$1\n</article>",
      "doc": "HTML - Defines an article",
      "filetype": "html",
      "grammar": "lsp",
      "label": "article",
      "matches": {
        "article": true
      }
    },
    "e9d4554c-e56c-31f8-8296-8672865c7648": {
      "content": "when {\n\tequals '${1:equals}'\n}\n${0}",
      "doc": "",
      "filetype": "jenkins",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whenequals": true
      }
    },
    "e9d58bc8-e48e-3780-83eb-ad2539473379": {
      "content": "router-link $0",
      "doc": "router-link element",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "routerLink",
      "matches": {
        "routerLink": true
      }
    },
    "e9d7c3e1-d99f-380d-a47c-6efa27e3fe34": {
      "content": "std.array",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      }
    },
    "e9d8445d-f9e3-3602-a403-b6145fba0ba5": {
      "content": "const ${1:x} = useSpring(${2:0}, { ${3:stiffness}: ${4:300} })",
      "doc": "useSpring()\nCreates a MotionValue that, when set, will use a spring animation to animate to its new state.",
      "filetype": "framer-motion",
      "grammar": "lsp",
      "label": "framer-use-spring",
      "matches": {
        "framer-motion use-spring": true,
        "use-spring": true
      }
    },
    "e9d90363-9684-3186-9629-7ae8148a6b76": {
      "content": "int ${NAME} = $3;",
      "doc": "int aInt = 42;\nint bInt = int(aBool);\nint cInt = int(aFloat);\n\nThe data type int is used for integer values.\n\nSide note: Implicit type conversions are not supported. Type conversions can be done using constructors as shown in the second and third example.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "int",
      "matches": {
        "int": true
      }
    },
    "e9e6d391-5018-35d6-b0ce-5b73fb6f9e2b": {
      "content": "#!/usr/bin/env lua\n$1",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "e9e72bbb-2b1f-3f3c-b957-e04b1eb6a55b": {
      "content": "function ${1:foo}(node, ${2:parameters}) {\n\t// the node has been mounted in the DOM\n\treturn {\n\t\tdestroy() {\n\t\t\t// the node has been removed from the DOM\n\t\t}\n\t};\n}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-action-parameters",
      "matches": {
        "svactionp": true,
        "svelte action parameters": true
      }
    },
    "e9eed1a0-cdd3-329a-a8db-35fc2fdc6980": {
      "content": "state = { ${1:first} }",
      "doc": "Creates empty state object. To be used in a constructor.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "emptyState",
      "matches": {
        "est": true
      }
    },
    "e9f3faf4-d745-3403-ab3a-286b771074c5": {
      "content": "text-align left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:l": true
      }
    },
    "e9f9cf72-5acf-3305-8657-c52dc254b63d": {
      "content": "to!string(${1:x});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tos": true
      }
    },
    "e9fa10dc-d05e-3c6c-8a04-522e503e17a5": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Z index (2D)",
      "matches": {
        "ixz": true
      }
    },
    "ea01f0da-ca80-3f05-85ca-9ff4ae9a4959": {
      "content": "background-repeat: repeat-x;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "background-repeat: repeat-x",
      "matches": {
        "bgrx": true
      }
    },
    "ea020ca7-1d7b-3888-add8-bd1d893f97c3": {
      "content": "const [${2:propertyName}] = ${1:arrayToDestruct};",
      "doc": "Array destructing",
      "filetype": "base",
      "grammar": "lsp",
      "label": "destructingarray",
      "matches": {
        "base const destruct array": true
      }
    },
    "ea159c19-1a2d-3776-9113-5ce38edffef0": {
      "content": "{% filter $1 %}\n  \n{% endfilter %}",
      "doc": "filter tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "filter",
      "matches": {
        "filter": true
      }
    },
    "ea1abec6-b796-3e86-a0bd-0916c1508a71": {
      "content": "@return ${0:#:description}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "return": true
      }
    },
    "ea23a2b8-77c6-32cf-abd5-5444fae29749": {
      "content": "for ${1} = ${2}, ${3} = ${4}\n\t${0}\nend",
      "doc": "",
      "filetype": "julia",
      "grammar": "snu",
      "label": "nested for loop",
      "matches": {
        "fornest": true
      }
    },
    "ea243763-c6dc-391b-be55-4c8c32bf3741": {
      "content": "t.integer :lock_version, null: false, default: 0\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.lock_version (tcl)",
      "matches": {
        "t.": true
      }
    },
    "ea27d4fe-2800-3b9b-a225-346fc4eaa640": {
      "content": "<<<\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "page break",
      "matches": {
        "pagebreak": true
      }
    },
    "ea35b7fa-5a83-39b8-8294-5b2840e2fff5": {
      "content": "<b>$1</b>$2",
      "doc": "HTML - Defines bold text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "b",
      "matches": {
        "b": true
      }
    },
    "ea3658c7-050c-3912-b6ea-acb4640e655c": {
      "content": "@doc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "doc false",
      "matches": {
        "docf": true
      }
    },
    "ea3a6084-5489-372b-85f4-866aee28f110": {
      "content": "var tests = []struct {\n    name string\n    expected string\n    given string\n}{\n    {\"${2}\", \"${3}\", \"${4}\",},\n}\nfor _, tt := range tests {\n    tt := tt\n    t.Run(tt.name, func(t *testing.T){\n        actual := ${1:Function}(tt.given)\n        if actual != tt.expected {\n            t.Errorf(\"given(%s): expected %s, actual %s\", tt.given, tt.expected, actual)\n        }\n    })\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "var test = {...}{...} for {t.Run(){...}}",
      "matches": {
        "tt": true
      }
    },
    "ea3a70e2-7aef-3ef9-9efd-750c36e86bc2": {
      "content": "#!/usr/bin/env bash\nset -euo pipefail\nIFS=$'\\n\\t'",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sbash": true
      }
    },
    "ea3aa619-2ab7-3e93-8e76-31c6d489a83e": {
      "content": "${1:ModelName}::model()->updateByPk(${2:pk}, ${3:array('attributes')}, ${4:condition},array('${5:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yupdatebp": true
      }
    },
    "ea3e7d40-3018-3c74-9ccd-0ff62a3ef683": {
      "content": "<%= yield ${1::content_symbol} %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yield": true
      }
    },
    "ea495b33-206b-35a4-834c-1d91fac23af3": {
      "content": "// Define what props.theme will look like\nconst theme = {\n  ${1}: '${2}'\n};",
      "doc": "styled-component theme",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component-theme",
      "matches": {
        "sct": true,
        "styled-components theme": true
      }
    },
    "ea4a2c5f-c49a-306e-a3d2-99eff41815cd": {
      "content": "function integer-of-day(${1:yyyymmdd})$0",
      "doc": "converts yyyymmdd to an internal integer-day",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-integer-of-day",
      "matches": {
        "function integer-of-day": true
      }
    },
    "ea4cf633-f99a-35a1-ab7f-2ba819955486": {
      "content": "_.curry(${func}, ${arity})",
      "doc": "var abc = function(a, b, c) {\n  return [a, b, c];\n};\n\nvar curried = _.curry(abc);\n\ncurried(1)(2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2)(3);\n// => [1, 2, 3]\n\ncurried(1, 2, 3);\n// => [1, 2, 3]\n\n// Curried with placeholders.\ncurried(1)(_, 3)(2);\n// => [1, 2, 3]\n\nCreates a function that accepts arguments of `func` and either invokes\n`func` returning its result, if at least `arity` number of arguments have\nbeen provided, or returns a function that accepts the remaining `func`\narguments, and so on. The arity of `func` may be specified if `func.length`\nis not sufficient.\n\nThe `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\nmay be used as a placeholder for provided arguments.\n\n**Note:** This method doesn't set the \"length\" property of curried functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-curry",
      "matches": {
        "lodash curry": true
      }
    },
    "ea51cd64-e351-3665-8e14-a96bffba8b10": {
      "content": "Plug '${1}', { 'branch': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'branch': '' }",
      "matches": {
        "plugbr": true
      }
    },
    "ea55507a-e8c4-3538-bcc2-83073601088f": {
      "content": "date.max()",
      "doc": "date.max(limit: Date | string | Ref, message?: string | function): Schema\n\nSet the maximum date allowed, When a string is provided it will attempt to cast to a date first\nand use the result as the limit.arrayDefine an array schema. Arrays can be typed or not, When specifying the element type, cast and isValid\nwill apply to the elements as well. Options passed into isValid are passed also passed to child schemas.\nSupports all the same methods as mixed.let schema = yup.array().of(yup.number().min(2));\n\nawait schema.isValid([2, 3]); // => true\nawait schema.isValid([1, -24]); // => false\n\nschema.cast([\"2\", \"3\"]); // => [2, 3]\nYou can also pass a subtype schema to the array constructor as a convenience.array().of(yup.number());\n// or\narray(yup.number());\nThe default cast behavior for array is: JSON.parseFailed casts return: null;",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "date-max",
      "matches": {
        "yup date max": true
      }
    },
    "ea6965fe-bcbc-3afc-8fef-1c84fd7d11b7": {
      "content": "| ceil",
      "doc": "Math filter: ceil",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter ceil",
      "matches": {
        "ceil": true
      }
    },
    "ea6ac8bb-f617-3316-ac5f-4cebfccf05e0": {
      "content": "grid-auto-columns: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      }
    },
    "ea850f46-9173-37bc-af95-bef81b877f71": {
      "content": "#!/usr/bin/env Rscript",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#!": true
      }
    },
    "ea8800ab-2234-3ee4-b68a-5626f3f9d4ed": {
      "content": "end",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "=> end?",
      "matches": {
        "edn": true
      }
    },
    "ea9124ad-90ab-3c98-a5c8-0137139e4006": {
      "content": "\\begin{vmatrix}\n\t${1:TARGET}\n\\end{vmatrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{vmatrix} \\vmatrix": true,
        "vmatrix": true
      }
    },
    "ea9b369d-e664-3083-96eb-d3d9162fd70a": {
      "content": "border-fit: space;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:sp": true
      }
    },
    "ea9ce9a7-d924-3940-9311-c7bb8b873973": {
      "content": "source('${0:file}')",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source": true
      }
    },
    "ea9e631f-6a9e-370a-b6ee-89359f97d167": {
      "content": "const initialState = {\n\n}\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\n\tcase ${1:typeName}:\n\t\treturn { ...state, ...payload }\n\n\tdefault:\n\t\treturn state\n\t}\n}",
      "doc": "Redux reducer template",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-reducer",
      "matches": {
        "redux reducer": true,
        "rxreducer": true
      }
    },
    "eaa5e18c-3ddf-37da-bb96-2030910d5574": {
      "content": "$this->${1:method}()->shouldMatch(${2:'/wizard/i'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldMatch('/wizard/i')",
      "matches": {
        "smatch": true
      }
    },
    "eaa7178e-60f4-3c19-9ca1-46241abf7f24": {
      "content": "public override bool Equals(object obj) => Equals(obj as ${1:TYPE});\n\npublic bool Equals($1 other)  // IEquatable<$1>\n{\n\tif (object.ReferenceEquals(other, null))\n\t\treturn false;\n\tif (object.ReferenceEquals(this, other))\n\t\treturn true;\n\tif (this.GetType() != other.GetType())\n\t\treturn false;\n\t$0\n\treturn base.Equals(other);\n}\n\npublic override int GetHashCode() => base.GetHashCode();\n\npublic static bool operator ==($1 x, $1 y) =>\n\t(object.ReferenceEquals(x, null) && object.ReferenceEquals(y, null))\n\t|| (!object.ReferenceEquals(x, null) && x.Equals(y));\n\npublic static bool operator !=($1 x, $1 y) => !(x == y);",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Equality for a type",
      "matches": {
        "equals": true
      }
    },
    "eaa8f26f-3729-39f1-af3e-c4f315ea6fd2": {
      "content": "PropTypes.number.isRequired,",
      "doc": "Number prop type required",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "propTypeNumberRequired",
      "matches": {
        "ptnr": true
      }
    },
    "eaa933c8-48a8-39cc-972f-0f06fbf573c5": {
      "content": "border-spacing: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdsp": true
      }
    },
    "eaa9520c-83ee-3df6-84c8-911851d47b22": {
      "content": "def ${1:methodName}(${2:argName}: ${3:ArgType}): ${4:ReturnType} = {\n\t${5:println(\"Hello, world!\")}\n}",
      "doc": "Method",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "def",
      "matches": {
        "def": true
      }
    },
    "eaaffa5f-4fe9-3f06-830d-d0189f6741f6": {
      "content": "select * from ${0:table}",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s*": true
      }
    },
    "eab40396-1e33-30c8-977a-b9b10ec61671": {
      "content": "display: grid",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:g": true
      }
    },
    "eab4a46e-3d5b-3e0e-9dab-b0f6760f4c3b": {
      "content": "$_POST['${1:variable}']",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "_POST array",
      "matches": {
        "P": true
      }
    },
    "eab5d7a0-0138-3d66-9d4b-7491a124ad69": {
      "content": "pack(${1:array}, mask=(${2:$1>0})${3:, vector=${4:destination vector}})",
      "doc": "pack",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "pack",
      "matches": {
        "pack": true
      }
    },
    "eac06194-99e8-388d-9853-35c1c4c001fa": {
      "content": "assert(${0:/* condition */});",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "eac4454a-8338-36b3-8fd4-186acf309ab9": {
      "content": "import sbt._\n\nclass ${1:Name}(info: ProjectInfo) extends DefaultWebProject(info) {\n\tval liftVersion = \"${0:2.3}\"\n\n\toverride def libraryDependencies = Set(\n\n\t) ++ super.libraryDependencies\n\n\tval snapshots = ScalaToolsSnapshots\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "webproject": true
      }
    },
    "eac59a5d-39c3-3761-872f-4736f6cd8346": {
      "content": "let ${1} = ${0};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "eac5c9a8-b52e-3ec3-a621-b75fd27a22dd": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "import",
      "matches": {
        "im": true
      }
    },
    "eac74884-5de5-3d30-aaa4-9ddde183583f": {
      "content": "_.plant(${value})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar wrapped = _([1, 2]).map(square);\nvar other = wrapped.plant([3, 4]);\n\nother.value();\n// => [9, 16]\n\nwrapped.value();\n// => [1, 4]\n\nCreates a clone of the chain sequence planting `value` as the wrapped value.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-plant",
      "matches": {
        "lodash plant": true
      }
    },
    "eacaadd8-4c8e-3665-b1ea-df383ad07be8": {
      "content": "case ${1:${2:var} := }<-${3:channel}:\n  ${0}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "select case",
      "matches": {
        "selc": true
      }
    },
    "ead1266a-4cb3-3216-bc45-a3bd376f0ef9": {
      "content": "font-weight: lighter;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      }
    },
    "eadb8c8e-d49f-35a7-be43-ada2b163037a": {
      "content": "align-items: ${1|flex-start,flex-end,center,baseline,stretch,auto|};",
      "doc": "initial value: auto",
      "filetype": "css",
      "grammar": "lsp",
      "label": "align-self",
      "matches": {
        "as": true
      }
    },
    "eadda5b6-559d-304c-8c16-b08f2d443c83": {
      "content": "format!(\"${1}{${2}}\", ${3});",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "format!",
      "matches": {
        "fmt": true
      }
    },
    "eae046f4-c6ce-3526-9834-644680b3b869": {
      "content": "before_validation :${0:method}",
      "doc": "before_validation",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before validation",
      "matches": {
        "bv": true
      }
    },
    "eae30225-3034-3961-976e-86beadec2706": {
      "content": "try {\n\t${0:${VISUAL}}\n} catch(${1:Exception} ${2:e}) {\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "eaebf36d-2c45-3637-99ae-4655a6a1f6dc": {
      "content": "var_dump(${0:TARGET});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var_dump": true
      }
    },
    "eaed3915-bd69-345b-8519-e1effc396330": {
      "content": "fn name [])",
      "doc": "Create a function",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "fn",
      "matches": {
        "fn": true
      }
    },
    "eaef2235-082e-331b-8f98-a58b8595991c": {
      "content": "${1:obj}.show '${2:slow/400/fast}', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showc": true
      }
    },
    "eaf3eeb6-bfb8-33ff-82da-ccfbb8f2741d": {
      "content": "render text: \"${1:text to render...}\", layout: ${2:true}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render (text,layout => true) (rtlt)",
      "matches": {
        "rtlt": true
      }
    },
    "eaf4cf4a-2490-3a98-8606-6f1078e3f669": {
      "content": "alply(${1:array}, ${2:margin}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "al": true
      }
    },
    "eaf8c681-5041-3c24-a74d-94d8d89064e3": {
      "content": "text-align: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:c": true
      }
    },
    "eafa376e-30e0-3848-9b96-f1bbde381a12": {
      "content": "@catch (${1:exception}) {\n\t${0:handler}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@catch": true
      }
    },
    "eb021fee-de96-397c-bc92-5d02df1d488c": {
      "content": "for ${1:v} := range ${2:#:iterator} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "for range",
      "matches": {
        "range": true
      }
    },
    "eb0b0636-7fa2-3c7f-b8d5-c35fb8f3fa72": {
      "content": "import rpdb2; rpdb2.start_embedded_debugger('${1:debug_password}')$0",
      "doc": "",
      "filetype": "debug",
      "grammar": "lsp",
      "label": "rPDB set trace",
      "matches": {
        "rpdb": true
      }
    },
    "eb0c2d5b-e26c-380f-92ba-7313b3746c2f": {
      "content": "const {\n  ${1:queryName}: { childImageSharp: {fluid: ${2:imageFluid}}}\n} = useStaticQuery(graphql`\n  query {\n    ${1:queryName}: file(relativePath: { eq: \"${3:imagePath.png}\" }) {\n      childImageSharp {\n        fluid(maxWidth: ${4:300}) {\n          ...${5|GatsbyImageSharpFluid,GatsbyImageSharpFluid_noBase64,GatsbyImageSharpFluid_tracedSVG,GatsbyImageSharpFluid_withWebp,GatsbyImageSharpFluid_withWebp_noBase64,GatsbyImageSharpFluid_withWebp_tracedSVG|}\n        }\n      }\n    }\n  }\n`)",
      "doc": "",
      "filetype": "gatsby-image",
      "grammar": "lsp",
      "label": "gatsby-image-usestaticquery-fluid",
      "matches": {
        "gatsby-image usestaticquery fluid": true
      }
    },
    "eb0dcb8f-16d0-3459-a3c8-4fce03872b26": {
      "content": "${1:div}(:style=\"{ fontSize: ${2:data} + 'px' }\")",
      "doc": "vue inline style binding",
      "filetype": "vue-pug",
      "grammar": "lsp",
      "label": "Vue Style Binding",
      "matches": {
        "vstyle": true
      }
    },
    "eb1d9e2b-b808-3371-99c6-378c0e9d0449": {
      "content": "(defprotocol ${1:name}\n\t${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defp": true
      }
    },
    "eb20b566-afe1-352b-840f-d54795ee1afe": {
      "content": "define [\"${1:#dependencies1}\"], (${2:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "def": true
      }
    },
    "eb2bac75-4573-3d53-ac83-f2769b58286f": {
      "content": "this.state.$0",
      "doc": "Access component's state",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "state": true
      }
    },
    "eb2c3b51-6b10-3520-9be0-c49e79ec951b": {
      "content": "// specify the minimum swap interval for buffer swaps.\ngl.setSwapInterval(${0:interval});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl swap interval",
      "matches": {
        "gl": true
      }
    },
    "eb35cfbc-2b7e-3b8e-b09f-cd5b0e848d74": {
      "content": "/*\n *\t${0: comment ...}\n */",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "eb36b6e4-834a-321d-b8d2-09e1119458da": {
      "content": "text-transform: ${1|capitalize,uppercase,lowercase,full-width,none|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "text-transform",
      "matches": {
        "tt": true
      }
    },
    "eb3bfe36-0cee-3a8a-900d-b0ddad27ceda": {
      "content": "{% import \"${1:template}\" as ${2:name} %}$0",
      "doc": "import",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "import",
      "matches": {
        "import": true
      }
    },
    "eb4ebfb8-7d12-36c3-bd12-5cbc468b692f": {
      "content": "for (${1:i} in ${2:0}..${3:5})\n\t${4:expression}",
      "doc": "Snippet for iterating array with for loop",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "eb4f50cb-dc78-36b7-b471-6dfd7891d29b": {
      "content": "${1:void }${2:name}(${3}) {\n\t${4://if not void return null;}\n}\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "eb52e510-8341-3c56-8503-5c99054323f8": {
      "content": "sort { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sor": true
      }
    },
    "eb53e8bb-9d49-335f-9088-8570e1bb2b8c": {
      "content": "// https://eips.ethereum.org/EIPS/eip-721, http://erc721.org/ \r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\n/// @title ERC-721 Non-Fungible Token Standard\r\n/// @dev See https://eips.ethereum.org/EIPS/eip-721\r\n///  Note: the ERC-165 identifier for this interface is 0x80ac58cd.\r\ninterface ERC721 /* is ERC165 */ {\r\n    /// @dev This emits when ownership of any NFT changes by any mechanism.\r\n    ///  This event emits when NFTs are created (`from` == 0) and destroyed\r\n    ///  (`to` == 0). Exception: during contract creation, any number of NFTs\r\n    ///  may be created and assigned without emitting Transfer. At the time of\r\n    ///  any transfer, the approved address for that NFT (if any) is reset to none.\r\n    event Transfer(address indexed _from, address indexed _to, uint256 indexed _tokenId);\r\n\r\n    /// @dev This emits when the approved address for an NFT is changed or\r\n    ///  reaffirmed. The zero address indicates there is no approved address.\r\n    ///  When a Transfer event emits, this also indicates that the approved\r\n    ///  address for that NFT (if any) is reset to none.\r\n    event Approval(address indexed _owner, address indexed _approved, uint256 indexed _tokenId);\r\n\r\n    /// @dev This emits when an operator is enabled or disabled for an owner.\r\n    ///  The operator can manage all NFTs of the owner.\r\n    event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n    /// @notice Count all NFTs assigned to an owner\r\n    /// @dev NFTs assigned to the zero address are considered invalid, and this\r\n    ///  function throws for queries about the zero address.\r\n    /// @param _owner An address for whom to query the balance\r\n    /// @return The number of NFTs owned by `_owner`, possibly zero\r\n    function balanceOf(address _owner) external view returns (uint256);\r\n\r\n    /// @notice Find the owner of an NFT\r\n    /// @dev NFTs assigned to zero address are considered invalid, and queries\r\n    ///  about them do throw.\r\n    /// @param _tokenId The identifier for an NFT\r\n    /// @return The address of the owner of the NFT\r\n    function ownerOf(uint256 _tokenId) external view returns (address);\r\n\r\n    /// @notice Transfers the ownership of an NFT from one address to another address\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT. When transfer is complete, this function\r\n    ///  checks if `_to` is a smart contract (code size > 0). If so, it calls\r\n    ///  `onERC721Received` on `_to` and throws if the return value is not\r\n    ///  `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    /// @param data Additional data with no specified format, sent in call to `_to`\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes memory data) external payable;\r\n\r\n    /// @notice Transfers the ownership of an NFT from one address to another address\r\n    /// @dev This works identically to the other function with an extra data parameter,\r\n    ///  except this function just sets data to \"\".\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    function safeTransferFrom(address _from, address _to, uint256 _tokenId) external payable;\r\n\r\n    /// @notice Transfer ownership of an NFT -- THE CALLER IS RESPONSIBLE\r\n    ///  TO CONFIRM THAT `_to` IS CAPABLE OF RECEIVING NFTS OR ELSE\r\n    ///  THEY MAY BE PERMANENTLY LOST\r\n    /// @dev Throws unless `msg.sender` is the current owner, an authorized\r\n    ///  operator, or the approved address for this NFT. Throws if `_from` is\r\n    ///  not the current owner. Throws if `_to` is the zero address. Throws if\r\n    ///  `_tokenId` is not a valid NFT.\r\n    /// @param _from The current owner of the NFT\r\n    /// @param _to The new owner\r\n    /// @param _tokenId The NFT to transfer\r\n    function transferFrom(address _from, address _to, uint256 _tokenId) external payable;\r\n\r\n    /// @notice Change or reaffirm the approved address for an NFT\r\n    /// @dev The zero address indicates there is no approved address.\r\n    ///  Throws unless `msg.sender` is the current NFT owner, or an authorized\r\n    ///  operator of the current owner.\r\n    /// @param _approved The new approved NFT controller\r\n    /// @param _tokenId The NFT to approve\r\n    function approve(address _approved, uint256 _tokenId) external payable;\r\n\r\n    /// @notice Enable or disable approval for a third party (\"operator\") to manage\r\n    ///  all of `msg.sender`'s assets\r\n    /// @dev Emits the ApprovalForAll event. The contract MUST allow\r\n    ///  multiple operators per owner.\r\n    /// @param _operator Address to add to the set of authorized operators\r\n    /// @param _approved True if the operator is approved, false to revoke approval\r\n    function setApprovalForAll(address _operator, bool _approved) external;\r\n\r\n    /// @notice Get the approved address for a single NFT\r\n    /// @dev Throws if `_tokenId` is not a valid NFT.\r\n    /// @param _tokenId The NFT to find the approved address for\r\n    /// @return The approved address for this NFT, or the zero address if there is none\r\n    function getApproved(uint256 _tokenId) external view returns (address);\r\n\r\n    /// @notice Query if an address is an authorized operator for another address\r\n    /// @param _owner The address that owns the NFTs\r\n    /// @param _operator The address that acts on behalf of the owner\r\n    /// @return True if `_operator` is an approved operator for `_owner`, false otherwise\r\n    function isApprovedForAll(address _owner, address _operator) external view returns (bool);\r\n}\r\n\r\ninterface ERC165 {\r\n    /// @notice Query if a contract implements an interface\r\n    /// @param interfaceID The interface identifier, as specified in ERC-165\r\n    /// @dev Interface identification is specified in ERC-165. This function\r\n    ///  uses less than 30,000 gas.\r\n    /// @return `true` if the contract implements `interfaceID` and\r\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}",
      "doc": "ERC-721 Non-Fungible Token Standard, A standard interface for non-fungible tokens, also known as deeds.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc721 interface",
      "matches": {
        "erc721i": true
      }
    },
    "eb5a2cf5-8ebf-3d65-9a4e-d3fd0b6e2490": {
      "content": "border-left-style: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      }
    },
    "eb5acf08-738d-3eee-bfb2-ea537ae2d8dc": {
      "content": "${1:FIELDNAME} = forms.TypedMultipleChoiceField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "TypedMultipleChoiceField",
      "matches": {
        "ftmuchoice": true
      }
    },
    "eb74b9d4-567e-3f90-a644-bf8c4010ab2b": {
      "content": "font-size-adjust: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza": true
      }
    },
    "eb7c5d67-157f-345f-9a9f-a4b9b6d0f788": {
      "content": "<exception cref=\"${1:System.Exception}\">${2}</exception>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<ex": true
      }
    },
    "eb7cd301-d26e-35b7-8d51-94896d8a3041": {
      "content": "case ${1:${VISUAL}} => ${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "eb86eb41-09ea-3be4-b9c1-4ae391b8df82": {
      "content": "${1:FIELDNAME} = serializers.ReadOnlyField(${2})",
      "doc": "Django-rest Serializers ``ReadOnlyField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF ReadOnlyField",
      "matches": {
        "sreadonly": true
      }
    },
    "eb87a3af-123a-3130-95e8-3c6ed4fab498": {
      "content": "from .views import $1",
      "doc": "",
      "filetype": "views",
      "grammar": "lsp",
      "label": "from views import",
      "matches": {
        "fvi": true
      }
    },
    "eb89665f-40a5-39eb-ba5b-5b7dd4510465": {
      "content": "sizeof(${0:TARGET})",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "size": true,
        "sizeof": true
      }
    },
    "eb8afd65-4cfa-3727-bbc4-596b3f004b0d": {
      "content": "content: no-close-quote;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:ncq": true
      }
    },
    "eb913fc9-b86e-3a92-8d93-bbe833d769fa": {
      "content": "it { should set_session :${0:key} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isss": true
      }
    },
    "eb9471ec-db5b-37f2-a246-150cd196662f": {
      "content": "if (${1}) begin\n\t${2}\nend\nelse begin\n\t${3}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "eb967e82-5587-3e95-b607-63104a5005dd": {
      "content": "else:\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "eb9b1a97-c438-32c4-b498-385774e87fa7": {
      "content": "| strip_html",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "strip_html": true
      }
    },
    "eb9dd17e-449a-3e5e-9d68-a117d3de11c7": {
      "content": "spread(${1:source}, dim=${2:1}, ncopies=$3)",
      "doc": "spread",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "spread",
      "matches": {
        "spread": true
      }
    },
    "eb9df1a0-cefc-3193-9066-e54ce45b0f44": {
      "content": "place-self: start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:s": true
      }
    },
    "eba3e3b5-6580-3477-a709-009234224afb": {
      "content": "_.stubTrue()",
      "doc": "_.times(2, _.stubTrue);\n// => [true, true]\n\nThis method returns `true`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-stubtrue",
      "matches": {
        "lodash stubtrue": true
      }
    },
    "eba5ed5b-322f-3c9c-aa8e-0598ed26621b": {
      "content": "try!(${1})",
      "doc": "try!(…)",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "try",
      "matches": {
        "try": true
      }
    },
    "ebb274e0-8088-3537-829e-26bfb193cdce": {
      "content": "{% switch ${1} %}\n\t{% case \"${2}\" %}\n\t\t${0}\n\t{% default %}\n\n{% endswitch %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch",
      "matches": {
        "switch": true
      }
    },
    "ebb29605-e942-3544-86af-f0c95ea76120": {
      "content": "<input type=\"datetime\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:datetime": true
      }
    },
    "ebb5298d-b7eb-3138-acb3-bb6293fa2491": {
      "content": "filters: {\n\t${1:fnName}: function(${2:value}) {\n\t\treturn ${2:value}${0};\n\t}\n}",
      "doc": "vue filter",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Filter",
      "matches": {
        "vfilter": true
      }
    },
    "ebb60c1b-4698-37b7-b07a-36308cd7ab16": {
      "content": "${1:obj}.outerWidth()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "outerw": true
      }
    },
    "ebb81efb-a2b6-3d4c-9848-4dc29aa291c8": {
      "content": "CREATE DATABASE ${1:name};",
      "doc": "Create regular table",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "created",
      "matches": {
        "created": true
      }
    },
    "ebbdcc0d-a253-38ff-9623-01bbe66c663a": {
      "content": "margin-bottom auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mb:a": true
      }
    },
    "ebc15857-1371-3bfe-af71-94ad4dfcc4bb": {
      "content": "for=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "ebc9d3cf-5e87-3220-b176-a332c1434a04": {
      "content": "else if (${1}) ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "ebce2477-d8ef-3aa8-826f-ecded7b8aa07": {
      "content": "$1.propTypes = {\n\t$2\n}",
      "doc": "Creates empty propTypes declaration",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypes",
      "matches": {
        "rpt": true
      }
    },
    "ebd9c8a6-fb32-35c9-9420-3b2facf565ff": {
      "content": "require 'optparse'\n\noptions = { ${0:default: 'args'} }\n\nARGV.options do |opts|\n\topts.banner = \"Usage: #{File.basename($PROGRAM_NAME)}\"\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "optp": true
      }
    },
    "ebdb310a-89de-3dba-9a62-f5383664443c": {
      "content": "-include(\"${1:file}\").",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc": true
      }
    },
    "ebe14d91-ff1e-31fc-a477-fae93be5670f": {
      "content": "else {\n    ${0}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "ebe382cd-4637-3f82-8167-a3109305d878": {
      "content": "\\\\cite[${1}]{${2}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\cite[]{}",
      "matches": {
        "cite": true
      }
    },
    "ebec13e0-e4b3-38b3-a8a7-cfdd22ce825e": {
      "content": "case '${1:#:variable}':\n\t${0:#:code...}\n\tbreak;",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "case": true
      }
    },
    "ebf7ba1a-dff2-39e5-bf93-b95897e3b1b3": {
      "content": "using (${1:resource})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "usi": true
      }
    },
    "ebf84d67-2212-3dd1-9d22-1286bffa1214": {
      "content": "${1:ModelName}::model()->deleteAll(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ydela": true
      }
    },
    "ebfbc3d7-89c5-33f3-a83b-f0e6cee45753": {
      "content": "number.round()",
      "doc": "number.round(type: 'floor' | 'ceil' | 'trunc' | 'round' = 'round'): Schema\n\nAdjusts the value via the specified method of Math (defaults to 'round').booleanDefine a boolean schema. Supports all the same methods as mixed.let schema = yup.boolean();\n\nawait schema.isValid(true); // => true\ndateDefine a Date schema. By default ISO date strings will parse correctly,\nfor more robust parsing options see the extending schema types at the end of the readme.\nSupports all the same methods as mixed.let schema = yup.date();\n\nawait schema.isValid(new Date()); // => true\nThe default cast logic of date is pass the value to the Date constructor, failing that, it will attempt\nto parse the date as an ISO date string.Failed casts return an invalid Date.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-round",
      "matches": {
        "yup number round": true
      }
    },
    "ec075ce5-74d8-3f44-a2f6-29de8bcb51b8": {
      "content": "text-outline: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      }
    },
    "ec0853f7-888e-3ffb-9c52-6b2b1c6a967f": {
      "content": "border-bottom-left-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbli:n": true
      }
    },
    "ec0a4aae-0d80-3094-ab2d-53b6be83a002": {
      "content": "background-clip ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp": true
      }
    },
    "ec0be2ed-4342-357b-87ea-f9a34f23bd8e": {
      "content": "@finally {\n\t${0:statements}\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@finally": true
      }
    },
    "ec135173-71c1-3445-8836-0cc42ab43d83": {
      "content": "| replace: '${target}', '${replace}' }}",
      "doc": "String filter: replace",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter replace",
      "matches": {
        "replace": true
      }
    },
    "ec15bb25-91ed-333e-bf81-21a42430afed": {
      "content": "white-space-collapse break-strict",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whsc:bs": true
      }
    },
    "ec15ca5e-f894-3a7b-9792-7b79b8564693": {
      "content": "FUNCTION NUMERIC-THOUSANDS-SEPARATOR()$0",
      "doc": "character used to separate the thousands digit groupings in a numeric value according to the current locale",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-NUMERIC-THOUSANDS-SEPARATOR",
      "matches": {
        "FUNCTION NUMERIC-THOUSANDS-SEPARATOR": true
      }
    },
    "ec1b210d-1cb1-3b73-ae2b-cfc664e5551c": {
      "content": "validates_length_of :${1:attribute}, within: ${2:3..20}${3:, on: :${4:create}, message: \"${5:must be present}\"}, if: proc { |obj| ${6:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_length_of if",
      "matches": {
        "vlif": true
      }
    },
    "ec1b35e2-aa58-3d63-b9b2-eaae36154900": {
      "content": "expect($1).toEqual($0);",
      "doc": "expects the first argument to be equal with the second one",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-toequal",
      "matches": {
        "jest expect toequal": true,
        "te": true
      }
    },
    "ec1f1678-475c-369e-b035-cf5788dba8e3": {
      "content": "borderRadius: ${1},",
      "doc": "borderRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderRadius",
      "matches": {
        "bor": true
      }
    },
    "ec21202f-afcd-3c4c-b59a-820ab526a6d1": {
      "content": "page-break-after: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgba": true
      }
    },
    "ec291317-6ac1-37cc-b9e0-d1795cf27828": {
      "content": "{% spaceless %}\n  $1\n{% endspaceless %}",
      "doc": "spaceless tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "spaceless",
      "matches": {
        "spaceless": true
      }
    },
    "ec2d1fdc-680a-3323-8c68-4464431aa3db": {
      "content": "if !reflect.DeepEqual(${1:expected}, ${2:actual}) {\n\t_, file, line, _ := runtime.Caller(0)\n\tfmt.Printf(\"%s:%d:\\n\\n\\texp: %#v\\n\\n\\tgot: %#v\\n\\n\", filepath.Base(file), line, $1, $2)\n\tt.FailNow()\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "equals: test two identifiers with DeepEqual",
      "matches": {
        "eq": true
      }
    },
    "ec2dcbb8-e0db-325d-8e7e-4429c0ac0748": {
      "content": "(defn ${1:name}\n\t\"${2:doc}\"\n\t[${3}]\n\t${0})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "defn function \"...\" [...] ...",
      "matches": {
        "defn-doc": true
      }
    },
    "ec2fefa2-f498-3971-bbd7-e9d306ac72e7": {
      "content": "grid-template: ${1};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gt": true
      }
    },
    "ec32588d-28de-3973-b9e1-1e81fbdb1beb": {
      "content": "${1:FIELDNAME} = models.XMLField($2)",
      "doc": "XMLField (mxml).\n\n*All uses of XMLField can be replaced with TextField. This field has been deprecated since version 1.3*",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mxml",
      "matches": {
        "mxml": true
      }
    },
    "ec3b895c-9164-3ff3-b065-9e0b572a06d7": {
      "content": "font-size-adjust: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fza:n": true
      }
    },
    "ec3ea275-e67a-3864-9f9e-999a0ea63c93": {
      "content": "test('should ${1:first}', () => { ${2:second} })",
      "doc": "Testing `test` block",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "testBlock",
      "matches": {
        "test": true
      }
    },
    "ec3f4624-c471-3ecf-8b86-8b8b1f9c1f8a": {
      "content": "${${1:}}",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "$",
      "matches": {
        "$": true
      }
    },
    "ec437fcb-fd3f-3abc-a148-513e3c614aa4": {
      "content": "typedef enum {${2:TARGET}} ${1:name};",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "ec4904d5-79cb-329a-a95e-0acb779e58f2": {
      "content": "${1:obj}.load('${2:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\tfunction (responseText, textStatus, xhr) {\n\t\t${0:// success callback}\n\t}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadf": true
      }
    },
    "ec4a572d-5d5b-33bc-88b2-6873437009b2": {
      "content": "if { [catch {${1:#do something...}} ${2:err}] } {\n\t${0:# handle failure...}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifc": true
      }
    },
    "ec52fa18-294b-3904-99ff-68d742f2f493": {
      "content": "cond do\n  $1 -> \n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "cond",
      "matches": {
        "cond": true
      }
    },
    "ec563a1f-4984-3baf-a63c-96d4d6c27b34": {
      "content": "mixed.clone()",
      "doc": "mixed.clone(): Schema\n\nCreates a deep copy of the schema. Clone is used internally to return a new schema with every schema state change.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "mixed-clone",
      "matches": {
        "yup mixed clone": true
      }
    },
    "ec5640f4-d9d0-32d8-8100-30caf85b76e9": {
      "content": "assertNotNull(\"${1:Failure message}\", ${2:object});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ann": true
      }
    },
    "ec5e7b94-5b5d-3588-95fb-4c59dd50b9cc": {
      "content": "<body>\n\t${0}\n</body>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "body": true
      }
    },
    "ec601497-e51f-360f-9ced-0d3756c1dd68": {
      "content": "@OneToMany${1:(cascade=CascadeType.ALL)}\n${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "om": true
      }
    },
    "ec673081-ec10-3746-aee6-85505968a5d5": {
      "content": "${1:public} bool ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb": true
      }
    },
    "ec676d3b-abf9-37a6-b5d2-d7c518b871ea": {
      "content": "componentWillUnmount() {\n\t$0\n}",
      "doc": "Invoked immediately before a component is unmounted from the DOM.",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-componentwillunmount",
      "matches": {
        "cwun": true,
        "react componentwillunmount": true
      }
    },
    "ec6d224a-b2b6-3d36-b0a7-8fa40e7f356b": {
      "content": "<slot$1>$2</slot>$0",
      "doc": "<slot></slot>. Expects: string. Used on content inserted into child components to indicate which named slot the content belongs to.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-slote",
      "matches": {
        "slote": true,
        "vue slote": true
      }
    },
    "ec6f1f65-fe8f-3908-b5b4-9557e33f3e15": {
      "content": "_.partial(${func}, ${partials})",
      "doc": "function greet(greeting, name) {\n  return greeting + ' ' + name;\n}\n\nvar sayHelloTo = _.partial(greet, 'hello');\nsayHelloTo('fred');\n// => 'hello fred'\n\n// Partially applied with placeholders.\nvar greetFred = _.partial(greet, _, 'fred');\ngreetFred('hi');\n// => 'hi fred'\n\nCreates a function that invokes `func` with `partials` prepended to the\narguments it receives. This method is like `_.bind` except it does **not**\nalter the `this` binding.\n\nThe `_.partial.placeholder` value, which defaults to `_` in monolithic\nbuilds, may be used as a placeholder for partially applied arguments.\n\n**Note:** This method doesn't set the \"length\" property of partially\napplied functions.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-partial",
      "matches": {
        "lodash partial": true
      }
    },
    "ec718c30-b700-3eca-a4e0-f5c25d089816": {
      "content": "<${1:Component} ${2:attribute}={${3:value}}/>",
      "doc": "Tags that have the name of a component will render that component at the point where the tag is defined.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Components Tags",
      "matches": {
        "tag": true
      }
    },
    "ec7b6cfa-f52c-3b9a-9185-badbc7d66306": {
      "content": "grid-auto-flow: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf": true
      }
    },
    "ec805ca8-b01c-35fb-a373-6e9e0aa8c1d0": {
      "content": "get ${1:first}() {\n  return this.${2:second}\n}",
      "doc": "Creates a getter property inside a class",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propertyGet",
      "matches": {
        "pge": true
      }
    },
    "ec8707ed-79c7-3cb9-ab27-90663de68615": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;",
      "doc": "Create React Native Styled Components file",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-react-native": true
      }
    },
    "ec8ce43c-5c20-3af1-b91f-7cc55ac0bd9d": {
      "content": "assert_redirected_to ${2:action: \"${1:index}\"}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Test Assert Redirected To (art)",
      "matches": {
        "art": true
      }
    },
    "ec8e9688-0f48-33e9-b8aa-4b62c5477eae": {
      "content": "each_pair do |${1:key}, ${2:value}|\n  ${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "each_pair_do": true
      }
    },
    "ec9219de-b4bc-37ae-8e53-1e3e2de82af4": {
      "content": "Run Keyword And Return If    '\\${${1:rc}}' != '${2:abc}'    ${3:${kw}}    ${4:${args}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Run Keyword And Return If",
      "matches": {
        "rkari": true
      }
    },
    "ec929194-346a-3bb3-9090-8fb0082c0210": {
      "content": "vertex(${1:x}, ${2:y}, ${3:z}${4:, }${5:u}${6:, }${0:v});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "3D",
      "matches": {
        "vertex": true
      }
    },
    "ec92fe00-4a0e-35b7-b225-bb45019d2590": {
      "content": "place-content: flex-start",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:fs": true
      }
    },
    "ec9702a4-249e-3b5b-a965-62438514532b": {
      "content": "${1:obj}.prependTo('${2:selector expression}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "prependto": true
      }
    },
    "ec9e78b5-c958-32e2-8f33-da27b06c04fe": {
      "content": "default :\n\t${1}\nbreak;",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "default": true
      }
    },
    "eca1eb5c-703d-3dd8-a86a-bff8332bbd28": {
      "content": "const ${1:name} = new ${2:type}(${3:arguments});$0",
      "doc": "New Statement",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "New Statement",
      "matches": {
        "new": true
      }
    },
    "eca58bd8-8830-3ef0-80df-7497727729e0": {
      "content": "PropTypes.func",
      "doc": "Func prop type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeFunc",
      "matches": {
        "ptf": true
      }
    },
    "eca6047b-ef19-3eea-bf1b-54a0f33135e5": {
      "content": "array_walk($${1:foo}, function(&$${2:v}, $${3:k}) {\n\t$$2 = ${0};\n});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aw": true
      }
    },
    "ecac44db-df3d-3260-b663-42c88f8986f6": {
      "content": "compile = (tElement, tAttrs, transclude) ->\n\t(scope, element, attrs) ->\n\t\t${1}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdcf": true
      }
    },
    "ecb1665f-5f82-3f31-b727-f3075864e91e": {
      "content": "if ${1} then ${2} else ${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "if expression",
      "matches": {
        "ifex": true
      }
    },
    "ecb92395-391b-310a-8622-2d40f219f5fb": {
      "content": "beforeRouteEnter(to, from, next) {\n\tnext(vm => {${1:}});\n},",
      "doc": "Vue Router component guards beforeRouteEnter",
      "filetype": "vue-script-router",
      "grammar": "lsp",
      "label": "Vue Router beforeRouteEnter",
      "matches": {
        "vbeforerouteenter": true
      }
    },
    "eccd5828-d59f-3ea2-be3f-7921805a5844": {
      "content": "func ${1:name}(${2:#:arguments})${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "func name(...) { ... }",
      "matches": {
        "void": true
      }
    },
    "eccd62b7-a3cc-309e-8318-fbcd0325e5ac": {
      "content": "curveVertex(${1:x}, ${0:y});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curveVertex": true
      }
    },
    "eccf6d6d-2f19-3432-bb21-85552bc50ebe": {
      "content": "switch (${1:key}) {\n\tcase ${2:value}:\n\t\t$0\n\t\tbreak;\n\n\tdefault:\n\t\tbreak;\n}",
      "doc": "Switch Statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "Switch Statement",
      "matches": {
        "switch": true
      }
    },
    "ecd01626-a9cb-3ccf-a2fb-55a306323b0a": {
      "content": "Yii::log('${1:msg}', '${0:info}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ylog": true
      }
    },
    "ecd405df-5bbc-397d-91b9-da5a94efbb3d": {
      "content": "before :${1:each} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bef": true
      }
    },
    "ece8e645-330e-39ac-9ab6-3c0bd00380dc": {
      "content": "/**\n * ${0}\n */",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "/*": true
      }
    },
    "ece9a261-08e2-3ae5-87fc-ba696ffaeea7": {
      "content": "test \"${1:test_name}\" do\n  ${2:TARGET}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "test .. do .. end",
      "matches": {
        "test": true
      }
    },
    "ecf01e37-924b-39ba-9569-c17ee3140774": {
      "content": "NSMutableDictionary *${1:dict} = [NSMutableDictionary dictionary];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSDictionary (dict)",
      "matches": {
        "dict": true
      }
    },
    "ecf1bb8b-3bb1-367e-8b0a-c88bfe2d19a1": {
      "content": "useEffect(() => {\n$0\n})",
      "doc": "Adds use effect",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "useEffect",
      "matches": {
        "usf": true
      }
    },
    "ed06d84d-14f5-33b2-bb00-6e75ba42f429": {
      "content": "overflow-y auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      }
    },
    "ed091f0a-63c6-3fce-bfbb-c269383c4d14": {
      "content": "${1:obj}.toggleClass('${2:class name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togclass": true
      }
    },
    "ed0e0740-eb4f-3897-a98f-52de4c961345": {
      "content": "border-corner-image url(${0})",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci": true
      }
    },
    "ed125f17-6c42-385c-adbb-945740b6cc88": {
      "content": "${1:name}.reduceRight[${0:T}] {(",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "redr": true
      }
    },
    "ed17b93b-92f7-37f6-9240-f245ce36e9d9": {
      "content": "| ${1:Column1}   | ${2:Column2}    |\n|--------------- | --------------- |\n| ${3:Item1.1}   | ${4:Item2.1}   |\n| ${4:Item1.2}   | ${5:Item2.2}   |\n| ${6:Item1.3}   | ${7:Item2.3}   |\n| ${8:Item1.4}   | ${9:Item2.4}   |\n${0}",
      "doc": "Insert table with 5 rows and 2 columns. First row is heading.",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert 5x2 table",
      "matches": {
        "5x2table": true
      }
    },
    "ed192c78-30cf-3ca8-a6ab-eed96930ac81": {
      "content": "border-fit: overwrite;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:of": true
      }
    },
    "ed1ae55d-6f7c-3896-ab65-8ddd0079a134": {
      "content": "right: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "r:a": true
      }
    },
    "ed1cfec3-72de-3e6e-8acf-3efe6143e387": {
      "content": "go ${1:funcName}(${0})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "go someFunc(...)",
      "matches": {
        "go": true
      }
    },
    "ed3758f3-2003-3557-8b95-81ae916a1c94": {
      "content": "firewall { \"${1:comment}\":\n\tproto\t=> ${2:tcp},\n\taction\t=> ${3:accept},\n\tport\t=> ${4},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "firewall": true
      }
    },
    "ed47ea1b-3cd3-36bf-ae74-5805a9b54d40": {
      "content": "extension ${1:Type} {\n\n\t$0\n}",
      "doc": "extension declaration",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "extension",
      "matches": {
        "extension": true
      }
    },
    "ed4bc6f9-ea05-369a-91ef-07b20a95268c": {
      "content": "${1:property_name}: computed('${3:argument}', function() {\n\t${0://body...}\n}),",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "property_name: computed('...', function() {...}),",
      "matches": {
        "cpro": true
      }
    },
    "ed4cf20c-52d8-3945-b663-d99aa5532548": {
      "content": "when ${1:condition}\n\t${0:${VISUAL}}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "ed61269e-12a2-33a6-82e3-27775fc3c032": {
      "content": "_.thru(${value}, ${interceptor})",
      "doc": "_('  abc  ')\n .chain()\n .trim()\n .thru(function(value) {\n   return [value];\n })\n .value();\n// => ['abc']\n\nThis method is like `_.tap` except that it returns the result of `interceptor`.\nThe purpose of this method is to \"pass thru\" values replacing intermediate\nresults in a method chain sequence.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-thru",
      "matches": {
        "lodash thru": true
      }
    },
    "ed65356b-e757-3584-bcdc-2816d834ec36": {
      "content": "[| ${0:TARGET} |]",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "array literal [| |]",
      "matches": {
        "arl": true
      }
    },
    "ed66273c-8d92-33e0-9121-ddb1582acbc4": {
      "content": "${1:FIELDNAME} = models.PositiveIntegerField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "PositiveIntegerField",
      "matches": {
        "mposint": true
      }
    },
    "ed6e47d4-c0df-32d8-920b-743ea82fea23": {
      "content": "| reverse",
      "doc": "Array filter or String filter: reverse",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter reverse",
      "matches": {
        "reverse": true
      }
    },
    "ed76a212-afa6-3804-bbca-70a89e720ad5": {
      "content": "${fn:containsIgnoreCase(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "contains:i": true
      }
    },
    "ed7dbf7c-69a1-3c9d-85d5-b1392a37a238": {
      "content": "import PropTypes from 'prop-types'\nimport React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n  static propTypes = {}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassPureComponentWithPropTypes",
      "matches": {
        "rpcp": true
      }
    },
    "ed824093-7079-302b-bb85-7f86898f0497": {
      "content": "page-break-inside: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbi": true
      }
    },
    "ed863c8b-b81d-3115-bae8-ddc3cc49e7a7": {
      "content": "{% for ${1:item} in ${2:items} %}\n\t$3\n{% else %}\n\t$0\n{% endfor %}",
      "doc": "for ... else",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "fore",
      "matches": {
        "fore": true
      }
    },
    "ed88265d-ee4e-3930-b8f4-9c1fc486ee6e": {
      "content": "object ${1:ObjectName} {\n\t${2:println(\"Hello, world!\")}\n}",
      "doc": "Object",
      "filetype": "scala",
      "grammar": "lsp",
      "label": "object",
      "matches": {
        "object": true
      }
    },
    "ed8a65c3-a6d4-3b5a-b49b-77ce0fe1a166": {
      "content": "error_log(print_r($${1:foo}, true), 3, '${2:/tmp/debug.log}');",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vdf": true
      }
    },
    "ed9042df-9cbc-3a37-b23d-c5bbc205cc23": {
      "content": "install.packages(${1:pkgs}, ${2:lib}, ${3:repos = ${4:getOption(\"repos\")}}, ${5:contriburl = ${6:contrib.url(repos, type)}})",
      "doc": "Install package",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "ins",
      "matches": {
        "insall": true
      }
    },
    "ed94d867-01e4-3469-84ae-88490001fe87": {
      "content": "use Symfony\\Component\\HttpFoundation\\Request;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Symfony\\..\\Request",
      "matches": {
        "usereauest": true
      }
    },
    "ed9f8612-a181-342b-9e01-d4810061c775": {
      "content": "place-content: stretch;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:st": true
      }
    },
    "eda9fde3-f502-363a-9f53-3130cd94f389": {
      "content": "int ${1:x} = threadIdx.x + blockIdx.x * blockDim.x;\nint ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current X,Y,Z index (3D)",
      "matches": {
        "ixyz": true
      }
    },
    "edb8a3d0-5f31-3a2a-b90b-9d26edb04bdd": {
      "content": "while getopts '${1:o}' ${2:opts}\ndo\n\tcase $$2 in\n\t${3:o0})\n\t\t${0:#staments};;\n\tesac\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "go": true
      }
    },
    "edb8a8f8-adaf-31f0-a188-8137431d951a": {
      "content": "t.Run(\"${0}\", func(t *testing.T){\n\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "t.Run(XYZ, func(t *testing.T){ ... })",
      "matches": {
        "tr": true
      }
    },
    "edc2d6f6-85ed-3f90-8679-0004232c59d5": {
      "content": "expect(${1:target}).not.toHaveAttr('${2:attr}'${3:, '${4:value}'});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to not have attribute (js)",
      "matches": {
        "notha": true
      }
    },
    "edc3baf9-79ad-374e-a4dc-8612a824c9e9": {
      "content": "<input type=\"checkbox\" name=\"${1}\" id=\"${2:$1}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:checkbox": true
      }
    },
    "edc693f4-1f73-3768-9edd-404cdfc68432": {
      "content": "std::unordered_set<${1:T}> ${2};",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "uset": true
      }
    },
    "edcb5149-0805-3183-85b2-a9cd7f654410": {
      "content": "<%= $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "lsp",
      "label": "=",
      "matches": {
        "=": true
      }
    },
    "edcd07d8-ca87-39e8-bcd9-a355e53653a8": {
      "content": "list-style-type: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list-style-type": true,
        "lst": true
      }
    },
    "edced844-69b4-3cef-a12a-9ac213508c0e": {
      "content": "NS_ASSUME_NONNULL_BEGIN\n\n@protocol ${1:protocol name} : ${2:NSObject}\n\n$3\n\n@end\n\nNS_ASSUME_NONNULL_END",
      "doc": "Create an Objc protocol declaration",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create protocol declaration",
      "matches": {
        "@protocol": true,
        "proto": true
      }
    },
    "edd3dff1-71f2-3261-aa9a-cb6918bf663f": {
      "content": "font-weight: lighter",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:lr": true
      }
    },
    "edd7d7a4-62bf-30b5-be4d-8aa06a7244ec": {
      "content": "${1:FIELDNAME} = JSONField()",
      "doc": "JSONField (mjson).\n\n*PostgreSQL specific model fields*.\n\n[New in Django 1.11.]\n\nA field for storing JSON encoded data.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mjson",
      "matches": {
        "mjson": true
      }
    },
    "edd7e0a4-195e-32cd-8cb0-391fbd63d84f": {
      "content": "${1:obj}.scrollLeft(${2:value})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scrolll": true
      }
    },
    "ede0706b-266f-3929-9832-afac8aaba8e1": {
      "content": "${1:FIELDNAME} = models.ImageField(upload_to=${2:path/for/upload}${3:, height_field=height, width_field=width}${0:, max_length=100})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "image": true
      }
    },
    "ede079de-7bda-3979-b62a-f1d66ab9ae3c": {
      "content": "margin: 0;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:0": true
      }
    },
    "ede51991-4a8e-364a-9727-e6b4bbc8107a": {
      "content": "@extend ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ext": true
      }
    },
    "edeac691-ba9e-3ba9-ab4e-d4849936edf8": {
      "content": "var ${1:name}${2:: T} = ${0:value}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "edeb9d85-d5a6-33d0-a4ab-2b85768802fc": {
      "content": "\\left${1:(} ${3:#:body} \\right${2:)}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\left \\right",
      "matches": {
        "\\left": true,
        "left": true
      }
    },
    "edf114d6-c02b-3722-94c3-b9dd6fe97a6c": {
      "content": "${1:name} ()\n{\n\t${0}\n}",
      "doc": "This defines a function named name.\n\nThe reserved word function is optional.\n\nIf the function reserved word is supplied, the parentheses are optional.\n\n1. Recommended way:\n\nname() {}\n\n2. C-like-way:\nfunction name [()] {}",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "function",
      "matches": {
        "function": true
      }
    },
    "edf6021b-8357-36ed-ad52-867c9418ef26": {
      "content": "{% csrf_token %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "csrf": true
      }
    },
    "edf70027-41a4-374b-8cde-cd8a452cd894": {
      "content": "border-right-color ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrc": true
      }
    },
    "edffbb51-11ad-3063-97ad-1aa3d95a1a13": {
      "content": "always_latch begin\n    if (${1:enable}) begin\n        ${2:TARGET}\n    end\nend",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "always_latch",
      "matches": {
        "all": true
      }
    },
    "ee00f5c3-a98c-372c-a0d4-b518ef28f77c": {
      "content": "<strong>$1</strong>$2",
      "doc": "HTML - Defines strong text",
      "filetype": "html",
      "grammar": "lsp",
      "label": "strong",
      "matches": {
        "strong": true
      }
    },
    "ee080e61-e1df-3fad-b877-388f55baa56e": {
      "content": "@include \"${1}\"${0}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "@include",
      "matches": {
        "inc": true
      }
    },
    "ee0ad2c2-0071-3065-ab54-b50620544c59": {
      "content": "lbound(${1:source}${2:, dim=${3:1}})",
      "doc": "Lower Bound",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "lbound",
      "matches": {
        "lbound": true
      }
    },
    "ee0bb3e7-1fc3-35b6-b0f2-a7c514b994fe": {
      "content": "for ${1:i} in ${2:l_var}.first .. $2.last loop\n\t${0: -- dbms_output.put_line($2($1)); }\nend loop;",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forc": true
      }
    },
    "ee2132b1-b7c2-3330-8b75-85f998d946bc": {
      "content": "while ${1} loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "w": true,
        "while": true
      }
    },
    "ee222f13-5a03-38f4-9582-6367146f2781": {
      "content": "auto ${1:/*variable*/} = ${2:/*value*/};",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "auto (auto)",
      "matches": {
        "auto": true
      }
    },
    "ee2bd5d9-890d-32c6-9c5a-ebe042e5b55e": {
      "content": "${1:obj}.ajaxError(function (${1:e}, xhr, settings, thrownError) {\n\t${2:// error callback}\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxerror": true
      }
    },
    "ee32a940-165a-3cfd-925c-23c8e6746f04": {
      "content": "${1:obj}.trigger('${2:event name}')",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "trig": true
      }
    },
    "ee331ce8-02c0-3cb6-adbf-de397c58ef90": {
      "content": "after_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_update",
      "matches": {
        "aftu": true
      }
    },
    "ee3628f4-3112-3147-8c32-f98fdfb1fad7": {
      "content": "${1:FIELDNAME} = serializers.SlugField(${2})",
      "doc": "Django-rest Serializers ``SlugField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF SlugField",
      "matches": {
        "sslug": true
      }
    },
    "ee3bd485-761c-3383-be54-3beaeca0027b": {
      "content": "border-style: dot-dash;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtds": true
      }
    },
    "ee3d3611-3948-3727-b554-083fefce958d": {
      "content": "justify-content: stretch",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:st": true
      }
    },
    "ee3d4623-7e93-3c64-b39f-967407b430dd": {
      "content": "expect(${1:target}).toEqual(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to equal (js)",
      "matches": {
        "ee": true
      }
    },
    "ee3f1452-c687-3466-9883-7e4710b47fe6": {
      "content": "let(:${1:object}) { $0 }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert let",
      "matches": {
        "let": true
      }
    },
    "ee43ec53-e75a-3de2-bb2e-bd9a091fc4b6": {
      "content": "borderWidth: ${1},",
      "doc": "borderWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderWidth",
      "matches": {
        "bor": true
      }
    },
    "ee489a88-9e93-3c1a-8b14-f327580a61ee": {
      "content": "process.env",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "process.env",
      "matches": {
        "pe": true
      }
    },
    "ee4c39de-4c5d-3871-9041-7b301bd403d9": {
      "content": "impl AsMut<${1:Ref}> for ${2:Type} {\n\tfn as_mut(&mut self) -> &mut ${3:$1} {\n\t\t&mut self.${0:field}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "AsMut trait implementation",
      "matches": {
        "asmut": true
      }
    },
    "ee4cd8b2-1a49-3338-8e9d-b27d7100f5e6": {
      "content": "println('${1:#:name}, $1)",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "println('name, name)",
      "matches": {
        "pn": true
      }
    },
    "ee55d8c4-a74b-3fbc-846b-c2898df91303": {
      "content": "align-self: first baseline;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:fb": true
      }
    },
    "ee5dee15-aaeb-354a-b4a0-5a7c3165f916": {
      "content": "echo CHtml::checkBox('${1:name}', ${2:false}, array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhcb": true
      }
    },
    "ee652d13-b627-331b-b165-3bba69ef3466": {
      "content": "caption-side: top",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cps:t": true
      }
    },
    "ee67ad73-a5e0-361e-89ac-14ff49347cc5": {
      "content": "grid-auto-flow: column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      }
    },
    "ee6dd322-5bad-34ba-a311-3dd439f705f6": {
      "content": "border-bottom-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdbi:n": true
      }
    },
    "ee6f8e08-bda1-36a3-8866-85f0fc7f96ae": {
      "content": "height: ${1},",
      "doc": "height",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "height",
      "matches": {
        "h": true
      }
    },
    "ee72467b-b21b-339e-bc29-dfcdd57208f1": {
      "content": "[${1:text}](https://${2:address})",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "[": true
      }
    },
    "ee751918-d683-3585-85c2-9f403c75bf92": {
      "content": "for ${1:i} in ${2} {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "for ... in ... loop",
      "matches": {
        "for": true
      }
    },
    "ee79c637-b6e3-3c89-8ef0-45f8f7e2ad73": {
      "content": "border-bottom-width: ${1:1}px ${2:solid} #${3:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-bottom-width: size style color (border)",
      "matches": {
        "border": true
      }
    },
    "ee7bab09-ad17-3082-aaf5-afc3c5b29d6f": {
      "content": "${1:map}.with_options ${2:controller}: '${3:thing}' do |$3|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mapwo": true
      }
    },
    "ee7f4dd2-a625-3f94-b73e-9c67f2e78bc6": {
      "content": "_.isSet(${value})",
      "doc": "_.isSet(new Set);\n// => true\n\n_.isSet(new WeakSet);\n// => false\n\nChecks if `value` is classified as a `Set` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isset",
      "matches": {
        "lodash isset": true
      }
    },
    "ee831a39-49da-3f55-999d-2b597112485a": {
      "content": "else {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "else",
      "matches": {
        "el": true
      }
    },
    "ee84288f-f360-31d1-899a-5b32f495f45d": {
      "content": "split(\"${1:str}\"${2: , }${0:delimiter});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      }
    },
    "ee8edd34-5c54-3a50-a01c-da424560e30b": {
      "content": "test ${1:name} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "test",
      "matches": {
        "test": true
      }
    },
    "ee91b868-daed-3c9d-8efb-eb6864231de7": {
      "content": "foreach ${1:x} {${2:#list}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "ee933ce2-9b47-32a1-8bc4-8f64f40b18ad": {
      "content": "${1:obj}.add('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "add": true
      }
    },
    "ee949ec2-25bc-394c-be2a-895125ef22d2": {
      "content": "shininess(${0:shine});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "shininess": true
      }
    },
    "ee951f15-ebb2-3f4f-9f4d-89d65e82b415": {
      "content": "<ng-content select=\"${0:selector}\"></ng-content>",
      "doc": "Angular ng-content",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ng-content",
      "matches": {
        "a-ng-content": true,
        "angular ng-content": true
      }
    },
    "ee967404-e4b9-3357-906e-8b96690f69c5": {
      "content": "text-shadow: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tsh:n": true
      }
    },
    "ee98ebde-f6e1-39e6-9a82-fea964c705ef": {
      "content": "${1:FIELDNAME} = serializers.StringRelatedField(${2})",
      "doc": "Django-rest Serializers ``StringRelatedField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF StringRelatedField",
      "matches": {
        "ssr": true
      }
    },
    "ee9e3524-e991-34a0-b518-9b7e08dd91a1": {
      "content": "(fun ${1:x} -> ${2:TARGET})",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "(fun x -> ...)",
      "matches": {
        "fun": true
      }
    },
    "eea87d4d-7382-33f8-ba18-582ad7301766": {
      "content": "{% module ${0:expression} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "module": true
      }
    },
    "eeb12b40-e0d8-3b40-816b-75934e5129c1": {
      "content": "while ${1:test}\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "while loop",
      "matches": {
        "while": true
      }
    },
    "eeb6781c-f8fb-31f2-bd5e-06b86b498acd": {
      "content": "[${1} for ${2} in ${3:${VISUAL}}]${0}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "list comprehension",
      "matches": {
        "lcp": true
      }
    },
    "eeb7072e-8522-355e-8c70-c5e39a2b1810": {
      "content": "head () {\n\treturn {\n\t\ttitle: ${1:'Page Title'},\n\t\tmeta: [\n\t\t\t// hid is used as unique identifier. Do not use `vmid` for it as it will not work\n\t\t\t{ hid: 'description', name: 'description', content: ${2:'My custom description'} }\n\t\t]\n\t}\n},",
      "doc": "Nuxt Head",
      "filetype": "nuxt-script",
      "grammar": "lsp",
      "label": "Nuxt Head",
      "matches": {
        "nhead": true
      }
    },
    "eec2ba7d-ffe2-35d7-b722-55e413ae630e": {
      "content": "__asm__ __volatile__(\n\"${0}\\n\\t\"\n:\n:\n);",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm": true
      }
    },
    "eec808cb-663a-38fa-b2fc-fa3e8e0c5c6f": {
      "content": "date:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      }
    },
    "eec85116-5eeb-3798-8720-d5563b070fa0": {
      "content": "LOGGER.error(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "le": true
      }
    },
    "eec8b32b-b834-34e3-a16e-f5ccea88d24c": {
      "content": "overflow-x scroll",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx:s": true
      }
    },
    "eecad776-b458-3483-9aca-67186f10a83f": {
      "content": "module ${1:modulename}\n\t${0}\nend module $1",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mod": true
      }
    },
    "eecc8731-0ba0-33b8-ab16-a2fc69260ec6": {
      "content": "leave-to-class='$1'$0",
      "doc": "leave-to-class=''. Expects: string.",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "leave-to-class",
      "matches": {
        "leaveToClass": true
      }
    },
    "eecee524-6ae5-3ef9-b5eb-ebcc67e2e613": {
      "content": "${1:function_name}() {\n\t${0:# function_body}\n}",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "eed24bc9-efb4-3797-b97a-c702eb62911e": {
      "content": "${1:ModelName}::model()->findBySql(${2:sql}, array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindbs": true
      }
    },
    "eed3ccdf-0c8b-31a6-99f0-47989e88a63b": {
      "content": "after_validation_on_update $0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "after_validation_on_update",
      "matches": {
        "aftvou": true
      }
    },
    "eed54377-460f-32d3-a704-8a75d7fbe070": {
      "content": "${1:obj}.scroll (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scroll": true
      }
    },
    "eee37d57-9e79-3f37-85fc-13c4c22a6d8b": {
      "content": "@while ($1)\n\t${2:${VISUAL}}\n@endwhile",
      "doc": "",
      "filetype": "blade",
      "grammar": "snu",
      "label": "@while directive",
      "matches": {
        "wh": true
      }
    },
    "eeec86df-dbd9-3614-bbc6-eef1fc54a1c4": {
      "content": "function* (${1:arguments}) {\n\t${0}\n}",
      "doc": "generator function (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "generator-function-es6-",
      "matches": {
        "base function generator": true
      }
    },
    "eeed7ab4-01d7-381e-b652-8f1c77d3920d": {
      "content": "font-stretch: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:n": true
      }
    },
    "eeed90e7-aee9-38b0-9064-e27e5d1ab25c": {
      "content": "#+BEGIN_EXPORT latex\n$0\n#+END_EXPORT",
      "doc": "#+BEGIN_EXPORT latex block",
      "filetype": "org",
      "grammar": "lsp",
      "label": "export latex",
      "matches": {
        "<l": true
      }
    },
    "eef09ccd-9db0-3ee9-a31a-4215aae20cb2": {
      "content": "margin-right: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mr": true
      }
    },
    "eefabff9-f482-355f-9bc0-c6e777a28b9d": {
      "content": "bottom auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b:a": true
      }
    },
    "eefec4e9-f0cd-3945-acb3-c34de4853961": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4}= ${0}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      }
    },
    "ef02fd73-6c8b-340a-a593-55eb64893221": {
      "content": "place-self center",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps:c": true
      }
    },
    "ef08bdbb-b7e0-37ca-ad7a-48ffc50b8842": {
      "content": "Belt.Int.toString(${1:10})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Belt. toString",
      "matches": {
        "bts": true,
        "btstr": true
      }
    },
    "ef090acd-b8c1-3258-90a4-2e2474cf03e9": {
      "content": "PropTypes.arrayOf($0)",
      "doc": "An array of a certain type",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "propTypeArrayOf",
      "matches": {
        "ptao": true
      }
    },
    "ef0a11ac-ad09-3fbe-b73d-45ca8b51db5c": {
      "content": "${1:#:name}()\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "func": true,
        "function": true
      }
    },
    "ef0bb8b4-8b05-3230-bb55-16ea4a246ec7": {
      "content": "${1:FIELDNAME} = serializers.HiddenField(${2})",
      "doc": "Django-rest Serializers ``HiddenField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF HiddenField",
      "matches": {
        "shidden": true
      }
    },
    "ef0f7524-28ca-387e-9f7c-63f525e86e42": {
      "content": "fmt\"${0:#:TARGET}\"",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fmt": true
      }
    },
    "ef0fd32f-9556-314d-8a93-5941c2bede51": {
      "content": "subtest '${1: test_name}' => sub {\n\t${2}\n};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subtest": true
      }
    },
    "ef143346-701b-385a-b363-1f8d63f6c5b0": {
      "content": "function concatenate(${1:string1},${2:string2})$0",
      "doc": "function concatenates the string1.. string2 into a single string result",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-CONCATENATE",
      "matches": {
        "function concatenate": true
      }
    },
    "ef19bc62-ddde-37bd-b4c2-acb4b1aa1ee7": {
      "content": "${1:obj}.mouseenter (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "menter": true
      }
    },
    "ef22a94f-78bc-3af4-815a-745e09915c2d": {
      "content": "$this->input->user_agent();${1}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_input-user_agent": true
      }
    },
    "ef23bda2-507a-35b0-8b3b-374626d35c05": {
      "content": "\\\\begin{${1:p/b/v/V/B/small}matrix}\n\t${0:${VISUAL}}\n\\\\end{$1matrix}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "smart matrix environment",
      "matches": {
        "mat": true
      }
    },
    "ef2d1ecc-69a4-34e0-8503-e71931b339b1": {
      "content": "<% ${1:} %>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "<%",
      "matches": {
        "<%": true
      }
    },
    "ef2d3adc-2e30-3f0b-b756-957f540f0d7a": {
      "content": "$scope.$emit '${1:eventName}', ${2:eventArgs}\n${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$e": true
      }
    },
    "ef321df7-8e72-3de0-a465-8020f321ef1d": {
      "content": "${1:void} ${2:function_name}(${3:Type} ${4:Parameter}, ${5:Type} ${6:Parameter}, ${7:Type} ${8:Parameter})\n{\n\t${9}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun3": true
      }
    },
    "ef351c72-0995-3cb6-8378-84f52aa4414b": {
      "content": "{% $1 %}",
      "doc": "tag autocomplete no oficial",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "tag",
      "matches": {
        "tag": true
      }
    },
    "ef354c34-5ab1-3a98-8498-5736d24322e8": {
      "content": "width: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "width: auto",
      "matches": {
        "wida": true
      }
    },
    "ef397dee-05d1-3029-bc6d-c023fcb7aba4": {
      "content": "string.lowercase()",
      "doc": "string.lowercase(message?: string | function): Schema\n\nTransforms the string value to lowercase. If strict() is set it\nwill only validate that the value is lowercase.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-lowercase",
      "matches": {
        "yup string lowercase": true
      }
    },
    "ef4d7069-f7a2-33f5-8dbc-46835c8ec41c": {
      "content": "<#if ${1:true}>\n\t${0:${VISUAL}}\n<#else>\n\t${2}\n</#if>",
      "doc": "",
      "filetype": "freemarker",
      "grammar": "snu",
      "label": "<#if condition>...<#else>...</#if>",
      "matches": {
        "ife": true
      }
    },
    "ef5e1d08-146d-30de-9501-4d509d01dcaf": {
      "content": "${1:ModelName}::model()->findByPk(${2:pk}, ${3:condition}, array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindbp": true
      }
    },
    "ef600e6d-cb12-3037-b058-8d65ded54562": {
      "content": "created () {\n\t${0};\n},",
      "doc": "created lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-created",
      "matches": {
        "vcreated": true,
        "vue lifecycle created": true
      }
    },
    "ef632aa7-b57f-3100-acd7-3d544702240b": {
      "content": "const ${1:name} = {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "const object",
      "matches": {
        "co": true
      }
    },
    "ef6b49a9-198a-393d-931f-7093ed926757": {
      "content": "<% unless ${1:falsevalue} %>\n  $2\n<% else %>\n  $3\n<% end %>",
      "doc": "unless .. end",
      "filetype": "erb",
      "grammar": "lsp",
      "label": "unlesse",
      "matches": {
        "unlesse": true
      }
    },
    "ef6d9c21-461b-392b-8874-6eeb2a2bc028": {
      "content": "```{${1|language,awk,bash,coffee,gawk,groovy,haskell,lein,mysql,node,octave,perl,psql,Rscript,ruby,sas,scala,sed,sh,stata,zsh,asis,asy,block,block2,bslib,c,cat,cc,comment,css,dot,embed,fortran,fortran95,go,highlight,js,julia,python,R,Rcpp,sass,scss,sql\\, connection=db,stan\\, output.var=\"stanmodel\",targets,tikz,verbatim,exec\\, command=\"\"|}}\n${TM_SELECTED_TEXT}$0\n```",
      "doc": "Insert code chunk",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert code chunk",
      "matches": {
        "code chunk": true
      }
    },
    "ef71729c-c3f5-327a-b568-902e14782c7d": {
      "content": "t.integer :lock_version, null: false, default: 0\n${0}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tcl": true
      }
    },
    "ef74158b-ca08-388e-9ee0-a68ec771cbe9": {
      "content": "float random2d(vec2 coord){\n\treturn fract(sin(dot(coord.xy, vec2(12.9898, 78.233))) * 43758.5453);\n}",
      "doc": "random 2d function",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "random2d",
      "matches": {
        "random2d": true
      }
    },
    "ef769334-5226-351b-85a6-af498573e064": {
      "content": "rename_column :${1:table_name}, :${2:old_column_name}, :${0:new_column_name}",
      "doc": "Migration rename column",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Migration rename column",
      "matches": {
        "mrnc": true
      }
    },
    "ef80b93d-0963-3498-950f-efa287eadb2a": {
      "content": "static if(${1}) {\n\t${2}\n} else static if(${3}) {\n\t${4}\n} else {\n\t${5}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sifee": true
      }
    },
    "ef962255-2e6f-3e1b-a1f3-f934741e705f": {
      "content": "{% default %}\n\t${0}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig switch default",
      "matches": {
        "default": true
      }
    },
    "ef99a017-d24c-35fc-8803-d7e332acada3": {
      "content": "UPDATE ${1:tableName}\n\tSET ${2:attribute(s)}\n\tWHERE ${3:condition};",
      "doc": "Update table",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "updatet",
      "matches": {
        "updatet": true
      }
    },
    "ef9c6c2c-0383-342a-a7db-3b5721c96b30": {
      "content": "def ${1:method_name}${2:(${3:*args})}\n\t$0\nend",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "def <name>...",
      "matches": {
        "\"\\b(de)?f\"": true
      }
    },
    "ef9f81cd-474d-37a4-960b-5725d6c20a8e": {
      "content": "for (${1:i} <- ${2:0} to ${3:obj}.length) {\n\t${0}\n}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fori": true
      }
    },
    "efa043bd-f646-3d12-9948-639d05520c9f": {
      "content": "func init() {\n\t$1\n}",
      "doc": "Snippet for init function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "init function",
      "matches": {
        "finit": true
      }
    },
    "efa19eeb-8b04-31aa-a4d5-b658562370ad": {
      "content": "else {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "else {}",
      "matches": {
        "else": true
      }
    },
    "efa2a5c0-94a8-3996-884b-6a3aa9b9c497": {
      "content": "export default class ${1:ClassName} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t${2}\n\t\t\t</>\n\t\t);\n\t};\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ercla": true
      }
    },
    "efa375c9-6a1c-3de8-888a-6906dba9cf96": {
      "content": "(${1:args}) =>\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bfun": true
      }
    },
    "efa5f795-0417-328c-9def-8c85c3d625e4": {
      "content": "System.err.print(\"${0:Message}\");",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "err": true
      }
    },
    "efa7e947-9dd9-3858-9a51-d2cd01f62907": {
      "content": "border-right-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdri:n": true
      }
    },
    "efa90950-a3fe-3d86-97f0-d834c528fc9d": {
      "content": "frameRate(${1:30});\n${0}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "frameRate": true
      }
    },
    "efabbba7-bdbf-340c-b569-066d69ed2efa": {
      "content": "mdply(${1:matrix}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md": true
      }
    },
    "efad744f-2cf0-36c5-91e3-60fd170e1b04": {
      "content": "#ifndef ${1:DEBUG}\n$0\n#endif // !$1",
      "doc": "Code snippet for #ifndef",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "#ifndef",
      "matches": {
        "#ifndef": true
      }
    },
    "efadebfa-da62-3f29-a77e-f6d2726ff9d2": {
      "content": "console.trace(${1:object});",
      "doc": "Prints a stack trace from the point where the method was called",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTrace",
      "matches": {
        "ctr": true
      }
    },
    "efaffcd7-f82c-3aaa-a4cc-303ce24e9531": {
      "content": "#!/usr/bin/env ruby -wKU",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rb": true
      }
    },
    "efb2a301-0227-3b9b-aff2-0572f9fcd7b5": {
      "content": "func Test${1:Function}(t *testing.T) {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func TestXYZ(t *testing.T) { ... }",
      "matches": {
        "test": true
      }
    },
    "efb76491-366b-30b1-8671-090165ff6cf7": {
      "content": "justify-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "justify-content: flex-end",
      "matches": {
        "jcfe": true
      }
    },
    "efbd045a-0fea-3b8f-ad2b-4daac4c84fec": {
      "content": "else {\n    ${1:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "else {...}",
      "matches": {
        "else": true
      }
    },
    "efbdf541-ae3d-3c81-ae2f-a49e7eff6e5e": {
      "content": "{%- if ${1:condition} -%}\n\t$2\n{%- endif -%}",
      "doc": "Control flow tag: if, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag if, whitespaced",
      "matches": {
        "if-": true
      }
    },
    "efcb2f80-6cc3-3e77-8199-7a740e19eb02": {
      "content": "align-content: space-evenly",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:se": true
      }
    },
    "efcbec7c-7a10-37c2-bf68-0591acbf01d3": {
      "content": "public:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "public (pub)",
      "matches": {
        "pub": true
      }
    },
    "efcd34af-2c6c-3811-a3c5-dfd4178f5e7b": {
      "content": "for [${1:str} in '${2:#:string list}']",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "for [string in \"A B C...\"]",
      "matches": {
        "fors": true
      }
    },
    "efd1f9a7-96c3-3d02-81c0-54a1e5c6cf6f": {
      "content": "if ${1:condition} then ${2:value} else ${3:other}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Ternary if",
      "matches": {
        "ifte": true
      }
    },
    "efd74095-cd5e-3535-aa63-c8e871bd36f4": {
      "content": "cursor: url($1);$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "cursor: url (cursor)",
      "matches": {
        "cursor": true
      }
    },
    "efdb1e04-3e82-3e43-be97-39383adbc7d8": {
      "content": "static getDerivedStateFromProps(props, state) {${1:first}}",
      "doc": "Invoked right before calling the render method, both on the initial mount and on subsequent updates.",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "getDerivedStateFromProps",
      "matches": {
        "gdsfp": true
      }
    },
    "efdb93ad-f9bb-3d09-9d21-3e4c001c82a7": {
      "content": "validates :${0:attribute}, presence: true",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vp": true
      }
    },
    "efdbd912-0add-370d-a3a3-a9aa07e973d7": {
      "content": "lapply(${1:list}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sapply": true
      }
    },
    "efdfcd96-c396-3bca-92f8-f077877ad984": {
      "content": "number.negative()",
      "doc": "number.negative(message?: string | function): Schema\n\nValue must be a negative number.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-negative",
      "matches": {
        "yup number negative": true
      }
    },
    "efe0a9a5-6adf-3bb4-8a61-c48f32a2a106": {
      "content": "unittest\n{\n\t$1\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "unittest (unittest)",
      "matches": {
        "unittest": true
      }
    },
    "efe7133e-65ab-3640-8688-a8b87291b357": {
      "content": "_.toLower(${string})",
      "doc": "_.toLower('--Foo-Bar--');\n// => '--foo-bar--'\n\n_.toLower('fooBar');\n// => 'foobar'\n\n_.toLower('__FOO_BAR__');\n// => '__foo_bar__'\n\nConverts `string`, as a whole, to lower case just like\n[String#toLowerCase](https://mdn.io/toLowerCase).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-tolower",
      "matches": {
        "lodash tolower": true
      }
    },
    "efea5997-8c25-38a2-aaa9-3b043efba078": {
      "content": "PropTypes.any,",
      "doc": "Any prop type",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeAny",
      "matches": {
        "ptan": true
      }
    },
    "efed2473-c854-32b9-8f30-fe2338306a36": {
      "content": "module.exports = {\n\tcss: {\n\t\tloaderOptions: {\n\t\t\t${1:sass}: {\n\t\t\t\tdata: `${2:@import '@/styles/_variables.scss';}`\n\t\t\t}\n\t\t}\n\t}\n}",
      "doc": "vue.config.js",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue.config.js Import",
      "matches": {
        "vconfig": true
      }
    },
    "eff2ceec-e306-307a-ac17-18ce159e7463": {
      "content": "page-break-before left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:l": true
      }
    },
    "effe6eac-f235-3fbc-8ffd-c96265413e26": {
      "content": "{{ ${1} }}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      }
    },
    "f007093e-0af0-31c6-bc94-5fe3892228ae": {
      "content": "position: relative;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "position relative",
      "matches": {
        "posr": true
      }
    },
    "f0096977-b090-34f1-94dd-b2dc5bb4c014": {
      "content": "change_table :${1:table_name} do |t|\n\t${0}\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mcht": true
      }
    },
    "f009c033-8fb4-3e44-b522-72b4bf099aef": {
      "content": "function year-to-yyyy(${1:yy},${2:[yy-cutoff, default: 50},${3:yy-execution-time, default: now})$0",
      "doc": "convert yy to yyyy with optional yy-cutoff to delineate centuries",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-year-to-yyyy",
      "matches": {
        "function year-to-yyyy": true
      }
    },
    "f00c5b43-8ec7-30ba-a104-54181b66e6f6": {
      "content": "dictsortreversed:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dictsortrev": true
      }
    },
    "f0125856-8bf6-390a-86e1-05a0009f53e4": {
      "content": "\\\\begin{equation*}\n\t${0:${VISUAL}}\n\\\\end{equation*}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "unnumbered equation environment",
      "matches": {
        "eq*": true
      }
    },
    "f013dabc-1779-3e39-81b6-d14db2c26a78": {
      "content": "static if(${1:cond}) {\n\t${2}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sif": true
      }
    },
    "f0200340-ff31-3210-942f-3d34193e24eb": {
      "content": "if(${1:true}) ${0};",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifi": true
      }
    },
    "f02d2baa-5370-38c5-be2d-9bc1b9a08f55": {
      "content": "foreach(${1:mixed} ${2:ele} in ${3:arr})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "f02d48e2-ebba-3f7e-b60a-bd4c9fd8e188": {
      "content": "\\\\usepackage[${1:options}]{${2:package}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\usepackage",
      "matches": {
        "up": true
      }
    },
    "f03b34f3-e764-3ad9-91d1-e7985f53d8fe": {
      "content": "<${1:}>\n\t${2}\n</$1>",
      "doc": "",
      "filetype": "xml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "t": true
      }
    },
    "f03b56c9-dcc8-3c22-88e8-ebbefaf71ded": {
      "content": "type(${1}), dimension(${2::}), allcatable :: ${3}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "type dimension",
      "matches": {
        "tyd": true
      }
    },
    "f03caa9c-868c-38c2-8fd2-2a386233b9ef": {
      "content": "{% if ${1:condition} %}\n\t${2}\n{% else %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifelse": true
      }
    },
    "f03e191c-16e8-3908-ab89-3e2bf3574b1c": {
      "content": "local ${1:x} = ${0:1}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "local": true
      }
    },
    "f03e6584-357a-3705-8986-550859eb7026": {
      "content": "if $1 then\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "if statement",
      "matches": {
        "if": true
      }
    },
    "f03e9944-3cd8-360f-bf17-3dc82f14887a": {
      "content": "Js.info(${1:something})",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "console.info",
      "matches": {
        "ci": true,
        "coi": true
      }
    },
    "f04f1dce-f90a-3679-a8a5-bdd5968f038e": {
      "content": "height: ${1},",
      "doc": "height",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "height",
      "matches": {
        "h": true
      }
    },
    "f055c3d5-fc5b-345e-827d-153404004156": {
      "content": "var ${1:function_name} = function $1(${2}) {\n\t${0:${VISUAL}}\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "vf": true
      }
    },
    "f0595755-65e2-3a40-bff8-4139d54a8529": {
      "content": "${1:ModelName}::model()->findAllByAttributes(array('${2:attributeName}'=>${3:attributeValue}), ${4:condition}, array('${5:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfindaba": true
      }
    },
    "f05f0b3d-d06f-3fed-80b4-1b150276d020": {
      "content": "MessageBox.Show(\"${1:message}\");",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "Message box",
      "matches": {
        "mbox": true
      }
    },
    "f06171cd-5fd6-3470-a853-21b82b59ee76": {
      "content": "marker-offset: ${1:10px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "marker-offset: length (marker)",
      "matches": {
        "marker": true
      }
    },
    "f0638651-ce6d-3ade-8e00-71f8d27bde9a": {
      "content": "![${1:id}]: ${2:url}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "![:": true
      }
    },
    "f066ace1-d597-3728-9abc-fb4e466da1ab": {
      "content": "content: '$0';",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "content",
      "matches": {
        "con": true
      }
    },
    "f06c288b-532b-3c26-82dd-c9f006f37875": {
      "content": "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "shouldComponentUpdate",
      "matches": {
        "scu": true
      }
    },
    "f07baa74-36d7-3c30-83c2-654412c5a6cd": {
      "content": "expect(${1:list}).toContain($0);",
      "doc": "expects the list contains the item (===)",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tocontain",
      "matches": {
        "jest expect tocontain": true,
        "tc": true
      }
    },
    "f07d5f81-b13c-3cd1-9d48-c3edf70c7297": {
      "content": "word-wrap normal",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wow:n": true
      }
    },
    "f07df4ce-39a0-3928-a1bc-99447e933d38": {
      "content": "${1:void} ${2:function_name}(${3})\n{\n\t${4}\n}",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fnc": true
      }
    },
    "f07ef61d-3c0b-3421-b418-afa268ac9486": {
      "content": "min { |a, b| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "min": true
      }
    },
    "f080f967-b7a9-3557-a673-8a24f79a6a85": {
      "content": "// https://eips.ethereum.org/EIPS/eip-2018\r\n// https://github.com/IoBuilders/clearable-token (example)\r\n// SPDX-License-Identifier: MIT\r\n/*\r\nIn banking and finance, clearing denotes all activities from the time a commitment is made for a transaction until it is settled\r\n\r\nThe clearing process turns the promise of a transfer into the actual movement of money from one account to another.\r\nA clearing agent decides if the transfer can be executed or not.\r\nThe amount which should be transferred is not deducted from the balance of the payer, but neither is it available for another transfer and therefore ensures,\r\nthat the execution of the transfer will be successful when it is executed.\r\n*/\r\npragma solidity >=0.5.0 <0.8.0;\r\n\r\ninterface ClearableToken /* is ERC-1996 */ {\r\n    enum ClearableTransferStatusCode { Nonexistent, Ordered, InProcess, Executed, Rejected, Cancelled }\r\n\r\n    function orderTransfer(string calldata operationId, address to, uint256 value) external returns (bool);\r\n    function orderTransferFrom(string calldata operationId, address from, address to, uint256 value) external returns (bool);\r\n    function cancelTransfer(string calldata operationId) external returns (bool);\r\n    function processClearableTransfer(string calldata operationId) external returns (bool);\r\n    function executeClearableTransfer(string calldata operationId) external returns (bool);\r\n    function rejectClearableTransfer(string calldata operationId, string calldata reason) external returns (bool);\r\n    function retrieveClearableTransferData(string calldata operationId) external view returns (address from, address to,\r\n                                                uint256 value, ClearableTransferStatusCode status);\r\n\r\n    function authorizeClearableTransferOperator(address operator) external returns (bool);\r\n    function revokeClearableTransferOperator(address operator) external returns (bool);\r\n    function isClearableTransferOperatorFor(address operator, address from) external view returns (bool);\r\n\r\n    event ClearableTransferOrdered(address indexed orderer, string operationId, address indexed from, address indexed to, uint256 value);\r\n    event ClearableTransferInProcess(address indexed orderer, string operationId);\r\n    event ClearableTransferExecuted(address indexed orderer, string operationId);\r\n    event ClearableTransferRejected(address indexed orderer, string operationId, string reason);\r\n    event ClearableTransferCancelled(address indexed orderer, string operationId);\r\n    event AuthorizedClearableTransferOperator(address indexed operator, address indexed account);\r\n    event RevokedClearableTransferOperator(address indexed operator, address indexed account);\r\n}",
      "doc": "Draft: EIP-2018: The clearing process turns the promise of a transfer into the actual movement of money from one account to another. A clearing agent decides if the transfer can be executed or not. The amount which should be transferred is not deducted from the balance of the payer, but neither is it available for another transfer and therefore ensures, that the execution of the transfer will be successful when it is executed.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc2018i",
      "matches": {
        "erc2018i-draft": true
      }
    },
    "f082607e-f66c-3b32-bc5d-9a0b1a5eab5d": {
      "content": "change_column :${1:table_name}, :${2:old_column_name}, :${0:data_type}",
      "doc": "Migration  change column",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Migration change column",
      "matches": {
        "mcc": true
      }
    },
    "f083351d-eb53-302e-ade1-feefd3da23a5": {
      "content": "import Application from '@ember/application';\n\nexport default Application.extend({\n\t${0://Properties here...}\n});",
      "doc": "",
      "filetype": "javascript-ember",
      "grammar": "snu",
      "label": "App.Name = Ember.Application.create({});",
      "matches": {
        "eapp": true
      }
    },
    "f0839495-900c-3603-85a1-b19333c4ee59": {
      "content": "else {\n\t$0\n}",
      "doc": "Snippet for else branch",
      "filetype": "go",
      "grammar": "lsp",
      "label": "else branch",
      "matches": {
        "el": true
      }
    },
    "f08d2717-77f8-3e1e-9b21-6dc2a82c6a27": {
      "content": "func Example$1() {\n\t$2\n\t//Output:\n\t$3\n}",
      "doc": "Snippet for Example function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "example function",
      "matches": {
        "ef": true
      }
    },
    "f090adb0-88a9-32b6-bd48-079e5e8caca8": {
      "content": ".PHONY: clean, mrproper\nCC = gcc\nCFLAGS = -g -Wall\n\nall: $1\n\n%.o: %.c\n\t$(CC) $(CFLAGS) -c -o $@ $<\n\n${1:out}: $1.o\n\t$(CC) $(CFLAGS) -o $@ $+\n\nclean:\n\trm -f *.o core.*\n\nmrproper: clean\n\trm -f $1",
      "doc": "",
      "filetype": "make",
      "grammar": "snu",
      "label": "",
      "matches": {
        "base": true
      }
    },
    "f09337bc-fc64-3e3c-bc1c-d68870c63201": {
      "content": "{%- capture ${1:variable} -%}${0}{%- endcapture -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "capture-": true
      }
    },
    "f09f00d1-05ae-3854-a4a5-02faf1282a4b": {
      "content": "outline-offset ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "oo": true
      }
    },
    "f0b1de39-17a4-3dd6-8ce0-cbe36bb057c3": {
      "content": "expect(${1:target}).toBeDefined()",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "expect to be defined (coffee)",
      "matches": {
        "ed": true
      }
    },
    "f0b4adbd-c9c5-3cd3-a4a6-71bea40132b3": {
      "content": "<example>${0:#:description}</example>",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "<example></example>",
      "matches": {
        "example": true
      }
    },
    "f0b97d85-4795-3e0d-b710-990f7d63bdbc": {
      "content": "waits($1);",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "waits (js)",
      "matches": {
        "wa": true
      }
    },
    "f0ba62e7-bc55-3658-9a23-2bbd8257bae3": {
      "content": "eval {\n\t${1:TARGET}\n};\nif ($@) {\n\t${2:#:handle failure...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eval": true
      }
    },
    "f0bcae4e-de40-315a-8a34-8345a74adb28": {
      "content": "{%- unless ${1:condition} -%}\n\t$2\n{%- endunless -%}",
      "doc": "Control flow tag: unless, whitespaced",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag unless, whitespaced",
      "matches": {
        "unless-": true
      }
    },
    "f0c8b207-ba5f-371b-82de-1f88dda0ef09": {
      "content": "t.text :${1:title}\nt.$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "t.text (tct)",
      "matches": {
        "t.": true
      }
    },
    "f0ce4b9c-e24b-33e2-9527-1b0d7a374a13": {
      "content": "protected string ${1:}(${2:})\n{\n\t${0:return \"\";}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ms|": true
      }
    },
    "f0d05cab-4f95-3ef3-a1a3-c8d6af916347": {
      "content": "module.exports = ${1:name}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module.exports",
      "matches": {
        "me": true
      }
    },
    "f0d5d02e-991e-3184-966b-65e9c58883c4": {
      "content": "dbg!(&${1});\n${0}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "dbg! debugging macro statement",
      "matches": {
        "d;": true
      }
    },
    "f0d635ad-c40e-3834-82e1-6fa509b98778": {
      "content": "File.join(File.dirname(__FILE__), *['${1:rel path here}'])",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fpath": true
      }
    },
    "f0e13940-90ae-309e-a852-4bd53aec1050": {
      "content": "font-stretch: semi-expanded;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:se": true
      }
    },
    "f0e1a143-4c0d-3cfa-a203-57561274cb76": {
      "content": "list-style-type: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:n": true
      }
    },
    "f0e1eed6-4dc1-3904-92be-19b2a6610dc9": {
      "content": "File.read(${1:'path/to/file'})",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "File.read()",
      "matches": {
        "file": true
      }
    },
    "f0f01830-db28-3f10-bf93-9d321c94d625": {
      "content": "left: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "l:a": true
      }
    },
    "f0f809e7-21c4-3f85-9204-c6d6800384ac": {
      "content": "[| ${0:TARGET} |]",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "array literal [| |]",
      "matches": {
        "arl": true
      }
    },
    "f0fb41d4-f639-38e5-af70-4efb4da85a2a": {
      "content": "directive '${1:directiveName}', factory = (${2:injectables}) ->\n\tdirectiveDefinitionObject =\n\t\t${3:directiveAttrs}\n\t\tcompile: compile = (tElement, tAttrs, transclude) ->\n\t\t\t(scope, element, attrs) ->\n\tdirectiveDefinitionObject",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdc": true
      }
    },
    "f0fb7e66-c23a-384f-8ab7-3c9aa441f810": {
      "content": "<fieldset>${1:TARGET}</fieldset>${2}",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fieldset": true
      }
    },
    "f0fec589-eab8-3d76-bf5b-0e4f5b5bb324": {
      "content": "package:\n\t${1:/*members*/}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "package (pack)",
      "matches": {
        "pack": true
      }
    },
    "f100ad74-49fb-3699-a022-26b6eabdc8b1": {
      "content": "<xsl:when test=\"${1:test}\">${0}\n</xsl:when>",
      "doc": "",
      "filetype": "xslt",
      "grammar": "snu",
      "label": "",
      "matches": {
        "when": true
      }
    },
    "f10912c9-84b4-3c55-ba78-7a71c3e4091d": {
      "content": "always_comb begin ${1:: statement_label}\n\t${0}\nend $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alc": true
      }
    },
    "f11104d9-e5d8-3ff9-9f20-e7d00710dd45": {
      "content": "while ${1:true} do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "f1127d06-4e67-3c3b-b184-347811cd61f2": {
      "content": "${1:fn} : ${2:a} -> ${3:a} -> ${4:a}\n$1 ${5} =\n\t${0}",
      "doc": "",
      "filetype": "idris",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn2": true
      }
    },
    "f1199af1-21be-34ab-ad61-3df522812ee0": {
      "content": "info(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "info": true
      }
    },
    "f11ad94b-e089-3fe8-b4c2-cc8f81e122be": {
      "content": "<%# $1 %> $2",
      "doc": "EJS comment tag with no output",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Comment",
      "matches": {
        "ejscom": true
      }
    },
    "f1212179-c517-3b4f-a007-f81295d08f2e": {
      "content": "(defproject ${1:aaa} \"0.1-SNAPSHOT\"\n  :description \"FIXME: write description\"\n  :url \"https://github.com/${2}\"\n  :license {:name \"GNU GPL v3+\"\n            :url \"http://www.gnu.org/licenses/gpl-3.0.en.html\"}\n  :dependencies [[org.clojure/clojure \"1.7.0\"]]\n  :main ^:skip-aot ${3:aaa.core}\n  :target-path \"target/%s\"\n  :min-lein-version \"2.3.0\")",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defproejct": true
      }
    },
    "f121690a-e575-3ccc-a146-5ae77e3a0fc3": {
      "content": "if ${1:condition}; then\n\t${2:${VISUAL}}\nelse\n\t${0:# statements}\nfi",
      "doc": "",
      "filetype": "zsh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "f123085c-1633-3870-9463-b5b277181a94": {
      "content": "proc ${1:#:name}(${2}) =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proc": true
      }
    },
    "f128d1a2-8f1d-3fea-b0b7-06cc0c5f8700": {
      "content": "const ${1:name} = ref(${2:initialValue})",
      "doc": "Takes an inner value and returns a reactive and mutable ref object.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v3ref",
      "matches": {
        "vue v3ref": true
      }
    },
    "f1305c61-95fc-3459-a8b7-550320f09a2b": {
      "content": "| ${1} -> ${0}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "|": true
      }
    },
    "f141faf9-84f9-3d4e-84ae-77885fd46231": {
      "content": "console.timeEnd(${1:object});",
      "doc": "Sets end point for execution time measurement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "consoletimeend",
      "matches": {
        "base console time end": true
      }
    },
    "f14897ba-ff39-36c1-a35e-3dd118d618bc": {
      "content": "int ${2:y} = threadIdx.y + blockIdx.y * blockDim.y;\nint ${3:z} = threadIdx.z + blockIdx.z * blockDim.z;",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Get current Y,Z index (2D)",
      "matches": {
        "iyz": true
      }
    },
    "f14b5dfe-591e-34b1-9065-e6d639031b6e": {
      "content": "place-content: ${1} ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc+": true
      }
    },
    "f1579712-c344-34fa-a61f-f61e1bf15f00": {
      "content": "| markdownify }}",
      "doc": "String filter: markdownify",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter markdownify",
      "matches": {
        "markdown": true
      }
    },
    "f15a03e0-977f-35a9-8448-f7eb507e2239": {
      "content": "\\begin{frame}{${1:#:frametitle}}\n\t${2:TARGET}\n\\end{frame}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{frame} \\frame": true,
        "frame": true
      }
    },
    "f15be1b3-5802-3c68-9ed0-9a03821da74b": {
      "content": "begin\n\tfail 'A test exception.'\nrescue StandardError => e\n\tputs e.message\n\tputs e.backtrace.inspect\nelse\n\t# other exception\nensure\n\t# always executed\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "begin": true
      }
    },
    "f15dda8d-9112-3589-99c7-ae669303aa22": {
      "content": "ddply(${1:frame}, ${2:variables}, ${0:function})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dd": true
      }
    },
    "f164e7b2-3c7a-30ea-9b67-131b0fa616f2": {
      "content": "${1|this,vm|}.\\$options$2",
      "doc": "Type: Object. Read only.",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "vm.$options",
      "matches": {
        "vmOptions": true
      }
    },
    "f16d5274-2624-30d6-a90c-c01aacd7dd1e": {
      "content": "<thead>\n$1\n</thead>",
      "doc": "HTML - Defines a table head",
      "filetype": "html",
      "grammar": "lsp",
      "label": "thead",
      "matches": {
        "thead": true
      }
    },
    "f1721a87-55ed-3c88-b96d-c7cd6dc84817": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style scoped>\n\n</style>",
      "doc": "Base for Vue File with CSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with Css",
      "matches": {
        "vbase-css": true
      }
    },
    "f1761fd3-5db2-3ff4-8085-4837b4978cde": {
      "content": ".. danger::\n\t${0:ah!}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dan:": true
      }
    },
    "f180e1dc-352e-3c65-95e8-0e3575e7ee87": {
      "content": "content: attr(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:a": true
      }
    },
    "f18343c3-6a5c-3c4b-a7ad-0218b77371b1": {
      "content": "std::cout << ${1} << std::endl;",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cout": true
      }
    },
    "f184368c-a5f5-3442-85db-178a48c02b2b": {
      "content": "${1:FIELDNAME} = serializers.FileField(${2})",
      "doc": "Django-rest Serializers ``FileField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF FileField",
      "matches": {
        "sfile": true
      }
    },
    "f18528cb-f0cf-35d0-8ec4-4a15887ee6a3": {
      "content": "border-image: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:n": true
      }
    },
    "f18860b2-5809-3b01-aa8d-3f6bdff93b6c": {
      "content": "expect(${1:object}).to ${0}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "f18b392a-e73f-3bde-9693-3ee311876f4d": {
      "content": "&#x2192;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "right": true
      }
    },
    "f18d0600-25cd-3172-bef7-6e7616281b22": {
      "content": "$.isArray(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isarr": true
      }
    },
    "f1951079-6285-3ce4-b4cb-8f4c79712314": {
      "content": "test.each([${1:[1, 2], [2, 4]}])(\n\t'${2:double(%d)}',\n\t(${3:input, expected}) => {\n\t\t${0:expect(double(input)).toBe(expected);}\n\t}\n);",
      "doc": "creates an test block with different test data sets",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-test-each",
      "matches": {
        "jest test each": true,
        "teste": true
      }
    },
    "f196342a-ef03-3be3-9dcc-352b3c646f46": {
      "content": "${1:FIELDNAME} = serializers.FilePathField(path=${2})",
      "doc": "Django-rest Serializers ``FilePathField``",
      "filetype": "serializers",
      "grammar": "lsp",
      "label": "DRF FilePathField",
      "matches": {
        "sfilepath": true
      }
    },
    "f196869b-afdc-322f-976b-64901f36e777": {
      "content": "table-layout: fixed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tbl:f": true
      }
    },
    "f1a0c750-bf74-36a0-be90-1c4af3e9f854": {
      "content": "d3.scale.linear()\n  .domain(${1})\n  .range(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "scale": true
      }
    },
    "f1a4e975-aebc-3c26-b242-7d26526d4e22": {
      "content": "list-style-image: url(${1});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi": true
      }
    },
    "f1a69584-bf25-3a04-b193-fae696f6849b": {
      "content": "grid-auto-flow column",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gaf:c": true
      }
    },
    "f1a79b91-5e6f-3895-ac4b-574afe537d7d": {
      "content": "leave-to-class=\"$1\"$0",
      "doc": "leave-to-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "leave-to-class",
      "matches": {
        "leaveToClass": true
      }
    },
    "f1a839ad-da83-30bc-853a-28a16b0bde30": {
      "content": "#[derive(Debug)]\nstruct ${1:Name} {\n    ${2:field}: ${3:Type}\n}",
      "doc": "struct … { … }",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "struct",
      "matches": {
        "struct": true
      }
    },
    "f1a85835-aad5-3d4f-9fb6-55c04d61397e": {
      "content": "\\\\citet{${1}} ${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\citet",
      "matches": {
        "citet": true
      }
    },
    "f1a90e8b-4877-36d8-80df-ca35d6efe780": {
      "content": "get ${1:computedProperty} : ${2:String} {\n\t$0\n}",
      "doc": "Computed properties works like regular properties but instead of returning a constant value it can return different values base on the state and the properties.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Computed Properties",
      "matches": {
        "get": true
      }
    },
    "f1a9d796-9a1e-32bc-828b-74e4a9fc3145": {
      "content": "filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=${1:100});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "op:ie": true
      }
    },
    "f1a9fa36-8052-31bf-8e47-c9a957ee73a6": {
      "content": "import ${0:module}",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "imp": true
      }
    },
    "f1ab3ddd-51fc-3d4a-8834-3dd945e3305c": {
      "content": "this(${1:/*args*/})\n{\n\t${VISUAL}$2\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "ctor (this)",
      "matches": {
        "this": true
      }
    },
    "f1b0058b-a8fb-3087-bd4a-d4fd28de6db1": {
      "content": "$this->${1:method}()->shouldReturn(${2:'value'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldReturn('value')",
      "matches": {
        "sreturn": true
      }
    },
    "f1b0c5b2-cd72-3a62-af32-72854b8fe0e1": {
      "content": "until ($1) {\n\t${2:# body...}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "until",
      "matches": {
        "until": true
      }
    },
    "f1b4bb9d-26f8-30e8-9a06-226770a7bacb": {
      "content": "subset(${1:array}, ${0:offset});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "subset": true
      }
    },
    "f1ba3d58-ec0c-348f-9420-116de098deb4": {
      "content": "set(${1:x}, ${2:y}, ${0:color/image});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "pixel",
      "matches": {
        "set": true
      }
    },
    "f1bc21e6-d539-30e5-a1c2-d4632edb34fa": {
      "content": "switch ${1:object}\n\twhen ${2:value}\n\t\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "swi": true
      }
    },
    "f1bd0f8a-0d09-3b3f-9562-60c3a534d586": {
      "content": "if ${1:condition} do\n  $0\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "if .. do .. end",
      "matches": {
        "if": true
      }
    },
    "f1bddd57-4027-3520-9111-32f31757e48a": {
      "content": "join:\"${0}\"",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "join": true
      }
    },
    "f1be0eda-45d2-3175-a2c2-2f0a982393e1": {
      "content": "(${1:arguments}) => {\n\treturn ${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "arrow function with return",
      "matches": {
        "fr": true
      }
    },
    "f1c03128-8997-3421-aa3c-5cae0dfc6036": {
      "content": "Wait Until Element Is Enabled    ${1:${locator}}    ${2:${timeout=None}}    ${3:${error=None}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Wait Until Element Is Enabled",
      "matches": {
        "wueie": true
      }
    },
    "f1c4ba28-09fa-3cc4-89ed-5f424aeeffa4": {
      "content": "has_many :${0:object}",
      "doc": "has_many association",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Has many",
      "matches": {
        "hm": true
      }
    },
    "f1c7834a-3c24-34ba-84e3-64d66d6591cb": {
      "content": "if ${1:#:condition}\n  ${2:TARGET}\nelse\n  ${3}\nendif",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "if else endif",
      "matches": {
        "ifelse": true
      }
    },
    "f1c80f5b-f921-34bd-bfb9-64b43122b87f": {
      "content": "<% include $1 %> $2",
      "doc": "EJS include statement",
      "filetype": "ejs",
      "grammar": "lsp",
      "label": "EJS Include",
      "matches": {
        "ejsinc": true
      }
    },
    "f1cacfb4-6197-342a-9d16-40a860341537": {
      "content": "<noscript>\n\t${0}\n</noscript>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "noscript": true
      }
    },
    "f1cf8cb4-de60-3444-9019-4cd839725f3d": {
      "content": "SELECT ${1:attribute(s)}\n\tFROM ${2:tableName}\n\tORDER BY ${3:attribute(s)};",
      "doc": "Group by",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "groupb",
      "matches": {
        "groupb": true
      }
    },
    "f1d091ce-a4d2-333b-b909-41b865a7a78a": {
      "content": "/**\n * ${4:#:undocumented function}\n *\n * @return ${5:void}\n * @author ${6}\n **/\n${1}function ${2}(${3})\n{\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc_function": true
      }
    },
    "f1d19eb8-3881-3807-b2e8-eedb8461166b": {
      "content": "${1:Class}.prototype.${2:method} = function(${3:arguments}) {\n\t${0}\n};",
      "doc": "prototype method",
      "filetype": "base",
      "grammar": "lsp",
      "label": "prototype-method",
      "matches": {
        "base prototype method": true
      }
    },
    "f1e2767d-fbf2-3a02-a382-0f3e58259baf": {
      "content": "spyOn(${1:object}, \"${2:method}\")$0",
      "doc": "",
      "filetype": "coffee-jasmine",
      "grammar": "snu",
      "label": "spy on (coffee)",
      "matches": {
        "s": true
      }
    },
    "f1e66a11-e7b9-3c44-ba8c-8a9a0b1c6cfd": {
      "content": "\\textmd{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textmd": true,
        "textmd \\textmd{": true
      }
    },
    "f1e9ec35-6edb-37b2-906e-0e062ad311a7": {
      "content": "import { EntityMetadataMap } from '@ngrx/data';\n\nconst entityMetadata: EntityMetadataMap = {\n  ${1:Model1}: {},${0}\n};\n\nexport const entityConfig = {\n  entityMetadata\n};",
      "doc": "NgRx Data Entity Metadata",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrx-data-entity-metadata",
      "matches": {
        "a-ngrx-data-entity-metadata": true,
        "angular ng rx data entity metadata": true
      }
    },
    "f1eaac3d-e023-36c2-bb9a-c2f6f9c3823b": {
      "content": "| capitalize",
      "doc": "String filter: capitalize",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter capitalize",
      "matches": {
        "capitalize": true
      }
    },
    "f1f386b1-e04a-39ab-a93c-b7060b2df91f": {
      "content": "wilcox.test(${1:x}, ${0:y})",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wil": true
      }
    },
    "f1fb06ce-a30c-320b-9bd4-dcbf734c8007": {
      "content": "from django.contrib.postgres.fields import ${1|ArrayField,JSONField,HStoreField|}",
      "doc": "PostgreSQL specific model fields",
      "filetype": "models",
      "grammar": "lsp",
      "label": "ipostgresmf",
      "matches": {
        "ipostgresmf": true
      }
    },
    "f209f947-3557-3cfe-846b-2798e57167ba": {
      "content": "| size",
      "doc": "Array filter: size",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter size",
      "matches": {
        "size": true
      }
    },
    "f20aa07c-1117-39b1-9234-7604af499763": {
      "content": "{% include ${1:#:TARGET} %}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "include": true
      }
    },
    "f2129065-e120-3189-9413-650b7405ff05": {
      "content": "$this->${1:method}()->shouldHaveKey(${2:'key'});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldHaveKey('key')",
      "matches": {
        "skey": true
      }
    },
    "f22b0056-e788-3d53-84f3-fc41c3f0585a": {
      "content": "string ${1:item1} delimited by size\n       ${2:item2} delimited by size\n       into ${3:result}\nend-string\n$0",
      "doc": "string delimited by size",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "string",
      "matches": {
        "string": true
      }
    },
    "f23430a4-5456-30bd-8161-a23f508822eb": {
      "content": "text-emphasis: before",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:b": true
      }
    },
    "f23483cf-3772-3034-9500-4b3a7a97413c": {
      "content": "process (${1:all})\nbegin\n\t${2}\nend process;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pra": true
      }
    },
    "f238a767-e14a-33cf-b20a-2a17b714a31b": {
      "content": "<command type=\"radio\" radiogroup=\"${1}\" label=\"${2}\" icon=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "command:r": true
      }
    },
    "f23bbb38-fc9c-3887-bed3-00884de927a9": {
      "content": "@moduledoc \"\"\"\n$0\n\"\"\"",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "moduledoc",
      "matches": {
        "mdoc": true
      }
    },
    "f242c988-49e8-319a-9c8a-99db77704e3b": {
      "content": "${1:expression} if ${2:condition};",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      }
    },
    "f24b1cca-1fd9-31e8-8a22-ed2b8ff06232": {
      "content": "{:else}\n\t${1: <!-- else content here -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-else-block",
      "matches": {
        "svelse": true,
        "svelte else": true
      }
    },
    "f2526ac0-0fed-36cd-a1b5-f353d45fb6e2": {
      "content": "FUNCTION LOCALE-COMPARE(${1:argument1},${2:argument2},${3:locale-optional})$0",
      "doc": "character '=' or '<' or '>' indicating the result of comparing argument1 and argument2 using a culturall",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "FUNCTION-LOCALE-COMPARE",
      "matches": {
        "FUNCTION LOCALE-COMPARE": true
      }
    },
    "f253341a-f569-3c1b-aa50-8d32c7857a1f": {
      "content": ".directive('${1:directiveName}', (${2:directiveDeps}) ->\n\t(scope, element, attrs${3:ctrl}) ->\n\t\t${4}\n)",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngdl": true
      }
    },
    "f2564845-1b35-3e52-bc0a-c217986f8327": {
      "content": "font: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f": true
      }
    },
    "f2592a9c-16d6-39d5-b1e6-7fee53469324": {
      "content": "bind:${1:property}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind",
      "matches": {
        "svbind-simple": true,
        "svelte bind": true
      }
    },
    "f25a7519-a8c5-37ef-aef0-4876b749ccd9": {
      "content": "${1:FIELDNAME} = models.DateField($2)",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "DateField",
      "matches": {
        "mdate": true
      }
    },
    "f25e559c-6bc0-3dce-8fdd-3ac86fee7564": {
      "content": "\\\\section*{${1:section name}}%\n\\\\label{sec:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\section*",
      "matches": {
        "sec*": true
      }
    },
    "f2610cba-71ed-3b7d-b51c-e29db6a6211c": {
      "content": "interface ${1:#:IName} ${2::} ${3:Parent} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "interface {}",
      "matches": {
        "interface": true
      }
    },
    "f26403e4-bd88-3cdd-8492-6040943fc7d3": {
      "content": "font-size: ${1:100%};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "font-size: size (font)",
      "matches": {
        "font": true
      }
    },
    "f26ca468-f6b2-3447-9183-335f1ee2b8ad": {
      "content": "_.runInContext(${context})",
      "doc": "_.mixin({ 'foo': _.constant('foo') });\n\nvar lodash = _.runInContext();\nlodash.mixin({ 'bar': lodash.constant('bar') });\n\n_.isFunction(_.foo);\n// => true\n_.isFunction(_.bar);\n// => false\n\nlodash.isFunction(lodash.foo);\n// => false\nlodash.isFunction(lodash.bar);\n// => true\n\n// Create a suped-up `defer` in Node.js.\nvar defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\nCreate a new pristine `lodash` function using the `context` object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-runincontext",
      "matches": {
        "lodash runincontext": true
      }
    },
    "f26cf733-dc07-3ff7-ac4e-9096e9760d25": {
      "content": "function ${1:function_name}() {\n\t${0:#function_body}\n}",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fun": true
      }
    },
    "f26d18d8-216f-33f1-8224-9c6db66f7a6d": {
      "content": "cut:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cut": true
      }
    },
    "f2738683-a46d-3305-8b6e-50f4b69cf15b": {
      "content": "assert_respond_to ${1:object}, :${2:method}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asrt": true
      }
    },
    "f276df9e-59bb-3abb-ae2a-8ead9d2c3605": {
      "content": "border-top-right-radius: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      }
    },
    "f2774ba5-93e9-327b-badf-66cf48558f92": {
      "content": "foreach my $${1:x} (@${2:array}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "f2775cac-31f2-3aa1-8ab0-0502e76f45dc": {
      "content": "grid-column-gap ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gcg": true
      }
    },
    "f2809dc6-0f17-3ef2-8278-e8e297070333": {
      "content": "alert(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "alert": true
      }
    },
    "f2819192-6a42-340a-a055-281d6966c56e": {
      "content": "function (err, ${1:value}) {\n\tif (err) throw err\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Node callback",
      "matches": {
        "cb": true
      }
    },
    "f282a264-603e-34f1-bec5-a618954df1b1": {
      "content": "class $1 extends ${2:Reference}\n\t$3",
      "doc": "",
      "filetype": "gdscript",
      "grammar": "lsp",
      "label": "Inner class",
      "matches": {
        "class": true
      }
    },
    "f28697cf-0ccd-3590-9e6a-7beba24e4d18": {
      "content": "wordwrap:${0}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wordwrap": true
      }
    },
    "f28b6307-0db4-30de-a1b5-9b30a7a7c0d1": {
      "content": "::: nonincremental\n\n- ${1:first}\n- ${2:second}\n- ${3:third}\n$0\n\n:::",
      "doc": "Insert nonincremental list",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert nonincremental list",
      "matches": {
        "nonincremental list": true
      }
    },
    "f28d3e80-90d8-372c-bff8-5bf8b250b7d8": {
      "content": "each_with_object(${1:init}) { |${2:e}, ${3:var}| ${0} }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eawo": true
      }
    },
    "f295320a-7d3e-37d5-83cc-c79660e9b31e": {
      "content": "doctest ${1:filename}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dt": true
      }
    },
    "f2976935-a522-3d76-aaba-9fefc1198374": {
      "content": "border: ${1:1px} ${2:solid} #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      }
    },
    "f297f044-4793-3de5-9aac-89248e7b5f56": {
      "content": "static ${1}: ${2:usize} = ${0};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "static item declaration",
      "matches": {
        "stat": true
      }
    },
    "f2a29660-913f-395d-93d6-7175d8ea1eae": {
      "content": "grid-auto-columns: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac": true
      }
    },
    "f2a65c95-6c4b-384b-b66a-ed329564f1d9": {
      "content": "${1:var} ${2:item} = $1.findById(${3});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "findbyid": true
      }
    },
    "f2a73b3f-5b6d-3233-b5d9-ec28d7480c14": {
      "content": "${1:obj}.on '${2:events}', '${3:selector expression}', (${4:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "on": true
      }
    },
    "f2aac67a-11e8-3150-860d-4659a27f9bd8": {
      "content": "const ${1:feature}Reducer = createReducer(\n\tinitialState,\n\ton($1Actions.action, state => ({ ...state, ${2:prop}: ${3:updatedValue} })),\n);\n\nexport function reducer(state: State | undefined, action: Action) {\n\treturn $1Reducer(state, action);\n}",
      "doc": "Creates an NgRx Reducer",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Reducer",
      "matches": {
        "a-ngrx-create-reducer": true
      }
    },
    "f2ad1fec-235a-3123-9946-43994216b102": {
      "content": "#${1}: ${0:any}",
      "doc": "",
      "filetype": "typescript",
      "grammar": "snu",
      "label": "ts create private field using #",
      "matches": {
        "#+": true
      }
    },
    "f2b05c61-f979-3b05-9649-109166acd5f3": {
      "content": "unhex(${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unhex": true
      }
    },
    "f2b14176-ab5c-379b-a683-8efedd4a392a": {
      "content": "${3:void} ${1:name}(${2:args}) {\n  $0\n}",
      "doc": "Insert a function definition.",
      "filetype": "dart",
      "grammar": "lsp",
      "label": "fun",
      "matches": {
        "fun": true
      }
    },
    "f2b73bc7-a778-3632-afde-9b20b843e492": {
      "content": "inquire(unit=${1:iounit}, opened=${2:ioopen}, name=${3:filename}, action=${4:ioaction})",
      "doc": "Inquire (by Unit)",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "inq1",
      "matches": {
        "inq": true
      }
    },
    "f2b76032-063b-3744-8c80-f459d929e18e": {
      "content": "command! ${1:#:command_name} call ${2:#:func_name}",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "command call function",
      "matches": {
        "command": true
      }
    },
    "f2ba48c4-8b75-3257-bba2-033e2ee11399": {
      "content": "${1:ModelName}::model()->updateAll(${2:array('attributes')}, ${3:condition},array('${4:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yupdatea": true
      }
    },
    "f2bba4f3-254c-3a5b-a9a2-da51f859aff2": {
      "content": "alignSelf: '${1:center}',",
      "doc": "alignSelf",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "alignSelf",
      "matches": {
        "align": true
      }
    },
    "f2bf1c36-6826-3117-8efa-cf542b1f3a4a": {
      "content": "${1:value} ⊻ ${2:value}",
      "doc": "Code snippet for bitwise xor (exclusive or) operator.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "bitwise xor",
      "matches": {
        "xor": true
      }
    },
    "f2c24d15-b4f3-3990-b9da-2c1d9b0ca565": {
      "content": "function ${1:name} (${2:arguments}) {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "named function",
      "matches": {
        "fn": true
      }
    },
    "f2c57565-fc71-3a34-9a23-7302bfa7ea34": {
      "content": "onBeforeMount(() => {${1}})",
      "doc": "Vue onBeforeMount Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onBeforeMount",
      "matches": {
        "v3onbeforemount": true
      }
    },
    "f2d26147-e46e-387c-9dbf-490f7ae4f7ce": {
      "content": "catch (${1:Exception} ${2:e}) {\n    ${0:Console.WriteLine(e.Message);}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "catch () {}",
      "matches": {
        "catch": true
      }
    },
    "f2da2991-9f98-35c3-8f64-0f4671df665c": {
      "content": "foreach (${1:var} ${2:entry} in ${3})\n{\n\t${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true
      }
    },
    "f2de494c-f517-3b55-9ea3-3510a5352207": {
      "content": "place-content: center",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      }
    },
    "f2e137d5-0302-3edd-b997-9f4e3c3aa3e9": {
      "content": "public string ${1} { get; internal set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ps+&": true
      }
    },
    "f2e43dde-31f4-38a4-8a4b-cce5b2565bc8": {
      "content": "expect(${1:target}).not.toBeHidden();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be hidden (js)",
      "matches": {
        "noth": true
      }
    },
    "f2e6a81f-2512-3d03-88f9-24a8fcf83a48": {
      "content": "${1:key}:${2:value}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "Key:value for object",
      "matches": {
        "kv": true
      }
    },
    "f2ea049f-ac70-330b-8ae4-07add5401968": {
      "content": "match ${1} with\n| ${2} -> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "match": true
      }
    },
    "f2f58504-e151-3aa2-9eb8-ae1f80b91c68": {
      "content": "[${1:value} for ${2:value} in ${3:iterable}]$0",
      "doc": "List comprehension for creating a list based on existing lists.",
      "filetype": "comprehension",
      "grammar": "lsp",
      "label": "List comprehension",
      "matches": {
        "lc": true
      }
    },
    "f2f5a059-d1ce-3f3d-b25f-906860ea2508": {
      "content": "${1:obj}.live '${2:events}', (${3:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "live": true
      }
    },
    "f3016221-661e-31d2-a9b6-e528937c49da": {
      "content": "text-align: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta": true,
        "text-align": true
      }
    },
    "f301a65c-ec62-339b-8921-4232efcbe07f": {
      "content": "place-items: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi:c": true
      }
    },
    "f303c4c6-1523-3923-8188-2980ff5e8560": {
      "content": "_.sum(${array})",
      "doc": "_.sum([4, 2, 8, 6]);\n// => 20\n\nComputes the sum of the values in `array`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-sum",
      "matches": {
        "lodash sum": true
      }
    },
    "f303e6d2-49dc-3eb4-8019-daec0aff9da8": {
      "content": "| rstrip",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rstrip": true
      }
    },
    "f304f0f0-da13-382e-833d-f20260258603": {
      "content": "${fn:split(${1:string}, ${0:delims})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "split": true
      }
    },
    "f311b42f-7578-33dc-9e39-07aed4b16a84": {
      "content": "template ${2:/*name*/}(${1:/*args*/})\n{\n\t$3\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "template (temp)",
      "matches": {
        "temp": true
      }
    },
    "f31291b0-db77-3d07-87ea-79d682aced72": {
      "content": "{\n\t\"type\": \"page\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema page dropdown",
      "matches": {
        "_page": true
      }
    },
    "f31547aa-a137-3924-93fa-f1115ae687e4": {
      "content": "_.constant(${value})",
      "doc": "var objects = _.times(2, _.constant({ 'a': 1 }));\n\nconsole.log(objects);\n// => [{ 'a': 1 }, { 'a': 1 }]\n\nconsole.log(objects[0] === objects[1]);\n// => true\n\nCreates a function that returns `value`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-constant",
      "matches": {
        "lodash constant": true
      }
    },
    "f324e311-4615-3779-8aa4-15b1b02ac00e": {
      "content": "xit('${1:}', function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "xit('should do', function() { ... })",
      "matches": {
        "xit": true
      }
    },
    "f32682ab-b6f5-3dcd-94bb-d2dd3b8be1d5": {
      "content": "Map[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "map": true
      }
    },
    "f32ef1c8-4466-3625-8705-7051d447fbbb": {
      "content": "dbms_output.put_line('${0}');",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "f330a988-140a-3a07-b61d-0a1de7e5a0aa": {
      "content": "![${1:#:alt}](${2:#:url})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "![alt](url)",
      "matches": {
        "alturl": true
      }
    },
    "f3340700-224a-38df-b5f0-7efdf6743aad": {
      "content": "|> Seq.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "smap": true
      }
    },
    "f33574b1-d5c3-3c66-9aa6-da1b657a10bb": {
      "content": "<${1:p}::${2:stylename}>\n\t$0\n</${1:p}>",
      "doc": "HTML elements can be written as in standard HTML.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Paragraph Element",
      "matches": {
        "p": true
      }
    },
    "f339cb06-7504-381f-b163-3bfd7e81b24a": {
      "content": "_.flow(${funcs})",
      "doc": "function square(n) {\n  return n * n;\n}\n\nvar addSquare = _.flow([_.add, square]);\naddSquare(1, 2);\n// => 9\n\nCreates a function that returns the result of invoking the given functions\nwith the `this` binding of the created function, where each successive\ninvocation is supplied the return value of the previous.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flow",
      "matches": {
        "lodash flow": true
      }
    },
    "f33c69c4-c7c6-3d7b-a3fc-ca25bf3a8d71": {
      "content": "vertical-align: ${1|baseline,middle,top,bottom,sub,super,text-top,text-bottom|};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "vertical-align",
      "matches": {
        "va": true
      }
    },
    "f33dcd60-8311-374f-b688-1d6e60972215": {
      "content": "<svelte:body />",
      "doc": "svelte:body",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-body",
      "matches": {
        "s-body": true
      }
    },
    "f340da32-ca9e-3acc-8554-18323e5569ee": {
      "content": "${1:obj}.replaceAll(${2:target})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repa": true
      }
    },
    "f3443a8f-8b2f-388e-9cd6-a307b39b7695": {
      "content": "${1:FIELDNAME} = models.DateField(${2:auto_now_add=True, auto_now=True}${0:, blank=True, null=True})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "date": true
      }
    },
    "f344e427-b311-357c-8b9e-1945bc485009": {
      "content": "unchecked (${1:#:var}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "unchecked () {}",
      "matches": {
        "unchecked": true
      }
    },
    "f34611e3-aefa-382f-96fe-b460f9bd7cfd": {
      "content": "border ${1:1px} ${2:solid} ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bd+": true
      }
    },
    "f3497e4e-6252-3217-974f-d43d8129cd99": {
      "content": "clocking ${1:clocking_name} @(${2:posedge} ${3:clk});\n\t${0}\nendclocking : $1",
      "doc": "",
      "filetype": "systemverilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clock": true
      }
    },
    "f34a3f74-8f5f-34cb-9223-f40e109ac41c": {
      "content": "log(${0:value});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "log": true
      }
    },
    "f35b506b-fffd-37c3-b1bc-2a61da6cd456": {
      "content": "@media ${1:print}\n\t${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@m": true
      }
    },
    "f36389ba-ae46-3aa6-ad2a-f729833f7322": {
      "content": "${1:obj}.delegate('${2:selector expression}', '${3:event name}', function (${4:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dele": true
      }
    },
    "f36d5102-595b-31b2-b729-6fdb7c4fd885": {
      "content": "_.method(${path}, ${args})",
      "doc": "var objects = [\n  { 'a': { 'b': _.constant(2) } },\n  { 'a': { 'b': _.constant(1) } }\n];\n\n_.map(objects, _.method('a.b'));\n// => [2, 1]\n\n_.map(objects, _.method(['a', 'b']));\n// => [2, 1]\n\nCreates a function that invokes the method at `path` of a given object.\nAny additional arguments are provided to the invoked method.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-method",
      "matches": {
        "lodash method": true
      }
    },
    "f3718578-a4df-3e51-bead-976efc3c6f32": {
      "content": "tag='$1'$0",
      "doc": "tag=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "tag",
      "matches": {
        "tag": true
      }
    },
    "f3720b0d-2345-334e-a45e-804447415e33": {
      "content": "overflow: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "overflow: auto",
      "matches": {
        "ova": true
      }
    },
    "f37f898a-3784-304a-9920-646dc91c052c": {
      "content": "beforeAll(async () => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "beforeAll",
      "matches": {
        "ba": true
      }
    },
    "f37fecc8-9815-36e0-90b0-e9391011ca65": {
      "content": "__interface I${1:Interface}\n{\n\t$0\n};",
      "doc": "Code snippet for interface (Visual C++)",
      "filetype": "cpp",
      "grammar": "lsp",
      "label": "interface",
      "matches": {
        "interface": true
      }
    },
    "f37fee32-7452-3eb5-8d76-8c417874e123": {
      "content": "System.out.printf(\"${1:Message}\", ${0:args});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "printf": true
      }
    },
    "f380892a-1ba4-3c77-a54a-d73a12f48448": {
      "content": "expect(${1:target}).not.toBeDefined();",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect not to be defined (js)",
      "matches": {
        "notd": true
      }
    },
    "f384d1d1-8458-37c8-85a5-1a0beb3903aa": {
      "content": "margin auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "m:a": true
      }
    },
    "f385248a-7ac3-3b15-841a-986a27f8b9d5": {
      "content": "set grid",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set grid",
      "matches": {
        "grid": true
      }
    },
    "f38d1663-bde8-3492-a349-6f94565a10c0": {
      "content": "Yii::import('${0}');",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yimp": true
      }
    },
    "f3938d5f-5dd7-3494-b805-8feb751611e7": {
      "content": "grid-auto-columns: max-content;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gac:mac": true
      }
    },
    "f3939c9c-455c-386e-bb38-7f05d52277d8": {
      "content": "justify-content: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:fe": true
      }
    },
    "f39639da-c9f0-32a5-b3f2-06c5d4f2d8aa": {
      "content": "removetags:\"${0}\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "removetags": true
      }
    },
    "f397c6fd-9b0d-3f1f-a68d-b4b42611e2f0": {
      "content": "cross($2, $3, $4)",
      "doc": "vec3 cross(vec3 x, vec3 y)\n\nThe cross function returns the cross product of the two input parameters, i.e. a vector that is perpendicular to the plane containing x and y and has a magnitude that is equal to the area of the parallelogram that x and y span. The input parameters can only be 3-component floating vectors. The cross product is equivalent to the product of the length of the vectors times the sinus of the(smaller) angle between x and y.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "cross",
      "matches": {
        "cross": true
      }
    },
    "f3a5f2ab-cb2d-30ba-a7d8-3318cdc2e43d": {
      "content": "set xrange [${1:*}:${2:*}]",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "set xrange [X1:X2]",
      "matches": {
        "xrange": true
      }
    },
    "f3a9b261-3acd-3efe-9b59-217a83a03b26": {
      "content": "height: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h:a": true
      }
    },
    "f3af6192-0d50-38f3-bdba-bfb050b228a3": {
      "content": "int main(void)\n{\n\t${0}\n\treturn 0;\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mainn": true
      }
    },
    "f3b319e4-32c5-3a1b-addc-846322928bd4": {
      "content": ".. csv-table:: ${1:#:TITLE}\n\t:header: \"${2:#:Header1}\", \"${3:#:Header2}\"${4:#:Headers}\n\n\t\"${5:#:Column1}\", \"${6:#:Column2}\"${0:#:CURSOR}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "directive_csvtable",
      "matches": {
        "csvtable": true
      }
    },
    "f3b7b049-f1af-3a02-851e-f77acbf388ab": {
      "content": "vertical-align: sub",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "va:sub": true
      }
    },
    "f3bc2344-b938-37ab-9e3c-06a26dee9b0b": {
      "content": "enter-active-class=\"$1\"$0",
      "doc": "enter-active-class=''. Expects: string.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "enter-active-class",
      "matches": {
        "enterActiveClass": true
      }
    },
    "f3bfc631-5f35-3777-bb79-432622102bf3": {
      "content": "t.decimal :${1:title}${2:${3:, precision: ${4:10}}${5:, scale: ${6:2}}}\n$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "Create decimal column",
      "matches": {
        "tcd": true
      }
    },
    "f3c0efd1-8dc6-3ac2-abfc-0ad39bc4cb1a": {
      "content": "${1:obj}.andSelf()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "andself": true
      }
    },
    "f3c28a5c-090b-3e26-ba84-551bb0f0a306": {
      "content": "align-items: flex-end",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fe": true
      }
    },
    "f3d0c546-b5e7-3f0f-a7ee-9a48dfe579aa": {
      "content": "library(shiny)\n\nui <- fluidPage(\n  ${0}\n)\n\nserver <- function(input, output, session) {\n  \n}\n\nshinyApp(ui, server)",
      "doc": "",
      "filetype": "r",
      "grammar": "lsp",
      "label": "shinyapp",
      "matches": {
        "shinyapp": true
      }
    },
    "f3d53197-f61c-38ca-b5a7-345154b3f441": {
      "content": "read(unit=${1:iounit}, fmt=\"(${2:format string})\", iostat=${3:istat}) ${4:variables}\r\nif ( $3 /= 0 ) stop \"Read error in file unit $1\"",
      "doc": "Read",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "read1",
      "matches": {
        "read": true
      }
    },
    "f3d6e263-1683-3d26-a7c0-86fa615b7029": {
      "content": "import PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nexport class ${1:${TM_FILENAME_BASE}} extends Component {\n  static propTypes = {\n    ${2:second}: ${3:third}\n  }\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({})\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})",
      "doc": "Creates a React component class with PropTypes with connected redux and ES7 module system",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactClassComponentReduxPropTypes",
      "matches": {
        "rcreduxp": true
      }
    },
    "f3d87b2d-adec-3bd6-ad0d-37303f65eb9e": {
      "content": "elif [[ ${1:condition} ]]; then\n\t${0}",
      "doc": "Add an elseif to an if statement.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "elseif",
      "matches": {
        "elseif": true
      }
    },
    "f3d98657-7503-3858-918f-1b649084653d": {
      "content": "<template></template>",
      "doc": "",
      "filetype": "vue",
      "grammar": "snu",
      "label": "",
      "matches": {
        "template": true
      }
    },
    "f3e3b6b3-a930-3525-ae8e-777155006e95": {
      "content": "protected",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pro": true
      }
    },
    "f3e4462c-b8d3-3d18-ab17-d08fe21ae669": {
      "content": "interface ${1:Name} {\n\t$0\n}",
      "doc": "",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "interface declaration",
      "matches": {
        "interf": true
      }
    },
    "f3e6a2c8-77e2-3f70-b160-9b90e8cf776e": {
      "content": "<${1:elementName} />",
      "doc": "an element self closed",
      "filetype": "react",
      "grammar": "lsp",
      "label": "jsx element self closed",
      "matches": {
        "jc": true
      }
    },
    "f3e6e38b-c2b6-3887-9afb-86c252786314": {
      "content": "if ${1:condition}\n\tthen ${2:undefined}\n\telse ${3:undefined}$0",
      "doc": "If block",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if simple": true
      }
    },
    "f3e72109-1b14-357c-b997-bcff08084335": {
      "content": "System.err.println(${0});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serr": true
      }
    },
    "f3f0c727-16cd-3242-b0fb-ebbce5cabd68": {
      "content": "java.util.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.u": true
      }
    },
    "f3f2ae8f-dce1-3077-98f7-584c6b45a6c9": {
      "content": "for ${1:name} from ${2:start} til ${3:finish}\n\t${4}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrex": true
      }
    },
    "f3f33352-57ed-31b9-bb6d-5bb93ee8cdf7": {
      "content": "PropTypes.string,",
      "doc": "String prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeString",
      "matches": {
        "pts": true
      }
    },
    "f3f37ac6-fb16-3d97-a18a-f1a5e314121b": {
      "content": "// MARK: - Override",
      "doc": "Create a MARK: - Override",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "MARK: - Override",
      "matches": {
        "markoverride": true
      }
    },
    "f3f45c9a-cfb2-343f-a60f-d9294c92cf8e": {
      "content": "(dotimes [_ 10]\n\t(time\n\t\t(dotimes [_ ${1:times}]\n\t\t\t${0:code})))",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dotimes": true
      }
    },
    "f40b2ba5-6bba-31d0-bbf0-5df5351c8393": {
      "content": "try\n{\n\t${0:${VISUAL}}\n}\ncatch (${1:System.Exception})\n{\n\tthrow;\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "f40d95aa-5bd7-3dc5-aaa8-56f99bc20afd": {
      "content": "PropTypes.array.isRequired,",
      "doc": "Array prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeArrayRequired",
      "matches": {
        "ptar": true
      }
    },
    "f4156dff-8731-34e2-9224-4659ad251ebe": {
      "content": "int choice = NSRunAlertPanel(@\"${1:Something important!}\", @\"${2:Something important just happend, and now I need to ask you, do you want to continue?}\", @\"${3:Continue}\", @\"${4:Cancel}\", nil);\nif(choice == NSAlertDefaultReturn) // \"$3\"\n{\n\t$0;\n}\nelse if(choice == NSAlertAlternateReturn) // \"$4\"\n{\n\t\t$0\n}",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "NSRunAlertPanel (alert)",
      "matches": {
        "alert": true
      }
    },
    "f41637e0-f3b1-3427-9a76-2320217ef25a": {
      "content": "text-height: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "th:a": true
      }
    },
    "f41ace03-7036-3c36-a28b-d50e05b78a6f": {
      "content": "foreach ${1:var} ${2:\\$list} {\n\t$3\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "foreach... (foreach)",
      "matches": {
        "foreach": true
      }
    },
    "f41d72aa-eb9e-3c1d-b4fc-f61243472c09": {
      "content": "expect($1).toMatch($0);",
      "doc": "returns true if the argument matches the second value",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tomatch",
      "matches": {
        "jest expect tomatch": true,
        "tm": true
      }
    },
    "f41f9861-edab-366a-b828-53485ad92af0": {
      "content": "class ${1:MODEL_NAME}UpdateView(UpdateView):\n\tmodel = $1\n\ttemplate_name = \"${2:TEMPLATE_NAME}\"",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "Generic Update View",
      "matches": {
        "updateview": true
      }
    },
    "f4221669-b3cb-3b09-af8d-a30bd586ea8e": {
      "content": "borderRightWidth: ${1},",
      "doc": "borderRightWidth",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderRightWidth",
      "matches": {
        "bor": true
      }
    },
    "f423ecb7-77a0-36e0-9b6f-0bdea51cb4aa": {
      "content": "cummin(${1:x}",
      "doc": "Cummulative min",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "cumi",
      "matches": {
        "cumin": true
      }
    },
    "f4259d4b-b4ea-3a19-8a6d-bebea1a8cd5b": {
      "content": "{%- include ${snippet} -%}",
      "doc": "Tag: include",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag include",
      "matches": {
        "include": true
      }
    },
    "f427fcb8-7521-390f-bf7f-deccc5202751": {
      "content": "public static void Main(string[] args) {\n    ${0}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "f42c8f8f-97a0-3cc0-bc7f-dc1f34989cbf": {
      "content": "${1:obj}.focus (${2:e}) ->\n\t${0:// event handler}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "focus": true
      }
    },
    "f42cbd6c-9bea-3c28-b51f-9116a76b9d54": {
      "content": "[System.Serializable]\npublic class ${1:My}Exception : ${2:System.Exception}\n{\n    public ${1:My}Exception() { }\n    public ${1:My}Exception(string message) : base(message) { }\n    public ${1:My}Exception(string message, System.Exception inner) : base(message, inner) { }\n    protected ${1:My}Exception(\n        System.Runtime.Serialization.SerializationInfo info,\n        System.Runtime.Serialization.StreamingContext context) : base(info, context) { }\n}",
      "doc": "Exception",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Exception",
      "matches": {
        "exception": true
      }
    },
    "f4326310-d5d5-36a4-8fd3-847f1ad8fe2f": {
      "content": "<input type=\"email\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:email": true
      }
    },
    "f440d502-f6d9-3818-867a-dbed1f610efe": {
      "content": "reg [${1}:${2:0}] ${3:name} [${4:0}:${5}];${6:TARGET}",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "reg [] name []",
      "matches": {
        "regm": true,
        "regmemory": true
      }
    },
    "f446f4bc-7642-322e-b631-b12a3a47593e": {
      "content": "font-stretch: semi-condensed;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst:sc": true
      }
    },
    "f4472b67-e164-34ce-97b3-9db2770e6629": {
      "content": "local ${1:x} = ${0:1}",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "local x = 1",
      "matches": {
        "local": true
      }
    },
    "f448905d-e68b-352f-be31-e2e335c9dc8f": {
      "content": "\\begin{flushright}\n\t${1:TARGET}\n\\end{flushright}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{flushright} \\flushright": true,
        "flushright": true
      }
    },
    "f44b309c-c9cb-3c38-ac7a-bbe087a1f98d": {
      "content": "_.isString(${value})",
      "doc": "_.isString('abc');\n// => true\n\n_.isString(1);\n// => false\n\nChecks if `value` is classified as a `String` primitive or object.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isstring",
      "matches": {
        "lodash isstring": true
      }
    },
    "f452e284-b679-3f91-bbdf-3cd6ddc08784": {
      "content": "expr ${0:1 + 1}",
      "doc": "Calculate numbers with Bash.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "expr",
      "matches": {
        "expr": true
      }
    },
    "f452f27c-5f87-3b9e-a707-9a5d237a1fef": {
      "content": "${1:moon} = require '$1'",
      "doc": "",
      "filetype": "moon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "require": true
      }
    },
    "f454daf6-17bc-3b6d-860b-0cd4b89bd2e6": {
      "content": "if ${1:condition} do\n\t${2:${VISUAL}}\nelse\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "if .. do .. else .. end",
      "matches": {
        "ife": true
      }
    },
    "f4592eeb-2442-3564-9adb-bde8ee2022fd": {
      "content": "border-style dot-dot-dash",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:dtdtds": true
      }
    },
    "f45d1c96-d690-3b75-8835-6261ed65df72": {
      "content": "{% increment ${1:variable} %}",
      "doc": "Variable tag: increment",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Tag increment",
      "matches": {
        "increment": true
      }
    },
    "f46add8f-2e58-3cbd-9160-dda47183eb60": {
      "content": "import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\tstatic propTypes = {\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-component-proptypes",
      "matches": {
        "rcep": true,
        "react component class export proptypes": true
      }
    },
    "f47ba046-3b97-375c-8f8b-44b6ebb86c72": {
      "content": "v-html=\"${1:html}\"",
      "doc": "Expects: string. Updates the element’s innerHTML.",
      "filetype": "html",
      "grammar": "lsp",
      "label": "v-html",
      "matches": {
        "vHtml": true
      }
    },
    "f481b6a6-6dcc-357b-84b0-46cb586e4495": {
      "content": "[assembly: InternalsVisibleTo(\"${1:#:FriendName}\")]${0}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asm_internals_visible_to": true,
        "internals asmInternalsVisibleTo friend_attr": true
      }
    },
    "f482d1cc-4bd9-3ed6-99da-6084139eb1f4": {
      "content": "string.matches()",
      "doc": "string.matches(regex: Regex, options: { message: string, excludeEmptyString: bool }): Schema\n\nAn alternate signature for string.matches with an options object. excludeEmptyString, when true,\nshort circuits the regex test when the value is an empty stringlet schema = string().matches(/(hi|bye)/, { excludeEmptyString: true });\n\nawait schema.isValid(\"\"); // => true",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "string-matches",
      "matches": {
        "yup string matches": true
      }
    },
    "f483b630-41fc-3783-96fe-37b6839c276a": {
      "content": "<textarea name=\"$2\"${3: id=\"$4\"}>$5</textarea>",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "textarea": true
      }
    },
    "f492f5ce-7967-3f1d-9ce7-459d608450f7": {
      "content": "{% case ${1:#:condition} %}\n{% when ${2:#:TARGET} %}\n  ${3}\n{% endcase%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "case when endcase",
      "matches": {
        "case": true
      }
    },
    "f49c15e1-5f2b-3ddf-849b-577f817b3d08": {
      "content": "round(${0:value}};",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "round": true
      }
    },
    "f49ff0cd-4069-359b-8c56-5ee1344947b7": {
      "content": "fail(\"${1:message}\")",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fail": true
      }
    },
    "f4a39d1b-f84a-3a0e-9412-4b09bebfd78b": {
      "content": "display table-cell",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbc": true
      }
    },
    "f4a6461f-8740-33be-96af-e4d280318e26": {
      "content": "overflow auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:a": true
      }
    },
    "f4a7e1e8-700c-3359-9def-261161348bf8": {
      "content": "function pi()$0",
      "doc": "pi",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-pi",
      "matches": {
        "function pi": true
      }
    },
    "f4ab3866-c5de-33d3-ae0d-2a86a9e0791e": {
      "content": "<%= ${1:f}.label :${2:attribute}, '${0:$2}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ffl": true
      }
    },
    "f4acbdbd-ee01-3d5c-8ea6-e776420b1429": {
      "content": "${1:NSObject} *${2:foo} = [${3:$1 alloc}]${4};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o": true
      }
    },
    "f4adc3b8-02fe-321c-8668-0fa6920d8cd9": {
      "content": "java.net.",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "j.n": true
      }
    },
    "f4af6923-7db5-3384-821b-b6682f1f91ee": {
      "content": "service '${1:serviceName}', (${2:injectables}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ngms": true
      }
    },
    "f4b0a966-0d35-366e-9f41-d5e99128262c": {
      "content": "acosh($2)",
      "doc": "return the arc hyperbolic cosine of the parameter",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "acosh",
      "matches": {
        "acosh": true
      }
    },
    "f4b42c1e-9e9a-32d1-b677-4972ddac1ed8": {
      "content": "errors.Wrapf(${1:err}, \"${2:message %v}\", ${3:args...})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "errors.Wrapf",
      "matches": {
        "ewf": true
      }
    },
    "f4b5faef-b799-30ae-8c33-3b86a2860c7b": {
      "content": "(for/first ([${1}])\n\t${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "for/first",
      "matches": {
        "forfi": true
      }
    },
    "f4b670a0-3646-314e-a1b0-b5bb1b0d75a5": {
      "content": "forever begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forev": true
      }
    },
    "f4c0187f-a938-34fc-8c26-22325c37c062": {
      "content": "export const $1 = createContext<$2>(\n\t(null as any) as $2\n)",
      "doc": "creates a react context",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "createContext",
      "matches": {
        "cc": true
      }
    },
    "f4c2e251-e19d-32c9-b876-1c306c15ee58": {
      "content": "radians(${0:deg});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "radians": true
      }
    },
    "f4ca24c5-73d3-372e-9da6-27886c6ce452": {
      "content": "borderTopLeftRadius: ${1},",
      "doc": "borderTopLeftRadius",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "borderTopLeftRadius",
      "matches": {
        "bor": true
      }
    },
    "f4cb8a1d-f781-366c-86b3-a0058e66b043": {
      "content": "else begin\n\t${0}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "f4ce59d6-2418-3cf1-a697-f672c1ee45e3": {
      "content": "border-corner-image: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdci:n": true
      }
    },
    "f4d55d43-0cb3-3d6d-8d65-c0babe391e37": {
      "content": "if ${1:#:condition}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f4e0e80f-830a-3569-b9f6-f361f0720b3f": {
      "content": "$this->assertInstanceOf(${1:Example}::class, ${2:$actual});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertInstanceOf(Example::class, $actual)",
      "matches": {
        "asi": true
      }
    },
    "f4e144c3-bb87-3881-ad01-09f4ed1328bd": {
      "content": "${1:obj}.load('${2:mydomain.com/url}',\n\t${2:{ param1: value1 },}\n\t(responseText, textStatus, xhr) ->\n\t\t${0:// success callback}\n})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loadf": true
      }
    },
    "f4eb51fe-974b-33dd-8d9f-024c1fd77948": {
      "content": "height: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h": true
      }
    },
    "f4f2d0ca-5b2f-32db-9a1f-d7b72389d18b": {
      "content": "border-bottom: ${1:1px} ${2:solid} #${3:000};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdb+": true
      }
    },
    "f4f3e3bf-4df7-3669-9046-acfef2a0be35": {
      "content": "${1:http}.HandleFunc(\"${2:/}\", func(w http.ResponseWriter, r *http.Request) {\n  ${0:fmt.Fprintf(w, \"hello world\")}\n})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "mux.HandleFunc(...)",
      "matches": {
        "hhf": true
      }
    },
    "f4f4589a-4d8f-365e-ae2c-80677e638120": {
      "content": "@if ${1:condition} {\n\t${0}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f5055cb1-29c8-3d19-b90e-5909ce2b4a2b": {
      "content": "d3.svg.axis()\n  .orient(${1})\n  .scale(${2})",
      "doc": "",
      "filetype": "javascript-d3",
      "grammar": "snu",
      "label": "",
      "matches": {
        "axis": true
      }
    },
    "f505cb0b-be6c-346d-82fd-7ea517800c83": {
      "content": "<slot>${1:<!-- optional fallback -->}</slot>",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-slot",
      "matches": {
        "svelte slot": true,
        "svsl": true
      }
    },
    "f50f6206-5740-3ea1-9445-43224b7e57c7": {
      "content": "clear: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl": true
      }
    },
    "f513919b-1ddb-39d6-a121-ea9c7af12c28": {
      "content": "\\${2:${0:default}}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${2:default}",
      "matches": {
        "2:": true
      }
    },
    "f5141643-7664-3f62-bd83-3da4117e8703": {
      "content": "border-style: ${1:none/hidden/dotted/dashed/solid/double/groove/ridge/inset/outset};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-style: style (border)",
      "matches": {
        "border": true
      }
    },
    "f51a305b-9865-387f-a65e-e132615815c7": {
      "content": "\\\\begin{enumerate}[(i)]\n\t\\\\item ${0}\n\\\\end{enumerate}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "enumerate environment",
      "matches": {
        "enumi": true
      }
    },
    "f5218f36-ed46-3e07-90cf-6bd3f1630bb3": {
      "content": "| script_tag",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "script_tag": true
      }
    },
    "f523727a-d1fa-3513-8af2-48dbc903a017": {
      "content": "import ${1:Html} exposing (${2:..})\n${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "import ... exposing (..)",
      "matches": {
        "impe": true,
        "importExposing": true
      }
    },
    "f527cb9e-1cb5-3d0d-8957-88ae1c1b816a": {
      "content": "render xml: '${0:text to render}'",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rxml": true
      }
    },
    "f52a1508-2c56-37b2-bb97-7b8caaa73030": {
      "content": "for ${1:name},${2:val} in pairs(${3:table_name}) do\n\t$0\nend",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "pair for loop",
      "matches": {
        "forp": true
      }
    },
    "f52ecc58-2149-33ba-95b5-7bd8a0f109ed": {
      "content": "@before-enter=\"$1\"$0",
      "doc": "@before-enter=''",
      "filetype": "html",
      "grammar": "lsp",
      "label": "before-enter",
      "matches": {
        "beforeEnterEvent": true
      }
    },
    "f532aa11-4bb7-31c7-bbda-8801ed13cb8f": {
      "content": "<p class=\"${1}\">${0}</p>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p.": true
      }
    },
    "f5359af3-0ed3-3a71-ab72-628b00283e02": {
      "content": "flex-direction: ${1|row,row-reverse,column,column-reverse|};",
      "doc": "initial value: row",
      "filetype": "css",
      "grammar": "lsp",
      "label": "flex-direction",
      "matches": {
        "fld": true
      }
    },
    "f536806e-3f6e-39a9-b6c8-58004e8669cc": {
      "content": "function rem(${1:number},${2:divisor})$0",
      "doc": "remainder of number divided by divisor",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "function-rem",
      "matches": {
        "function rem": true
      }
    },
    "f5370b15-f1bd-33a7-beeb-ea49456e4d8c": {
      "content": "${1:obj}.bind('${2:event name}', function (${3:e}) {\n\t${0:// event handler}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bind": true
      }
    },
    "f53f007f-b289-3d41-aae2-187051beefd1": {
      "content": "{\n\t\"type\": \"product\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_product": true
      }
    },
    "f5411cd5-8509-307b-8161-9f7bdade365d": {
      "content": ";;\n;; @brief      ${1:function description}\n;;\n;; @details    ${2:detailed description}\n;;\n;; @param      ${3:param}\n;;\n;; @return     ${4:return}\n;;",
      "doc": "",
      "filetype": "asm",
      "grammar": "snu",
      "label": ";; @brief ...",
      "matches": {
        "doxy": true
      }
    },
    "f544229c-1637-3e59-bde8-c3c40cf5e1a9": {
      "content": "<?php\n\n${0:${VISUAL}}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "<?": true
      }
    },
    "f546fa80-1a79-3f98-b29c-5fba9b6cecb3": {
      "content": "${1:fn} :: ${2:a} -> ${3:a}\n$1 ${4} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "f548ee41-70d9-3180-b539-5005ee0eca9b": {
      "content": "- [ ] ${1:${TM_SELECTED_TEXT}}",
      "doc": "Insert unchecked item",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert unchecked item",
      "matches": {
        "unchecked item": true
      }
    },
    "f54d7ff1-1b5d-3b50-85c1-8413b5ceaebc": {
      "content": "${1:deferred}.then(${2:doneCallbacks}, ${3:failCallbacks}, ${4:progressCallbacks})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Dthen": true
      }
    },
    "f554f2ef-0d52-32b0-9534-36a3e6823299": {
      "content": "font-emphasize-position before",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp:b": true
      }
    },
    "f5582d6a-7e7e-3245-ba36-a9be95482d25": {
      "content": "if ${1} {\n\t${2}\n}",
      "doc": "",
      "filetype": "perl6",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f566596d-bfb3-371d-a712-3fa2cb98fc22": {
      "content": "if (${1:condition} == null) {\n\t$0\n}",
      "doc": "if statement checking for null",
      "filetype": "java",
      "grammar": "lsp",
      "label": "ifnull",
      "matches": {
        "ifnull": true
      }
    },
    "f56a28e5-2f85-33c8-b7c8-a3146a0886cd": {
      "content": "${1:component}.$destroy();",
      "doc": "svelte component api $destroy",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-destroy",
      "matches": {
        "s-component-destroy": true
      }
    },
    "f5790232-a21b-31d7-ac0d-4be21e8ddb2a": {
      "content": "set",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "Set",
      "matches": {
        "T": true
      }
    },
    "f57c71f0-3309-3848-b26f-47eaecc2926f": {
      "content": "rep(${1:x}, ${2:...})",
      "doc": "Rep",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "rep",
      "matches": {
        "rep": true
      }
    },
    "f57f2640-a06a-3466-8ca1-cd618273910d": {
      "content": "try {\n\n}catch(${1}) {\n\n}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "f580e041-0104-3884-9122-d24c968f8974": {
      "content": "font-effect none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fef:n": true
      }
    },
    "f5893ce2-d83c-3bb3-9f49-90e2d3ff474b": {
      "content": "try\n{\n    $1\n}\nfinally\n{\n    $0\n}",
      "doc": "Try finally",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Try finally",
      "matches": {
        "tryf": true
      }
    },
    "f58b2c9a-062f-3371-be59-8936684572e0": {
      "content": "impl ${1} for ${2} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "",
      "matches": {
        "implfor": true
      }
    },
    "f58d36f6-09b2-37b7-966f-7438949813b8": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxt": true
      }
    },
    "f5917880-f962-3749-83ed-0804b6d3d02b": {
      "content": "Array${1:[T]}${0:()}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "arr": true
      }
    },
    "f59567d6-d3ce-34a7-9855-5f4ee7d6d8f3": {
      "content": "border-style ridge",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bds:r": true
      }
    },
    "f5967387-9233-3b4a-bc38-d47d16aa8e7b": {
      "content": "overflow-y: auto",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovy:a": true
      }
    },
    "f5969f16-c973-319d-afcb-5caa278d3e2f": {
      "content": "${1:component}.$destroy();",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-component-destroy",
      "matches": {
        "svcomd": true,
        "svelte component destroy": true
      }
    },
    "f5a460fe-f984-307f-9cbb-e9ecf49d58ca": {
      "content": "await new Promise((r) => setTimeout(r, ${0}))",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "await sleep",
      "matches": {
        "ast": true
      }
    },
    "f5a93a0a-43aa-3b4d-85a4-c4b29633b307": {
      "content": "text-emphasis: after",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:a": true
      }
    },
    "f5b93258-bcac-306e-9f39-f2e3d8b71c09": {
      "content": "${1:obj}.nextAll('${2:selector expression}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nexta": true
      }
    },
    "f5bbb69a-52a7-32f8-83ab-0b0cc0485c5e": {
      "content": "expect(${1:target}).toThrowError(${2:value});",
      "doc": "",
      "filetype": "javascript-jasmine",
      "grammar": "snu",
      "label": "expect to throw error (js)",
      "matches": {
        "ethe": true
      }
    },
    "f5c0bd4f-0abf-365c-b6d4-cac8c7665a55": {
      "content": "justify-content space-around",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:sa": true
      }
    },
    "f5c4533f-cac2-3f3e-a3cb-4f7b9e7e5e54": {
      "content": "\\\\begin{frame}[${1:t}]\n\t\\frametitle{${2:title}}\n\t\\framesubtitle{${3:subtitle}}\n\t${0:${VISUAL}}\n\\\\end{frame}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "frame environment",
      "matches": {
        "frame": true
      }
    },
    "f5c81f61-9ffc-3352-bb77-01cebbe11a7e": {
      "content": "$.parseXML(${1:data})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "parsexml": true
      }
    },
    "f5c9aa0c-1ac0-3cc8-9b42-e33999163303": {
      "content": "attr_writer :${0:attr_names}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "Insert attr_writer",
      "matches": {
        "w": true
      }
    },
    "f5cc8623-a1b0-3977-9829-8882f39ce44b": {
      "content": "when (${1:value}) {\n\t${2:branch} -> ${3:branchValue}\n\n\telse -> ${4:defaultValue}\n}",
      "doc": "Snippet for when expression",
      "filetype": "kotlin",
      "grammar": "lsp",
      "label": "when",
      "matches": {
        "when": true
      }
    },
    "f5cd0d5e-320d-3add-bf08-1e756a3a7d70": {
      "content": "__import__('rpdb').set_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rpdb": true
      }
    },
    "f5cef7c6-db66-3ad5-9517-bed45712dfeb": {
      "content": "while (${1:true})\n{\n    $0\n}",
      "doc": "While loop",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "While loop",
      "matches": {
        "while": true
      }
    },
    "f5cf344f-dece-34f6-b54d-9ec7cb526996": {
      "content": "marginLeft: ${1},",
      "doc": "marginLeft",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "marginLeft",
      "matches": {
        "mar": true
      }
    },
    "f5d35831-0af4-3858-9c40-8388f8add70d": {
      "content": "<input type=\"time\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:time": true
      }
    },
    "f5dcdf05-ea15-37d0-a25f-a5649924c913": {
      "content": "import styled from 'styled-components/native';\n\nexport const ${1:Container} = styled.${2:View}`\n  ${3}\n`;",
      "doc": "Create React Native Styled Components file",
      "filetype": "snippets-ts",
      "grammar": "lsp",
      "label": "styles",
      "matches": {
        "styled-react-native": true
      }
    },
    "f5df2595-8322-314e-885c-6766d30f8dc1": {
      "content": "for ${1:name} in ${2:array}\n\t${0:# body...}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      }
    },
    "f5e34e28-d750-35d2-a65d-7dfe1b63af1f": {
      "content": "import { request } from 'graphql-request';",
      "doc": "",
      "filetype": "graphql-request",
      "grammar": "lsp",
      "label": "graphql-request-import-request",
      "matches": {
        "graphql-request import request": true
      }
    },
    "f5e41461-0711-3a00-a3b2-b767929a0141": {
      "content": "useMemo(() => ${1:function}, ${2:input})",
      "doc": "",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-usememo",
      "matches": {
        "react usememo": true,
        "usememo": true
      }
    },
    "f5e81bd1-5460-3298-8623-146f2830c847": {
      "content": "PropTypes.node,",
      "doc": "Anything that can be rendered: numbers, strings, elements or an array",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeNode",
      "matches": {
        "ptnd": true
      }
    },
    "f5e98827-b473-307f-b29c-683ebc2946ad": {
      "content": "font-family: ${0:Helvetica,Arial},sans-serif;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:ss": true
      }
    },
    "f5f3cc7c-d236-3279-9c0c-b5fb90168118": {
      "content": "${1:router}.onReady($2)$0",
      "doc": "router.onReady()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerOnReady",
      "matches": {
        "routerOnReady": true
      }
    },
    "f5f9b4b1-5e40-3da7-896e-fc952aa32853": {
      "content": "if ${1} then\n\t${2}\nelif ${3} then\n\t${4}\nelse\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifee": true
      }
    },
    "f604f5c1-3d7b-3330-8ca1-0f596758da14": {
      "content": "\\begin{slide}\n\t${1:TARGET}\n\\end{slide}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{slide} \\slide": true,
        "slide": true
      }
    },
    "f6053f43-aaa9-3540-b000-fc74d1e194d0": {
      "content": "font-emphasize-position ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "femp": true
      }
    },
    "f6071a90-3215-323e-ab35-d607d3463158": {
      "content": "proc ${1:#:name}(${2}):${3:#:type} =\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "proct": true
      }
    },
    "f60a89e5-6ae3-306d-bb23-7767c0450b61": {
      "content": "gl_PointCoord",
      "doc": "mediump int gl_PointCoord;\n\nThe built-in variable gl_PointCoord is used by the OpenGL ES 2.0 pipeline to hand over the coordinates of a point sprite to the fragment shader. The variable is read-only and the value is calculated and assigned by the OpenGL ES 2.0 pipeline based on the position and radius of the point sprite.\nSide note: A value for this variable is provided by the OpenGL ES 2.0 pipeline only if the rendered primitives are points.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_PointCoord",
      "matches": {
        "gl_PointCoord": true
      }
    },
    "f6146b13-8e5b-3139-a321-b6c313de6b16": {
      "content": "throw ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "thr": true
      }
    },
    "f6157874-0cc1-31df-a83a-8241c4f0d4e0": {
      "content": "\\begin{quotation}\n\t${1:TARGET}\n\\end{quotation}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{quotation} \\quotation": true,
        "quotation": true
      }
    },
    "f6187926-984e-3d28-8d16-08c444c2bd66": {
      "content": "text-emphasis: none;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:n": true
      }
    },
    "f61badf5-acf1-36bd-bda9-f3079524fedd": {
      "content": "reduce!(${1:f})(${2:xs});\n${0}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "reduce": true
      }
    },
    "f61d259d-56b9-3c55-b305-cc67f1950495": {
      "content": "white-space: pre",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "whs:p": true
      }
    },
    "f6265221-2f1e-377d-871c-cea8392c1f82": {
      "content": "<%= ${1:TARGET} %>${2}",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "ruby_print": true
      }
    },
    "f62fd382-d4b7-3ce8-ac8b-2ad87cd84865": {
      "content": "func $1($2) $3 {\n\t$0\n}",
      "doc": "Snippet for function declaration",
      "filetype": "go",
      "grammar": "lsp",
      "label": "function declaration",
      "matches": {
        "func": true
      }
    },
    "f63af769-6a1d-32de-a969-1c0f7c5728dd": {
      "content": "list-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lis:n": true
      }
    },
    "f640d181-6941-3ead-84a5-af19a078743c": {
      "content": "chore(${1:scope}): ${2:title}\n\n$0",
      "doc": "",
      "filetype": "gitcommit",
      "grammar": "lsp",
      "label": "chore conventional commit",
      "matches": {
        "chore": true
      }
    },
    "f64161ee-70e9-3633-be76-15d0014d20ec": {
      "content": "<%namespace file=\"${1:name}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "namespace": true
      }
    },
    "f64250b7-90e5-3d6c-ac12-3380ee159fe4": {
      "content": "float left",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fl:l": true
      }
    },
    "f6425c90-7255-33d3-bca5-a2926ba7f310": {
      "content": "${fn:indexOf(${1:string}, ${0:substr})}",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "indexof": true
      }
    },
    "f64589ed-c242-387f-9ad5-6074b750cc66": {
      "content": "for (${1:type} ${2:var} : ${3:iterable}) {\n\t$0\n}",
      "doc": "Enhanced for loop",
      "filetype": "java",
      "grammar": "lsp",
      "label": "foreach",
      "matches": {
        "foreach": true
      }
    },
    "f64d23a0-e2f9-3e25-8c18-1608c3ebe775": {
      "content": "module.exports = $1;",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "module.exports",
      "matches": {
        "ex": true
      }
    },
    "f64ea38b-b012-367a-8a09-afad22ceacc3": {
      "content": "background-attachment: ${1:scroll/fixed};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-attachment: scroll:fixed (background)",
      "matches": {
        "background": true
      }
    },
    "f64f23ac-e8b8-3e27-919c-7bef057527df": {
      "content": "ilgen\"${2|sub|}\"\n$0",
      "doc": "",
      "filetype": "vscode_cobol_dir",
      "grammar": "lsp",
      "label": "ilgen",
      "matches": {
        "ilgen": true
      }
    },
    "f656160b-59b9-3678-a714-99d93a1757ca": {
      "content": "\\begin{exampleblock}{${1:#:title}}\n\t${2:TARGET}\n\\end{exampleblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{exampleblock}": true,
        "exampleblock": true
      }
    },
    "f658a1f0-86ba-3f87-a934-41b9e0a4d846": {
      "content": "\\\\subsection{${1:subsection name}}%\n\\\\label{sub:${2:$1}}\n${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "\\subsection",
      "matches": {
        "sub": true
      }
    },
    "f65e5e22-936a-3b02-972f-4a335998d9bd": {
      "content": "list-style-type: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list": true
      }
    },
    "f661f5ca-4d83-393a-95e4-322dfaa5c108": {
      "content": "overflow-x ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovx": true
      }
    },
    "f66af462-3f79-37f6-b574-0ccf40aa95e4": {
      "content": "/**\n * ${6:undocumented class}\n */\nclass ${1:ClassName} ${2:extends ${3:AnotherClass}} ${4:implements ${5:Interface}}\n{\n\t$0\n}",
      "doc": "Documented Class Declaration",
      "filetype": "php",
      "grammar": "lsp",
      "label": "PHPDoc class …",
      "matches": {
        "doc_class": true
      }
    },
    "f66ea690-c778-3cd9-8ceb-a0ff989a6c07": {
      "content": "kruskal.test(${1:formula}, ${2:data}, ${3:subset}, ${4:na.action}, ${5:...})",
      "doc": "Kruskal-Wallis Rank Sum test",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "kr",
      "matches": {
        "kruskal": true
      }
    },
    "f670f9e6-aa8f-30fa-b13f-6edbc2d68c9d": {
      "content": "- (${1:id})${2:method};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "md": true
      }
    },
    "f674551f-bf8b-3499-a52e-dbdd42d47bd6": {
      "content": "\"blocks\": [\n\t{\n\t\t\"type\": \"$1\",\n\t\t\"name\": \"$2\",\n\t\t\"settings\": [\n\t\t\t$3\n\t\t]\n\t},$4\n]",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema blocks",
      "matches": {
        "_blocks": true
      }
    },
    "f6748a34-cf40-3ab2-997f-366ed1ccc256": {
      "content": "@override\nString toString() {\nreturn ${1:toString};\n }",
      "doc": "Returns a string representation of this object.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "toString",
      "matches": {
        "toStr": true
      }
    },
    "f67844e2-e7cc-3630-81f3-d652f8b51461": {
      "content": "<%namespace file=\"${0:name}\" />",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "namespace": true
      }
    },
    "f67a4ce3-51b8-3c5a-aeba-cfc338b26f42": {
      "content": "{\n\t\"type\": \"richtext\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"default\": \"<p>${0}</p>\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_richtext": true
      }
    },
    "f67d114e-6250-3431-8830-95dbc6a44cfd": {
      "content": "<template>\n\t<div>\n\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\t${0}\n\t}\n</script>\n\n<style lang=\"postcss\" scoped>\n\n</style>",
      "doc": "Base for Vue File with PostCSS",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "Vue Single File Component with postcss",
      "matches": {
        "vbase-pcss": true
      }
    },
    "f67d8a4e-dd9f-3aaa-9dda-efb86a03b8ff": {
      "content": "Set Global Variable    \\${${1:name}}    ${2:${value}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Set Global Variable",
      "matches": {
        "sgv": true
      }
    },
    "f6831f0a-e48d-3482-8512-cec6b0919b17": {
      "content": "align-content: space-between",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:sb": true
      }
    },
    "f6835360-65ed-3494-b531-6cb284fedb0c": {
      "content": "echo \"${0:message}\"",
      "doc": "Echo a message.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "echo",
      "matches": {
        "echo": true
      }
    },
    "f685df51-d22c-3469-bd64-dff6f99ef52d": {
      "content": "<%= $0 %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "<%= %>",
      "matches": {
        "=": true
      }
    },
    "f691b966-96d9-32e4-8df4-fac5ffc8b702": {
      "content": "{% block ${1:blockname} %}${VISUAL}{% endblock $1 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "iblock": true
      }
    },
    "f6926038-86c7-3aff-a2db-8af908cc20d5": {
      "content": "${1:callbacks}.fireWith(${2:this}, ${3:args})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Cfirew": true
      }
    },
    "f695a13f-4264-34b2-aa4b-546b068616a0": {
      "content": "border-collapse: collapse;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdcl:c": true
      }
    },
    "f695a7ba-39b2-3da0-b4d5-fc5e4617651c": {
      "content": "if [[ ${1:condition} ]]; then\n\t${0:${VISUAL}}\nfi",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f6a1bf2d-64b7-309d-9a76-4584f8dbce11": {
      "content": ".. toctree::\n\t:maxdepth: 2\n\n\t${0}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "toc:": true
      }
    },
    "f6a36c0f-f8b9-3663-badb-4c4bce81d162": {
      "content": "elif ${1} then\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "f6a9a923-9594-38c5-97c6-b8ef53b0210a": {
      "content": "import * as ${1} from '${2:$1}';",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "import * as xyz from 'xyz'",
      "matches": {
        "imas": true
      }
    },
    "f6b26f59-3d31-3024-a804-bdb5395e99de": {
      "content": "[[${0:TARGET}]]",
      "doc": "",
      "filetype": "lua",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "f6b8d6de-d9e8-3e81-94a9-16630c64f8c5": {
      "content": "<Link to=\"${1:/blog}\" activeClassName={\"${2:myActiveClassName}\"} >Text</Link>",
      "doc": "",
      "filetype": "gatsby",
      "grammar": "lsp",
      "label": "gatsby-link-activeclassname",
      "matches": {
        "gatsby link activeclassname": true
      }
    },
    "f6baa21a-2e35-3bbc-84e1-e99af6a343dd": {
      "content": "exit when ${1};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "exit when",
      "matches": {
        "ex": true
      }
    },
    "f6c314df-9ba2-3e03-ab37-d5aa35fcf252": {
      "content": "next { state | ${1:name} = ${1:name} + 1 }",
      "doc": "Functions can be defined on modules, components, stores and providers.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Next Call",
      "matches": {
        "next": true
      }
    },
    "f6c4a2b6-b1c9-39ac-9bd2-278e133b2f94": {
      "content": "time:\"$1\"",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "time": true
      }
    },
    "f6d0d469-e2d5-3c63-8720-09d4975ed212": {
      "content": "componentDidMount: ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define componentDidMount",
      "matches": {
        "componentDidMount": true
      }
    },
    "f6d36c71-950e-33dd-83f9-feadc5f766d1": {
      "content": "<-- $1",
      "doc": "Object A uses -> () <That is our use case notation to the left>",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Use Arrow (Right)",
      "matches": {
        "<": true
      }
    },
    "f6d5fbab-e78e-30cf-8c27-2323f6f596c2": {
      "content": "$this->${1:method}()->shouldNotHaveCount(${2:7});",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->XYZ()->shouldNotHaveCount(7)",
      "matches": {
        "sncount": true
      }
    },
    "f6d6ff1c-57ed-310e-ae27-94f6596a2e07": {
      "content": "$.isEmptyObject(${1:obj})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isempty": true
      }
    },
    "f6d83331-284f-3399-9484-a4c4046d7a6f": {
      "content": "@property ${1:/*type*/} ${2:/*member_name*/}() const pure nothrow {return ${3:$2_};}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "getter property (get)",
      "matches": {
        "get": true
      }
    },
    "f6d9eada-50f2-3248-a4e4-17df0f725611": {
      "content": "<audio\nsrc={${1:clip}}\nbind:${2:duration}\nbind:${3:buffered}\nbind:${4:played}\nbind:${5:seekable}\nbind:${6:seeking}\nbind:${7:ended}\nbind:${8:currentTime}\nbind:${9:playbackRate}\nbind:${10:paused}\nbind:${11:volume}\nbind:${12:muted}\n></audio>",
      "doc": "bind property",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-bind-audio",
      "matches": {
        "s-bind-audio": true
      }
    },
    "f6db27a9-5791-3071-8fce-df5a56da5cd9": {
      "content": "{:then ${1:value}}\n\t${2: <!-- content when promise was fulfilled -->}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-then-block",
      "matches": {
        "svelte then": true,
        "svthen": true
      }
    },
    "f6db619b-72b1-3a54-b1fa-944debfe646b": {
      "content": "Vue.mixin({${1:mixin}})",
      "doc": "Vue.mixin( mixin )",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mixin",
      "matches": {
        "VueMixin": true
      }
    },
    "f6dc266c-0bb4-3015-9d66-fe16b2f5f722": {
      "content": "type ${1:Type} struct {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "type T struct { ... }",
      "matches": {
        "st": true
      }
    },
    "f6e41f6a-6275-329f-80d8-e72edd669951": {
      "content": "{%- unless ${1:condition} -%}\n\t${0:${VISUAL}}\n{%- endunless -%}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless-": true
      }
    },
    "f6e71097-2eb0-3260-8b49-745fe79f9769": {
      "content": "${1:deferred}.isRejected()",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "Disrej": true
      }
    },
    "f6ea50c0-6b97-3b45-a8ec-2d0e89f70b45": {
      "content": "display: table-header-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbhg": true
      }
    },
    "f6ea5dfe-1166-3a73-8e19-4994e7193959": {
      "content": "render controller:",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "render :controller",
      "matches": {
        "rc": true
      }
    },
    "f6ead59b-60aa-3c96-9293-ee6ac8cd6f50": {
      "content": "printf(\"${1:%s}\\n\"${2});",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pr": true
      }
    },
    "f6ed1915-f596-3d09-a963-f4634d8e6606": {
      "content": "for ${1} {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "f6fa07f2-a514-366f-b665-1257de997f50": {
      "content": "number.lessThan()",
      "doc": "number.lessThan(max: number | Ref, message?: string | function): Schema\n\nValue must be less than max. The ${less} interpolation can be used in the\nmessage argument.",
      "filetype": "yup",
      "grammar": "lsp",
      "label": "number-less-than",
      "matches": {
        "yup number lessthan": true
      }
    },
    "f6fce6b5-4e3e-38f8-b0f2-acef829b3cf0": {
      "content": "before_update :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbu": true
      }
    },
    "f6fde73c-ac40-3232-b0b1-1eed47f7c464": {
      "content": "| map: '${1:key}'",
      "doc": "Array filter: map",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter map",
      "matches": {
        "map": true
      }
    },
    "f7021f31-8511-373c-8d73-772ce79cf00e": {
      "content": "import Modal from 'react-modal'",
      "doc": "import react-modal",
      "filetype": "react-modal",
      "grammar": "lsp",
      "label": "react-modal-import",
      "matches": {
        "imrm": true,
        "react-modal import": true
      }
    },
    "f7029c8e-e0d0-3554-8c1d-60b424c43a0e": {
      "content": "\\${1}${0}",
      "doc": "",
      "filetype": "neosnippet",
      "grammar": "snu",
      "label": "${1}",
      "matches": {
        "1": true
      }
    },
    "f707984d-d4a1-3248-9cb6-02e530403e2c": {
      "content": "{{ ${0} }}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "{": true
      }
    },
    "f70d17ef-20f1-3765-a534-329bb3842d96": {
      "content": "return (\n\t${0}\n);",
      "doc": "return complex value (such as JSX components)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "return-complex-value-such-as-jsx-components-",
      "matches": {
        "base return complex value": true
      }
    },
    "f723392e-afe2-3206-8408-d4f985b5e219": {
      "content": "${1:name}[${2:rows}, ${0:cols}]",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "df": true
      }
    },
    "f7289452-14f1-3cce-bc81-8c3b1e20270d": {
      "content": "PGraphics pg;\npg = createGraphics(${1:width}, ${2:height}${3:, }${0:applet});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pg": true
      }
    },
    "f7339c5a-0ddb-3f0a-b11f-350b3df5f63f": {
      "content": "== ${1:Title}\n\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "== heading on level 2",
      "matches": {
        "heading": true,
        "section": true
      }
    },
    "f73eff60-7907-37fa-8cd1-d58c4cb2acfa": {
      "content": "var(${0:${VISUAL}});",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "f7406c92-7147-3b1e-a28c-7009277b4e6d": {
      "content": "{% gist ${0:gist_id} %}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gist-short": true
      }
    },
    "f7529fc4-6569-3cec-9daa-2e5b4acd2941": {
      "content": "__SOURCE_FILE__",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "__FILE__",
      "matches": {
        "sourcef": true
      }
    },
    "f7550420-1782-3003-8d3a-e9827a329097": {
      "content": "self.${1:attribute} = $1",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "self.attribute = attribute",
      "matches": {
        "sa": true
      }
    },
    "f755120c-3059-38bc-98b5-0447cec6ec6d": {
      "content": "while(${1:cond}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "f75e4b4a-3a1a-319f-b87e-687dc930c0b8": {
      "content": "defp ${1:name}(${2:args}) when ${3:guard} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defpw": true
      }
    },
    "f764d57d-bdd1-31a4-a6eb-9ad771827f57": {
      "content": "\\\\begin{exampleblock}{${1:title}}\n\t${0:${VISUAL}}\n\\\\end{exampleblock}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "exampleblock environment",
      "matches": {
        "example": true
      }
    },
    "f76822ae-5ffa-3a40-a3c6-828c07fae6df": {
      "content": "<%doc>\n\t${0:}\n</%doc>",
      "doc": "",
      "filetype": "mako",
      "grammar": "snu",
      "label": "",
      "matches": {
        "doc": true
      }
    },
    "f76fc982-0ebb-3fad-950f-b923c0723c6d": {
      "content": "| divided_by: ${1:2}",
      "doc": "Math filter: divided by",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter divided by",
      "matches": {
        "divided_by": true
      }
    },
    "f7767e46-66e1-346c-bb11-d3973b0d3b75": {
      "content": "justify-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:c": true
      }
    },
    "f7768999-1164-3b81-92f5-d0f0e05abcd3": {
      "content": "#if ${1}\n  ${2:TARGET}\n#endif",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "#if .. #endif",
      "matches": {
        "#if": true
      }
    },
    "f777fe23-7af9-3abc-87f9-a50133661e00": {
      "content": "typedef NS_ENUM(NSUInteger, ${1:MyEnum}) {\n\t${2:MyEnumValueA},\n\t${3:MyEnumValueB},\n\t${4:MyEnumValueC},\n};",
      "doc": "Code snippet for NS_ENUM",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "nsenum",
      "matches": {
        "nsenum": true
      }
    },
    "f78070ab-c39b-3b95-b9d7-68ae5f847e11": {
      "content": ".. note::\n\t${0:my notes}",
      "doc": "",
      "filetype": "rst",
      "grammar": "snu",
      "label": "",
      "matches": {
        "not:": true
      }
    },
    "f78416f9-0545-3fa2-83c0-320d2ff0e7ec": {
      "content": "(cond\n\t[(${1}) ${0}])",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cond": true
      }
    },
    "f7982f00-f313-34c9-98db-e8bdfeac5b15": {
      "content": "where\n\t${1:fn} = ${0:undefined}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "where": true
      }
    },
    "f79a1e5c-af8e-3507-bc62-abf93ae01564": {
      "content": "while (condition)\n())",
      "doc": "Create a while loop",
      "filetype": "fennel",
      "grammar": "lsp",
      "label": "while",
      "matches": {
        "while": true
      }
    },
    "f7a3f85c-1417-39c1-81ed-1ea6f8089951": {
      "content": "<col>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "col": true
      }
    },
    "f7a705a5-ff08-3954-bd6e-2f535c7d6b90": {
      "content": "${1:FIELDNAME} = models.OneToOneField(${2:OtherModel}${3:, parent_link=True}${4:, related_name=''}${5:, limit_choices_to=}${0:, to_field=''})",
      "doc": "",
      "filetype": "django",
      "grammar": "snu",
      "label": "",
      "matches": {
        "o2o": true
      }
    },
    "f7b3302c-f7b6-3537-91b0-93a640f68f72": {
      "content": "@as(\"${1:aria-label}\")",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "alias",
      "matches": {
        "@a": true
      }
    },
    "f7b636be-41a2-343e-9d2f-0ccc7b645cad": {
      "content": "func main() {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "func main() { ... }",
      "matches": {
        "main": true
      }
    },
    "f7bd7d53-2ac4-3767-a69e-5c635d43de84": {
      "content": "${1:FIELDNAME} = forms.TimeField($2, required=${3:False})",
      "doc": "TimeField (ftime)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ftime",
      "matches": {
        "ftime": true
      }
    },
    "f7cc0185-1b6d-3efd-bd26-309e5f06c52f": {
      "content": "{% do view.registerCssFile \"${1:url}\" %}$0",
      "doc": "do css",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "docss",
      "matches": {
        "docss": true
      }
    },
    "f7d355b6-442c-309f-a582-f83032577ed3": {
      "content": "def method_missing(meth, *args, &blk)\n\t$0\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "method_missing definition",
      "matches": {
        "defmm": true
      }
    },
    "f7d869b5-926c-34e4-917f-2ba024ce65de": {
      "content": "console.dir('${0}:', ${0})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "console.dir",
      "matches": {
        "cod": true
      }
    },
    "f7dc551d-47f1-3d27-a1f9-18e8890af2be": {
      "content": "animate:${1:name}={${2:params}}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-animate",
      "matches": {
        "sva": true,
        "svelte animate": true
      }
    },
    "f7e00ee4-cc72-3bc0-bae2-a88066d62fda": {
      "content": "<link rel=\"alternate\" href=\"${1:rss.xml}\" title=\"RSS\" type=\"application/atom+xml\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "link:rss": true
      }
    },
    "f7e2966b-2d1d-3c7c-aca3-aac5dce175f4": {
      "content": "<h2 id=\"${1}\">${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2#": true
      }
    },
    "f7e44b83-a018-325d-94c0-b7cb77976dba": {
      "content": "$.ajaxSuccess(function (${1:e}, xhr, settings) {\n\t${2:// handler for when any AJAX call is successfully completed};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxsuccess": true
      }
    },
    "f7e4daf8-02e7-3dd7-8c9e-b4caf787b456": {
      "content": "render() {\n\treturn (\n\t\t<>\n\t\t\t${2}\n\t\t</>\n\t);\n}",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ren": true
      }
    },
    "f7e5615b-48db-3b3d-836d-7ff6c5e9cfe6": {
      "content": "&#x21E4;",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "backtab": true
      }
    },
    "f7e88a5c-3043-3a26-8311-c74af557a623": {
      "content": "{% url $1 as $2 %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url": true
      }
    },
    "f7ebf825-cb17-3ea4-9691-cbeab3f1b37e": {
      "content": "System.out.print(${1});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "print": true
      }
    },
    "f7f819ea-74a0-3cc4-b522-7b99e04a4a33": {
      "content": "_.deburr(${string})",
      "doc": "_.deburr('déjà vu');\n// => 'deja vu'\n\nDeburrs `string` by converting\n[Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\nand [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\nletters to basic Latin letters and removing\n[combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-deburr",
      "matches": {
        "lodash deburr": true
      }
    },
    "f7fc6ee0-5da6-3d3c-a972-2ca55de267cc": {
      "content": "JSON.stringify ${1}, void, 2",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "str": true
      }
    },
    "f8000010-17f9-314e-ab15-dce8f35e0f80": {
      "content": "${1:FIELDNAME} = models.FilePathField($2, path=${3:None}, match=${4:None}, recursive=${5:recursive}, max_length=${6:100})",
      "doc": "FilePathField (mfilepath).\n\nA CharField whose choices are limited to the filenames in a certain directory on the filesystem.",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mfilepath",
      "matches": {
        "mfilepath": true
      }
    },
    "f80664aa-0b46-3944-b3af-9ea150a3cfaa": {
      "content": "use GenServer\n\n@doc false\ndef start_link, do: GenServer.start_link(__MODULE__, ${1:Map.new})\n\n@impl true\ndef init(state), do: {:ok, state}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "basic genserver structure",
      "matches": {
        "genserver:": true
      }
    },
    "f80a93b9-d7c7-346d-8d2c-e64664e7fb01": {
      "content": "loop\n\t${0}\nend loop;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "loop": true
      }
    },
    "f80c8a93-f636-367f-b50f-7bb4088c3430": {
      "content": "${1:obj}.serializeArray()",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "serializea": true
      }
    },
    "f80fd2f6-a7ae-30f8-89de-c9518fab0048": {
      "content": "if (${1:true}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f813ffab-5ff2-3fb1-b3ca-31c98452b94b": {
      "content": "${1:method}(${2:arguments}) {\n\t${0}\n}",
      "doc": "method (ES6 syntax)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "method-es6-syntax-",
      "matches": {
        "base method": true
      }
    },
    "f81a623a-ced8-3143-b4b3-957ae8d05787": {
      "content": "@extend ${0:TARGET};",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@extend ...;",
      "matches": {
        "extend": true
      }
    },
    "f81b2615-4f2b-31c5-95ea-a863f0dbf9a4": {
      "content": "gl_MaxTextureImageUnits",
      "doc": "const mediump int gl_MaxTextureImageUnits >= 8\n\nThe built-in constant gl_MaxTextureImageUnits provides the maximum number of texture units that can be used by the fragment shader. The value of this variable is dependent on the OpenGL ES 2.0 implementation but has to be at least 8.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "gl_MaxTextureImageUnits",
      "matches": {
        "gl_MaxTextureImageUnits": true
      }
    },
    "f81dc602-c54f-3d4c-badb-525cb71cf8cf": {
      "content": "${1:name} :: ${2:a}\n$1 = ${0:undefined}",
      "doc": "",
      "filetype": "purescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn0": true
      }
    },
    "f81ea179-a8d9-3ab0-bef4-b67ffb5f9523": {
      "content": "let ${1:s:V} = vital#${2:#:plugin_name}#new()",
      "doc": "",
      "filetype": "vital",
      "grammar": "snu",
      "label": "let s:V = vital#...#new()",
      "matches": {
        "vital_new": true
      }
    },
    "f81f3f3d-ab75-350e-a98a-c458e2453437": {
      "content": "<%@ taglib uri=\"http://java.sun.com/jsp/jstl/functions\" prefix=\"fn\" %>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jstl:fn": true
      }
    },
    "f82eaba7-7619-3de5-bbcc-953cac9d24ba": {
      "content": "signal ${1} : std_logic;",
      "doc": "",
      "filetype": "vhdl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "st": true
      }
    },
    "f8323ac4-7500-33bf-98ce-08de4aa99b5f": {
      "content": "console.table(${1:object});",
      "doc": "Displays tabular data as a table.",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "consoleTable",
      "matches": {
        "clt": true
      }
    },
    "f833b79e-baf2-3628-aecc-161d98c323ec": {
      "content": "<h4 class=\"${1}\">${0}</h4>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h4.": true
      }
    },
    "f837324e-fa45-30f9-a8ed-9461acad70bb": {
      "content": "|> List.map (fun ${1} -> ${0})",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lmap": true
      }
    },
    "f83ec916-deb7-35ab-a107-875cbd3dcdb2": {
      "content": "outer(${1:X}, ${2:Y}, ${3:FUN = ${4:\"*\"}}, ${5:...})",
      "doc": "Outer",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "out",
      "matches": {
        "outer": true
      }
    },
    "f8489ef3-163d-3c4a-ac76-b5ccb6ed0c0c": {
      "content": "sap.ui.layout.VerticalLayout.extend(\"$1\", {\n    metadata: {\n\tproperties: {\n\t  \t$2\n\t},\n\taggregations: {\n\t\t$3\n\t},\n\tevents: {\n\t\t$4\n\t}\n    },\n   init: function(){\n\t$5\n    },\n\n    renderer: \"$6\"\n});",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "extendVerticalL": true
      }
    },
    "f854db9d-9454-35fd-ad69-2d58db6278f1": {
      "content": "PropTypes.number,",
      "doc": "Number prop type",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeNumber",
      "matches": {
        "ptn": true
      }
    },
    "f8557cf5-22f3-3f94-88a2-bc077d6bc108": {
      "content": "parse(Float64, \"${1:value}\")",
      "doc": "Code snippet for parsing a String to Float64.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "parse Float",
      "matches": {
        "parsef": true,
        "pfloat": true
      }
    },
    "f857be49-7a8d-3895-8347-303698a045b2": {
      "content": "overflow-style move",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:mv": true
      }
    },
    "f85d5c6e-7460-319c-beae-0302f8d9f3b0": {
      "content": "${1:#:expression} if ${2:#:condition};",
      "doc": "",
      "filetype": "perl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "xif": true
      }
    },
    "f87c5319-a7cc-30a6-92be-b9d6dd1abec0": {
      "content": "${1:obj}.toggle('${2:slow/400/fast}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "togsh": true
      }
    },
    "f87de354-8145-3af2-bed2-4992798a29da": {
      "content": "case ${1:0}:\n\t${2}\n\tbreak;",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cs": true
      }
    },
    "f87e800a-2cca-3ea2-9d2d-83f56e1b0bcd": {
      "content": "def ${1:name}() do\n  $0\nend",
      "doc": "Define a function",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "def",
      "matches": {
        "def": true
      }
    },
    "f884c143-e364-3716-b071-330ca8faf1be": {
      "content": "use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Route;$1",
      "doc": "",
      "filetype": "php-symfony2",
      "grammar": "snu",
      "label": "Symfony2 use Sensio\\..\\Route",
      "matches": {
        "useroute": true
      }
    },
    "f88e4b55-d320-3b78-ac08-cf8b82ad7dd4": {
      "content": "if (${1})\n\t${2:${VISUAL}}\nelse\n\t${0}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ife": true
      }
    },
    "f8903ffb-c82b-39fe-af54-22f2abb6b1db": {
      "content": "border-fit clip",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      }
    },
    "f897323a-1ac9-3325-a4b7-299b69efd232": {
      "content": "align-self: last baseline",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as:lb": true
      }
    },
    "f89e6914-9db6-3430-a55a-999b4d756f63": {
      "content": "import React, { Component } from 'react'\n\ntype Props = {}\n\ntype State = {}\n\nexport default class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {\n  state = {}\n\n  render() {\n    return (\n      <div>${1:first}</div>\n    )\n  }\n}",
      "doc": "Creates a React component class with ES7 module system and TypeScript interfaces",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "typescriptReactClassComponent",
      "matches": {
        "tsrcc": true
      }
    },
    "f8a501af-c80c-336b-9a05-d951b19ee134": {
      "content": "$scope.${1:functionName} = (${2:args}) ->\n\t${3}",
      "doc": "",
      "filetype": "angular_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "$f": true
      }
    },
    "f8ac94b7-1718-3d75-bcdc-e3331bff0a0b": {
      "content": "echo CHtml::image('${1:src}', '${2:alt}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhimg": true
      }
    },
    "f8adaf06-365c-333b-ae59-9970eb0c7e9e": {
      "content": "#region $0",
      "doc": "Folding Region Start",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "Region Start",
      "matches": {
        "#region": true
      }
    },
    "f8b0f917-cb18-328e-b317-f74dac26f6bb": {
      "content": "padding-left: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "padding-left": true,
        "pl": true
      }
    },
    "f8b8bd97-0e90-3969-a3d5-bc3541dd25a8": {
      "content": "await tick()",
      "doc": "svelte tick function",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-tick",
      "matches": {
        "s-tick": true
      }
    },
    "f8bca331-e822-3212-9ee2-7a685a867d22": {
      "content": "while (${1:condition}) {\n\t${2:statement}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "f8c2bc5c-9668-3338-b64a-16ccb8330e5f": {
      "content": "fmt.Printf(\"%${1:s}\\n\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Printf()",
      "matches": {
        "pf": true
      }
    },
    "f8c2edc0-88da-3105-bfa3-3f29e2b332cd": {
      "content": "formControlName=\"${1:control}\"",
      "doc": "Angular formControlName",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngformcontrolname",
      "matches": {
        "a-formcontrolname": true,
        "angular ng form control name": true
      }
    },
    "f8cb2ff6-9264-3a8b-a80c-f9033535a63d": {
      "content": "${1:obj}.show('${2:slow/400/fast}', function () {\n\t${0:// callback}\n});",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "showc": true
      }
    },
    "f8d29182-256f-3cc9-aa3f-fed636449022": {
      "content": "for (${1} : ${2}) {\n    ${3:TARGET}\n}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fore": true,
        "foreach": true
      }
    },
    "f8e337dc-8210-329e-9cd8-647758aa4142": {
      "content": "font-family ${0:'Monotype Corsiva','Comic Sans MS'},cursive",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ff:c": true
      }
    },
    "f8e4ebb1-a124-303f-9fea-c12c84436e1d": {
      "content": "require('./${1:module}');",
      "doc": "require local",
      "filetype": "base",
      "grammar": "lsp",
      "label": "require-local",
      "matches": {
        "base require local": true
      }
    },
    "f8efcf53-ffa2-33d8-be06-2e7a09647df3": {
      "content": "${1} {\n\t${2:${VISUAL}}\n}${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "selector { }",
      "matches": {
        ".": true
      }
    },
    "f8fcaefc-51cb-3198-bd07-98e33469ed7e": {
      "content": "proc ${1:function_name} {${2:args}} {\n\t${0}\n}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pro": true
      }
    },
    "f8febd11-4da4-396d-9cea-83f3ccf2d968": {
      "content": "<meta http-equiv=\"refresh\" content=\"3;url=${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "meta:refresh": true
      }
    },
    "f90542b9-889f-30bb-bb6a-964beae1bfb8": {
      "content": "var _self = this;",
      "doc": "",
      "filetype": "javascript-openui5",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_sthis": true
      }
    },
    "f906180b-2e8e-3dca-bc88-92d87b254495": {
      "content": "results.report('${1:name}:') { TESTS.times { ${0} } }",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rep": true
      }
    },
    "f909263b-bf9a-3a23-89ad-75d8045d3bbf": {
      "content": "match ${1:(* e1 *)} with\n| ${2:p} -> ${3:e2}",
      "doc": "",
      "filetype": "ocaml",
      "grammar": "snu",
      "label": "match",
      "matches": {
        "match": true
      }
    },
    "f90c284e-99c4-3432-9884-18457ff98c35": {
      "content": "const ref = React.createRef()",
      "doc": "Forward ref statement used inside component",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-forwardref",
      "matches": {
        "fref": true,
        "react forwardref": true
      }
    },
    "f91e9808-d5a5-3ef1-b453-5a79ae2d680b": {
      "content": "this.setState($0)",
      "doc": "Performs a shallow merge of nextState into current state",
      "filetype": "react",
      "grammar": "lsp",
      "label": "componentSetStateObject",
      "matches": {
        "sst": true
      }
    },
    "f91ebb06-a3e0-34d7-952d-6ad9682a4e07": {
      "content": "PropTypes.element.isRequired,",
      "doc": "React element prop type required",
      "filetype": "react",
      "grammar": "lsp",
      "label": "propTypeElementRequired",
      "matches": {
        "ptelr": true
      }
    },
    "f92aab73-a463-3134-ad58-63eec97160dd": {
      "content": "text-align right",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ta:r": true
      }
    },
    "f92bdc5f-430c-322c-b8f6-2e87dadefb30": {
      "content": "> ${1}",
      "doc": "Insert quoted text",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert quoted text",
      "matches": {
        "quote": true
      }
    },
    "f92d079e-9b90-3605-9263-96bcc04a3f23": {
      "content": "tan(${0:rad});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tan": true
      }
    },
    "f93195aa-4193-37bd-a18e-a940f7d3afbb": {
      "content": "__shared__ ${1:int} ${2:memo}[${3:SIZE}];${0}",
      "doc": "",
      "filetype": "cuda",
      "grammar": "snu",
      "label": "Shared memory declaration",
      "matches": {
        "share": true
      }
    },
    "f9337282-ca67-3e32-8b91-72f0cdf23b20": {
      "content": "z-index: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "z": true
      }
    },
    "f93b1184-61c8-3dfe-9713-1b09a8f6f499": {
      "content": "println!(\"${1}\");",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "println!",
      "matches": {
        "pln": true
      }
    },
    "f93c6db5-e4f7-30ee-8fe9-ad90b68f9f54": {
      "content": "BACKUP DATABASE ${1:dbName}\n\tTO DISK ${2:filepath};",
      "doc": "Backup database",
      "filetype": "sql",
      "grammar": "lsp",
      "label": "bakupd",
      "matches": {
        "bakupd": true
      }
    },
    "f93e541e-8c37-352e-bc2e-4d6d8d39291a": {
      "content": "console.clear()",
      "doc": "Clears the console",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "consoleClear",
      "matches": {
        "ccl": true
      }
    },
    "f9422c68-c810-3272-abb4-f542a8ba45aa": {
      "content": "${1}:\nfor ${2:I} in ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for",
      "matches": {
        "nfor": true
      }
    },
    "f944bf65-3366-3877-aaf5-979aca6dfbf8": {
      "content": "case(${1})\n\t${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "case",
      "matches": {
        "case": true
      }
    },
    "f94e6309-7632-3d72-b656-b318fa36b6db": {
      "content": "defmodule ${1:AppName}Web.${2:ChannelName}Channel do\n\tuse $1Web, :channel\nend",
      "doc": "",
      "filetype": "phoenix",
      "grammar": "snu",
      "label": "",
      "matches": {
        "chan": true
      }
    },
    "f9505b73-df7b-358a-a2ac-0da38367a282": {
      "content": "text-transform none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt:n": true
      }
    },
    "f9522ff9-0c6f-3264-8170-51ac68940f63": {
      "content": "else {\n\t${0}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "",
      "matches": {
        "else": true
      }
    },
    "f954149b-a7ef-3825-b279-4e434fd3ae8b": {
      "content": "constructor (props, context) {\n\tsuper(props, context)\n\t$0\n}",
      "doc": "Adds a default constructor for the class that contains props and context as arguments",
      "filetype": "react",
      "grammar": "lsp",
      "label": "classConstructorContext",
      "matches": {
        "conc": true
      }
    },
    "f958dbd7-9fe8-3e5c-aded-e19b46815d7e": {
      "content": "else if ${1:condition}\n\t${2}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "elif": true
      }
    },
    "f96a5c05-817b-31a9-8400-d41fed05837a": {
      "content": "require 'test/unit'\n\nrequire 'tc_${1:test_case_file}'\nrequire 'tc_${2:test_case_file}'",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ts": true
      }
    },
    "f96a65c3-23a9-348a-a401-41f4a7d1e354": {
      "content": "property ${1:name} : ${2:Number} = ${0:0}",
      "doc": "The property keyword when used in a store defines part of the data that the store contains.",
      "filetype": "mint",
      "grammar": "lsp",
      "label": "Store property",
      "matches": {
        "prop": true
      }
    },
    "f96c54a6-ea13-35e1-96f4-70b00431fcf1": {
      "content": "{% ifequal $1 %}\n  \n{% endifequal %}",
      "doc": "ifequal tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "ifequal",
      "matches": {
        "ifeq": true
      }
    },
    "f96e824d-6052-30df-9e8c-ef5c2bf064f1": {
      "content": "it('should $1', () => {\n  $0\n})",
      "doc": "Testing `it` block",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "itBlock",
      "matches": {
        "tit": true
      }
    },
    "f96fab2e-5c65-3ddc-b2df-c75681fe7fba": {
      "content": "font-stretch ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fst": true
      }
    },
    "f9722a42-3042-3ea7-bb55-4a2b71af5cdb": {
      "content": "{% if $1 %}\n  \n{% endif %}",
      "doc": "if tag django template",
      "filetype": "djangohtml",
      "grammar": "lsp",
      "label": "if",
      "matches": {
        "if": true
      }
    },
    "f972d40f-9dbd-3497-9665-79d7f82a7459": {
      "content": "source :rubygems",
      "doc": "",
      "filetype": "Gemfile",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source-rubygems": true
      }
    },
    "f97bde40-4e0c-38af-a376-cb617b0d31d4": {
      "content": "mixins: [${1:mixinName}],",
      "doc": "vue use mixin",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-use-mixin",
      "matches": {
        "vmixin-use": true,
        "vue use mixin": true
      }
    },
    "f97cbd32-d719-3280-b96b-3ef9bf7f0a5b": {
      "content": "{%- when ${condition} -%}\n${code:}",
      "doc": "Control flow tag: when",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag when",
      "matches": {
        "when": true
      }
    },
    "f9802d6b-363a-37c4-b3fb-aff1bc8c2a83": {
      "content": "void keyReleased(){\n\t${0}\n}",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "keyReleased": true
      }
    },
    "f9815b82-8dcb-3cb8-9a01-84cebcb82327": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "awk",
      "grammar": "snu",
      "label": "if {...}",
      "matches": {
        "if": true
      }
    },
    "f98294b1-d2e9-36dd-841a-6b7d0596e4ee": {
      "content": "border: ${1};${2}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "b": true,
        "border": true
      }
    },
    "f982dc77-e497-366a-a32b-9343e9616440": {
      "content": "expect($1).toBeLessThanOrEqual($0);",
      "doc": "expects the argument is less than or equal",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tobelessthanorequal",
      "matches": {
        "jest expect tobelessthanorequal": true,
        "tblte": true
      }
    },
    "f9836d84-e561-360b-8264-d90a4b7ed633": {
      "content": "module ${1:mod} (\n\t\t${2:export}\n\t${3:, ${4:export}}\n) where$0",
      "doc": "simple module with exports",
      "filetype": "haskell",
      "grammar": "lsp",
      "label": "module exports",
      "matches": {
        "mod exports": true,
        "modu": true
      }
    },
    "f9859e86-e77d-3626-8de6-0ed1010a75c2": {
      "content": "import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: ${1:'root'} })\nexport class ${2:YourResolver} implements Resolve<${3:ObjectToResolve}> {\n\tresolve(route: ActivatedRouteSnapshot): Observable<${3:ObjectToResolve}> | Promise<${3:ObjectToResolve}> | ${3:ObjectToResolve} {\n\t\treturn ${0};\n\t}\n}",
      "doc": "Angular Resolver",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Angular Resolver",
      "matches": {
        "a-resolver": true
      }
    },
    "f98f8020-cac1-370d-8c14-131b1ece5067": {
      "content": "tell ${1:#:app}\n\t${0:TARGET}\nend tell",
      "doc": "",
      "filetype": "applescript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tell": true
      }
    },
    "f9959aff-c414-3da9-a6b2-9ba61ba59026": {
      "content": "font: ${1:1em} ${2:Arial},${0:sans-serif}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "f+": true
      }
    },
    "f997eb61-dce9-3761-9d54-e56607675cf3": {
      "content": "@after-leave='$1'$0",
      "doc": "@after-leave=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "after-leave",
      "matches": {
        "afterLeaveEvent": true
      }
    },
    "f99bd068-ee2d-3883-90fd-e7510f8b074d": {
      "content": "${1:iterable}.some((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "some",
      "matches": {
        "some": true
      }
    },
    "f99e1ec4-e8e4-3b09-a0fa-0d6e8c530491": {
      "content": "Session::set(${1:key});",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_session_destroy": true
      }
    },
    "f9a35489-3c2a-3a3f-ac0a-13784d8ecc93": {
      "content": "{#await ${1:promise} then ${2:value}}\n\t${3: <!-- content when promise was fulfilled -->}\n{/await}",
      "doc": "",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-await-short-block",
      "matches": {
        "svawait-short": true,
        "svelte await short": true
      }
    },
    "f9a3bc5b-b635-3566-949a-c9c2d017ce8a": {
      "content": "${1:obj}.fadeIn 'slow/400/fast', ->\n\t${0:// callback}",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fadeinc": true
      }
    },
    "f9a45fd2-639b-33d3-9cab-1f7a425e93b7": {
      "content": "class ${1:class_name}(${2:class_params})\n\t${0:/* members/methods */}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "f9ad1c32-e10a-33a9-acd4-352c1a2e2642": {
      "content": "let ${1:name} = yield ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "let assignment yielded",
      "matches": {
        "ly": true
      }
    },
    "f9ad7258-ce34-3feb-bfcc-2ed96f9a2f48": {
      "content": "import styled from 'styled-components';\n\nconst ${1} = styled.${2}`\n  ${3}\n`;\n\nexport default ${1};",
      "doc": "Styled-Components file",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-components-file",
      "matches": {
        "scf": true,
        "styled-components file": true
      }
    },
    "f9afd17f-9953-31eb-9e89-3928ec87883f": {
      "content": "dbg!(${0:${VISUAL}})",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "dbg! debugging macro",
      "matches": {
        "d": true
      }
    },
    "f9b53845-4f83-3854-aaa5-0762b1f887da": {
      "content": "unless ${1:condition}\n\t${0:${VISUAL}}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "unless": true
      }
    },
    "f9bd278c-4512-3e8b-80fa-743e4c3cac7e": {
      "content": "var ${1:function_name} = function (${2:argument}) {\n\t${3}\n\n\t$1 = function ($2) {\n\t\t${0:${VISUAL}}\n\t};\n};",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sdf": true
      }
    },
    "f9bd4467-6492-310d-9316-b2495bfce198": {
      "content": "class ${1} {\n\tconstructor(${2}) {\n\t\t${0:${VISUAL}}\n\t}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "clac": true
      }
    },
    "f9c344e4-664c-3fca-ad2a-edbdca47c268": {
      "content": "SUBTRACT ${1:a} FROM ${2:b} GIVING ${3:c}",
      "doc": "SUBTRACT a FROM b GIVING c",
      "filetype": "vscode_cobol",
      "grammar": "lsp",
      "label": "SUBTRACT",
      "matches": {
        "SUBTRACT": true
      }
    },
    "f9c38c44-f0f1-3761-8a3a-e4e977a74c6b": {
      "content": "define \"${1:#name}\", [\"${2:#dependencies1}\"], (${3:#dependencies2}) ->\n\t${0:TARGET}",
      "doc": "",
      "filetype": "requirejs_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "defn": true
      }
    },
    "f9d958e7-85da-36ee-a396-618bcabb1bdc": {
      "content": "const $1 = useContext($2)$0",
      "doc": "React useContext() hook",
      "filetype": "react",
      "grammar": "lsp",
      "label": "useContext",
      "matches": {
        "uc": true
      }
    },
    "f9decffe-40ae-38ef-9705-52b92f5474cf": {
      "content": "return [\n\t${0}\n]",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "return new array",
      "matches": {
        "ra": true
      }
    },
    "f9e16625-62e9-3dea-8c5c-301e2ee50ab0": {
      "content": "import React, { Component } from 'react'\n\nexport class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t$0\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",
      "doc": "Creates a React component class with ES7 module system",
      "filetype": "react",
      "grammar": "lsp",
      "label": "react-class-export-component",
      "matches": {
        "rce": true,
        "react component class export": true
      }
    },
    "f9e30482-7b53-3906-af00-f0fd78bd2caa": {
      "content": "?assert(${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "as": true
      }
    },
    "f9e45096-900e-36c8-9fb7-bb6579b08efa": {
      "content": "map[${1:keytype}]${2:valtype}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Map type",
      "matches": {
        "map": true
      }
    },
    "f9e46f00-bde4-3b49-bfa4-6157b856ba53": {
      "content": "with ${1:expression} as ${2:target}:\n\t${3:pass}",
      "doc": "Code snippet for a with statement",
      "filetype": "base",
      "grammar": "lsp",
      "label": "with",
      "matches": {
        "with": true
      }
    },
    "f9e64996-55d4-3489-95d7-97287b1f1ef4": {
      "content": "#+STARTUP: showall indent\n#+STARTUP: hidestars\n#+BEGIN_HTML\n---\nlayout: default\ntitle: ${1:title}\nexcerpt: ${2:excerpt}\n---\n$0",
      "doc": "blog",
      "filetype": "org",
      "grammar": "lsp",
      "label": "blog",
      "matches": {
        "blog": true
      }
    },
    "f9eb1402-c792-342e-a114-3cbb60b2a6f8": {
      "content": "IF ${1:Condition}\nTHEN ${2:Action}\n${3:ELSE ${4:OtherWise}}",
      "doc": "",
      "filetype": "progress",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "f9ee05e7-4ea6-3fea-a021-011f04ff030a": {
      "content": "~w($0)a",
      "doc": "",
      "filetype": "elixir",
      "grammar": "lsp",
      "label": "atom list",
      "matches": {
        "wl": true
      }
    },
    "f9f71c0b-173e-3a33-99f1-f83660b4711e": {
      "content": "else\n\t${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "el": true
      }
    },
    "f9f91e57-ff26-30a4-b570-bc80caaed808": {
      "content": "text-emphasis: accent",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "te:ac": true
      }
    },
    "f9fa3106-2a14-35b4-8a1b-287739b1d9f7": {
      "content": "PropTypes.instanceOf($0).isRequired,",
      "doc": "Is an instance of a class prop type required",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "propTypeInstanceOfRequired",
      "matches": {
        "ptir": true
      }
    },
    "f9fa9366-3a88-3f37-bab1-3e8aaca3c4a1": {
      "content": "constructor () {\n\t${0}\n}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "constructor",
      "matches": {
        "cn": true
      }
    },
    "fa00167e-41d4-3511-95c9-279ec3e8c075": {
      "content": "after :${1:each} do\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "aft": true
      }
    },
    "fa01823d-5e4f-314a-9e90-edd4339e0259": {
      "content": "{% elif ${0:condition} %}",
      "doc": "",
      "filetype": "htmltornado",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eif": true
      }
    },
    "fa15067f-ab9d-35a2-a6ae-a29329ca0981": {
      "content": "color: #${0:000}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "c": true
      }
    },
    "fa17414f-9ca3-37f0-b301-5f955fa61bd7": {
      "content": "_.isEqualWith(${value}, ${other}, ${customizer})",
      "doc": "function isGreeting(value) {\n  return /^h(?:i|ello)$/.test(value);\n}\n\nfunction customizer(objValue, othValue) {\n  if (isGreeting(objValue) && isGreeting(othValue)) {\n    return true;\n  }\n}\n\nvar array = ['hello', 'goodbye'];\nvar other = ['hi', 'goodbye'];\n\n_.isEqualWith(array, other, customizer);\n// => true\n\nThis method is like `_.isEqual` except that it accepts `customizer` which\nis invoked to compare values. If `customizer` returns `undefined`, comparisons\nare handled by the method instead. The `customizer` is invoked with up to\nsix arguments: (objValue, othValue [, index|key, object, other, stack]).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isequalwith",
      "matches": {
        "lodash isequalwith": true
      }
    },
    "fa194158-26db-38fd-96e7-2a973d4f59f4": {
      "content": "try:\n  ${1:pass}\nfinally:\n  ${2:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "try: ... finally: ...",
      "matches": {
        "tryfinally": true
      }
    },
    "fa1cb8ef-535d-33c9-8b25-39dce4f8f6c6": {
      "content": "| url_encode",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "url_encode": true
      }
    },
    "fa2004c4-5299-3505-a3d1-97e50b12254e": {
      "content": "bulk collect into ${0}",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bc": true
      }
    },
    "fa2017d6-3088-3bab-a294-9c719b768f97": {
      "content": "{% for ${1} in ${2} %}\n\t${3}\n{% else %}\n\t${0}\n{% endfor %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig for else",
      "matches": {
        "fore": true
      }
    },
    "fa259635-2ecc-355f-ac61-e910baea6a52": {
      "content": "Vue.config.warnHandler = function (msg, vm, trace) {\n\t${1:// handle warn}\n}",
      "doc": "Vue.config.warnHandler",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "warnHandler",
      "matches": {
        "VueConfigWarnHandler": true
      }
    },
    "fa25e2a9-6676-3439-ab98-11d134cf5b21": {
      "content": "{% comment %}\n\t${0}\n{% endcomment %}",
      "doc": "",
      "filetype": "jinja",
      "grammar": "snu",
      "label": "",
      "matches": {
        "comment": true
      }
    },
    "fa2731a3-3c34-3c52-87bc-5c1976af36b8": {
      "content": "place-content: center;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pc:c": true
      }
    },
    "fa289d00-b39a-3dd1-ac24-5b19a4e226b3": {
      "content": "padding-top ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pt": true
      }
    },
    "fa2df070-6ad5-3567-b925-8cdc74eebeff": {
      "content": "_.startCase(${string})",
      "doc": "_.startCase('--foo-bar--');\n// => 'Foo Bar'\n\n_.startCase('fooBar');\n// => 'Foo Bar'\n\n_.startCase('__FOO_BAR__');\n// => 'FOO BAR'\n\nConverts `string` to\n[start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-startcase",
      "matches": {
        "lodash startcase": true
      }
    },
    "fa2f00c8-a7b0-38ff-80f3-0b2918ac20ca": {
      "content": "for ${1} in ${2} {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "forin  {}",
      "matches": {
        "forin": true
      }
    },
    "fa2fb723-934d-3404-921a-7dd5aef66a16": {
      "content": "length(${1:x})",
      "doc": "Length",
      "filetype": "r-snippets",
      "grammar": "lsp",
      "label": "len",
      "matches": {
        "length": true
      }
    },
    "fa3170e6-72a0-3944-a6d1-e04cb6e2cd23": {
      "content": "[[${1:foo} alloc] init${2}];",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "a": true
      }
    },
    "fa34c6d9-c9a5-3e0d-b1b5-b66b9df14bab": {
      "content": "\\begin{upshape}\n\t${1:TARGET}\n\\end{upshape}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{upshape} \\upshape": true,
        "upshape": true
      }
    },
    "fa376c00-9cea-3879-87ee-0fcc54067d53": {
      "content": "${1:obj}.removeAttr('${2:attribute name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rema": true
      }
    },
    "fa421055-1568-3dc5-9f11-586fbeee6cef": {
      "content": "shouldComponentUpdate: (nextProps, nextState) ->\n\t$1",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React define shouldComponentUpdate",
      "matches": {
        "shouldComponentUpdate": true
      }
    },
    "fa4690ad-80d7-3e7e-96fe-0472eae9b3e0": {
      "content": "entry ${1}(${2}) when ${3} is\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "entry {...} when",
      "matches": {
        "entry": true
      }
    },
    "fa5b91c9-d187-3160-853b-434bb0c29111": {
      "content": "<?php\n\tnamespace Controllers;\n\tuse Core\\View;\n\tuse Core\\Controller;\n\n\tclass ${1:class_name} extends Controller\n\t{\n\t\tpublic function __construct()\n\t\t{\n\t\t\tparent::__construct();\n\t\t}\n\n\t\tpublic function index()\n\t\t{\n\t\t\t${2:}\n\t\t}\n\t}",
      "doc": "",
      "filetype": "simplemvcf",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sm_controller": true
      }
    },
    "fa5e23f8-8fe3-3613-bdb6-942e371a16eb": {
      "content": "{% else %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig else",
      "matches": {
        "el": true
      }
    },
    "fa5e6bf2-ac92-3430-a6b3-876764521484": {
      "content": "$this->db->where(\"${1:key}\", \"${2:value}\");${3}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_db-where": true
      }
    },
    "fa6446ac-6bb1-3de0-8b91-1b7c2aea4584": {
      "content": "border-left-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdlw": true
      }
    },
    "fa65940f-5008-3cde-9505-34952e4bd91b": {
      "content": "for (${1:item} in ${2:list}) {\n\t${3}\n}",
      "doc": "",
      "filetype": "r",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "fa68398d-c7e2-3929-b6ce-55cbe060974c": {
      "content": "urlpatterns = [\n\t$0\n]",
      "doc": "",
      "filetype": "urls",
      "grammar": "lsp",
      "label": "urlpatterns",
      "matches": {
        "urlpatterns": true
      }
    },
    "fa6e449d-9a31-378c-ac38-4bf5cb4b8d57": {
      "content": "<address>\n\t${0}\n</address>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "address": true
      }
    },
    "fa70410f-ada0-3611-9dc2-a15a2699d3da": {
      "content": "self.assertIsNotNone(${1:actual}${2:, '${3:message}'})$0",
      "doc": "",
      "filetype": "unittest",
      "grammar": "lsp",
      "label": "Assert is not None",
      "matches": {
        "asinno": true
      }
    },
    "fa70c4c3-e638-31a4-95b5-a67fc3538ff9": {
      "content": "text-wrap none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tw:no": true
      }
    },
    "fa7261bd-62e2-3e31-a817-43a9e11ef837": {
      "content": "page-break-before: auto;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pgbb:a": true
      }
    },
    "fa7e07cc-73ed-3b73-af0a-30cdc567dc30": {
      "content": "[${1:#:link}](mailto:${2:#:email})${3}",
      "doc": "",
      "filetype": "markdown",
      "grammar": "snu",
      "label": "[link](email)",
      "matches": {
        "linkemail": true
      }
    },
    "fa80e602-178e-36d5-93a3-8a09496f242d": {
      "content": "const ${1:instance} = axios.create({\n\tbaseURL: '${2:uri}',\n\ttimeout: $3,\n\theaders: {'${4:key}': '${5:value}'}",
      "doc": "Create an Axios instance for requests",
      "filetype": "axios",
      "grammar": "lsp",
      "label": "axios-instance",
      "matches": {
        "axios instance": true
      }
    },
    "fa813940-46b9-3652-9248-46dfa3f9377c": {
      "content": "<progress>${0}</progress>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "progress": true
      }
    },
    "fa82ce11-fbd1-3d3a-8298-e4c341cfc4b5": {
      "content": "${1:ModelName}::model()->find(${2:condition},array('${3:key}'=>${0:value}));",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yfind": true
      }
    },
    "fa83474d-d94b-33a9-bbf9-1973ee5e1e69": {
      "content": "list-style-image none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lisi:n": true
      }
    },
    "fa8cf32f-eb08-3a49-846a-4be75235defd": {
      "content": "font-weight bold",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fw:b": true
      }
    },
    "fa8f4376-ba5b-384f-a73c-724acd4a94b0": {
      "content": "border-right-color: #${1:999};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "border-left-color: color (border)",
      "matches": {
        "border": true
      }
    },
    "fa960909-b5ec-39ea-95a5-865a81d98adc": {
      "content": "$this->form_validation->set_rules(\"${1:field}\", \"${2:label}\", \"${3:trim|required}\");${4}",
      "doc": "",
      "filetype": "codeigniter",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ci_form_validation-set_rules": true
      }
    },
    "fa9866c0-8d55-3c21-99e9-8ee989c8d3bb": {
      "content": "System.err.printf(\"${1:Message}\", ${0:exception});",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "errf": true
      }
    },
    "fa9c5767-6cd0-3af9-85e4-f24e6979988f": {
      "content": "PropTypes.arrayOf($0),",
      "doc": "An array of a certain type",
      "filetype": "prop-types",
      "grammar": "lsp",
      "label": "prop-type-array-of",
      "matches": {
        "prop-types arrayof": true,
        "ptao": true
      }
    },
    "fa9c68f3-347a-31b3-bc96-c5053e92caa6": {
      "content": "display run-in",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:ri": true
      }
    },
    "faa698e6-fce0-33a8-bbc3-373558b1e119": {
      "content": "it { should validate_confirmation_of :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "isvc": true
      }
    },
    "faa8c394-a524-3d03-bb72-de26dda1aa64": {
      "content": "Plug '${1}', { 'tag': '${0}' }",
      "doc": "",
      "filetype": "vim",
      "grammar": "snu",
      "label": "vim-plug Plugin definition with { 'tag': '' }",
      "matches": {
        "plugtag": true
      }
    },
    "fab1e771-07c0-3160-88d7-6a69fb9eeab0": {
      "content": "{% if ${1} %}\n\t${2}\n{% else %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig if else",
      "matches": {
        "ife": true
      }
    },
    "fab30b25-4dca-32fb-a0aa-b8627b7e51a7": {
      "content": "${1:condition} ? ${2:expression} : ${3:expression}",
      "doc": "Code snippet for ternary operator statement.",
      "filetype": "julia",
      "grammar": "lsp",
      "label": "ternary operator",
      "matches": {
        "?:": true
      }
    },
    "facd809b-558d-3149-84de-d1ebedbf2b57": {
      "content": "pub fn main() {\n\t${0}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Main function",
      "matches": {
        "main": true
      }
    },
    "face935d-0a3c-3831-934c-aeddac598647": {
      "content": "Yii::app()->user->",
      "doc": "",
      "filetype": "yii",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yuser": true
      }
    },
    "fad01f5c-da58-34ab-9855-93e50d366cd1": {
      "content": "exec { \"${1:name}\":\n\tcommand => \"${2:$1}\",\n\tuser    => \"${3:root}\",\n\t${4}    => ${0},\n}",
      "doc": "",
      "filetype": "puppet",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exec": true
      }
    },
    "fad664e2-a9e1-3a1e-8074-5a7090905a7b": {
      "content": "// https://eips.ethereum.org/EIPS/eip-165 \r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0 <0.8.0;\r\ninterface ERC165 {\r\n    /// @notice Query if a contract implements an interface\r\n    /// @param interfaceID The interface identifier, as specified in ERC-165\r\n    /// @dev Interface identification is specified in ERC-165. This function\r\n    ///  uses less than 30,000 gas.\r\n    /// @return `true` if the contract implements `interfaceID` and\r\n    ///  `interfaceID` is not 0xffffffff, `false` otherwise\r\n    function supportsInterface(bytes4 interfaceID) external view returns (bool);\r\n}",
      "doc": "ERC165 Standard Interface Detection Interface: Creates a standard method to publish and detect what interfaces a smart contract implements.",
      "filetype": "solidity",
      "grammar": "lsp",
      "label": "erc165 interface",
      "matches": {
        "erc165i": true
      }
    },
    "fada91ef-d35f-3c08-9de4-3b2c0d489186": {
      "content": "@mastersthesis{${1:LABEL},\n    author = {${2}},\n    title = {${3}},\n    school = {${4}},\n    year = {${5}},\n    memo = {address, month, note},\n}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "@mastersthesis": true,
        "mastersthesis": true
      }
    },
    "fadc0983-5414-3372-a917-09d6cf76df68": {
      "content": "${1:router}.back($2)$0",
      "doc": "router.back()",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "routerBack",
      "matches": {
        "routerBack": true
      }
    },
    "fae2ca07-ffd1-325d-a23c-59c9b34516e5": {
      "content": "overflow-style: scrollbar;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ovs:s": true
      }
    },
    "fae89486-c58c-3b33-986a-ae995b5ad660": {
      "content": "background-clip no-clip",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgcp:nc": true
      }
    },
    "faea137e-b695-30c6-bd81-f1dfcd51a912": {
      "content": "for ${1:item} in ${2:collection} {\n\t$0\n}",
      "doc": "for-in statement",
      "filetype": "swift",
      "grammar": "lsp",
      "label": "for",
      "matches": {
        "for": true
      }
    },
    "faf3a111-524c-36b2-a91d-792f58bb0a1c": {
      "content": "[*] -->",
      "doc": "Describe the initial state of objects",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "State Initial",
      "matches": {
        "init": true
      }
    },
    "faf4c54c-6fe1-30a4-afa9-ddece0b2bd02": {
      "content": "use GenServer\n\n@doc false\ndef start_link do\n\tGenServer.start_link(__MODULE__, ${1:Map.new})\nend\n\n@impl true\ndef init(state) do\n\t{:ok, state}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "basic genserver structure",
      "matches": {
        "genserver": true
      }
    },
    "faf62e8f-92af-3526-9533-b6bfa8d6916a": {
      "content": "expression()",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "exp": true
      }
    },
    "fb023177-db54-3e52-bafa-1130695ad43a": {
      "content": "<%= link_to '${1:link text...}', action: '${0:index}' %>",
      "doc": "",
      "filetype": "eruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lia": true
      }
    },
    "fb0ac005-97c8-37bf-9fe1-d9593818e8e8": {
      "content": "$this->shouldHaveType($1);",
      "doc": "",
      "filetype": "php-phpspec",
      "grammar": "snu",
      "label": "$this->shouldHaveType('Type')",
      "matches": {
        "stype": true
      }
    },
    "fb0c0381-ae33-34b1-b1be-539b4c5f1c3b": {
      "content": "(fn [${1:arg-list}] ${0:code})",
      "doc": "",
      "filetype": "clojure",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn": true
      }
    },
    "fb0eccd0-6edb-330b-b4c5-257c8e622240": {
      "content": "text-decoration: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "td": true
      }
    },
    "fb0fc19d-527d-3f83-a8bf-34e65d7dd794": {
      "content": "do {\n\t${2}\n} while (${1:/* condition */});",
      "doc": "",
      "filetype": "arduino",
      "grammar": "snu",
      "label": "",
      "matches": {
        "do": true
      }
    },
    "fb149701-f4a7-3f52-8630-f8d1e05ce94f": {
      "content": "static int Main(string[] args)\n{\n    $0\n    return 0;\n}",
      "doc": "int Main()",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "sim",
      "matches": {
        "sim": true
      }
    },
    "fb175c16-bcee-3887-94b4-9763df3f9bad": {
      "content": "parser.add_argument(\"${0:short_arg}\", \"${1:long_arg}\", default=${2:None}, help=\"${3:Help text}\")",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "addarg": true
      }
    },
    "fb1e0ced-c6f9-3b6e-83d6-53f5ef70a9c7": {
      "content": "content: normal;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:n": true
      }
    },
    "fb2008c6-8ec6-3fad-9b23-18c56f3c25da": {
      "content": "AnyRef",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "anyr": true
      }
    },
    "fb27925b-3a53-3eee-9064-bad831ebf9d2": {
      "content": "switch (${1}) {\n  ${0}\n}",
      "doc": "",
      "filetype": "dart",
      "grammar": "snu",
      "label": "",
      "matches": {
        "sw": true
      }
    },
    "fb30d987-a66a-3656-99fe-7732ad458d0b": {
      "content": "class ${1:classname}(${2:object}):\n\t${3:pass}",
      "doc": "Code snippet for a class definition",
      "filetype": "base",
      "grammar": "lsp",
      "label": "class",
      "matches": {
        "class": true
      }
    },
    "fb34a210-b465-34ca-839e-63822e3e7b3a": {
      "content": "asinh($2)",
      "doc": "return the arc hyperbolic sine of the parameter - inverse of sinh",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "asinh",
      "matches": {
        "asinh": true
      }
    },
    "fb3623fd-dc14-38d3-93ed-4166f801606c": {
      "content": "reversed",
      "doc": "For loops option",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Tag Option reversed",
      "matches": {
        "reversed": true
      }
    },
    "fb3d80b9-4277-3912-aa01-ecbfcee62a6e": {
      "content": "Promise.all(${1:value})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "Promise.all",
      "matches": {
        "pa": true
      }
    },
    "fb4dc1da-e4aa-3dbb-b03f-c89145d7a5c0": {
      "content": "impl Drop for $1 {\n\tfn drop(&mut self) {\n\t\t${0}\n\t}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "Drop trait implementation (destructor)",
      "matches": {
        "drop": true
      }
    },
    "fb4f48ea-ba99-3848-b257-205907e9fdf2": {
      "content": "/'$1\n'/",
      "doc": "Places a block comment in the document",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Block comment",
      "matches": {
        "block": true
      }
    },
    "fb503119-93b3-35f7-93d6-b568a4f94eba": {
      "content": "flex-direction: column;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fxd:c": true
      }
    },
    "fb5146f6-fb8b-35c2-aca9-c7cf3b31dc4b": {
      "content": "${1:FIELDNAME} = forms.TypedMultipleChoiceField($2, choices=[${3:CHOICES}], coerce=${4:TYPE}, required=${5:False})",
      "doc": "TypedMultipleChoiceField (ftypedmuchoice)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "ftypedmuchoice",
      "matches": {
        "ftypedmuchoice": true
      }
    },
    "fb51cb9f-d23b-3aae-80df-236ca1d28e92": {
      "content": "rotate${1:X}(${0:angle});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rotate": true
      }
    },
    "fb55369a-0dd0-3a94-8256-75ccf3b296b0": {
      "content": "state",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "state",
      "matches": {
        "state": true
      }
    },
    "fb578d4c-e798-3691-94f3-d8f4da5d716f": {
      "content": "series = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "series": true
      }
    },
    "fb5d176b-a2a8-3128-b224-5acdbe23e5e1": {
      "content": "text-indent: -9999px;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ti:-": true
      }
    },
    "fb603417-2976-34d3-b7f4-cd7803d66912": {
      "content": "def_delegator :${1:@del_obj}, :${2:del_meth}, :${0:new_name}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "lsp",
      "label": "delegator definition",
      "matches": {
        "defd": true
      }
    },
    "fb611045-50e8-3c94-8c82-b4f04bad629b": {
      "content": "enum ${1:name} {\n\t${2:item1}\n\t${3:item2}\n}",
      "doc": "",
      "filetype": "ps1",
      "grammar": "snu",
      "label": "",
      "matches": {
        "enum": true
      }
    },
    "fb67d912-cd67-37c4-9834-1171420cc21a": {
      "content": "for ${1:i} in ${2:#:words}; do\n\t${0:TARGET}\ndone",
      "doc": "",
      "filetype": "sh",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for": true
      }
    },
    "fb6f5420-daa1-3bd1-a59a-e77053efabfa": {
      "content": "_.clone(${value})",
      "doc": "var objects = [{ 'a': 1 }, { 'b': 2 }];\n\nvar shallow = _.clone(objects);\nconsole.log(shallow[0] === objects[0]);\n// => true\n\nCreates a shallow clone of `value`.\n\n**Note:** This method is loosely based on the\n[structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\nand supports cloning arrays, array buffers, booleans, date objects, maps,\nnumbers, `Object` objects, regexes, sets, strings, symbols, and typed\narrays. The own enumerable properties of `arguments` objects are cloned\nas plain objects. An empty object is returned for uncloneable values such\nas error objects, functions, DOM nodes, and WeakMaps.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-clone",
      "matches": {
        "lodash clone": true
      }
    },
    "fb701a3b-b6c4-3771-bd69-cd0f35db1431": {
      "content": "System.Diagnostics",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "s.d": true
      }
    },
    "fb717348-f820-3b13-af57-1ec1c2fc5bd1": {
      "content": "refute_includes ${1:collection}, ${2:object}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rfi": true
      }
    },
    "fb7cc507-6c3e-317d-98cc-158204414dce": {
      "content": "_.invokeMap(${collection}, ${path}, ${args})",
      "doc": "_.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n// => [[1, 5, 7], [1, 2, 3]]\n\n_.invokeMap([123, 456], String.prototype.split, '');\n// => [['1', '2', '3'], ['4', '5', '6']]\n\nInvokes the method at `path` of each element in `collection`, returning\nan array of the results of each invoked method. Any additional arguments\nare provided to each invoked method. If `path` is a function, it's invoked\nfor, and `this` bound to, each element in `collection`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-invokemap",
      "matches": {
        "lodash invokemap": true
      }
    },
    "fb818062-0f8d-34ee-a9c2-2ba901a9d449": {
      "content": "border-left-style ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdls": true
      }
    },
    "fb95671a-d9c6-3df9-890c-883c1218b516": {
      "content": "@describetag :${1:describe tag}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "destag": true
      }
    },
    "fb994df8-c6e7-3bde-b19c-d336a339b3da": {
      "content": "@setState\n\t${1:myvar}: ${2:myvalue}\n\t$3",
      "doc": "",
      "filetype": "coffee-react",
      "grammar": "snu",
      "label": "React setState",
      "matches": {
        "setState": true
      }
    },
    "fba199d5-b385-3aa9-93cb-588b8963b197": {
      "content": "{\n\t\"type\": \"article\",\n\t\"id\": \"$1\",\n\t\"label\": \"$2\",\n\t\"info\": \"$3\"\n},$4",
      "doc": "",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Shopify Schema article",
      "matches": {
        "_article": true
      }
    },
    "fbaca35d-a4e9-39bf-bd48-581acf524388": {
      "content": "if (${1:#:condition}) {\n    ${2:#:commands}\n}",
      "doc": "",
      "filetype": "gnuplot",
      "grammar": "snu",
      "label": "if (...) {...}",
      "matches": {
        "if": true
      }
    },
    "fbae05dc-d161-34a0-8b0a-92fcff155d42": {
      "content": "marginRight: ${1},",
      "doc": "marginRight",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "marginRight",
      "matches": {
        "mar": true
      }
    },
    "fbb072ca-ba85-32d3-beed-a53017007792": {
      "content": "$.ajaxStop(function () {\n\t${1:// handler for when all AJAX calls have been completed};\n});\n${0}",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ajaxstop": true
      }
    },
    "fbb3d08d-c69f-351c-80d7-99bcb1f98210": {
      "content": "${1}:\nfor ${2} of ${3} loop\n\t${0}\nend loop $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "named for each",
      "matches": {
        "nfore": true
      }
    },
    "fbb92990-8799-381d-b585-49802899870f": {
      "content": "echo CHtml::form(array('${1}'), '${2:post}',array('${3:optionName}'=>${0:optionValue}));",
      "doc": "",
      "filetype": "yii-chtml",
      "grammar": "snu",
      "label": "",
      "matches": {
        "yhform": true
      }
    },
    "fbc6c678-42a2-311e-a53f-91df052a3ed2": {
      "content": "if (${1}) {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "if (condition) { ... }",
      "matches": {
        "if": true
      }
    },
    "fbc9d696-a2a4-33c9-acc1-09a0dbf9dfb4": {
      "content": "text-outline none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "to:n": true
      }
    },
    "fbcf518c-9e80-3f59-92ea-3bc9069cc924": {
      "content": "display: table-row-group",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbrg": true
      }
    },
    "fbd3ba46-b41f-3694-b984-0a5b846b89e2": {
      "content": "_.isObject(${value})",
      "doc": "_.isObject({});\n// => true\n\n_.isObject([1, 2, 3]);\n// => true\n\n_.isObject(_.noop);\n// => true\n\n_.isObject(null);\n// => false\n\nChecks if `value` is the\n[language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\nof `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-isobject",
      "matches": {
        "lodash isobject": true
      }
    },
    "fbdbc9af-c83f-3e66-8887-1ac8ce93eff8": {
      "content": "{% macro ${1}(${2}) %}\n\t${0}\n{% endmacro %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig macro",
      "matches": {
        "macro": true
      }
    },
    "fbdd3bf6-28c5-3ddf-bdef-e5c8c720c09d": {
      "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n\"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docxs": true
      }
    },
    "fbe80bf4-7c0b-3def-aa5e-9b97b23ff9a3": {
      "content": "background-color: rgb(${1:255},${2:255},${3:255});$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "background-color:  color-rgb (background)",
      "matches": {
        "background": true
      }
    },
    "fbeaa215-de6f-3abd-9419-27d94aa40bb0": {
      "content": "mounted () {\n\t${0};\n},",
      "doc": "mounted lifecycle method",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-lifecycle-mounted",
      "matches": {
        "vmounted": true,
        "vue lifecycle mounted": true
      }
    },
    "fbed4e8c-71e9-3e83-b2dd-1a9ada5f16fd": {
      "content": "for ${1:item} <- ${2:items}, do: ${0}",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "for:": true
      }
    },
    "fbef9465-fd62-35fe-b55f-b8fb653fed72": {
      "content": "#ifdef ${1:FOO}\n\t${2:#define }\n#endif",
      "doc": "",
      "filetype": "lpc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ifdef": true
      }
    },
    "fbfa1c8f-0c7d-3345-82d4-93c7c0762bdc": {
      "content": "title=\"${1}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "title=": true
      }
    },
    "fbfa7555-55d0-3ccd-9870-f50864eca32c": {
      "content": "align-content flex-end",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      }
    },
    "fbfbaa82-bc52-3670-97d0-f7328bd53080": {
      "content": "howpublished = {${1}},\n${0}",
      "doc": "",
      "filetype": "bib",
      "grammar": "snu",
      "label": "",
      "matches": {
        "howpublished": true
      }
    },
    "fbfbe9c0-cd54-3606-a79b-b29650a073bb": {
      "content": "\\begin{column}{${1:#:width}${2:\\\\\\textwidth}}\n\t${0:#:body}\n\\end{column}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\begin{column} \\column": true,
        "column": true
      }
    },
    "fbfe1df0-df99-347a-8f5b-0a658e2077eb": {
      "content": "I18n.t('${1:type.key}')",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "i18": true
      }
    },
    "fc00455c-2d07-3f72-ba78-e1456f247e8d": {
      "content": "font-smooth: never",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fsm:n": true
      }
    },
    "fc02e635-d060-34e5-acc8-304e675f853e": {
      "content": "gotoAndPlay(${1});",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gp": true
      }
    },
    "fc0793a3-f46d-300f-a165-3755ba206219": {
      "content": "import 'package:flutter/material.dart';\n \nvoid main() => runApp(MyApp());\n \nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Material App',\n      home: Scaffold(\n        appBar: AppBar(\n          title: Text('Material App Bar'),\n        ),\n        body: Center(\n          child: Container(\n            child: Text('Hello World'),\n          ),\n        ),\n      ),\n    );\n  }\n}",
      "doc": "Create a MaterialApp",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Material App",
      "matches": {
        "mateapp": true
      }
    },
    "fc07e027-cc46-37f7-aa8e-6acd673f0c5b": {
      "content": "${1:public|internal} class ${2:name} ${0:extends } {\n\tpublic function $2 (\t) {\n\t\t(\"start\");\n\t}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "fc091479-902e-39cd-8149-77ed736587ad": {
      "content": "borderRadius: ${1},",
      "doc": "borderRadius",
      "filetype": "react-native",
      "grammar": "lsp",
      "label": "borderRadius",
      "matches": {
        "bor": true
      }
    },
    "fc093a65-0696-3949-8e11-fb3fae4e885a": {
      "content": "var ${1:name}: ${2:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "var": true
      }
    },
    "fc09d1e7-7148-3dd2-ba19-7c2ef7ea99a5": {
      "content": "#[repr(${1})]",
      "doc": "#[repr(…)]",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "repr",
      "matches": {
        "repr": true
      }
    },
    "fc09e339-10b4-3d07-a78e-9c41c05c7be1": {
      "content": "\\textsc{${1:TARGET}}${0}",
      "doc": "",
      "filetype": "tex",
      "grammar": "snu",
      "label": "",
      "matches": {
        "\\textsc": true,
        "textsc \\textsc{": true
      }
    },
    "fc0a1ef8-3fc9-3579-b5bd-ace63a790334": {
      "content": "test('should ${1:first}', async () => { ${2:second} })",
      "doc": "Testing `asynchronous test` block",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "testAsyncBlock",
      "matches": {
        "testa": true
      }
    },
    "fc0af7f5-9abe-3609-9e03-3444e70e959e": {
      "content": "function ${1:name}(${2:args})\n  return ${0:type};",
      "doc": "",
      "filetype": "plsql",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pfs": true
      }
    },
    "fc10ca8c-c11d-3416-b0e4-519c91c61bed": {
      "content": "@property (nonatomic, copy, ${1:nullability}) ${2:void} (^${3:name})(${4:parameters});",
      "doc": "Create a block property",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Block property",
      "matches": {
        "@propertyblock": true
      }
    },
    "fc129d05-3ded-319a-adde-847bd1d65b6d": {
      "content": "while let ${1:Some($2)} = $3 {\n\t${0:${VISUAL}}\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "while let (...)",
      "matches": {
        "whl": true
      }
    },
    "fc12eb99-3a50-3dae-9a74-744d51691e18": {
      "content": "<source src=\"${1}\" type=\"${2}\" media=\"${0}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "source": true
      }
    },
    "fc22c5e0-64f9-3193-8750-18d59f48c003": {
      "content": "auto ${1} = std::make_unique<${2:T}>(${3});",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "amup": true
      }
    },
    "fc22fa2c-6a02-3c2c-8438-9099552f7c95": {
      "content": "[routerLink]=\"['${1:routePath}', ${2:routeParameterValue}]\"\nrouterLinkActive=\"${3:router-link-active}\"$0",
      "doc": "Angular routerLink with a route parameter",
      "filetype": "angular",
      "grammar": "lsp",
      "label": "ngrouterlinkwithparameter",
      "matches": {
        "a-routerlink-param": true,
        "angular ng router link with parameter": true
      }
    },
    "fc235bf4-b825-3be2-8fda-6f85ec2cdbb1": {
      "content": "typedef NS_ENUM(NSUInteger, ${1:MyEnum}) {\n\t${2:MyEnumValueA} = 1 << 0,\n\t${3:MyEnumValueB} = 1 << 1,\n\t${4:MyEnumValueC} = 1 << 2,\n};",
      "doc": "Code snippet for NS_OPTIONS",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "nsoptions",
      "matches": {
        "nsoptions": true
      }
    },
    "fc23bb24-abe9-3e0a-8597-b65aff114410": {
      "content": "id=\"$1\"$2",
      "doc": "",
      "filetype": "html_minimal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "id": true
      }
    },
    "fc256e2d-888e-39bd-8f25-f0a07980f7b0": {
      "content": "echo '<pre>'; var_dump(${0}); echo '</pre>';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pd": true
      }
    },
    "fc3622c0-4e41-315a-a69d-909e3a53fd16": {
      "content": "#[cfg(${1:target_os = \"linux\"})]",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "cfg attribute",
      "matches": {
        "cfg": true
      }
    },
    "fc394788-634a-363c-8d7e-48edca123027": {
      "content": "margin-left auto",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ml:a": true
      }
    },
    "fc3e3061-9945-3119-a005-f5b06dc1ef9a": {
      "content": "scope :${1:name}, { ${2:where(${3::${4:field}: ${5:'${6:value}'}})} } do\n\tdef ${7:method_name}\n\t\t$0\n\tend\nend",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "scope with extension",
      "matches": {
        "scopee": true
      }
    },
    "fc470171-a5f5-36ed-84e6-d2400d830bf4": {
      "content": "SELECT ${1:*}\nFROM ${2:cities} ${3:WHERE area = 'Asia'}\n${4: ORDER BY distance}\n${5: LIMIT 30};",
      "doc": "",
      "filetype": "sql",
      "grammar": "snu",
      "label": "SELECT * from ... ORDER BY ... LIMIT ...",
      "matches": {
        "SELECT_DATA": true
      }
    },
    "fc4c6c22-19ad-3611-823a-1298921870a5": {
      "content": "@after-appear='$1'$0",
      "doc": "@after-appear=''",
      "filetype": "pug",
      "grammar": "lsp",
      "label": "after-appear",
      "matches": {
        "afterAppearEvent": true
      }
    },
    "fc52d748-a713-3ede-894f-85b6eee8e469": {
      "content": "_.defaultsDeep(${object}, ${sources})",
      "doc": "_.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n// => { 'a': { 'b': 2, 'c': 3 } }\n\nThis method is like `_.defaults` except that it recursively assigns\ndefault properties.\n\n**Note:** This method mutates `object`.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-defaultsdeep",
      "matches": {
        "lodash defaultsdeep": true
      }
    },
    "fc52e45d-36b5-31b1-b9a3-26d7653d0952": {
      "content": "max-height none",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mah:n": true
      }
    },
    "fc538d72-17b7-3b64-9a25-ca544ecf743a": {
      "content": "ValueListenableBuilder(\n    valueListenable: ${1: null},\n    builder: (BuildContext context, ${2:dynamic} value, Widget? child) {\n       return ${3: Container();}\n    },\n ),",
      "doc": "Given a ValueListenable<T> and a builder which builds widgets from concrete values of T, this class will automatically register itself as a listener of the ValueListenable and call the builder with updated values when the value changes.",
      "filetype": "flutter",
      "grammar": "lsp",
      "label": "Value Listenable Builder",
      "matches": {
        "valueListenableBuilder": true
      }
    },
    "fc5519cb-b6e9-3c1b-91f1-8d18647ac466": {
      "content": "grid-row: ${1} / ${2};",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "gr": true
      }
    },
    "fc5a1117-c067-3c04-88df-1a0744c81f63": {
      "content": "expect($1).toHaveProperty(${2:keyPath}, ${3:value});$0",
      "doc": "returns true if the argument matches the second object",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tohaveproperty",
      "matches": {
        "jest expect tohaveproperty": true,
        "thp": true
      }
    },
    "fc5ba9d1-7673-315c-a189-c35aa6178ddb": {
      "content": "_.commit()",
      "doc": "var array = [1, 2];\nvar wrapped = _(array).push(3);\n\nconsole.log(array);\n// => [1, 2]\n\nwrapped = wrapped.commit();\nconsole.log(array);\n// => [1, 2, 3]\n\nwrapped.last();\n// => 3\n\nconsole.log(array);\n// => [1, 2, 3]\n\nExecutes the chain sequence and returns the wrapped result.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-commit",
      "matches": {
        "lodash commit": true
      }
    },
    "fc5db287-281c-3fa7-a99b-f68cdffeb727": {
      "content": "[<EntryPoint>]\nlet main argv =\n\t${0}\n\t0",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "fc5e8f03-6fda-3f8e-9083-bc09cfbc154c": {
      "content": "visibility: hidden",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "v:h": true
      }
    },
    "fc643794-3761-3e9c-85ff-c50144703b2b": {
      "content": "align-items: flex-start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ai:fs": true
      }
    },
    "fc70c28b-991f-382b-8311-e7c62e05bc88": {
      "content": "verify only: [:$1], session: :user, params: :id, redirect_to {:action: '${2:index}'}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "verify -- redirect",
      "matches": {
        "verify": true
      }
    },
    "fc711dba-4e01-352b-9033-eb8e433b9503": {
      "content": "while ${1:#:condition}:\n  ${0:pass}",
      "doc": "",
      "filetype": "nim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "while": true
      }
    },
    "fc77f002-86a7-3b82-ba7c-e4b205535876": {
      "content": "<time datetime=\"$1\">$2</time>$3",
      "doc": "HTML - Defines a date/time",
      "filetype": "html",
      "grammar": "lsp",
      "label": "time",
      "matches": {
        "time": true
      }
    },
    "fc7b2525-5c64-3332-a305-0963e3b5ba54": {
      "content": "watch: {\n\t${1:data}(${2:newValue}, ${3:oldValue}) {\n\t\t${0}\n\t}\n},",
      "doc": "vue watcher",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Watchers",
      "matches": {
        "vwatcher": true
      }
    },
    "fc8196b1-7085-3aca-8ea7-ca3f75102969": {
      "content": "real, dimension(${1}), intent(in)  :: ${2}",
      "doc": "",
      "filetype": "fortran",
      "grammar": "snu",
      "label": "real dimension intent(in)",
      "matches": {
        "redi": true
      }
    },
    "fc8e3773-4792-3c74-bc50-119842c4a086": {
      "content": "(apply ${1} ${0})",
      "doc": "",
      "filetype": "racket",
      "grammar": "snu",
      "label": "",
      "matches": {
        "apply": true
      }
    },
    "fc8ff21e-8fae-317f-b62d-367a7ff66a78": {
      "content": "echo \\$this->$0;",
      "doc": "Echo this",
      "filetype": "php",
      "grammar": "lsp",
      "label": "echo $this->…",
      "matches": {
        "ethis": true
      }
    },
    "fc940ad7-5a6e-3856-a0b0-b1088cdff813": {
      "content": "${1:obj}.removeData('${2:key name}')",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "remd": true
      }
    },
    "fc9815d1-cf9e-3019-8726-697683e51259": {
      "content": "border-fit: clip;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdf:c": true
      }
    },
    "fc98c5b4-c0c5-3643-9cc3-bb1c927f264c": {
      "content": "${1:obj}.replaceWith(${2:content})",
      "doc": "",
      "filetype": "javascript-jquery",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repw": true
      }
    },
    "fc9c524c-6a42-3f88-8beb-544f7beab232": {
      "content": "{\n\t\"type\": \"font_picker\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${3}\",\n\t\"default\": \"${0:helvetica_n4}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_font": true
      }
    },
    "fca1c59c-cb1d-3ddd-90b1-69320bd647be": {
      "content": "expect(() => {\n\t$0\n}).toThrowError($1);",
      "doc": "expects that the method will throw an error",
      "filetype": "jest",
      "grammar": "lsp",
      "label": "jest-tothrowerror",
      "matches": {
        "jest expect tothrowerror": true,
        "tte": true
      }
    },
    "fca5f283-bba8-3847-98f8-53987066cb3c": {
      "content": "paddingHorizontal: ${1},",
      "doc": "paddingHorizontal",
      "filetype": "react-native-ts",
      "grammar": "lsp",
      "label": "paddingHorizontal",
      "matches": {
        "padding": true
      }
    },
    "fca8f5cb-733b-3c2b-baf2-dd831b0d3566": {
      "content": "test \"${1:test_name}\", %{${2:arg: arg}} do\n\t${0}\nend",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "testa": true
      }
    },
    "fcaff3a4-3586-33f1-bee4-39adcd353e65": {
      "content": "procedure ${1}(${2}) is\n\t${3}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "",
      "matches": {
        "procedure": true
      }
    },
    "fcb01dac-2610-36f2-ac07-c9138af857ac": {
      "content": "<input type=\"${1:text/submit/hidden/button/image}\" name=\"${2}\" id=\"${3:$2}\" value=\"${4}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input": true
      }
    },
    "fcb2f3b0-0427-33b1-9f2d-95101279e09b": {
      "content": "justify-content: start;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "jc:s": true
      }
    },
    "fcb9b0a5-734c-3918-8e66-6b92e58eb432": {
      "content": "No Operation",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "No Operation",
      "matches": {
        "nop": true
      }
    },
    "fcba0fdb-3080-369f-9753-7303454f23fe": {
      "content": "${1:iterable}.find((${2:item}) => {\n\t${0}\n})",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "find",
      "matches": {
        "find": true
      }
    },
    "fcc864d7-af40-3bf5-8ad7-4b0a11391d61": {
      "content": "#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n${0}\n\n#ifdef __cplusplus\n} /* extern \"C\" */\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nocxx": true
      }
    },
    "fccec599-2927-3600-afb6-f745d9bf6527": {
      "content": "<h2 class=\"${1}\">${0}</h2>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h2.": true
      }
    },
    "fcd29687-0365-38fd-8568-710462e8a4f7": {
      "content": "export const select${1:Feature}${2:Property} = createSelector(\n\tselect$1,\n\t(state: $1State) => state.${3:property}\n);",
      "doc": "Creates an NgRx Selector",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "NgRx Create Selector",
      "matches": {
        "a-ngrx-create-selector": true
      }
    },
    "fcd69e9e-d8cf-3b93-9102-9fc7da03bd50": {
      "content": "[routerLink]=\"['/${1:routePath}']\" routerLinkActive=\"${2:router-link-active}\" $0",
      "doc": "Angular routerLink",
      "filetype": "html",
      "grammar": "lsp",
      "label": "ngRouterLink",
      "matches": {
        "a-routerLink": true
      }
    },
    "fcd73fa0-8716-369c-8e70-35ff9b216f12": {
      "content": "mutable.HashMap[${1:T},${2:T}]${0:(keyval)}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mhmap": true
      }
    },
    "fcd872d6-c564-3cb2-83be-9a96a8d37e43": {
      "content": "while (${1:condition}) {\n\t$0\n}",
      "doc": "While Statement",
      "filetype": "java",
      "grammar": "lsp",
      "label": "While Statement",
      "matches": {
        "while": true
      }
    },
    "fcd9ae5f-f369-3ce6-91ef-160e7d6ba71c": {
      "content": "/*! TODO: ${1:Todo description here}\n *  \\todo $1\n */",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "todo": true
      }
    },
    "fcda213e-ee3b-3cd7-80bb-6974de48d318": {
      "content": "border-right-style: none",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdrs:n": true
      }
    },
    "fce24c5d-70dd-3456-928d-b97ceedecf3d": {
      "content": "${1:FIELDNAME} = models.PositiveIntegerField($2)",
      "doc": "PositiveIntegerField (mposint).\n\nLike an IntegerField, but must be either positive or zero (0).",
      "filetype": "models",
      "grammar": "lsp",
      "label": "mposint",
      "matches": {
        "mposint": true
      }
    },
    "fcedf6d7-5e37-3e40-ba41-c07bab431ae2": {
      "content": "wont_match /${0:regex}/",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wm": true
      }
    },
    "fcf1b494-1d4d-3199-b6cd-80014a5cf00f": {
      "content": "tellTarget( ${1:#:target} ) {\n\t${0:TARGET}\n}",
      "doc": "",
      "filetype": "actionscript",
      "grammar": "snu",
      "label": "",
      "matches": {
        "tt": true
      }
    },
    "fcf2576b-80e2-382a-b089-b339fff9f68c": {
      "content": "[bibliography]\n== References\n\n- [[${1:id}]] ${2:Entry}\n${0}",
      "doc": "",
      "filetype": "asciidoc",
      "grammar": "snu",
      "label": "bibliography",
      "matches": {
        "bib": true
      }
    },
    "fd0163a2-0cd1-309e-aabc-3072d1985e54": {
      "content": "?assertNotEqual(${1}, ${0})",
      "doc": "",
      "filetype": "erlang",
      "grammar": "snu",
      "label": "",
      "matches": {
        "asneq": true
      }
    },
    "fd01f221-dc50-3b53-ac0e-ff5866d13b8c": {
      "content": "<%= if ${1} do %>\n\t${0:${VISUAL}}\n<% end %>",
      "doc": "",
      "filetype": "eelixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "if": true
      }
    },
    "fd07804d-732b-3b2c-9b09-61196e338f30": {
      "content": "<c:url value=\"${1}\" var=\"${2}\" />\n<a href=\"\\${$2}\">${0}</a>",
      "doc": "",
      "filetype": "jsp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "curl": true
      }
    },
    "fd2e3786-2bd6-3f5a-aec2-f68106b1e36c": {
      "content": "fmt.Sprintf(\"%${1:s}\", ${2:var})",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "fmt.Sprintf(...)",
      "matches": {
        "sp": true
      }
    },
    "fd302cc2-bcfd-34aa-9e54-718b7f50e13a": {
      "content": "for ${1:lowerbound} to ${2:upperbound}\n\t${0}\nend",
      "doc": "",
      "filetype": "falcon",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forto": true
      }
    },
    "fd34ef59-6177-3eb1-8e58-ca9c24082a6e": {
      "content": "gem '${1:name}'${2:${3:, \"${4:1.0}\"}${5:${6:, require: ${7:\"${8:$1}\"}}${9:, group: :${10:test}}}}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "gem",
      "matches": {
        "gem": true
      }
    },
    "fd3b7c4a-b90a-3f3d-8cd4-f0b86536b77c": {
      "content": "componentDidUpdate(prevProps, prevState) {\n\t${1}\n};",
      "doc": "",
      "filetype": "javascript-react",
      "grammar": "snu",
      "label": "componentDidUpdate",
      "matches": {
        "cdup": true
      }
    },
    "fd4142c3-70ab-34c1-b732-3071f59045c8": {
      "content": "using (${1:resource})\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "using statement",
      "matches": {
        "using": true
      }
    },
    "fd44735c-dac3-3d89-a746-f630f1a7282f": {
      "content": "dynamic_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "dynamic_cast<>()",
      "matches": {
        "dynamic_cast": true
      }
    },
    "fd4d6350-9fe3-3140-a393-6faaf3d66c30": {
      "content": "read -r ${0:VAR}",
      "doc": "Read input of ${VAR}.",
      "filetype": "shell",
      "grammar": "lsp",
      "label": "read",
      "matches": {
        "read": true
      }
    },
    "fd4eb405-6d4b-3a00-a34d-07e7a1a46049": {
      "content": "padding-top: ${0:0};",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "padding-top",
      "matches": {
        "padt": true
      }
    },
    "fd4f70fd-6639-3b34-befe-89a72ce6efca": {
      "content": "<h6>${0}</h6>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "h6": true
      }
    },
    "fd551999-bc57-3c13-9449-d43e9538a901": {
      "content": "list-style-type: ${1:lower-roman/upper-roman/lower-alpha/upper-alpha/lower-greek/lower-latin/upper-latin};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "list-style-type: roman-alpha-greek (list)",
      "matches": {
        "list": true
      }
    },
    "fd64dec3-b583-3ea4-b334-8592bd8507c1": {
      "content": "content: no-open-quote",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ct:noq": true
      }
    },
    "fd69b764-9572-322e-9892-cc40b73c00e6": {
      "content": "@synthesize ${1:#:property};",
      "doc": "",
      "filetype": "objc",
      "grammar": "snu",
      "label": "",
      "matches": {
        "syn": true
      }
    },
    "fd6ab747-c659-36b5-8c20-f2c83d28c0d5": {
      "content": "empty-cells show",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ec:s": true
      }
    },
    "fd7ce5ea-0eeb-30dc-bcc5-c04b3b45dcdd": {
      "content": "class ${1:Class} a where\n\t${0}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "class": true
      }
    },
    "fd8ea59f-9122-38fa-be9a-5071e2df4a0d": {
      "content": "task body ${1} is\n\t${2}\nbegin\n\t${0}\nend $1;",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "task body",
      "matches": {
        "taskb": true
      }
    },
    "fd93fcdb-ca6e-33d6-a06e-340c99068fec": {
      "content": "charset=\"${1:utf-8}\"",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "charset": true
      }
    },
    "fd9b621f-fa4e-3f3e-9dbd-45f8db7f3890": {
      "content": "@doc false",
      "doc": "",
      "filetype": "elixir",
      "grammar": "snu",
      "label": "",
      "matches": {
        "docf": true
      }
    },
    "fd9baa74-7d6a-39f5-bbd9-7aec2d6bf086": {
      "content": "background-color: transparent;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bgc:t": true
      }
    },
    "fda8de39-c23d-3497-b610-89262c93a5ac": {
      "content": "<title>$1</title>$2",
      "doc": "HTML - Defines the document title",
      "filetype": "html",
      "grammar": "lsp",
      "label": "title",
      "matches": {
        "title": true
      }
    },
    "fdac5f06-9bf9-3f66-9788-396ebee7c720": {
      "content": "namespace eval ${1:path} {${0:#script...}}",
      "doc": "",
      "filetype": "tcl",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ns": true
      }
    },
    "fdae6191-8cf1-31ee-8621-2a6611e41d78": {
      "content": "try\n\t${1:${VISUAL}}\ncatch ${2:error}\n\t${0}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "try": true
      }
    },
    "fdb25937-cbdb-3a6d-8cea-e8ec2e358f1c": {
      "content": "${1:Object} ${2:foo} = new ${1:Object}();",
      "doc": "Create new Object",
      "filetype": "java",
      "grammar": "lsp",
      "label": "newObject",
      "matches": {
        "new": true
      }
    },
    "fdb43c02-0a9d-3b02-9acf-d90ecfb0f02b": {
      "content": "#!/usr/bin/env node",
      "doc": "",
      "filetype": "javascript-node",
      "grammar": "snu",
      "label": "#!/usr/bin/env node",
      "matches": {
        "#!": true
      }
    },
    "fdc0ff11-c1fe-344b-9ff4-8aef73d3cce3": {
      "content": "let ${1:name}: ${2:Int}${0}",
      "doc": "",
      "filetype": "swift",
      "grammar": "snu",
      "label": "",
      "matches": {
        "let": true
      }
    },
    "fdc26fef-368a-3a7d-9c48-45f1aafb4d8b": {
      "content": "<?php if (${1:#:condition}): ?>\n${2:TARGET}\n<?php else: ?>\n${0}\n<?php endif; ?>",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pifelse": true
      }
    },
    "fdc685c5-d356-361a-a9e4-40a45fca3492": {
      "content": "for (const ${1:iterator} of ${2:object}) {\n\t$0\n}",
      "doc": "For-Of Loop",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "For-Of Loop",
      "matches": {
        "forof": true
      }
    },
    "fdca20ca-37b6-3075-9acb-73a067000b66": {
      "content": "func TestMain(m *testing.M) {\n\t$1\n\n\tos.Exit(m.Run())\n}",
      "doc": "Snippet for TestMain function",
      "filetype": "go",
      "grammar": "lsp",
      "label": "test main",
      "matches": {
        "tm": true
      }
    },
    "fdcc2c54-7d6b-3470-a829-161a5d316bb0": {
      "content": "public import",
      "doc": "",
      "filetype": "d",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pimp": true
      }
    },
    "fdd30ce0-6376-36da-9f3b-e3ace90e19a2": {
      "content": "before(function() {\n\t${0:${VISUAL}}\n});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "before(function() { ... })",
      "matches": {
        "bef": true
      }
    },
    "fdd37be7-7c75-3c99-9d46-dd3d718a4466": {
      "content": "gl.glClearColor(${1:red}, ${2:green}, ${3:blue}, ${0:alpha});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "gl clear color",
      "matches": {
        "gl": true
      }
    },
    "fddaeed0-27ca-308d-80b4-5986d506d058": {
      "content": "kind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n  name: {{ template \"$2.fullname\" . }}\n  labels:\n\tchart: \"{{ .Chart.Name }}-{{ .Chart.Version }}\"\n\trelease: \"{{ .Release.Name }}\"\n\theritage: \"{{ .Release.Service }}\"\n\tapp: {{ template \"${2:chartName}.fullname\" . }}\nspec:\n  accessModes:\n\t- {{ .Values.persistence.accessMode | quote }}\n  resources:\n\trequests:\n\t  storage: {{ .Values.persistence.size | quote }}\n{{- if .Values.persistence.storageClass }}\n{{- if (eq \"-\" .Values.persistence.storageClass) }}\n  storageClassName: \"\"\n{{- else }}\n  storageClassName: \"{{ .Values.persistence.storageClass }}\"\n{{- end }}\n{{- end }}\n{{- end }}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pvc_spec": true
      }
    },
    "fdde4143-1c43-35ca-9921-d7d134ff0f0a": {
      "content": "overflow: scroll;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ov:s": true
      }
    },
    "fde70ed7-51dd-3305-a809-921cc50c551a": {
      "content": "<input v-model=\"${1:data}\" type=\"text\" />",
      "doc": "v-model directive",
      "filetype": "vue-template",
      "grammar": "lsp",
      "label": "Vue v-model Directive",
      "matches": {
        "vmodel": true
      }
    },
    "fde770d4-2ca3-31b7-aef1-0054394b6a3e": {
      "content": "{-# LANGUAGE ${0:OverloadedStrings} #-}",
      "doc": "",
      "filetype": "haskell",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lang": true
      }
    },
    "fde9d6de-2539-3076-85d4-ae9c662d4bea": {
      "content": "{% requireLogin %}\n$0",
      "doc": "requireLogin",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "requirelogin",
      "matches": {
        "requirelogin": true
      }
    },
    "fded8c02-2751-3e54-9a8d-c8e4036c9d00": {
      "content": "While (${1:condition})\n\t${0:; code...}\nWEnd",
      "doc": "",
      "filetype": "autoit",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wh": true
      }
    },
    "fdf2c019-26e5-3751-9352-c6274bf87700": {
      "content": "macro_rules! ${1:name} {\n\t(${2:matcher}) => (\n\t\t$3\n\t)\n}",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "macro_rules!",
      "matches": {
        "macro": true
      }
    },
    "fdf5ccad-ab67-36d2-958f-c587dd3dcc82": {
      "content": "<main>\n\t$1\n</main>",
      "doc": "HTML - Defines an image map",
      "filetype": "html",
      "grammar": "lsp",
      "label": "main",
      "matches": {
        "main": true
      }
    },
    "fe028ed1-802f-3b30-afe4-bfd8d817908a": {
      "content": "mixins",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "mixins",
      "matches": {
        "mixins": true
      }
    },
    "fe04a7ed-f053-3a6d-b774-e978b33a97ec": {
      "content": "each_value do |${1:val}|\n\t${0}\nend",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "eavd": true
      }
    },
    "fe066acc-c9ea-3ae7-8d04-4f6dd713c685": {
      "content": "log.Printf(\"${1:${VISUAL}} = %+v\\n\", $1)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "log.Printf(...)",
      "matches": {
        "lf": true
      }
    },
    "fe0fd381-3561-30fd-aa56-e0561c88c0b0": {
      "content": "#if ${1:true}\n    $0\n#endif",
      "doc": "#if",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "#if",
      "matches": {
        "ifd": true
      }
    },
    "fe142ef9-5082-33c8-ba36-2e4fef3b85c7": {
      "content": "Lorem ipsum dolor sit amet, officia excepteur ex fugiat reprehenderit enim labore culpa sint ad nisi Lorem pariatur mollit ex esse exercitation amet. Nisi anim cupidatat excepteur officia. Reprehenderit nostrud nostrud ipsum Lorem est aliquip amet voluptate voluptate dolor minim nulla est proident. Nostrud officia pariatur ut officia. Sit irure elit esse ea nulla sunt ex occaecat reprehenderit commodo officia dolor Lorem duis laboris cupidatat officia voluptate. Culpa proident adipisicing id nulla nisi laboris ex in Lorem sunt duis officia eiusmod. Aliqua reprehenderit commodo ex non excepteur duis sunt velit enim. Voluptate laboris sint cupidatat ullamco ut ea consectetur et est culpa et culpa duis.",
      "doc": "Lorem Ipsum Paragraph",
      "filetype": "global",
      "grammar": "lsp",
      "label": "Lorem Ipsum Paragraph",
      "matches": {
        "loremPara": true
      }
    },
    "fe17fab2-43fc-3dee-a2c8-262a17214410": {
      "content": "| minus: ${1:1}",
      "doc": "Math filter: minus",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter minus",
      "matches": {
        "minus": true
      }
    },
    "fe1b8b2d-f9cf-3485-860d-3b99e2c2af37": {
      "content": "validates_exclusion_of :${1:attribute}${2:, in: ${3:%w( ${4:mov avi} )}, on: :${5:create}, message: \"${6:extension %s is not allowed}\"}, if: proc { |obj| ${7:obj.condition?} }}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "validates_exclusion_of if (veif)",
      "matches": {
        "veif": true
      }
    },
    "fe2869bc-17dc-3118-871d-e1e406fcba54": {
      "content": "this.state.$0",
      "doc": "Access component's state",
      "filetype": "react-ts",
      "grammar": "lsp",
      "label": "componentState",
      "matches": {
        "ts": true
      }
    },
    "fe2cb3d3-2e4c-3cbb-8abc-354caec32608": {
      "content": "begin\n    ${1:TARGET}\nend",
      "doc": "",
      "filetype": "verilog",
      "grammar": "snu",
      "label": "begin ... end",
      "matches": {
        "be": true,
        "beginend": true
      }
    },
    "fe2e9413-2610-34cc-9454-378102703340": {
      "content": "for ${1:name} from ${2:start} til ${3:finish} by ${4:step}\n\t${5}",
      "doc": "",
      "filetype": "ls",
      "grammar": "snu",
      "label": "",
      "matches": {
        "forrexb": true
      }
    },
    "fe32378b-a909-351a-8e00-81bd2524b016": {
      "content": "before_create :${0:method}",
      "doc": "before_create",
      "filetype": "rails",
      "grammar": "lsp",
      "label": "Before create",
      "matches": {
        "bc": true
      }
    },
    "fe324b37-bd34-3874-a29f-2a42d2ed0b08": {
      "content": "display table",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tb": true
      }
    },
    "fe3688e2-d60f-3b4c-8c56-c302984d55ad": {
      "content": "@mixin ${1:NAME}(${2:#:ARGS}) {\n  ${0:TARGET}\n}",
      "doc": "",
      "filetype": "scss",
      "grammar": "snu",
      "label": "@mixin(...){...}",
      "matches": {
        "mixin": true
      }
    },
    "fe377a2e-0966-3ae9-bd1a-97fe1184f57c": {
      "content": "<blockquote>${1}</blockquote>",
      "doc": "",
      "filetype": "mediawiki",
      "grammar": "snu",
      "label": "",
      "matches": {
        "blockquote": true
      }
    },
    "fe3a5b17-529d-3f07-b008-df5766dd66eb": {
      "content": "| minus: ${minus:1}",
      "doc": "Math filter: minus",
      "filetype": "jekyll",
      "grammar": "lsp",
      "label": "Filter minus",
      "matches": {
        "minus": true
      }
    },
    "fe3bca4d-eb99-3fd2-80cb-f40a0a8ec0d4": {
      "content": "func Test${1:name}(t *testing.T) {\n\ttests := []struct {\n\t\tname string\n\t}{\n\t\t{\n\t\t\tname: \"${2:test name}\",\n\t\t},\n\t}\n\n\tfor _, test := range tests {\n\t\tt.Run(test.name, func(t *testing.T) {\n\t\t\t${0:${VISUAL}}\n\t\t})\n\t}\n}",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "table test function",
      "matches": {
        "testt": true
      }
    },
    "fe3ec5fa-4862-3d50-92c1-b14597f6b73f": {
      "content": "----------",
      "doc": "Insert horizontal rule",
      "filetype": "markdown",
      "grammar": "lsp",
      "label": "Insert horizontal rule",
      "matches": {
        "horizontal rule": true
      }
    },
    "fe4fcd0b-5607-3448-a761-eeb0ed2e9f07": {
      "content": "-moz-border-image ${0}",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdi:m": true
      }
    },
    "fe56eec7-31b0-3826-bfaf-ef293f9f9bbe": {
      "content": "*-- $1",
      "doc": "Model an object composition",
      "filetype": "plantuml",
      "grammar": "lsp",
      "label": "Composition",
      "matches": {
        "com": true
      }
    },
    "fe5f8245-6c73-37ed-b72c-1ad77f90b7e4": {
      "content": "xhr :put, :${1:update}, id: ${2:1}, ${3:object}: { $4 }$0",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "xhr put",
      "matches": {
        "xput": true
      }
    },
    "fe6425b7-22bc-37f6-8bad-f3aace38501a": {
      "content": "word-break keep-all",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "wob:k": true
      }
    },
    "fe6cb943-96b6-3958-8298-4194375572ee": {
      "content": "console.warn($1);\n$0",
      "doc": "Log warning to the console",
      "filetype": "typescript",
      "grammar": "lsp",
      "label": "Log warning to console",
      "matches": {
        "warn": true
      }
    },
    "fe6fb88f-4f57-3b92-88cd-fcb70c5a635c": {
      "content": "|> ${0}",
      "doc": "",
      "filetype": "fsharp",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p": true
      }
    },
    "fe729031-daeb-3a33-98eb-f48b2c4f80e2": {
      "content": "def __get__(self, instance, owner):\n\t${1:pass}\n\ndef __set__(self, instance, value):\n\t${2:pass}\n\ndef __delete__(self, instance):\n\t${3:pass}",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "methods implementing descriptors",
      "matches": {
        "desc": true
      }
    },
    "fe74477d-16dc-3d8c-88f6-af6b62d3c35c": {
      "content": "{% filter ${1} %}\n\t${0}\n{% endfilter %}",
      "doc": "",
      "filetype": "htmldjango",
      "grammar": "snu",
      "label": "",
      "matches": {
        "filter": true
      }
    },
    "fe7b3ac0-7b11-3470-abc8-24d1eb3b7aef": {
      "content": "hex(${0:c});",
      "doc": "",
      "filetype": "processing",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hexadecimal": true
      }
    },
    "fe7ca36d-5135-3ed7-8f22-bfbe8448b7cc": {
      "content": "try {\n\t${1:expression}\n} catch {\n| ${2:MyException} => ${3:expression}\n}",
      "doc": "",
      "filetype": "rescript",
      "grammar": "lsp",
      "label": "Try",
      "matches": {
        "try": true
      }
    },
    "fe81db79-5554-3902-9081-1ce932641043": {
      "content": "list-style-type: upper-roman",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "list:ur": true
      }
    },
    "fe839a88-313d-387e-8ced-7abd5f60a686": {
      "content": "validate({ params, query, store }) {\n\t${1:data}\n},",
      "doc": "Validate is called every time before navigating to a new route.",
      "filetype": "nuxt",
      "grammar": "lsp",
      "label": "nuxt-validate",
      "matches": {
        "nuxt validate": true
      }
    },
    "fe871a38-ee26-36c2-8d5e-0a0283ebdd0a": {
      "content": "<menu>\n\t$1\n</menu>",
      "doc": "HTML - Defines a menu list",
      "filetype": "html",
      "grammar": "lsp",
      "label": "menu",
      "matches": {
        "menu": true
      }
    },
    "fe89dac9-9bba-30e8-972d-da4920b2c43e": {
      "content": "extern crate ${0:TARGET};",
      "doc": "",
      "filetype": "rust",
      "grammar": "snu",
      "label": "extern crate",
      "matches": {
        "ec": true
      }
    },
    "fe8dfeb2-f001-33c7-817f-ffda3bb65846": {
      "content": "name",
      "doc": "just a word",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "name",
      "matches": {
        "name": true
      }
    },
    "fe9003e9-022e-35a8-8765-2a41e6498f2f": {
      "content": "static void Main(string[] args)\n{\n\t$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "static void main",
      "matches": {
        "svm": true
      }
    },
    "fe9ddae0-acbf-350d-8a6f-7344a62691f8": {
      "content": "${1:obj}.nextUntil('${2:selector expression}'${3:, 'filter expression'})",
      "doc": "",
      "filetype": "jquery_coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "nextu": true
      }
    },
    "fe9f7f60-5219-3fb0-bc90-66cb1830ba94": {
      "content": "<style>\n\t${1:/* your styles go here */}\n</style>",
      "doc": "add styles to your svelte file",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-style-tag",
      "matches": {
        "s-style": true
      }
    },
    "fea1777c-2cda-3a04-81d8-723fcaf38ae4": {
      "content": "expect(${1:}).to.equal(${0});",
      "doc": "",
      "filetype": "javascript-mocha",
      "grammar": "snu",
      "label": "expect(...).to.equal(...)",
      "matches": {
        "expe": true
      }
    },
    "fea4fc6d-7009-3da5-ab1c-c9043def9bdf": {
      "content": "clip: rect(${1:0} ${2:0} ${3:0} ${4:0});${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cp:r": true
      }
    },
    "feacc1dc-bd90-38f1-8336-4a6e2c81babf": {
      "content": "lock (${1:this})\n{\n    $0\n}",
      "doc": "Lock statement",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Lock statement",
      "matches": {
        "lock": true
      }
    },
    "feaf40eb-4367-3bc0-91e4-3b309ee8909a": {
      "content": "do {\n\t${0:TARGET}\n} while (${1:#:condition});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "dowhile": true
      }
    },
    "feb0883b-4f09-31b0-94ef-2ed368a5d34b": {
      "content": "list-style: ${1|disc,circle,square,decimal,lower-roman,upper-roman,lower-alpha,upper-alpha,none,armenian,cjk-ideographic,georgian,lower-greek,hebrew,hiragana,hiragana-iroha,katakana,katakana-iroha,lower-latin,upper-latin|} ${2|outside,inside|};",
      "doc": "list-style: type position image",
      "filetype": "css",
      "grammar": "lsp",
      "label": "list-style",
      "matches": {
        "lis": true
      }
    },
    "feb87b52-e076-3d94-b8e3-49e6e4030552": {
      "content": "border-top-right-radius: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "bdtrrz": true
      }
    },
    "feb8b73f-3f31-338e-b43d-8eb51e7414f0": {
      "content": "afterAll(() => {\n\t$0\n});",
      "doc": "",
      "filetype": "javascript-jasmine-arrow",
      "grammar": "snu",
      "label": "after all (js)",
      "matches": {
        "afta": true
      }
    },
    "fec90fdb-e290-3a86-a02b-b7a2054ec493": {
      "content": "make(${1:type}, ${2:0})",
      "doc": "Snippet for make statement",
      "filetype": "go",
      "grammar": "lsp",
      "label": "make(...)",
      "matches": {
        "make": true
      }
    },
    "fecc187e-a3fd-312a-89f7-371f17e37b3a": {
      "content": "+ (${1:void}) ${2:func name};",
      "doc": "Create an Objc class method interface",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "Create class method interface",
      "matches": {
        "+interface": true,
        "funccd": true
      }
    },
    "fecc5483-78d2-30cf-a8b0-7732d4f02fa5": {
      "content": "{{- if .Values.artifactory.enabled -}}\n  apiVersion: v1\n  kind: ConfigMap\n  metadata:\n\tname: {{ template \"${2:chartName}.fullname\" . }}-${1:value_key}-config\n\tlabels:\n\t  app: {{ template \"${2}.name\" . }}\n\t  chart: {{ .Chart.Name }}-{{ .Chart.Version }}\n\t  heritage: {{ .Release.Service }}\n\t  release: {{ .Release.Name }}\n  data:\n\t${3:nameOfConfigFile}.conf: |\n\t  # data goes here\n{{- end -}}\n${0}",
      "doc": "",
      "filetype": "helm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "configMap_spec": true
      }
    },
    "fed2e6ea-6210-38dd-a027-be4fc7369987": {
      "content": "abs($2)",
      "doc": "float abs(float x)\nvec2 abs(vec2 x)\nvec3 abs(vec3 x)\nvec4 abs(vec4 x)\n\nThe abs function returns the absolute value of x, i.e. x when x is positive or zero and -x for negative x. The input parameter can be a floating scalar or a float vector. In case of a float vector the operation is done component-wise.",
      "filetype": "glsl",
      "grammar": "lsp",
      "label": "abs",
      "matches": {
        "abs": true
      }
    },
    "fed37edd-4864-358d-85ee-8d47cd2c2395": {
      "content": "type ${1} is ${2}\n\twith Default_Value => ${3};${0}",
      "doc": "",
      "filetype": "ada",
      "grammar": "snu",
      "label": "type with default value",
      "matches": {
        "tyd": true
      }
    },
    "fed994d3-5fbe-3ff3-ae86-78595627fab5": {
      "content": "_.entries(${object})",
      "doc": "function Foo() {\n  this.a = 1;\n  this.b = 2;\n}\n\nFoo.prototype.c = 3;\n\n_.toPairs(new Foo);\n// => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\nCreates an array of own enumerable string keyed-value pairs for `object`\nwhich can be consumed by `_.fromPairs`. If `object` is a map or set, its\nentries are returned.",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-entries",
      "matches": {
        "lodash entries": true
      }
    },
    "feda7403-2718-3b32-9354-361c5f086b6b": {
      "content": "import { Text, View } from 'react-native'\nimport React, { PureComponent } from 'react'\n\nexport default class ${1:${TM_FILENAME_BASE}} extends PureComponent {\n  render() {\n    return (\n      <View>\n        <Text>${1:first}</Text>\n      </View>\n    )\n  }\n}",
      "doc": "",
      "filetype": "generated",
      "grammar": "lsp",
      "label": "reactNativePureComponent",
      "matches": {
        "rnpc": true
      }
    },
    "fee0a5e5-845c-3d99-831e-693e32d232b2": {
      "content": "<li class=\"${1}\">${0}</li>",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "li.": true
      }
    },
    "fee63c88-af9d-354b-956d-653ba9d6ddfd": {
      "content": "for (let ${1:key} of ${2:array}) {\n\t${0}\n}",
      "doc": "for of loop (ES6)",
      "filetype": "base",
      "grammar": "lsp",
      "label": "for-of-loop-es6-",
      "matches": {
        "base for of": true
      }
    },
    "fef199be-2e40-3798-a6da-04580dda4aca": {
      "content": "div(ng-repeat='${1} in ${2}' track by $index)",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "repi": true
      }
    },
    "fef2d13c-c3c4-369f-86d6-766f448107b2": {
      "content": "file!()",
      "doc": "file!()",
      "filetype": "rust",
      "grammar": "lsp",
      "label": "file",
      "matches": {
        "file": true
      }
    },
    "fef32b60-d482-3514-be01-bbe9516caccf": {
      "content": "import (\n\t\"${1:package}\"\n)",
      "doc": "",
      "filetype": "go",
      "grammar": "snu",
      "label": "Import declaration",
      "matches": {
        "/^import/": true
      }
    },
    "fef3feba-7eaf-3ac3-aed1-ea4fe109cca2": {
      "content": "#if ${1:FOO}\n\t${0:${VISUAL}}\n#endif",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "",
      "matches": {
        "#if": true
      }
    },
    "fef5981d-14ca-3984-bd51-fb12c4883d29": {
      "content": "Import library    Dialogs\nPause execution",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Pause test execution",
      "matches": {
        "pause": true
      }
    },
    "fef5d5b5-a0e1-30a0-8f3c-a2c121dcc878": {
      "content": "<input type=\"color\" name=\"${1}\" id=\"${2:$1}\" value=\"${3}\">",
      "doc": "",
      "filetype": "html",
      "grammar": "snu",
      "label": "",
      "matches": {
        "input:color": true
      }
    },
    "fef801bb-1869-3596-a9fe-95ebba1e5fcb": {
      "content": "v-text=\"${1:msg}\"",
      "doc": "Expects: string. Updates the element’s textContent.",
      "filetype": "vue",
      "grammar": "lsp",
      "label": "vue-v-text",
      "matches": {
        "vtext": true,
        "vue v-text": true
      }
    },
    "fefc977b-dcb9-354f-8daa-18d0ec82435d": {
      "content": "export const ${1:member} = ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "module export const",
      "matches": {
        "ec": true
      }
    },
    "fefdc949-5496-39af-ae90-b2d44332c6be": {
      "content": "import React, { memo } from 'react';\n\nconst ${1:${TM_FILENAME_BASE}} = memo(() => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t);\n});\n\nexport default ${1:${TM_FILENAME_BASE}};",
      "doc": "Creates a memoized stateless React component without PropTypes and ES6 module system",
      "filetype": "snippets",
      "grammar": "lsp",
      "label": "reactMemo",
      "matches": {
        "rscm": true
      }
    },
    "fefeaa74-f9f0-367a-b707-a632f11e0324": {
      "content": "import { connect } from 'react-redux'",
      "doc": "Import connect from Redux",
      "filetype": "redux",
      "grammar": "lsp",
      "label": "redux-import-connect",
      "matches": {
        "redux import connect": true
      }
    },
    "ff040904-910c-3f4e-af6f-b82658e9c53f": {
      "content": "const ${1} = styled.${2}`\n  ${3}\n`;",
      "doc": "Styled-Component",
      "filetype": "styled-components",
      "grammar": "lsp",
      "label": "styled-components-styled-component",
      "matches": {
        "sc": true,
        "styled-components component": true
      }
    },
    "ff0bb4a9-4ad2-35b2-91d9-a503b859d6b5": {
      "content": "white-space: pre;",
      "doc": "",
      "filetype": "css",
      "grammar": "lsp",
      "label": "white-space: pre",
      "matches": {
        "wsp": true
      }
    },
    "ff0cb533-7b87-35e9-a314-fd7ba2d25d30": {
      "content": "min-width: ${1};${0}",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "miw": true
      }
    },
    "ff0e4832-feee-3d4b-ab6e-7746736de629": {
      "content": "{\n\t\"type\": \"article\",\n\t\"id\": \"${1}\",\n\t\"label\": \"${2}\",\n\t\"info\": \"${0}\"\n}",
      "doc": "",
      "filetype": "liquid",
      "grammar": "snu",
      "label": "",
      "matches": {
        "_article": true
      }
    },
    "ff119ed8-fb98-3dd6-a530-af49b3c610bb": {
      "content": "$this->assertNotContains(${1:$needle}, ${2:$haystack});",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "$this->assertNotContains($needle, $haystack)",
      "matches": {
        "asncon": true
      }
    },
    "ff14deda-ee6e-39eb-9e18-0e0e9f64c216": {
      "content": "describe \"${1}\" [ $0 ]",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "desc": true
      }
    },
    "ff185711-b0db-395f-a5e4-450f9fcdbceb": {
      "content": "for ${1:#:name} in ${2:#:array}\n  ${0:TARGET}",
      "doc": "",
      "filetype": "coffee",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fora": true
      }
    },
    "ff1db918-99d4-38fa-b1ad-de43c996dc61": {
      "content": "${1:FIELDNAME} = forms.DecimalField($2, required=${3:False})",
      "doc": "DecimalField (fdecimal)",
      "filetype": "forms",
      "grammar": "lsp",
      "label": "fdecimal",
      "matches": {
        "fdecimal": true
      }
    },
    "ff220651-c6e6-38ad-be0b-221e0ddcad6d": {
      "content": "must_be_within_epsilon ${1:0.1}, ${2:0.1}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mbwe": true
      }
    },
    "ff2c6128-c6c1-3ef6-8c16-e790387cfe24": {
      "content": "for (int ${1:i} = ${2:length} - 1; ${1:i} >= 0 ; ${1:i}--)\n{\n    $0\n}",
      "doc": "Reverse for loop",
      "filetype": "csharp",
      "grammar": "lsp",
      "label": "Reverse for loop",
      "matches": {
        "forr": true
      }
    },
    "ff2c6cea-f1e1-3def-98a0-970f378fd421": {
      "content": "from pudb.remote import set_trace\nset_trace()",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pudbr": true
      }
    },
    "ff3efd05-6dbd-31cc-be5f-706c8a3accda": {
      "content": "_ = println(${1})",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "p in for",
      "matches": {
        "pf": true
      }
    },
    "ff41be21-8cb6-3102-97eb-aea73fb468f7": {
      "content": "internal ${1:int} ${2} { get; set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "p&": true
      }
    },
    "ff4296f4-80b2-307d-957b-4cd2cec10e1e": {
      "content": "#include <$0>",
      "doc": "Code snippet for #include < >",
      "filetype": "objc",
      "grammar": "lsp",
      "label": "#inc<",
      "matches": {
        "#inc<": true
      }
    },
    "ff547843-5754-3b79-a439-c02b5efbb7c6": {
      "content": "after_touch :${0:method}",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "mat": true
      }
    },
    "ff5a9055-043f-32b6-9d4b-67a9b380dfb6": {
      "content": "property? ${0:name}",
      "doc": "",
      "filetype": "crystal",
      "grammar": "snu",
      "label": "",
      "matches": {
        "rw?": true
      }
    },
    "ff5f85c5-ba84-354b-b44c-7280ad508aa1": {
      "content": "namespace ${1:MyNamespace}\n{\n\t${VISUAL}$0\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "namespace",
      "matches": {
        "namespace": true
      }
    },
    "ff6095b7-44e1-349a-97f0-4490a913a70f": {
      "content": "place-items: ${0}",
      "doc": "",
      "filetype": "sass",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pi": true
      }
    },
    "ff632678-9905-3e93-b7dd-75a86f56c647": {
      "content": "@${1:variable_name} ||= ${0:cached_value}",
      "doc": "",
      "filetype": "ruby",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ivc": true
      }
    },
    "ff684d3b-b7df-3368-9e16-bcc9fc36a4c1": {
      "content": "| remove_first: '${1:string}'",
      "doc": "String filter: remove first",
      "filetype": "liquid",
      "grammar": "lsp",
      "label": "Filter remove first",
      "matches": {
        "remove_first": true
      }
    },
    "ff687187-95f0-34ff-9f7a-dcb6367ea16f": {
      "content": "&#x2326;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "delete": true
      }
    },
    "ff68e3cc-b598-39cd-9e8b-0d401a5d2393": {
      "content": "CARDS=${2:500},${3|CANCEL,DUMP,WARNING|}${4|\\,|}",
      "doc": "CARDS Parameter",
      "filetype": "vscode_cobol_jcl",
      "grammar": "lsp",
      "label": "Job/CARDS",
      "matches": {
        "CARDS": true
      }
    },
    "ff6f8825-c73c-33bf-b40e-9f53f9b523c8": {
      "content": "exports.${1:member} = ${2:value}",
      "doc": "",
      "filetype": "javascript",
      "grammar": "lsp",
      "label": "exports.member",
      "matches": {
        "em": true
      }
    },
    "ff720c38-0685-34ac-a42d-e868d783ac73": {
      "content": "it { should have_db_index :${0} }",
      "doc": "",
      "filetype": "rails",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ishi": true
      }
    },
    "ff76e5d5-3f4b-3765-aab5-b0106eed72fe": {
      "content": "display table-column",
      "doc": "",
      "filetype": "stylus",
      "grammar": "snu",
      "label": "",
      "matches": {
        "d:tbcl": true
      }
    },
    "ff799725-98b9-38bb-8e29-567a2b41117c": {
      "content": "{% include \"${1:template}\"${2: with ${3:params} }%}$0",
      "doc": "include w/ params",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "incp",
      "matches": {
        "incp": true
      }
    },
    "ff79cfc8-4e6a-3cc5-8d50-2eb3813c91ae": {
      "content": "else if (${1:#:condition}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "else () {}",
      "matches": {
        "elseif": true
      }
    },
    "ff7ad917-a5c6-32a6-bd7e-f6cc3eedf458": {
      "content": ".ge.",
      "doc": "Greater or Equal",
      "filetype": "fortran",
      "grammar": "lsp",
      "label": "ge",
      "matches": {
        "ge": true
      }
    },
    "ff7da484-3132-3bf8-848a-06ee20d228eb": {
      "content": "Element Should Be Visible    ${${1:locator}}    ${2:${optional message}}",
      "doc": "",
      "filetype": "robot",
      "grammar": "snu",
      "label": "Element Should Be Visible",
      "matches": {
        "esbv": true
      }
    },
    "ff7e7a38-6be7-3352-959e-b77239b8d73a": {
      "content": "include_once '${1:file}';",
      "doc": "",
      "filetype": "php",
      "grammar": "snu",
      "label": "",
      "matches": {
        "inc1": true
      }
    },
    "ff925b97-28f0-3391-b18c-9e975d2285d7": {
      "content": "console.trace(${0:label});",
      "doc": "",
      "filetype": "javascript",
      "grammar": "snu",
      "label": "console.trace",
      "matches": {
        "ct": true
      }
    },
    "ff9d08a1-32b2-34a5-acbd-91d33593f2e5": {
      "content": "fixed (${1:#:type}* ${2:#:var} = ${3:#:adress}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "fixed () {}",
      "matches": {
        "fixed": true
      }
    },
    "ffb0baa1-b159-3a69-8ead-6424a7415fff": {
      "content": "clear: both;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "cl:b": true
      }
    },
    "ffb37a8b-fe64-369a-a9e5-316cf8d19054": {
      "content": "def main(args: Array[String]):${1:T} = ${0:}",
      "doc": "",
      "filetype": "scala",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "ffb49aa7-6eab-30b8-9199-01b194f31b55": {
      "content": "<svelte:options ${1|immutable,accessors,namespace,tag|}={${2:value}}/>",
      "doc": "svelte:options",
      "filetype": "svelte",
      "grammar": "lsp",
      "label": "svelte-options",
      "matches": {
        "s-options": true
      }
    },
    "ffb776d5-bfce-3404-a546-c066be31d655": {
      "content": "${1:void} ${2:#:func_name}(${3:void}) {\n    ${0:TARGET}\n}",
      "doc": "",
      "filetype": "c",
      "grammar": "snu",
      "label": "func() {}",
      "matches": {
        "func": true,
        "function": true
      }
    },
    "ffbb5958-9401-3415-8b86-7140a291f96e": {
      "content": "LOGGER.debug(${0:msg})",
      "doc": "",
      "filetype": "python",
      "grammar": "snu",
      "label": "",
      "matches": {
        "lg": true
      }
    },
    "ffc12378-7213-3d7c-ad30-8e1f9e388398": {
      "content": "{% if ${1} %}\n\t${0}\n{% endif %}",
      "doc": "",
      "filetype": "twig",
      "grammar": "snu",
      "label": "twig if",
      "matches": {
        "if": true
      }
    },
    "ffc20072-b46f-356f-a0fc-74fc52c2579e": {
      "content": "align-content: flex-end;",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ac:fe": true
      }
    },
    "ffc87d29-7b30-3d69-9d76-4d5e7875e4a8": {
      "content": "_.flatMap(${collection}, ${iteratee})",
      "doc": "function duplicate(n) {\n  return [n, n];\n}\n\n_.flatMap([1, 2], duplicate);\n// => [1, 1, 2, 2]\n\nCreates a flattened array of values by running each element in `collection`\nthru `iteratee` and flattening the mapped results. The iteratee is invoked\nwith three arguments: (value, index|key, collection).",
      "filetype": "lodash",
      "grammar": "lsp",
      "label": "lodash-flatmap",
      "matches": {
        "lodash flatmap": true
      }
    },
    "ffdc813c-100b-3d12-acad-836f6fcb9d9a": {
      "content": "reinterpret_cast<${1}>(${2})${0}",
      "doc": "",
      "filetype": "cpp",
      "grammar": "snu",
      "label": "reinterpret_cast<>()",
      "matches": {
        "reinterpret_cast": true
      }
    },
    "ffdd4ecc-1003-3c2b-9ebe-4c9096814d8f": {
      "content": "&#x2191;",
      "doc": "",
      "filetype": "slim",
      "grammar": "snu",
      "label": "",
      "matches": {
        "up": true
      }
    },
    "ffe606cd-ac39-3f0c-9fa8-e6c08a9cc34a": {
      "content": "::: {.hypothesis #${1:label} name=\"${2:hypothesis name}\"}\n${TM_SELECTED_TEXT}$0\n:::",
      "doc": "Insert bookdown hypothesis",
      "filetype": "rmarkdown",
      "grammar": "lsp",
      "label": "Insert bookdown hypothesis",
      "matches": {
        "hypothesis": true
      }
    },
    "ffea95c1-3b7d-3190-bc5c-ffd165463413": {
      "content": "abstract ${0}",
      "doc": "",
      "filetype": "java",
      "grammar": "snu",
      "label": "",
      "matches": {
        "ab": true
      }
    },
    "ffec9219-c8c7-33ca-b34f-23cb9a07e812": {
      "content": "${1:fn} : ${2:a} -> ${3:a}\n$1 ${4} =\n\t${0}",
      "doc": "",
      "filetype": "elm",
      "grammar": "snu",
      "label": "",
      "matches": {
        "fn1": true
      }
    },
    "ffed8248-8283-311d-bfe4-90679d86aeda": {
      "content": "div(ng-hide='${1}')",
      "doc": "",
      "filetype": "jade",
      "grammar": "snu",
      "label": "",
      "matches": {
        "hide": true
      }
    },
    "fff48e45-6f0f-3303-ac19-407e83d06a8f": {
      "content": "onUnmounted(() => {${1}})",
      "doc": "(destroyed) Vue onUnmounted Lifecycle hook",
      "filetype": "vue-script",
      "grammar": "lsp",
      "label": "Vue Lifecycle Hooks - onUnmounted",
      "matches": {
        "v3onunmounted": true
      }
    },
    "fff493ad-b6b1-3493-8cb4-6d541469f9e0": {
      "content": "internal bool ${1} { get; protected set; }",
      "doc": "",
      "filetype": "cs",
      "grammar": "snu",
      "label": "",
      "matches": {
        "pb&|": true
      }
    },
    "fff680a9-40de-3ce4-a5ef-e355a9402e04": {
      "content": "margin: ${1:20px};$0",
      "doc": "",
      "filetype": "css",
      "grammar": "snu",
      "label": "margin:   all (margin)",
      "matches": {
        "margin": true
      }
    },
    "fff6fa52-434f-30e7-92ec-4acae3f0aeb8": {
      "content": "@JvmStatic\nfun main(args: Array<String>) {\n\t${0}\n}",
      "doc": "",
      "filetype": "kotlin",
      "grammar": "snu",
      "label": "",
      "matches": {
        "main": true
      }
    },
    "fffc8201-50b1-37bc-b025-d464da8202f2": {
      "content": "{% endverbatim %}$0",
      "doc": "endverbatim",
      "filetype": "twig",
      "grammar": "lsp",
      "label": "endverbatim",
      "matches": {
        "endverbatim": true
      }
    }
  }
}